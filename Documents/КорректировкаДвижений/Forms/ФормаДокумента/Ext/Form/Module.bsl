///////////////////////////////////////////////////////////////////////////////
// Модуль основной формы документа "Корректировка"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	
	ЭтоКорректировка = (Объект.ХозОперация=Справочники.ХозОперации.КорректировкаДвижений);
	Если (ЭтоКорректировка И НЕ ПравоДоступа("Изменение", Метаданные.Документы.КорректировкаДвижений)) ИЛИ (НЕ ЭтоКорректировка И НЕ ПравоДоступа("Изменение", Метаданные.Документы.КорректировкаДвижений)) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Объект.ХозОперация = Справочники.ХозОперации.КорректировкаДвижений Тогда
		Для каждого Движение Из Объект.ДвиженияКорректировки Цикл
			Если Движение.Использование Тогда
				ПоказатьТаблицуРегистраНаСтранице(Движение.ИмяРегистра);
			КонецЕсли;
		КонецЦикла;
	Иначе
		УстановитьПривилегированныйРежим(Истина);
		ЗаполнитьДвиженияПоДокументуОснованию();
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// Настроим отображение командной панели
	Для каждого Страница Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		Если Страница.Имя = "СтраницаПустаяСтраница" ИЛИ Страница.Имя = "СтраницаДвиженияКорректировки" Тогда
			Продолжить;
		КонецЕсли;
		Для каждого ТаблицаДвижений Из Страница.ПодчиненныеЭлементы Цикл
			ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, ТаблицаДвижений.Имя);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия=Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения	
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("КорректировкаДвижений", ПараметрыЗаписи.РежимЗаписи, Ложь);
		
	Отказ = Отказ Или РаботаСФормойКлиент.НачатьПроверкуПодразделенияДокументаИПользователя(
		Объект.ПодразделениеКомпании,
		Новый ОписаниеОповещения(
			"ПроверкаПодразделенияДокументаИПользователяЗавершение",
			ЭтотОбъект,
			Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)
		)
	);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормойКлиент.ОповеститьОЗаписиДокумента(Объект.Ссылка);
	РаботаСФормойКлиент.ОбновитьПодчиненныеСчета(Объект.Ссылка, Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.КорректировкаДвижений.ДатаПриИзменении(Объект, ПараметрыДействия);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.КорректировкаДвижений.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	// Настроим отображение страниц
	Если Объект.ХозОперация = Справочники.ХозОперации.КорректировкаДвижений Тогда
		Для каждого Движение Из Объект.ДвиженияКорректировки Цикл
			Если Движение.Использование Тогда
				ПоказатьТаблицуРегистраНаСтранице(Движение.ИмяРегистра);
			Иначе
				УдалитьСтраницуРегистра("Страница" + Движение.ИмяРегистра);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для каждого Движение Из Объект.ДвиженияКорректировки Цикл
			УдалитьСтраницуРегистра("Страница" + Движение.ИмяРегистра);
		КонецЦикла;
		ЗаполнитьДвиженияПоДокументуОснованию();
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	// Настроим отображение командной панели
	Для каждого Страница Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		Если Страница.Имя = "СтраницаПустаяСтраница" ИЛИ Страница.Имя = "СтраницаДвиженияКорректировки" Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого ТаблицаДвижений Из Страница.ПодчиненныеЭлементы Цикл
			ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, ТаблицаДвижений.Имя);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Процедура ДокументОснованиеПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.КорректировкаДвижений.ДокументОснованиеПриИзменении(Объект, ПараметрыДействия);
	// отобразим сторно движения
	Если Объект.ХозОперация = Справочники.ХозОперации.Сторно Тогда
		Для каждого Движение Из Объект.ДвиженияКорректировки Цикл
			УдалитьСтраницуРегистра("Страница" + Движение.ИмяРегистра);
		КонецЦикла;
		ЗаполнитьДвиженияПоДокументуОснованию();
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДокументОснованиеПриИзмененииНаСервере(ПараметрыДействия);
	// Настроим отображение командной панели
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.ХозОперации.Сторно") Тогда
		Для каждого Страница Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
			Если Страница.Имя = "СтраницаПустаяСтраница" ИЛИ Страница.Имя = "СтраницаДвиженияКорректировки" Тогда
				Продолжить;
			КонецЕсли;
			
			Для каждого ТаблицаДвижений Из Страница.ПодчиненныеЭлементы Цикл
				ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, ТаблицаДвижений.Имя);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ДокументОснованиеОбработкаВыбораНаСервере(ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ Метаданные.Документы.КорректировкаДвижений.ВводитсяНаОсновании.Содержит(ВыбранноеЗначение.Метаданные()) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(НСтр("ru='Данный документ не может быть сторнирован.'"))
		);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ ТипЗнч(ВыбранноеЗначение) = Тип("Тип") И Объект.ХозОперация = ПредопределенноеЗначение("Справочник.ХозОперации.Сторно") Тогда
		ДокументОснованиеОбработкаВыбораНаСервере(ВыбранноеЗначение, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДвиженияКорректировки

#Область ОбработчикиСобытийПолейТаблицыФормыДвиженияКорректировки

&НаСервере
Процедура ДвиженияКорректировкиИспользованиеПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	// Получим данные текущей строки табличной части
	ТекущиеДанные = Объект.ДвиженияКорректировки.НайтиПоИдентификатору(Элементы.ДвиженияКорректировки.ТекущаяСтрока);
	Если ТекущиеДанные.Использование Тогда
		ПоказатьТаблицуРегистраНаСтранице(ТекущиеДанные.ИмяРегистра);
	Иначе
		Объект.Движения[ТекущиеДанные.ИмяРегистра].Очистить();
		УдалитьСтраницуРегистра("Страница" + ТекущиеДанные.ИмяРегистра);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДвиженияКорректировкиИспользованиеПриИзменении(Элемент)
	
	ДвиженияКорректировкиИспользованиеПриИзмененииНаСервере();
	// Настроим отображение командной панели
	Для каждого Страница Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		Если Страница.Имя = "СтраницаПустаяСтраница" ИЛИ Страница.Имя = "СтраницаДвиженияКорректировки" Тогда
			Продолжить;
		КонецЕсли;
		Для каждого ТаблицаДвижений Из Страница.ПодчиненныеЭлементы Цикл
			ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, ТаблицаДвижений.Имя);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Процедура ТаблицаДвиженийПриНачалеРедактирования(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ Элемент.ПодчиненныеЭлементы.Найти(Элемент.Имя+"ПодразделениеКомпании")=Неопределено Тогда
		Если НЕ Элемент.ТекущиеДанные = Неопределено И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПодразделениеКомпании) Тогда
			Элемент.ТекущиеДанные.ПодразделениеКомпании = Объект.ПодразделениеКомпании;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Элемент.ПодчиненныеЭлементы.Найти(Элемент.Имя+"Организация")=Неопределено Тогда
		Если НЕ Элемент.ТекущиеДанные = Неопределено И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Организация) Тогда
			Элемент.ТекущиеДанные.Организация = Объект.Организация;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользованиеИзменениеФлажка(Команда)
	
	УправлениеДиалогомКлиент.ГрупповоеИзменениеПоляФлажка(Объект.ДвиженияКорректировки, "Использование", Команда);
	
	Для каждого Движение Из Объект.ДвиженияКорректировки Цикл
		Если Движение.Использование Тогда
			ПоказатьТаблицуРегистраНаСтранице(Движение.ИмяРегистра);
		Иначе
			Объект.Движения[Движение.ИмяРегистра].Очистить();
			УдалитьСтраницуРегистра("Страница" + Движение.ИмяРегистра);
		КонецЕсли;
	КонецЦикла;
	// Настроим отображение командной панели
	Для каждого Страница Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		Если Страница.Имя = "СтраницаПустаяСтраница" ИЛИ Страница.Имя = "СтраницаДвиженияКорректировки" Тогда
			Продолжить;
		КонецЕсли;
		Для каждого ТаблицаДвижений Из Страница.ПодчиненныеЭлементы Цикл
			ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, ТаблицаДвижений.Имя);
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьПоДокументуНаСервере()
	
	Для каждого Движение Из Метаданные.Документы.КорректировкаДвижений.Движения Цикл
		Объект.Движения[Движение.Имя].Очистить();
		УдалитьСтраницуРегистра("Страница" + Движение.Имя);
	КонецЦикла;
	
	Для каждого Движение Из Объект.ДвиженияКорректировки Цикл
		Движение.Использование = Ложь;
	КонецЦикла;
	// отобразим движения по документу
	ЗаполнитьДвиженияПоДокументуОснованию();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДокументу(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбран документ основание для заполнения.'"));
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоДокументуНаСервере();
	// Настроим отображение командной панели
	Для каждого Страница Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		Если Страница.Имя = "СтраницаПустаяСтраница" ИЛИ Страница.Имя = "СтраницаДвиженияКорректировки" Тогда
			Продолжить;
		КонецЕсли;
		Для каждого ТаблицаДвижений Из Страница.ПодчиненныеЭлементы Цикл
			ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, ТаблицаДвижений.Имя);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПоказатьТаблицуРегистраНаСтранице(ИмяРегистра)

	Если НЕ Элементы.Найти("Страница" + ИмяРегистра) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Метаданные.РегистрыНакопления.Найти(ИмяРегистра) <> Неопределено Тогда
		СтраницаРегистра = Элементы.Страницы;
		ПредставлениеРегистра = Метаданные.РегистрыНакопления[ИмяРегистра].Синоним;
		
		Регистр = Метаданные.РегистрыНакопления[ИмяРегистра];
	ИначеЕсли Метаданные.РегистрыСведений.Найти(ИмяРегистра) <> Неопределено Тогда
		СтраницаРегистра = Элементы.Страницы;
		ПредставлениеРегистра = Метаданные.РегистрыСведений[ИмяРегистра].Синоним;
		
		Регистр = Метаданные.РегистрыСведений[ИмяРегистра];
	Иначе
		Возврат;
	КонецЕсли;
	
	СтруктураРегистра = Новый Структура;
	СтруктураРегистра.Вставить("Период");
	СтруктураРегистра.Вставить("НомерСтроки");
	СтруктураРегистра.Вставить("Активность");
	СтруктураРегистра.Вставить("ВидДвижения");
	
	Для каждого СтандартныйРеквизит Из Регистр.СтандартныеРеквизиты Цикл
		Если СтруктураРегистра.Свойство(СтандартныйРеквизит.Имя) Тогда
			СтруктураРегистра[СтандартныйРеквизит.Имя] = СтандартныйРеквизит.Синоним;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Измерение Из Регистр.Измерения Цикл
		СтруктураРегистра.Вставить(Измерение.Имя, Измерение.Синоним);
	КонецЦикла;
	
	Для каждого Ресурс Из Регистр.Ресурсы Цикл
		СтруктураРегистра.Вставить(Ресурс.Имя, Ресурс.Синоним);
	КонецЦикла;
	
	Для каждого Реквизит Из Регистр.Реквизиты Цикл
		СтруктураРегистра.Вставить(Реквизит.Имя, Реквизит.Синоним);
	КонецЦикла;
		
	СтраницаДляРегистра = СоздатьСтраницу("Страница" + ИмяРегистра, ПредставлениеРегистра, СтраницаРегистра,ВидГруппыФормы.Страница);
	СоздатьТаблицуРегистра(ИмяРегистра, СтруктураРегистра, СтраницаДляРегистра);
	
КонецПроцедуры

&НаСервере
Функция СоздатьСтраницу(ИмяСтраницы, Заголовок, Родитель, ВидГруппыФормы)
	
	НовыйЭлемент = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Родитель);
	НовыйЭлемент.Вид                      = ВидГруппыФормы;
	НовыйЭлемент.Заголовок                = Заголовок;
	НовыйЭлемент.РастягиватьПоВертикали   = Истина;
	НовыйЭлемент.РастягиватьПоГоризонтали = Истина;
	НовыйЭлемент.ЦветФона                 = ЦветаСтиля.ЦветОсновнойПанелиФормы;
	
	Возврат НовыйЭлемент;
	
КонецФункции 

&НаСервере
Процедура УдалитьСтраницуРегистра(ИмяСтраницы)
	
	Если НЕ Элементы.Найти(ИмяСтраницы) = Неопределено Тогда
		Элементы.Удалить(Элементы.Найти(ИмяСтраницы));
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура СоздатьТаблицуРегистра(ИмяРегистра, Колонки, Родитель)
	
	ТаблицаФормы = Элементы.Добавить("ТаблицаДвижений" + ИмяРегистра, Тип("ТаблицаФормы"), Родитель);
	ТаблицаФормы.ПутьКДанным      = "Объект.Движения." + ИмяРегистра;
	Родитель.ПутьКДаннымЗаголовка = ТаблицаФормы.ПутьКДанным + ".КоличествоСтрок";
	Если Объект.ХозОперация = Справочники.ХозОперации.Сторно Тогда
		ТаблицаФормы.ИзменятьСоставСтрок = Ложь;
	КонецЕсли;
	
	Для Каждого Колонка Из Колонки Цикл
		Если Колонка.Значение <> Неопределено И НЕ (Колонка.Ключ = "Период" ИЛИ Колонка.Ключ = "НомерСтроки")Тогда
			
			ПолеФормы = Элементы.Добавить(ТаблицаФормы.Имя + Колонка.Ключ, Тип("ПолеФормы"), ТаблицаФормы);
			ПолеФормы.ПутьКДанным = ТаблицаФормы.ПутьКДанным + "." + Колонка.Ключ;
			ПолеФормы.Заголовок   = Колонка.Значение;
			Если Колонка.Ключ = "Активность" Тогда
				ПолеФормы.Вид = ВидПоляФормы.ПолеФлажка;
				ПолеФормы.ТолькоПросмотр = Истина;
			Иначе
				ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
			КонецЕсли;
			
			Если Объект.ХозОперация = Справочники.ХозОперации.Сторно Тогда
				ПолеФормы.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.ХозОперация = Справочники.ХозОперации.КорректировкаДвижений И (Колонки.Свойство("ПодразделениеКомпании") ИЛИ Колонки.Свойство("Организация")) Тогда
		ТаблицаФормы.УстановитьДействие("ПриНачалеРедактирования","ТаблицаДвиженийПриНачалеРедактирования");
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьДвиженияПоДокументуОснованию()
	
	ЕстьДвиженияДляКорректировки = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		УдалитьСтраницыРегистров();
		Возврат;
	КонецЕсли;
	
	ДвиженияДокументаОснования = Объект.ДокументОснование.ПолучитьОбъект().Движения;
	Для Каждого ТекНаборЗаписей Из ДвиженияДокументаОснования Цикл
		ТекНаборЗаписей.Прочитать();
		Если ТекНаборЗаписей.Количество() <> 0 Тогда
			ЕстьДвиженияДляКорректировки = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЕстьДвиженияДляКорректировки Тогда
		УстановитьСтраницыРегистровДляДокументаБезДвижений();
		Возврат;
	КонецЕсли;
	
	ДоступныеДвижения = Новый Массив;
	Для каждого Движение Из Метаданные.Документы.КорректировкаДвижений.Движения Цикл
		Если Объект.Движения[Движение.Имя].Количество() > 0 Тогда
			ДоступныеДвижения.Добавить(Движение);
		КонецЕсли;
	КонецЦикла;
	
	Если ДоступныеДвижения.Количество() = 0 Тогда
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДоступныеДвижения = ДокументОбъект.ЗаполнитьДвиженияПоДокументуОснованию(Модифицированность);
		ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
	КонецЕсли;
	
	Если ДоступныеДвижения.Количество() > 0 Тогда
		Элементы.СтраницаПустаяСтраница.Видимость = Ложь;
		Для Каждого Движение Из ДоступныеДвижения Цикл
			ПоказатьТаблицуРегистраНаСтранице(Движение.Имя);
		КонецЦикла;
	Иначе
		УстановитьСтраницыРегистровДляДокументаБезДвижений();
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьСтраницыРегистровДляДокументаБезДвижений()
	
	Элементы.СтраницаПустаяСтраница.Заголовок = НСтр("ru = 'У выбранного документа нет движений'");
	Элементы.СтраницаПустаяСтраница.Видимость = Истина;
	УдалитьСтраницыРегистров();
	
КонецПроцедуры 

&НаСервере
Процедура УдалитьСтраницыРегистров()

	Для каждого Страница Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		Если НЕ (Страница.Имя = "СтраницаПустаяСтраница" ИЛИ Страница.Имя = "СтраницаДвиженияКорректировки" ИЛИ Страница.Имя = "СтраницаДополнительно") Тогда
			УдалитьСтраницуРегистра(Страница.Имя);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры 

//@skip-warning
&НаКлиенте
Процедура ПроверкаПодразделенияДокументаИПользователяЗавершение(Контекст) Экспорт
	
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиАльфаАвто

// Ядро
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры
// Конец Ядро

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомДокументаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	// Установим видимость в соответствии с Хозоперации.
	ЭтоКорректировка = (Объект.ХозОперация=Справочники.ХозОперации.КорректировкаДвижений);
	Элементы.СтраницаПустаяСтраница.Видимость = НЕ ЭтоКорректировка И НЕ ЕстьДвиженияДляКорректировки;
	Элементы.СтраницаДвиженияКорректировки.Видимость = ЭтоКорректировка;
	Элементы.ПараметрыДокумента.ТолькоПросмотр = НЕ ЭтоКорректировка;
	
	Если НЕ ЭтоКорректировка Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
			Элементы.СтраницаПустаяСтраница.Заголовок = НСтр("ru = 'Не выбран документ-основание'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если НЕ УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	                                                                                                                
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, 	РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект,			РезультатОповещения);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти