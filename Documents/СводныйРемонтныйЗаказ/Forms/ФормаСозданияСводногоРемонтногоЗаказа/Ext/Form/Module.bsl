///////////////////////////////////////////////////////////////////////////////
// Модуль формы заполнения реквизитов документа документа "Поступление товаров"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаявкаНаРемонт = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ЗаявкаНаРемонт", Неопределено);
	СозданиеЗаказНаряда = ПолучитьЗначениеПараметраСтруктуры(Параметры, "КомандаЗаказНаряд", Ложь);
	
	Если НЕ ЗначениеЗаполнено(ЗаявкаНаРемонт) ИЛИ ТипЗнч(ЗаявкаНаРемонт) <> Тип("ДокументСсылка.ЗаявкаНаРемонт") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если Не СозданиеЗаказНаряда Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаказНарядПричиныОбращения.ИдентификаторПричиныОбращения
		|ПОМЕСТИТЬ ТаблицаСуществующихПричин
		|ИЗ
		|	Документ.ЗаказНаряд КАК ТаблицаЗаказНаряд
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СводныйРемонтныйЗаказ КАК ТаблицаСводныйРемонтныйЗаказ
		|		ПО (ТаблицаСводныйРемонтныйЗаказ.ДокументОснование = &ДокументЗаявкаНаРемонт)
		|			И ТаблицаЗаказНаряд.СводныйРемонтныйЗаказ = ТаблицаСводныйРемонтныйЗаказ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаряд.ПричиныОбращения КАК ЗаказНарядПричиныОбращения
		|		ПО ТаблицаЗаказНаряд.Ссылка = ЗаказНарядПричиныОбращения.Ссылка
		|ГДЕ
		|	ТаблицаСводныйРемонтныйЗаказ.ДокументОснование = &ДокументЗаявкаНаРемонт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаПричиныОбращения.ПричинаОбращения КАК ПричинаОбращения,
		|	ТаблицаПричиныОбращения.ВидРемонтаПричиныОбращения КАК ВидРемонта,
		|	ТаблицаПричиныОбращения.ПричинаОбращенияСодержание КАК Содержание
		|ИЗ
		|	Документ.ЗаявкаНаРемонт.ПричиныОбращения КАК ТаблицаПричиныОбращения
		|ГДЕ
		|	ТаблицаПричиныОбращения.Ссылка = &ДокументЗаявкаНаРемонт
		|	И НЕ ТаблицаПричиныОбращения.ИдентификаторПричиныОбращения В
		|				(ВЫБРАТЬ
		|					ТаблицаСуществующихПричин.ИдентификаторПричиныОбращения
		|				ИЗ
		|					ТаблицаСуществующихПричин)";
		Запрос.УстановитьПараметр("ДокументЗаявкаНаРемонт", ЗаявкаНаРемонт);
		
		ТаблицаПричиныОбращения = Запрос.Выполнить().Выгрузить();
		
		Если ТаблицаПричиныОбращения.Количество() = 0 Тогда
			НайтиСводныйРемонтныйЗаказДляОткрытия();
			Если ЗначениеЗаполнено(СводныйРемонтныйЗаказДляОткрытия) Тогда
				Возврат;
			Иначе
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	VINАвтомобиля = ЗаявкаНаРемонт.VIN;
	
	// заполнение телефона
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,ЗаявкаНаРемонт);
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.ВидРемонта) Тогда
		БесплатныйРемонт = (ЗаявкаНаРемонт.ВидРемонта.ТипРемонта = Перечисления.ТипыРемонта.Бесплатный);
	Иначе
		БесплатныйРемонт = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.ГосНомер) Тогда
		ГосНомерЗнР = ЗаявкаНаРемонт.ГосНомер;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.VIN) Тогда
		ГосНомерЗнР = ЗаявкаНаРемонт.VIN;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.Автомобиль) Тогда
		АвтомобильЗнР = Строка(ЗаявкаНаРемонт.Автомобиль);
		Автомобиль = ЗаявкаНаРемонт.Автомобиль;
	Иначе
		АвтомобильЗнР = Строка(ЗаявкаНаРемонт.Модель);
		ПоискАвтомобиля();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.Модель) Тогда
		МодельАвтомобиляЗнР = ЗаявкаНаРемонт.Модель;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.Модель.Марка) Тогда
		МаркаАвтомобиляЗнР = Строка(ЗаявкаНаРемонт.Модель.Марка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.ВариантКомплектации) Тогда
		ВариантКомплектации = ЗаявкаНаРемонт.ВариантКомплектации;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.ГодВыпуска) Тогда 
		ГодВыпускаАвтомобиля = ЗаявкаНаРемонт.ГодВыпуска;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.Пробег) Тогда 
		ПробегАвтомобиля = ЗаявкаНаРемонт.Пробег;
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.Заказчик) Тогда
		ЗаказчикЗнР = Строка(ЗаявкаНаРемонт.Заказчик);
		Заказчик = ЗаявкаНаРемонт.Заказчик;
		УправлениеКонтактнойИнформациейАльфаАвто.
			ОбновитьСписокВыбораКИ(Заказчик, ЭтотОбъект, "Телефон", "ПредставлениеТелефона");
	Иначе
		ЗаказчикЗнР = ЗаявкаНаРемонт.ОбращениеККлиенту;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.Контрагент) Тогда
		Если ТипЗнч(ЗаявкаНаРемонт.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			ПлательщикЗнР = ЗаявкаНаРемонт.Контрагент;
			Если НЕ БесплатныйРемонт Тогда
				Плательщик = ЗаявкаНаРемонт.Контрагент;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если НЕ БесплатныйРемонт И ЗначениеЗаполнено(ЗаявкаНаРемонт.Заказчик) И ТипЗнч(ЗаявкаНаРемонт.Заказчик) = Тип("СправочникСсылка.Контрагенты") Тогда
			Плательщик = ЗаявкаНаРемонт.Заказчик;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаявкаНаРемонт.АдресЭлектроннойПочты) Тогда
		АдресЭП = ЗаявкаНаРемонт.АдресЭлектроннойПочты;
	КонецЕсли;
	
	ОбновитьСтатус();
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(СводныйРемонтныйЗаказДляОткрытия) Тогда
		Отказ = Истина;
		ОткрытьФорму("Документ.СводныйРемонтныйЗаказ.ФормаОбъекта", Новый Структура("Ключ", СводныйРемонтныйЗаказДляОткрытия));
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего на клиенте во всех формах при вызове метода Оповестить.
//
// Параметры:
//  ИмяСобытия - Строка       - Имя, идентифицирующее событие.
//  Параметр   - Произвольный - Параметр сообщения.
//  Источник   - Произвольный - Источник события.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.ЗащитаПерсональныхДанных
	ЗащитаПерсональныхДанныхКлиент.ОбработкаОповещенияФормы(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.ЗащитаПерсональныхДанных
	
	Если ИмяСобытия = "ЗаписанКонтрагент" Тогда
		Если Параметр <> Неопределено 
			И ТипЗнч(Параметр) = Тип("СправочникСсылка.Контрагенты") 
			И ТипЗнч(Источник) = Тип("ФормаКлиентскогоПриложения")
			И Источник.ВладелецФормы = ЭтотОбъект Тогда
			Заказчик = Параметр;
			УправлениеДиалогомНаСервере();
			ОбновитьСтатус();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ЗаписанАвтомобиль" Тогда
		Если Параметр <> Неопределено 
			И ТипЗнч(Параметр) = Тип("Структура") 
			И ТипЗнч(Источник) = Тип("ФормаКлиентскогоПриложения")
			И Источник.ВладелецФормы = ЭтотОбъект Тогда
			Автомобиль = Параметр.Автомобиль;
			Если ЗначениеЗаполнено(Параметр.Хозяин) Тогда 
				Заказчик = Параметр.Хозяин;
			КонецЕсли;
			ОбновитьСтатус();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаОповещения()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события возникающего на клиенте при изменении данных реквизита "Автомобиль" в контексте сервера.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаСервере
Процедура АвтомобильПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	//Владелец = Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(Автомобиль, Перечисления.ДополнительнаяИнформацияАвтомобилей.Хозяин, ТекущаяДата());
	//Если (ЗначениеЗаполнено(Владелец)) И (НЕ Заказчик = Владелец) Тогда
	//	Заказчик = Владелец;
	//КонецЕсли;
	
	// Проверим наличие заметок по выбранному объекту.
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Автомобиль, ПараметрыДействия);
	
	ОбновитьСтатус();
	
КонецПроцедуры // АвтомобильПриИзмененииНаСервере()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Автомобиль".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура АвтомобильПриИзменении(Элемент)
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Обработаем событие в контексте сервера
	АвтомобильПриИзмененииНаСервере(ПараметрыДействия);
	
	// Обработаем изменения требующие ответа от пользователя
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего на клиенте при изменении данных реквизита "Телефон".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ПредставлениеТелефонаПриИзменении(Элемент)
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
		
	// Обработаем изменения требующие ответа от пользователя
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры // ПредставлениеТелефонаПриИзменении()

&НаКлиенте
Процедура ПредставлениеТелефонаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыРедактирования = УправлениеКонтактнойИнформациейАльфаАвтоКлиент.НовыеПараметрыРедактирования();
	ПараметрыРедактирования.ПутьКДанным = "ПредставлениеТелефона";
	УправлениеКонтактнойИнформациейАльфаАвтоКлиент.НачатьРедактированиеКонтактнойИнформации(
		ЭтотОбъект,
		Элемент.ТекстРедактирования,
		ПараметрыРедактирования
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТелефонаОчистка(Элемент, СтандартнаяОбработка)
	
	ОчиститьКИ();
	
КонецПроцедуры

// Обработчик события возникающего на клиенте при изменении данных реквизита "Заказчик".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ЗаказчикПриИзменении(Элемент)
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Обработаем событие в контексте сервера
	ЗаказчикПриИзмененииНаСервере(ПараметрыДействия);
	
	// Обработаем изменения требующие ответа от пользователя
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
	ОбновитьСтатус();
	
КонецПроцедуры // ЗаказчикПриИзменении()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Заказчик" в контексте сервера.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаСервере
Процедура ЗаказчикПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Проверим наличие заметок по выбранному объекту.
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Заказчик, ПараметрыДействия);
	
	УправлениеКонтактнойИнформациейАльфаАвто.
		ОбновитьСписокВыбораКИ(Заказчик, ЭтотОбъект, "Телефон", "ПредставлениеТелефона");
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры // ЗаказчикПриИзменении()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Плательщик".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ПлательщикПриИзменении(Элемент)
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Обработаем событие в контексте сервера
	ПлательщикПриИзмененииНаСервере(ПараметрыДействия);
	
	// Обработаем изменения требующие ответа от пользователя
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
	ОбновитьСтатус();
	
КонецПроцедуры // ПлательщикПриИзменении()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Плательщик" в контексте сервера.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаСервере
Процедура ПлательщикПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Проверим наличие заметок по выбранному объекту.
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Плательщик, ПараметрыДействия);
	
КонецПроцедуры // ПлательщикПриИзменении()

// Обработчик события возникающего на клиенте при изменении данных реквизита "ГосНомер".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ГосНомерПриИзменении(Элемент)
	
	Отказ = АвтомобилиСервер.ПроверитьКорректностьГосНомера(Неопределено, ГосНомер, Истина);
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовУправленияОбщегоНазначения

// Обработчик события возникающего на клиенте при нажатии на надпись "Назначить плательщиком".
//
// Параметры:
//  Элемент - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура НадписьНазначитьПлательщикомНажатие(Элемент)
	
	Плательщик = Заказчик;
	ОбновитьСтатус();
	
КонецПроцедуры // НадписьНазначитьПлательщикомНажатие()

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия кнопки "Найти автомобиль".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура НайтиАвтомобиль(Команда)
	
	Результат = ПоискАвтомобиля();
	
	Если ТипЗнч(Результат) = Тип("Число") Тогда
		ВывестиРезультатПредупреждения(Результат);
	ИначеЕсли ТипЗнч(Результат) = Тип("Строка") Тогда
		ПараметрыВыбора = Новый Структура;
		ПараметрыВыбора.Вставить("ЗакрыватьПриВыборе",            Истина);
		ПараметрыВыбора.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
		ПараметрыВыбора.Вставить("МножественныйВыбор",            Ложь);
		ПараметрыВыбора.Вставить("РежимВыбора",                   Истина);
		ПараметрыВыбора.Вставить("АдресСписка",                   Результат);
		
		ОбработкаОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаВыбораАвтомобиля", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.Автомобили.Форма.ФормаВыбораИзТаблицы", ПараметрыВыбора, ЭтотОбъект,,,, ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
	ОбновитьСтатус();
	
КонецПроцедуры // НайтиАвтомобиль()

// Обработчик события нажатия кнопки "Создать автомобиль".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура СоздатьАвтомобиль(Команда)
	
	МодельАвтомобиля = ПолучениеМоделиАвтомобиля();
	МаркаАвтомобиля  = ПолучениеМаркиАвтомобиля();
	
	ЗначенияЗаполнения = Новый Структура();
	Если ЗначениеЗаполнено(МодельАвтомобиля) Тогда
		ЗначенияЗаполнения.Вставить("Модель", МодельАвтомобиля);
		ЗначенияЗаполнения.Вставить("Марка", МаркаАвтомобиля);
		ЗначенияЗаполнения.Вставить("ВариантКомплектации", ВариантКомплектации);
	Иначе
		ЗначенияЗаполнения.Вставить("Наименование", АвтомобильЗнР);
		ЗначенияЗаполнения.Вставить("Модель", МодельАвтомобиляЗнР);
		ЗначенияЗаполнения.Вставить("Марка", МаркаМоделиАвтомобиля(МодельАвтомобиляЗнР));
		ЗначенияЗаполнения.Вставить("ВариантКомплектации", ВариантКомплектацииАвтомобиля(МодельАвтомобиляЗнР, ВариантКомплектации));
	КонецЕсли;
	ЗначенияЗаполнения.Вставить("VIN",      VINАвтомобиля);
	ЗначенияЗаполнения.Вставить("ГодВыпуска", ГодВыпускаАвтомобиля);
	
	ПараметрыВыбора = Новый Структура();
	ПараметрыВыбора.Вставить("ГосНомер", ГосНомер);
	ПараметрыВыбора.Вставить("Владелец", Заказчик);
	ПараметрыВыбора.Вставить("Пробег", ПробегАвтомобиля);
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения,ПараметрыВыбора", ЗначенияЗаполнения,ПараметрыВыбора);
	
	ОткрытьФорму("Справочник.Автомобили.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // СоздатьАвтомобиль()

// Обработчик события нажатия кнопки "Найти контрагента".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура НайтиКонтрагента(Команда)
	
	Результат = ПоискКонтрагента();
	
	Если ТипЗнч(Результат) = Тип("Число") Тогда
		ВывестиРезультатПредупреждения(Результат);
	ИначеЕсли ТипЗнч(Результат) = Тип("Строка") Тогда
		ПараметрыВыбора = Новый Структура;
		ПараметрыВыбора.Вставить("ЗакрыватьПриВыборе",            Истина);
		ПараметрыВыбора.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
		ПараметрыВыбора.Вставить("МножественныйВыбор",            Ложь);
		ПараметрыВыбора.Вставить("РежимВыбора",                   Истина);
		ПараметрыВыбора.Вставить("АдресСписка",                   Результат);
		
		ОбработкаОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаВыбораЗаказчика", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораИзТаблицы", ПараметрыВыбора, ЭтотОбъект,,,, ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
	ОбновитьСтатус();
	
КонецПроцедуры // НайтиКонтрагента()

// Обработчик события нажатия кнопки "Создать контрагента".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура СоздатьКонтрагента(Команда)
	
	ПараметрыФормы = Новый Структура();
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("Наименование",       ЗаказчикЗнР);
	ДанныеЗаполнения.Вставить("НаименованиеПолное", ЗаказчикЗнР);
	ДанныеЗаполнения.Вставить("ВидКонтрагента",     ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.Покупатель"));
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ДанныеЗаполнения);
	Если ЗначениеЗаполнено(ПредставлениеТелефона) Тогда
		ПараметрыФормы.Вставить("ТелефонКонтрагента", ПредставлениеТелефона);
	КонецЕсли;
	ПараметрыФормы.Вставить("АдресЭП", АдресЭП);
	ПараметрыФормы.Вставить("НеобходимоОповеститьПослеЗаписи", Истина);
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // СоздатьКонтрагента()

// Обработчик события нажатия кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	Если АвтомобилиСервер.ПроверитьКорректностьГосНомера(Неопределено, ГосНомер, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	АдресХранилища = ПоместитьВыбранныеРеквизитыВХранилище();
	
	Закрыть(АдресХранилища);
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Поиск автомобиля
//
&НаСервере
Функция ПоискАвтомобиля()
	
	Если ПустаяСтрока(АвтомобильЗнР)
			И ПустаяСтрока(ГосНомер)
			И ПустаяСтрока(VINАвтомобиля) 
			И НЕ ЗначениеЗаполнено(МодельАвтомобиляЗнР) Тогда
		Возврат 1;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	              |	Автомобили.Ссылка КАК Автомобиль,
	              |	Автомобили.Наименование КАК Наименование,
	              |	Автомобили.VIN КАК VIN
	              |ПОМЕСТИТЬ ТаблицаАвтомобилей
	              |ИЗ
	              |	Справочник.Автомобили КАК Автомобили
	              |ГДЕ
	              |	(&УсловиеПоVIN
	              |			ИЛИ &УсловиеПоНаименованию
	              |			ИЛИ &ПоискПоМодели)
	              |	И &УсловиеПоМодели
	              |	И НЕ Автомобили.ЭтоГруппа
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	Автомобили.Автомобиль,
	              |	Автомобили.Автомобиль.Наименование,
	              |	Автомобили.Автомобиль.VIN
	              |ИЗ
	              |	РегистрСведений.Автомобили КАК Автомобили
	              |ГДЕ
	              |	&УсловиеПоГосНомеру
	              |	И Автомобили.ВидЗначения = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяИнформацияАвтомобилей.ГосНомер)
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Автомобиль
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ТаблицаАвтомобилей.Автомобиль КАК Автомобиль,
	              |	ТаблицаАвтомобилей.VIN КАК VIN,
	              |	СрезГосНомер.Значение КАК ГосНомер,
	              |	СрезХозяин.Значение КАК Владелец
	              |ИЗ
	              |	ТаблицаАвтомобилей КАК ТаблицаАвтомобилей
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Автомобили.СрезПоследних(
	              |				,
	              |				ВидЗначения = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяИнформацияАвтомобилей.ГосНомер)
	              |					И Автомобиль В
	              |						(ВЫБРАТЬ
	              |							ТаблицаАвтомобилей.Автомобиль
	              |						ИЗ
	              |							ТаблицаАвтомобилей)) КАК СрезГосНомер
	              |		ПО ТаблицаАвтомобилей.Автомобиль = СрезГосНомер.Автомобиль
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Автомобили.СрезПоследних(
	              |				,
	              |				ВидЗначения = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяИнформацияАвтомобилей.Хозяин)
	              |					И Автомобиль В
	              |						(ВЫБРАТЬ
	              |							ТаблицаАвтомобилей.Автомобиль
	              |						ИЗ
	              |							ТаблицаАвтомобилей)) КАК СрезХозяин
	              |		ПО ТаблицаАвтомобилей.Автомобиль = СрезХозяин.Автомобиль
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Автомобили КАК Автомобили
	              |		ПО ТаблицаАвтомобилей.Автомобиль = Автомобили.Ссылка
	              |ГДЕ
	              |	&ОбщееУсловиеПоМодели
	              |	И &ОбщееУсловиеПоГосНомеру
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	Автомобиль";
	
	Если ЗначениеЗаполнено(АвтомобильЗнР) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоНаименованию", "Автомобили.Наименование ПОДОБНО &СтрокаПоиска");
		Запрос.УстановитьПараметр("СтрокаПоиска", "%" + АвтомобильЗнР + "%");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоНаименованию", "Ложь");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МодельАвтомобиляЗнР) Тогда
		МодельАвтомобиля = МодельАвтомобиляЗнР;
	Иначе
		МодельАвтомобиля = ПолучениеМоделиАвтомобиля();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МодельАвтомобиля) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоМодели", "Автомобили.Модель = &СтрокаПоискаМодели");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОбщееУсловиеПоМодели", "Автомобили.Модель = &СтрокаПоискаМодели");
		Запрос.УстановитьПараметр("СтрокаПоискаМодели", МодельАвтомобиля);
	Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоМодели", "Истина");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОбщееУсловиеПоМодели", "Истина");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(VINАвтомобиля) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоVIN", "Автомобили.VIN ПОДОБНО &СтрокаПоискаVIN");
		Запрос.УстановитьПараметр("СтрокаПоискаVIN", "%" + VINАвтомобиля + "%");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоVIN", "Ложь");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГосНомер) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоГосНомеру", "Автомобили.Значение ПОДОБНО &ГосНомер");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОбщееУсловиеПоГосНомеру", "СрезГосНомер.Значение ПОДОБНО &ГосНомер");
		Запрос.УстановитьПараметр("ГосНомер", "%" + ГосНомер + "%");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоГосНомеру", "Истина");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОбщееУсловиеПоГосНомеру", "Истина");
	КонецЕсли;
	Если НЕ (Запрос.Параметры.Свойство("УсловиеПоНаименованию") И Запрос.Параметры.Свойство("УсловиеПоVIN")) Тогда
		Запрос.УстановитьПараметр("ПоискПоМодели", Истина);
	Иначе
		Запрос.УстановитьПараметр("ПоискПоМодели", Ложь);
	КонецЕсли;
	
	СписокАвтомобилей = Запрос.Выполнить().Выгрузить();
	
	Если СписокАвтомобилей.Количество() > 50 Тогда
		Возврат 2;
	ИначеЕсли СписокАвтомобилей.Количество() = 1 Тогда
		ВыбранноеЗначение = СписокАвтомобилей[0].Автомобиль;
		Автомобиль = ВыбранноеЗначение;
		Возврат Неопределено;
	ИначеЕсли СписокАвтомобилей.Количество() = 0 Тогда
		Возврат 3;
	КонецЕсли;
	
	Результат = ПоместитьВоВременноеХранилище(СписокАвтомобилей, УникальныйИдентификатор);
	
	Возврат Результат;
	
КонецФункции // ПоискАвтомобиля()

// Поиск контрагента
//
&НаСервере
Функция ПоискКонтрагента()
	
	Если ПустаяСтрока(ЗаказчикЗнР) И ПустаяСтрока(ПредставлениеТелефона) Тогда
		Возврат 1;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если НЕ ПустаяСтрока(ЗаказчикЗнР) Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", "%" + ЗаказчикЗнР + "%");
		Запрос = Новый Запрос;
		Запрос.Текст= "ВЫБРАТЬ
		              |	КонтактнаяИнформация.Ссылка КАК Контрагент,
		              |	КонтактнаяИнформация.Ссылка.Наименование КАК Наименование,
		              |	КонтактнаяИнформация.Ссылка.ИНН КАК ИНН,
		              |	NULL КАК ШтрихКод
		              |ПОМЕСТИТЬ ТаблицаКонтрагентов
		              |ИЗ
		              |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		              |ГДЕ
		              |	(&УсловиеПоТелефону
		              |			ИЛИ КонтактнаяИнформация.Представление ПОДОБНО &СтрокаПоиска)
		              |
		              |ОБЪЕДИНИТЬ ВСЕ
		              |
		              |ВЫБРАТЬ
		              |	Контрагенты.Ссылка,
		              |	Контрагенты.Наименование,
		              |	Контрагенты.ИНН,
		              |	NULL
		              |ИЗ
		              |	Справочник.Контрагенты КАК Контрагенты
		              |ГДЕ
		              |	(Контрагенты.ИНН ПОДОБНО &СтрокаПоиска
		              |			ИЛИ Контрагенты.Наименование ПОДОБНО &СтрокаПоиска
		              |			ИЛИ Контрагенты.НаименованиеПолное ПОДОБНО &СтрокаПоиска)
		              |
		              |ОБЪЕДИНИТЬ ВСЕ
		              |
		              |ВЫБРАТЬ
		              |	ВЫРАЗИТЬ(Карточки.Объект КАК Справочник.Контрагенты),
		              |	Карточки.Объект.Наименование,
		              |	Карточки.Объект.ИНН,
		              |	ШтрихКоды.ШтрихКод
		              |ИЗ
		              |	РегистрСведений.ШтрихКоды КАК ШтрихКоды
		              |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Карточки КАК Карточки
		              |		ПО ШтрихКоды.Объект = Карточки.Ссылка
		              |ГДЕ
		              |	ШтрихКоды.ШтрихКод ПОДОБНО &СтрокаПоиска
		              |	И Карточки.Объект ССЫЛКА Справочник.Контрагенты
		              |
		              |ИНДЕКСИРОВАТЬ ПО
		              |	Контрагент
		              |;
		              |
		              |////////////////////////////////////////////////////////////////////////////////
		              |ВЫБРАТЬ
		              |	КонтактнаяИнформация.Ссылка,
		              |	МАКСИМУМ(ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100))) КАК КонтактнаяИнформация
		              |ПОМЕСТИТЬ КонтактнаяИнформацияПоУмолчанию
		              |ИЗ
		              |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		              |ГДЕ
		              |	КонтактнаяИнформация.ВидДляСписка = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)
		              |	И КонтактнаяИнформация.Ссылка В
		              |			(ВЫБРАТЬ
		              |				ТаблицаКонтрагентов.Контрагент
		              |			ИЗ
		              |				ТаблицаКонтрагентов КАК ТаблицаКонтрагентов)
		              |
		              |СГРУППИРОВАТЬ ПО
		              |	КонтактнаяИнформация.Ссылка
		              |;
		              |
		              |////////////////////////////////////////////////////////////////////////////////
		              |ВЫБРАТЬ РАЗЛИЧНЫЕ
		              |	ТаблицаКонтрагентов.Контрагент КАК Контрагент,
		              |	ТаблицаКонтрагентов.ИНН,
		              |	КонтактнаяИнформацияПоУмолчанию.КонтактнаяИнформация КАК КонтактнаяИнформация,
		              |	ШтрихКоды.ШтрихКод
		              |ИЗ
		              |	ТаблицаКонтрагентов КАК ТаблицаКонтрагентов
		              |		ЛЕВОЕ СОЕДИНЕНИЕ КонтактнаяИнформацияПоУмолчанию КАК КонтактнаяИнформацияПоУмолчанию
		              |		ПО ТаблицаКонтрагентов.Контрагент = КонтактнаяИнформацияПоУмолчанию.Ссылка
		              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихКоды КАК ШтрихКоды
		              |		ПО ТаблицаКонтрагентов.Контрагент = ШтрихКоды.Объект.Объект
		              |
		              |УПОРЯДОЧИТЬ ПО
		              |	Контрагент";
	    Запрос.УстановитьПараметр("СтрокаПоиска", "%" + ЗаказчикЗнР + "%");
		Если ЗначениеЗаполнено(ТелефонЗаказчика) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоТелефону","КонтактнаяИнформация.Представление ПОДОБНО &ПредставлениеТелефона");
			Запрос.УстановитьПараметр("ПредставлениеТелефона", "%" + ТелефонЗаказчика + "%");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоТелефону", "Ложь");
		КонецЕсли;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст= "ВЫБРАТЬ
		              |	КонтактнаяИнформация.Ссылка КАК Контрагент,
		              |	КонтактнаяИнформация.Ссылка.Наименование КАК Наименование,
		              |	КонтактнаяИнформация.Ссылка.ИНН КАК ИНН
		              |ПОМЕСТИТЬ ТаблицаКонтрагентов
		              |ИЗ
		              |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		              |ГДЕ
		              |	КонтактнаяИнформация.Представление ПОДОБНО &СтрокаПоиска
		              |
		              |ИНДЕКСИРОВАТЬ ПО
		              |	Контрагент
		              |;
		              |
		              |////////////////////////////////////////////////////////////////////////////////
		              |ВЫБРАТЬ
		              |	КонтактнаяИнформация.Ссылка,
		              |	МАКСИМУМ(ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100))) КАК КонтактнаяИнформация
		              |ПОМЕСТИТЬ КонтактнаяИнформацияПоУмолчанию
		              |ИЗ
		              |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		              |ГДЕ
		              |	КонтактнаяИнформация.ВидДляСписка = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)
		              |	И КонтактнаяИнформация.Ссылка В
		              |			(ВЫБРАТЬ
		              |				ТаблицаКонтрагентов.Контрагент
		              |			ИЗ
		              |				ТаблицаКонтрагентов КАК ТаблицаКонтрагентов)
		              |
		              |СГРУППИРОВАТЬ ПО
		              |	КонтактнаяИнформация.Ссылка
		              |;
		              |
		              |////////////////////////////////////////////////////////////////////////////////
		              |ВЫБРАТЬ РАЗЛИЧНЫЕ
		              |	ТаблицаКонтрагентов.Контрагент КАК Контрагент,
		              |	ТаблицаКонтрагентов.ИНН,
		              |	КонтактнаяИнформацияПоУмолчанию.КонтактнаяИнформация КАК КонтактнаяИнформация,
		              |	ШтрихКоды.ШтрихКод
		              |ИЗ
		              |	ТаблицаКонтрагентов КАК ТаблицаКонтрагентов
		              |		ЛЕВОЕ СОЕДИНЕНИЕ КонтактнаяИнформацияПоУмолчанию КАК КонтактнаяИнформацияПоУмолчанию
		              |		ПО ТаблицаКонтрагентов.Контрагент = КонтактнаяИнформацияПоУмолчанию.Ссылка
		              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихКоды КАК ШтрихКоды
		              |		ПО ТаблицаКонтрагентов.Контрагент = ШтрихКоды.Объект.Объект
		              |
		              |УПОРЯДОЧИТЬ ПО
		              |	Контрагент";
		Запрос.УстановитьПараметр("СтрокаПоиска", "%" + ТелефонЗаказчика + "%");
	КонецЕсли;
	
	СписокКлиентов = Запрос.Выполнить().Выгрузить();
	
	Если СписокКлиентов.Количество() > 50 Тогда
		Возврат 2;
	ИначеЕсли СписокКлиентов.Количество() = 1 Тогда
		ВыбранноеЗначение = СписокКлиентов[0].Контрагент;
		Заказчик = ВыбранноеЗначение;
		ЗаказчикПриИзмененииНаСервере();
		Возврат Неопределено;
	ИначеЕсли СписокКлиентов.Количество() = 0 Тогда
		Возврат 3;
	КонецЕсли;
	
	Результат = ПоместитьВоВременноеХранилище(СписокКлиентов, УникальныйИдентификатор);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьСтатус()
	
	Если ЗначениеЗаполнено(Автомобиль) Тогда
		Элементы.КартинкаАвтомобиль.Картинка = БиблиотекаКартинок.Успешно;
	Иначе
		Элементы.КартинкаАвтомобиль.Картинка = БиблиотекаКартинок.Удалить;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Плательщик) ИЛИ БесплатныйРемонт Тогда
		Элементы.КартинкаПлательщик.Картинка = БиблиотекаКартинок.Успешно;
	Иначе
		Элементы.КартинкаПлательщик.Картинка = БиблиотекаКартинок.Удалить;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заказчик) Тогда
		Элементы.КартинкаЗаказчик.Картинка = БиблиотекаКартинок.Успешно;
	Иначе
		Элементы.КартинкаЗаказчик.Картинка = БиблиотекаКартинок.Удалить;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьСтатус()

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаВыбораАвтомобиля(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатОповещения) Тогда
		Возврат;
	КонецЕсли;
	
	Автомобиль = РезультатОповещения;
	
	АвтомобильПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаВыбораЗаказчика(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатОповещения) Тогда
		Возврат;
	КонецЕсли;
	
	Заказчик = РезультатОповещения;
	ЗаказчикПриИзменении(Неопределено);
	
КонецПроцедуры // Подключаемый_ОбработкаРезультатаВыбораЗаказчика()

&НаСервере
Функция ПолучениеМоделиАвтомобиля()
	
	МодельАвтомобиля = Справочники.Модели.НайтиПоНаименованию(АвтомобильЗнР, Истина);
	Если НЕ (МодельАвтомобиля = Неопределено ИЛИ МодельАвтомобиля = Справочники.Модели.ПустаяСсылка() ИЛИ МодельАвтомобиля.ЭтоГруппа) Тогда
		Возврат МодельАвтомобиля;
	КонецЕсли;
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ПолучениеМаркиАвтомобиля()
	
	МодельАвтомобиля = Справочники.Модели.НайтиПоНаименованию(АвтомобильЗнР, Истина);
	Если НЕ (МодельАвтомобиля = Неопределено ИЛИ МодельАвтомобиля = Справочники.Модели.ПустаяСсылка() ИЛИ МодельАвтомобиля.ЭтоГруппа) Тогда
		Возврат МодельАвтомобиля.Марка;
	КонецЕсли;
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ВывестиРезультатПредупреждения(КодОшибки)
	
	ТекстСообщения = "";
	Если КодОшибки = 1 Тогда
		ТекстСообщения = НСтр("ru = 'Введите данные для поиска.'");
	ИначеЕсли КодОшибки = 2 Тогда
		ТекстСообщения = НСтр("ru = 'Найдено более 50 соответствий. Уточните запрос.'");
	ИначеЕсли КодОшибки = 3 Тогда
		ТекстСообщения = НСтр("ru = 'Соответствий не найдено.'");
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстСообщения) Тогда
		ПоказатьПредупреждение(, ТекстСообщения, , НСтр("ru = 'Результат поиска автомобиля'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьВыбранныеРеквизитыВХранилище()
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("Автомобиль", Автомобиль);
	СтруктураРеквизитов.Вставить("Заказчик",   Заказчик);
	СтруктураРеквизитов.Вставить("Плательщик", Плательщик);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРеквизитов);
	
КонецФункции // ПоместитьВыбранныеРеквизитыВХранилище()

// Отображает результат выполнения действия.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	// Вызываем общий обработчик результата выполнения действия
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры // ОбработкаРезультатаВыполненияДействия()

&НаСервере
Процедура НайтиСводныйРемонтныйЗаказДляОткрытия()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНарядПричиныОбращения.ИдентификаторПричиныОбращения КАК ИдентификаторПричиныОбращения,
	|	ЗаказНарядПричиныОбращения.Ссылка.СводныйРемонтныйЗаказ КАК СводныйРемонтныйЗаказ
	|ПОМЕСТИТЬ ТаблицаСуществующихПричин
	|ИЗ
	|	Документ.ЗаказНаряд КАК ТаблицаЗаказНаряд
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СводныйРемонтныйЗаказ КАК ТаблицаСводныйРемонтныйЗаказ
	|		ПО (ТаблицаСводныйРемонтныйЗаказ.ДокументОснование = &ДокументЗаявкаНаРемонт)
	|			И ТаблицаЗаказНаряд.СводныйРемонтныйЗаказ = ТаблицаСводныйРемонтныйЗаказ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаряд.ПричиныОбращения КАК ЗаказНарядПричиныОбращения
	|		ПО ТаблицаЗаказНаряд.Ссылка = ЗаказНарядПричиныОбращения.Ссылка
	|ГДЕ
	|	ТаблицаСводныйРемонтныйЗаказ.ДокументОснование = &ДокументЗаявкаНаРемонт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаСуществующихПричин.СводныйРемонтныйЗаказ КАК СводныйРемонтныйЗаказ
	|ИЗ
	|	Документ.ЗаявкаНаРемонт.ПричиныОбращения КАК ТаблицаПричиныОбращения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСуществующихПричин КАК ТаблицаСуществующихПричин
	|		ПО ТаблицаПричиныОбращения.ИдентификаторПричиныОбращения = ТаблицаСуществующихПричин.ИдентификаторПричиныОбращения
	|ГДЕ
	|	ТаблицаПричиныОбращения.Ссылка = &ДокументЗаявкаНаРемонт
	|	И ТаблицаПричиныОбращения.ИдентификаторПричиныОбращения В
	|			(ВЫБРАТЬ
	|				ТаблицаСуществующихПричин.ИдентификаторПричиныОбращения
	|			ИЗ
	|				ТаблицаСуществующихПричин)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСуществующихПричин.СводныйРемонтныйЗаказ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаСуществующихПричин.СводныйРемонтныйЗаказ.Дата УБЫВ";
	Запрос.УстановитьПараметр("ДокументЗаявкаНаРемонт", ЗаявкаНаРемонт);
	
	СводныйРемонтныйЗаказДляОткрытия = Запрос.Выполнить().Выгрузить()[0].СводныйРемонтныйЗаказ;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	Элементы.НадписьНазначитьПлательщиком.Доступность = ЗначениеЗаполнено(Заказчик);
		
	Если БесплатныйРемонт Тогда
		Элементы.Плательщик.Доступность                   = Ложь;
		Элементы.НадписьНазначитьПлательщиком.Доступность = Ложь;
		Элементы.Плательщик.АвтоОтметкаНезаполненного     = Ложь;
	КонецЕсли;    
	
	АвтоматическиСоздаватьСводныйРемонтныйЗаказ = ПолучитьФункциональнуюОпцию(
		"АвтоматическиСоздаватьСводныйРемонтныйЗаказ"
	);
	
	Если СозданиеЗаказНаряда И  НЕ АвтоматическиСоздаватьСводныйРемонтныйЗаказ Тогда
		
		Элементы.ДекорацияЗаказчик.Видимость 	= Ложь;
		Элементы.ЗаказчикЗнР.Видимость 			= Ложь;
		Элементы.ПредставлениеТелефона.Видимость= Ложь;
		Элементы.ГруппаУправление.Видимость 	= Ложь;
		Элементы.Заказчик.Видимость 			= Ложь;
		Элементы.ДекорацияАвтомобиль.Видимость	= Ложь;
		Элементы.АвтомобильЗнР.Видимость 		= Ложь;
		Элементы.МодельАвтомобиляЗнР.Видимость 	= Ложь;
		Элементы.МаркаАвтомобиляЗнР.Видимость 	= Ложь;
		Элементы.VINАвтомобиля.Видимость 		= Ложь;
		Элементы.ГосНомер.Видимость 			= Ложь;  
		Элементы.КартинкаЗаказчик.Видимость 	= Ложь;
		Элементы.НадписьНазначитьПлательщиком.Видимость = Ложь;
		Элементы.Автомобиль.Видимость 			= Ложь;
		Элементы.КартинкаАвтомобиль.Видимость 	= Ложь;
		Элементы.ДекорацияОтступ2.Видимость 	= Ложь;
		Элементы.ДекорацияОтступ19.Видимость 	= Ложь;
		Элементы.ДекорацияОтступ5.Видимость 	= Ложь;
		Элементы.ДекорацияОтступ20.Видимость 	= Ложь;
        
	КонецЕсли;

КонецПроцедуры

// Процедура - Очистить КИ
//
&НаСервере
Процедура ОчиститьКИ()
	
	ПредставлениеТелефона = "";
	ПредставлениеТелефонаСтрокой = "";
	АдресЭлектроннойПочты = "";
	АдресЭлектроннойПочтыСтрокой = "";
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МаркаМоделиАвтомобиля(МодельАвтомобиля)
	
	Если ЗначениеЗаполнено(МодельАвтомобиля) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МодельАвтомобиля, "Марка")
	КонецЕсли;
	
	Возврат Справочники.Марки.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция ВариантКомплектацииАвтомобиля(МодельАвтомобиля, ВариантКомплектацииАвтомобиля)
	
	Если ЗначениеЗаполнено(МодельАвтомобиля)
		И ВариантКомплектацииАвтомобиля.Владелец = МодельАвтомобиля Тогда
		
		Возврат ВариантКомплектацииАвтомобиля;
		
	КонецЕсли;
	
	Возврат Справочники.ВариантыКомплектации.ПустаяСсылка();
	
КонецФункции

#КонецОбласти

