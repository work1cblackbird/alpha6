// Модуль объекта документа "Отчет комиссионера за автомобили"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Обработчик события объекта возникает в момент, когда выполняется установка нового номера.
//
// Параметры:
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//  Префикс              - Строка - Префикс, который будет использоваться для генерации номера.
//
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	// Вызываем общий обработчик события
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры // ПриУстановкеНовогоНомера()

// Процедура - обработчик ввода на основании
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения="", СтандартнаяОбработка=ИСТИНА)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	// Пройдемся по ТЧ и рассчитаем сумму комиссионного вознаграждения
	Для Каждого СтрокаТЧ Из Автомобили Цикл
		Документы.ОтчетКомиссионераЗаАвтомобили.РасчитатьВознаграждение(ЭтотОбъект, СтрокаТЧ, ЭтотОбъект.ДополнительныеСвойства.ПараметрыДействия);
	КонецЦикла;
	
КонецПроцедуры

// Обработчик события заполнения объекта копированием.
//
// Параметры:
//  ОбъектКопирования - ДокументОбъект - Исходный объект, который является источником копирования.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

// Обработчик события возникающего при необходимости проверки заполнения реквизитов при записи или при проведении.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// проверим заполненность ТЧ Автомобили
	Для Каждого СтрокаАвтомобиля Из Автомобили Цикл
		Если ПустаяСтрока(СтрокаАвтомобиля.ИдентификаторАвтомобиля) Тогда
			СтрокаАвтомобиля.ИдентификаторАвтомобиля = Новый УникальныйИдентификатор();
		КонецЕсли;
	КонецЦикла;
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаСобытийДокументаСервер.ПроверитьКорректностьТоваровКомиссионныхДокументов(
		ЭтотОбъект,
		Отказ,
		"Автомобили",
		"Автомобиль",
		Ложь
	);
	ОбработкаСобытийДокументаСервер.ПроверитьКорректностьТоваровКомиссионныхДокументов(ЭтотОбъект, Отказ);
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Обработчик события возникающего после начала транзакции записи, но до начала записи объекта.
//
// Параметры:
//  Отказ           - Булево                   - Признак отказа от совершения операции.
//  РежимЗаписи     - РежимЗаписиДокумента     - Текущий режим записи документа.
//  РежимПроведения - РежимПроведенияДокумента - Текущий режим проведения.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	// проверим заполненность ТЧ Автомобили
	Для Каждого СтрокаАвтомобиля Из Автомобили Цикл
		Если ПустаяСтрока(СтрокаАвтомобиля.ИдентификаторАвтомобиля) Тогда
			СтрокаАвтомобиля.ИдентификаторАвтомобиля = Новый УникальныйИдентификатор();
		КонецЕсли;
	КонецЦикла;
	
	//// Обновим оборудование автомобилей
	//Для каждого СтрокаАвтомобилей Из Автомобили Цикл
	//	ДобавитьОборудованиеАвтомобиля(СтрокаАвтомобилей.Автомобиль,СтрокаАвтомобилей.ДокументПередачи,Ложь);
	//КонецЦикла; 
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);
	// Конец УтверждениеДокументов
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка корректности типа цен.
	Если ТипЦен.Рассчитывается Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Использование расчетных типов цен запрещено.'"), ЭтотОбъект);
		
	КонецЕсли;
	
	РаботаСГраницами.МоментВремениПередПроведением(Ссылка, ДополнительныеСвойства);
	РаботаСГраницами.ДвиженияПоВзаиморасчетамПередПроведением(Ссылка, ДополнительныеСвойства);
	РаботаСГраницами.ДвиженияПоРасчетамСКонтрагентамиПередПроведением(Ссылка, ДополнительныеСвойства);
	
	// подсчитаем сумму вознаграждения
	СуммаВознаграждения = Автомобили.Итог("Вознаграждение")+Товары.Итог("Вознаграждение");
	
КонецПроцедуры

// Обработчик события возникающего после записи объекта в базу данных, но до окончания транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПриЗаписи(ЭтотОбъект, Отказ);
	// Конец УтверждениеДокументов
	
КонецПроцедуры // ПриЗаписи()

// Обработчик события возникающего в транзакции удаления перед непосредственным удалением объекта из базы данных.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередУдалением(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПередУдалением()

// Обработчик события возникающего при отмене проведения документа. Выполняется в транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

// Обработчик события возникающего в транзакции записи для формирования движений документу по подчиненным регистрам.
//
// Параметры:
//  Отказ           - Булево                   - Признак отказа от совершения операции.
//  РежимПроведения - РежимПроведенияДокумента - Текущий режим проведения.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	СпособУчетаВзаиморасчетовПоРасчетнымДокументам =
		РасчетыСКонтрагентамиСервер.ИспользуютсяВзаиморасчетыПоРасчетнымДокументам(ДоговорВзаиморасчетов);
	
	// проведем взаиморасчеты
	Если Не СпособУчетаВзаиморасчетовПоРасчетнымДокументам Тогда
		НаборЗаписейВзаиморасчеты = Движения.ВзаиморасчетыКомпании;
		НаборЗаписейВзаиморасчеты.ДокументОбъект                   = ЭтотОбъект;
		НаборЗаписейВзаиморасчеты.РежимПроведения                  = РежимПроведения;
		НаборЗаписейВзаиморасчеты.Контрагент                       = Контрагент;
		НаборЗаписейВзаиморасчеты.ДоговорВзаиморасчетов            = ДоговорВзаиморасчетов;
		НаборЗаписейВзаиморасчеты.АвтоЗакрытиеСделок               =
			(СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически);
		НаборЗаписейВзаиморасчеты.ВзаиморасчетыСПокупателем        = Истина;
		НаборЗаписейВзаиморасчеты.Сумма                            = СуммаДокумента-СуммаВознаграждения;
		НаборЗаписейВзаиморасчеты.СуммаДоходаРасходаСуммовыхРазниц = 0;
		Отказ=НЕ НаборЗаписейВзаиморасчеты.Приход() ИЛИ Отказ;
		// доходы и расходы по суммовым разницам
		СуммаДоходаРасходаСуммовыхРазниц =НаборЗаписейВзаиморасчеты.СуммаДоходаРасходаСуммовыхРазниц;
		Если СуммаДоходаРасходаСуммовыхРазниц <> 0 Тогда
			НаборЗаписейДиР = Движения.ДоходыИРасходы;
			НаборЗаписейДиР.ДокументОбъект = ЭтотОбъект;
			НаборЗаписейДиР.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СуммовыеРазницы;
			НаборЗаписейДиР.ВУпрВалюте = Истина;
			Если СуммаДоходаРасходаСуммовыхРазниц<0 Тогда
				НаборЗаписейДиР.Расход = -СуммаДоходаРасходаСуммовыхРазниц;
			Иначе
				НаборЗаписейДиР.Доход = СуммаДоходаРасходаСуммовыхРазниц;
			КонецЕсли;
			Отказ = НЕ НаборЗаписейДиР.Приход() ИЛИ Отказ;
		КонецЕсли; 
	КонецЕсли;
	
	Документы.ОтчетКомиссионераЗаАвтомобили.ИнициализироватьДанныеДокументаДляПроведения(ЭтотОбъект, ДополнительныеСвойства);
	Документы.ОтчетКомиссионераЗаАвтомобили.СформироватьТаблицуРасчетыСКонтрагентами(ДополнительныеСвойства, Отказ);
	ОбработкаСобытийДокументаСервер.ЗаписатьДвижения(ЭтотОбъект);
	
	// Отданные на комиссию автомобили
	НаборЗаписейАвтомобилиОтданные=Движения.АвтомобилиОтданные;
	НаборЗаписейАвтомобилиОтданные.ДокументОбъект=ЭтотОбъект;
	НаборЗаписейАвтомобилиОтданные.Контрагент=Контрагент;
	НаборЗаписейАвтомобилиОтданные.ДоговорВзаиморасчетов=ДоговорВзаиморасчетов;
	НаборЗаписейАвтомобилиОтданные.ОтчетКомиссионера=Истина;
	Отказ=НЕ НаборЗаписейАвтомобилиОтданные.Расход() ИЛИ Отказ; 
	// продажи автомобилей
	Если НЕ Отказ Тогда
		НаборЗаписейПродажи=Движения.ПродажиАвтомобилей;
		НаборЗаписейПродажи.ДокументОбъект=ЭтотОбъект;
		НаборЗаписейПродажи.СкладКомпании=Справочники.СкладыКомпании.ПустаяСсылка();
		НаборЗаписейПродажи.ДокументПродажи=Ссылка;
		НаборЗаписейПродажи.Сторно=Ложь;
		НаборЗаписейПродажи.Покупатель=Контрагент;
		НаборЗаписейПродажи.ДоговорВзаиморасчетов=ДоговорВзаиморасчетов;
		НаборЗаписейПродажи.ПодразделениеКомпании=ПодразделениеКомпании;
		НаборЗаписейПродажи.Комиссия=Истина;
		Отказ=НЕ НаборЗаписейПродажи.Приход() ИЛИ Отказ;
	КонецЕсли;
	Если НЕ Отказ Тогда
		НаборЗаписейАвтомобилиОтданные.Записать();
	КонецЕсли; 
	
	// партии
	Отказ=НЕ ПровестиПоПартиям(РежимПроведения,Ссылка) ИЛИ Отказ;
	
	// двигаем границу последовательности взаиморасчетов
	РаботаСГраницами.СдвинутьГраницуВзаиморасчетов(Ссылка, ДополнительныеСвойства, Движения);
	РаботаСГраницами.СдвинутьГраницуРасчетовСКонтрагентами(Ссылка, ДополнительныеСвойства, Движения);
	
КонецПроцедуры // ОбработкаПроведения

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиЗаполненияОбъекта

// Производит заполнение объекта на основании документа "Реализация автомобилей"
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_РеализацияАвтомобилей(ДанныеЗаполнения, ТекстЗаполнения = "", СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Вызываем общий обработчик заполнения
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ОбработкаЗаполенияТЧАвтомобили(ДанныеЗаполнения);
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_РеализацияАвтомобилей()

// Производит заполнение объекта на основании документа "Ввод остатков автомобилей"
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_ВводОстатковАвтомобилей(ДанныеЗаполнения, ТекстЗаполнения = "", СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Вызываем общий обработчик заполнения
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ОбработкаЗаполенияТЧАвтомобили(ДанныеЗаполнения);
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_ВводОстатковАвтомобилей()

Процедура ОбработкаЗаполенияТЧАвтомобили(ДанныеЗаполнения) 
	
	Товары.Очистить();
	// при вводе на основании реализации автомобилей заполним документ передачи
	Если (ЗначениеЗаполнено(ДанныеЗаполнения)) И 
		(ДанныеЗаполнения.ХозОперация=Справочники.ХозОперации.РеализацияАвтомобилейКомиссия ИЛИ
		 ДанныеЗаполнения.ХозОперация=Справочники.ХозОперации.ВводОстатковАвтомобилейПереданныхНаКомиссию) Тогда
		Для Каждого СтрокаТЧ Из Автомобили Цикл
			СтрокаТЧ.ДокументПередачи=ДанныеЗаполнения;
			Документы.ОтчетКомиссионераЗаАвтомобили.АвтомобилиДокументПередачи(ЭтотОбъект, СтрокаТЧ, ЭтотОбъект.ДополнительныеСвойства.ПараметрыДействия);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеДвиженийДокумента

// Возвращает выборку по шапке
// ДокументСсылка - Ссылка на документ для которого получаем шапку.
Функция ПолучитьШапкуДокумента(ДокументСсылка)
	
	Запрос=Новый Запрос("
	|ВЫБРАТЬ
	|	СУММА(СуммыТаблиц.СуммаАвтомобилей) КАК СуммаАвтомобилей,
	|	СУММА(СуммыТаблиц.СуммаДопОборудования) КАК СуммаДопОборудования
	|ПОМЕСТИТЬ
	|	СуммыТаблиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаАвтомобили.СуммаВсего КАК СуммаАвтомобилей,
	|		0 КАК СуммаДопОборудования
	|	ИЗ
	|		Документ.ОтчетКомиссионераЗаАвтомобили.Автомобили КАК ТаблицаАвтомобили
	|	ГДЕ
	|		ТаблицаАвтомобили.Ссылка=&Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		0,
	|		ТаблицаТовары.СуммаВсего
	|	ИЗ
	|		Документ.ОтчетКомиссионераЗаАвтомобили.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка=&Ссылка) КАК СуммыТаблиц
	|;
	|
	|ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Дата КАК Дата,
	|	Док.ВалютаДокумента КАК ВалютаДокумента,
	|	Док.КурсДокумента КАК КурсДокумента,
	|	Док.ТипЦен КАК ТипЦен,
	|	Док.ХозОперация КАК ХозОперация,
	|	Док.КурсВалютыУпр КАК КурсВалютыУпр,
	|	Док.КурсВалютыВзаиморасчетов КАК КурсВалютыВзаиморасчетов,
	|	Док.МоментВремени КАК МоментВремени,
	|	Док.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|	Док.СуммаДокумента КАК СуммаДокумента,
	/////////// ПРИВАТ ////////////
	|	Док.Ссылка КАК ДокументПродажи,
	|	Док.Контрагент КАК Контрагент,
	|	Док.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	Док.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ЕСТЬNULL(СуммыТаблиц.СуммаАвтомобилей, 0) КАК СуммаАвтомобилей,
	|	ЕСТЬNULL(СуммыТаблиц.СуммаДопОборудования, 0) КАК СуммаДопОборудования
	|
	|ИЗ
	|	Документ."+Метаданные().Имя+" КАК Док
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	СуммыТаблиц КАК СуммыТаблиц
	|ПО
	|	ИСТИНА
	|ГДЕ
	|	Док.Ссылка=&Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Выборка=Запрос.Выполнить().Выбрать(); Выборка.Следующий();
	
	Возврат Выборка;
КонецФункции

// Формирует движения документа по партионным регистрам
// Возвращает Истина - все хорошо, ложь - чего-то не так.
Функция ПровестиПоПартиям(Режим,ДокументСсылка) Экспорт
	Отказ=Ложь;
	
	// получим шапку документа
	ШапкаДокумента=ПолучитьШапкуДокумента(ДокументСсылка);
	
	// Получим способ ведения баланса.
	БалансВедетсяПоПодразделениям = БалансВедетсяПоПодразделениям(ШапкаДокумента.Дата);
		
	// Проверим, если подразделение проводиться по партиям "отложено", то дальше не идем.
	НаборЗаписейДопроведениеПоПартиям=Движения.ДопроведениеПоПартиям;
	НаборЗаписейДопроведениеПоПартиям.ДокументОбъект=ЭтотОбъект;
	НаборЗаписейДопроведениеПоПартиям.ШапкаДокумента=ШапкаДокумента;
	Отказ=НЕ НаборЗаписейДопроведениеПоПартиям.Зафиксировать() ИЛИ Отказ;
	Если НаборЗаписейДопроведениеПоПартиям.НеПроводитьПартии Тогда
		// Закроем взаиморасчеты с контрагентом
		Если (ШапкаДокумента.СуммаДокумента-ШапкаДокумента.СуммаВознаграждения)<>0 Тогда
			НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
			НаборЗаписейДоходыИРасходы.ДокументОбъект=ЭтотОбъект;
			НаборЗаписейДоходыИРасходы.ШапкаДокумента=ШапкаДокумента;
			НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СебестоимостьНеоприходованныхПартий;
			НаборЗаписейДоходыИРасходы.ВУпрВалюте = Ложь;
			НаборЗаписейДоходыИРасходы.Доход = ШапкаДокумента.СуммаДокумента-ШапкаДокумента.СуммаВознаграждения;
			НаборЗаписейДоходыИРасходы.Приход();
		КонецЕсли; 
		// Закроем переданные на комиссию автомобили
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(АвтомобилиОтданные.СуммаСебестоимостиУпр),0) КАК СуммаСебестоимостиУпр
		|ИЗ
		|	РегистрНакопления.АвтомобилиОтданные КАК АвтомобилиОтданные
		|ГДЕ
		|	АвтомобилиОтданные.Регистратор = &Регистратор";
		Запрос.УстановитьПараметр("Регистратор",ШапкаДокумента.Ссылка);
		Выборка=Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.СуммаСебестоимостиУпр<>0 Тогда
				НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
				НаборЗаписейДоходыИРасходы.ДокументОбъект=ЭтотОбъект;
				НаборЗаписейДоходыИРасходы.ШапкаДокумента=ШапкаДокумента;
				НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СебестоимостьНеоприходованныхПартий;
				НаборЗаписейДоходыИРасходы.ВУпрВалюте = Истина;
				НаборЗаписейДоходыИРасходы.Расход = Выборка.СуммаСебестоимостиУпр;
				НаборЗаписейДоходыИРасходы.Приход();
			КонецЕсли; 
		КонецЕсли; 		 
		Возврат НЕ Отказ;
	КонецЕсли;
	
	Отказ=Ложь;
	НаборЗаписейПартииОтданные = Движения.ПартииТоваровОтданные;
	НаборЗаписейПартииОтданные.ДокументОбъект        = ЭтотОбъект;
	НаборЗаписейПартииОтданные.Контрагент            = ШапкаДокумента.Контрагент;
	НаборЗаписейПартииОтданные.ДоговорВзаиморасчетов = ШапкаДокумента.ДоговорВзаиморасчетов;
	НаборЗаписейПартииОтданные.ОтчетКомиссионера     = Истина;
	НаборЗаписейПартииОтданные.ШапкаДокумента        = ШапкаДокумента;
	НаборЗаписейПартииОтданные.ЕстьАвтомобиль        = Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи КАК ДокументПередачи,
				|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Автомобиль КАК Автомобиль
				//|	ОтчетКомиссионераЗаАвтомобилиТовары.Номенклатура КАК Номенклатура
				|ПОМЕСТИТЬ
				|	ТаблицаАвтомобилей
				|ИЗ
				|	Документ.ОтчетКомиссионераЗаАвтомобили.Автомобили КАК ОтчетКомиссионераЗаАвтомобилиАвтомобили
				//|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				//|	Документ.ОтчетКомиссионераЗаАвтомобили.Товары КАК ОтчетКомиссионераЗаАвтомобилиТовары
				//|ПО
				//|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка = &Ссылка И 
				//|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка = ОтчетКомиссионераЗаАвтомобилиТовары.Ссылка И 
				//|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ИдентификаторАвтомобиля = ОтчетКомиссионераЗаАвтомобилиТовары.ИдентификаторАвтомобиля
				|ГДЕ
				|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка = &Ссылка
				|;
				|
				|ВЫБРАТЬ
				|	ПартииТоваровОтданные.Автомобиль КАК Автомобиль,
				|	ПартииТоваровОтданные.Номенклатура КАК Номенклатура,
				|	ПартииТоваровОтданные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
				|	ПартииТоваровОтданные.ДокументПередачи КАК ДокументПередачи,
				|	ПартииТоваровОтданные.Партия КАК Партия,
				|	ПартииТоваровОтданные.ГТД КАК ГТД,
				|	СУММА(ВЫБОР
				|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
				|			ПартииТоваровОтданные.Количество
				|		ИНАЧЕ
				|			-ПартииТоваровОтданные.Количество
				|	КОНЕЦ) КАК Количество,
				|	СУММА(ВЫБОР
				|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
				|			ПартииТоваровОтданные.Сумма
				|		ИНАЧЕ
				|			-ПартииТоваровОтданные.Сумма
				|	КОНЕЦ) КАК Сумма,
				|	СУММА(ВЫБОР
				|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
				|			ПартииТоваровОтданные.СуммаУпр
				|		ИНАЧЕ
				|			-ПартииТоваровОтданные.СуммаУпр
				|	КОНЕЦ) КАК СуммаУпр,
				|	СУММА(ВЫБОР
				|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
				|			ПартииТоваровОтданные.СуммаНДС
				|		ИНАЧЕ
				|			-ПартииТоваровОтданные.СуммаНДС
				|	КОНЕЦ) КАК СуммаНДС,
				|	СУММА(ВЫБОР
				|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
				|			ПартииТоваровОтданные.СуммаСебестоимостиУпр
				|		ИНАЧЕ
				|			-ПартииТоваровОтданные.СуммаСебестоимостиУпр
				|	КОНЕЦ) КАК СуммаСебестоимостиУпр
				|ИЗ
				|	РегистрНакопления.ПартииТоваровОтданные КАК ПартииТоваровОтданные
				|ГДЕ
				|	ПартииТоваровОтданные.Период <=&ДатаКон И 
				|	ПартииТоваровОтданные.Контрагент = &Контрагент И 
				|	ПартииТоваровОтданные.ДоговорВзаиморасчетов = &ДоговорВзаиморасчетов И 
				|	(ПартииТоваровОтданные.Автомобиль, ПартииТоваровОтданные.ДокументПередачи) В 
				|	(ВЫБРАТЬ
				|		ТаблицаАвтомобилей.Автомобиль,
				|		ТаблицаАвтомобилей.ДокументПередачи
				|	ИЗ
				|		ТаблицаАвтомобилей КАК ТаблицаАвтомобилей)
				|СГРУППИРОВАТЬ ПО
				|	ПартииТоваровОтданные.Автомобиль,
				|	ПартииТоваровОтданные.Номенклатура,
				|	ПартииТоваровОтданные.ХарактеристикаНоменклатуры,
				|	ПартииТоваровОтданные.ДокументПередачи,
				|	ПартииТоваровОтданные.Партия,
				|	ПартииТоваровОтданные.ГТД
				|";
	Запрос.УстановитьПараметр("ДатаКон",               ШапкаДокумента.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Ссылка",                ШапкаДокумента.Ссылка);
	Запрос.УстановитьПараметр("Контрагент",            ШапкаДокумента.Контрагент);
	Запрос.УстановитьПараметр("ДоговорВзаиморасчетов", ШапкаДокумента.ДоговорВзаиморасчетов);
	НаборЗаписейПартииОтданные.РезультатЗапросаПоПартиям = Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	             |	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Автомобиль КАК Автомобиль,
	             |	ОтчетКомиссионераЗаАвтомобилиТовары.Номенклатура КАК Номенклатура,
	             |	ОтчетКомиссионераЗаАвтомобилиТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	             |	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи КАК ДокументПередачи,
	             |	СУММА(ОтчетКомиссионераЗаАвтомобилиТовары.СуммаНДС) КАК СуммаНДС,
	             |	СУММА(ОтчетКомиссионераЗаАвтомобилиТовары.СуммаВсего) КАК СуммаВсего,
	             |	СУММА(ОтчетКомиссионераЗаАвтомобилиТовары.Количество * ОтчетКомиссионераЗаАвтомобилиТовары.Коэффициент) КАК Количество
	             |ИЗ
	             |	Документ.ОтчетКомиссионераЗаАвтомобили.Товары КАК ОтчетКомиссионераЗаАвтомобилиТовары
	             |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	             |	Документ.ОтчетКомиссионераЗаАвтомобили.Автомобили КАК ОтчетКомиссионераЗаАвтомобилиАвтомобили
	             |ПО
	             |	ОтчетКомиссионераЗаАвтомобилиТовары.Ссылка = &Ссылка И 
	             |	ОтчетКомиссионераЗаАвтомобилиТовары.Ссылка = ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка И 
	             |	ОтчетКомиссионераЗаАвтомобилиТовары.ИдентификаторАвтомобиля = ОтчетКомиссионераЗаАвтомобилиАвтомобили.ИдентификаторАвтомобиля
	             |ГДЕ
	             |	ОтчетКомиссионераЗаАвтомобилиТовары.Ссылка = &Ссылка
	             |	И ОтчетКомиссионераЗаАвтомобилиТовары.Номенклатура ССЫЛКА Справочник.Номенклатура
	             |СГРУППИРОВАТЬ ПО
	             |	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Автомобиль,
	             |	ОтчетКомиссионераЗаАвтомобилиТовары.Номенклатура,
	             |	ОтчетКомиссионераЗаАвтомобилиТовары.ХарактеристикаНоменклатуры,
	             |	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи";
	Запрос.УстановитьПараметр("Ссылка",ШапкаДокумента.Ссылка);
	НаборЗаписейПартииОтданные.РезультатЗапросаПоТоварам=Запрос.Выполнить();
	Отказ = НЕ НаборЗаписейПартииОтданные.Расход() ИЛИ Отказ;
	// Спишем переданные опции, установленные производителем
	Запрос = Новый Запрос;
	Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи,
			|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Автомобиль
			|ПОМЕСТИТЬ
			|	ТаблицаАвтомобилей
			|ИЗ
			|	Документ.ОтчетКомиссионераЗаАвтомобили.Автомобили КАК ОтчетКомиссионераЗаАвтомобилиАвтомобили
			|ГДЕ
			|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка = &Ссылка
			|;
			|
			|ВЫБРАТЬ
			|	ПартииТоваровОтданные.Автомобиль КАК Автомобиль,
			|	ПартииТоваровОтданные.Контрагент КАК Контрагент,
			|	ПартииТоваровОтданные.Номенклатура КАК Номенклатура,
			|	ПартииТоваровОтданные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	ПартииТоваровОтданные.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
			|	ПартииТоваровОтданные.ДокументПередачи КАК ДокументПередачи,
			|	ПартииТоваровОтданные.Партия КАК Партия,
			|	ПартииТоваровОтданные.ГТД КАК ГТД,
			|	СУММА(ВЫБОР
			|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			ПартииТоваровОтданные.Количество
			|		ИНАЧЕ
			|			-ПартииТоваровОтданные.Количество
			|	КОНЕЦ) КАК Количество,
			|	СУММА(ВЫБОР
			|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			ПартииТоваровОтданные.Сумма
			|		ИНАЧЕ
			|			-ПартииТоваровОтданные.Сумма
			|	КОНЕЦ) КАК Сумма,
			|	СУММА(ВЫБОР
			|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			ПартииТоваровОтданные.СуммаУпр
			|		ИНАЧЕ
			|			-ПартииТоваровОтданные.СуммаУпр
			|	КОНЕЦ) КАК СуммаУпр,
			|	СУММА(ВЫБОР
			|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			ПартииТоваровОтданные.СуммаНДС
			|		ИНАЧЕ
			|			-ПартииТоваровОтданные.СуммаНДС
			|	КОНЕЦ) КАК СуммаНДС,
			|	СУММА(ВЫБОР
			|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			ПартииТоваровОтданные.СуммаСебестоимостиУпр
			|		ИНАЧЕ
			|			-ПартииТоваровОтданные.СуммаСебестоимостиУпр
			|	КОНЕЦ) КАК СуммаСебестоимостиУпр,
			|	СУММА(ВЫБОР
			|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			ПартииТоваровОтданные.СуммаСебестоимостиРегл
			|		ИНАЧЕ
			|			-ПартииТоваровОтданные.СуммаСебестоимостиРегл
			|	КОНЕЦ) КАК СуммаСебестоимостиРегл
			|ИЗ
			|	РегистрНакопления.ПартииТоваровОтданные КАК ПартииТоваровОтданные
			|ГДЕ
			|	ПартииТоваровОтданные.Период <= &НаДату И 
			|	ПартииТоваровОтданные.Номенклатура = &ОпцияПроизводителя И 
			|	(ПартииТоваровОтданные.Автомобиль, ПартииТоваровОтданные.Регистратор) В 
			|	(ВЫБРАТЬ
			|		ТаблицаАвтомобилей.Автомобиль,
			|		ТаблицаАвтомобилей.ДокументПередачи
			|	ИЗ
			|		ТаблицаАвтомобилей КАК ТаблицаАвтомобилей)
			|СГРУППИРОВАТЬ ПО
			|	ПартииТоваровОтданные.Автомобиль,
			|	ПартииТоваровОтданные.Контрагент,
			|	ПартииТоваровОтданные.Номенклатура,
			|	ПартииТоваровОтданные.ХарактеристикаНоменклатуры,
			|	ПартииТоваровОтданные.ДоговорВзаиморасчетов,
			|	ПартииТоваровОтданные.ДокументПередачи,
			|	ПартииТоваровОтданные.Партия,
			|	ПартииТоваровОтданные.ГТД
			|";
	Запрос.УстановитьПараметр("НаДату",             ШапкаДокумента.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Ссылка",             ШапкаДокумента.Ссылка);
	Запрос.УстановитьПараметр("ОпцияПроизводителя", Справочники.Номенклатура.ОпцияПроизводителя);
	Выборка=Запрос.Выполнить().Выбрать();
	НаборЗаписейПартииОтданные=Движения.ПартииТоваровОтданные;
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписейПартииОтданные.Добавить();
		НоваяЗапись.ВидДвижения                = ВидДвиженияНакопления.Расход;
		НоваяЗапись.Период                     = ШапкаДокумента.Дата;
		НоваяЗапись.Регистратор                = ШапкаДокумента.Ссылка;
		НоваяЗапись.Контрагент                 = Выборка.Контрагент;
		НоваяЗапись.Автомобиль                 = Выборка.Автомобиль;
		НоваяЗапись.Номенклатура               = Выборка.Номенклатура;
		НоваяЗапись.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатуры;
		НоваяЗапись.ДоговорВзаиморасчетов      = Выборка.ДоговорВзаиморасчетов;
		НоваяЗапись.ДокументПередачи           = Выборка.ДокументПередачи;
		НоваяЗапись.Партия                     = Выборка.Партия;
		НоваяЗапись.ГТД                        = Выборка.ГТД;
		НоваяЗапись.Количество                 = Выборка.Количество;
		НоваяЗапись.Сумма                      = Выборка.Сумма;
		НоваяЗапись.СуммаУпр                   = Выборка.СуммаУпр;
		НоваяЗапись.СуммаНДС                   = Выборка.СуммаНДС;
		НоваяЗапись.СуммаСебестоимостиУпр      = Выборка.СуммаСебестоимостиУпр;
		НоваяЗапись.СуммаСебестоимостиРегл     = Выборка.СуммаСебестоимостиРегл;
		НоваяЗапись.ХозОперация                = ШапкаДокумента.ХозОперация;
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		НаборЗаписейПартииОтданные.Записать();
	КонецЕсли; 
	
	// продажи
	Если НЕ Отказ Тогда
		НаборЗаписейПродажи = Движения.Продажи;
		НаборЗаписейПродажи.ДокументОбъект        = ЭтотОбъект;
		НаборЗаписейПродажи.СкладКомпании         = Справочники.СкладыКомпании.ПустаяСсылка();
		НаборЗаписейПродажи.ДокументПродажи		  = ШапкаДокумента.ДокументПродажи;
		НаборЗаписейПродажи.Сторно                = Ложь;
		НаборЗаписейПродажи.Покупатель            = ШапкаДокумента.Контрагент;
		НаборЗаписейПродажи.ДоговорВзаиморасчетов = ШапкаДокумента.ДоговорВзаиморасчетов;
		НаборЗаписейПродажи.ПодразделениеКомпании = ШапкаДокумента.ПодразделениеКомпании;
		НаборЗаписейПродажи.Комиссия              = Истина;
		НаборЗаписейПродажи.ЕстьАвтомобиль        = Истина;
		НаборЗаписейПродажи.ШапкаДокумента        = ШапкаДокумента;
		Запрос=Новый Запрос("
							|ВЫБРАТЬ РАЗЛИЧНЫЕ
							|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи КАК ДокументПередачи,
							|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Автомобиль КАК Автомобиль
							//|	ОтчетКомиссионераЗаАвтомобилиТовары.Номенклатура КАК Номенклатура,
							//|	ОтчетКомиссионераЗаАвтомобилиТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
							|ПОМЕСТИТЬ
							|	ТаблицаАвтомобилей
							|ИЗ
							|	Документ.ОтчетКомиссионераЗаАвтомобили.Автомобили КАК ОтчетКомиссионераЗаАвтомобилиАвтомобили
							//|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
							//|	Документ.ОтчетКомиссионераЗаАвтомобили.Товары КАК ОтчетКомиссионераЗаАвтомобилиТовары
							//|ПО
							//|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка = &Ссылка И 
							//|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка = ОтчетКомиссионераЗаАвтомобилиТовары.Ссылка И 
							//|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ИдентификаторАвтомобиля = ОтчетКомиссионераЗаАвтомобилиТовары.ИдентификаторАвтомобиля
							|ГДЕ
							|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка = &Ссылка
							|;
							|
							|ВЫБРАТЬ
							|	КомплектацияАвтомобилей.Автомобиль КАК Автомобиль,
							|	КомплектацияАвтомобилей.Номенклатура КАК Номенклатура,
							|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
							|	КомплектацияАвтомобилей.Партия КАК Партия,
							|	КомплектацияАвтомобилей.ГТД КАК ГТД,
							|	КомплектацияАвтомобилей.СтавкаНДС,
							|	СУММА(КомплектацияАвтомобилей.Количество) КАК Количество,
							|	СУММА(КомплектацияАвтомобилей.Сумма) КАК Сумма,
							|	СУММА(КомплектацияАвтомобилей.СуммаУпр) КАК СуммаУпр,
							|	СУММА(КомплектацияАвтомобилей.СуммаНДС) КАК СуммаНДС,
							|	СУММА(КомплектацияАвтомобилей.СуммаНДС) КАК СуммаНДСУпр
							|ИЗ
							|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
							|ГДЕ
							|	КомплектацияАвтомобилей.ВидДвижения = &ВидДвижения И 
							|	КомплектацияАвтомобилей.Партия В (&Партии) И 
							|	КомплектацияАвтомобилей.СтатусПартии = &СтатусПартии И 
							|	(КомплектацияАвтомобилей.Автомобиль, КомплектацияАвтомобилей.Регистратор) В 
							|	(ВЫБРАТЬ
							|		ТаблицаАвтомобилей.Автомобиль,
							|		ТаблицаАвтомобилей.ДокументПередачи
							|	ИЗ
							|		ТаблицаАвтомобилей КАК ТаблицаАвтомобилей)
							|
							|СГРУППИРОВАТЬ ПО
							|	КомплектацияАвтомобилей.Автомобиль,
							|	КомплектацияАвтомобилей.Номенклатура,
							|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры,
							|	КомплектацияАвтомобилей.Партия,
							|	КомплектацияАвтомобилей.ГТД,
							|	КомплектацияАвтомобилей.Регистратор,
							|	КомплектацияАвтомобилей.СтавкаНДС");
		Запрос.УстановитьПараметр("ВидДвижения",  ВидДвиженияНакопления.Расход);
		Запрос.УстановитьПараметр("СтатусПартии", Перечисления.СтатусыПартий.ТоварКупленный);
		Запрос.УстановитьПараметр("Ссылка",       ШапкаДокумента.Ссылка);
		Запрос.УстановитьПараметр("Партии",       НаборЗаписейПартииОтданные.ВыгрузитьКолонку("Партия"));
		НаборЗаписейПродажи.КэшСебестоимостиПриКомиссии = Запрос.Выполнить().Выгрузить();
		Отказ = НЕ НаборЗаписейПродажи.Приход() ИЛИ Отказ;
	КонецЕсли;
	
	НаборЗаписейПартииТоваровОтданные=Движения.ПартииТоваровОтданные;
	СебестоимостьАвтомобилейУпр  = 0;
	СебестоимостьОборудованияУпр = НаборЗаписейПартииТоваровОтданные.Итог("СуммаСебестоимостиУпр");
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(АвтомобилиОтданные.СуммаСебестоимостиУпр),0) КАК СуммаСебестоимостиУпр
	|ИЗ
	|	РегистрНакопления.АвтомобилиОтданные КАК АвтомобилиОтданные
	|ГДЕ
	|	АвтомобилиОтданные.Регистратор = &Регистратор";
	Запрос.УстановитьПараметр("Регистратор",ШапкаДокумента.Ссылка);
	Выборка=Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СебестоимостьАвтомобилейУпр = Выборка.СуммаСебестоимостиУпр;
	КонецЕсли; 
	// Доходы и расходы
	// сумма себестоимости списанных автомобилей.
	Если СебестоимостьАвтомобилейУпр <> 0 Тогда
		НаборЗаписейДоходыИРасходы = Движения.ДоходыИРасходы;
		НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
		Если БалансВедетсяПоПодразделениям Тогда
			НаборЗаписейДоходыИРасходы.Подразделение      = ШапкаДокумента.ДоговорВзаиморасчетов.ПодразделениеКомпании;
		КонецЕсли; 
		НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СебестоимостьАвтомобилей;
		НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
		НаборЗаписейДоходыИРасходы.Расход                 = СебестоимостьАвтомобилейУпр;
		НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
		Отказ=НЕ НаборЗаписейДоходыИРасходы.Приход() ИЛИ Отказ;
	КонецЕсли;
	
	Если СебестоимостьОборудованияУпр <> 0 Тогда
		НаборЗаписейДоходыИРасходы = Движения.ДоходыИРасходы;
		НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
		Если БалансВедетсяПоПодразделениям Тогда
			НаборЗаписейДоходыИРасходы.Подразделение      = ШапкаДокумента.ДоговорВзаиморасчетов.ПодразделениеКомпании;
		КонецЕсли; 
		НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.Себестоимость;
		НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
		НаборЗаписейДоходыИРасходы.Расход                 = СебестоимостьОборудованияУпр;
		НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
		Отказ=НЕ НаборЗаписейДоходыИРасходы.Приход() ИЛИ Отказ;
	КонецЕсли;
	
	// Определим суммы по подразделениям
	// подготовим таблицу для накопления сумм по подразделениям.
	ТаблицаСуммПоПодразделениям = Новый ТаблицаЗначений();
	ТаблицаСуммПоПодразделениям.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияКомпании"));
	ТаблицаСуммПоПодразделениям.Колонки.Добавить("СуммаВсего",     Новый ОписаниеТипов("Число"));
	ТаблицаСуммПоПодразделениям.Колонки.Добавить("Вознаграждение", Новый ОписаниеТипов("Число"));
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
				 |	ОбъединенныйЗапрос.Подразделение КАК Подразделение,
				 |	ЕСТЬNULL(СУММА(ОбъединенныйЗапрос.СуммаВсего),0) КАК СуммаВсего,
				 |	ЕСТЬNULL(СУММА(ОбъединенныйЗапрос.Вознаграждение),0) КАК Вознаграждение
				 |ИЗ(
				 |ВЫБРАТЬ
				 |	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи.ДоговорВзаиморасчетов.ПодразделениеКомпании КАК Подразделение,
				 |	ЕСТЬNULL(СУММА(ОтчетКомиссионераЗаАвтомобилиАвтомобили.СуммаВсего),0) КАК СуммаВсего,
				 |	ЕСТЬNULL(СУММА(ОтчетКомиссионераЗаАвтомобилиАвтомобили.Вознаграждение),0) КАК Вознаграждение
				 |ИЗ
				 |	Документ.ОтчетКомиссионераЗаАвтомобили.Автомобили КАК ОтчетКомиссионераЗаАвтомобилиАвтомобили
				 |ГДЕ
				 |	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка = &Ссылка
				 |СГРУППИРОВАТЬ ПО
				 |	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи.ДоговорВзаиморасчетов.ПодразделениеКомпании
				 |
				 |ОБЪЕДИНИТЬ ВСЕ
				 |
				 |ВЫБРАТЬ
				 |	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи.ДоговорВзаиморасчетов.ПодразделениеКомпании,
				 |	ЕСТЬNULL(СУММА(ОтчетКомиссионераЗаАвтомобилиТовары.СуммаВсего),0),
				 |	ЕСТЬNULL(СУММА(ОтчетКомиссионераЗаАвтомобилиТовары.Вознаграждение),0)
				 |ИЗ
				 |	Документ.ОтчетКомиссионераЗаАвтомобили.Товары КАК ОтчетКомиссионераЗаАвтомобилиТовары
				 |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераЗаАвтомобили.Автомобили КАК ОтчетКомиссионераЗаАвтомобилиАвтомобили
				 |		ПО ОтчетКомиссионераЗаАвтомобилиТовары.ИдентификаторАвтомобиля = ОтчетКомиссионераЗаАвтомобилиАвтомобили.ИдентификаторАвтомобиля
				 |ГДЕ
				 |	ОтчетКомиссионераЗаАвтомобилиТовары.Ссылка = &Ссылка
				 |СГРУППИРОВАТЬ ПО
				 |	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи.ДоговорВзаиморасчетов.ПодразделениеКомпании
				 |)КАК ОбъединенныйЗапрос
				 |
				 |СГРУППИРОВАТЬ ПО
				 |	ОбъединенныйЗапрос.Подразделение";
	Запрос.УстановитьПараметр("Ссылка",ШапкаДокумента.Ссылка);
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСумм = ТаблицаСуммПоПодразделениям.Добавить();
		Если БалансВедетсяПоПодразделениям Тогда
			СтрокаСумм.Подразделение  = Выборка.Подразделение;
		Иначе
			СтрокаСумм.Подразделение  = ШапкаДокумента.ПодразделениеКомпании;
		КонецЕсли;
		СтрокаСумм.СуммаВсего     = Выборка.СуммаВсего;
		СтрокаСумм.Вознаграждение = Выборка.Вознаграждение;
	КонецЦикла; 
	ТаблицаСуммПоПодразделениям.Свернуть("Подразделение","СуммаВсего,Вознаграждение");
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	КурсУпр = ?(Не ЗначениеЗаполнено(ШапкаДокумента.КурсВалютыУпр), ШапкаДокумента.Дата, ШапкаДокумента.КурсВалютыУпр);
	Для Каждого СтрокаСумм Из ТаблицаСуммПоПодразделениям Цикл
		// Сумма комиссионного вознаграждения
		НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
		НаборЗаписейДоходыИРасходы.ДокументОбъект=ЭтотОбъект;
		НаборЗаписейДоходыИРасходы.Подразделение=СтрокаСумм.Подразделение;
		НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов=Справочники.СтатьиДоходовИРасходов.Вознаграждение;
		НаборЗаписейДоходыИРасходы.ВУпрВалюте=Истина;
		НаборЗаписейДоходыИРасходы.Расход=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаСумм.Вознаграждение,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр);
		НаборЗаписейДоходыИРасходы.ШапкаДокумента=ШапкаДокумента;
		Отказ=НЕ НаборЗаписейДоходыИРасходы.Приход() ИЛИ Отказ;
		
		Если ШапкаДокумента.СуммаАвтомобилей <> 0 Тогда
			// СуммаВсего - списанная сумма товарной задолженности
			НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
			НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
			НаборЗаписейДоходыИРасходы.Подразделение          = СтрокаСумм.Подразделение;
			НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
			НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.НачислениеДебиторскойЗадолженностиПоАвтомобилям;
			НаборЗаписейДоходыИРасходы.Доход                  = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ШапкаДокумента.СуммаАвтомобилей , ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр,КурсУпр);
			НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
			Отказ=НЕ НаборЗаписейДоходыИРасходы.Приход() ИЛИ Отказ;
		КонецЕсли;
		Если ШапкаДокумента.СуммаДопОборудования <> 0 Тогда
			// СуммаВсего - списанная сумма товарной задолженности
			НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
			НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
			НаборЗаписейДоходыИРасходы.Подразделение          = СтрокаСумм.Подразделение;
			НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
			НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.НачислениеДебиторскойЗадолженностиПоТовару;
			НаборЗаписейДоходыИРасходы.Доход                  = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ШапкаДокумента.СуммаДопОборудования, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр);
			НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
			Отказ=НЕ НаборЗаписейДоходыИРасходы.Приход() ИЛИ Отказ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НЕ Отказ;
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
