
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипЦен = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТипЦен", Справочники.ТипыЦен.ПустаяСсылка());
	Курс   = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Курс", 1);
	Дата   = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Дата", ТекущаяДатаСеанса());
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВладелецФормы = Неопределено Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Запрещен самостоятельный вызов.'"),,
			НСтр("ru = 'Данная форма используется другими объектами конфигурации.'"),
			БиблиотекаКартинок.Предупреждение32,
			СтатусОповещенияПользователя.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТолькоПросмотр = ВладелецФормы.ТолькоПросмотр;
	
	ТипЦенПриИзменении(Элементы.ТипЦен);
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	УправлениеДиалогомКлиент.ПроверитьМодифицированностьДанныхПриЗакрытии(ЭтотОбъект,Отказ,Новый ОписаниеОповещения("Подключаемый_ПередЗакрытием", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ТипЦенПриИзмененииНаСервере()
	
	ВалютаЦены = ТипЦен.ВалютаЦены;
	
	Если ЗначениеЗаполнено(ВалютаЦены) Тогда
		Если ТипЦен.ВВалютеУчета Тогда
			Элементы.НадписьОтношениеВалют.Видимость = Ложь;
			Элементы.Курс.Видимость       = Ложь;
			Элементы.НадписьВВалютеУчетаНоменклатуры.Видимость = Истина;
		Иначе
			Элементы.НадписьОтношениеВалют.Видимость = Истина;
			Элементы.Курс.Видимость       = Истина;
			Элементы.НадписьВВалютеУчетаНоменклатуры.Видимость = Ложь;
			ВалютаУпрУчета    = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
			СтруктураКурсаУпр = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпрУчета, Дата);
			
			НоваяВалюта    = ВалютаЦены;
			СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(НоваяВалюта, Дата);
			
			Курс = ( СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность) ) / ( СтруктураКурсаУпр.Курс / ?(СтруктураКурсаУпр.Кратность = 0, 1, СтруктураКурсаУпр.Кратность) );
			
			Если НоваяВалюта = ВалютаУпрУчета Тогда
				Элементы.Курс.Доступность = Ложь;
			Иначе
				Элементы.Курс.Доступность = Истина;
			КонецЕсли;
			
			Элементы.НадписьОтношениеВалют.Заголовок = "" + НоваяВалюта + "/" + ВалютаУпрУчета;
		КонецЕсли;
	Иначе
		Элементы.НадписьОтношениеВалют.Видимость = Ложь;
		Элементы.Курс.Видимость       = Ложь;
		Элементы.НадписьВВалютеУчетаНоменклатуры.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЦенПриИзменении(Элемент)
	
	ТипЦенПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Новый Структура();
	Результат.Вставить("КурсДокумента", Курс);
	Результат.Вставить("ТипЦен",        ТипЦен);
	Модифицированность = Ложь;
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик события возникающего при выполнении оповещения данной формы о прекращении работы подчиненной.
//
// Параметры:
//  РезультатОповещения     - Произвольный - Результат выполнения операции в подчиненной форме.
//  ДополнительныеПараметры - Структура - Содержит процедуру в которую будет передан ответ на вопрос и формы из которой
//                                        вызвано оповещение.
//
&НаКлиенте
Процедура Подключаемый_ПередЗакрытием(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОК(Неопределено);
	
КонецПроцедуры //Подключаемый_ПередЗакрытием()

#КонецОбласти

