///////////////////////////////////////////////////////////////////////////////
// Модуль формы "ФормаОтбора"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Определим тип контактной информации
	Если Параметры.ХозОперация = Справочники.ХозОперации.Телемаркетинг ИЛИ Параметры.ХозОперация = Справочники.ХозОперации.РассылкаSMS Тогда
		ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон;
	ИначеЕсли Параметры.ХозОперация = Справочники.ХозОперации.ПочтоваяРассылка Тогда
		ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Адрес;
	ИначеЕсли Параметры.ХозОперация = Справочники.ХозОперации.ЭлектроннаяРассылка Тогда
		ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте при открытии формы, до показа окна пользователю.
//
// Параметры:
//  Отказ - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Настроим компоновщик
	НастроитьОтборПоКонтрагенту(ВладелецФормы.УникальныйИдентификатор);
	
	// Добавим список выбора вида контактной информации в зависимости от типа контактной информации.
	Если НЕ ТипКонтактнойИнформации.Пустая() Тогда
		
		// Получим список контактной информации
		Список = ВидыКонтактнойИнформации();
		
		Для Каждого ЭлементСписка Из Список Цикл
			
			Элементы.ВидыКонтактнойИнформации.СписокВыбора.Добавить(ЭлементСписка.Значение,ЭлементСписка.Представление, ЭлементСписка.Пометка);
			
		КонецЦикла;
		
		// Зададим значение по умолчанию
		ВидыКонтактнойИнформации = Список[0].Значение;
		
	КонецЕсли;
	
	Элементы.КомпоновщикНастроекНастройкиОтбор.РастягиватьПоГоризонтали = Истина;
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик нажатия кнопки Применить.
//
&НаКлиенте
Процедура Применить(Команда)
	
	// Определим параметры закрытия
	ПараметрыЗакрытия = Новый Структура();
	ПараметрыЗакрытия.Вставить("КомпоновщикНастроек",КомпоновщикНастроек);
	ПараметрыЗакрытия.Вставить("АдресСхемыКомпоновкиДанных", АдресСхемыКомпоновкиДанных);
	ПараметрыЗакрытия.Вставить("ВидКонтактнойИнформации", ВидыКонтактнойИнформации);
	
	Для Каждого Элемент Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		
		Если Элемент.Использование И Не ЗначениеЗаполнено(Элемент.ПравоеЗначение) Тогда
			
			Элемент.Использование = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Закроем форму с параметрами
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура настройки отбора
//
&НаСервере
Процедура НастроитьОтборПоКонтрагенту(ВладелецФормыУникальныйИдентификатор)
	
	// Получим макет
	СхемаКомпоновкиДанных = Документы.Рассылка.ПолучитьМакет("МакетОтбора");
	
	// Зададим уникальные адрес
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ВладелецФормыУникальныйИдентификатор);
	
	// Инициализация и настройка компоновщика
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры // НастроитьОтборПоКонтрагенту()

// Функция получения списка видов контактной информации
//
&НаСервере
Функция ВидыКонтактнойИнформации()
	
	// Запрос на получение видов контактной информации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ВидыКонтактнойИнформации.Ссылка,
	               |	ВидыКонтактнойИнформации.Наименование,
	               |	ВидыКонтактнойИнформации.Родитель
	               |ИЗ
	               |	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	               |ГДЕ
	               |	ВидыКонтактнойИнформации.Тип = &Тип
	               |	И ВидыКонтактнойИнформации.Родитель = &Родитель";
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("Тип", ТипКонтактнойИнформации);
	Запрос.УстановитьПараметр("Родитель", Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Установим вспомогательные параметры
	УстановитьПометку = Истина;
	СписокЗначений    = Новый СписокЗначений;
	
	// Делаем перебор выборки
	Пока Выборка.Следующий() Цикл
		
		// Добавляем элемент в список значений
		НоваяСтрока = СписокЗначений.Добавить();
		НоваяСтрока.Значение = Выборка.Ссылка;
		НоваяСтрока.Представление = Выборка.Наименование;
		НоваяСтрока.Пометка = УстановитьПометку;
		УстановитьПометку = Ложь;
		
	КонецЦикла;
	
	// Вернем сформированный список
	Возврат СписокЗначений;
	
КонецФункции // ВидыКонтактнойИнформации()

#КонецОбласти

