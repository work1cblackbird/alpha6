#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);

	НалоговыйДокумент = ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, Объект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании = ОбменСКонтрагентами.ПараметрыПриСозданииНаСервере_ФормаДокумента();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.ДокументССылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.КонтроллерСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ПараметрыЭДОПриСоздании.МестоРазмещенияКоманд = Элементы.ПодменюЭДО;
	
	ОбменСКонтрагентами.ПриСозданииНаСервере_ФормаДокумента(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	// УтверждениеДокументов
	УтверждениеДокументовСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец УтверждениеДокументов
	
	// СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	УчетОригиналовПервичныхДокументовАльфаАвто.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ОграничитьВыборКонтактныхЛиц(Элементы.Контрагент);
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	
	РазрешитьРедактированиеЦенИСумм = ПраваИНастройкиПользователя.Значение("РедактированиеЦенИСуммВНоменклатурныхТаблицах", Объект);
	РаботаСФормой.РазрешитьРедактированиеЦенИСумм(
		РаботаСФормой.ТиповыеПоляСуммовыхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм
	);
	РаботаСФормой.ОткрытьФормуТолькоДляПросмотра(ЭтотОбъект, Объект);
	
	Если ТипЗнч(Параметры.Основание) = Тип("Структура") Тогда
		ЗаказНаАвтомобиль = Параметры.Основание.ЗаказНаАвтомобиль;
		УникальныйИдентификаторФормыЗаказа = Параметры.УникальныйИдентификатор;
	КонецЕсли;
	
	УстановитьАктуальныйЗаказНаАвтомобиль();
	НадписьЗаказНаАвтомобиль = АвтомобилиСПробегомКлиентСервер.СформироватьНадписьTradeIn(ЗаказНаАвтомобиль);
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// ПрослеживаемыеТовары
		ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара();
		// Конец ПрослеживаемыеТовары
		
		РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект);
		
		УправлениеДиалогомАльфаАвтоСервер.ПриСозданииНаСервере(ЭтотОбъект);
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
		
		Основание = Объект.ДокументОснование;
		Если ЗначениеЗаполнено(Основание) И Объект.Контрагент.ОсвобожденОтНДС Тогда
			Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказНаАвтомобиль") Тогда
				Если Объект.Автомобили.Количество() <> 0 И Основание.ТрейдИн Тогда
					Объект.Автомобили[0].СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Установим вариант отображения цен и сумм
	ЗащищенныеФункцииАльфаАвтоСервер.УстановитьДоступностьКолонокЦенИСуммАвтомобилей(ЭтотОбъект);
	
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец УтверждениеДокументов
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ОбновитьОтчетОРаспределении();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия=Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
	ПараметрыДействия = Новый Структура;
	// Производим подготовку параметров события для обработки в контексте сервера
	Если ИмяСобытия = "ОбновитьVINАвтомобиля" Тогда
		НайденныеАвтомобили = Объект.Автомобили.НайтиСтроки(Новый Структура("Автомобиль", Источник));
		
		Для Каждого Автомобиль Из НайденныеАвтомобили Цикл
			Автомобиль.VIN = Параметр;
		КонецЦикла;
		
		ЭтотОбъект.Модифицированность = НайденныеАвтомобили.Количество() > 0;
		
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыОповещения = ОбменСКонтрагентамиКлиент.ПараметрыОповещенияЭДО_ФормаДокумента();
	ПараметрыОповещения.Форма = ЭтотОбъект;
	ПараметрыОповещения.ДокументСсылка = Объект.Ссылка;
	ПараметрыОповещения.КонтроллерСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыОповещения.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	
	ОбменСКонтрагентамиКлиент.ОбработкаОповещения_ФормаДокумента(ИмяСобытия, Параметр, Источник, ПараметрыОповещения);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец УтверждениеДокументов
	
	// СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	УчетОригиналовПервичныхДокументовКлиент.ОбработчикОповещенияФормаДокумента(ИмяСобытия,ЭтотОбъект);
	// Конец СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	
	РаботаСФормойКлиент.ТребуетсяОбновитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, ИмяСобытия);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения	
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании = ОбменСКонтрагентами.ПараметрыПриЧтенииНаСервере_ФормаДокумента();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.ДокументСсылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.МестоРазмещенияКоманд = Элементы.ПодменюЭДО;
	ПараметрыЭДОПриСоздании.КонтроллерСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ОбменСКонтрагентами.ПриЧтенииНаСервере_ФормаДокумента(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// ПрослеживаемыеТовары
	ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара();
	// Конец ПрослеживаемыеТовары
	
	РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект);
	
	УправлениеДиалогомАльфаАвтоСервер.ПриЧтенииНаСервере(ЭтотОбъект);
	НастроитьПараметрыВыбораЭлементовФормы();
	ЗаказНаАвтомобиль = АвтомобилиСПробегомСервер.СвязанныйЗаказ(Объект.Ссылка);
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
	НалоговыйДокумент = ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ПоступлениеАвтомобилей", ПараметрыЗаписи.РежимЗаписи,
		Объект.Автомобили.Количество() > 50);
		
	Отказ = Отказ Или РаботаСФормойКлиент.НачатьПроверкуПодразделенияДокументаИПользователя(
		Объект.ПодразделениеКомпании,
		Новый ОписаниеОповещения(
			"ПроверкаПодразделенияДокументаИПользователяЗавершение",
			ЭтотОбъект,
			Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)
		)
	);
	
	Если НЕ ЗаказНаАвтомобильАктуален() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗаписатьСтатусы(Отказ);
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	Если НЕ ЭтотОбъект.Элементы.Найти("НадписьНалоговыйДокумент") = Неопределено Тогда
		ЭтотОбъект.НалоговыйДокумент = ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыПослеЗаписи = ОбменСКонтрагентами.ПараметрыПослеЗаписиНаСервере();
	ПараметрыПослеЗаписи.Форма = ЭтотОбъект;
	ПараметрыПослеЗаписи.ДокументСсылка = Объект.Ссылка;
	ПараметрыПослеЗаписи.КонтроллерСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыПослеЗаписи.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;

	ОбменСКонтрагентами.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ПараметрыПослеЗаписи);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	Если Объект.TradeIn Тогда
		Если ЗначениеЗаполнено(УникальныйИдентификаторФормыЗаказа) Тогда
			РазблокироватьДанныеДляРедактирования(, УникальныйИдентификаторФормыЗаказа);
		КонецЕсли;
		
		АвтомобилиСПробегомВызовСервера.СвязатьСПоступлениемАвтомобилей(ЗаказНаАвтомобиль, Объект.Ссылка);
	КонецЕсли;
	
	УправлениеДиалогомАльфаАвтоСервер.ПриЧтенииНаСервере(ЭтотОбъект);
	ЗаказНаАвтомобиль = АвтомобилиСПробегомСервер.СвязанныйЗаказ(Объект.Ссылка);
	НадписьЗаказНаАвтомобиль = АвтомобилиСПробегомКлиентСервер.СформироватьНадписьTradeIn(ЗаказНаАвтомобиль);
	
	// ПрослеживаемыеТовары
	ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара();
	// Конец ПрослеживаемыеТовары
	
	РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	ОбновитьПоставщикаВАвтомобилях();
	ПроверитьСрокДействияКоммерческогоПредложения(ПараметрыЗаписи);
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормойКлиент.ОповеститьОЗаписиДокумента(Объект.Ссылка);
	РаботаСФормойКлиент.ОбновитьПодчиненныеСчета(Объект.Ссылка, Неопределено);
	
	ПредупредитьПользователя(ПараметрыЗаписи);
	ЗаписатьСсылкуНаДокументВПараметрыОписанияОповещенияОЗакрытии();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусАвтомобиляПриИзменении(Элемент)
	
	СтатусАвтомобиляПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СтатусАвтомобиляПриИзмененииНаСервере()
	
	Если НЕ Объект.СтатусАвтомобиля.ЗаказПоставщику Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
			НСтр("ru = 'Статус автомобиля <%1> не может быть использован для документов <Поступление Автомобилей>.'"),
			Объект.СтатусАвтомобиля)
		);
		Объект.СтатусАвтомобиля = Справочники.СтатусыАвтомобилей.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПоступлениеАвтомобилей.ДатаПриИзменении(Объект, ПараметрыДействия);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПоступлениеАвтомобилей.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);

	ПараметрыДействия = Новый Структура;
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура СкладКомпанииПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СкладКомпанииПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СкладКомпанииПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПоступлениеАвтомобилей.СкладКомпанииПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	КонтрагентПриИзмененииНаСервере(ПараметрыДействия);
	
	Если Объект.Автомобили.Количество() = 0 Тогда
		ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	Иначе
		ПоказатьВопросОПерезаполненииПризнакаПриобретенУФизЛица(ПараметрыДействия);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПоступлениеАвтомобилей.КонтрагентПриИзменении(Объект, ПараметрыДействия);
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Объект.Контрагент, ПараметрыДействия);
	ПриИзмененииКлючевыхРеквизитовСостояниеЭДО();
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорВзаиморасчетовПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПоступлениеАвтомобилей.ДоговорВзаиморасчетовПриИзменении(Объект, ПараметрыДействия);
	ПриИзмененииКлючевыхРеквизитовСостояниеЭДО();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура TradeInПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	ОбновитьОтчетОРаспределении();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЗаказНаАвтомобильОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПереченьДействий = АвтомобилиСПробегомКлиентСервер.НадписьTradeInДействия();
	
	Если НавигационнаяСсылкаФорматированнойСтроки = ПереченьДействий.Выбрать Тогда
		ВыборЗаказНаАвтомобильНачало();
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = ПереченьДействий.Сбросить Тогда
		ЗаказНаАвтомобиль = Неопределено;
		УстановитьЗаказНаАвтомобиль();
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "e1cib/data/") Тогда
		ПерейтиПоНавигационнойСсылке(НавигационнаяСсылкаФорматированнойСтроки);
	Иначе
		ВызватьИсключение НСтр("ru = 'Не реализован обработчик операции'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаКРаспределениюПриИзменении(Элемент)
	
	Если СуммаКРаспределению > Объект.Автомобили.Итог("СуммаВсего") Тогда
		СуммаКРаспределению = 0;
		ВызватьИсключение НСтр("ru = 'Сумма распределения превышает сумму документа'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыНаАвтомобильВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ЗаказыНаАвтомобильВыбрать" Тогда
		ВыборЗаказНаАвтомобильЗавершение(ЗаказыНаАвтомобиль[ВыбраннаяСтрока].Документ, Неопределено);
		Элементы.ГруппаЗаказыНаАвтомобиль.Скрыть();
	ИначеЕсли Поле.Имя = "ЗаказыНаАвтомобильДокумент" Тогда
		ПоказатьЗначение(, ЗаказыНаАвтомобиль[ВыбраннаяСтрока].Документ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСостояниеЭДОНажатие(Элемент)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ОбменСКонтрагентамиКлиент.СостояниеЭДОНажатие_ФормаДокумента(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоУниверсальныйДокументПриИзменении(Элемент)
	УправлениеДиалогомНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СпособЗачетаАвансовПриИзменении(Элемент)
	
	СпособЗачетаАвансовПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СпособЗачетаАвансовПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАвтомобили

&НаКлиенте
Процедура АвтомобилиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПередНачаломДобавления(ЭтаФорма, Элемент, Отказ, Копирование, Родитель, Группа, Параметр);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПередНачаломИзменения(Элемент, Отказ)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПередНачаломИзменения(ЭтаФорма, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПередУдалением(Элемент, Отказ)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПередУдалением(ЭтотОбъект, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПослеУдаления(Элемент)
	
	АвтомобилиПослеУдаленияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиПослеУдаленияНаСервере(ПараметрыДействия = Неопределено)
	
	УправлениеДиалогомАльфаАвтоСервер.АвтомобилиПослеУдаления(ЭтотОбъект, Элементы.Автомобили);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПроверкаПеретаскивания(ЭтаФорма, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПриНачалеРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, Копирование);
	
КонецПроцедуры

#Область ОбработчикиСобытийПолейТаблицыФормыАвтомобили

&НаКлиенте
Процедура АвтомобилиАвтомобильПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	АвтомобилиАвтомобильПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиАвтомобильПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ПоступлениеАвтомобилей.АвтомобилиАвтомобильПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(ТекущиеДанные.Автомобиль, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиЦенаПриИзменении(Элемент)
	
	АвтомобилиЦенаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиЦенаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ПоступлениеАвтомобилей.АвтомобилиЦенаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиСуммаПриИзменении(Элемент)
	
	АвтомобилиСуммаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиСуммаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ПоступлениеАвтомобилей.АвтомобилиСуммаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиСуммаВсегоПриИзменении(Элемент)

	АвтомобилиСуммаВсегоПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиСуммаВсегоПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ПоступлениеАвтомобилей.АвтомобилиСуммаВсегоПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиСтавкаНДСПриИзменении(Элемент)
	
	АвтомобилиСтавкаНДСПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиСтавкаНДСПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ПоступлениеАвтомобилей.АвтомобилиСтавкаНДСПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиСуммаНДСПриИзменении(Элемент)
	
	АвтомобилиСуммаНДСПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиСуммаНДСПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ПоступлениеАвтомобилей.АвтомобилиСуммаНДСПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиЗаказНаАвтомобильПриИзменении(Элемент)
	
	АвтомобилиЗаказНаАвтомобильПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиЗаказНаАвтомобильПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ПоступлениеАвтомобилей.АвтомобилиЗаказНаАвтомобиль(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиЗаказНаАвтомобильНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Отбор = Новый Структура(
		"Автомобиль",
		Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока).Автомобиль
	);
	Отбор.Вставить("АктивныйЗаказ" , Истина);
	
	Если Не Объект.Контрагент.Пустая() Тогда
		
		Отбор.Вставить("Контрагент", Объект.Контрагент);
		
	КонецЕсли;
	
	НовыйПараметрВыбора = Новый ПараметрВыбора("Отбор", Отбор);
	
	НоваяКоллекцияПараметров = Новый Массив;
	НоваяКоллекцияПараметров.Добавить(НовыйПараметрВыбора);
	Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(НоваяКоллекцияПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиАвтомобильБезЗаказаПриИзменении(Элемент)
	
	АвтомобилиАвтомобильБезЗаказаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиАвтомобильБезЗаказаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ПоступлениеАвтомобилей.АвтомобилиАвтомобильБезЗаказа(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийПолейТаблицыФормыЗачетАвансов

&НаСервере
Процедура ЗачетАвансовДокументАвансаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.ЗачетАвансов.НайтиПоИдентификатору(Элементы.ЗачетАвансов.ТекущаяСтрока);
	Документы.ПоступлениеАвтомобилей.ЗачетАвансовДокументАвансаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗачетАвансовДокументАвансаПриИзменении(Элемент)
	
	ЗачетАвансовДокументАвансаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура TradeInРаспределить(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		ВызватьИсключение НСтр("ru = 'Документ должен быть записан'");
	КонецЕсли;
	
	TradeInРаспределениеВозможно();
	АвтомобилиСПробегомВызовСервера.РаспределитьДеньгиНаЗаказ(Объект.Ссылка, ЗаказНаАвтомобиль, СуммаКРаспределению);
	ОбновитьОтчетОРаспределении();
	СуммаКРаспределению = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтчетОРаспределении(Команда = Неопределено)
	
	Если Объект.TradeIn И НЕ Объект.Ссылка.Пустая() И НЕ ЗаказНаАвтомобиль.Пустая() Тогда
		АвтомобилиСПробегомКлиент.НачатьОбновлениеИнформацииОРаспределении(
			ЭтотОбъект,
			Объект.Ссылка,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЗаказНаАвтомобиль),
			"Заказ"
		);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВыборЗаказаНаАвтомобиль(Команда)
	
	Элементы.ГруппаЗаказыНаАвтомобиль.Скрыть();
	ВыборЗаказНаАвтомобильНачало();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьСтатусы(Отказ)
	// Зарезервируем автомобили под заказы клиентов
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗаказыАвтомобилейОстатки.Автомобиль,
	|	ЗаказыАвтомобилейОстатки.Заказ,
	|	ЗаказыАвтомобилейОстатки.Заказ.СтатусАвтомобиля КАК СтатусАвтомобиля,
	|	ЕСТЬNULL(ЗаказыАвтомобилейОстатки.КоличествоОстаток, 0) КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаказыАвтомобилей.Остатки(
	|			&НаГраницу,
	|			Автомобиль В (&Автомобили)) КАК ЗаказыАвтомобилейОстатки
	|ГДЕ
	|	ЕСТЬNULL(ЗаказыАвтомобилейОстатки.КоличествоОстаток, 0)<>0
	|";
	НаГраницу = Новый Граница(?(Объект.Ссылка.Пустая(), Объект.Дата, Объект.Ссылка.МоментВремени()), ВидГраницы.Включая);
	Запрос.УстановитьПараметр("НаГраницу"  , НаГраницу);
	Запрос.УстановитьПараметр("Автомобили" , Объект.Автомобили.Выгрузить().ВыгрузитьКолонку("Автомобиль"));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если
			ЕстьРеквизит(Выборка.Заказ, "СтатусАвтомобиля")
			И Выборка.СтатусАвтомобиля <> Объект.СтатусАвтомобиля
		Тогда
			
			ЗаказОбъект                        = Выборка.Заказ.ПолучитьОбъект();
			ЗаказОбъект.ОбменДанными.Загрузка  = Истина;
			ЗаказОбъект.СтатусАвтомобиля = Объект.СтатусАвтомобиля;
			
			Попытка
				
				ЗаказОбъект.Записать();
				
			Исключение
				
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = '%1'"),ОписаниеОшибки()), Объект.Ссылка);
				Отказ = Истина;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ПроверкаПодразделенияДокументаИПользователяЗавершение(Контекст) Экспорт
	
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЗаполнениеОбъектов
&НаКлиенте
Процедура ПослеОбработкиЗаполнения(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ПослеОбработкиЗаполненияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеОбработкиЗаполненияНаСервере()
	
	ЗаполнениеОбъектовАльфаАвто.ПослеОбработкиЗаполнения(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ЗаполнениеОбъектов

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_ДекорацияСостояниеОригиналаНажатие()
	
	// СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	УчетОригиналовПервичныхДокументовКлиент.ОткрытьМенюВыбораСостояния(ЭтотОбъект, Элементы.ДекорацияСостояниеОригинала);
	//Конец СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	
КонецПроцедуры

// ЭлектронноеВзаимодействие.ОбменСКонтрагентами

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуЭДО(Команда)
	
	ЭлектронноеВзаимодействиеКлиент.ВыполнитьПодключаемуюКомандуЭДО(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработчикОжиданияЭДО()
	
	ОбменСКонтрагентамиКлиент.ОбработчикОжиданияЭДО(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКлючевыхРеквизитовСостояниеЭДО()
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	ПараметрыПриИзменении = ОбменСКонтрагентами.ПараметрыПриИзмененииКлючевыхРеквизитовЭДО();
	
	ПараметрыПриИзменении.Форма                  = ЭтотОбъект;
	ПараметрыПриИзменении.ДокументСсылка         = Объект.Ссылка; 
	ПараметрыПриИзменении.ДокументОбъект         = РеквизитФормыВЗначение("Объект");
	ПараметрыПриИзменении.КонтроллерСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыПриИзменении.ГруппаСостояниеЭДО     = Элементы.ГруппаСостояниеЭДО;
		
	ОбменСКонтрагентами.ПриИзмененииКлючевыхРеквизитовЭДО(ПараметрыПриИзменении);
	
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами

&НаКлиенте
Процедура ПодборАвансов(Команда)
	
	УправлениеДиалогомКлиент.ОткрытьПодборАвансов(ЭтотОбъект, Ложь);
	
КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами

#КонецОбласти

#Область ОбработчикиАльфаАвто

// Ядро
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСуммаДокументаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.ПоказатьРасширенныеИтогиОперации(ЭтотОбъект, Элемент);
	
КонецПроцедуры
// Конец Ядро

// ПрослеживаемыеТовары
&НаСервере
Процедура ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара()
	
	ИменаРеквизитов = УчетПрослеживаемыхТоваровСервер
		.ИменаРеквизитовДляЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара();
	ИменаРеквизитов.ИмяТаблицы = "Автомобили";
	ИменаРеквизитов.ИмяРеквизита = "Автомобиль";
	УчетПрослеживаемыхТоваровСервер.ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара(Объект,, ИменаРеквизитов);
	
КонецПроцедуры
// Конец ПрослеживаемыеТовары

// СчетаФактуры
&НаКлиенте
Процедура НадписьНалоговыйДокументНажатие(Элемент)
	
	УправлениеДиалогомДокументаКлиент.НадписьНалоговыйДокументНажатие(ЭтотОбъект);
	
КонецПроцедуры   

&НаКлиенте
Процедура НадписьТаможеннаяДекларацияНажатие(Элемент)
	
	УправлениеДиалогомДокументаКлиент.НадписьТаможеннаяДекларацияНажатие(ЭтотОбъект);
	
КонецПроцедуры // НадписьТаможеннаяДекларацияНажатие()

&НаКлиенте
Процедура НадписьВзаиморасчетыНажатие(Элемент)
	
	УправлениеДиалогомДокументаКлиент.НадписьВзаиморасчетыНажатие(ЭтотОбъект);
	
КонецПроцедуры
// Конец СчетаФактуры

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораАвтомобиляДляКомиссионныхДокументов(ЭтотОбъект);
	УправлениеДиалогомДокументаСервер.РасставитьСвязиПараметровВыбораДокументовАванса(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомАльфаАвтоСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"TradeInГруппа",
		"Видимость",
		Объект.TradeIn
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"TradeInПодсказкаДокументНеВыбран",
		"Видимость",
		ЗаказНаАвтомобиль.Пустая()
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"TradeInРаспределение",
		"Видимость",
		НЕ ЗаказНаАвтомобиль.Пустая()
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РаспределенияДенежныхСредств",
		"Видимость",
		НЕ ЗаказНаАвтомобиль.Пустая()
	);
	
	НеЗаполенЗаказНаАвтомобиль = ЗаказНаАвтомобиль.Пустая() И ЗаказыНаАвтомобиль.Количество() > 0;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НадписьЗаказНаАвтомобиль",
		"Видимость",
		НЕ НеЗаполенЗаказНаАвтомобиль
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаЗаголовокЗаказыНаАвтомобиль",
		"Видимость",
		НеЗаполенЗаказНаАвтомобиль
	);
	
	// Установим видимость колонок ГТД, ставки НДС и суммы НДС от хоз. операции
	ЭтоНеИмпорт = (НЕ Объект.ХозОперация = Справочники.ХозОперации.ПоступлениеАвтомобилейИмпорт);
	Элементы.АвтомобилиСтавкаНДС.Видимость = ЭтоНеИмпорт;
	Элементы.АвтомобилиСуммаНДС.Видимость = ЭтоНеИмпорт;
	Элементы.АвтомобилиГТД.Видимость = ЭтоНеИмпорт;
	Элементы.НадписьТаможеннаяДекларация.Видимость = НЕ ЭтоНеИмпорт;
	УправлениеДиалогомДокументаСервер.УстановитьЗаголовокНадписиТаможеннаяДекларация(ЭтотОбъект, Объект);

	Элементы.ВхДокДата.АвтоОтметкаНезаполненного = Объект.ЭтоУниверсальныйДокумент;
	Элементы.ВхДокНомер.АвтоОтметкаНезаполненного = Объект.ЭтоУниверсальныйДокумент;
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьУсловноеОформление()
 
	// Установить шрифт для Автомобили
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Автомобили.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Автомобили.ЕстьСервиснаяКомпания");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(WindowsШрифты.ШрифтДиалоговИМеню,, 10, Истина));
	// Установить цвет шрифта для АвтомобилиЕстьСервиснаяКомпания
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.АвтомобилиЕстьСервиснаяКомпания.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Автомобили.ЕстьОбязательнаяСервиснаяКампания");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийОшибкуТекст);
	// запрет редактирования АвтомобилиСумма
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.АвтомобилиСумма.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыСуммаВсегоТолькоПросмотр");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// запрет редактирования АвтомобилиСуммаВсего
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.АвтомобилиСуммаВсего.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыСуммаВсегоТолькоПросмотр");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры 
	
&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры = Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Продолжать = УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(
		ЭтотОбъект,
		РезультатОповещения,
		ДополнительныеПараметры
	);
	Если НЕ Продолжать Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры 

#КонецОбласти

&НаСервере
Процедура УстановитьЗаказНаАвтомобиль()
	
	Если ЗаказНаАвтомобиль.Пустая() Тогда
		
		АвтомобилиСПробегомСервер.СброситьСвязьСЗаказами(Объект.Ссылка);
		
	КонецЕсли;
	
	НадписьЗаказНаАвтомобиль =
		АвтомобилиСПробегомКлиентСервер.СформироватьНадписьTradeIn(ЗаказНаАвтомобиль);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗаказНаАвтомобильЗавершение(ВыбранныйЗаказ, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ВыбранныйЗаказ = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗаказНаАвтомобиль   = ВыбранныйЗаказ;
	СуммаКРаспределению = Объект.Автомобили.Итог("СуммаВсего");
	
	УстановитьЗаказНаАвтомобиль();
	
КонецПроцедуры

&НаКлиенте
Процедура TradeInРаспределениеВозможно()
	
	Если НЕ Объект.Проведен ИЛИ Модифицированность Тогда
		
		ВызватьИсключение НСтр("ru = 'Поступление необходимо провести'");
		
	КонецЕсли;
	
	Если ЗаказНаАвтомобиль.Пустая() Тогда
		
		ВызватьИсключение НСтр("ru = 'Укажите заказ на автомобиль на который распределяются средства'");
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СуммаКРаспределению) Тогда
		
		ВызватьИсключение НСтр("ru = 'Не указана сумма для распределения'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеИнформацииОРаспределенииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Статус <> "Выполнено" Тогда
		
		ДлительныеОперацииАвтосервисКлиентСервер.ВключитьРежимОжиданияПоляТабличногоДокумента(
			Элементы.РаспределенияДенежныхСредств,
			Результат.КраткоеПредставлениеОшибки,
			БиблиотекаКартинок.Ошибка32
		);
		Возврат;
		
	КонецЕсли;
	
	ДлительныеОперацииАвтосервисКлиентСервер.ВыключитьРежимОжиданияПоляТабличногоДокумента(
		Элементы.РаспределенияДенежныхСредств);
	РаспределенияДенежныхСредств = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСсылкуНаДокументВПараметрыОписанияОповещенияОЗакрытии()
	
	Если НеНужноДобавлятьСсылкуНаДокумент() Тогда
		
		Возврат;
		
	КонецЕсли;
		
	ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры.Вставить("ПоступлениеАвтомобиля", Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Функция НеНужноДобавлятьСсылкуНаДокумент()
	
	Возврат ОписаниеОповещенияОЗакрытии = Неопределено
		ИЛИ (ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры <> Неопределено
			И ТипЗнч(ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры) <> Тип("Структура"));
	
КонецФункции

&НаКлиенте
Процедура ВыборЗаказНаАвтомобильНачало()
	
	Ручка = Новый ОписаниеОповещения("ВыборЗаказНаАвтомобильЗавершение", ЭтотОбъект);
	ОтборКонтрагент = Новый Структура("Контрагент", Объект.Контрагент);
	ПараметрыФормыВыбора = Новый Структура(
		"РежимВыбора,Отбор",
		Истина,
		ОтборКонтрагент
	);
	ОткрытьФорму(
		"Документ.ЗаказНаАвтомобиль.ФормаВыбора",
		ПараметрыФормыВыбора,
		ЭтотОбъект,
		КлючУникальности,
		,
		,
		Ручка,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьАктуальныйЗаказНаАвтомобиль()
	
	Если Объект.TradeIn И ЗаказНаАвтомобиль.Пустая()
		И ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РабочийЛистВыкупаАвтомобиля") Тогда
		
		МассивДокументов = АктуальныеЗаказыНаАвтомобиль();
		
		Если МассивДокументов.Количество() > 0 Тогда
			
			Если МассивДокументов.Количество() = 1 Тогда
				
				ЗаказНаАвтомобиль = МассивДокументов[0];
				СуммаКРаспределению = Объект.Автомобили.Итог("СуммаВсего");
				
			КонецЕсли;
			
			Для Каждого Документ Из МассивДокументов Цикл
				
				НоваяСтрока = ЗаказыНаАвтомобиль.Добавить();
				НоваяСтрока.Документ = Документ;
				НоваяСтрока.Выбрать = НСтр("ru = 'Выбрать'");
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция АктуальныеЗаказыНаАвтомобиль()
	
	Возврат АвтомобилиСПробегомСервер.АктуальныеЗаказыРабочегоЛиста(Объект.ДокументОснование.ДокументРабочийЛист);
	
КонецФункции

&НаСервереБезКонтекста
Функция АктуальныйЗаказНаАвтомобиль(Заказ)
	
	Возврат АвтомобилиСПробегомСервер.ЭтоАктуальныйЗаказ(Заказ);
	
КонецФункции

&НаКлиенте
Функция ЗаказНаАвтомобильАктуален()
	
	Если НЕ Объект.TradeIn Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ЗаказНаАвтомобиль.Пустая() Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Для поступления по схеме trade in необходимо указать заказ на автомобиль'"));
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РабочийЛистВыкупаАвтомобиля")
		И НЕ АктуальныйЗаказНаАвтомобиль(ЗаказНаАвтомобиль) Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Указан неактуальный заказ на автомобиль'"));
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ПроверитьСрокДействияКоммерческогоПредложения(Контекст)
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РабочийЛистВыкупаАвтомобиля") Тогда
		
		СрокДействияПредложения = Документы.РабочийЛистВыкупаАвтомобиля.СрокДействия(Объект.ДокументОснование);
		
		Если ЗначениеЗаполнено(СрокДействияПредложения) И СрокДействияПредложения <= Объект.Дата Тогда
			
			ДокументОсмотра = Документы
				.РабочийЛистВыкупаАвтомобиля
				.ПолучитьДокументОсмотра(Объект.ДокументОснование)
				.Оценка;
			
			ПредупреждениеПользователю = Новый Структура();
			ПредупреждениеПользователю.Вставить("Текст", НСтр("ru = 'Контроль:'"));
			ПредупреждениеПользователю.Вставить(
				"ДействиеПриНажатии",
				ПолучитьНавигационнуюСсылку(ДокументОсмотра)
			);
			ТекстПояснения = СтрШаблон(
				НСтр("ru = 'Действие коммерческого предложения истекло %1'"),
				Формат(СрокДействияПредложения, "ДЛФ=DD;")
			);
			ПредупреждениеПользователю.Вставить("Пояснение", ТекстПояснения);
			ПредупреждениеПользователю.Вставить("Картинка", "Предупреждение48");
			ПредупреждениеПользователю.Вставить("Статус", "Важное");
			
			Контекст.Вставить(
				"ПредупрежденияПользователю",
				ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПредупреждениеПользователю)
			);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредупредитьПользователя(Контекст)
	
	#Если Не МобильноеПриложениеКлиент Тогда
	
	ПредупрежденияПользователю = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		Контекст,
		"ПредупрежденияПользователю",
		Новый Массив()
		
	);
	
	Для Каждого Предупреждение Из ПредупрежденияПользователю Цикл 
	
		ПоказатьОповещениеПользователя(
			Предупреждение.Текст,
			Предупреждение.ДействиеПриНажатии,
			Предупреждение.Пояснение,
			БиблиотекаКартинок[Предупреждение.Картинка],
			СтатусОповещенияПользователя[Предупреждение.Статус]
		);
		
	КонецЦикла;
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОПерезаполненииПризнакаПриобретенУФизЛица(ПараметрыДействия)
	
	ОбработчикОповещения = Новый ОписаниеОповещения(
		"Подключаемый_РезультатОтветаНаВопросОПерезаполненииПризнакаПриобретенУФизЛица",
		ЭтотОбъект,
		ПараметрыДействия);
	
	ПоказатьВопрос(
		ОбработчикОповещения,
		НСтр("ru = 'Перезаполнить признак приобретения автомобиля у физического лица?'"),
		РежимДиалогаВопрос.ДаНет,,
		КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РезультатОтветаНаВопросОПерезаполненииПризнакаПриобретенУФизЛица(
		Ответ,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПризнакиПриобретенияАвтомобилейУФизЛица();
	КонецЕсли;
	
	ОбработкаРезультатаВыполненияДействия(ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПризнакиПриобретенияАвтомобилейУФизЛица()
	
	АвтомобилиСервер.ЗаполнитьПризнакиПриобретенияАвтомобилейУФизЛица(Объект);
	
КонецПроцедуры

#Область РаботаСАвтомобилями

&НаСервере
Процедура ОбновитьПоставщикаВАвтомобилях()
	
	АвтомобилиДляОбновленияПоставщика = Объект.Автомобили.Выгрузить(, "Автомобиль").ВыгрузитьКолонку("Автомобиль");
	АвтомобилиДляОбновленияПоставщика = ОбщегоНазначенияКлиентСервер.СвернутьМассив(АвтомобилиДляОбновленияПоставщика);
	
	ПоставщикиАвтомобилей = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(АвтомобилиДляОбновленияПоставщика, "Поставщик");
	
	Для Каждого Автомобиль Из АвтомобилиДляОбновленияПоставщика Цикл
		
		Если Автомобиль.Пустая() Или ПоставщикиАвтомобилей.Получить(Автомобиль) = Объект.Контрагент Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ОбновитьПоставщикаВАвтомобиле(Автомобиль);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПоставщикаВАвтомобиле(Автомобиль)
	
	Попытка
		
		ОбъектАвтомобиль = Автомобиль.ПолучитьОбъект();
		ОбъектАвтомобиль.Заблокировать();
		ОбъектАвтомобиль.Поставщик = Объект.Контрагент;
		ОбъектАвтомобиль.ОбменДанными.Загрузка = Истина;
		ОбъектАвтомобиль.Записать();
		
	Исключение
		
		ЗаписьЖурналаРегистрации(
			ЗаписьАвтомобиляИмяСобытияЖурнала(),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ЗаписьАвтомобиляИмяСобытияЖурнала()
	
	Возврат НСтр("ru = 'Поступление автомобилей.Обновление поставщика в автомобиле'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	
КонецФункции

&НаКлиенте
Процедура АвтомобилиВариантКомплектацииПриИзменении(Элемент)
	
	Если Элементы.ТекущиеДанные.Автомобили.Модель = ПредопределенноеЗначение("Справочник.Модели.ПустаяСсылка") Тогда
		Элементы.ТекущиеДанные.Автомобили.ВариантКомплектации = ПредопределенноеЗначение("Справочник.ВариантыКомплектации.ПустаяСсылка");
		Возврат;
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект, РезультатОповещения);
	
	Если
		ТипЗнч(РезультатОповещения) = Тип("Структура")
		И РезультатОповещения.Свойство("ИзмененныеРеквизиты")
		И ТипЗнч(РезультатОповещения.ИзмененныеРеквизиты) = Тип("Структура")
		И РезультатОповещения.ИзмененныеРеквизиты.Свойство("Организация")
	Тогда
		
		ПриИзмененииКлючевыхРеквизитовСостояниеЭДО();
		
	КонецЕсли; 
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыПечатиНажатие(Элемент)

	УправлениеПечатьюКлиентАльфаАвто.ОткрытьФормуРедактированияРеквизитовДоставки(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область УтверждениеДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуУтверждения(Команда)
	
	УтверждениеДокументовКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект.Ссылка);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбработкуКомандыУтвержденияНаСервере(ПараметрыОбработки,
		ДополнительныеПараметры) Экспорт
	
	ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры);
	Оповестить("ПослеУтвержденияДокументов", Объект.Ссылка, ИмяФормы);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры)
	
	УтверждениеДокументовВызовСервера.ОбработкаКомандыФормы(ЭтотОбъект, ПараметрыОбработки.ИмяКоманды, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКомандыУтвержденияДокументов()
	
	ОбновитьКомандыУтвержденияДокументовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКомандыУтвержденияДокументовНаСервере()
	
	УтверждениеДокументовКлиентСервер.УстановитьДоступностьКнопокУтверждения(ЭтотОбъект, Объект, ТолькоПросмотр);
	УтверждениеДокументовВызовСервера.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, Объект, ТолькоПросмотр);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Подключаемый_ОбновитьЗаголовокНадписиНалоговыйДокумент(РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	ОбновитьЗаголовокНадписиНалоговыйДокументНаСервере();
	
КонецПроцедуры

Процедура ОбновитьЗаголовокНадписиНалоговыйДокументНаСервере()
	
	РаботаСФормойВызовСервера.ОбновитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, Объект);
	
КонецПроцедуры

#КонецОбласти
