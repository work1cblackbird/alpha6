///////////////////////////////////////////////////////////////////////////////
// Модуль произвольной формы документа "Изменение цен"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТипЦен                       = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТипЦен");
	ХозОперация                  = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ХозОперация");
	Контрагент                   = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Контрагент");
	РасчетЦенОт                  = ПолучитьЗначениеПараметраСтруктуры(Параметры, "РасчетЦенОт");
	БазовыйТипЦен                = ПолучитьЗначениеПараметраСтруктуры(Параметры, "БазовыйТипЦен");
	ДокументОснование            = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ДокументОснование");
	Поставщик                    = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Поставщик");
	СкладКомпании                = ПолучитьЗначениеПараметраСтруктуры(Параметры, "СкладКомпании");
	ПроцентНаценки               = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ПроцентНаценки");
	ОкруглятьДо                  = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ОкруглятьДо");
	ПроцентНаценкиИзНоменклатуры = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ПроцентНаценкиИзНоменклатуры");
	ПрайсЛистКонтрагента         = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ПрайсЛистКонтрагента");
	БазовоеПодразделение         = ПолучитьЗначениеПараметраСтруктуры(Параметры, "БазовоеПодразделение");
	Партия                       = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Партия");
	НачальнаяПартия              = Партия;
	
	Заголовок = НСтр("ru = 'Параметры расчета типа цены ""'") + Параметры.ТипЦен +"""";
	
	НастроитьПараметрыВыбораЭлементовФормы();
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события возникающего на клиенте при изменении данных реквизита "Расчет цен от" в контексте сервера.
//
&НаСервере
Процедура БазовыйТипЦенПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Если НЕ ПроцентНаценкиИзНоменклатуры Тогда
		ПроцентНаценки = БазовыйТипЦен.ПроцентСкидкиНаценки;
	КонецЕсли;
	
КонецПроцедуры // БазовыйТипЦенПриИзмененииНаСервере()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Расчет цен от".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура БазовыйТипЦенПриИзменении(Элемент)

	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Обработаем событие в контексте сервера
	БазовыйТипЦенПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры // БазовыйТипЦенПриИзменении()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Расчет цен от" в контексте сервера.
//
&НаСервере
Процедура РасчетЦенОтПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры // РасчетЦенОтПриИзмененииНаСервере()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Расчет цен от".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура РасчетЦенОтПриИзменении(Элемент)

	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Обработаем событие в контексте сервера
	РасчетЦенОтПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры // РасчетЦенОтПриИзменении()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Процент наценки из номенклатуры" в
// контексте сервера.
//
&НаСервере
Процедура ПроцентНаценкиИзНоменклатурыПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры // ПроцентНаценкиИзНоменклатурыПриИзмененииНаСервере()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Процент наценки из номенклатуры".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ПроцентНаценкиИзНоменклатурыПриИзменении(Элемент)
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Обработаем событие в контексте сервера
	ПроцентНаценкиИзНоменклатурыПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры // ПроцентНаценкиИзНоменклатурыПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	Если РасчетЦенОт = 8
		И НачальнаяПартия <> Партия
		И ЗначениеЗаполнено(Партия) Тогда
		
		ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаВопросаИзмененияРасчетаЦен", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОповещения,
			НСтр("ru = 'Табличная чать <Товары> будет перезаполнена по указанной партии. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет,,,
			НСтр("ru = 'Применение параметров расчета'"));
		Возврат;
		
	КонецЕсли;
	
	ПрименитьНастройки();
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ОбработкаВопросаИзмененияРасчетаЦен(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		Результат = Новый Структура;
		Результат.Вставить("ТребуетсяПерезаполнитьНоменклатуруПартии", Истина);
		ПрименитьНастройки(Результат);
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_ОбработкаВопросаИзмененияРасчетаЦен()

&НаКлиенте
Процедура ПрименитьНастройки(Результат = Неопределено)
	
	Если НЕ ТипЗнч(Результат) = Тип("Структура") Тогда
		Результат = Новый Структура();
	КонецЕсли;
	
	Результат.Вставить("ТипЦен",                       ТипЦен);
	Результат.Вставить("РасчетЦенОт",                  РасчетЦенОт);
	Результат.Вставить("БазовыйТипЦен",                БазовыйТипЦен);
	Результат.Вставить("ДокументОснование",            ДокументОснование);
	Результат.Вставить("Поставщик",                    Поставщик);
	Результат.Вставить("СкладКомпании",                СкладКомпании);
	Результат.Вставить("ПроцентНаценки",               ПроцентНаценки);
	Результат.Вставить("ОкруглятьДо",                  ОкруглятьДо);
	Результат.Вставить("ПроцентНаценкиИзНоменклатуры", ПроцентНаценкиИзНоменклатуры);
	Результат.Вставить("ПрайсЛистКонтрагента",         ПрайсЛистКонтрагента);
	Результат.Вставить("БазовоеПодразделение",         БазовоеПодразделение);
	Результат.Вставить("Партия",                       Партия);
	
	Закрыть(Результат);
	
КонецПроцедуры

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

// Производит настройку параметров выбора элементов управления диалога в зависимости от значений реквизитов объекта.
//
&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	Если Не Элементы.Найти("ПрайсЛистКонтрагента")=Неопределено Тогда
		Если РасчетЦенОт=4 И ХозОперация=Справочники.ХозОперации.УстановкаЦенКонтрагента И ЗначениеЗаполнено(Контрагент) Тогда
			УправлениеДиалогомСервер.ОбновитьПараметрВыбора(Элементы.ПрайсЛистКонтрагента.ПараметрыВыбора, "Отбор.Владелец", Контрагент);
		Иначе
			УправлениеДиалогомСервер.УдалитьПараметрВыбора(Элементы.ПрайсЛистКонтрагента.ПараметрыВыбора, "Отбор.Владелец");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // НастроитьПараметрыВыбораЭлементовФормы()

// Производит настройку параметров отображения элементов управления диалога в зависимости от значений реквизитов
// объекта.
//
&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	Элементы.ПроцентНаценки.Доступность = НЕ ПроцентНаценкиИзНоменклатуры;
	
	НайденныйЭлемент=Элементы.РасчетЦенОт.СписокВыбора.НайтиПоЗначению(7);
	Если ТипЦен.АлгоритмПолученияЦены = Перечисления.АлгоритмПолученияЦены.ПоЕдиницеИзмерения Тогда
		Если НайденныйЭлемент=Неопределено Тогда
			Элементы.РасчетЦенОт.СписокВыбора.Добавить(7, НСтр("ru = 'От базовой единицы измерения'"));
		КонецЕсли;
	Иначе
		Если НайденныйЭлемент<>Неопределено Тогда
			Если РасчетЦенОт = 7 Тогда
				РасчетЦенОт = 0;
			КонецЕсли;
			Элементы.РасчетЦенОт.СписокВыбора.Удалить(НайденныйЭлемент);
		КонецЕсли;
	КонецЕсли;
	
	// Расчет от базового типа цен
	Элементы.БазовыйТипЦен.Видимость 		= РасчетЦенОт = 0;
	Элементы.ДокументОснование.Видимость 	= РасчетЦенОт = 1;
	Элементы.Поставщик.Видимость 			= РасчетЦенОт = 2;
	Элементы.СкладКомпании.Видимость 		= (РасчетЦенОт = 3) ИЛИ (РасчетЦенОт = 5) ИЛИ (РасчетЦенОт = 9) ИЛИ (РасчетЦенОт = 10);
	Элементы.ПрайсЛистКонтрагента.Видимость = РасчетЦенОт = 4;
	Элементы.БазовоеПодразделение.Видимость = РасчетЦенОт = 6;
	Элементы.Партия.Видимость               = РасчетЦенОт = 8;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

