///////////////////////////////////////////////////////////////////////////////
// Модуль произвольной формы документа "Изменение цен"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	РежимВыбораТиповЦен  = ПолучитьЗначениеПараметраСтруктуры(Параметры, "РежимВыбораТиповЦен", Ложь);
	СписокВидимости      = ПолучитьЗначениеПараметраСтруктуры(Параметры, "СписокВидимости", Неопределено);
	ТолькоБазовыеТипыЦен = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТолькоБазовыеТипыЦен", Ложь);
	
	Если НЕ СписокВидимости = Неопределено Тогда
		Для Каждого ТекВидимость Из СписокВидимости Цикл
			Если ТекВидимость.Значение = "ЕдиницаИзмерения" Тогда
				ЕдиницаИзмерения = Истина;
			ИначеЕсли ТекВидимость.Значение = "ЦенаСтарая" Тогда
				СтараяЦена = Истина;
			ИначеЕсли ТекВидимость.Значение = "ЦенаНовая" Тогда
				НоваяЦена = Истина;
			ИначеЕсли ТекВидимость.Значение = "ЦенаБазовая" Тогда
				БазоваяЦена = Истина;
			ИначеЕсли ТекВидимость.Значение = "ПроцентНаценки" Тогда
				ПроцентНаценки = Истина;
			ИначеЕсли ТекВидимость.Значение = "СуммаНаценки" Тогда
				СуммаНаценки = Истина;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Элементы.ГруппаВидимостьКолонок.Видимость = Ложь;
	КонецЕсли;
	
	СписокВыбранныхТиповЦен = ПолучитьЗначениеПараметраСтруктуры(Параметры, "СписокТиповЦен", Неопределено);
	
	ТаблицаВыбранныхТиповЦен = Новый ТаблицаЗначений;
	ТаблицаВыбранныхТиповЦен.Колонки.Добавить("ТипЦен", Новый ОписаниеТипов("СправочникСсылка.ТипыЦен"));
	ТаблицаВыбранныхТиповЦен.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
	
	Если НЕ СписокВыбранныхТиповЦен = Неопределено Тогда
		Порядок = СписокВыбранныхТиповЦен.Количество();
		Для Каждого ТекущийТипЦен Из СписокВыбранныхТиповЦен Цикл
			НоваяСтрока = ТаблицаВыбранныхТиповЦен.Добавить();
			НоваяСтрока.ТипЦен = ТекущийТипЦен.Значение;
			НоваяСтрока.Порядок = Порядок;
			Порядок = Порядок - 1;
		КонецЦикла;
	КонецЕсли;
	
	ДопОтбор = ?(ТолькоБазовыеТипыЦен, "И НЕ ТипыЦен.Рассчитывается", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаВыбранныхТиповЦен.ТипЦен КАК ТипЦен,
	|	ТаблицаВыбранныхТиповЦен.Порядок КАК Порядок
	|ПОМЕСТИТЬ ТаблицаВыбранныхТиповЦен
	|ИЗ
	|	&ТаблицаВыбранныхТиповЦен КАК ТаблицаВыбранныхТиповЦен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыЦен.Ссылка КАК ТипЦен,
	|	ТипыЦен.ВалютаЦены КАК Валюта,
	|	ТипыЦен.ЦенаВключаетНДС КАК ВключаетНДС,
	|	ЕСТЬNULL(ТаблицаВыбранныхТиповЦен.Порядок, 0) КАК Порядок,
	|	ВЫБОР
	|		КОГДА ТаблицаВыбранныхТиповЦен.Порядок ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Пометка
	|ИЗ
	|	Справочник.ТипыЦен КАК ТипыЦен
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВыбранныхТиповЦен КАК ТаблицаВыбранныхТиповЦен
	|		ПО ТипыЦен.Ссылка = ТаблицаВыбранныхТиповЦен.ТипЦен
	|ГДЕ
	|	НЕ ТипыЦен.ПометкаУдаления
	|	И ТипыЦен.ДляТоваров
	|	"+ДопОтбор+"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок УБЫВ";
	
	Запрос.УстановитьПараметр("ТаблицаВыбранныхТиповЦен", ТаблицаВыбранныхТиповЦен);
	
	ТаблицаТиповЦен.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТипыЦен

&НаКлиенте
Процедура ТаблицаТиповЦенВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаТиповЦен.ТекущиеДанные;
	
	Если Элемент.ТекущийЭлемент.Имя = "ТаблицаТиповЦенТипЦен" И ТекущиеДанные <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Справочник.ТипыЦен.ФормаОбъекта", Новый Структура("Ключ", ТекущиеДанные.ТипЦен), ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры // ТаблицаТиповЦенВыбор()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	Результат = Новый Структура;
	
	Если НЕ РежимВыбораТиповЦен Тогда
		РезультатКолонки = Новый Массив;
		
		Если ЕдиницаИзмерения = Истина Тогда
			РезультатКолонки.Добавить("ЕдиницаИзмерения");
		КонецЕсли;
		Если СтараяЦена = Истина Тогда
			РезультатКолонки.Добавить("ЦенаСтарая");
		КонецЕсли;
		Если НоваяЦена = Истина Тогда
			РезультатКолонки.Добавить("ЦенаНовая");
		КонецЕсли;
		Если БазоваяЦена = Истина Тогда
			РезультатКолонки.Добавить("ЦенаБазовая");
		КонецЕсли;
		Если ПроцентНаценки = Истина Тогда
			РезультатКолонки.Добавить("ПроцентНаценки");
		КонецЕсли;
		Если СуммаНаценки = Истина Тогда
			РезультатКолонки.Добавить("СуммаНаценки");
		КонецЕсли;
		
		Результат.Вставить("РезультатКолонки", РезультатКолонки);
		
	КонецЕсли;
	СписокТиповЦены = Новый СписокЗначений;
	
	Для Каждого ТекущаяСтрока Из ТаблицаТиповЦен Цикл
		Если ТекущаяСтрока.Пометка Тогда
			СписокТиповЦены.Добавить(ТекущаяСтрока.ТипЦен);
		КонецЕсли;
	КонецЦикла;
	
	Результат.Вставить("ТекущийСписокТипЦен", СписокТиповЦены);
	
	Закрыть(Результат);
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Настройка условного оформления формы
//
&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомДокументаСервер.УстановитьУсловноеОформление(ЭтотОбъект);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаТиповЦенВалюта");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаТиповЦен.Валюта");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<В валюте товара>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	
КонецПроцедуры // УстановитьУсловноеОформление()

#КонецОбласти

