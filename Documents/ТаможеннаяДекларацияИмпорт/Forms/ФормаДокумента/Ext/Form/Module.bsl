///////////////////////////////////////////////////////////////////////////////
// Модуль основной формы документа "Таможенная декларация импорт"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ОграничитьВыборКонтактныхЛиц(Элементы.Контрагент);
	РаботаСФормой.НастроитьОтображениеСИспользованиемБазовогоКоличества(Элементы.ТоварыКоличество);
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	
	РазрешитьРедактированиеЦенИСумм = ПраваИНастройкиПользователя.Значение("РедактированиеЦенИСуммВНоменклатурныхТаблицах", Объект);
	РаботаСФормой.РазрешитьРедактированиеЦенИСумм(
		РаботаСФормой.ТиповыеПоляСуммовыхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм
	);
	
	ОписаниеНовойКолонкиПроизводитель = РаботаСФормой.ОписаниеНовойКолонкиПроизводитель();
	ОписаниеНовойКолонкиПроизводитель.ТабличнаяЧасть = Элементы.Товары;
	ОписаниеНовойКолонкиПроизводитель.ПоставитьПеред = Элементы.ТоварыАртикул;
	НоваяКолонкаПроизводитель = РаботаСФормой.НоваяКолонкаПроизводитель(ЭтотОбъект, ОписаниеНовойКолонкиПроизводитель);
	
	КолонкиКодАртикулИПроизводитель = Новый Структура();
	КолонкиКодАртикулИПроизводитель.Вставить("Код", Элементы.ТоварыКод);
	КолонкиКодАртикулИПроизводитель.Вставить("Артикул", Элементы.ТоварыАртикул);
	КолонкиКодАртикулИПроизводитель.Вставить("Производитель", НоваяКолонкаПроизводитель);
	РаботаСФормой.НастроитьВидимостьКолонокКодАртикулИПроизводитель(КолонкиКодАртикулИПроизводитель);
	РаботаСФормой.ОткрытьФормуТолькоДляПросмотра(ЭтотОбъект, Объект);
	
	НомерРазделаПредел = Число(Метаданные.Документы.ТаможеннаяДекларацияИмпорт.ТабличныеЧасти.Разделы.Реквизиты.НомерРаздела.МаксимальноеЗначение);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// ПрослеживаемыеТовары
		ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара();
		// Конец ПрослеживаемыеТовары
		
		РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект);
		
		ЗаполнитьПризнакЕАЭСКонтрагента();
		РаботаСФормой.ЗаполнитьСлужебныеРеквизитыТоваров(Объект.Товары);
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "Разделы");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "РазделыАвтомобили");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "Автомобили");
	
	ОбновитьСтатусыГТД();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия=Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбновитьСтатусыГТД();
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписатьУведомлениеОВвозеПрослеживаемогоТовара"
		И Источник= ЭтотОбъект Тогда
		УстановитьНадписьУведомленияОВвозеПрослеживаемогоТовара();
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения	
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
    РаботаСФормой.ЗаполнитьСлужебныеРеквизитыТоваров(Объект.Товары);
    РаботаСФормой.УстановитьВидимостьКолонкиХарактеристика(ЭтотОбъект, Объект);
	
	// ПрослеживаемыеТовары
	ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара();
	// Конец ПрослеживаемыеТовары
	
	РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект);
	
	ЗаполнитьПризнакЕАЭСКонтрагента();
	ОбновитьСтатусыГТДНаСервере();
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ТаможеннаяДекларацияИмпорт", ПараметрыЗаписи.РежимЗаписи,
		Объект.Товары.Количество() > 50);
		
	Отказ = Отказ Или РаботаСФормойКлиент.НачатьПроверкуПодразделенияДокументаИПользователя(
		Объект.ПодразделениеКомпании,
		Новый ОписаниеОповещения(
			"ПроверкаПодразделенияДокументаИПользователяЗавершение",
			ЭтотОбъект,
			Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)
		)
	);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	РаботаСФормой.ЗаполнитьСлужебныеРеквизитыТоваров(Объект.Товары);
	РаботаСФормой.УстановитьВидимостьКолонкиХарактеристика(ЭтотОбъект, Объект);
	
	// ПрослеживаемыеТовары
	ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара();
	// Конец ПрослеживаемыеТовары
	
	РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьСтатусыГТД();
	Оповестить("ЗаписатьТаможеннуюДекларацию", Новый Структура("Ссылка",Объект.Ссылка), ВладелецФормы);
	
	РаботаСФормойКлиент.ОповеститьОЗаписиДокумента(Объект.Ссылка);
	РаботаСФормойКлиент.ОбновитьПодчиненныеСчета(Объект.Ссылка, Неопределено);
	РаботаСФормойКлиент.ОбновитьЗаголовокНадписиНалоговыйДокумент(Объект);
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Документы.ТаможеннаяДекларацияИмпорт.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	ПараметрыДействия = Новый Структура;
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Документы.ТаможеннаяДекларацияИмпорт.ДатаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СкладКомпанииПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Документы.ТаможеннаяДекларацияИмпорт.СкладКомпанииПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладКомпанииПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СкладКомпанииПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Документы.ТаможеннаяДекларацияИмпорт.КонтрагентПриИзменении(Объект, ПараметрыДействия);
	ЗаполнитьПризнакЕАЭСКонтрагента();
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	КонтрагентПриИзмененииНаСервере(ПараметрыДействия);
	ОбновитьСтатусыГТД();
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Документы.ТаможеннаяДекларацияИмпорт.ДоговорВзаиморасчетовПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорВзаиморасчетовПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура НомерДекларацииПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Документы.ТаможеннаяДекларацияИмпорт.НомерДекларацииПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерДекларацииПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	НомерДекларацииПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СуммаТаможенногоСбораПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиСуммаДокумента(ЭтотОбъект);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаТаможенногоСбораПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СуммаТаможенногоСбораПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СуммаТаможенногоШтрафаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиСуммаДокумента(ЭтотОбъект);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаТаможенногоШтрафаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СуммаТаможенногоШтрафаПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовУправленияОбщегоНазначения

&НаКлиенте
Процедура НадписьВзаиморасчетыНажатие(Элемент)
	
	УправлениеДиалогомДокументаКлиент.НадписьВзаиморасчетыНажатие(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура СпособЗачетаАвансовПриИзменении(Элемент)
	
	СпособЗачетаАвансовПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СпособЗачетаАвансовПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Элементы.Разделы.ТекущаяСтрока = Неопределено Тогда
		ВывестиСообщениеПоКоду("1", ЭтотОбъект, , , Отказ);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Элементы.Разделы.ТекущиеДанные = Неопределено Тогда
		Элемент.ТекущиеДанные.НомерРаздела = Элементы.Разделы.ТекущиеДанные.НомерРаздела;
		Элемент.ТекущиеДанные.Склад = Объект.СкладКомпании;
	КонецЕсли;
	
	Если Копирование Тогда
		РасчетИтоговТоваров();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДиалогомДокументаКлиент.ТоварыПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ НоваяСтрока Тогда
		
	КонецЕсли;
	
	ИтогКоличество          = 0;
	ИтогКоличествоБазовое   = 0;
	ИтогСуммаПошлины        = 0;
	ИтогТаможеннаяСтоимость = 0;
	ИтогСуммаНДС            = 0;
	Если НЕ Элементы.ТоварыПоказатьВсеТовары.Пометка И НЕ Элементы.Товары.ОтборСтрок = Неопределено Тогда
		// Чтобы избавится от серверного вызова Объект.Товары.НайтиСтроки, переберем всю таблицу и подсчет произведем по условию.
		Для Каждого ТекущаяСтрока Из Объект.Товары Цикл
			Если ТекущаяСтрока.НомерРаздела = Элементы.Товары.ОтборСтрок.НомерРаздела Тогда
				ИтогКоличество          = ИтогКоличество          + ТекущаяСтрока.Количество;
				ИтогКоличествоБазовое   = ИтогКоличествоБазовое   + ТекущаяСтрока.КоличествоБазовое;
				ИтогСуммаПошлины        = ИтогСуммаПошлины        + ТекущаяСтрока.СуммаПошлины;
				ИтогТаможеннаяСтоимость = ИтогТаможеннаяСтоимость + ТекущаяСтрока.ТаможеннаяСтоимость;
				ИтогСуммаНДС            = ИтогСуммаНДС            + ТекущаяСтрока.СуммаНДС;
			КонецЕсли;
		КонецЦикла;
		СтрокаРаздела = Объект.Разделы.НайтиСтроки(Новый Структура("НомерРаздела", Элементы.Товары.ОтборСтрок.НомерРаздела));
		Если СтрокаРаздела.Количество() Тогда
			СтрокаРаздела[0].ТаможеннаяСтоимость = ИтогТаможеннаяСтоимость;
			СтрокаРаздела[0].СуммаПошлины = ИтогСуммаПошлины;
			СтрокаРаздела[0].СуммаНДС = ИтогСуммаНДС;
		КонецЕсли;
	Иначе
		Для Каждого СтрокаТЧ Из Объект.Товары Цикл
			ИтогКоличество          = ИтогКоличество          + СтрокаТЧ.Количество;
			ИтогКоличествоБазовое   = ИтогКоличествоБазовое   + СтрокаТЧ.КоличествоБазовое;
			ИтогСуммаПошлины        = ИтогСуммаПошлины        + СтрокаТЧ.СуммаПошлины;
			ИтогТаможеннаяСтоимость = ИтогТаможеннаяСтоимость + СтрокаТЧ.ТаможеннаяСтоимость;
			ИтогСуммаНДС            = ИтогСуммаНДС            + СтрокаТЧ.СуммаНДС;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыПослеУдаленияНаСервере(ПараметрыДействия=Неопределено)
	
	УправлениеДиалогомДокументаСервер.ТоварыПослеУдаления(ЭтотОбъект, Элементы.Товары, ПараметрыДействия);
	РасчетИтоговТоваров();
	
	Если НЕ Элементы.Товары.ОтборСтрок = Неопределено Тогда
		СтрокаРаздела = Объект.Разделы.НайтиСтроки(Новый Структура("НомерРаздела", Элементы.Товары.ОтборСтрок.НомерРаздела));
		Если СтрокаРаздела.Количество() Тогда
			СтрокаРаздела[0].ТаможеннаяСтоимость = ИтогТаможеннаяСтоимость;
			СтрокаРаздела[0].СуммаПошлины = ИтогСуммаПошлины;
			СтрокаРаздела[0].СуммаНДС = ИтогСуммаНДС;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	ТоварыПослеУдаленияНаСервере();
	
КонецПроцедуры

#Область ОбработчикиСобытийПолейТаблицыФормыТовары

&НаСервере
Процедура ТоварыНоменклатураПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.ТоварыНоменклатураПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	УправлениеДиалогомДокументаСервер.НоменклатураПриИзменении(ЭтотОбъект, ТекущиеДанные, ПараметрыДействия);
	Документы.ТаможеннаяДекларацияИмпорт.СформироватьНомерТаможеннойДекларацииСтроки(Объект, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТоварыНоменклатураПриИзмененииНаСервере();
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОбновитьСтатусыГТД(ТекущиеДанные);
		УстановитьКоличествоДо(ТекущиеДанные.Количество, ТекущиеДанные.КоличествоБазовое);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтрока", ТекущиеДанные.Номенклатура);
	
	УправлениеДиалогомДокументаКлиент.ТоварыНоменклатураНачалоВыбора(
		ЭтотОбъект,
		Элемент,
		ДанныеВыбора,
		ВыборДобавлением,
		СтандартнаяОбработка,
		ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ТоварыХарактеристикаНоменклатурыПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.ТоварыХарактеристикаНоменклатурыПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаНоменклатурыПриИзменении(Элемент)
	
	ТоварыХарактеристикаНоменклатурыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТоварыЕдиницаИзмеренияПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	ПересчитатьСтоимостьИНДС(ТекущиеДанные);
	Документы.ТаможеннаяДекларацияИмпорт.ТоварыЕдиницаИзмеренияПриИзменении(Объект, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	ТоварыЕдиницаИзмеренияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТоварыКоличествоПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	ПересчитатьСтоимостьИНДС(ТекущиеДанные, ПолучитьФункциональнуюОпцию("ИспользоватьБазовоеКоличество"));
	УстановитьКоличествоДо(ТекущиеДанные.Количество, ТекущиеДанные.Количество);
	Документы.ТаможеннаяДекларацияИмпорт.ТоварыКоличествоПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТоварыКоличествоПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТоварыКоличествоБазовоеПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	ПересчитатьСтоимостьИНДС(ТекущиеДанные);
	УстановитьКоличествоДо(ТекущиеДанные.Количество, ТекущиеДанные.КоличествоБазовое);
	Документы.ТаможеннаяДекларацияИмпорт.ТоварыКоличествоБазовоеПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоБазовоеПриИзменении(Элемент)
	
	ТоварыКоличествоБазовоеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТоварыТаможеннаяСтоимостьПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	ТекущиеДанныеРаздела = Объект.Разделы.НайтиПоИдентификатору(Элементы.Разделы.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.ТоварыТаможеннаяСтоимостьПриИзменении(Объект, ТекущиеДанные, ТекущиеДанныеРаздела, ПараметрыДействия);
	Документы.ТаможеннаяДекларацияИмпорт.СформироватьНомерТаможеннойДекларацииСтроки(Объект, ТекущиеДанные);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыТаможеннаяСтоимостьПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ТоварыТаможеннаяСтоимостьПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ТоварыСуммаПошлиныПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	ТекущиеДанныеРаздела = Объект.Разделы.НайтиПоИдентификатору(Элементы.Разделы.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.ТоварыСуммаПошлиныПриИзменении(Объект, ТекущиеДанные, ТекущиеДанныеРаздела, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПошлиныПриИзменении(Элемент)
	
	ТоварыСуммаПошлиныПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТоварыПартияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.ТоварыПартияПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);

	// Заполним таможенную стоимость
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Склад) Тогда
		ТекущиеДанные.Склад = ТекущиеДанные.Партия.СкладКомпании;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПартииТоваровКомпанииОстатки.СуммаБезНДСОстаток / ПартииТоваровКомпанииОстатки.КоличествоОстаток КАК ЦенаБезНДС,
	|	ПартииТоваровКомпанииОстатки.СкладКомпании КАК Склад,
	|	ПартииТоваровКомпанииОстатки.Номенклатура КАК Номенклатура,
	|	ПартииТоваровКомпанииОстатки.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ПартииТоваровКомпанииОстатки.Партия КАК Партия
	|ИЗ
	|	РегистрНакопления.ПартииТоваровКомпании.Остатки(
	|			,
	|			Номенклатура = &Номенклатура
	|				И Партия = &Партия
	|				И СкладКомпании = &Склад
	|				И ХарактеристикаНоменклатуры = &Характеристика) КАК ПартииТоваровКомпанииОстатки";
	
	Запрос.УстановитьПараметр("Номенклатура",   ТекущиеДанные.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", ТекущиеДанные.ХарактеристикаНоменклатуры);
	Запрос.УстановитьПараметр("Партия",         ТекущиеДанные.Партия);
	Запрос.УстановитьПараметр("Склад",          ТекущиеДанные.Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	КоличествоБазовое = Ложь;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьБазовоеКоличество") Тогда
		КоличествоБазовое = Истина;
	КонецЕсли;
	
	Если ВыборкаДетальныеЗаписи.Количество() Тогда
		ВыборкаДетальныеЗаписи.Следующий();
		ТекущиеДанные.ТаможеннаяСтоимость = ВыборкаДетальныеЗаписи.ЦенаБезНДС*
			?(КоличествоБазовое, ТекущиеДанные.КоличествоБазовое, ТекущиеДанные.Количество);
		Если НЕ Элементы.Товары.ОтборСтрок = Неопределено Тогда
			СтрокаРаздела = Объект.Разделы.НайтиСтроки(Новый Структура("НомерРаздела", Элементы.Товары.ОтборСтрок.НомерРаздела));
			Если СтрокаРаздела.Количество() И ЗначениеЗаполнено(СтрокаРаздела[0].СтавкаНДС) Тогда
				ТекущиеДанные.СуммаНДС = (ТекущиеДанные.ТаможеннаяСтоимость / 100)*СтрокаРаздела[0].СтавкаНДС.Ставка;
			КонецЕсли;
			Если СтрокаРаздела.Количество() Тогда
				РасчетИтоговТоваров();
				СтрокаРаздела[0].ТаможеннаяСтоимость = ИтогТаможеннаяСтоимость;
				СтрокаРаздела[0].СуммаПошлины = ИтогСуммаПошлины;
				СтрокаРаздела[0].СуммаНДС = ИтогСуммаНДС;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияПриИзменении(Элемент)
	
	ТоварыПартияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	УправлениеДиалогомДокументаКлиент.ОткрытьПодборПартий(ЭтотОбъект,Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыГТДПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОбновитьСтатусыГТД(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРазделы

&НаКлиенте
Процедура РазделыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	НовыйНомерРаздела = НовыйНомерРаздела();
	Если (НовыйНомерРаздела > НомерРазделаПредел) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Достигнут предельный номер раздела, новый раздел добавить нельзя. Проверьте нумерацию разделов.'"), , , , Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПередУдалением(Элемент, Отказ)
	
	Если Элементы.Разделы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтрокиТовары = Объект.Товары.НайтиСтроки(Новый Структура("НомерРаздела", Элементы.Разделы.ТекущиеДанные.НомерРаздела));
	
	Если НайденныеСтрокиТовары.Количество() > 0 Тогда
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияРазделыПередУдалением",ЭтотОбъект, Элементы.Разделы.ТекущиеДанные);
		ТекстВопроса = НСтр("ru = 'Удаление раздела приведет к удаление входящих в него товаров. Продолжить?'");
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.НомерРаздела = НовыйНомерРаздела;
	КонецЕсли;
	
	СтарыйНомерРаздела = Элемент.ТекущиеДанные.НомерРаздела;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_АктивироватьРаздел", 0.5, ИСТИНА);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДиалогомДокументаКлиент.ТоварыПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования, "Разделы");
	
КонецПроцедуры

&НаСервере
Процедура РазделыПослеУдаленияНаСервере(ПараметрыДействия=Неопределено)
	
	ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиСуммаДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПослеУдаления(Элемент)
	
	РазделыПослеУдаленияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение[0]) <> Тип("Число") Тогда	
		Если Строка = Неопределено ИЛИ Объект.Разделы.НайтиПоИдентификатору(Строка).НомерРаздела = ПараметрыПеретаскивания.Значение[0].НомерРаздела Тогда
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Иначе
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
			Элементы.Разделы.ТекущаяСтрока = Строка;
		КонецЕсли;	
	Иначе 
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РазделыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение[0]) <> Тип("Число") Тогда
		НомераРазделов = Новый Массив;
		НомераРазделов.Добавить(Элемент.ТекущиеДанные.НомерРаздела);
		НомераРазделов.Добавить(ПараметрыПеретаскивания.Значение[0].НомерРаздела);
		
		ПараметрыПеретаскивания.Значение[0].НомерРаздела = Элемент.ТекущиеДанные.НомерРаздела;
		
		ПараметрыДействия = Новый Структура;
		ТоварыТаможеннаяСтоимостьПриИзмененииНаСервере(ПараметрыДействия);
		
		Для Каждого НомерРаздела Из НомераРазделов Цикл
			ДанныеРаздела = Объект.Разделы.НайтиСтроки(Новый Структура("НомерРаздела",НомерРаздела));
			Если ДанныеРаздела.Количество()=0 Тогда
				Продолжить;
			КонецЕсли;
			
			общТаможеннаяСтоимость = 0;
			общСуммаПошлины = 0;
			общСуммаНДС = 0;
			
			Отбор = Новый Структура("НомерРаздела", НомерРаздела);
			
			НайденныеТовары = Объект.Товары.НайтиСтроки(Отбор);
			Для Каждого Товар Из НайденныеТовары Цикл
				общТаможеннаяСтоимость = общТаможеннаяСтоимость + Товар.ТаможеннаяСтоимость;
				общСуммаПошлины        = общСуммаПошлины + Товар.СуммаПошлины;
				общСуммаНДС            = общСуммаНДС + Товар.СуммаНДС;
			КонецЦикла;
			
			НайденныеАвтомобили = Объект.Автомобили.НайтиСтроки(Отбор);
			Для Каждого Автомобиль Из НайденныеАвтомобили Цикл
				общТаможеннаяСтоимость = общТаможеннаяСтоимость + Автомобиль.ТаможеннаяСтоимость;
				общСуммаПошлины        = общСуммаПошлины + Автомобиль.СуммаПошлины;
				общСуммаНДС            = общСуммаНДС + Автомобиль.СуммаНДС;
			КонецЦикла;
			
			ДанныеРаздела[0].ТаможеннаяСтоимость = общТаможеннаяСтоимость;
			ДанныеРаздела[0].СуммаПошлины        = общСуммаПошлины;
			ДанныеРаздела[0].СуммаНДС            = общСуммаНДС;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАвтомобили

&НаКлиенте
Процедура АвтомобилиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Элементы.РазделыАвтомобили.ТекущаяСтрока = Неопределено Тогда
		ВывестиСообщениеПоКоду("1", ЭтотОбъект, , , Отказ);
		Возврат;
	КонецЕсли;
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПередНачаломДобавления(ЭтаФорма, Элемент, Отказ, Копирование, Родитель, Группа, Параметр);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПередНачаломИзменения(Элемент, Отказ)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПередНачаломИзменения(ЭтотОбъект, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПередУдалением(Элемент, Отказ)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПередУдалением(ЭтотОбъект, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Элементы.РазделыАвтомобили.ТекущиеДанные = Неопределено Тогда
		Элемент.ТекущиеДанные.НомерРаздела = Элементы.РазделыАвтомобили.ТекущиеДанные.НомерРаздела;
		Элемент.ТекущиеДанные.Склад = Объект.СкладКомпании;
	КонецЕсли;
	
	Если Копирование Тогда
		РасчетИтоговАвтомобили();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ИтогСуммаПошлиныАвтомобилей        = 0;
	ИтогТаможеннаяСтоимостьАвтомобилей = 0;
	ИтогСуммаНДСАвтомобилей            = 0;
	Если НЕ Элементы.АвтомобилиПоказатьВсеАвтомобили.Пометка И НЕ Элементы.Автомобили.ОтборСтрок = Неопределено Тогда
		// Чтобы избавится от серверного вызова Объект.Товары.НайтиСтроки, переберем всю таблицу и подсчет произведем по условию.
		Для Каждого ТекущаяСтрока Из Объект.Автомобили Цикл
			Если ТекущаяСтрока.НомерРаздела = Элементы.Автомобили.ОтборСтрок.НомерРаздела Тогда
				ИтогСуммаПошлиныАвтомобилей        = ИтогСуммаПошлиныАвтомобилей        + ТекущаяСтрока.СуммаПошлины;
				ИтогТаможеннаяСтоимостьАвтомобилей = ИтогТаможеннаяСтоимостьАвтомобилей + ТекущаяСтрока.ТаможеннаяСтоимость;
				ИтогСуммаНДСАвтомобилей            = ИтогСуммаНДСАвтомобилей            + ТекущаяСтрока.СуммаНДС;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого СтрокаТЧ Из Объект.Автомобили Цикл
			ИтогСуммаПошлиныАвтомобилей        = ИтогСуммаПошлиныАвтомобилей        + СтрокаТЧ.СуммаПошлины;
			ИтогТаможеннаяСтоимостьАвтомобилей = ИтогТаможеннаяСтоимостьАвтомобилей + СтрокаТЧ.ТаможеннаяСтоимость;
			ИтогСуммаНДСАвтомобилей            = ИтогСуммаНДСАвтомобилей            + СтрокаТЧ.СуммаНДС;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиПослеУдаленияНаСервере(ПараметрыДействия=Неопределено)
	
	УправлениеДиалогомАльфаАвтоСервер.АвтомобилиПослеУдаления(ЭтотОбъект, Элементы.Товары, ПараметрыДействия);
	РасчетИтоговАвтомобили();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПослеУдаления(Элемент)
	
	АвтомобилиПослеУдаленияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПроверкаПеретаскивания(ЭтотОбъект, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле);
	
КонецПроцедуры

#Область ОбработчикиСобытийПолейТаблицыФормыАвтомобили

&НаКлиенте
Процедура АвтомобилиАвтомобильПриИзменении(Элемент)
	
	АвтомобилиАвтомобильПриИзмененииНаСервере();
	
	ТекущиеДанные = Элементы.Автомобили.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОбновитьСтатусыГТД(ТекущиеДанные);
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура АвтомобилиАвтомобильПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.АвтомобилиАвтомобильПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	Документы.ТаможеннаяДекларацияИмпорт.СформироватьНомерТаможеннойДекларацииСтроки(Объект, ТекущиеДанные);
	
КонецПроцедуры	

&НаСервере
Процедура АвтомобилиТаможеннаяСтоимостьПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	ТекущиеДанныеРаздела = Объект.Разделы.НайтиПоИдентификатору(Элементы.РазделыАвтомобили.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.АвтомобилиТаможеннаяСтоимостьПриИзменении(Объект, ТекущиеДанные, ТекущиеДанныеРаздела, ПараметрыДействия);
	
	Если ТекущиеДанные.ГТД.Пустая() Тогда
		Документы.ТаможеннаяДекларацияИмпорт.СформироватьНомерТаможеннойДекларацииСтроки(Объект, ТекущиеДанные);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиТаможеннаяСтоимостьПриИзменении(Элемент)
	
	АвтомобилиТаможеннаяСтоимостьПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиСуммаПошлиныПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	ТекущиеДанныеРаздела = Объект.Разделы.НайтиПоИдентификатору(Элементы.РазделыАвтомобили.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.АвтомобилиСуммаПошлиныПриИзменении(Объект, ТекущиеДанные, ТекущиеДанныеРаздела, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура АвтомобилиСуммаПошлиныПриИзменении(Элемент)
	
	АвтомобилиСуммаПошлиныПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиГТДПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Автомобили.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОбновитьСтатусыГТД(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРазделы

&НаКлиенте
Процедура РазделыАвтомобилиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	НовыйНомерРаздела = НовыйНомерРаздела();
	Если (НовыйНомерРаздела > НомерРазделаПредел) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Достигнут предельный номер раздела, новый раздел добавить нельзя. Проверьте нумерацию разделов.'"), , , , Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиПередУдалением(Элемент, Отказ)
	
	Если Элементы.РазделыАвтомобили.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УсловиеОтбора = Новый Структура("НомерРаздела", Элементы.РазделыАвтомобили.ТекущиеДанные.НомерРаздела);
	НайденныеСтрокиАвтомобили = Объект.Автомобили.НайтиСтроки(УсловиеОтбора);
	
	Если НайденныеСтрокиАвтомобили.Количество() > 0 Тогда
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияРазделыПередУдалением", ЭтотОбъект,
			Элементы.РазделыАвтомобили.ТекущиеДанные);
		ТекстВопроса = НСтр("ru = 'Удаление раздела приведет к удаление входящих в него товаров. Продолжить?'");
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.НомерРаздела = НовыйНомерРаздела;
	КонецЕсли;
	
	СтарыйНомерРаздела = Элемент.ТекущиеДанные.НомерРаздела;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_АктивироватьРаздел", 0.5, ИСТИНА);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДиалогомДокументаКлиент.ТоварыПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования, "Разделы");
	
КонецПроцедуры

&НаСервере
Процедура РазделыАвтомобилиПослеУдаленияНаСервере(ПараметрыДействия=Неопределено)
	
	ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиСуммаДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиПослеУдаления(Элемент)
	
	РазделыАвтомобилиПослеУдаленияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение[0]) <> Тип("Число") Тогда	
		Если Строка = Неопределено ИЛИ Объект.Разделы.НайтиПоИдентификатору(Строка).НомерРаздела = ПараметрыПеретаскивания.Значение[0].НомерРаздела Тогда
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Иначе
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
			Элементы.РазделыАвтомобили.ТекущаяСтрока = Строка;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение[0]) <> Тип("Число") Тогда
		
		НомераРазделов = Новый Массив;
		НомераРазделов.Добавить(Элемент.ТекущиеДанные.НомерРаздела);
		НомераРазделов.Добавить(ПараметрыПеретаскивания.Значение[0].НомерРаздела);
		
		ПараметрыПеретаскивания.Значение[0].НомерРаздела = Элемент.ТекущиеДанные.НомерРаздела;
		
		// Определим структуру параметров обработки текущего события
		ПараметрыДействия = Новый Структура;
		
		АвтомобилиТаможеннаяСтоимостьПриИзмененииНаСервере(ПараметрыДействия);
		
		Для Каждого НомерРаздела Из НомераРазделов Цикл
			ДанныеРаздела = Объект.Разделы.НайтиСтроки(Новый Структура("НомерРаздела",НомерРаздела));
			Если ДанныеРаздела.Количество()=0 Тогда
				Продолжить;
			КонецЕсли;
			
			общТаможеннаяСтоимость = 0;
			общСуммаПошлины = 0;
			общСуммаНДС = 0;
			
			Отбор = Новый Структура("НомерРаздела", НомерРаздела);
			
			НайденныеТовары = Объект.Товары.НайтиСтроки(Отбор);
			Для Каждого Товар Из НайденныеТовары Цикл
				общТаможеннаяСтоимость = общТаможеннаяСтоимость + Товар.ТаможеннаяСтоимость;
				общСуммаПошлины        = общСуммаПошлины + Товар.СуммаПошлины;
				общСуммаНДС            = общСуммаНДС + Товар.СуммаНДС;
			КонецЦикла;
			
			НайденныеАвтомобили = Объект.Автомобили.НайтиСтроки(Отбор);
			Для Каждого Автомобиль Из НайденныеАвтомобили Цикл
				общТаможеннаяСтоимость = общТаможеннаяСтоимость + Автомобиль.ТаможеннаяСтоимость;
				общСуммаПошлины        = общСуммаПошлины + Автомобиль.СуммаПошлины;
				общСуммаНДС            = общСуммаНДС + Автомобиль.СуммаНДС;
			КонецЦикла;
			
			ДанныеРаздела[0].ТаможеннаяСтоимость = общТаможеннаяСтоимость;
			ДанныеРаздела[0].СуммаПошлины        = общСуммаПошлины;
			ДанныеРаздела[0].СуммаНДС            = общСуммаНДС;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытийПолейТаблицыФормыРазделы

&НаКлиенте
Процедура РазделыСтранаПроисхожденияПриИзменении(Элемент)
	
	Если НЕ Элементы.Разделы.ТекущиеДанные = Неопределено И ЗначениеЗаполнено(Элементы.Разделы.ТекущиеДанные.СтранаПроисхождения) Тогда 
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияСтранаПриИзменении", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Установить страну происхождения для подчиненных строк?'");
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РазделыСтавкаНДСПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Разделы.НайтиПоИдентификатору(Элементы.Разделы.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.РазделыСтавкаНДСПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	РасчетИтоговТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыСтавкаНДСПриИзменении(Элемент)
	
	РазделыСтавкаНДСПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РазделыТаможеннаяСтоимостьПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Разделы.НайтиПоИдентификатору(Элементы.Разделы.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.РазделыТаможеннаяСтоимостьПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыТаможеннаяСтоимостьПриИзменении(Элемент)
	
	РазделыТаможеннаяСтоимостьПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РазделыСтавкаПошлиныПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Разделы.НайтиПоИдентификатору(Элементы.Разделы.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.РазделыСтавкаПошлиныПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	РасчетИтоговТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыСтавкаПошлиныПриИзменении(Элемент)
	
	РазделыСтавкаПошлиныПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РазделыСуммаПошлиныПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Разделы.НайтиПоИдентификатору(Элементы.Разделы.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.РазделыСуммаПошлиныПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	РасчетИтоговТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыСуммаПошлиныПриИзменении(Элемент)
	
	РазделыСуммаПошлиныПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыНомерРазделаПриИзменении(Элемент)
	
	НовыйНомерРаздела = Элементы.Разделы.ТекущиеДанные.НомерРаздела;
	Если НомерРазделаУникальный(Объект.Разделы, НовыйНомерРаздела) Тогда
		ЗаполнитьПоляТабЧасти("Товары", Новый Структура("НомерРаздела", НовыйНомерРаздела),
			Новый Структура("НомерРаздела", СтарыйНомерРаздела));
		
		Подключаемый_АктивироватьРаздел();
	Иначе
		Элементы.Разделы.ТекущиеДанные.НомерРаздела = СтарыйНомерРаздела;
		ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
			"Разделы",
			Элементы.Разделы.ТекущиеДанные.НомерСтроки, 
			"НомерРаздела"
		);
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Раздел №%1 уже существует. Укажите другой номер раздела'"),НовыйНомерРаздела),
			,,
			ПутьКТабличнойЧасти	
		);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРазделыАвтомобили

#Область ОбработчикиСобытийПолейТаблицыФормыРазделыАвтомобили

&НаКлиенте
Процедура РазделыАвтомобилиСтранаПроисхожденияПриИзменении(Элемент)
	
	Если НЕ Элементы.РазделыАвтомобили.ТекущиеДанные = Неопределено И ЗначениеЗаполнено(Элементы.РазделыАвтомобили.ТекущиеДанные.СтранаПроисхождения) Тогда 
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияСтранаПриИзменении", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Установить страну происхождения для подчиненных строк?'");
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РазделыАвтомобилиСтавкаНДСПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Разделы.НайтиПоИдентификатору(Элементы.РазделыАвтомобили.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.РазделыСтавкаНДСПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиСтавкаНДСПриИзменении(Элемент)
	
	РазделыАвтомобилиСтавкаНДСПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РазделыАвтомобилиТаможеннаяСтоимостьПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Разделы.НайтиПоИдентификатору(Элементы.РазделыАвтомобили.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.РазделыТаможеннаяСтоимостьПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиТаможеннаяСтоимостьПриИзменении(Элемент)
	
	РазделыАвтомобилиТаможеннаяСтоимостьПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РазделыАвтомобилиСтавкаПошлиныПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Разделы.НайтиПоИдентификатору(Элементы.РазделыАвтомобили.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.РазделыСтавкаПошлиныПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	РасчетИтоговАвтомобили();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиСтавкаПошлиныПриИзменении(Элемент)
	
	РазделыАвтомобилиСтавкаПошлиныПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РазделыАвтомобилиСуммаПошлиныПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Разделы.НайтиПоИдентификатору(Элементы.РазделыАвтомобили.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.РазделыСуммаПошлиныПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	РасчетИтоговАвтомобили();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиСуммаПошлиныПриИзменении(Элемент)
	
	РазделыАвтомобилиСуммаПошлиныПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыАвтомобилиНомерРазделаПриИзменении(Элемент)
	
	НовыйНомерРаздела = Элементы.РазделыАвтомобили.ТекущиеДанные.НомерРаздела;
	Если НомерРазделаУникальный(Объект.Разделы, НовыйНомерРаздела) Тогда
		ЗаполнитьПоляТабЧасти("Автомобили", Новый Структура("НомерРаздела", НовыйНомерРаздела),
			Новый Структура("НомерРаздела", СтарыйНомерРаздела));
		
		Подключаемый_АктивироватьРаздел();
	Иначе
		Элементы.РазделыАвтомобили.ТекущиеДанные.НомерРаздела = СтарыйНомерРаздела;
		ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
			"Разделы",
			Элементы.Разделы.ТекущиеДанные.НомерСтроки, 
			"НомерРаздела"
		);
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Раздел №%1 уже существует. Укажите другой номер раздела'"),НовыйНомерРаздела),
			,,
			ПутьКТабличнойЧасти,
			"Объект"
		);

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийПолейТаблицыФормыЗачетАвансов

&НаСервере
Процедура ЗачетАвансовДокументАвансаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.ЗачетАвансов.НайтиПоИдентификатору(Элементы.ЗачетАвансов.ТекущаяСтрока);
	Документы.ТаможеннаяДекларацияИмпорт.ЗачетАвансовДокументАвансаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗачетАвансовДокументАвансаПриИзменении(Элемент)
	
	ЗачетАвансовДокументАвансаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ПодборНоменклатуры(Команда)
	
	Если Элементы.Разделы.ТекущаяСтрока = Неопределено Тогда
		ВывестиСообщениеПоКоду("1", ЭтотОбъект);
		Возврат;
	КонецЕсли;
	
	ПараметрыДействия = Новый Структура();
	ПараметрыДействия.Вставить("НеУстанавливатьОтборНаОстаток", Истина);
	
	УправлениеДиалогомКлиент.ОткрытьПодборНоменклатуры(ЭтотОбъект, , , , , ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоПартиям(Команда)
	
	ПараметрыПодбора = Новый Структура;
	
	Если Элементы.Разделы.ТекущаяСтрока = Неопределено Тогда
		ВывестиСообщениеПоКоду("1", ЭтотОбъект);
		Возврат;
	КонецЕсли;
	
	ПараметрыПодбора.Вставить("ЗаполнитьОстатками", Истина);
	
	УправлениеДиалогомКлиент.ОткрытьПодборПартий(ЭтотОбъект, ПараметрыПодбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеТовары(Команда)
	
	Элементы.ТоварыПоказатьВсеТовары.Пометка = Не Элементы.ТоварыПоказатьВсеТовары.Пометка;
	Подключаемый_АктивироватьРаздел();
	
КонецПроцедуры 

&НаКлиенте
Процедура РаспределитьНаТовары(Команда)
	
	Если НЕ Элементы.Разделы.ВыделенныеСтроки.Количество() Тогда
		ПоказатьПредупреждение(, НСтр("ru='Необходимо выбрать хотя бы один раздел декларации.'"));
		Возврат;
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("РаспределитьНаТоварыОпределениеКолонокЗаверщение", ЭтотОбъект);
	ОткрытьФорму("Документ.ТаможеннаяДекларацияИмпорт.Форма.НастройкиРаспределения",, ЭтотОбъект, КлючУникальности,,,
		ОбработчикОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПоТоварам(Команда)
	
	Если НЕ Элементы.Разделы.ВыделенныеСтроки.Количество() Тогда
		ПоказатьПредупреждение(, НСтр("ru='Необходимо выбрать хотя бы один раздел декларации.'"));
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("НомерРаздела");
	
	Для Каждого Строка Из Элементы.Разделы.ВыделенныеСтроки Цикл
		Раздел = Объект.Разделы.НайтиПоИдентификатору(Строка);
		Отбор.НомерРаздела = Раздел.НомерРаздела;
		ТоварыРаздела = Объект.Товары.НайтиСтроки(Отбор);
		Раздел.ТаможеннаяСтоимость = 0;
		Раздел.СуммаПошлины = 0;
		Раздел.СуммаНДС = 0;
		
		Для Каждого Товар Из ТоварыРаздела Цикл
			Раздел.ТаможеннаяСтоимость = Раздел.ТаможеннаяСтоимость + Товар.ТаможеннаяСтоимость;
			Раздел.СуммаПошлины = Раздел.СуммаПошлины + Товар.СуммаПошлины;
			Раздел.СуммаНДС = Раздел.СуммаНДС + Товар.СуммаНДС;
		КонецЦикла;
		
		Раздел.СтавкаПошлины = 100 * ?(Раздел.ТаможеннаяСтоимость = 0, 0, Раздел.СуммаПошлины / Раздел.ТаможеннаяСтоимость);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНомерДляСФ(Команда)
	
	ЗаполнитьНомераДляСФ(
		ПредопределенноеЗначение("Перечисление.СпособыЗаполненияНомераТаможеннойДекларации.ПоНомеруСтроки"));
	
КонецПроцедуры 

&НаКлиенте
Процедура УстановитьНомерДляСФПоНомеруРаздела(Команда)
	
	ЗаполнитьНомераДляСФ(
		ПредопределенноеЗначение("Перечисление.СпособыЗаполненияНомераТаможеннойДекларации.ПоНомеруРаздела"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтрануПроисхождения(Команда)
	
	Если НЕ Элементы.Товары.ВыделенныеСтроки.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.СтраныМира.ФормаВыбора",
		Новый Структура("РежимВыбора", Истина),
		,
		,
		,
		,
		Новый ОписаниеОповещения("УстановитьСтрануПроисхожденияЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьНаАвтомобили(Команда)
	
	Если НЕ Элементы.РазделыАвтомобили.ВыделенныеСтроки.Количество() Тогда
		ПоказатьПредупреждение(, НСтр("ru='Необходимо выбрать хотя бы один раздел декларации.'"));
		Возврат;
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("РаспределитьНаАвтомобилиОпределениеКолонокЗаверщение", ЭтотОбъект);
	ОткрытьФорму("Документ.ТаможеннаяДекларацияИмпорт.Форма.НастройкиРаспределения",, ЭтотОбъект, КлючУникальности,,,
		ОбработчикОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПоАвтомобилям(Команда)
	
	Если НЕ Элементы.РазделыАвтомобили.ВыделенныеСтроки.Количество() Тогда
		ПоказатьПредупреждение(, НСтр("ru='Необходимо выбрать хотя бы один раздел декларации.'"));
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("НомерРаздела");
	
	Для Каждого Строка Из Элементы.РазделыАвтомобили.ВыделенныеСтроки Цикл
		Раздел = Объект.Разделы.НайтиПоИдентификатору(Строка);
		Отбор.НомерРаздела = Раздел.НомерРаздела;
		АвтомобилиРаздела = Объект.Автомобили.НайтиСтроки(Отбор);
		Раздел.ТаможеннаяСтоимость = 0;
		Раздел.СуммаПошлины = 0;
		Раздел.СуммаНДС = 0;
		
		Для Каждого Автомобиль Из АвтомобилиРаздела Цикл
			Раздел.ТаможеннаяСтоимость = Раздел.ТаможеннаяСтоимость + Автомобиль.ТаможеннаяСтоимость;
			Раздел.СуммаПошлины = Раздел.СуммаПошлины + Автомобиль.СуммаПошлины;
			Раздел.СуммаНДС = Раздел.СуммаНДС + Автомобиль.СуммаНДС;
		КонецЦикла;
		
		Раздел.СтавкаПошлины = 100 * ?(Раздел.ТаможеннаяСтоимость = 0, 0, Раздел.СуммаПошлины / Раздел.ТаможеннаяСтоимость);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтрануПроисхожденияАвтомобили(Команда)
	
	Если НЕ Элементы.Автомобили.ВыделенныеСтроки.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.СтраныМира.ФормаВыбора",
		Новый Структура("РежимВыбора", Истина),
		,
		,
		,
		,
		Новый ОписаниеОповещения("УстановитьСтрануПроисхожденияАвтомобилиЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеАвтомобили(Команда)
	
	Элементы.АвтомобилиПоказатьВсеАвтомобили.Пометка = НЕ Элементы.АвтомобилиПоказатьВсеАвтомобили.Пометка;
	Подключаемый_АктивироватьРаздел();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПодборАвансов(Команда)
	
	УправлениеДиалогомКлиент.ОткрытьПодборАвансов(ЭтотОбъект, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияСтранаПриИзменении(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.ХозОперации.ТаможеннаяДекларацияИмпорт") Тогда
			
			НайденныеТовары = Объект.Товары.НайтиСтроки(Новый Структура("НомерРаздела", Элементы.Разделы.ТекущиеДанные.НомерРаздела));
			
			Для Каждого Товар Из НайденныеТовары Цикл
				Товар.СтранаПроисхождения = Элементы.Разделы.ТекущиеДанные.СтранаПроисхождения;
			КонецЦикла;
		Иначе
			УсловиеОтбора = Новый Структура("НомерРаздела", Элементы.РазделыАвтомобили.ТекущиеДанные.НомерРаздела);
			НайденныеАвтомобили = Объект.Автомобили.НайтиСтроки(УсловиеОтбора);
			
			Для Каждого Автомобиль Из НайденныеАвтомобили Цикл
				Автомобиль.СтранаПроисхождения = Элементы.РазделыАвтомобили.ТекущиеДанные.СтранаПроисхождения;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияРазделыПередУдалением(РезультатОповещения, ДанныеРаздела=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		НайденныеСтрокиТовары = Объект.Товары.НайтиСтроки(Новый Структура("НомерРаздела", ДанныеРаздела.НомерРаздела));
		
		Для каждого Строка Из НайденныеСтрокиТовары Цикл
			Объект.Товары.Удалить(Строка);
		КонецЦикла;
		
		НайденныеСтрокиАвтомобили = Объект.Автомобили.НайтиСтроки(Новый Структура("НомерРаздела", ДанныеРаздела.НомерРаздела));
		
		Для Каждого СтрокаДляУдаления Из НайденныеСтрокиАвтомобили Цикл
			Объект.Автомобили.Удалить(СтрокаДляУдаления);
		КонецЦикла;
		
		Объект.Разделы.Удалить(ДанныеРаздела);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоляТабЧасти(ИмяТабЧасти, ПоляЗначения, ОтборТабЧасти = Неопределено)
	
	Если ОтборТабЧасти = Неопределено Тогда
		Строки = ВыделенныеЭлементыКоллекции(Объект[ИмяТабЧасти], Элементы[ИмяТабЧасти].ВыделенныеСтроки);
	Иначе
		Строки = Объект[ИмяТабЧасти].НайтиСтроки(ОтборТабЧасти);
	КонецЕсли;
	
	Для Каждого Строка Из Строки Цикл
		ЗаполнитьЗначенияСвойств(Строка, ПоляЗначения);
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Функция ВыделенныеЭлементыКоллекции(Коллекция, Идентификаторы)
	
	ВыделенныеЭлементы = Новый Массив;
	
	Для Каждого ИндексСтроки Из Идентификаторы Цикл
		ЭлементКоллекции = Коллекция.НайтиПоИдентификатору(ИндексСтроки);
		
		Если ЭлементКоллекции <> Неопределено Тогда
			ВыделенныеЭлементы.Добавить(ЭлементКоллекции);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВыделенныеЭлементы;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_АктивироватьРаздел()
	
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.ХозОперации.ТаможеннаяДекларацияИмпорт") Тогда
		РазделОтбора = ?(Элементы.Разделы.ТекущиеДанные=Неопределено,0, Элементы.Разделы.ТекущиеДанные.НомерРаздела);
		ПоРазделам = НЕ Элементы.ТоварыПоказатьВсеТовары.Пометка;
		Товары = Элементы.Товары;
	Иначе
		РазделОтбора = ?(Элементы.РазделыАвтомобили.ТекущиеДанные=Неопределено,0, Элементы.РазделыАвтомобили.ТекущиеДанные.НомерРаздела);
		ПоРазделам = НЕ Элементы.АвтомобилиПоказатьВсеАвтомобили.Пометка;
		Товары = Элементы.Автомобили;
	КонецЕсли;
	
	Если ПоРазделам И (Товары.ОтборСтрок = Неопределено Или Товары.ОтборСтрок.НомерРаздела <> РазделОтбора) Тогда // включить отбор
		Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("НомерРаздела", РазделОтбора);
	ИначеЕсли Не ПоРазделам И Товары.ОтборСтрок<>Неопределено Тогда // выключить отбор
		Товары.ОтборСтрок = Неопределено;
	КонецЕсли; // ничего не менять
	
	РасчетИтоговТоваров();
	РасчетИтоговАвтомобили();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НомерРазделаУникальный(Разделы, НомерРаздела)
	
	НомерВстречался = Ложь;
	
	Для Каждого Раздел Из Разделы Цикл
		Если НомерВстречался И (Раздел.НомерРаздела = НомерРаздела) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		НомерВстречался = НомерВстречался Или (Раздел.НомерРаздела = НомерРаздела);
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция НовыйНомерРаздела()
	
	МаксимальныйНомер = 0;
	
	Для Каждого Раздел Из Объект.Разделы Цикл
		МаксимальныйНомер = Макс(МаксимальныйНомер, Раздел.НомерРаздела);
	КонецЦикла;
	
	Возврат МаксимальныйНомер + 1;
	
КонецФункции

&НаСервере
Процедура РасчетИтоговТоваров()
	
	Если НЕ Элементы.ТоварыПоказатьВсеТовары.Пометка И НЕ Элементы.Товары.ОтборСтрок = Неопределено Тогда
		НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("НомерРаздела", Элементы.Товары.ОтборСтрок.НомерРаздела));
		ИтогКоличество          = 0;
		ИтогКоличествоБазовое   = 0;
		ИтогСуммаПошлины        = 0;
		ИтогТаможеннаяСтоимость = 0;
		ИтогСуммаНДС            = 0;
		Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
			ИтогКоличество          = ИтогКоличество + ТекущаяСтрока.Количество;
			ИтогКоличествоБазовое   = ИтогКоличествоБазовое + ТекущаяСтрока.КоличествоБазовое;
			ИтогСуммаПошлины        = ИтогСуммаПошлины + ТекущаяСтрока.СуммаПошлины;
			ИтогТаможеннаяСтоимость = ИтогТаможеннаяСтоимость + ТекущаяСтрока.ТаможеннаяСтоимость;
			ИтогСуммаНДС            = ИтогСуммаНДС + ТекущаяСтрока.СуммаНДС;
		КонецЦикла;
	Иначе
		ИтогКоличество          = Объект.Товары.Итог("Количество");
		ИтогКоличествоБазовое   = Объект.Товары.Итог("КоличествоБазовое");
		ИтогСуммаПошлины        = Объект.Товары.Итог("СуммаПошлины");
		ИтогТаможеннаяСтоимость = Объект.Товары.Итог("ТаможеннаяСтоимость");
		ИтогСуммаНДС            = Объект.Товары.Итог("СуммаНДС");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьНаТоварыОпределениеКолонокЗаверщение(Распределять, ДопПараметры) Экспорт
	
	Если Распределять = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Сообщение = РаспределитьНаТоварыНаСервере(Распределять);
	ПоказатьОповещениеПользователя(НСтр("ru = 'Команда выполнена'"),, Сообщение, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаСервере
Функция РаспределитьНаТоварыНаСервере(Распределять)
	
	НомераРазделов = Новый Массив();
	
	Для Каждого Строка Из Элементы.Разделы.ВыделенныеСтроки Цикл
		Раздел = Объект.Разделы.НайтиПоИдентификатору(Строка);
		Документы.ТаможеннаяДекларацияИмпорт.РаспределитьНаТаблицу(Объект, Раздел, Распределять);
		НомераРазделов.Добавить(Раздел.НомерРаздела);
	КонецЦикла;
	
	РасчетИтоговТоваров();
	
	Возврат СтрШаблон(
		?(НомераРазделов.Количество() > 1,
			НСтр("ru = 'Суммы разделов %1 распределены на товары'"),
			НСтр("ru = 'Суммы раздела %1 распределены на товары'")),
		СтрСоединить(НомераРазделов, ","));
	
КонецФункции

&НаКлиенте
Процедура УстановитьСтрануПроисхожденияЗавершение(Страна, ДопПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Страна) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Элементы.Товары.ВыделенныеСтроки Цикл
		Объект.Товары.НайтиПоИдентификатору(Строка).СтранаПроисхождения = Страна;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РасчетИтоговАвтомобили()
	
	Если НЕ Элементы.АвтомобилиПоказатьВсеАвтомобили.Пометка И НЕ Элементы.Автомобили.ОтборСтрок = Неопределено Тогда
		НайденныеСтроки = Объект.Автомобили.НайтиСтроки(Новый Структура("НомерРаздела", Элементы.Автомобили.ОтборСтрок.НомерРаздела));
		ИтогСуммаПошлиныАвтомобилей        = 0;
		ИтогТаможеннаяСтоимостьАвтомобилей = 0;
		ИтогСуммаНДСАвтомобилей            = 0;
		Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
			ИтогСуммаПошлиныАвтомобилей        = ИтогСуммаПошлиныАвтомобилей + ТекущаяСтрока.СуммаПошлины;
			ИтогТаможеннаяСтоимостьАвтомобилей = ИтогТаможеннаяСтоимостьАвтомобилей + ТекущаяСтрока.ТаможеннаяСтоимость;
			ИтогСуммаНДСАвтомобилей            = ИтогСуммаНДСАвтомобилей + ТекущаяСтрока.СуммаНДС;
		КонецЦикла;
	Иначе
		ИтогСуммаПошлиныАвтомобилей        = Объект.Автомобили.Итог("СуммаПошлины");
		ИтогТаможеннаяСтоимостьАвтомобилей = Объект.Автомобили.Итог("ТаможеннаяСтоимость");
		ИтогСуммаНДСАвтомобилей            = Объект.Автомобили.Итог("СуммаНДС");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьНаАвтомобилиОпределениеКолонокЗаверщение(Распределять, ДопПараметры) Экспорт
	
	Если Распределять = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Сообщение = РаспределитьНаАвтомобилиНаСервере(Распределять);
	ПоказатьОповещениеПользователя(НСтр("ru = 'Команда выполнена'"),, Сообщение, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаСервере
Функция РаспределитьНаАвтомобилиНаСервере(Распределять)
	
	НомераРазделов = Новый Массив();
	
	Для Каждого Строка Из Элементы.РазделыАвтомобили.ВыделенныеСтроки Цикл
		Раздел = Объект.Разделы.НайтиПоИдентификатору(Строка);
		Документы.ТаможеннаяДекларацияИмпорт.РаспределитьНаТаблицу(Объект, Раздел, Распределять, "Автомобили");
		НомераРазделов.Добавить(Раздел.НомерРаздела);
	КонецЦикла;
	
	РасчетИтоговАвтомобили();
	
	Возврат СтрШаблон(
		?(НомераРазделов.Количество() > 1,
			НСтр("ru = 'Суммы разделов %1 распределены на автомобили'"),
			НСтр("ru = 'Суммы раздела %1 распределены на автомобили'")),
		СтрСоединить(НомераРазделов, ","));
	
КонецФункции

&НаКлиенте
Процедура УстановитьСтрануПроисхожденияАвтомобилиЗавершение(Страна, ДопПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Страна) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Элементы.Автомобили.ВыделенныеСтроки Цикл
		Объект.Автомобили.НайтиПоИдентификатору(Строка).СтранаПроисхождения = Страна;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыГТД(Строка = Неопределено)
	
	Если Строка = Неопределено Тогда
		Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.ХозОперации.ТаможеннаяДекларацияИмпорт") Тогда
			ТаблицаТоваров = Объект.Товары;
		Иначе
			ТаблицаТоваров = Объект.Автомобили;
		КонецЕсли;
	Иначе
		ТаблицаТоваров = Новый Массив;
		ТаблицаТоваров.Добавить(Строка);
	КонецЕсли;
	
	// Установим актуальный статус
	Для Каждого СтрокаТоваров Из ТаблицаТоваров Цикл
		Если ЗначениеЗаполнено(СтрокаТоваров.ГТД) Тогда
			СтрокаТоваров.СтатусСозданияГТД = НСтр("ru = 'Сформирован'");
		ИначеЕсли КонтрагентИзЕАЭС И СтрокаТоваров.ПрослеживаемыйТовар Тогда
			СтрокаТоваров.СтатусСозданияГТД = НСтр("ru = 'Получение через уведомление ФНС'");
		Иначе
			СтрокаТоваров.СтатусСозданияГТД = НСтр("ru = 'Заполнение после записи'");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусыГТДНаСервере(Строка = Неопределено)
	
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.ХозОперации.ТаможеннаяДекларацияИмпорт") Тогда
		ТаблицаТоваров = Объект.Товары;
	Иначе
		ТаблицаТоваров = Объект.Автомобили;
	КонецЕсли;
	
	// Установим актуальный статус
	Для Каждого СтрокаТоваров Из ТаблицаТоваров Цикл
		Если ЗначениеЗаполнено(СтрокаТоваров.ГТД) Тогда
			СтрокаТоваров.СтатусСозданияГТД = НСтр("ru = 'Сформирован'");
		ИначеЕсли КонтрагентИзЕАЭС И СтрокаТоваров.ПрослеживаемыйТовар Тогда
			СтрокаТоваров.СтатусСозданияГТД = НСтр("ru = 'Получение через уведомление ФНС'");
		Иначе
			СтрокаТоваров.СтатусСозданияГТД = НСтр("ru = 'Заполнение после записи'");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНадписьУведомленияОВвозеПрослеживаемогоТовара()
	
	// Найдем Уведомление если ранее не было заполнено
	Если НЕ ЗначениеЗаполнено(УведомлениеОВвозеТоваров)
		И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПодчиненныеДокументы.Ссылка КАК Ссылка
		|ИЗ
		|	КритерийОтбора.ПодчиненныеДокументы(&Основание) КАК ПодчиненныеДокументы
		|ГДЕ
		|	ПодчиненныеДокументы.Ссылка ССЫЛКА Документ.УведомлениеОВвозеПрослеживаемыхТоваров";
		Запрос.УстановитьПараметр("Основание", Объект.Ссылка);
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			УведомлениеОВвозеТоваров = Выборка.Ссылка;
		КонецЕсли;
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
	СформированоУведомление = ЗначениеЗаполнено(УведомлениеОВвозеТоваров);
	Элементы.КартинкаПредупреждение.Видимость = НЕ СформированоУведомление;
	Элементы.НадписьПредставлениеПредупрежденияОВвозе.Видимость = НЕ СформированоУведомление;
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ПроверкаПодразделенияДокументаИПользователяЗавершение(Контекст) Экспорт
	
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЗаполнениеОбъектов
&НаКлиенте
Процедура ПослеОбработкиЗаполнения(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ПослеОбработкиЗаполненияНаСервере(ПараметрыВыполнения, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ПослеОбработкиЗаполненияНаСервере(ПараметрыВыполнения, ДополнительныеПараметры)

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("ОчисткаТабличнойЧасти")
		И ДополнительныеПараметры.ОчисткаТабличнойЧасти = Истина
		И ДополнительныеПараметры.Свойство("ИмяТабличнойЧасти")
		И ДополнительныеПараметры.ИмяТабличнойЧасти = "Разделы" Тогда
		Объект.Товары.Очистить();
	КонецЕсли;
	
	ЗаполнениеОбъектовАльфаАвто.ПослеОбработкиЗаполнения(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ЗаполнениеОбъектов

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиАльфаАвто

// Ядро
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСуммаДокументаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.ПоказатьРасширенныеИтогиОперации(ЭтотОбъект, Элемент);
	
КонецПроцедуры
// Конец Ядро

// ПрослеживаемыеТовары
&НаСервере
Процедура ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара()
	
	УчетПрослеживаемыхТоваровСервер.ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара(Объект);
	ИменаРеквизитов = УчетПрослеживаемыхТоваровСервер
		.ИменаРеквизитовДляЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара();
	ИменаРеквизитов.ИмяТаблицы = "Автомобили";
	ИменаРеквизитов.ИмяРеквизита = "Автомобиль";
	УчетПрослеживаемыхТоваровСервер.ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара(Объект,, ИменаРеквизитов);
	
КонецПроцедуры
// Конец ПрослеживаемыеТовары

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	УправлениеДиалогомДокументаСервер.РасставитьСвязиПараметровВыбораДокументовАванса(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомДокументаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	Элементы.ДокументОснование.Видимость = ЗначениеЗаполнено(Объект.ДокументОснование);
	Элементы.ТоварыПоказатьВсеТовары.Пометка = ОтборПоРазделам;
	РасчетИтоговТоваров();
	РасчетИтоговАвтомобили();
	
	ЭтоТаможеннаяДекларацияИмпортАвтомобилей = (Объект.ХозОперация = Справочники.ХозОперации.ТаможеннаяДекларацияИмпортАвтомобилей);
	Элементы.СтраницаАвтомобили.Видимость    = ЭтоТаможеннаяДекларацияИмпортАвтомобилей;
	Элементы.СтраницаТовары.Видимость        = НЕ ЭтоТаможеннаяДекларацияИмпортАвтомобилей;
	
	ТекстОшибки = УправлениеДиалогомКлиентСервер.КорректныйНомерДекларации(Объект.НомерДекларации);
	Элементы.ТекстОшибкиНомераДекларации.Видимость = (НЕ ПустаяСтрока(ТекстОшибки));
	Элементы.ТекстОшибкиНомераДекларации.Заголовок = ТекстОшибки;
	
	Элементы.СуммаТаможенногоСбораРасширеннаяПодсказка.Заголовок = Объект.ВалютаДокумента.Наименование;
	Элементы.СуммаТаможенногоШтрафаРасширеннаяПодсказка.Заголовок = Объект.ВалютаДокумента.Наименование;
	
	СтруктураПоиска = Новый Структура("ПрослеживаемыйТовар", Истина);
	ЕстьТоварыПрослеживаемости = ?(ЭтоТаможеннаяДекларацияИмпортАвтомобилей,
	Объект.Автомобили.НайтиСтроки(СтруктураПоиска),
	Объект.Товары.НайтиСтроки(СтруктураПоиска)).Количество() > 0;
	
	Элементы.УведомлениеОВвозеПрослеживаемыхТоваров.Видимость = КонтрагентИзЕАЭС И ЕстьТоварыПрослеживаемости;
	УстановитьНадписьУведомленияОВвозеПрослеживаемогоТовара();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УправлениеДиалогомДокументаСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект);
	
	// Установим условное оформление для прослеживаемого товара с поставщиком из ЕАЭС
	// Для товаров
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыГТД.Имя);
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНомерДляСФ.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ПрослеживаемыйТовар");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтрагентИзЕАЭС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Для автомобилей
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.АвтомобилиГТД.Имя);
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.АвтомобилиНомерДляСФ.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Автомобили.ПрослеживаемыйТовар");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтрагентИзЕАЭС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	ИзмененоОснование = (ТипЗнч(РезультатОповещения) = Тип("Структура")
	И ПолучитьЗначениеПараметраСтруктуры(РезультатОповещения, "ТребуетсяЗаполнитьНаОсновании", Ложь));
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	НовыеТовары = Объект.Товары.НайтиСтроки(Новый Структура("НомерРаздела",0));
	Если НовыеТовары.Количество()>0 И НЕ Элементы.Разделы.ТекущаяСтрока = Неопределено Тогда
		ТекущиеДанные = Объект.Разделы.НайтиПоИдентификатору(Элементы.Разделы.ТекущаяСтрока);
		Для каждого Строка Из НовыеТовары Цикл
			Строка.НомерРаздела = ТекущиеДанные.НомерРаздела;
		КонецЦикла;
		Документы.ТаможеннаяДекларацияИмпорт.НомерДекларацииПриИзменении(Объект);
	КонецЕсли;
	
	Если ДополнительныеПараметры = "ПодборПоПартиям" Тогда
	
		ТаблицаТоваровДляУстановкиСтоимости = Новый ТаблицаЗначений();
		ТаблицаТоваровДляУстановкиСтоимости.Колонки.Добавить("Номенклатура");
		ТаблицаТоваровДляУстановкиСтоимости.Колонки.Добавить("ХарактеристикаНоменклатуры");
		ТаблицаТоваровДляУстановкиСтоимости.Колонки.Добавить("Партия");
		ТаблицаТоваровДляУстановкиСтоимости.Колонки.Добавить("Склад");
		
		Для каждого Строка Из Объект.Товары Цикл
			Если ЗначениеЗаполнено(Строка.Партия) И Не ЗначениеЗаполнено(Строка.Склад) Тогда
				Строка.Склад = Строка.Партия.СкладКомпании;
			КонецЕсли;
			Если Строка.ТаможеннаяСтоимость = 0 Тогда
				Стр = ТаблицаТоваровДляУстановкиСтоимости.Добавить();
				ЗаполнитьЗначенияСвойств(Стр, Строка);
			КонецЕсли;
		КонецЦикла;
		
		Если ТаблицаТоваровДляУстановкиСтоимости.Количество() Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПартииТоваровКомпанииОстатки.СуммаБезНДСОстаток / ПартииТоваровКомпанииОстатки.КоличествоОстаток КАК ЦенаБезНДС,
			|	ПартииТоваровКомпанииОстатки.СкладКомпании КАК Склад,
			|	ПартииТоваровКомпанииОстатки.Номенклатура КАК Номенклатура,
			|	ПартииТоваровКомпанииОстатки.ХарактеристикаНоменклатуры КАК Характеристика,
			|	ПартииТоваровКомпанииОстатки.Партия КАК Партия
			|ИЗ
			|	РегистрНакопления.ПартииТоваровКомпании.Остатки(
			|			,
			|			Номенклатура В (&СписокНоменклатур)
			|				И Партия В (&СписокПартий)
			|				И СкладКомпании В (&СписокСкладов)
			|				И ХарактеристикаНоменклатуры В (&СписокХарактеристик)) КАК ПартииТоваровКомпанииОстатки";
			
			Запрос.УстановитьПараметр("СписокНоменклатур",   ТаблицаТоваровДляУстановкиСтоимости.ВыгрузитьКолонку("Номенклатура"));
			Запрос.УстановитьПараметр("СписокПартий",        ТаблицаТоваровДляУстановкиСтоимости.ВыгрузитьКолонку("Партия"));
			Запрос.УстановитьПараметр("СписокСкладов",       ТаблицаТоваровДляУстановкиСтоимости.ВыгрузитьКолонку("Склад"));
			Запрос.УстановитьПараметр("СписокХарактеристик", ТаблицаТоваровДляУстановкиСтоимости.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
			
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СтруктураПоиска = Новый Структура("Номенклатура, Партия, Склад, ХарактеристикаНоменклатуры",
					ВыборкаДетальныеЗаписи.Номенклатура,
					ВыборкаДетальныеЗаписи.Партия,
					ВыборкаДетальныеЗаписи.Склад,
					ВыборкаДетальныеЗаписи.Характеристика
				);
				
				НайденныеСтроки = Объект.Товары.НайтиСтроки(СтруктураПоиска);
				Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
					Если ТекущаяСтрока.ТаможеннаяСтоимость = 0 Тогда
						ТекущаяСтрока.ТаможеннаяСтоимость = ВыборкаДетальныеЗаписи.ЦенаБезНДС * ТекущаяСтрока.Количество;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			РасчетИтоговТоваров();
			СтрокаРаздела = Объект.Разделы.НайтиСтроки(Новый Структура("НомерРаздела", Элементы.Товары.ОтборСтрок.НомерРаздела));
			Если СтрокаРаздела.Количество() Тогда
				СтрокаРаздела[0].ТаможеннаяСтоимость = ИтогТаможеннаяСтоимость;
				СтрокаРаздела[0].СуммаПошлины = ИтогСуммаПошлины;
				СтрокаРаздела[0].СуммаНДС = ИтогСуммаНДС;
			КонецЕсли;
		КонецЕсли;
	
	КонецЕсли;
	
	Если ИзмененоОснование Тогда
		ЗаполнитьПризнакЕАЭСКонтрагента();
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если НЕ УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКоманды = ПолучитьЗначениеПараметраСтруктуры(РезультатОповещения, "ИмяОбработчикаКоманды");
	
	ОбновитьСтатусыГТД();
	
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);  
	
	// Установим позиционирование раздела
	Если ИмяКоманды = "АвтомобилиЗаполнитьПоПоступлению"
		И Элементы.РазделыАвтомобили.ТекущаяСтрока = Неопределено
		И Объект.Разделы.Количество() > 0 Тогда
		Элементы.РазделыАвтомобили.ТекущаяСтрока = Объект.Разделы[0].ПолучитьИдентификатор();
	ИначеЕсли ИмяКоманды = "ТоварыЗаполнитьПоПоступлению"
		И Элементы.Разделы.ТекущаяСтрока = Неопределено
		И Объект.Разделы.Количество() > 0 Тогда
		Элементы.Разделы.ТекущаяСтрока = Объект.Разделы[0].ПолучитьИдентификатор();
	КонецЕсли;
	
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьПризнакЕАЭСКонтрагента()
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		КонтрагентИзЕАЭС = Объект.Контрагент.СтранаРегистрацииЕАЭС;
	Иначе
		КонтрагентИзЕАЭС = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		УстановитьКоличествоДо(Элемент.ТекущиеДанные.Количество, Элемент.ТекущиеДанные.КоличествоБазовое);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьКоличествоДо(Количество, КоличествоБазовое)
	Если ПолучитьФункциональнуюОпцию("ИспользоватьБазовоеКоличество") Тогда
		КоличествоДо = КоличествоБазовое;
	Иначе
		КоличествоДо = Количество;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСтоимостьИНДС(ТекущиеДанные, ИзменяетсяКолМест = Ложь)
	
	КоличествоБазовое = Ложь;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьБазовоеКоличество") Тогда
		КоличествоБазовое = Истина;
	КонецЕсли;
	
	Если ИзменяетсяКолМест Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ЕдиницаИзмерения) И КоличествоДо <> 0 Тогда
			Если ТекущиеДанные.Количество = 0 Тогда
				ТекущиеДанные.ТаможеннаяСтоимость = 0;
				ТекущиеДанные.СуммаНДС = 0;
			Иначе
				ТекущиеДанные.ТаможеннаяСтоимость = (ТекущиеДанные.ТаможеннаяСтоимость / КоличествоДо) * ТекущиеДанные.Количество;
				ТекущиеДанные.СуммаНДС = (ТекущиеДанные.СуммаНДС / КоличествоДо) * ТекущиеДанные.Количество;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ЕдиницаИзмерения) И КоличествоДо <> 0 Тогда
			Если ?(КоличествоБазовое, ТекущиеДанные.КоличествоБазовое = 0, ТекущиеДанные.Количество = 0) Тогда
				ТекущиеДанные.ТаможеннаяСтоимость = 0;
				ТекущиеДанные.СуммаНДС = 0;
			Иначе
				ТекущиеДанные.ТаможеннаяСтоимость = (ТекущиеДанные.ТаможеннаяСтоимость / КоличествоДо)*
				?(КоличествоБазовое, ТекущиеДанные.КоличествоБазовое, ТекущиеДанные.Количество);
				ТекущиеДанные.СуммаНДС = (ТекущиеДанные.СуммаНДС / КоличествоДо)*
				?(КоличествоБазовое, ТекущиеДанные.КоличествоБазовое, ТекущиеДанные.Количество);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераДляСФ(РежимЗаполнения)
	
	ПараметрыДействия = Новый Структура; 
	ПараметрыДействия.Вставить("РежимЗаполнения", РежимЗаполнения);
	НомерДекларацииПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	                                                                                                                
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, 	РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект,			РезультатОповещения);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

