///////////////////////////////////////////////////////////////////////////////
// Модуль формы заполнения реквизитов документа документа "Поступление товаров"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Событие = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Событие", Неопределено);
	ЭтотОбъект.Заголовок = "Заполнение реквизитов документа """ + ?(ЕстьРеквизит(Параметры, "ИмяКоманды"), Метаданные.Документы[Параметры.ИмяКоманды].Синоним, "") + """";
	
	Если НЕ ЗначениеЗаполнено(Событие) ИЛИ ТипЗнч(Событие) <> Тип("ДокументСсылка.Событие") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Событие.Контрагент) Тогда
		Клиент = Строка(Событие.Контрагент);
		Контрагент = Событие.Контрагент;
	Иначе
		Клиент = Событие.ОбращениеККлиенту;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Событие.ПредставлениеТелефона) Тогда
		ПредставлениеТелефона = Событие.ПредставлениеТелефона;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Событие.АдресЭлектроннойПочты) Тогда
		АдресЭлектроннойПочты = Событие.АдресЭлектроннойПочты;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Событие.Адрес) Тогда
		Адрес = Событие.Адрес;
	КонецЕсли;
	
	СформироватьПредставлениеТелефона();
	
	ОбновитьСтатус();
	
КонецПроцедуры // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте при открытии формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Обработаем телефон клиента
	ПредставлениеТелефонаПриИзменении();
	
КонецПроцедуры

// Обработчик события возникающего на клиенте во всех формах при вызове метода Оповестить.
//
// Параметры:
//  ИмяСобытия - Строка       - Имя, идентифицирующее событие.
//  Параметр   - Произвольный - Параметр сообщения.
//  Источник   - Произвольный - Источник события.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанКонтрагент" Тогда
		Если Параметр <> Неопределено 
			И ТипЗнч(Параметр) = Тип("СправочникСсылка.Контрагенты") 
			И ТипЗнч(Источник) = Тип("ФормаКлиентскогоПриложения")
			И Источник.ВладелецФормы = ЭтотОбъект Тогда
				Контрагент = Параметр;
				ОбновитьСтатус();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаОповещения()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события возникающего на клиенте при изменении данных реквизита "Телефон".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ПредставлениеТелефонаПриИзменении(Элемент=Неопределено)
	
	Если НЕ ПустаяСтрока(ПредставлениеТелефона) Тогда
		// разберем телефон на состовляющие
		ВремПредставление = Прав(ПредставлениеТелефона, СтрДлина(ПредставлениеТелефона) - 1);
		
		ПозицияРазделителя = Найти(ВремПредставление, "-");
		КодРегиона = Лев(ВремПредставление, ПозицияРазделителя - 1);
		ВремПредставление = Сред(ВремПредставление, ПозицияРазделителя + 1);
		
		ПозицияРазделителя = Найти(ВремПредставление, "-");
		КодГорода = СтрЗаменить(СтрЗаменить(Лев(ВремПредставление, ПозицияРазделителя - 1), "(", ""),")","");
		ВремПредставление = Сред(ВремПредставление, ПозицияРазделителя + 1);
		
		ПозицияРазделителя = Найти(ВремПредставление, "-");
		НомерТелефона = Лев(ВремПредставление, ПозицияРазделителя - 1);
		ВремПредставление = Сред(ВремПредставление, ПозицияРазделителя + 1);
		
		ПозицияРазделителя = Найти(ВремПредставление, "доб.");
		ВнутреннийНомер = Прав(ВремПредставление, СтрДлина(ВремПредставление) - 4);
		
	Иначе
		КодРегиона      = "";
		КодГорода       = "";
		НомерТелефона   = "";
		ВнутреннийНомер = "";
	КонецЕсли;
	
	СформироватьПредставлениеТелефона();
	
КонецПроцедуры // ПредставлениеТелефонаПриИзменении()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Заказчик".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ЗаказчикПриИзменении(Элемент)
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Обработаем событие в контексте сервера
	ЗаказчикПриИзмененииНаСервере(ПараметрыДействия);
	
	// Обработаем изменения требующие ответа от пользователя
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
	ОбновитьСтатус();
	
КонецПроцедуры // ЗаказчикПриИзменении()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Заказчик" в контексте сервера.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаСервере
Процедура ЗаказчикПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Проверим наличие заметок по выбранному объекту.
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Контрагент, ПараметрыДействия);
	
КонецПроцедуры // ЗаказчикПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия кнопки "Найти контрагента".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура НайтиКонтрагента(Команда)
	
	Результат = ПоискКонтрагента();
	
	Если ТипЗнч(Результат) = Тип("Число") Тогда
		ВывестиРезультатПредупреждения(Результат);
	ИначеЕсли ТипЗнч(Результат) = Тип("Строка") Тогда
		ПараметрыВыбора = Новый Структура;
		ПараметрыВыбора.Вставить("ЗакрыватьПриВыборе",            Истина);
		ПараметрыВыбора.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
		ПараметрыВыбора.Вставить("МножественныйВыбор",            Ложь);
		ПараметрыВыбора.Вставить("РежимВыбора",                   Истина);
		ПараметрыВыбора.Вставить("АдресСписка",                   Результат);
		
		ОбработкаОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаВыбораЗаказчика", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораИзТаблицы", ПараметрыВыбора, ЭтотОбъект,,,, ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
	ОбновитьСтатус();
	
КонецПроцедуры // НайтиКонтрагента()

// Обработчик события нажатия кнопки "Создать контрагента".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура СоздатьКонтрагента(Команда)
	
	ПараметрыФормы = Новый Структура();
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("Наименование",       Клиент);
	ДанныеЗаполнения.Вставить("НаименованиеПолное", Клиент);
	ДанныеЗаполнения.Вставить("ВидКонтрагента",     ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.Покупатель"));
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ДанныеЗаполнения);
	Если ЗначениеЗаполнено(ПредставлениеТелефона) Тогда
		ПараметрыФормы.Вставить("ТелефонКонтрагента", ПредставлениеТелефона);
	КонецЕсли;
	Если ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
		ПараметрыФормы.Вставить("АдресЭП", АдресЭлектроннойПочты);
	КонецЕсли;
	Если ЗначениеЗаполнено(Адрес) Тогда
		ПараметрыФормы.Вставить("Адрес", Адрес);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // СоздатьКонтрагента()

// Обработчик события нажатия кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Закрыть(Контрагент);
	ИначеЕсли ЗначениеЗаполнено(Клиент) Тогда
		Закрыть(Клиент);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Поиск контрагента
//
&НаСервере
Функция ПоискКонтрагента()
	
	Если ПустаяСтрока(Клиент) И ПустаяСтрока(НомерТелефона) И ПустаяСтрока(Адрес) И ПустаяСтрока(АдресЭлектроннойПочты) Тогда
		Возврат 1;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если НЕ ПустаяСтрока(Клиент) Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", "%"+Клиент+"%");
		Запрос = Новый Запрос;
		Запрос.Текст= "ВЫБРАТЬ
		              |	КонтактнаяИнформация.Ссылка КАК Контрагент,
		              |	КонтактнаяИнформация.Ссылка.Наименование КАК Наименование,
		              |	КонтактнаяИнформация.Ссылка.ИНН КАК ИНН,
		              |	NULL КАК ШтрихКод
		              |ПОМЕСТИТЬ ТаблицаКонтрагентов
		              |ИЗ
		              |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		              |ГДЕ
		              |	(&УсловиеПоТелефону &УсловиеПоАдресу &ЭПУсловие
		              |			ИЛИ КонтактнаяИнформация.Представление ПОДОБНО &СтрокаПоиска)
		              |
		              |ОБЪЕДИНИТЬ ВСЕ
		              |
		              |ВЫБРАТЬ
		              |	Контрагенты.Ссылка,
		              |	Контрагенты.Наименование,
		              |	Контрагенты.ИНН,
		              |	NULL
		              |ИЗ
		              |	Справочник.Контрагенты КАК Контрагенты
		              |ГДЕ
		              |	(Контрагенты.ИНН ПОДОБНО &СтрокаПоиска
		              |			ИЛИ Контрагенты.Наименование ПОДОБНО &СтрокаПоиска
		              |			ИЛИ Контрагенты.НаименованиеПолное ПОДОБНО &СтрокаПоиска)
		              |
		              |ОБЪЕДИНИТЬ ВСЕ
		              |
		              |ВЫБРАТЬ
		              |	ВЫРАЗИТЬ(Карточки.Объект КАК Справочник.Контрагенты),
		              |	Карточки.Объект.Наименование,
		              |	Карточки.Объект.ИНН,
		              |	ШтрихКоды.ШтрихКод
		              |ИЗ
		              |	РегистрСведений.ШтрихКоды КАК ШтрихКоды
		              |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Карточки КАК Карточки
		              |		ПО ШтрихКоды.Объект = Карточки.Ссылка
		              |ГДЕ
		              |	ШтрихКоды.ШтрихКод ПОДОБНО &СтрокаПоиска
		              |	И Карточки.Объект ССЫЛКА Справочник.Контрагенты
		              |
		              |ИНДЕКСИРОВАТЬ ПО
		              |	Контрагент
		              |;
		              |
		              |////////////////////////////////////////////////////////////////////////////////
		              |ВЫБРАТЬ
		              |	КонтактнаяИнформация.Ссылка,
		              |	МАКСИМУМ(ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100))) КАК КонтактнаяИнформация
		              |ПОМЕСТИТЬ КонтактнаяИнформацияПоУмолчанию
		              |ИЗ
		              |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		              |ГДЕ
		              |	КонтактнаяИнформация.ВидДляСписка = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)
		              |	И КонтактнаяИнформация.Ссылка В
		              |			(ВЫБРАТЬ
		              |				ТаблицаКонтрагентов.Контрагент
		              |			ИЗ
		              |				ТаблицаКонтрагентов КАК ТаблицаКонтрагентов)
		              |
		              |СГРУППИРОВАТЬ ПО
		              |	КонтактнаяИнформация.Ссылка
		              |;
		              |
		              |////////////////////////////////////////////////////////////////////////////////
		              |ВЫБРАТЬ РАЗЛИЧНЫЕ
		              |	ТаблицаКонтрагентов.Контрагент КАК Контрагент,
		              |	ТаблицаКонтрагентов.ИНН,
		              |	КонтактнаяИнформацияПоУмолчанию.КонтактнаяИнформация КАК КонтактнаяИнформация,
		              |	ШтрихКоды.ШтрихКод
		              |ИЗ
		              |	ТаблицаКонтрагентов КАК ТаблицаКонтрагентов
		              |		ЛЕВОЕ СОЕДИНЕНИЕ КонтактнаяИнформацияПоУмолчанию КАК КонтактнаяИнформацияПоУмолчанию
		              |		ПО ТаблицаКонтрагентов.Контрагент = КонтактнаяИнформацияПоУмолчанию.Ссылка
		              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихКоды КАК ШтрихКоды
		              |		ПО ТаблицаКонтрагентов.Контрагент = ШтрихКоды.Объект.Объект
		              |
		              |УПОРЯДОЧИТЬ ПО
		              |	Контрагент";
	    Запрос.УстановитьПараметр("СтрокаПоиска", "%"+Клиент+"%");
		Если ЗначениеЗаполнено(НомерТелефона) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоТелефону","КонтактнаяИнформация.Представление ПОДОБНО &НомерТелефона");
			Запрос.УстановитьПараметр("НомерТелефона", "%"+НомерТелефона+"%");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоТелефону","Ложь");
		КонецЕсли;
		Если ЗначениеЗаполнено(Адрес) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоАдресу"," ИЛИ КонтактнаяИнформация.Представление ПОДОБНО &Адрес");
			Запрос.УстановитьПараметр("Адрес", "%"+Адрес+"%");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоАдресу","");
		КонецЕсли;
		Если ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЭПУсловие"," ИЛИ КонтактнаяИнформация.Представление ПОДОБНО &АдресЭлектроннойПочты");
			Запрос.УстановитьПараметр("АдресЭлектроннойПочты", "%"+АдресЭлектроннойПочты+"%");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЭПУсловие","");
		КонецЕсли;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст= "ВЫБРАТЬ
		              |	КонтактнаяИнформация.Ссылка КАК Контрагент,
		              |	КонтактнаяИнформация.Ссылка.Наименование КАК Наименование,
		              |	КонтактнаяИнформация.Ссылка.ИНН КАК ИНН
		              |ПОМЕСТИТЬ ТаблицаКонтрагентов
		              |ИЗ
		              |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		              |ГДЕ
		              |	(&УсловиеПоТелефону &УсловиеПоАдресу &ЭПУсловие)
		              |
		              |ИНДЕКСИРОВАТЬ ПО
		              |	Контрагент
		              |;
		              |
		              |////////////////////////////////////////////////////////////////////////////////
		              |ВЫБРАТЬ
		              |	КонтактнаяИнформация.Ссылка,
		              |	МАКСИМУМ(ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100))) КАК КонтактнаяИнформация
		              |ПОМЕСТИТЬ КонтактнаяИнформацияПоУмолчанию
		              |ИЗ
		              |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		              |ГДЕ
		              |	КонтактнаяИнформация.ВидДляСписка = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)
		              |	И КонтактнаяИнформация.Ссылка В
		              |			(ВЫБРАТЬ
		              |				ТаблицаКонтрагентов.Контрагент
		              |			ИЗ
		              |				ТаблицаКонтрагентов КАК ТаблицаКонтрагентов)
		              |
		              |СГРУППИРОВАТЬ ПО
		              |	КонтактнаяИнформация.Ссылка
		              |;
		              |
		              |////////////////////////////////////////////////////////////////////////////////
		              |ВЫБРАТЬ РАЗЛИЧНЫЕ
		              |	ТаблицаКонтрагентов.Контрагент КАК Контрагент,
		              |	ТаблицаКонтрагентов.ИНН,
		              |	КонтактнаяИнформацияПоУмолчанию.КонтактнаяИнформация КАК КонтактнаяИнформация,
		              |	ШтрихКоды.Штрихкод
		              |ИЗ
		              |	ТаблицаКонтрагентов КАК ТаблицаКонтрагентов
		              |		ЛЕВОЕ СОЕДИНЕНИЕ КонтактнаяИнформацияПоУмолчанию КАК КонтактнаяИнформацияПоУмолчанию
		              |		ПО ТаблицаКонтрагентов.Контрагент = КонтактнаяИнформацияПоУмолчанию.Ссылка
		              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК ШтрихКоды
		              |		ПО ТаблицаКонтрагентов.Контрагент = ШтрихКоды.Объект.Объект
		              |
		              |УПОРЯДОЧИТЬ ПО
		              |	Контрагент";
		Если ЗначениеЗаполнено(НомерТелефона) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоТелефону","КонтактнаяИнформация.Представление ПОДОБНО &НомерТелефона");
			Запрос.УстановитьПараметр("НомерТелефона", "%"+НомерТелефона+"%");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоТелефону","");
		КонецЕсли;
		Если ЗначениеЗаполнено(Адрес) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоАдресу"," "+?(ЗначениеЗаполнено(ПредставлениеТелефона)," ИЛИ ","")+" КонтактнаяИнформация.Представление ПОДОБНО &Адрес");
			Запрос.УстановитьПараметр("Адрес", "%"+Адрес+"%");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоАдресу","");
		КонецЕсли;
		Если ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЭПУсловие"," "+?((ЗначениеЗаполнено(ПредставлениеТелефона) ИЛИ ЗначениеЗаполнено(Адрес))," ИЛИ ","")+" КонтактнаяИнформация.Представление ПОДОБНО &АдресЭлектроннойПочты");
			Запрос.УстановитьПараметр("АдресЭлектроннойПочты", "%"+АдресЭлектроннойПочты+"%");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЭПУсловие","");
		КонецЕсли;
	КонецЕсли;
	
	СписокКлиентов = Запрос.Выполнить().Выгрузить();
	
	Если СписокКлиентов.Количество() > 50 Тогда
		Возврат 2;
	ИначеЕсли СписокКлиентов.Количество() = 1 Тогда
		ВыбранноеЗначение = СписокКлиентов[0].Контрагент;
		Контрагент = ВыбранноеЗначение;
		Возврат Неопределено;
	ИначеЕсли СписокКлиентов.Количество() = 0 Тогда
		Возврат 3;
	КонецЕсли;
	
	Результат = ПоместитьВоВременноеХранилище(СписокКлиентов, УникальныйИдентификатор);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьСтатус()
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Элементы.КартинкаКлиент.Картинка = БиблиотекаКартинок.Успешно;
	Иначе
		Элементы.КартинкаКлиент.Картинка = БиблиотекаКартинок.Удалить;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьСтатус()

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаВыбораЗаказчика(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатОповещения) Тогда
		Возврат;
	КонецЕсли;
	
	Контрагент = РезультатОповещения;
	
	ОбновитьСтатус();
	
КонецПроцедуры // Подключаемый_ОбработкаРезультатаВыбораЗаказчика()

&НаКлиенте
Процедура ВывестиРезультатПредупреждения(КодОшибки)
	
	ТекстСообщения = "";
	Если КодОшибки = 1 Тогда
		ТекстСообщения = НСтр("ru = 'Введите данные для поиска.'");
	ИначеЕсли КодОшибки = 2 Тогда
		ТекстСообщения = НСтр("ru = 'Найдено более 50 соответствий. Уточните запрос.'");
	ИначеЕсли КодОшибки = 3 Тогда
		ТекстСообщения = НСтр("ru = 'Соответствий не найдено.'");
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстСообщения) Тогда
		ПоказатьПредупреждение(, ТекстСообщения,, "Результат поиска автомобиля");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеТелефона()
	
	ТелефонЗаказчика = УправлениеКонтактнойИнформациейКлиентСервер.
		СформироватьПредставлениеТелефона(КодРегиона, КодГорода, НомерТелефона, ВнутреннийНомер, "");
	
КонецПроцедуры

// Отображает результат выполнения действия.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	// Вызываем общий обработчик результата выполнения действия
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры // ОбработкаРезультатаВыполненияДействия()

#КонецОбласти

