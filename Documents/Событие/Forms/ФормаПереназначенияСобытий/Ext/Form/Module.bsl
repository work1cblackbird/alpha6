
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ВыбранныеСобытия = Неопределено Тогда
		
		ВызватьИсключение НСтр("ru = 'Не выбрано ни одного события.'");
		
	КонецЕсли;
	
	ЗаполнитьДоступныеДляПередачиДокументы(Параметры.ВыбранныеСобытия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтветственные

&НаКлиенте
Процедура ОтветственныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НовыйОтветственный = ВыбраннаяСтрока;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДокументов

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "СписокДокументовИспользовать" Тогда
		ПоказатьЗначение(, Элементы.СписокДокументов.ТекущиеДанные.Документ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	ЗаполнитьФлагИспользования(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	
	ЗаполнитьФлагИспользования(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Назначить(Команда)
	
	Если НовыйОтветственный.Пустая() Тогда
		
		ВызватьИсключение НСтр("ru = 'Не выбран ""Новый ответственный""'");
		
	КонецЕсли;
	
	ДокументыКПередаче = Новый Массив;
	
	Для Каждого Родитель Из СписокДокументов.ПолучитьЭлементы() Цикл
		
		Если Родитель.Передать И Родитель.ТекущийОтветственный <> НовыйОтветственный Тогда
			
			ДокументыКПередаче.Добавить(Родитель.Документ);
			
		КонецЕсли;
		
		Для Каждого Строка Из Родитель.ПолучитьЭлементы() Цикл
		
			Если Строка.Передать И Строка.ТекущийОтветственный <> НовыйОтветственный Тогда
				
				ДокументыКПередаче.Добавить(Строка.Документ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ДокументыКПередаче.Количество() = 0 Тогда
		
		ВызватьИсключение НСтр("ru = 'Не выбраны документы для передачи новому ответственному'");
		
	КонецЕсли;
	
	ПередатьДокументы(ДокументыКПередаче, НовыйОтветственный);
	ОповеститьСписок(ДокументыКПередаче);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьСписок(ДокументыКПередаче)
	
	Для Каждого Документ Из ДокументыКПередаче Цикл
		
		ОповеститьОбИзменении(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДоступныеДляПередачиДокументы(ВыбранныеСобытия)
	
	ДокументыДляПередачи = ПрочитатьДанныеДокументов(ВыбранныеСобытия);
	ЗначениеВРеквизитФормы(ДокументыДляПередачи, "СписокДокументов");	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьДанныеДокументов(ВыбранныеСобытия)
	
	ДоступныеДляПередачиТипыДокументов = ДоступныеДляПередачиТипыДокументов();
	ТекстЗапроса = СоздатьТекстЗапроса(ДоступныеДляПередачиТипыДокументов);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("События", ВыбранныеСобытия);
	ДокументыДляПередачи = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Возврат УбратьЛишниеДокументы(ДокументыДляПередачи);
	
КонецФункции

&НаСервереБезКонтекста
Функция ДоступныеДляПередачиТипыДокументов()
	
	ОписаниеВсехДокументов = Новый Массив;
	
	ОписаниеЖалобы = Новый Структура;
	ОписаниеЖалобы.Вставить("Тип", Тип("ДокументСсылка.ЖалобаКлиента"));
	ОписаниеЖалобы.Вставить("ПолноеИмя", "ЖалобаКлиента");
	ОписаниеЖалобы.Вставить("ПутьКОтветственному", "Ответственный");
	ОписаниеЖалобы.Вставить("ПутьКСостоянию", "Состояние");
	ОписаниеВсехДокументов.Добавить(ОписаниеЖалобы);
	
	ОписаниеЗаказа = Новый Структура;
	ОписаниеЗаказа.Вставить("Тип", Тип("ДокументСсылка.ЗаказПокупателя"));
	ОписаниеЗаказа.Вставить("ПолноеИмя", "ЗаказПокупателя");
	ОписаниеЗаказа.Вставить("ПутьКОтветственному", "Менеджер");
	ОписаниеВсехДокументов.Добавить(ОписаниеЗаказа);
	
	ОписаниеЗаявкиНаРемонт = Новый Структура;
	ОписаниеЗаявкиНаРемонт.Вставить("Тип", Тип("ДокументСсылка.ЗаявкаНаРемонт"));
	ОписаниеЗаявкиНаРемонт.Вставить("ПолноеИмя", "ЗаявкаНаРемонт");
	ОписаниеЗаявкиНаРемонт.Вставить("ПутьКОтветственному", "Менеджер");
	ОписаниеЗаявкиНаРемонт.Вставить("ПутьКСостоянию", "Состояние");
	ОписаниеВсехДокументов.Добавить(ОписаниеЗаявкиНаРемонт);
	
	ОписаниеРабочегоЛиста = Новый Структура;
	ОписаниеРабочегоЛиста.Вставить("Тип", Тип("ДокументСсылка.РабочийЛист"));
	ОписаниеРабочегоЛиста.Вставить("ПолноеИмя", "РабочийЛист");
	ОписаниеРабочегоЛиста.Вставить("ПутьКОтветственному", "Менеджер");
	ОписаниеРабочегоЛиста.Вставить("ПутьКСостоянию", "Статус");
	ОписаниеВсехДокументов.Добавить(ОписаниеРабочегоЛиста);
	
	ОписаниеРабочегоЛистаКО = Новый Структура;
	ОписаниеРабочегоЛистаКО.Вставить("Тип", Тип("ДокументСсылка.РабочийЛистКредитногоОтдела"));
	ОписаниеРабочегоЛистаКО.Вставить("ПолноеИмя", "РабочийЛистКредитногоОтдела");
	ОписаниеРабочегоЛистаКО.Вставить("ПутьКОтветственному", "МенеджерКредитногоОтдела");
	ОписаниеРабочегоЛистаКО.Вставить("ПутьКСостоянию", "Статус");
	ОписаниеВсехДокументов.Добавить(ОписаниеРабочегоЛистаКО);
	
	ОписаниеРабочегоЛистаОС = Новый Структура;
	ОписаниеРабочегоЛистаОС.Вставить("Тип", Тип("ДокументСсылка.РабочийЛистОтделаСтрахования"));
	ОписаниеРабочегоЛистаОС.Вставить("ПолноеИмя", "РабочийЛистОтделаСтрахования");
	ОписаниеРабочегоЛистаОС.Вставить("ПутьКОтветственному", "МенеджерОтделаСтрахования");
	ОписаниеРабочегоЛистаОС.Вставить("ПутьКСостоянию", "Статус");
	ОписаниеВсехДокументов.Добавить(ОписаниеРабочегоЛистаОС);
	
	ДоступныеДокументы = Новый Массив;
	
	Для Каждого ОписаниеДокумента Из ОписаниеВсехДокументов Цикл
		
		Если ПравоДоступа("Изменение", Метаданные.Документы[ОписаниеДокумента.ПолноеИмя]) Тогда
			
			ДоступныеДокументы.Добавить(ОписаниеДокумента);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДоступныеДокументы;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьТекстЗапроса(ОписаниеДокументов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Событие.Ссылка КАК Документ,
	|	Событие.ДокументОснование КАК ДокументОснование,
	|	Событие.ДокументРезультат КАК ДокументРезультат,
	|	Событие.ХозОперация КАК ХозОперация,
	|	Событие.Номер КАК Номер,
	|	Событие.Дата КАК Дата,
	|	Событие.Состояние КАК Статус,
	|	Событие.Менеджер КАК ТекущийОтветственный,
	|	Событие.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|	Событие.Ссылка КАК СобытиеОснование
	|ПОМЕСТИТЬ ВыбранныеСобытия
	|ИЗ
	|	Документ.Событие КАК Событие
	|ГДЕ
	|	Событие.Ссылка В(&События)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЛОЖЬ КАК Передать,
	|	ВыбранныеСобытия.Документ КАК Документ,
	|	ВыбранныеСобытия.ХозОперация КАК ХозОперация,
	|	ВыбранныеСобытия.Номер КАК Номер,
	|	ВыбранныеСобытия.Дата КАК Дата,
	|	ВыбранныеСобытия.Статус КАК Статус,
	|	ВыбранныеСобытия.ТекущийОтветственный КАК ТекущийОтветственный,
	|	ВыбранныеСобытия.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|	ВыбранныеСобытия.СобытиеОснование КАК СобытиеОснование
	|ИЗ
	|	ВыбранныеСобытия КАК ВыбранныеСобытия
	|";
	
	Возврат ТекстЗапроса
		+ СоздатьТекстЗапросаКДокументам(ОписаниеДокументов)
		+ "
			|ИТОГИ ПО
			|	СобытиеОснование";
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьТекстЗапросаКДокументам(ОписаниеДокументов)
	
	ШаблонЗапроса =
	"
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ,
	|	Документ%1.Ссылка,
	|	Документ%1.ХозОперация,
	|	Документ%1.Номер,
	|	Документ%1.Дата,
	|	%2,
	|	Документ%1.%3,
	|	Документ%1.ПодразделениеКомпании,
	|	ВыбранныеСобытия.СобытиеОснование
	|ИЗ
	|	ВыбранныеСобытия КАК ВыбранныеСобытия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.%1 КАК Документ%1
	|		ПО (ВыбранныеСобытия.ДокументОснование = Документ%1.Ссылка
	|				ИЛИ ВыбранныеСобытия.ДокументРезультат = Документ%1.Ссылка)";
	
	ЧастиЗапроса = Новый Массив;
	
	Для Каждого ОписаниеДокумента Из ОписаниеДокументов Цикл
		
		Если ОписаниеДокумента.Свойство("ПутьКСостоянию") Тогда
			
			ПутьКСостоянию = СтрШаблон("Документ%1.%2", ОписаниеДокумента.ПолноеИмя, ОписаниеДокумента.ПутьКСостоянию);
			
		Иначе
			
			ПутьКСостоянию = """""";
			
		КонецЕсли;
		
		ТекстЧастиЗапроса = СтрШаблон(
			ШаблонЗапроса,
			ОписаниеДокумента.ПолноеИмя,
			ПутьКСостоянию,
			ОписаниеДокумента.ПутьКОтветственному
		);
		ЧастиЗапроса.Добавить(ТекстЧастиЗапроса);
		
	КонецЦикла;
	
	Возврат СтрСоединить(ЧастиЗапроса, "");
	
КонецФункции

&НаСервереБезКонтекста
Функция УбратьЛишниеДокументы(ДокументыДляПередачи)
	
	Для Каждого Родитель Из ДокументыДляПередачи.Строки Цикл
		
		ЛишниеДокументы = Новый Массив;
		
		Для Каждого Строка Из Родитель.Строки Цикл
			
			Если Строка.Документ = Родитель.СобытиеОснование Тогда
				
				ЗаполнитьЗначенияСвойств(Родитель, Строка);
				ЛишниеДокументы.Добавить(Строка);
				
			КонецЕсли;
		
		КонецЦикла;
		
		Для Каждого ЛишнийДокумент Из ЛишниеДокументы Цикл
		
			 Родитель.Строки.Удалить(ЛишнийДокумент);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ДокументыДляПередачи;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьФлагИспользования(НаправлениеИспользования)
	
	Для Каждого Родитель Из СписокДокументов.ПолучитьЭлементы() Цикл
		
		Родитель.Передать = НаправлениеИспользования;
		
		Для Каждого Строка Из Родитель.ПолучитьЭлементы() Цикл
			
			Строка.Передать = НаправлениеИспользования;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПередатьДокументы(ДокументыКПередаче, Получатель)
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Попытка 
		
		Для Каждого Документ Из ДокументыКПередаче Цикл
			
			ОбъектДокумента = Документ.ПолучитьОбъект();
			ОбъектДокумента.Заблокировать();
			ОбъектДокумента[ИмяРеквизитаОтветственногоПоТипуДокумента(ТипЗнч(Документ))] = Получатель;
			
			МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ);
			// Вызовем обработчик для документов, у которых он существует
			Попытка
				МенеджерДокумента.МенеджерПриИзменении(ОбъектДокумента);
			Исключение
				
			КонецПопытки;
			
			ОбъектДокумента.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Передача документов события'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Ошибка,
		,
		Документ,
		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		ВызватьИсключение НСтр("ru = 'При передаче документов возникли ошибки. Подробнее в журнале регистрации.'");
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяРеквизитаОтветственногоПоТипуДокумента(ТипДокумента)
	
	ДоступныеДляПередачиТипыДокументов = ДоступныеДляПередачиТипыДокументов();
	
	Для Каждого ОписаниеДокумента Из ДоступныеДляПередачиТипыДокументов Цикл
		
		Если ОписаниеДокумента.Тип = ТипДокумента Тогда
			
			Возврат ОписаниеДокумента.ПутьКОтветственному;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат "Менеджер";
	
КонецФункции

#КонецОбласти
