
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения = "", СтандартнаяОбработка = Истина)
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения)
		ИЛИ ТипЗнч(ДанныеЗаполнения) <> Тип("ДокументСсылка.РабочийЛист") Тогда
		
		УправлениеДиалогомСервер.ЗапретитьОткрытиеФормыОбъекта(
			ЭтотОбъект,
			НСтр("ru = 'Заявка на автомобиль может вводится только на основании рабочего листа.'"));
		
	КонецЕсли;
	
	НужноПрерватьВыполнение = НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	
	Если НужноПрерватьВыполнение Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Состояние.Пустая() Тогда
		
		Состояние = Справочники.СостоянияЗаявокНаАвтомобиль.Открыта;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);
	// Конец УтверждениеДокументов
	
	ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПриЗаписи(ЭтотОбъект, Отказ);
	// Конец УтверждениеДокументов
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиЗаполненияОбъекта

// Производит заполнение объекта на основании документа "РабочийЛист"
//
// Параметры:
//  РабочийЛист - ДокументСсылка.РабочийЛист - Значение, которое используется как основание для заполнения;
//  ТекстЗаполнения - Строка - Текст, используемый для заполнения объекта;
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_РабочийЛист(РабочийЛист,
                                        ТекстЗаполнения = "",
                                        СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(РабочийЛист) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПродолжатьЗаполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект,
		РабочийЛист,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	
	Если НЕ ПродолжатьЗаполнение Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ДанныеРабочегоЛиста = ДанныеРабочегоЛистаДляЗаполнения();
	Клиент = ДанныеРабочегоЛиста.Клиент;
	ПереченьПараметровПоиска.Загрузить(ДанныеРабочегоЛиста.ПереченьПараметровПоиска);
	
	Возврат Истина;
	
КонецФункции

Функция ДанныеРабочегоЛистаДляЗаполнения()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РабочийЛист.Контрагент КАК Клиент,
		|	РабочийЛист.ИсторияПодбора.(
		|		Марка КАК Марка,
		|		Модель КАК Модель,
		|		ВариантКомплектации КАК ВариантКомплектации,
		|		ВидКПП КАК ВидКПП,
		|		ТипКПП КАК ТипКПП,
		|		ТипСалона КАК ТипСалона,
		|		ТипКузова КАК ТипКузова,
		|		ТипТоплива КАК ТипТоплива,
		|		Цвет КАК Цвет,
		|		ОбъемДвигателяНачало КАК ОбъемДвигателяНачало,
		|		ОбъемДвигателяКонец КАК ОбъемДвигателяКонец,
		|		ГодВыпускаНачало КАК ГодВыпускаНачало,
		|		ГодВыпускаКонец КАК ГодВыпускаКонец,
		|		ПробегНачало КАК ПробегНачало,
		|		ПробегКонец КАК ПробегКонец,
		|		ЦенаНачало КАК ЦенаНачало,
		|		ЦенаКонец КАК ЦенаКонец
		|	) КАК ИсторияПодбора
		|ИЗ
		|	Документ.РабочийЛист КАК РабочийЛист
		|ГДЕ
		|	РабочийЛист.Ссылка = &РабочийЛист"
	);
	Запрос.УстановитьПараметр("РабочийЛист", ДокументОснование);
	ВыборкаРабочийЛист = Запрос.Выполнить().Выбрать();
	ВыборкаРабочийЛист.Следующий();
	Возврат Новый Структура(
		"Клиент,ПереченьПараметровПоиска",
		ВыборкаРабочийЛист.Клиент,
		ВыборкаРабочийЛист.ИсторияПодбора.Выгрузить()
	);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
