// Модуль документа Отчет о нанесении кодов маркировки

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТоварнаяГруппа) Тогда
		ТоварнаяГруппа = МаркировкаТоваровСервер.ТоварнаяГруппа(Товары.ВыгрузитьКолонку("Номенклатура"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Статус) Тогда
		Статус = Перечисления.СтатусыДокументовМаркировки.Новый;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
	Статус = Перечисления.СтатусыДокументовМаркировки.Новый;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	МаркировкаТоваровСервер.НоменклатураСоответствуетТоварнойГруппе(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Переведем вид кода маркировки
	Для Каждого ТекущаяСтрока Из Товары Цикл
		
		ТекущаяСтрока.КодМаркировки = 
			МаркировкаТоваровКлиентСервер.ПолучитьКодМаркировки(
				ТекущаяСтрока.КодМаркировки,,
				СтрНачинаетсяС(ТекущаяСтрока.КодМаркировки, "("));
		
	КонецЦикла;
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	// Только для записанных документов определим статус из регистра при необходимости
	Если ЗначениеЗаполнено(Ссылка)
		И ПолучитьЗначениеПараметраСтруктуры(ДополнительныеСвойства, "Статус") = Неопределено Тогда
		ДанныеСтатусаДокумента = РегистрыСведений.СтатусыДокументовМаркировки.ПолучитьСтатусДокумента(Ссылка);
		ДополнительныеСвойства.Вставить("ИдентификаторДокумента", ДанныеСтатусаДокумента.ИдентификаторДокумента);
		ДополнительныеСвойства.Вставить("Статус", ДанныеСтатусаДокумента.Статус);
		ДополнительныеСвойства.Вставить("ОписаниеОшибки", ДанныеСтатусаДокумента.ОписаниеОшибки);
	КонецЕсли;
	
	ТаблицаМаркировки = Товары.Выгрузить();
	ТаблицаМаркировки.Колонки.Добавить("GTIN", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	ТаблицаМаркировки.Колонки.Добавить("СерийныйНомер", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	
	// Разберем маркировку на состовляющие для поиска
	Для Каждого ТекущийКодМаркировки Из ТаблицаМаркировки Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекущийКодМаркировки.КодМаркировки) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(
			ТекущийКодМаркировки.КодМаркировки);
		Если СтруктураМаркировки.ТипИдентификатораТовара <>
			ПредопределенноеЗначение("Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1") Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Код маркировки <%1> не разобран. Проверьте его корректность.'"),
				СокрЛП(ТекущийКодМаркировки.КодМаркировки)
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
			Продолжить;
		КонецЕсли;
		
		ТекущийКодМаркировки.GTIN = СтруктураМаркировки.GTIN;
		ТекущийКодМаркировки.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
		
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("ТаблицаМаркировки", ТаблицаМаркировки);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	// Удалим введенные в оборот коды маркировки
	НаборЗаписейСостоянияКодовМаркировки = РегистрыСведений.СостоянияКодовМаркировки.СоздатьНаборЗаписей();
	НаборЗаписейСостоянияКодовМаркировки.ДокументОбъект = ЭтотОбъект;
	НаборЗаписейСостоянияКодовМаркировки.ОтменаПроведения();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ И Статус = Перечисления.СтатусыДокументовМаркировки.Выполнен Тогда
		
		ТаблицаМаркировки = Товары.Выгрузить();
		// Получим актуальные статусы
		ТаблицаМаркировки.Колонки.Добавить("GTIN", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
		ТаблицаМаркировки.Колонки.Добавить("СерийныйНомер", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
		
		// Разберем маркировку на состовляющие для поиска
		Для Каждого ТекущийКодМаркировки Из ТаблицаМаркировки Цикл
			
			Если НЕ ЗначениеЗаполнено(ТекущийКодМаркировки.КодМаркировки) Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(
				ТекущийКодМаркировки.КодМаркировки
			);
			
			// Это не маркировка товара
			Если СтруктураМаркировки.ТипИдентификатораТовара
				<> ПредопределенноеЗначение("Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1") Тогда
				Продолжить;
			КонецЕсли;
			
			ТекущийКодМаркировки.GTIN = СтруктураМаркировки.GTIN;
			ТекущийКодМаркировки.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
			
		КонецЦикла;
		
		ТекущиеСтатусыМаркировки =
			РегистрыСведений.СостоянияКодовМаркировки.ТекущиеСтатусыКодовМаркировки(ТаблицаМаркировки, МоментВремени());
		
		ВыведенныеТовары = Новый Массив;
		
		Для Каждого ТекущаяСтрока Из ТекущиеСтатусыМаркировки Цикл
			Если ТекущаяСтрока.Состояние = Перечисления.СостоянияКодовМаркировки.Эмитирован Тогда
				ВыведенныеТовары.Добавить(ТекущаяСтрока);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ТекущаяСтрока Из ВыведенныеТовары Цикл
			ТекущиеСтатусыМаркировки.Удалить(ТекущаяСтрока);
		КонецЦикла;
		
		// Изменим состояние маркировки, которые ранее не были выведены
		НаборЗаписейСостоянияКодовМаркировки = РегистрыСведений.СостоянияКодовМаркировки.СоздатьНаборЗаписей();
		НаборЗаписейСостоянияКодовМаркировки.ДокументОбъект = ЭтотОбъект;
		НаборЗаписейСостоянияКодовМаркировки.Организация = Организация;
		НаборЗаписейСостоянияКодовМаркировки.РезультатЗапросаПоКодамМаркировки = ТекущиеСтатусыМаркировки;
		НаборЗаписейСостоянияКодовМаркировки.Состояние = Перечисления.СостоянияКодовМаркировки.Эмитирован;
		НаборЗаписейСостоянияКодовМаркировки.РежимПроведения = РежимПроведенияДокумента.Неоперативный;
		Отказ = НЕ НаборЗаписейСостоянияКодовМаркировки.СостояниеКодовМаркировки() ИЛИ Отказ;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиЗаполненияОбъекта

// Производит заполнение объекта на основании документа "Заявка на расход ДС"
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_ЗаказКодовМаркировки(
	ДанныеЗаполнения,
	ТекстЗаполнения = "",
	СтандартнаяОбработка = Истина) Экспорт
	
	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат Истина;
	КонецЕсли;

	Если ДанныеЗаполнения.Статус <> Перечисления.СтатусыДокументовМаркировки.Выполнен Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Состояние заказа кодов маркировок не выполнено.
			|Проверьте наличие всех кодов маркировок.'"), ЭтотОбъект);
	КонецЕсли;
	
	Товары.Очистить();
	
	ТоварыДокумента = ДанныеЗаполнения.Товары.Выгрузить();
	ТоварыДокумента.Свернуть("Номенклатура,ХарактеристикаНоменклатуры", "Количество");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	СостоянияКодовМаркировки.Номенклатура КАК Номенклатура,
	               |	СостоянияКодовМаркировки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СостоянияКодовМаркировки.GTIN КАК GTIN,
	               |	СостоянияКодовМаркировки.СерийныйНомер КАК СерийныйНомер
	               |ПОМЕСТИТЬ СписокКодов
	               |ИЗ
	               |	РегистрСведений.СостоянияКодовМаркировки КАК СостоянияКодовМаркировки
	               |ГДЕ
	               |	СостоянияКодовМаркировки.ДокументОснование = &ДокументОснование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СписокКодов.Номенклатура КАК Номенклатура,
	               |	СписокКодов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СостоянияКодовМаркировкиСрезПоследних.Период КАК Период,
	               |	СостоянияКодовМаркировкиСрезПоследних.Состояние КАК Состояние,
	               |	СписокКодов.GTIN КАК GTIN,
	               |	СписокКодов.СерийныйНомер КАК СерийныйНомер
	               |ПОМЕСТИТЬ ТаблицаСостояний
	               |ИЗ
	               |	СписокКодов КАК СписокКодов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияКодовМаркировки.СрезПоследних(
	               |				,
	               |				(Номенклатура, ХарактеристикаНоменклатуры) В
	               |					(ВЫБРАТЬ
	               |						СписокКодов.Номенклатура КАК Номенклатура,
	               |						СписокКодов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	               |					ИЗ
	               |						СписокКодов КАК СписокКодов)) КАК СостоянияКодовМаркировкиСрезПоследних
	               |		ПО СписокКодов.Номенклатура = СостоянияКодовМаркировкиСрезПоследних.Номенклатура
	               |			И СписокКодов.ХарактеристикаНоменклатуры = СостоянияКодовМаркировкиСрезПоследних.ХарактеристикаНоменклатуры
	               |			И СписокКодов.GTIN = СостоянияКодовМаркировкиСрезПоследних.GTIN
	               |			И СписокКодов.СерийныйНомер = СостоянияКодовМаркировкиСрезПоследних.СерийныйНомер
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ТаблицаСостояний.Период) КАК Период,
	               |	ТаблицаСостояний.GTIN КАК GTIN,
	               |	ТаблицаСостояний.СерийныйНомер КАК СерийныйНомер
	               |ПОМЕСТИТЬ МаксимальныеПериоды
	               |ИЗ
	               |	ТаблицаСостояний КАК ТаблицаСостояний
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаСостояний.GTIN,
	               |	ТаблицаСостояний.СерийныйНомер
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаСостояний.Номенклатура КАК Номенклатура,
	               |	ТаблицаСостояний.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ТаблицаСостояний.Период КАК Период,
	               |	ТаблицаСостояний.Состояние КАК Состояние,
	               |	ТаблицаСостояний.GTIN КАК GTIN,
	               |	ТаблицаСостояний.СерийныйНомер КАК СерийныйНомер
	               |ИЗ
	               |	ТаблицаСостояний КАК ТаблицаСостояний
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимальныеПериоды КАК МаксимальныеПериоды
	               |		ПО ТаблицаСостояний.GTIN = МаксимальныеПериоды.GTIN
	               |			И ТаблицаСостояний.Период = МаксимальныеПериоды.Период
	               |			И ТаблицаСостояний.СерийныйНомер = МаксимальныеПериоды.СерийныйНомер
	               |ГДЕ
	               |	ТаблицаСостояний.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКодовМаркировки.ЭмитированВыпущен)";
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	СписокМаркировок = Запрос.Выполнить().Выгрузить();
	
	СтруктураПоиска = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры");
	
	ШаблонСоСкобками = "(01)%1(21)%2";
	
	Для Каждого ТекущаяСтрока Из СписокМаркировок Цикл
		
		Если ПустаяСтрока(ТекущаяСтрока.GTIN)
			ИЛИ ПустаяСтрока(ТекущаяСтрока.СерийныйНомер) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		НоваяСтрока.КодМаркировки = СтрШаблон(ШаблонСоСкобками, ТекущаяСтрока.GTIN, ТекущаяСтрока.СерийныйНомер);
		
	КонецЦикла;
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_ЗаказКодовМаркировки()

#КонецОбласти

#КонецОбласти

#КонецЕсли
