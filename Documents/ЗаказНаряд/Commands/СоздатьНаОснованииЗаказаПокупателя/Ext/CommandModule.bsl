#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ПараметрыОтбора = Новый Структура;
	
	// Если есть незакрытые сводные ремонтные заказы - откроем форму выбора сводного ремонтного заказа
	Если ЕстьНеЗакрытыеСводныеРемонтныеЗаказы(ПараметрКоманды, ПараметрыОтбора) Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("Отбор"      , ПараметрыОтбора);
		ПараметрыФормы.Вставить("ВводитьНовыеНаОсновании", ПараметрКоманды);
		ПараметрыФормы.Вставить("СоздаватьЗН", Ложь);
		
		ПараметрыКоманды = Новый Структура;
		ПараметрыКоманды.Вставить("ЗаказПокупателя"           , ПараметрКоманды);
		ПараметрыКоманды.Вставить("ПараметрыВыполненияКоманды", ПараметрыВыполненияКоманды);
		
		ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаВыбораСводногоРемонтногоЗаказа", ЭтотОбъект, ПараметрыКоманды);
		
		ОткрытьФорму("Документ.СводныйРемонтныйЗаказ.ФормаВыбора", ПараметрыФормы, , ,,, ОбработчикОповещения);
		
	Иначе
		// Откроем форму для создания нового сводного ремонтного заказа
		ДанныеЗаполнения = Новый Структура();
		ДанныеЗаполнения.Вставить("ДокументОснование", ПараметрКоманды);
		
		ОткрытьФорму("Документ.СводныйРемонтныйЗаказ.ФормаОбъекта", Новый Структура("Основание", ДанныеЗаполнения), ПараметрыВыполненияКоманды.Источник);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЕстьНеЗакрытыеСводныеРемонтныеЗаказы(ЗаказПокупателя, Отбор)
	
	// Установим отбор по данным документа
	Если ЗначениеЗаполнено(ЗаказПокупателя.Автомобиль) Тогда
		СтрокаОтбора = "Автомобиль";
		ЗначениеОтбора = ЗаказПокупателя.Автомобиль;
	Иначе
		СтрокаОтбора = "Заказчик";
		ЗначениеОтбора = ЗаказПокупателя.Контрагент;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЗаказНаряд.СводныйРемонтныйЗаказ
	|ИЗ
	|	Документ.ЗаказНаряд КАК ЗаказНаряд
	|ГДЕ
	|	НЕ ЗаказНаряд.Состояние = ЗНАЧЕНИЕ(Справочник.ВидыСостоянийЗаказНарядов.Закрыт)
	|	И ЗаказНаряд.СводныйРемонтныйЗаказ В
	|			(ВЫБРАТЬ
	|				СводныйРемонтныйЗаказ.Ссылка
	|			ИЗ
	|				Документ.СводныйРемонтныйЗаказ КАК СводныйРемонтныйЗаказ
	|			ГДЕ
	|				СводныйРемонтныйЗаказ."+СтрокаОтбора+" = &"+СтрокаОтбора+" И НЕ СводныйРемонтныйЗаказ.ПометкаУдаления)";
	Запрос.УстановитьПараметр(СтрокаОтбора, ЗначениеОтбора);
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		Отбор.Вставить("Открыт", Истина);
		
		Отбор.Вставить("Заказчик"  , ЗаказПокупателя.Контрагент);
		Если ЗначениеЗаполнено(ЗаказПокупателя.Автомобиль) Тогда
			Отбор.Вставить("Автомобиль", ЗаказПокупателя.Автомобиль);
		КонецЕсли;
		
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ЕстьНеЗакрытыеСводныеРемонтныеЗаказы()

&НаКлиенте
Процедура Подключаемый_ОбработкаВыбораСводногоРемонтногоЗаказа(РезультатОповещения, ДополнительныеПараметры) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(РезультатОповещения) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВыполненияКоманды = ДополнительныеПараметры.ПараметрыВыполненияКоманды;
	
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("ДокументОснование", ДополнительныеПараметры.ЗаказПокупателя);
	ДанныеЗаполнения.Вставить("СводныйРемонтныйЗаказ",       РезультатОповещения);
	
	ОткрытьФорму("Документ.ЗаказНаряд.ФормаОбъекта", Новый Структура("Основание", ДанныеЗаполнения), ПараметрыВыполненияКоманды.Источник);
	
КонецПроцедуры

#КонецОбласти