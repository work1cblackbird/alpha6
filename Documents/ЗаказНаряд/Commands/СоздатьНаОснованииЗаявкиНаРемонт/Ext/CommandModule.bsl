#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	// Проверим, должен ли быть проведен документ основание и проведен ли он
	Если НЕ ДокументПроведен(ПараметрКоманды) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Ввод на основании непроведенного документа запрещен. Процедура заполнения прервана.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ПараметрКоманды);	
	Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.ЗаявкаНаРемонт") Тогда
		
		Если ПроверкаРеквизитовЗаявкиНаРемонт(ПараметрКоманды) Тогда
			
			ПараметрыФормы.Вставить("Источник",     ПараметрыВыполненияКоманды.Источник);
			ПараметрыФормы.Вставить("Уникальность", ПараметрыВыполненияКоманды.Уникальность);
			ОткрытьФормуВводаЗаказНаряда(ПараметрКоманды, ПараметрыФормы);
		Иначе
			ОткрытьФорму(
				"Документ.ЗаказНаряд.ФормаОбъекта",
				ПараметрыФормы,
				ПараметрыВыполненияКоманды.Источник,
				ПараметрыВыполненияКоманды.Уникальность);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьФормуВводаЗаказНаряда(Основание, ДополнительныеПараметры)
	
	Если ТипЗнч(Основание) = Тип("Структура") Тогда
		ПараметрыФормы = Основание;
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗаявкаНаРемонт", Основание); 
		ПараметрыФормы.Вставить("КомандаЗаказНаряд", Истина);
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения(
		"Подключаемый_ОбработкаРезультатаОповещенияСозданияЗаказНаряда",
		ЭтотОбъект,
		ДополнительныеПараметры
	);
	
	ОткрытьФорму(
		"Документ.СводныйРемонтныйЗаказ.Форма.ФормаСозданияСводногоРемонтногоЗаказа",
		ПараметрыФормы,
		ДополнительныеПараметры.Источник,
		ДополнительныеПараметры.Уникальность,
		, ,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещенияСозданияЗаказНаряда(РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	Если РезультатОповещения = Неопределено Тогда
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Основание", ДополнительныеПараметры.Основание);
	Иначе 
		ПараметрыЗаполнения = Новый Структура();
		ПараметрыЗаполнения.Вставить("ДокументОснование", ДополнительныеПараметры.Основание);
		
		ДанныеЗаполнения = ПолучитьИзВременногоХранилища(РезультатОповещения);
		ПараметрыЗаполнения.Вставить("Контрагент", ДанныеЗаполнения.Плательщик); 
		ПараметрыЗаполнения.Вставить("Заказчик", ДанныеЗаполнения.Заказчик);
		ПараметрыЗаполнения.Вставить("Автомобиль", ДанныеЗаполнения.Автомобиль);
		ПараметрыЗаполнения.Вставить("ЗаполнениеИзКомандыСозданияЗаявкиНаРемонт", Истина);
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Основание", ПараметрыЗаполнения);
		
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЗаказНаряд.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Функция ДокументПроведен(ЗаявкаНаРемонт)
	
	Если ПраваИНастройкиПользователя.Значение("ВводНаОснованииПроведенныхДокументов", ЗаявкаНаРемонт) И НЕ ЗаявкаНаРемонт.Проведен Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // ДокументПроведен()

&НаСервере
Функция ПроверкаРеквизитовЗаявкиНаРемонт(ЗаявкаНаРемонт)
	
	АвтоматическиСоздаватьСводныйРемонтныйЗаказ = ПолучитьФункциональнуюОпцию(
		"АвтоматическиСоздаватьСводныйРемонтныйЗаказ"
	);
	БесплатныйРемонт = Автосервис.ЭтоБесплатный(ЗаявкаНаРемонт.ВидРемонта);
	
	Если АвтоматическиСоздаватьСводныйРемонтныйЗаказ Тогда
		Возврат (Не (ЗначениеЗаполнено(ЗаявкаНаРемонт.Контрагент) Или БесплатныйРемонт)
			Или Не ЗначениеЗаполнено(ЗаявкаНаРемонт.Автомобиль))
			Или Не ЗначениеЗаполнено(ЗаявкаНаРемонт.Заказчик);
	Иначе
		Возврат (Не ЗначениеЗаполнено(ЗаявкаНаРемонт.Контрагент) И Не БесплатныйРемонт);
	КонецЕсли;
	
КонецФункции

#КонецОбласти
