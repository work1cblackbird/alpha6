
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ХозОперация") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Параметры.ХозОперация = Справочники.ХозОперации.ТабельСотрудников Тогда
		РежимПодбора = "СОТРУДНИКИ";
	Иначе
		РежимПодбора = "ЦЕХА";
	КонецЕсли;
	
	УствновитьЭлементыОтбораСписков();
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если РежимПодбора = "СОТРУДНИКИ" Тогда
		Адрес = ПоместитьСписокСотрудниковВоВременноеХранилище();
	Иначе
		Адрес = ПоместитьВыбранныеЦехаВоВременноеХранилище();
	КонецЕсли;

    ОповеститьОВыборе(Адрес);

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВыделенныхСотрудников(Команда)
	
	Для Каждого ВыделенныйСотрудник Из Элементы.СписокСотрудников.ВыделенныеСтроки Цикл
		
		ДанныеСотрудника = Элементы.СписокСотрудников.ДанныеСтроки(ВыделенныйСотрудник);
		ДобавитьСотрудникаВТаблицуВыбранныхСотрудников(ДанныеСотрудника);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВсехСотрудников(Команда)
	
	ПеренестиВсехСотрудниковНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВыделенныеЦеха(Команда)

	Для Каждого ВыделенныйЦех Из Элементы.СписокЦехов.ВыделенныеСтроки Цикл
		
		ДанныеОЦехе = Элементы.СписокЦехов.ДанныеСтроки(ВыделенныйЦех);
		ДобавитьЦехВТаблицуВыбранныхЦехов(ДанныеОЦехе);
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВсеЦеха(Команда)
	
	ПеренестиВсеЦехаНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	ДоступностьСотрудников = (РежимПодбора = "СОТРУДНИКИ");
	
	Элементы.ГруппаПодбораСотрудников.Видимость = ДоступностьСотрудников;
	Элементы.ГруппаПодбораЦехов.Видимость       = НЕ ДоступностьСотрудников;
	
КонецПроцедуры

&НаСервере
Процедура УствновитьЭлементыОтбораСписков()
	
	Если РежимПодбора = "СОТРУДНИКИ" Тогда
		
		ЭлементОтбора = СписокСотрудников.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПодразделениеКомпании");
		ЭлементОтбора.Использование = Ложь;
		
		ЭлементОтбора = СписокСотрудников.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Цех");
		ЭлементОтбора.Использование = Ложь;
		
		ЭлементОтбора = СписокСотрудников.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Должность");
		ЭлементОтбора.Использование = Ложь;
		
		ЭлементОтбора = СписокСотрудников.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТабельныйНомер");
		ЭлементОтбора.Использование = Ложь;
	
	ИначеЕсли РежимПодбора = "ЦЕХА" Тогда
		
		ЭлементОтбора = СписокЦехов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПодразделениеКомпании");
		ЭлементОтбора.Использование = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДобавитьСотрудникаВТаблицуВыбранныхСотрудников(Элемент.ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьСписокСотрудниковВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(ВыбранныеСотрудники.Выгрузить());
	
КонецФункции

&НаКлиенте
Процедура СписокЦеховВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДобавитьЦехВТаблицуВыбранныхЦехов(Элемент.ТекущиеДанные);

КонецПроцедуры

&НаСервере
Функция ПоместитьВыбранныеЦехаВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(ВыбранныеЦеха.Выгрузить());
	
КонецФункции

&НаКлиенте
Процедура ДобавитьСотрудникаВТаблицуВыбранныхСотрудников(ДанныеОСотруднике)
	
	НайденныеСтроки = ВыбранныеСотрудники.НайтиСтроки(Новый Структура("Ресурс", ДанныеОСотруднике.Сотрудник));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		НоваяСтрока = ВыбранныеСотрудники.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеОСотруднике);
		НоваяСтрока.Ресурс = ДанныеОСотруднике.Сотрудник;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ДобавитьЦехВТаблицуВыбранныхЦехов(ДанныеОЦехе)
	
	НайденныеСтроки = ВыбранныеЦеха.НайтиСтроки(Новый Структура("Ресурс", ДанныеОЦехе.Цех));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		НоваяСтрока = ВыбранныеЦеха.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеОЦехе);
		НоваяСтрока.Ресурс = ДанныеОЦехе.Цех;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиВсехСотрудниковНаСервере()
	
	ТаблицаСотрудников = ДинамическийСписокВТаблицуЗначений(Элементы.СписокСотрудников);
	ТаблицаСотрудников.Колонки.Сотрудник.Имя = "Ресурс";
	
	Для Каждого ДанныеСотрудника Из ТаблицаСотрудников Цикл
		
		НайденныеСтроки = ВыбранныеСотрудники.НайтиСтроки(Новый Структура("Ресурс", ДанныеСотрудника.Ресурс));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			НоваяСтрока = ВыбранныеСотрудники.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСотрудника);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиВсеЦехаНаСервере()

	ТаблицаЦехов = ДинамическийСписокВТаблицуЗначений(Элементы.СписокЦехов);
	ТаблицаЦехов.Колонки.Цех.Имя = "Ресурс";
	
	Для Каждого ДанныеОЦехе Из ТаблицаЦехов Цикл
		
		НайденныеСтроки = ВыбранныеЦеха.НайтиСтроки(Новый Структура("Ресурс", ДанныеОЦехе.Ресурс));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			НоваяСтрока = ВыбранныеЦеха.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеОЦехе);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ДинамическийСписокВТаблицуЗначений(ТаблицаФормы)
	
	СхемаКомпановкиДанных = ТаблицаФормы.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	
	Настройки = ТаблицаФормы.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпановкиДанных,
		Настройки,
		,
		,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")
	);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
