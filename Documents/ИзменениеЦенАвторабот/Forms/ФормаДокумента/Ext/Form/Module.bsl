///////////////////////////////////////////////////////////////////////////////
// Модуль основной формы документа "Изменение цен авторабот"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец УтверждениеДокументов
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ОграничитьВыборКонтактныхЛиц(Элементы.Контрагент);
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	
	РазрешитьРедактированиеЦенИСумм = ПраваИНастройкиПользователя.Значение("РедактированиеЦенИСуммВНоменклатурныхТаблицах", Объект);
	РаботаСФормой.РазрешитьРедактированиеЦенИСумм(
		РаботаСФормой.ТиповыеПоляСуммовыхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм
	);
	РаботаСФормой.ОткрытьФормуТолькоДляПросмотра(ЭтотОбъект, Объект);
	
	ПерезаполнитьДействующимиЦенамиНормочаса();
	УстановитьКолонкиРасчетныхЦен();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец УтверждениеДокументов
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УправлениеДиалогомАльфаАвтоКлиент.ПриОткрытии(ЭтотОбъект);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия=Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец УтверждениеДокументов
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения	
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ИзменениеЦенАвторабот", ПараметрыЗаписи.РежимЗаписи,
		Объект.Автоработы.Количество() > 50);
		
	Отказ = Отказ Или РаботаСФормойКлиент.НачатьПроверкуПодразделенияДокументаИПользователя(
		Объект.ПодразделениеКомпании,
		Новый ОписаниеОповещения(
			"ПроверкаПодразделенияДокументаИПользователяЗавершение",
			ЭтотОбъект,
			Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)
		)
	);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПерезаполнитьДействующимиЦенамиНормочаса();
	НастроитьПараметрыВыбораЭлементовФормы();
	
	Для Каждого ТекСтрока Из Объект.Автоработы Цикл
		ПересчитатьРассчетныеЦеныНаСервере(ТекСтрока);
	КонецЦикла;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормойКлиент.ОповеститьОЗаписиДокумента(Объект.Ссылка);
	РаботаСФормойКлиент.ОбновитьПодчиненныеСчета(Объект.Ссылка, Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ИзменениеЦенАвторабот.ДатаПриИзменении(Объект, ПараметрыДействия);

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	
	Если Объект.Дата <> Объект.ДатаНачалаДействия Тогда
		ОповещениеВопроса = Новый ОписаниеОповещения("ИзменитьДатуНачалаДействия", ЭтотОбъект);
		ПоказатьВопрос(ОповещениеВопроса, НСтр("ru = 'Дата документа изменена. Сменить дату начала действия цен авторабот?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ИзменениеЦенАвторабот.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	
	ПараметрыДействия = Новый Структура;
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ТипЦенПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ИзменениеЦенАвторабот.ТипЦенПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЦенПриИзменении(Элемент)

	ПараметрыДействия = Новый Структура;
	ТипЦенПриИзмененииНаСервере(ПараметрыДействия);
	УстановитьКолонкиРасчетныхЦен();
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ИзменениеЦенАвторабот.КонтрагентПриИзменении(Объект, ПараметрыДействия);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	КонтрагентПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ИзменениеЦенАвторабот.ДоговорВзаиморасчетовПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорВзаиморасчетовПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДатаНачалаДействияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ПерезаполнитьДействующимиЦенамиНормочаса();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДатаНачалаДействияПриИзменении(Элемент)
	
	ДатаНачалаДействияПриИзмененииНаСервере();
	
КонецПроцедуры 

#Область ОбработчикиСобытийЭлементовУправленияОбщегоНазначения

&НаКлиенте
Процедура НадписьВзаиморасчетыНажатие(Элемент)
	
	УправлениеДиалогомДокументаКлиент.НадписьВзаиморасчетыНажатие(ЭтотОбъект);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАвтоработы

&НаСервере
Процедура АвтоработыПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Автоработы.НайтиПоИдентификатору(Элементы.Автоработы.ТекущаяСтрока);
	ПересчитатьРассчетныеЦеныНаСервере(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыПриИзменении(Элемент)
	
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		АвтоработыПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтоработыПередНачаломДобавления(ЭтаФорма, Элемент, Отказ, Копирование, Родитель, Группа, Параметр);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыПередНачаломИзменения(Элемент, Отказ)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтоработыПередНачаломИзменения(ЭтаФорма, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтоработыПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	УправлениеДиалогомАльфаАвтоКлиент.АвтомобилиПроверкаПеретаскивания(ЭтаФорма, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле);
	
КонецПроцедуры

#Область ОбработчикиСобытийПолейТаблицыФормыАвтоработы

&НаСервере
Процедура АвтоработыМодельПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автоработы.НайтиПоИдентификатору(Элементы.Автоработы.ТекущаяСтрока);
	Документы.ИзменениеЦенАвторабот.АвтоработыМодельПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ПерезаполнитьДействующимиЦенамиНормочаса(ТекущиеДанные.Нормочас);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыМодельПриИзменении(Элемент)
	
	АвтоработыМодельПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтоработыАвтоработаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автоработы.НайтиПоИдентификатору(Элементы.Автоработы.ТекущаяСтрока);
	Документы.ИзменениеЦенАвторабот.АвтоработыАвтоработаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ПерезаполнитьДействующимиЦенамиНормочаса(ТекущиеДанные.Нормочас);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыАвтоработаПриИзменении(Элемент)
	
	АвтоработыАвтоработаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтоработыНормочасПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автоработы.НайтиПоИдентификатору(Элементы.Автоработы.ТекущаяСтрока);
	Документы.ИзменениеЦенАвторабот.АвтоработыНормочасПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ПерезаполнитьДействующимиЦенамиНормочаса(ТекущиеДанные.Нормочас);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыНормочасПриИзменении(Элемент)
	
	АвтоработыНормочасПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтоработыЦенаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автоработы.НайтиПоИдентификатору(Элементы.Автоработы.ТекущаяСтрока);
	Документы.ИзменениеЦенАвторабот.АвтоработыЦенаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ПерезаполнитьДействующимиЦенамиНормочаса(ТекущиеДанные.Нормочас);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыЦенаПриИзменении(Элемент)
	
	АвтоработыЦенаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ПодборАвторабот(Команда)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("ЕстьКоличество", Ложь);
	ПараметрыДействия.Вставить("ИзменениеЦенАвторабот", Истина);
	УправлениеДиалогомАльфаАвтоКлиент.ОткрытьПодборАвторабот(ЭтотОбъект,, , ПараметрыДействия);
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура УстановитьКоэффициентСкидкиНаценки(СтрокаТаблицы, БазовыйКоэффициент, ПроцентСкидкиНаценки)
	//КоэффициентСкидкиНаценки
	Если ПроцентСкидкиНаценки = 0 Тогда
		СтрокаТаблицы.Коэффициент = БазовыйКоэффициент;
	Иначе
		СтрокаТаблицы.Коэффициент = БазовыйКоэффициент+(БазовыйКоэффициент*(ПроцентСкидкиНаценки/100));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьТаблицуРасчетныхЦен(Запрос, ТаблицаНаценокРасчетныхЦен, БазовыйТипЦен, Знач БазовыйКоэффициент = 1)
	
	Запрос.УстановитьПараметр("БазовыйТипЦен", БазовыйТипЦен);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаНаценокРасчетныхЦен.Добавить();
		НоваяСтрока.Имя       = "Цена" + СтрЗаменить(Выборка.ТипЦен.УникальныйИдентификатор(),"-","_");
		НоваяСтрока.Заголовок = Выборка.Наименование;
		
		УстановитьКоэффициентСкидкиНаценки(НоваяСтрока, БазовыйКоэффициент, Выборка.Процент);
		ЗаполнитьТаблицуРасчетныхЦен(Запрос, ТаблицаНаценокРасчетныхЦен, Выборка.ТипЦен, НоваяСтрока.Коэффициент);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКолонкиРасчетныхЦен()
	
	МассивНовыхЦенКолонки  	  = Новый Массив;
	МассивСтарыхЦенКолонки    = Новый Массив;
	МассивСтарыхЦенРеквизиты  = Новый Массив;
	// Заполним старые цены
	Для Каждого ТекСтрока Из ТаблицаНаценокРасчетныхЦен Цикл
		МассивСтарыхЦенКолонки.Добавить("Автоработы" + ТекСтрока.Имя);
		МассивСтарыхЦенРеквизиты.Добавить("Объект.Автоработы."+ТекСтрока.Имя);
	КонецЦикла;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТипыЦен.Ссылка КАК ТипЦен,
	|	ТипыЦен.Наименование КАК Наименование,
	|	ТипыЦен.ПроцентСкидкиНаценки КАК Процент
	|ИЗ
	|	Справочник.ТипыЦен КАК ТипыЦен
	|ГДЕ
	|	ТипыЦен.БазовыйТипЦен = &БазовыйТипЦен И 
	|	ТипыЦен.Рассчитывается И 
	|	ТипыЦен.ДляАвтомобилей = ИСТИНА");
	
	ТаблицаНаценокРасчетныхЦен.Очистить();
	ЗаполнитьТаблицуРасчетныхЦен(Запрос, ТаблицаНаценокРасчетныхЦен, Объект.ТипЦен);
	// Заполним новые цены
	Для Каждого ТекСтрока Из ТаблицаНаценокРасчетныхЦен Цикл
		НовыйРеквизит = Новый РеквизитФормы(ТекСтрока.Имя, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)), "Объект.Автоработы", ТекСтрока.Заголовок);
		МассивНовыхЦенКолонки.Добавить(НовыйРеквизит);
	КонецЦикла;
	
	Если МассивНовыхЦенКолонки.Количество()>0 ИЛИ МассивСтарыхЦенКолонки.Количество()>0 Тогда
		// Удалим старые колонки
		Для Каждого ТекСтрока Из МассивСтарыхЦенКолонки Цикл
			Если Элементы.Найти(ТекСтрока) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Элементы.Удалить(Элементы[ТекСтрока]);
		КонецЦикла;
		
		ЭтаФорма.ИзменитьРеквизиты(МассивНовыхЦенКолонки, МассивСтарыхЦенРеквизиты);
		// Создадим новые колонки
		Для Каждого ТекСтрока Из МассивНовыхЦенКолонки Цикл
			НоваяКолонка = Элементы.Добавить("Автоработы"+ТекСтрока.Имя, Тип("ПолеФормы"), Элементы.Автоработы);
			НоваяКолонка.ПутьКДанным = "Объект.Автоработы."+ТекСтрока.Имя;
		КонецЦикла;
	КонецЕсли;
	// Пересчет расчетных цен документа
	Для Каждого ТекСтрока Из Объект.Автоработы Цикл
		ПересчитатьРассчетныеЦеныНаСервере(ТекСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьРассчетныеЦеныНаКлиенте(Строка)
	
	Для Каждого СтрокаНаценки Из ТаблицаНаценокРасчетныхЦен Цикл
		Строка[СтрокаНаценки.Имя] = Строка.Цена * СтрокаНаценки.Коэффициент;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьРассчетныеЦеныНаСервере(Строка)
	
	Для Каждого СтрокаНаценки Из ТаблицаНаценокРасчетныхЦен Цикл
		Строка[СтрокаНаценки.Имя] = Строка.Цена * СтрокаНаценки.Коэффициент;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДатуНачалаДействия(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ДатаНачалаДействия = Объект.Дата;
		ДатаНачалаДействияПриИзмененииНаСервере();
	КонецЕсли; 
	
КонецПроцедуры 

&НаСервере
Процедура ПерезаполнитьДействующимиЦенамиНормочаса(Нормочас = Неопределено)
	
	Если Нормочас = Неопределено Тогда
		
		Элементы.АвтоработыЦенаНормочаса.Заголовок   = "Цена нормочаса (на "+Строка(Формат(Объект.ДатаНачалаДействия, "ДФ = dd.MM.yyyy"))+")";
		Элементы.АвтоработыВалютаНормочаса.Заголовок = "Валюта нормочаса (на "+Строка(Формат(Объект.ДатаНачалаДействия, "ДФ = dd.MM.yyyy"))+")";
		
	КонецЕсли;
	
	Документы.ИзменениеЦенАвторабот.ПерезаполнитьДействующимиЦенамиНормочаса(Объект, Нормочас);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ПроверкаПодразделенияДокументаИПользователяЗавершение(Контекст) Экспорт
	
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЗаполнениеОбъектов
&НаКлиенте
Процедура ПослеОбработкиЗаполнения(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ПослеОбработкиЗаполненияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеОбработкиЗаполненияНаСервере()
	
	ЗаполнениеОбъектовАльфаАвто.ПослеОбработкиЗаполнения(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ЗаполнениеОбъектов

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиАльфаАвто

// Ядро
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры
// Конец Ядро

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомДокументаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Элементы.Контрагент.Видимость = (Объект.ХозОперация = Справочники.ХозОперации.УстановкаЦенАвтоработКонтрагента);
	Элементы.ДоговорВзаиморасчетов.Видимость = (Объект.ХозОперация = Справочники.ХозОперации.УстановкаЦенАвтоработКонтрагента);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры = "РазрешенияДляПересчета" Тогда
		// Пересчет расчетных цен документа
		Для Каждого ТекСтрока Из Объект.Автоработы Цикл
			ПересчитатьРассчетныеЦеныНаСервере(ТекСтрока);
		КонецЦикла;
	ИначеЕсли ДополнительныеПараметры = "ПодборАвторабот" Тогда
		УправлениеДиалогомАльфаАвтоСервер.ОбработкаРезультатаПодбораАвторабот(ЭтотОбъект, РезультатОповещения);
	КонецЕсли;
	
	ПерезаполнитьДействующимиЦенамиНормочаса();
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если НЕ УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	// Команда заполнения - проверим имеются ли выделенные строки и передадим их
	// Обработаем событие в контексте сервера
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	
	Если ПолучитьЗначениеПараметраСтруктуры(РезультатОповещения, "ИзмененныеРеквизиты") <> Неопределено Тогда
		// Проверим - изменился ли реквизит "Дата"
		ИзмененнаяДата = ПолучитьЗначениеПараметраСтруктуры(РезультатОповещения.ИзмененныеРеквизиты, "Дата", Неопределено);
		
		Если ИзмененнаяДата <> Неопределено И ИзмененнаяДата <> Объект.ДатаНачалаДействия Тогда
			ОповещениеВопроса = Новый ОписаниеОповещения("ИзменитьДатуНачалаДействия", ЭтотОбъект);
			ПоказатьВопрос(ОповещениеВопроса, НСтр("ru = 'Дата документа изменена. Сменить дату начала действия цен авторабот?'"), РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	ИначеЕсли ЛЕВ(ДополнительныеПараметры, 17)="КомандаЗаполнения" Тогда
		Для Каждого ТекущаяСтрока Из Объект.Автоработы Цикл
			ПересчитатьРассчетныеЦеныНаКлиенте(ТекущаяСтрока);
		КонецЦикла;
	КонецЕсли;
	
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыАвтоработаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПодбора = Новый Структура("Отбор,СтрокаПоиска,Источник",
										Новый Структура(),
										Текст,
										"ИзменениеЦенАвторабот_Авторабота");
	
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.Автоработы"), ПараметрыПодбора);

КонецПроцедуры

#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	                                                                                                                
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, 	РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект,			РезультатОповещения);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область УтверждениеДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуУтверждения(Команда)
	
	УтверждениеДокументовКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект.Ссылка);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбработкуКомандыУтвержденияНаСервере(ПараметрыОбработки,
		ДополнительныеПараметры) Экспорт
	
	ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры);
	Оповестить("ПослеУтвержденияДокументов", Объект.Ссылка, ИмяФормы);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры)
	
	УтверждениеДокументовВызовСервера.ОбработкаКомандыФормы(ЭтотОбъект, ПараметрыОбработки.ИмяКоманды, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКомандыУтвержденияДокументов()
	
	ОбновитьКомандыУтвержденияДокументовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКомандыУтвержденияДокументовНаСервере()
	
	УтверждениеДокументовКлиентСервер.УстановитьДоступностьКнопокУтверждения(ЭтотОбъект, Объект, ТолькоПросмотр);
	УтверждениеДокументовВызовСервера.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, Объект, ТолькоПросмотр);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти