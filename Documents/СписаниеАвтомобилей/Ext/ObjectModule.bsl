// Модуль объекта документа "Списание автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Обработчик события объекта возникает в момент, когда выполняется установка нового номера.
//
// Параметры:
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//  Префикс              - Строка - Префикс, который будет использоваться для генерации номера.
//
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	// Вызываем общий обработчик события
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры // ПриУстановкеНовогоНомера()

// Обработчик события заполнения объекта как при создании нового, так и при вводе на основании существующего.
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения = "", СтандартнаяОбработка = Истина)
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат;
	КонецЕсли;
	
	ВедетсяБалансПоПодразделению = БалансВедетсяПоПодразделениям(ТекущаяДатаСеанса());
	Если ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилейОтданныхНаКомиссию
		ИЛИ ВедетсяБалансПоПодразделению Тогда
		ПодразделениеЗатрат = Справочники.ПодразделенияКомпании.ПустаяСсылка();
	Иначе
		ПодразделениеЗатрат = ПодразделениеКомпании;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события заполнения объекта копированием.
//
// Параметры:
//  ОбъектКопирования - ДокументОбъект - Исходный объект, который является источником копирования.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего при необходимости проверки заполнения реквизитов при записи или при проведении.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаСобытийДокументаСервер.ПроверитьКорректностьТоваровКомиссионныхДокументов(
		ЭтотОбъект,
		Отказ,
		"Автомобили",
		"Автомобиль",
		Ложь
	);
	
КонецПроцедуры

// Обработчик события возникающего после начала транзакции записи, но до начала записи объекта.
//
// Параметры:
//  Отказ           - Булево                   - Признак отказа от совершения операции.
//  РежимЗаписи     - РежимЗаписиДокумента     - Текущий режим записи документа.
//  РежимПроведения - РежимПроведенияДокумента - Текущий режим проведения.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);
	// Конец УтверждениеДокументов
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка корректности типа цен.
	Если ТипЦен.Рассчитывается Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Использование расчетных типов цен запрещено.'"), ЭтотОбъект);
		
	КонецЕсли;
	
	Если ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилейОтданныхНаКомиссию
		И ЗначениеЗаполнено(СкладКомпании) Тогда
		СкладКомпании = Неопределено;
	КонецЕсли;
	
	РаботаСГраницами.МоментВремениПередПроведением(Ссылка, ДополнительныеСвойства);
	РаботаСГраницами.ДвиженияПоКомплектацииПередПроведением(Ссылка, ДополнительныеСвойства);
	РаботаСГраницами.ДвиженияПоОстаткамАвтомобилейПередПроведением(Ссылка, ДополнительныеСвойства);
	
КонецПроцедуры

// Обработчик события возникающего после записи объекта в базу данных, но до окончания транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПриЗаписи(ЭтотОбъект, Отказ);
	// Конец УтверждениеДокументов
	
КонецПроцедуры

// Обработчик события возникающего в транзакции удаления перед непосредственным удалением объекта из базы данных.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередУдалением(Отказ)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего при отмене проведения документа. Выполняется в транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		СуммаДокумента = 0;
	КонецЕсли;
	
	ПолучитьСуммыСписания(Истина);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗапросаПоАвтомобилям = ПолучитьРезультатЗапросаПоАвтомобилям();
	
	Если ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилей Тогда
		
		Если ПроверитьЗаказыНаАвтомобиль() Тогда
			Отказ = Истина;
		КонецЕсли;
		
		ШапкаДокумента = ПолучитьШапкуДокумента(Ссылка);
		
		// Спишем автомобили со склада
		НаборЗаписейОстаткиАвтомобилей = Движения.ОстаткиАвтомобилей;
		
		НаборЗаписейОстаткиАвтомобилей.РежимПроведения               = РежимПроведения;
		НаборЗаписейОстаткиАвтомобилей.ДокументОбъект                = ЭтотОбъект;
		НаборЗаписейОстаткиАвтомобилей.РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям;
		НаборЗаписейОстаткиАвтомобилей.СкладКомпании                 = СкладКомпании;
		НаборЗаписейОстаткиАвтомобилей.ШапкаДокумента                = ШапкаДокумента;
		
		НаборЗаписейОстаткиАвтомобилей.СтатусПартии = Новый Массив;
		НаборЗаписейОстаткиАвтомобилей.СтатусПартии.Добавить(Перечисления.СтатусыПартий.ТоварКупленный);
		НаборЗаписейОстаткиАвтомобилей.СтатусПартии.Добавить(Перечисления.СтатусыПартий.ТоварПринятыйКомиссия);
		
		Если НЕ НаборЗаписейОстаткиАвтомобилей.Расход() Тогда
			Отказ = Истина;
		КонецЕсли;
		
	ИначеЕсли ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилейОтданныхНаКомиссию Тогда
		// списываем автомобили отданные на комиссию
		НаборЗаписейАвтомобилиОтданные = Движения.АвтомобилиОтданные;
		НаборЗаписейАвтомобилиОтданные.ДокументОбъект                = ЭтотОбъект;
		НаборЗаписейАвтомобилиОтданные.Контрагент                    = Контрагент;
		НаборЗаписейАвтомобилиОтданные.ДоговорВзаиморасчетов         = ДоговорВзаиморасчетов;
		НаборЗаписейАвтомобилиОтданные.РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям;
		
		Если НЕ НаборЗаписейАвтомобилиОтданные.Расход() Тогда
			Отказ = Истина;
		КонецЕсли;
		Если НЕ Отказ Тогда
			НаборЗаписейАвтомобилиОтданные.Записать();
		КонецЕсли; 
		
	КонецЕсли;
	
	// проведем партии товаров
	Если НЕ Отказ Тогда
		Если НЕ ПровестиПоПартиям(РежимПроведения, Ссылка) Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилей Тогда
		// Зачитываем принятые на реализацию автомобили, которые были списаны
		НаборЗаписейРеализованныеАвтомобили = Движения.РеализованныеАвтомобили;
		НаборЗаписейРеализованныеАвтомобили.ДокументОбъект                = ЭтотОбъект;
		НаборЗаписейРеализованныеАвтомобили.Списание                      = Истина;
		НаборЗаписейРеализованныеАвтомобили.РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям;
		
		Если НЕ НаборЗаписейРеализованныеАвтомобили.Приход() Тогда
			Отказ = Истина;
		КонецЕсли;
		Если НЕ Отказ Тогда
			НаборЗаписейОстаткиАвтомобилей.Записать();
			
			ШапкаДокумента = ПолучитьШапкуДокумента(Ссылка);
			
			// доходы и расходы
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ОбъединенныйЗапрос.Подразделение КАК Подразделение,
			|	ЕСТЬNULL(СУММА(ОбъединенныйЗапрос.СуммаАвтомобилейУпр), 0) КАК СуммаАвтомобилейУпр,
			|	ЕСТЬNULL(СУММА(ОбъединенныйЗапрос.СуммаОборудованияУпр), 0) КАК СуммаОборудованияУпр
			|ИЗ(
			|ВЫБРАТЬ
			|	РеализованныеАвтомобили.ДоговорВзаиморасчетов.ПодразделениеКомпании КАК Подразделение,
			|	ЕСТЬNULL(СУММА(РеализованныеАвтомобили.СуммаУпр), 0) КАК СуммаАвтомобилейУпр,
			|	0 КАК СуммаОборудованияУпр
			|ИЗ
			|	РегистрНакопления.РеализованныеАвтомобили КАК РеализованныеАвтомобили
			|ГДЕ
			|	РеализованныеАвтомобили.Регистратор = &Регистратор
			|СГРУППИРОВАТЬ ПО
			|	РеализованныеАвтомобили.ДоговорВзаиморасчетов.ПодразделениеКомпании
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РеализованныеТовары.ДоговорВзаиморасчетов.ПодразделениеКомпании,
			|	0,
			|	ЕСТЬNULL(СУММА(РеализованныеТовары.СуммаУпр),0)
			|ИЗ
			|	РегистрНакопления.РеализованныеТовары КАК РеализованныеТовары
			|ГДЕ
			|	РеализованныеТовары.Регистратор = &Регистратор
			|СГРУППИРОВАТЬ ПО
			|	РеализованныеТовары.ДоговорВзаиморасчетов.ПодразделениеКомпании
			|) КАК ОбъединенныйЗапрос
			|СГРУППИРОВАТЬ ПО
			|	ОбъединенныйЗапрос.Подразделение";
			Запрос.УстановитьПараметр("Регистратор", Ссылка);
			
			// В случае если ведется баланс по подразделению передадим подразделение соответствующее корреспонденции.
			Если БалансВедетсяПоПодразделениям(Дата) Тогда
				Выборка = Запрос.Выполнить().Выбрать();
				НаборЗаписейДоходыИРасходы = Движения.ДоходыИРасходы;
				Пока Выборка.Следующий() Цикл
					СуммаАвтомобилейУпр  = Выборка.СуммаАвтомобилейУпр;
					СуммаОборудованияУпр = Выборка.СуммаОборудованияУпр;
					
					Если СуммаАвтомобилейУпр <> 0 Тогда
						НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
						НаборЗаписейДоходыИРасходы.Подразделение          = Выборка.Подразделение;
						НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СебестоимостьАвтомобилей;
						НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
						НаборЗаписейДоходыИРасходы.Доход                  = СуммаАвтомобилейУпр;
						НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
						
						Если НЕ НаборЗаписейДоходыИРасходы.Расход() Тогда
							Отказ = Истина;
						КонецЕсли;
					КонецЕсли;
					
					Если СуммаОборудованияУпр <> 0 Тогда
						НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
						НаборЗаписейДоходыИРасходы.Подразделение          = Выборка.Подразделение;
						НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.Себестоимость;
						НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
						НаборЗаписейДоходыИРасходы.Доход                  = СуммаОборудованияУпр;
						НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
						
						Если НЕ НаборЗаписейДоходыИРасходы.Расход() Тогда
							Отказ = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			Иначе
				ТаблицаСебестоимости = Запрос.Выполнить().Выгрузить();
				СуммаАвтомобилейУпр  = ТаблицаСебестоимости.Итог("СуммаАвтомобилейУпр");
				СуммаОборудованияУпр = ТаблицаСебестоимости.Итог("СуммаОборудованияУпр");
				
				Если СуммаАвтомобилейУпр <> 0 Тогда
					НаборЗаписейДоходыИРасходы = Движения.ДоходыИРасходы;
					НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
					НаборЗаписейДоходыИРасходы.Подразделение          = ШапкаДокумента.ПодразделениеЗатрат;
					НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СебестоимостьАвтомобилей;
					НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
					НаборЗаписейДоходыИРасходы.Доход                  = СуммаАвтомобилейУпр;
					НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
					
					Если НЕ НаборЗаписейДоходыИРасходы.Расход() Тогда
						Отказ = Истина;
					КонецЕсли;
				КонецЕсли;
				
				Если СуммаОборудованияУпр <> 0 Тогда
					НаборЗаписейДоходыИРасходы = Движения.ДоходыИРасходы;
					НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
					НаборЗаписейДоходыИРасходы.Подразделение          = ШапкаДокумента.ПодразделениеЗатрат;
					НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.Себестоимость;
					НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
					НаборЗаписейДоходыИРасходы.Доход                  = СуммаОборудованияУпр;
					НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
					
					Если НЕ НаборЗаписейДоходыИРасходы.Расход() Тогда
						Отказ = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ХозОперация = ПредопределенноеЗначение("Справочник.ХозОперации.СписаниеАвтомобилей") Тогда
		
		РаботаСГраницами.СдвинутьГраницуОстатковАвтомобилей(Ссылка, ДополнительныеСвойства, Движения);
		РаботаСГраницами.СдвинутьГраницуКомплектации(Ссылка, ДополнительныеСвойства, Движения);
		
	КонецЕсли;
	
	// Проверим налиие прослеживаемых товаров, которые были реализованы
	Если Не Отказ Тогда
		Движения.ОстаткиАвтомобилей.Записать();
	КонецЕсли;
	
	ТаблицаПрослеживаемыхТоваров = Документы.СписаниеАвтомобилей.ОперацииСПрослеживаемымиТоварами(
		ЭтотОбъект);
	НаборЗаписейОперацииПрослеживаемости = Движения.ОперацииПрослеживаемыхТоваров;
	НаборЗаписейОперацииПрослеживаемости.ДокументОбъект = ЭтотОбъект;
	НаборЗаписейОперацииПрослеживаемости.ТаблицаПрослеживаемыхТоваров = ТаблицаПрослеживаемыхТоваров;
	
	Если Не НаборЗаписейОперацииПрослеживаемости.ДобавитьОперациюПрослеживаемости() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		СуммаДокумента = Документы.СписаниеАвтомобилей.РассчитатьИтогиОперации(ЭтотОбъект, Ложь).СуммаДокумента;
		
		СуммыСписания = ПолучитьСуммыСписания();
		
		Если СуммыСписания <> Неопределено Тогда
			Если СуммаСписания <> СуммыСписания.СуммаСписания Тогда
				СуммаСписания = СуммыСписания.СуммаСписания;
			КонецЕсли;
			
			Если СуммаСписанияБезНДС <> СуммыСписания.СуммаСписанияБезНДС Тогда
				СуммаСписанияБезНДС = СуммыСписания.СуммаСписанияБезНДС;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ОбменДанными.Загрузка = Истина;
			Записать(РежимЗаписиДокумента.Запись);
		Исключение
			ПричинаОшибки = ИнформацияОбОшибке();
			Отказ = Истина;
		КонецПопытки;
		ОбменДанными.Загрузка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСуммыСписания(ЭтоОтменаПроведения = Ложь)
	
	Если ЭтоОтменаПроведения Тогда
		
		СуммаСписания = 0;
		СуммаСписанияБезНДС = 0;
		Возврат Неопределено;
		
	КонецЕсли;
	
	ВалютаУпр  = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	
	Если НЕ ЗначениеЗаполнено(КурсВалютыУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, Дата);
		КурсУпр        = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	Иначе
		КурсУпр = КурсВалютыУпр;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилей Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОбъединенныйЗапрос.Автомобиль КАК Автомобиль,
		|	ОбъединенныйЗапрос.Сумма КАК Сумма,
		|	ОбъединенныйЗапрос.СуммаБезНДС КАК СуммаБезНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОстаткиАвтомобилей.Автомобиль КАК Автомобиль,
		|		ОстаткиАвтомобилей." + ?(ВалютаДокумента = ВалютаРегл, "Сумма", "СуммаУпр") + " КАК Сумма,
		|		ОстаткиАвтомобилей." + ?(ВалютаДокумента = ВалютаРегл, "СуммаБезНДС", "СуммаБезНДСУпр") + " КАК СуммаБезНДС
		|	ИЗ
		|		РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
		|	ГДЕ
		|		ОстаткиАвтомобилей.Регистратор = &Регистратор
		|		И ОстаткиАвтомобилей.ВидДвижения = &ВидДвиженияРасход
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КомплектацияАвтомобилей.Автомобиль,
		|		КомплектацияАвтомобилей." + ?(ВалютаДокумента = ВалютаРегл, "Сумма", "СуммаУпр") + ",
		|		КомплектацияАвтомобилей." + ?(ВалютаДокумента = ВалютаРегл, "СуммаБезНДС", "СуммаБезНДСУпр") + "
		|	ИЗ
		|		РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
		|	ГДЕ
		|		КомплектацияАвтомобилей.Регистратор = &Регистратор
		|		И КомплектацияАвтомобилей.ВидДвижения = &ВидДвиженияРасход) КАК ОбъединенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединенныйЗапрос.Автомобиль,
		|	ОбъединенныйЗапрос.Сумма,
		|	ОбъединенныйЗапрос.СуммаБезНДС";
	ИначеЕсли ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилейОтданныхНаКомиссию Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъединенныйЗапрос.Автомобиль КАК Автомобиль,
		|	ОбъединенныйЗапрос.Сумма КАК Сумма,
		|	ОбъединенныйЗапрос.СуммаБезНДС КАК СуммаБезНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		АвтомобилиОтданные.Автомобиль КАК Автомобиль,
		|		АвтомобилиОтданные." + ?(ВалютаДокумента = ВалютаРегл, "СуммаСебестоимостиРегл", "СуммаСебестоимостиУпр") + " КАК Сумма,
		|		АвтомобилиОтданные." + ?(ВалютаДокумента = ВалютаРегл, "СуммаСебестоимостиБезНДСРегл", "СуммаСебестоимостиБезНДСУпр") + " КАК СуммаБезНДС
		|	ИЗ
		|		РегистрНакопления.АвтомобилиОтданные КАК АвтомобилиОтданные
		|	ГДЕ
		|		АвтомобилиОтданные.Регистратор = &Регистратор
		|		И АвтомобилиОтданные.ВидДвижения = &ВидДвиженияРасход
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КомплектацияАвтомобилей.Автомобиль,
		|		КомплектацияАвтомобилей."+?(ВалютаДокумента = ВалютаРегл, "СуммаСебестоимостиРегл", "СуммаСебестоимостиУпр") + ",
		|		КомплектацияАвтомобилей."+?(ВалютаДокумента = ВалютаРегл, "СуммаСебестоимостиБезНДСРегл", "СуммаСебестоимостиБезНДСУпр") + "
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровОтданные КАК КомплектацияАвтомобилей
		|	ГДЕ
		|		КомплектацияАвтомобилей.Регистратор = &Регистратор
		|		И КомплектацияАвтомобилей.ВидДвижения = &ВидДвиженияРасход) КАК ОбъединенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединенныйЗапрос.Автомобиль,
		|	ОбъединенныйЗапрос.Сумма,
		|	ОбъединенныйЗапрос.СуммаБезНДС";
		Запрос.УстановитьПараметр("ДокументПередачи", Автомобили.Выгрузить().ВыгрузитьКолонку("ДокументПередачи"));
	КонецЕсли;
	Запрос.УстановитьПараметр("Регистратор"       , Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияРасход" , ВидДвиженияНакопления.Расход);
	КэшСуммСписания = Запрос.Выполнить().Выгрузить();
	
	Сумма = КэшСуммСписания.Итог("Сумма");
	СуммаБезНДС = КэшСуммСписания.Итог("СуммаБезНДС");
	
	Если ВалютаДокумента <> ВалютаРегл И ВалютаДокумента <> ВалютаУпр Тогда
		
		Сумма = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
			Сумма,
			ВалютаУпр,
			КурсУпр,
			ВалютаДокумента,
			КурсДокумента,
			2
		);
		
		СуммаБезНДС = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
			СуммаБезНДС,
			ВалютаУпр,
			КурсУпр,
			ВалютаДокумента,
			КурсДокумента,
			2
		);
		
	КонецЕсли;
	
	Возврат Новый Структура("СуммаСписания, СуммаСписанияБезНДС", Сумма, СуммаБезНДС);
	
КонецФункции

#Область ОбработчикиЗаполненияОбъекта

// Производит заполнение объекта на основании справочника "Контрагенты"
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_Контрагенты(ДанныеЗаполнения, ТекстЗаполнения = "", СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Вызываем общий обработчик заполнения
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Заполняем специфические для данной операции реквизиты
	ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилейОтданныхНаКомиссию;
	Документы.СписаниеАвтомобилей.ХозОперацияПриИзменении(ЭтотОбъект, ДополнительныеСвойства.ПараметрыДействия);
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_Контрагенты()

#КонецОбласти

#Область ФормированиеДвиженийДокумента

// Проверка наличия резервов на автомобиль
//
// Параметры
// Возвращаемое значение:
//  Булево - Заказов на данный автомобиль нет.
//
Функция ПроверитьЗаказыНаАвтомобиль()
	
	ДокументОбъектСтруктура = Новый Структура();
	ДокументОбъектСтруктура.Вставить("МетаданныеИмя", Метаданные().Имя);
	ДокументОбъектСтруктура.Вставить("МоментВремени", МоментВремени());
	ДокументОбъектСтруктура.Вставить("Автомобили", Автомобили.ВыгрузитьКолонку("Автомобиль"));
	
	Возврат ЗащищенныеФункцииАльфаАвтоСервер.РезервыАвтомобиляПроверитьЗаказыНаАвтомобиль(ДокументОбъектСтруктура);
	
КонецФункции // ПроверитьЗаказыНаАвтомобиль()

// Возвращает выборку по шапке
// ДокументСсылка - Ссылка на документ для которого получаем шапку.
Функция ПолучитьШапкуДокумента(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Дата КАК Дата,
	|	Док.ВалютаДокумента КАК ВалютаДокумента,
	|	Док.КурсДокумента КАК КурсДокумента,
	|	Док.ТипЦен КАК ТипЦен,
	|	Док.ХозОперация КАК ХозОперация,
	|	Док.КурсВалютыУпр КАК КурсВалютыУпр,
	|	Док.МоментВремени КАК МоментВремени,
	|	Док.ПодразделениеКомпании КАК ПодразделениеКомпании,
	/////////// ПРИВАТ ////////////
	|	Док.СкладКомпании КАК СкладКомпании,
	|	Док.СкладКомпании.ПодразделениеКомпании КАК ПодразделениеСклада,
	|	Док.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Док.Контрагент КАК Контрагент,
	|	Док.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	Док.ДоговорВзаиморасчетов.ПодразделениеКомпании КАК ПодразделениеДоговора, 
	|	Док.СтатьяСписанияТМЦ КАК СтатьяСписанияТМЦ
	|
	|ИЗ
	|	Документ.СписаниеАвтомобилей КАК Док
	|
	|ГДЕ
	|	Док.Ссылка=&Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;
	
КонецФункции

// У нас не стандартная таблица, поэтому сформирует свой результат запроса по автомобилям.
//
Функция ПолучитьРезультатЗапросаПоАвтомобилям()
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписаниеАвтомобилейАвтомобили.Автомобиль КАК Автомобиль,
	|	СписаниеАвтомобилейАвтомобили.Количество КАК Количество
	|ИЗ
	|	Документ.СписаниеАвтомобилей.Автомобили КАК СписаниеАвтомобилейАвтомобили
	|ГДЕ
	|	СписаниеАвтомобилейАвтомобили.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Формирует движения документа по партионным регистрам
// Режим - режим проведения (оперативный/неоперативный)
// ДокументСсылка - ссылка на документ который надо допровести по партиям
// Возвращает Истина - все хорошо, ложь - чего-то не так.
Функция ПровестиПоПартиям(РежимПроведения, ДокументСсылка) Экспорт
	Отказ = Ложь;
	
	// получим шапку документа
	ШапкаДокумента = ПолучитьШапкуДокумента(ДокументСсылка);
	
	// определим способ ведения баланса
	ВедетсяБалансПоПодразделению = БалансВедетсяПоПодразделениям(ШапкаДокумента.Дата);
		
	// Если было отложенное проведение по партиям, то:
	// Очистим возможные движения по регистру комплектации автомобилей .
	НаборЗаписейПартионногоРегистра = РегистрыНакопления.КомплектацияАвтомобилей.СоздатьНаборЗаписей();
	НаборЗаписейПартионногоРегистра.Отбор.Регистратор.Значение      = ШапкаДокумента.Ссылка;
	НаборЗаписейПартионногоРегистра.Отбор.Регистратор.Использование = Истина;
	
	НаборЗаписейПартионногоРегистра.Записать();
	
	// Проверим, если подразделение проводиться по партиям "отложено", то дальше не идем.
	НаборЗаписейДопроведениеПоПартиям = Движения.ДопроведениеПоПартиям;
	НаборЗаписейДопроведениеПоПартиям.ДокументОбъект = ЭтотОбъект;
	НаборЗаписейДопроведениеПоПартиям.ШапкаДокумента = ШапкаДокумента;
	
	Отказ = НЕ НаборЗаписейДопроведениеПоПартиям.Зафиксировать() ИЛИ Отказ;
	
	Если ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилей Тогда
		// Спишем оборудование автомобиля
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СписаниеАвтомобилейАвтомобили.Автомобиль
		|ИЗ
		|	Документ.СписаниеАвтомобилей.Автомобили КАК СписаниеАвтомобилейАвтомобили
		|ГДЕ
		|	СписаниеАвтомобилейАвтомобили.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", ШапкаДокумента.Ссылка);
		
		ВыборкаАвтомобилей = Запрос.Выполнить().Выбрать();
		НаборЗаписейКомплектацияАвтомобилей = Движения.КомплектацияАвтомобилей;
		Пока ВыборкаАвтомобилей.Следующий() Цикл
			// Спишем оборудование по документу
			НаборЗаписейКомплектацияАвтомобилей.РежимПроведения           = РежимПроведения;
			НаборЗаписейКомплектацияАвтомобилей.ДокументОбъект            = ЭтотОбъект;
			НаборЗаписейКомплектацияАвтомобилей.РезультатЗапросаПоТоварам = Неопределено;
			НаборЗаписейКомплектацияАвтомобилей.Автомобиль                = ВыборкаАвтомобилей.Автомобиль;
			НаборЗаписейКомплектацияАвтомобилей.СкладКомпании             = ШапкаДокумента.СкладКомпании;
			НаборЗаписейКомплектацияАвтомобилей.ПериодДвижения            = ШапкаДокумента.МоментВремени;
			НаборЗаписейКомплектацияАвтомобилей.ШапкаДокумента            = ШапкаДокумента;
			Отказ = НЕ НаборЗаписейКомплектацияАвтомобилей.Расход() ИЛИ Отказ;
		КонецЦикла;

		Если НЕ Отказ Тогда
			НаборЗаписейКомплектацияАвтомобилей.Записать();
		КонецЕсли;
		
		Если НЕ НаборЗаписейДопроведениеПоПартиям.НеПроводитьПартии Тогда
			// Зачитываем принятые на реализацию товары, которые были списаны
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	КомплектацияАвтомобилей.Партия КАК Партия,
			|	КомплектацияАвтомобилей.Автомобиль КАК Автомобиль,
			|	КомплектацияАвтомобилей.Номенклатура КАК Номенклатура,
			|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	КомплектацияАвтомобилей.ГТД КАК ГТД,
			|	СУММА(КомплектацияАвтомобилей.Количество) КАК Количество,
			|	СУММА(КомплектацияАвтомобилей.СуммаУпр) КАК СуммаУпр,
			|	СУММА(КомплектацияАвтомобилей.СуммаПродажиУпр) КАК СуммаПродажиУпр,
			|	КомплектацияАвтомобилей.СтавкаНДС КАК СтавкаНДС,
			|	СУММА(КомплектацияАвтомобилей.СуммаПродажи) КАК СуммаПродажи,
			|	СУММА(КомплектацияАвтомобилей.Сумма) КАК Сумма,
			|	СУММА(КомплектацияАвтомобилей.СуммаНДС) КАК СуммаНДС,
			|	СУММА(КомплектацияАвтомобилей.СуммаБезНДС) КАК СуммаБезНДС,
			|	СУММА(КомплектацияАвтомобилей.СуммаНДСУпр) КАК СуммаНДСУпр
			|ИЗ
			|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
			|ГДЕ
			|	КомплектацияАвтомобилей.Регистратор = &Регистратор
			|	И КомплектацияАвтомобилей.СтатусПартии = &СтатусПартииТоварПринятыйКомиссия
			|	И КомплектацияАвтомобилей.Номенклатура ССЫЛКА Справочник.Номенклатура
			|
			|СГРУППИРОВАТЬ ПО
			|	КомплектацияАвтомобилей.Партия,
			|	КомплектацияАвтомобилей.Автомобиль,
			|	КомплектацияАвтомобилей.Номенклатура,
			|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры,
			|	КомплектацияАвтомобилей.ГТД,
			|	КомплектацияАвтомобилей.СтавкаНДС";
			
			Запрос.УстановитьПараметр("Регистратор"                       , ШапкаДокумента.Ссылка);
			Запрос.УстановитьПараметр("СтатусПартииТоварПринятыйКомиссия" , Перечисления.СтатусыПартий.ТоварПринятыйКомиссия);
			
			ВыборкаКомплектацияАвтомобилей  = Запрос.Выполнить().Выбрать();
			НаборЗаписейРеализованныеТовары = Движения.РеализованныеТовары;
			ОпцияПроизводителя              = Справочники.Номенклатура.ОпцияПроизводителя;
			ПустаяХарактеристика            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
			
			Пока ВыборкаКомплектацияАвтомобилей.Следующий() Цикл
				НоваяЗапись = НаборЗаписейРеализованныеТовары.Добавить();
				
				НоваяЗапись.ВидДвижения          = ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период               = ШапкаДокумента.Дата;
				НоваяЗапись.Регистратор          = ШапкаДокумента.Ссылка;
				НоваяЗапись.ДокументПередачи     = ВыборкаКомплектацияАвтомобилей.Партия;
				НоваяЗапись.Автомобиль           = ВыборкаКомплектацияАвтомобилей.Автомобиль;
				
				Если ТипЗнч(ВыборкаКомплектацияАвтомобилей.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
					НоваяЗапись.Номенклатура               = ВыборкаКомплектацияАвтомобилей.Номенклатура;
					НоваяЗапись.ХарактеристикаНоменклатуры = ВыборкаКомплектацияАвтомобилей.ХарактеристикаНоменклатуры;
				Иначе
					НоваяЗапись.Номенклатура               = ОпцияПроизводителя;
					НоваяЗапись.ХарактеристикаНоменклатуры = ПустаяХарактеристика;
				КонецЕсли;
				
				НоваяЗапись.Контрагент            = ВыборкаКомплектацияАвтомобилей.Партия.Контрагент;
				НоваяЗапись.ДоговорВзаиморасчетов = ВыборкаКомплектацияАвтомобилей.Партия.ДоговорВзаиморасчетов;
				НоваяЗапись.ГТД                   = ВыборкаКомплектацияАвтомобилей.ГТД;
				НоваяЗапись.ХозОперация           = ШапкаДокумента.ХозОперация;
				НоваяЗапись.Количество            = ВыборкаКомплектацияАвтомобилей.Количество;
				НоваяЗапись.СуммаУпр              = ВыборкаКомплектацияАвтомобилей.СуммаУпр;
				НоваяЗапись.СуммаБезНДСУпр        = ВыборкаКомплектацияАвтомобилей.СуммаБезНДСУпр;
				НоваяЗапись.СуммаНДСУпр           = ВыборкаКомплектацияАвтомобилей.СуммаНДСУпр;
				НоваяЗапись.СуммаРегл             = ВыборкаКомплектацияАвтомобилей.Сумма;
				НоваяЗапись.СуммаБезНДС           = ВыборкаКомплектацияАвтомобилей.СуммаБезНДС;
				НоваяЗапись.СуммаНДС              = ВыборкаКомплектацияАвтомобилей.СуммаНДС;
				НоваяЗапись.СуммаПродажи          = ВыборкаКомплектацияАвтомобилей.СуммаПродажиУпр;
				НоваяЗапись.СуммаПродажиРегл      = ВыборкаКомплектацияАвтомобилей.СуммаПродажи;
				// СебестоимостьРавнаПродаже
				Если НЕ НоваяЗапись.ДоговорВзаиморасчетов.КомиссияОтчетНаОснованииПродаж Тогда
					НоваяЗапись.СуммаРегл      = НоваяЗапись.СуммаПродажиРегл;
					НоваяЗапись.СуммаНДС       = Окр((НоваяЗапись.СуммаРегл * ВыборкаКомплектацияАвтомобилей.СтавкаНДС.Ставка) / (100 + ВыборкаКомплектацияАвтомобилей.СтавкаНДС.Ставка), 2);
					НоваяЗапись.СуммаБезНДС    = НоваяЗапись.СуммаРегл - НоваяЗапись.СуммаНДС;
					НоваяЗапись.СуммаУпр       = НоваяЗапись.СуммаПродажи;
					НоваяЗапись.СуммаНДСУпр    = Окр(НоваяЗапись.СуммаПродажи * ВыборкаКомплектацияАвтомобилей.СтавкаНДС.Ставка / (100 + ВыборкаКомплектацияАвтомобилей.СтавкаНДС.Ставка), 2);
					НоваяЗапись.СуммаБезНДСУпр = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
				КонецЕсли;
				
			КонецЦикла;
			
			НаборЗаписейРеализованныеТовары.Записать();
		КонецЕсли;
		
		// Доходы и расходы
		СуммаРасходов = 0;
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(КомплектацияАвтомобилей.СуммаУпр),0) КАК СуммаУпр
		|ИЗ
		|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
		|ГДЕ
		|	КомплектацияАвтомобилей.Регистратор = &Регистратор
		|	И КомплектацияАвтомобилей.СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварКупленный)";
		Запрос.УстановитьПараметр("Регистратор", ШапкаДокумента.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			СуммаРасходов = СуммаРасходов + Выборка.СуммаУпр;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ОстаткиАвтомобилей.СуммаУпр),0) КАК СуммаУпр
		|ИЗ
		|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
		|ГДЕ
		|	ОстаткиАвтомобилей.Регистратор = &Регистратор
		|	И ОстаткиАвтомобилей.СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварКупленный)";
		Запрос.УстановитьПараметр("Регистратор", ШапкаДокумента.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СуммаРасходов = СуммаРасходов + Выборка.СуммаУпр;
		КонецЕсли;
		
		Если СуммаРасходов <> 0 Тогда
			// Доходы и расходы
			НаборЗаписейДиР                        = Движения.ДоходыИРасходы;
			НаборЗаписейДиР.ДокументОбъект         = ЭтотОбъект;
			НаборЗаписейДиР.Подразделение          = 
				?(ВедетсяБалансПоПодразделению, ШапкаДокумента.ПодразделениеСклада, ШапкаДокумента.ПодразделениеЗатрат);
			НаборЗаписейДиР.СтатьяДоходовИРасходов = ?(НаборЗаписейДопроведениеПоПартиям.НеПроводитьПартии,
				Справочники.СтатьиДоходовИРасходов.СебестоимостьНеоприходованныхПартий,
				ШапкаДокумента.СтатьяСписанияТМЦ
			);
			НаборЗаписейДиР.ВУпрВалюте             = Истина;
			НаборЗаписейДиР.Расход                 = СуммаРасходов;
			НаборЗаписейДиР.ШапкаДокумента         = ШапкаДокумента;
			
			Отказ = НЕ НаборЗаписейДиР.Приход() ИЛИ Отказ;
		КонецЕсли;
		
	ИначеЕсли ХозОперация = Справочники.ХозОперации.СписаниеАвтомобилейОтданныхНаКомиссию Тогда
		Если НЕ НаборЗаписейДопроведениеПоПартиям.НеПроводитьПартии Тогда
			
			// списываем оборудование, отданное на комиссию
			НаборЗаписейПартииОтданные = Движения.ПартииТоваровОтданные;
			НаборЗаписейПартииОтданные.ДокументОбъект        = ЭтотОбъект;
			НаборЗаписейПартииОтданные.Контрагент            = ШапкаДокумента.Контрагент;
			НаборЗаписейПартииОтданные.ДоговорВзаиморасчетов = ШапкаДокумента.ДоговорВзаиморасчетов;
			НаборЗаписейПартииОтданные.ШапкаДокумента        = ШапкаДокумента;
			НаборЗаписейПартииОтданные.ЕстьАвтомобиль        = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СписаниеАвтомобилей.ДокументПередачи,
			|	СписаниеАвтомобилей.Автомобиль
			|ПОМЕСТИТЬ
			|	ТаблицаАвтомобилей
			|ИЗ
			|	Документ.СписаниеАвтомобилей.Автомобили КАК СписаниеАвтомобилей
			|ГДЕ
			|	СписаниеАвтомобилей.Ссылка = &Ссылка
			|;
			|
			|ВЫБРАТЬ
			|	КомплектацияАвтомобилей.Автомобиль КАК Автомобиль,
			|	КомплектацияАвтомобилей.Номенклатура КАК Номенклатура,
			|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	КомплектацияАвтомобилей.Партия КАК Партия,
			|	КомплектацияАвтомобилей.ГТД КАК ГТД,
			|	КомплектацияАвтомобилей.Регистратор КАК ДокументПередачи,
			|	СУММА(ВЫБОР
			|		КОГДА КомплектацияАвтомобилей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			-КомплектацияАвтомобилей.Количество
			|		ИНАЧЕ
			|			КомплектацияАвтомобилей.Количество
			|	КОНЕЦ) КАК Количество,
			|	СУММА(ВЫБОР
			|		КОГДА КомплектацияАвтомобилей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			-КомплектацияАвтомобилей.СуммаНДС
			|		ИНАЧЕ
			|			КомплектацияАвтомобилей.СуммаНДС
			|	КОНЕЦ) КАК СуммаНДС,
			|	СУММА(ВЫБОР
			|		КОГДА КомплектацияАвтомобилей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			-КомплектацияАвтомобилей.СуммаУпр
			|		ИНАЧЕ
			|			КомплектацияАвтомобилей.СуммаУпр
			|	КОНЕЦ) КАК СуммаВсего
			|ИЗ
			|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
			|ГДЕ
			|	КомплектацияАвтомобилей.Номенклатура ССЫЛКА Справочник.Номенклатура И 
			|	(КомплектацияАвтомобилей.Автомобиль, КомплектацияАвтомобилей.Регистратор) В 
			|	(ВЫБРАТЬ
			|		ТаблицаАвтомобилей.Автомобиль,
			|		ТаблицаАвтомобилей.ДокументПередачи
			|	ИЗ
			|		ТаблицаАвтомобилей КАК ТаблицаАвтомобилей)
			|		
			|СГРУППИРОВАТЬ ПО
			|	КомплектацияАвтомобилей.Автомобиль,
			|	КомплектацияАвтомобилей.Номенклатура,
			|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры,
			|	КомплектацияАвтомобилей.Партия,
			|	КомплектацияАвтомобилей.ГТД,
			|	КомплектацияАвтомобилей.Регистратор";
			Запрос.УстановитьПараметр("Ссылка", ШапкаДокумента.Ссылка);
			
			НаборЗаписейПартииОтданные.РезультатЗапросаПоТоварам = Запрос.Выполнить();
			НаборЗаписейПартииОтданные.РезультатЗапросаПоПартиям = НаборЗаписейПартииОтданные.ПартииОтданныхТоваров(Ложь);
			
			Отказ = НЕ НаборЗаписейПартииОтданные.Расход() ИЛИ Отказ;
			
			// списываем опции производителя, отданное на комиссию
			НаборЗаписейПартииОтданные = Движения.ПартииТоваровОтданные;
			
			НаборЗаписейПартииОтданные.ДокументОбъект        = ЭтотОбъект;
			НаборЗаписейПартииОтданные.Контрагент            = ШапкаДокумента.Контрагент;
			НаборЗаписейПартииОтданные.ДоговорВзаиморасчетов = ШапкаДокумента.ДоговорВзаиморасчетов;
			НаборЗаписейПартииОтданные.ШапкаДокумента        = ШапкаДокумента;
			НаборЗаписейПартииОтданные.ЕстьАвтомобиль        = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СписаниеАвтомобилей.ДокументПередачи,
			|	СписаниеАвтомобилей.Автомобиль
			|ПОМЕСТИТЬ
			|	ТаблицаАвтомобилей
			|ИЗ
			|	Документ.СписаниеАвтомобилей.Автомобили КАК СписаниеАвтомобилей
			|ГДЕ
			|	СписаниеАвтомобилей.Ссылка = &Ссылка
			|;
			|
			|ВЫБРАТЬ
			|	КомплектацияАвтомобилей.Номенклатура КАК Номенклатура,
			|	КомплектацияАвтомобилей.Автомобиль КАК Автомобиль,
			|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	КомплектацияАвтомобилей.Партия КАК Партия,
			|	КомплектацияАвтомобилей.ГТД КАК ГТД,
			|	КомплектацияАвтомобилей.Регистратор КАК ДокументПередачи,
			|	СУММА(КомплектацияАвтомобилей.Количество) КАК Количество,
			|	СУММА(КомплектацияАвтомобилей.СуммаНДС) КАК СуммаНДС,
			|	СУММА(КомплектацияАвтомобилей.СуммаУпр) КАК СуммаВсего
			|ИЗ
			|	РегистрНакопления.ПартииТоваровОтданные КАК КомплектацияАвтомобилей
			|ГДЕ
			|	КомплектацияАвтомобилей.Номенклатура = &ОпцияПроизводителя И 
			|	(КомплектацияАвтомобилей.Регистратор,КомплектацияАвтомобилей.Автомобиль) В 
			|	(ВЫБРАТЬ
			|		ТаблицаАвтомобилей.ДокументПередачи,
			|		ТаблицаАвтомобилей.Автомобиль
			|	ИЗ
			|		ТаблицаАвтомобилей КАК ТаблицаАвтомобилей)
			|		
			|СГРУППИРОВАТЬ ПО
			|	КомплектацияАвтомобилей.Номенклатура,
			|	КомплектацияАвтомобилей.Автомобиль,
			|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры,
			|	КомплектацияАвтомобилей.Партия,
			|	КомплектацияАвтомобилей.ГТД,
			|	КомплектацияАвтомобилей.Регистратор";
			Запрос.УстановитьПараметр("Ссылка"             , ШапкаДокумента.Ссылка);
			Запрос.УстановитьПараметр("ОпцияПроизводителя" , Справочники.Номенклатура.ОпцияПроизводителя);
			
			НаборЗаписейПартииОтданные.РезультатЗапросаПоТоварам = Запрос.Выполнить();
			НаборЗаписейПартииОтданные.РезультатЗапросаПоПартиям = НаборЗаписейПартииОтданные.ПартииОтданныхТоваров(Ложь);
			Отказ = НЕ НаборЗаписейПартииОтданные.Расход() ИЛИ Отказ;
			
			Если НЕ Отказ Тогда
				НаборЗаписейПартииОтданные.Записать();
			КонецЕсли;
			
			// Доходы и расходы
			СуммаРасходов = 0;
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СУММА(ОбъединенныйЗапрос.СуммаСебестоимостиУпр), 0) КАК СуммаСебестоимостиУпр
			|ИЗ(
			|ВЫБРАТЬ
			|	ЕСТЬNULL(СУММА(АвтомобилиОтданные.СуммаСебестоимостиУпр), 0) КАК СуммаСебестоимостиУпр
			|ИЗ
			|	РегистрНакопления.АвтомобилиОтданные КАК АвтомобилиОтданные
			|ГДЕ
			|	АвтомобилиОтданные.Регистратор = &Регистратор
			|	И АвтомобилиОтданные.ВидДвижения = &ВидДвижения
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЕСТЬNULL(СУММА(ПартииТоваровОтданные.СуммаСебестоимостиУпр),0)
			|ИЗ
			|	РегистрНакопления.ПартииТоваровОтданные КАК ПартииТоваровОтданные
			|ГДЕ
			|	ПартииТоваровОтданные.Регистратор = &Регистратор
			|	И ПартииТоваровОтданные.ВидДвижения = &ВидДвижения
			|) КАК ОбъединенныйЗапрос";
			Запрос.УстановитьПараметр("Регистратор" , ШапкаДокумента.Ссылка);
			Запрос.УстановитьПараметр("ВидДвижения" , ВидДвиженияНакопления.Расход);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СуммаРасходов = СуммаРасходов+Выборка.СуммаСебестоимостиУпр;
			КонецЕсли;
			
			Если СуммаРасходов <> 0 Тогда
				НаборЗаписейДиР                = Движения.ДоходыИРасходы;
				НаборЗаписейДиР.ДокументОбъект = ЭтотОбъект;
				
				// В случае если ведется баланс по подразделению передадим подразделение соответствующее корреспонденции.
				Если ВедетсяБалансПоПодразделению Тогда
					НаборЗаписейДиР.Подразделение = ШапкаДокумента.ПодразделениеДоговора;
				КонецЕсли;
				
				НаборЗаписейДиР.СтатьяДоходовИРасходов = ШапкаДокумента.СтатьяСписанияТМЦ;
				НаборЗаписейДиР.ВУпрВалюте             = Истина;
				НаборЗаписейДиР.ШапкаДокумента         = ШапкаДокумента;
				НаборЗаписейДиР.Расход                 = СуммаРасходов;
				
				Отказ = НЕ НаборЗаписейДиР.Приход() ИЛИ Отказ;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

#КонецЕсли
