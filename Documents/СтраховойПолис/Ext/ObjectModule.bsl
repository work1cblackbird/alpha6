// Модуль обдъекта документа "Страховой полис"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Обработчик события объекта возникает в момент, когда выполняется установка нового номера.
//
// Параметры:
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//  Префикс              - Строка - Префикс, который будет использоваться для генерации номера.
//
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	// Вызываем общий обработчик события
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры // ПриУстановкеНовогоНомера()

// Обработчик события заполнения объекта как при создании нового, так и при вводе на основании существующего.
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения="", СтандартнаяОбработка=ИСТИНА) Экспорт

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("РабочийЛистОтделаСтрахования")
		И ДанныеЗаполнения.Свойство("СтрокаВариантаСтрахования") Тогда
		
		ЭтотОбъект.ДополнительныеСвойства.Вставить("СтрокаВариантаСтрахования", ДанныеЗаполнения.СтрокаВариантаСтрахования);
		Заполнить(ДанныеЗаполнения.РабочийЛистОтделаСтрахования);
		Возврат;
		
	КонецЕсли;
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ОбработкаЗаполнения_Структура(ДанныеЗаполнения, СтандартнаяОбработка);
	Иначе
		ЗащищенныеФункцииАльфаАвтоСервер.СтраховойПолисОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Страхователь) Тогда
		Если НЕ ЗначениеЗаполнено(СобственникТС) Тогда
			СобственникТС = Страхователь;
		КонецЕсли;
		
		Если ЛицаДопущенныеКУправлениюТС.Количество() = 0 Тогда
			НоваяСтрока = ЛицаДопущенныеКУправлениюТС.Добавить();
			НоваяСтрока.ЛицоДопущенное = Страхователь;
			
			Если ЗначениеЗаполнено(СобственникТС) И СобственникТС <> Страхователь Тогда
				НоваяСтрока = ЛицаДопущенныеКУправлениюТС.Добавить();
				НоваяСтрока.ЛицоДопущенное	= СобственникТС;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

// Обработчик события заполнения объекта копированием.
//
// Параметры:
//  ОбъектКопирования - ДокументОбъект - Исходный объект, который является источником копирования.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

// Обработчик события возникающего при необходимости проверки заполнения реквизитов при записи или при проведении.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Обработчик события возникающего после начала транзакции записи, но до начала записи объекта.
//
// Параметры:
//  Отказ           - Булево                   - Признак отказа от совершения операции.
//  РежимЗаписи     - РежимЗаписиДокумента     - Текущий режим записи документа.
//  РежимПроведения - РежимПроведенияДокумента - Текущий режим проведения.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Обработчик события возникающего в транзакции удаления перед непосредственным удалением объекта из базы данных.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередУдалением(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПередУдалением()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеДвиженийДокумента

// Производит заполнение объекта по передаваемой структуре
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_Структура(ДанныеЗаполнения, СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("Основание") Тогда
		ЗащищенныеФункцииАльфаАвтоСервер.СтраховойПолисОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения.Основание);
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("Страховщик") Тогда
		Страховщик = ДанныеЗаполнения.Страховщик;
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ПрограммаСтрахования") Тогда
		ПрограммаСтрахования = ДанныеЗаполнения.ПрограммаСтрахования;
		Документы.СтраховойПолис.ПрограммаСтрахованияПриИзменении(ЭтотОбъект);
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ВидСтрахования") Тогда
		ВидСтрахования = ДанныеЗаполнения.ВидСтрахования;
		Документы.СтраховойПолис.ВидСтрахованияПриИзменении(ЭтотОбъект);
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("СуммаПремии") Тогда
		СуммаПремии = ДанныеЗаполнения.СуммаПремии;
		Документы.СтраховойПолис.СтраховательПриИзменении(ЭтотОбъект);
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("Автомобиль") Тогда
		Автомобиль = ?(ТипЗнч(ДанныеЗаполнения.Автомобиль) = Тип("Массив"),
			ДанныеЗаполнения.Автомобиль[0],
			ДанныеЗаполнения.Автомобиль);
		Документы.СтраховойПолис.АвтомобильПриИзменении(ЭтотОбъект);
	КонецЕсли;
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_Структура()

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

#КонецЕсли
