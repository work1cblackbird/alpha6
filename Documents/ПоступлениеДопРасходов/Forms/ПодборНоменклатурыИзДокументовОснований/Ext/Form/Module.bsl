///////////////////////////////////////////////////////////////////////////////
// Модуль формы "Подбор номенклатуры из документов оснований"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
		
	ТаблицаОснований     = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТаблицаОснований");
	ТаблицаРаспределения = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТаблицаРаспределения");
	КлючСтроки               = ПолучитьЗначениеПараметраСтруктуры(Параметры, "КлючСтроки");
	РаспределениеУслугПоАвтомобилям = ПолучитьЗначениеПараметраСтруктуры(Параметры, "РаспределениеУслугПоАвтомобилям");
	
	// Найдем номенклатуру, для которой уже распределена сумма
	НайденнаяНоменклатура = ТаблицаРаспределения.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
	
	УстановитьДляВсех = Ложь;
	Если НайденнаяНоменклатура.Количество() = 0 Тогда
		УстановитьДляВсех = Истина;
	КонецЕсли;
	
	// Заполним документами-основаниями
	СписокОснований = ТаблицаОснований.Выгрузить(, "ДокументОснование");
	СписокОснований.Свернуть("ДокументОснование");
	
	// Заполним верхний уровень
	Для Каждого ТекущаяСтрока Из СписокОснований Цикл
		НоваяСтрока = ДеревоНоменклатуры.ПолучитьЭлементы().Добавить();
		НоваяСтрока.ДокументОснование = ТекущаяСтрока.ДокументОснование;
	КонецЦикла;
	
	Для Каждого ТекущийДокумент Из ДеревоНоменклатуры.ПолучитьЭлементы() Цикл
		НайденныеСтроки = ТаблицаОснований.НайтиСтроки(Новый Структура("ДокументОснование", ТекущийДокумент.ДокументОснование));
		Для Каждого ТекущаяСтрокаДокумента Из НайденныеСтроки Цикл
			НоваяСтрока = ТекущийДокумент.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаДокумента,, "ДокументОснование");
			Если УстановитьДляВсех Тогда
				НоваяСтрока.Использование = Истина;
			Иначе
				ПараметрыОтбора = Новый Структура();
				ПараметрыОтбора.Вставить("ДокументОснование",          ТекущийДокумент.ДокументОснование);
				ПараметрыОтбора.Вставить("Номенклатура",               НоваяСтрока.Номенклатура);
				ПараметрыОтбора.Вставить("ХарактеристикаНоменклатуры", НоваяСтрока.ХарактеристикаНоменклатуры);
				ПараметрыОтбора.Вставить("ЕдиницаИзмерения",           НоваяСтрока.ЕдиницаИзмерения);
				ПараметрыОтбора.Вставить("Коэффициент",                НоваяСтрока.Коэффициент);
				ПараметрыОтбора.Вставить("ГТД",                        НоваяСтрока.ГТД);
				ПараметрыОтбора.Вставить("КлючСтроки",                 КлючСтроки);
				РаспределенныеУслуги = ТаблицаРаспределения.НайтиСтроки(ПараметрыОтбора);
				НоваяСтрока.Использование = РаспределенныеУслуги.Количество() > 0;
			КонецЕсли;
			Если РаспределениеУслугПоАвтомобилям Тогда
				НоваяСтрока.Артикул = НоваяСтрока.Номенклатура.VIN;
			Иначе
				НоваяСтрока.Код = НоваяСтрока.Номенклатура.Код;
				НоваяСтрока.Артикул = НоваяСтрока.Номенклатура.Артикул;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Отображение кода и артикула номенклатуры
	ОтображатьАртикул = ПолучитьФункциональнуюОпцию("ИспользоватьАртикул");
	
	// Установим видимость служебных колонок в зависимости от значения функциональной опции.
	Элементы.ДеревоНоменклатурыНоменклатураАртикул.Видимость = (ОтображатьАртикул=Перечисления.РежимыВыводаКодаВДокументах.Артикул ИЛИ ОтображатьАртикул=Перечисления.РежимыВыводаКодаВДокументах.КодИАртикул ИЛИ ОтображатьАртикул=Перечисления.РежимыВыводаКодаВДокументах.АртикулКодПроизводитель) ИЛИ РаспределениеУслугПоАвтомобилям;
	Элементы.ДеревоНоменклатурыНоменклатураКод.Видимость     = (ОтображатьАртикул=Перечисления.РежимыВыводаКодаВДокументах.Код     ИЛИ ОтображатьАртикул=Перечисления.РежимыВыводаКодаВДокументах.КодИАртикул ИЛИ ОтображатьАртикул=Перечисления.РежимыВыводаКодаВДокументах.АртикулКодПроизводитель) И НЕ РаспределениеУслугПоАвтомобилям;
	
	// Видимость характеристики номенклатуры - если есть строка с характеристикой, то выводим.
	ВидимостьХарактеристики = Ложь;
	Для Каждого ТекущаяСтрока Из ТаблицаОснований Цикл
		Если ЗначениеЗаполнено(ТекущаяСтрока.ХарактеристикаНоменклатуры) Тогда
			ВидимостьХарактеристики = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Элементы.ДеревоНоменклатурыХарактеристикаНоменклатуры.Видимость = ВидимостьХарактеристики И НЕ РаспределениеУслугПоАвтомобилям;
	Элементы.ДеревоНоменклатурыЕдиницаКоэффциент.Видимость = НЕ РаспределениеУслугПоАвтомобилям;
	
	Элементы.ДеревоНоменклатурыНоменклатураАртикул.Заголовок = ?(РаспределениеУслугПоАвтомобилям, "VIN", "Артикул");
	Элементы.ДеревоНоменклатурыНоменклатура.Заголовок        = ?(РаспределениеУслугПоАвтомобилям, "Автомобиль", "Номенклатура");
	
КонецПроцедуры // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте при открытии формы, до показа окна пользователю.
//
// Параметры:
//  Отказ - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Развернем дерево номенклатуры
	Для Каждого ТекущаяСтрока Из ДеревоНоменклатуры.ПолучитьЭлементы() Цикл
		Элементы.ДеревоНоменклатуры.Развернуть(ТекущаяСтрока.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия кнопки "Установить все".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура УстановитьВсе(Команда)
	
	Для Каждого ТекущийДокумент Из ДеревоНоменклатуры.ПолучитьЭлементы() Цикл
		Для Каждого ТекущаяСтрокаДокумента Из ТекущийДокумент.ПолучитьЭлементы() Цикл
			ТекущаяСтрокаДокумента.Использование = Истина;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // УстановитьВсе()

// Обработчик события нажатия кнопки "Снять все".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого ТекущийДокумент Из ДеревоНоменклатуры.ПолучитьЭлементы() Цикл
		Для Каждого ТекущаяСтрокаДокумента Из ТекущийДокумент.ПолучитьЭлементы() Цикл
			ТекущаяСтрокаДокумента.Использование = Ложь;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Обработчик события нажатия кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	РезультатПодбора = Новый Массив;
	
	ВыбранаНоменклатура = Ложь;
	
	Для Каждого ТекущийДокумент Из ДеревоНоменклатуры.ПолучитьЭлементы() Цикл
		Для Каждого ТекущаяСтрокаДокумента Из ТекущийДокумент.ПолучитьЭлементы() Цикл
			Если ТекущаяСтрокаДокумента.Использование Тогда
				ВыбранаНоменклатура = Истина;
				СтруктураРеквизитов = Новый Структура("ДокументОснование, КлючСтроки, Номенклатура, ХарактеристикаНоменклатуры, ЕдиницаИзмерения, Коэффициент, ГТД, Сумма, СуммаБезНДС");
				ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, ТекущаяСтрокаДокумента);
				СтруктураРеквизитов.ДокументОснование = ТекущийДокумент.ДокументОснование;
				СтруктураРеквизитов.КлючСтроки = КлючСтроки;
				СтруктураРеквизитов.Сумма  = 0;
				СтруктураРеквизитов.СуммаБезНДС = 0;
				РезультатПодбора.Добавить(СтруктураРеквизитов);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если ВыбранаНоменклатура Тогда
		
		Закрыть(Новый Структура("КлючСтроки,РезультатПодбора", КлючСтроки, РезультатПодбора));
		Возврат;
		
	КонецЕсли;
	
	ПоказатьПредупреждение(,НСтр("ru = 'Не выбрана номенклатура для распределения дополнительных расходов.'"));
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Настройка условного оформления формы
//
&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомДокументаСервер.УстановитьУсловноеОформление(ЭтотОбъект);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоНоменклатурыСуммаДопРасходов");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоНоменклатуры.ДокументОснование");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",Истина);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоНоменклатурыХарактеристикаНоменклатуры");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоНоменклатуры.ДокументОснование");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоНоменклатуры.ХарактеристикаНоменклатуры");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<без характеристик>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	
КонецПроцедуры // УстановитьУсловноеОформление()

#КонецОбласти

