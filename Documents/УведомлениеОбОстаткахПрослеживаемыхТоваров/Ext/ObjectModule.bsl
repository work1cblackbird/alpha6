// Модуль документа "Уведомление об остатках прослеживаемых товаров"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения = "", СтандартнаяОбработка = Истина)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Состояние = Перечисления.СостоянияУведомленияПрослеживаемостиТоваров.Новый;
	КонецЕсли;
	
	СтранаПроисхождения = Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.СтранаПроисхождения(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
	РНПТ = "";
	Состояние = Перечисления.СостоянияУведомленияПрослеживаемостиТоваров.Новый;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим корректность видов введенной номенклатуры
	// БлокироватьВидыНоменклатуры = ПолучитьСоответствиеЗапрещенныхВидовНоменклатуры();
	//	Если БлокироватьВидыНоменклатуры <> Неопределено И ТипЗнч(БлокироватьВидыНоменклатуры)=Тип("Соответствие") И БлокироватьВидыНоменклатуры.Количество()>0 Тогда
	
	ЭтоИнвентаризацияАвтомобилей = (ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ИнвентаризацияАвтомобилей"));
	Ошибки="";
	
	Для каждого СтрокаТоваров Из Товары Цикл
		Если ЭтоИнвентаризацияАвтомобилей И ТипЗнч(СтрокаТоваров.Номенклатура) = Тип("СправочникСсылка.Номенклатура")
			ИЛИ НЕ ЭтоИнвентаризацияАвтомобилей И ТипЗнч(СтрокаТоваров.Номенклатура) = Тип("СправочникСсылка.Автомобили") Тогда
					Ошибки=?(Ошибки="","",Ошибки+Символы.ПС);
					Ошибки=Ошибки+"Строка "+СтрокаТоваров.НомерСтроки+". Товар <"+СтрокаТоваров.Номенклатура+">. Указанный тип товара не соответствует первичному документу.";
					Отказ=Истина;
					Продолжить;
		КонецЕсли;
		Если НЕ СтрокаТоваров.Номенклатура.Прослеживаемый Тогда
					Ошибки=?(Ошибки="","",Ошибки+Символы.ПС);
					Ошибки=Ошибки+"Строка "+СтрокаТоваров.НомерСтроки+". Товар <"+СтрокаТоваров.Номенклатура+">. Указанная номенклатура не является прослеживаемым товаром.";
					Отказ=Истина;
					Продолжить;
		КонецЕсли;
		Если СтрокаТоваров.Номенклатура.КодТНВЭД <> КодТНВЭД Тогда
					Ошибки=?(Ошибки="","",Ошибки+Символы.ПС);
					Ошибки=Ошибки+"Строка "+СтрокаТоваров.НомерСтроки+". Товар <"+СтрокаТоваров.Номенклатура+">. Код ТН ВЭД номенклатуры не соответствует коду ТН ВЭД документа.";
					Отказ=Истина;
					Продолжить;
		КонецЕсли;
		Если ТипЗнч(СтрокаТоваров.Номенклатура) = Тип("СправочникСсылка.Автомобили") Тогда
					Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Состояние = Перечисления.СостоянияУведомленияПрослеживаемостиТоваров.ПолученОтвет Тогда
		ВыполнитьДвиженияПоГТД(Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеДвиженийДокумента

Процедура ВыполнитьДвиженияПоГТД(Отказ)
	
	// Получим партии и ГТД текущих номенклатур
	Если ХозОперация = Справочники.ХозОперации.УведомлениеОбОстаткахПрослеживаемыхТоваров Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
		|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости
		|ПОМЕСТИТЬ ПрослеживаемыйТовар
		|ИЗ
		|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Товары КАК УведомлениеОбОстаткахПрослеживаемыхТоваровТовары
		|ГДЕ
		|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииТоваровКомпанииОстатки.СкладКомпании КАК СкладКомпании,
		|	ПартииТоваровКомпанииОстатки.Номенклатура КАК Номенклатура,
		|	ПартииТоваровКомпанииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПартииТоваровКомпанииОстатки.СтатусПартии КАК СтатусПартии,
		|	ПартииТоваровКомпанииОстатки.Партия КАК Партия,
		|	ПартииТоваровКомпанииОстатки.Организация КАК Организация,
		|	ПартииТоваровКомпанииОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ ПартииПрослеживаемыхТоваров
		|ИЗ
		|	РегистрНакопления.ПартииТоваровКомпании.Остатки(
		|			&МоментВремени,
		|			Номенклатура В
		|					(ВЫБРАТЬ
		|						ПрослеживаемыйТовар.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ПрослеживаемыйТовар КАК ПрослеживаемыйТовар)
		|				И (&БезФильтраПоОрганизации
		|					ИЛИ Организация = &Организация)
		|				И СкладКомпании = &СкладКомпании) КАК ПартииТоваровКомпанииОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГТДПартийТоваровКомпанииОстатки.СкладКомпании КАК СкладКомпании,
		|	ГТДПартийТоваровКомпанииОстатки.Номенклатура КАК Номенклатура,
		|	ГТДПартийТоваровКомпанииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ГТДПартийТоваровКомпанииОстатки.Партия КАК Партия,
		|	ГТДПартийТоваровКомпанииОстатки.Организация КАК Организация,
		|	ГТДПартийТоваровКомпанииОстатки.ГТД КАК ГТД,
		|	ГТДПартийТоваровКомпанииОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ ГТДПрослеживаемогоТовара
		|ИЗ
		|	РегистрНакопления.ГТДПартийТоваровКомпании.Остатки(
		|			&МоментВремени,
		|			Номенклатура В
		|					(ВЫБРАТЬ
		|						ПрослеживаемыйТовар.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ПрослеживаемыйТовар КАК ПрослеживаемыйТовар)
		|				И (&БезФильтраПоОрганизации
		|					ИЛИ Организация = &Организация)
		|				И СкладКомпании = &СкладКомпании) КАК ГТДПартийТоваровКомпанииОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииПрослеживаемыхТоваров.СкладКомпании КАК СкладКомпании,
		|	ПартииПрослеживаемыхТоваров.Номенклатура КАК Номенклатура,
		|	ПартииПрослеживаемыхТоваров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПартииПрослеживаемыхТоваров.Партия КАК Партия,
		|	ПартииПрослеживаемыхТоваров.Организация КАК Организация,
		|	ПартииПрослеживаемыхТоваров.КоличествоОстаток КАК КоличествоПартия,
		|	ЕСТЬNULL(ГТДПрослеживаемогоТовара.ГТД, ЗНАЧЕНИЕ(Справочник.ГТД.ПустаяСсылка)) КАК ГТД,
		|	ЕСТЬNULL(ГТДПрослеживаемогоТовара.КоличествоОстаток, 0) КАК КоличествоГТД,
		|	ВЫБОР
		|		КОГДА ГТДПрослеживаемогоТовара.ГТД ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ГТДПрослеживаемогоТовара.ГТД.РНПТ
		|	КОНЕЦ КАК ЭтоРНПТ
		|ПОМЕСТИТЬ ТаблицаГТДПартий
		|ИЗ
		|	ПартииПрослеживаемыхТоваров КАК ПартииПрослеживаемыхТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГТДПрослеживаемогоТовара КАК ГТДПрослеживаемогоТовара
		|		ПО ПартииПрослеживаемыхТоваров.Номенклатура = ГТДПрослеживаемогоТовара.Номенклатура
		|			И ПартииПрослеживаемыхТоваров.СкладКомпании = ГТДПрослеживаемогоТовара.СкладКомпании
		|			И ПартииПрослеживаемыхТоваров.ХарактеристикаНоменклатуры = ГТДПрослеживаемогоТовара.ХарактеристикаНоменклатуры
		|			И ПартииПрослеживаемыхТоваров.Партия = ГТДПрослеживаемогоТовара.Партия
		|			И ПартииПрослеживаемыхТоваров.Организация = ГТДПрослеживаемогоТовара.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПартииПрослеживаемыхТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ГТДПрослеживаемогоТовара
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрослеживаемыйТовар.Номенклатура КАК Номенклатура,
		|	ПрослеживаемыйТовар.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
		|	ТаблицаГТДПартий.СкладКомпании КАК СкладКомпании,
		|	ТаблицаГТДПартий.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ТаблицаГТДПартий.Партия КАК Партия,
		|	ТаблицаГТДПартий.Организация КАК Организация,
		|	ЕСТЬNULL(ТаблицаГТДПартий.КоличествоПартия, 0) КАК КоличествоПоПартиям,
		|	ТаблицаГТДПартий.ГТД КАК ГТД,
		|	ЕСТЬNULL(ТаблицаГТДПартий.КоличествоГТД, 0) КАК КоличествоПоГТД,
		|	ТаблицаГТДПартий.ЭтоРНПТ КАК ЭтоРНПТ
		|ИЗ
		|	ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаГТДПартий КАК ТаблицаГТДПартий
		|		ПО ПрослеживаемыйТовар.Номенклатура = ТаблицаГТДПартий.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГТД УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(КоличествоПрослеживаемости),
		|	СУММА(КоличествоПоПартиям)
		|ПО
		|	Номенклатура";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("СкладКомпании", ПервичныйДокумент.СкладКомпании);
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("БезФильтраПоОрганизации", ЗапасыТоваров.ФильтрЗапросаПоОрганизации(МоментВремени().Дата));
		Запрос.УстановитьПараметр("Организация", ПервичныйДокумент.Организация);
		
		ВыборкаНоменклатуры = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатуры.Следующий() Цикл
			
			КоличествоНоменклатуры = ВыборкаНоменклатуры.КоличествоПрослеживаемости;
			
			Выборка = ВыборкаНоменклатуры.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				КоличествоСписать = 0;
				СписатьГТД = Ложь;
				Если Выборка.КоличествоПоГТД <> 0 Тогда
					
					// У нас он уже корректно указан
					Если Выборка.ЭтоРНПТ Тогда
						Продолжить;
					КонецЕсли;
					
					СписатьГТД = Истина;
					Если Выборка.КоличествоПоГТД < КоличествоНоменклатуры Тогда
						КоличествоСписать = Выборка.КоличествоПоГТД;
						КоличествоНоменклатуры = КоличествоНоменклатуры - КоличествоСписать;
					Иначе
						КоличествоСписать = КоличествоНоменклатуры;
						КоличествоНоменклатуры = 0;
					КонецЕсли;
					
				ИначеЕсли Выборка.КоличествоПоПартиям < КоличествоНоменклатуры Тогда
					КоличествоСписать = Выборка.КоличествоПоПартиям;
					КоличествоНоменклатуры = КоличествоНоменклатуры - КоличествоСписать;
				Иначе
					КоличествоСписать = КоличествоНоменклатуры;
					КоличествоНоменклатуры = 0;
				КонецЕсли;
				
				Если СписатьГТД Тогда
					
					НоваяЗапись = Движения.ГТДПартийТоваровКомпании.Добавить();
					НоваяЗапись.Регистратор = Ссылка;
					НоваяЗапись.ХозОперация = ХозОперация;
					НоваяЗапись.Период = Дата;
					НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Расход;
					ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
					НоваяЗапись.Организация = ЗапасыТоваров.ОрганизацияДляДвиженийПоПартиям(
						Организация,
						НоваяЗапись.СкладКомпании,
						НоваяЗапись.Период,
						Выборка.Организация
					);
					НоваяЗапись.Количество = КоличествоСписать;
					
				КонецЕсли;
				
				НоваяЗапись = Движения.ГТДПартийТоваровКомпании.Добавить();
				НоваяЗапись.Регистратор = Ссылка;
				НоваяЗапись.ХозОперация = ХозОперация;
				НоваяЗапись.Период = Дата;
				НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Приход;
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
				НоваяЗапись.Организация = ЗапасыТоваров.ОрганизацияДляДвиженийПоПартиям(
					Организация,
					НоваяЗапись.СкладКомпании,
					НоваяЗапись.Период
				);
				НоваяЗапись.Количество = КоличествоСписать;
				НоваяЗапись.ГТД = РНПТ;
				
				Если КоличествоНоменклатуры = 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если КоличествоНоменклатуры > 0 Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = 'РНПТ прослеживаемого товара %1 была не полностью распределена.'"),
						ВыборкаНоменклатуры.Номенклатура
					),
					ЭтотОбъект,
					, ,
					Отказ
				);
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Номенклатура КАК Справочник.Автомобили) КАК Номенклатура,
		|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости
		|ПОМЕСТИТЬ ТаблицаАвтомобилей
		|ИЗ
		|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Товары КАК УведомлениеОбОстаткахПрослеживаемыхТоваровТовары
		|ГДЕ
		|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаАвтомобилей.Номенклатура КАК Автомобиль,
		|	ТаблицаАвтомобилей.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
		|	ОстаткиАвтомобилейОстатки.СкладКомпании КАК СкладКомпании,
		|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.КоличествоОстаток, 0) КАК Количество
		|ИЗ
		|	ТаблицаАвтомобилей КАК ТаблицаАвтомобилей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиАвтомобилей.Остатки(
		|				&МоментВремени,
		|				Автомобиль В
		|						(ВЫБРАТЬ
		|							ТаблицаАвтомобилей.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ТаблицаАвтомобилей КАК ТаблицаАвтомобилей)
		|					И СкладКомпании = &СкладКомпании) КАК ОстаткиАвтомобилейОстатки
		|		ПО ТаблицаАвтомобилей.Номенклатура = ОстаткиАвтомобилейОстатки.Автомобиль
		|ГДЕ
		|	ТаблицаАвтомобилей.Номенклатура.Прослеживаемый";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("СкладКомпании", ПервичныйДокумент.СкладКомпании);
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.Количество = 0 Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = 'Автомобиль %1 не найден на остатках! РНПТ не присвоен.'"),
						Выборка.Автомобиль
					),
					ЭтотОбъект,
					, ,
					Отказ
				);
				Продолжить;
			КонецЕсли;
			
			АвтомобильОбъект = Выборка.Автомобиль.ПолучитьОбъект();
			АвтомобильОбъект.ОбменДанными.Загрузка = Истина;
			АвтомобильОбъект.ГТД = РНПТ;
			Попытка
				АвтомобильОбъект.Записать();
			Исключение
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = 'Не удалось записать РНПТ в карточку автомобиля %1'"),
						Выборка.Автомобиль
					),
					ЭтотОбъект,
					, ,
					Отказ	
				);
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Ошибка при записи элемента справочника ""Автомобили""'",
						ОбщегоНазначения.КодОсновногоЯзыка()
					),
					УровеньЖурналаРегистрации.Ошибка,
					, , 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
				);
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
