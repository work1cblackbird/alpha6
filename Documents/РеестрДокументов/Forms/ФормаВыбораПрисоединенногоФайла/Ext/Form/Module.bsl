
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ВидДокумента") И ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда
		НастроитьСписок(Параметры.ВидДокумента);
		Если Параметры.Свойство("ОтборПоСписку") Тогда
			УстановитьОтборыСписка(Параметры.ОтборПоСписку, Параметры.ВидДокумента);
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьВладельцаНовогоФайла(Параметры.ВидДокумента, Параметры.ОтборПоСписку);
	Элементы.СписокДобавитьФайл.Видимость = ЗначениеЗаполнено(ВладелецНовогоФайла);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ОповеститьОВыборе(Элементы.Список.ТекущиеДанные.Документ);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьСписок(ВидДокумента)
	ДоступныеТипы = ДоступныеТипыСправочников(ВидДокумента);
	ПредставленияИсточников = ПредставленияИсточников();
	ПредставленияОтборов = ПредставленияОтборов();
	
	Список.ТекстЗапроса = СформироватьТекстЗапросаСписка(ДоступныеТипы, ПредставленияИсточников, ПредставленияОтборов);
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыСписка(Отборы, ВидДокумента)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Вид",
		ВидДокумента,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
	Владельцы = Новый Массив;
	Для Каждого Отбор Из Отборы Цикл
		Если ЗначениеЗаполнено(Отбор.Значение) Тогда
			
			Если ПолеОтбораДоступно(Список, Отбор.Ключ) Тогда
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
					Список,
					Отбор.Ключ,
					Отбор.Значение,
					ВидСравненияКомпоновкиДанных.Равно,
					,
					Истина,
					РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
				
				Владельцы.Добавить(Отбор.Значение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Владельцы.Количество() > 0 Тогда
		Если Владельцы.Количество() = 1 Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список,
				"Владелец",
				Владельцы[0],
				ВидСравненияКомпоновкиДанных.Равно,
				,
				Истина,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		Иначе
			Значение = Новый СписокЗначений;
			Значение.ЗагрузитьЗначения(Владельцы);
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список,
				"Владелец",
				Значение,
				ВидСравненияКомпоновкиДанных.ВСписке,
				,
				Истина,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолеОтбораДоступно(Список, Поле)
	
	Возврат (Список.Отбор.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных(Поле)) <> Неопределено);
	
КонецФункции

&НаСервереБезКонтекста
Функция ДоступныеТипыСправочников(ВидДокумента)
	Типы = Новый Массив;
	
	Если ВидДокумента = Перечисления.ВидыДокументов.Паспорт
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ВодительскоеУдостоверение
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.Удостоверение
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.Доверенность
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ВоенныйБилет
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ВидНаЖительствоИностранногоГражданина Тогда
		
		Типы.Добавить("Контрагенты");
		
	ИначеЕсли ВидДокумента = Перечисления.ВидыДокументов.СвидетельствоОРегистрацииТС
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.АттестатТО
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ПТС 
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ЭлектронныйПТС Тогда
		
		Типы.Добавить("Автомобили");
		
	ИначеЕсли ВидДокумента = Перечисления.ВидыДокументов.Лицензия
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.Сертификат
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.Справка Тогда
		
		Типы.Добавить("Контрагенты");
		Типы.Добавить("Организации");
		Типы.Добавить("ПодразделенияКомпании");
		
	Иначе
		
		Типы.Добавить("Контрагенты");
		Типы.Добавить("Организации");
		Типы.Добавить("ПодразделенияКомпании");
		Типы.Добавить("Автомобили");
		Типы.Добавить("ДоговорыВзаиморасчетов");
		Типы.Добавить("ЗаказНаАвтомобиль");
		
	КонецЕсли;
	
	Возврат Типы;
КонецФункции

&НаСервере
Процедура ЗаполнитьВладельцаНовогоФайла(ВидДокумента, Отбор)
	
	Если ВидДокумента = Перечисления.ВидыДокументов.Паспорт
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ВодительскоеУдостоверение
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.Удостоверение
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.Доверенность
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ВоенныйБилет
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ВидНаЖительствоИностранногоГражданина
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.Лицензия
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.Сертификат
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.Справка Тогда
		
		ПолеОтбора = "Контрагент";
		
	ИначеЕсли ВидДокумента = Перечисления.ВидыДокументов.СвидетельствоОРегистрацииТС
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.АттестатТО
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ПТС
		ИЛИ ВидДокумента = Перечисления.ВидыДокументов.ЭлектронныйПТС Тогда
		
		ПолеОтбора = "Автомобиль";
		
	Иначе
		
		ПолеОтбора = "ДокументОснование";
		
	КонецЕсли;

	ВладелецНовогоФайла = ПолучитьЗначениеПараметраСтруктуры(Отбор, ПолеОтбора, Неопределено);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредставленияИсточников()
	Представления = Новый Структура;
	
	Представления.Вставить("Контрагенты", "Контрагенты и контакты");
	Представления.Вставить("Организации", "Организации");
	Представления.Вставить("ПодразделенияКомпании", "Подразделения");
	Представления.Вставить("Автомобили", "Автомобили");
	Представления.Вставить("ДоговорыВзаиморасчетов", "Договоры");
	Представления.Вставить("ЗаказНаАвтомобиль", "Заказы на автомобиль");
	
	Возврат Представления;
КонецФункции

&НаСервереБезКонтекста
Функция ПредставленияОтборов()
	Представления = Новый Соответствие;
	
	Представления.Вставить("Контрагенты", "Контрагент");
	Представления.Вставить("Организации", "Организация");
	Представления.Вставить("ПодразделенияКомпании", "ПодразделениеКомпании");
	Представления.Вставить("Автомобили", "Автомобиль");
	Представления.Вставить("ДоговорыВзаиморасчетов", "ДоговорВзаиморасчетов");
	Представления.Вставить("ЗаказНаАвтомобиль", "ДокументОснование");
	
	Возврат Представления;
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьТекстЗапросаСписка(СоставТаблиц, Представления, ПредставленияОтборов)
	СоставЗапроса = Новый Массив;
	СоставЗапроса.Добавить(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	""Подтверждающие документы"" КАК Источник,
		|	ПодтверждающиеДокументыПрисоединенныеФайлы.Ссылка КАК Документ,
		|	ПодтверждающиеДокументыПрисоединенныеФайлы.Наименование КАК Наименование,
		|	ПодтверждающиеДокументыПрисоединенныеФайлы.Описание КАК Описание,
		|	ПодтверждающиеДокументыПрисоединенныеФайлы.Автор КАК Автор,
		|	ПодтверждающиеДокументыПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла,
		|	ПодтверждающиеДокументыПрисоединенныеФайлы.ИндексКартинки КАК ИндексКартинки
		|ИЗ
		|	Справочник.ПодтверждающиеДокументыПрисоединенныеФайлы КАК ПодтверждающиеДокументыПрисоединенныеФайлы
		|{ГДЕ
		|	ПодтверждающиеДокументыПрисоединенныеФайлы.ВладелецФайла.Владелец.* КАК Владелец,
		|	ПодтверждающиеДокументыПрисоединенныеФайлы.ВладелецФайла.ВидПодтверждающегоДокумента.* КАК Вид}");
	
	Для Каждого Элемент Из СоставТаблиц Цикл
		СоставЗапроса.Добавить(ЗаполнитьПоШаблону(Элемент, Представления[Элемент], ПредставленияОтборов.Получить(Элемент)));
	КонецЦикла;
	
	Объединение =
	"
	|ОБЪЕДИНИТЬ ВСЕ
	|";
	
	Возврат СтрСоединить(СоставЗапроса, Объединение);
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьПоШаблону(ИмяТаблицы, ПредставлениеИсточника, Знач ПредставлениеОтбора)
	Если ПредставлениеОтбора = Неопределено Тогда
		ПредставлениеОтбора = "ВладелецФайла";
	КонецЕсли;
	
	Шаблон =
	"ВЫБРАТЬ
	|	""%1"",
	|	%2ПрисоединенныеФайлы.Ссылка,
	|	%2ПрисоединенныеФайлы.Наименование,
	|	%2ПрисоединенныеФайлы.Описание,
	|	%2ПрисоединенныеФайлы.Автор,
	|	%2ПрисоединенныеФайлы.ВладелецФайла,
	|	%2ПрисоединенныеФайлы.ИндексКартинки
	|ИЗ
	|	Справочник.%2ПрисоединенныеФайлы КАК %2ПрисоединенныеФайлы
	|{ГДЕ
	|	%2ПрисоединенныеФайлы.ВладелецФайла КАК %3}";
	
	Возврат СтрШаблон(Шаблон, ПредставлениеИсточника, ИмяТаблицы, ПредставлениеОтбора);
КонецФункции

//++SINIKO
&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	ИдентификаторФайла = Новый УникальныйИдентификатор;
	РаботаСФайламиКлиент.ДобавитьФайлы(ВладелецНовогоФайла, ИдентификаторФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" И ПолучитьЗначениеПараметраСтруктуры(Параметр, "ЭтоНовый", Ложь) Тогда
		Если Источник.Количество() > 0 Тогда
			ОповеститьОВыборе(Источник[0]);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
//--SINIKO

#КонецОбласти