///////////////////////////////////////////////////////////////////////////////
// Модуль формы "Автозаполнение"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Документы.БюджетДДС.ПроверитьЗаполнениеСтатейДДС(Параметры.СтатьиДДС) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Для автозаполнения графика требуется указать статью ДДС.'"));
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.СценарийПланирования)
		ИЛИ НЕ ЗначениеЗаполнено(Параметры.СценарийПланирования.Периодичность) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не выбран сценарий планирования, либо у выбранного сценария не выбрана периодичность планирования'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Заполним параметры
	ГрафикРаспределенияДС = Параметры.ГрафикРаспределенияДС.Количество();
	ЗначениеПроцента     = Параметры.ЗначениеПроцента;
	КоличествоПериодов   = Параметры.КоличествоПериодов;
	НачальноеСмещение    = Параметры.НачальноеСмещение;
	СпособАвтозаполнения = Параметры.СпособАвтозаполнения;
	КоличествоПериодов   = ?(КоличествоПериодов <= 0, 1, КоличествоПериодов);
	
КонецПроцедуры // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте при открытии формы, до показа окна пользователю.
//
// Параметры:
//  Отказ - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// В зависимости от способа заполнения отобразим соответствующие элементы и установим параметры.
	Если СпособАвтозаполнения Тогда
		УправлениеОтображением("Процент");
	Иначе
		УправлениеОтображением("КоличествоПериодов");
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события возникающего на клиенте при изменении данных реквизита "Заполнение от количества периодов".
//
// Параметры:
//  Элемент - ЭлементФормы - Элемент, в котором возникло данное событие.
//
&НаКлиенте
Процедура ЗаполнениеОтКоличестваПериодовПриИзменении(Элемент)
	
	// Установим параметры
	УправлениеОтображением("КоличествоПериодов")
	
КонецПроцедуры // ЗаполнениеОтКоличестваПериодовПриИзменении()

// Обработчик события возникающего на клиенте при изменении данных реквизита "Заполнение от процента".
//
// Параметры:
//  Элемент - ЭлементФормы - Элемент, в котором возникло данное событие.
//
&НаКлиенте
Процедура ЗаполнениеОтПроцентаПриИзменении(Элемент)
	
	// Установим параметры
	УправлениеОтображением("Процент")
	
КонецПроцедуры // ЗаполнениеОтПроцентаПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчика нажатия кнопки Применить
&НаКлиенте
Процедура Применить(Команда)
	
	// Установим параметры
	ПараметрыЗакрытия = Новый Структура();
	ПараметрыЗакрытия.Вставить("ЗначениеПроцента", ЗначениеПроцента);
	ПараметрыЗакрытия.Вставить("КоличествоПериодов", КоличествоПериодов);
	ПараметрыЗакрытия.Вставить("НачальноеСмещение", НачальноеСмещение);
	
	Если ЗаполнениеОтКоличестваПериодов Тогда
		ПараметрыЗакрытия.Вставить("СпособАвтозаполнения", Ложь);
	ИначеЕсли ЗаполнениеОтПроцента Тогда
		ПараметрыЗакрытия.Вставить("СпособАвтозаполнения", Истина);
	КонецЕсли;
	
	// Предложим пользователю очистить график распределения денежных средств
	Если ГрафикРаспределенияДС <> 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияОчиститьГрафикиПогашений", ЭтотОбъект, ПараметрыЗакрытия);
		ПоказатьВопрос(ОписаниеОповещения,НСтр("ru = 'Текущие значения графиков погашений будут очищены. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	Если ЗаполнениеОтКоличестваПериодов И КоличествоПериодов = 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Количество периодов должно быть больше нуля.'"));
		Возврат;
	ИначеЕсли ЗаполнениеОтПроцента И ЗначениеПроцента=0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Значение процента должно отличаться от нуля.'"));
		Возврат;
	КонецЕсли;
	
	// Закроем форму с параметрами закрытия
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик параметром формы
// Параметры
//  ТекЭлемент - Строка - Элемент формы в зависимости от которого будут устанавливаться параметры.
//
&НаКлиенте
Процедура УправлениеОтображением(ТекЭлемент)
	
	// В зависимости от выбранного элемента произведем установку параметров элементов формы.
	Если ТекЭлемент = "КоличествоПериодов" Тогда
		
		ЗаполнениеОтКоличестваПериодов        = Истина;
		ЗаполнениеОтПроцента                  = Ложь;
		Элементы.СтраницыПараметрыЗаполнения.ТекущаяСтраница = Элементы.СтраницаПериод;
		
	ИначеЕсли ТекЭлемент = "Процент" Тогда
		
		ЗаполнениеОтПроцента                   = Истина;
		ЗаполнениеОтКоличестваПериодов         = Ложь;
		Элементы.СтраницыПараметрыЗаполнения.ТекущаяСтраница = Элементы.СтраницаПроцент;
		
	КонецЕсли;
	
КонецПроцедуры // УправлениеОтображением()

// Обработчик события возникающего при выполнении оповещения данной формы о прекращении работы подчиненной.
//
// Параметры:
//  РезультатОповещения     - Произвольный - Результат выполнения операции в подчиненной форме.
//  ДополнительныеПараметры - Произвольный - Значение, которое было указано при создании объекта описания оповещения.
//
&НаКлиенте
Процедура ОбработкаРезультатаОповещенияОчиститьГрафикиПогашений(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	// Если пользователь хочет очистить график распределения денежных средств установим признак.
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		
		ДополнительныеПараметры.Вставить("ОчиститьТабличнуюЧастьГрафикРаспределенияДС", Истина);
		
		// Закроем форму с параметрами
		Закрыть(ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаРезультатаОповещенияОчиститьГрафикиПогашений()

#КонецОбласти

