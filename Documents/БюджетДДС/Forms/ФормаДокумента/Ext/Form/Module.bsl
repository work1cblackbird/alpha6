///////////////////////////////////////////////////////////////////////////////
// Модуль основной формы документа "Бюджет ДДС"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец УтверждениеДокументов
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	
	РазрешитьРедактированиеЦенИСумм = ПраваИНастройкиПользователя.Значение("РедактированиеЦенИСуммВНоменклатурныхТаблицах", Объект);
	РаботаСФормой.РазрешитьРедактированиеЦенИСумм(
		РаботаСФормой.ТиповыеПоляСуммовыхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм
	);
	РаботаСФормой.ОткрытьФормуТолькоДляПросмотра(ЭтотОбъект, Объект);
		
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
		
	КонецЕсли;
	
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец УтверждениеДокументов
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);

КонецПроцедуры 

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия = Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец УтверждениеДокументов
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьПериодыРаспределения();
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
	Документы.БюджетДДС.УстановитьПериодГрафиков(Объект);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = Отказ Или РаботаСФормойКлиент.НачатьПроверкуПодразделенияДокументаИПользователя(
		Объект.ПодразделениеКомпании,
		Новый ОписаниеОповещения(
			"ПроверкаПодразделенияДокументаИПользователяЗавершение",
			ЭтотОбъект,
			Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)
		)
	);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьПериодыРаспределения();
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормойКлиент.ОповеститьОЗаписиДокумента(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);
	
КонецПроцедуры 

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.БюджетДДС.ДатаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	ПараметрыДействия = Новый Структура;
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.БюджетДДС.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРаздельныеГрафикиПогашенияПриИзменении(Элемент)
	
	Если НЕ Объект.ГрафикРаспределенияДС.Количество() = 0 Тогда
		
		// Формируем описание обработчика перехвата закрытия формы
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияИспользоватьРаздельныеГрафики", ЭтотОбъект);
		
		// Формируем текст вопроса
		ТекстВопроса = НСтр("ru = 'Внимание. Таблица графика(ов) погашения будет очищена. Продолжить?'");
		
		// Получаем подтверждение операции от пользователя
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		УправлениеДиалогомНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры // ИспользоватьРаздельныеГрафикиПогашенияПриИзменении()

&НаКлиенте
Процедура СценарийПланированияПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СценарийПланированияПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СценарийПланированияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Вызываем обработчик изменения ИспользоватьРаздельныеГрафикиПогашенияПриИзменении объекта.
	Документы.БюджетДДС.СценарийПланированияПриИзменении(Объект, ПараметрыДействия);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтатьиДдс

&НаКлиенте
Процедура СтатьиДДСПриАктивизацииСтроки(Элемент)
	
	Если Объект.ИспользоватьРаздельныеГрафикиПогашения И Элементы.СтатьиДДС.ТекущаяСтрока <> Неопределено Тогда
		
		ТекущиеДанные = Объект.СтатьиДДС.НайтиПоИдентификатору(Элементы.СтатьиДДС.ТекущаяСтрока);
		
		Элементы.ГрафикРаспределенияДС.ОтборСтрок = Новый ФиксированнаяСтруктура("СтатьяДДС",ТекущиеДанные.СтатьяДДС);
		
		// Установим итоговые значения в подвал для графика распределения денежных средств
		УстановитьИтогиДляГрафикРаспределенияДС();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиДДСПередУдалением(Элемент, Отказ)
	
	Если Объект.ИспользоватьРаздельныеГрафикиПогашения Тогда
		ТекущиеДанные = Объект.СтатьиДДС.НайтиПоИдентификатору(Элементы.СтатьиДДС.ТекущаяСтрока);
		СвязанныеСтроки = Объект.ГрафикРаспределенияДС.НайтиСтроки(Новый Структура("СтатьяДДС", ТекущиеДанные.СтатьяДДС));
		Для Каждого Строка Из СвязанныеСтроки Цикл
			Объект.ГрафикРаспределенияДС.Удалить(Строка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура СтатьиДДСПриИзмененииНаСервере()
	
	НастроитьПараметрыВыбораЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиДДСПриИзменении(Элемент)
	
	СтатьиДДСПриИзмененииНаСервере();
	
КонецПроцедуры

#Область ОбработчикиСобытийПолейТаблицыФормыСтатьиДдс

&НаКлиенте
Процедура СтатьиДДССтатьяДДСПриИзменении(Элемент)
	
	СтатьиДДССтатьяДДСПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура СтатьиДДССтатьяДДСПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Получим данные текущей строки табличной части
	ТекущиеДанные = Объект.СтатьиДДС.НайтиПоИдентификатору(Элементы.СтатьиДДС.ТекущаяСтрока);
	
	// Вызываем обработчик изменения данных объекта
	Документы.БюджетДДС.СтатьиДДССтатьяДДСПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
	Если Документы.БюджетДДС.ПроверитьЗаполнениеСтатейДДС(Объект.СтатьиДДС) Тогда
		Элементы.СтатьиДДСПодменюЗаполненияВажное__ЗаполнениеТабличнойЧастиСтатьиДДС.Доступность = Истина;
	Иначе
		Элементы.СтатьиДДСПодменюЗаполненияВажное__ЗаполнениеТабличнойЧастиСтатьиДДС.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура СтатьиДДСБазоваяСуммаУпрПриИзменении(Элемент)
	
	СтатьиДДСБазоваяСуммаУпрПриИзмененииНаСервере();

КонецПроцедуры 

&НаСервере
Процедура СтатьиДДСБазоваяСуммаУпрПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.СтатьиДДС.НайтиПоИдентификатору(Элементы.СтатьиДДС.ТекущаяСтрока);
	Документы.БюджетДДС.СтатьиДДСБазоваяСуммаУпрПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура СтатьиДДСБазовыйБюджетПриИзменении(Элемент)
	
	СтатьиДДСБазовыйБюджетПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура СтатьиДДСБазовыйБюджетПриИзмененииНаСервере(ПараметрыДействия = Неопределено)

	ТекущиеДанные = Объект.СтатьиДДС.НайтиПоИдентификатору(Элементы.СтатьиДДС.ТекущаяСтрока);
	Документы.БюджетДДС.СтатьиДДСБазовыйБюджетПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиДДСБазовыйБюджетНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("ЖурналДокументов.Бюджетирование.ФормаСписка",
		ПолучитьПараметрыДляБазовогоБюджетаНаСервере(Объект, Элементы.СтатьиДДС.ТекущаяСтрока),
		Элемент,
		ЭтотОбъект
		,,,,
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс
	);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыГрафикРаспределенияДс

&НаСервереБезКонтекста
Функция ГрафикРаспределенияДСПередНачаломДобавленияНаСервере(ОбъектСценарийПланирования)
	
	Возврат ЗначениеЗаполнено(ОбъектСценарийПланирования.Периодичность);
	
КонецФункции 

&НаКлиенте
Процедура ГрафикРаспределенияДСПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	УправлениеДиалогомДокументаКлиент.ТоварыПередНачаломДобавления(ЭтотОбъект, Элемент, Отказ, Копирование, Родитель, Группа, Параметр);
	
	Если НЕ ЗначениеЗаполнено(Объект.СценарийПланирования) ИЛИ НЕ ГрафикРаспределенияДСПередНачаломДобавленияНаСервере(Объект.СценарийПланирования) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбран сценарий планирования, либо у выбранного сценария не выбрана периодичность планирования'"), Объект.Ссылка);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Объект.ИспользоватьРаздельныеГрафикиПогашения Тогда
		Если Элементы.СтатьиДДС.ТекущаяСтрока = Неопределено Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выберите статью ДДС'"), Объект.Ссылка);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ГрафикРаспределенияДСПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Объект.ГрафикРаспределенияДС.Сортировать("Период");
	УстановитьИтогиДляГрафикРаспределенияДС();
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикРаспределенияДСПослеУдаления(Элемент)
	
	УстановитьИтогиДляГрафикРаспределенияДС();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГрафикРаспределенияДСПриНачалеРедактированияНаСервере(Знач Объект, Период, ПараметрыДействия = Неопределено)
	
	ПараметрыПланирования = Новый Структура;
	ПараметрыПланирования.Вставить("Периодичность", Объект.СценарийПланирования.Периодичность);
	ПараметрыПланирования.Вставить("ДатаИзПериода", Объект.ДатаПланирования);
	ПараметрыПланирования.Вставить("Действие",      Период);
	Возврат ПланированиеСервер.ПолучитьДатыПланируемогоПериода(ПараметрыПланирования);
	
КонецФункции

&НаКлиенте
Процедура ГрафикРаспределенияДСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		СтрокаГрафика = Объект.ГрафикРаспределенияДС.НайтиПоИдентификатору(Элементы.ГрафикРаспределенияДС.ТекущаяСтрока);
		
		Если Объект.ИспользоватьРаздельныеГрафикиПогашения Тогда
			СтрокаСтатьиДДС = Объект.СтатьиДДС.НайтиПоИдентификатору(Элементы.СтатьиДДС.ТекущаяСтрока);
			ДанныеДляПоиска = Объект.ГрафикРаспределенияДС.НайтиСтроки(Новый Структура("СтатьяДДС", СтрокаСтатьиДДС.СтатьяДДС));
			
			СтрокаГрафика.СтатьяДДС = СтрокаСтатьиДДС.СтатьяДДС;
		Иначе
			ДанныеДляПоиска = Объект.ГрафикРаспределенияДС;
		КонецЕсли;
		
		МаксСмещение = -1;
		
		Если ДанныеДляПоиска.Количество() > 0 Тогда
			Для Каждого Строка Из ДанныеДляПоиска Цикл
				Если Строка = СтрокаГрафика Тогда
					Продолжить;
				КонецЕсли;
				
				МаксСмещение = Макс(МаксСмещение, Строка.Период);
			КонецЦикла;
		КонецЕсли;
		
		СтрокаГрафика.Период = МаксСмещение + 1;
		СтрокаГрафика.ПериодРаспределения = ГрафикРаспределенияДСПриНачалеРедактированияНаСервере(Объект, СтрокаГрафика.Период);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ГрафикРаспределенияДСПериодПриИзмененииНаСервере()
	
	// Получим данные текущей строки табличной части
	ТекущиеДанные = Объект.ГрафикРаспределенияДС.НайтиПоИдентификатору(Элементы.ГрафикРаспределенияДС.ТекущаяСтрока);
	
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.ПериодРаспределения = ГрафикРаспределенияДСПриНачалеРедактированияНаСервере(Объект, ТекущиеДанные.Период);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикРаспределенияДСПериодПриИзменении(Элемент)
	
	ГрафикРаспределенияДСПериодПриИзмененииНаСервере();
	
КонецПроцедуры

#Область ОбработчикиСобытийПолейТаблицыФормыГрафикРаспределенияДс

&НаСервере
Процедура ГрафикРаспределенияДСПроцентПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.ГрафикРаспределенияДС.НайтиПоИдентификатору(Элементы.ГрафикРаспределенияДС.ТекущаяСтрока);
	Документы.БюджетДДС.ГрафикРаспределенияДСПроцентПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ГрафикРаспределенияДСПроцентПриИзменении(Элемент)
	
	ГрафикРаспределенияДСПроцентПриИзмененииНаСервере();

КонецПроцедуры 

&НаСервере
Процедура ГрафикРаспределенияДССуммаПогашенияУпрПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Получим данные текущей строки табличной части
	ТекущиеДанные = Объект.ГрафикРаспределенияДС.НайтиПоИдентификатору(Элементы.ГрафикРаспределенияДС.ТекущаяСтрока);
	
	// Вызываем обработчик изменения данных объекта
	Документы.БюджетДДС.ГрафикРаспределенияДССуммаПогашенияУпрПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры // ГрафикРаспределенияДССуммаПогашенияУпрПриИзмененииНаСервере()

&НаКлиенте
Процедура ГрафикРаспределенияДССуммаПогашенияУпрПриИзменении(Элемент)
	
	
	ГрафикРаспределенияДССуммаПогашенияУпрПриИзмененииНаСервере();

КонецПроцедуры 
#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПериодВпередНазадНаСервере(Действие)
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("ДатаИзПериода" , Объект.ДатаПланирования);
	ПараметрыДействия.Вставить("Периодичность" , Объект.СценарийПланирования.Периодичность);
	ПараметрыДействия.Вставить("Действие"      , Действие);
	
	ПланированиеСервер.ПолучитьДатыПланируемогоПериода(ПараметрыДействия);
	
	Объект.ДатаПланирования = ПараметрыДействия.ДатаНачала;
	
	УправлениеДиалогомНаСервере();

КонецПроцедуры // ПериодВпередНазадНаСервере()

&НаКлиенте
Процедура ПериодВперед(Команда)
	
	ПериодВпередНазадНаСервере(+1);
	
КонецПроцедуры // ПериодВперед()

&НаКлиенте
Процедура ПериодНазад(Команда)
	
	ПериодВпередНазадНаСервере(-1);
	
КонецПроцедуры // ПериодНазад()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


// Формирует структуру параметров открытия формы журнала бюджетирование
//
&НаСервереБезКонтекста
Функция ПолучитьПараметрыДляБазовогоБюджетаНаСервере(Знач Объект, ТекущаяСтрока)
	
	// заполним отбор
	ТекущиеДанные = Объект.СтатьиДДС.НайтиПоИдентификатору(ТекущаяСтрока);
	Отбор = Новый Структура();
	
	// хоз. операции
	СписокХО = Новый СписокЗначений;
	Если ТекущиеДанные.СтатьяДДС.ВидДвижения = Перечисления.ВидыДвижений.Приход Тогда
		СписокХО.Добавить(Справочники.ХозОперации.БюджетПродажПоКатегориям);
		СписокХО.Добавить(Справочники.ХозОперации.БюджетПродажПоНоменклатуре);
	ИначеЕсли ТекущиеДанные.СтатьяДДС.ВидДвижения = Перечисления.ВидыДвижений.Расход Тогда
		СписокХО.Добавить(Справочники.ХозОперации.БюджетЗакупокПоКатегориям);
		СписокХО.Добавить(Справочники.ХозОперации.БюджетЗакупокПоНоменклатуре);
	КонецЕсли;
	Отбор.Вставить("ХозОперация", СписокХО);
	
	// подразделение
	Отбор.Вставить("ПодразделениеКомпании", Объект.ПодразделениеКомпании);
	
	// ограничим по периодичности
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СценарииПланирования.Ссылка
	|ИЗ
	|	Справочник.СценарииПланирования КАК СценарииПланирования
	|ГДЕ
	|	СценарииПланирования.ЭтоГруппа       = ЛОЖЬ
	|	И СценарииПланирования.Периодичность = &Периодичность";
	Запрос.УстановитьПараметр("Периодичность", Объект.СценарийПланирования.Периодичность);
	Результат = Новый СписокЗначений;
	Результат.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	Отбор.Вставить("СценарийПланирования", Результат);
	
	Возврат Новый Структура("РежимВыбора,Отбор", Истина, Отбор);
	
КонецФункции

// Обработчик события возникающего при выполнении оповещения данной формы о прекращении работы подчиненной.
//
// Параметры:
//  РезультатОповещения     - Произвольный - Результат выполнения операции в подчиненной форме.
//  ДополнительныеПараметры - Произвольный - Значение, которое было указано при создании объекта описания оповещения.
//
&НаКлиенте
Процедура ОбработкаРезультатаОповещенияИспользоватьРаздельныеГрафики(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		
		Объект.ГрафикРаспределенияДС.Очистить();
		Элементы.ГрафикРаспределенияДС.ОтборСтрок = Неопределено;
		УправлениеДиалогомНаСервере();
		
	Иначе
		
		Объект.ИспользоватьРаздельныеГрафикиПогашения = НЕ Объект.ИспользоватьРаздельныеГрафикиПогашения;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаРезультатаОповещенияИспользоватьРаздельныеГрафики()

// Устанавливает итоговые значения в подвал для графика распределения денежных средств.
//
&НаКлиенте
Процедура УстановитьИтогиДляГрафикРаспределенияДС()
	
	Если Объект.ИспользоватьРаздельныеГрафикиПогашения Тогда
		// получаем текущую строку
		ТекущаяСтрока = Элементы.СтатьиДДС.ТекущаяСтрока;
		
		// инициализируем
		СуммаПроцент = 0;
		СуммаУпр     = 0;
		
		Если ТекущаяСтрока <> Неопределено Тогда
			// Получим данные текущей строки табличной части
			ТекущиеДанные = Объект.СтатьиДДС.НайтиПоИдентификатору(ТекущаяСтрока);
			
			// Сделаем отбор строк по статье
			МассивГрафикРаспределенияДС = Объект.ГрафикРаспределенияДС.НайтиСтроки(Новый Структура("СтатьяДДС", ТекущиеДанные.СтатьяДДС));
			
			// Посчитаем суммы
			Для Каждого Строка Из МассивГрафикРаспределенияДС Цикл
				
				СуммаПроцент = СуммаПроцент + Строка.Процент;
				СуммаУпр = СуммаУпр + Строка.СуммаПогашенияУпр;
				
			КонецЦикла;
		КонецЕсли;
		
		// Установим значения подвала
		ГрафикРаспределенияДСПроцентТекстПодвала           = Формат(СуммаПроцент,"ЧДЦ=2");
		ГрафикРаспределенияДССуммаПогашенияУпрТекстПодвала = Формат(СуммаУпр,"ЧДЦ=2");
		
	Иначе
		
		// Установим значения подвала
		ГрафикРаспределенияДСПроцентТекстПодвала           = Объект.ГрафикРаспределенияДС.Итог("Процент");
		ГрафикРаспределенияДССуммаПогашенияУпрТекстПодвала = Объект.ГрафикРаспределенияДС.Итог("СуммаПогашенияУпр");
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьИтогиДляГрафикРаспределенияДС()

// Процедура устанавливает значения в колонке "Период распределения".
//
&НаСервере
Процедура УстановитьПериодыРаспределения(Строка = Неопределено)
	
	Для Каждого График Из Объект.ГрафикРаспределенияДС Цикл
		ПараметрыПланирования = Новый Структура;
		ПараметрыПланирования.Вставить("Периодичность", Объект.СценарийПланирования.Периодичность);
		ПараметрыПланирования.Вставить("ДатаИзПериода", Объект.ДатаПланирования);
		ПараметрыПланирования.Вставить("Действие",      График.Период);
		График.ПериодРаспределения = ПланированиеСервер.ПолучитьДатыПланируемогоПериода(ПараметрыПланирования);
	КонецЦикла;
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ПроверкаПодразделенияДокументаИПользователяЗавершение(Контекст) Экспорт
	
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЗаполнениеОбъектов
&НаКлиенте
Процедура ПослеОбработкиЗаполнения(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ПослеОбработкиЗаполненияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеОбработкиЗаполненияНаСервере()
	
	ЗаполнениеОбъектовАльфаАвто.ПослеОбработкиЗаполнения(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ЗаполнениеОбъектов

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиАльфаАвто

// Ядро
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
	// настроим выбор статьи ддс
	ДоступныеСтатьи = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатьиДДС.Ссылка
	|ИЗ
	|	Справочник.СтатьиДДС КАК СтатьиДДС
	|ГДЕ
	|	СтатьиДДС.ЭтоГруппа = ЛОЖЬ
	|	И НЕ СтатьиДДС.Ссылка В (&СписокСсылок)";
	Запрос.УстановитьПараметр("СписокСсылок", Объект.СтатьиДДС.Выгрузить(,"СтатьяДДС"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДоступныеСтатьи.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Если Не Элементы.Найти("СтатьиДДССтатьяДДС")=Неопределено Тогда
		УправлениеДиалогомСервер.ОбновитьПараметрВыбора(Элементы.СтатьиДДССтатьяДДС.ПараметрыВыбора, "Отбор.Ссылка", ДоступныеСтатьи);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомДокументаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Элементы.ГрафикРаспределенияДССуммаПогашенияУпр.Видимость = Объект.ИспользоватьРаздельныеГрафикиПогашения;
	
	Если НЕ ЗначениеЗаполнено(Объект.СценарийПланирования) ИЛИ НЕ ЗначениеЗаполнено(Объект.СценарийПланирования.Периодичность) Тогда
		ПериодПланирования = "<Неопределен>";
	Иначе
		ПараметрыПериода = Новый Структура;
		ПараметрыПериода.Вставить("ДатаИзПериода" , Объект.ДатаПланирования);
		ПараметрыПериода.Вставить("Периодичность" , Объект.СценарийПланирования.Периодичность);
		ПараметрыПериода.Вставить("Действие"      , 0);
		ПериодПланирования = ПланированиеСервер.ПолучитьДатыПланируемогоПериода(ПараметрыПериода);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	
	Если НЕ УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	Если Лев(ДополнительныеПараметры, 17) = "КомандаЗаполнения" Тогда
		УстановитьИтогиДляГрафикРаспределенияДС();
	КонецЕсли;

	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)

	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры 

#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	                                                                                                                
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, 	РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект,			РезультатОповещения);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область УтверждениеДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуУтверждения(Команда)
	
	УтверждениеДокументовКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект.Ссылка);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбработкуКомандыУтвержденияНаСервере(ПараметрыОбработки,
		ДополнительныеПараметры) Экспорт
	
	ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры);
	Оповестить("ПослеУтвержденияДокументов", Объект.Ссылка, ИмяФормы);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры)
	
	УтверждениеДокументовВызовСервера.ОбработкаКомандыФормы(ЭтотОбъект, ПараметрыОбработки.ИмяКоманды, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКомандыУтвержденияДокументов()
	
	ОбновитьКомандыУтвержденияДокументовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКомандыУтвержденияДокументовНаСервере()
	
	УтверждениеДокументовКлиентСервер.УстановитьДоступностьКнопокУтверждения(ЭтотОбъект, Объект, ТолькоПросмотр);
	УтверждениеДокументовВызовСервера.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, Объект, ТолькоПросмотр);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти