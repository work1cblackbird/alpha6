// Модуль объекта документа "Возврат от покупателя автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Обработчик события объекта возникает в момент, когда выполняется установка нового номера.
//
// Параметры:
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//  Префикс              - Строка - Префикс, который будет использоваться для генерации номера.
//
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	// Вызываем общий обработчик события
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры // ПриУстановкеНовогоНомера()

// Обработчик события заполнения объекта как при создании нового, так и при вводе на основании существующего.
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения="", СтандартнаяОбработка=ИСТИНА) Экспорт
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	// Если вид договора не соответствует хоз. операции, то его следует
	// подставлять автоматически.
	Если (ЗначениеЗаполнено(ДанныеЗаполнения)) 
		И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения)) 
		И ДанныеЗаполнения.Метаданные().Реквизиты.Найти("Контрагент")<>Неопределено Тогда
		
		// Попробуем запонить контрагента и его договор
		Контрагент	= ДанныеЗаполнения.Контрагент;
		ДоговорВзаиморасчетов	= ДанныеЗаполнения.ДоговорВзаиморасчетов;
		ВалютаДокумента			= ДанныеЗаполнения.ВалютаДокумента;
		ТипЦен					= ДанныеЗаполнения.ТипЦен;
		
		// Проверим соответствие договора хозю операции
		Если ЗначениеЗаполнено(Контрагент) И
			ТипЗнч(ДоговорВзаиморасчетов)=Тип("СправочникСсылка.ДоговорыВзаиморасчетов") И
			(НЕ Справочники.ХозОперации.ДоговорСоответствуетХозОперации(ХозОперация, ДоговорВзаиморасчетов)) Тогда
			
			// Произвдем поиск договора с правильным видом
			Если ХозОперация=Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия Тогда
				ТекущийВидДоговора	= Перечисления.ВидыДоговоров.СКомиссионером; 
			Иначе
				ТекущийВидДоговора	= Перечисления.ВидыДоговоров.Продажа; 
			КонецЕсли;
			
			// Параметры для подстановки или создания договора контрагента
			ДопПараметры	= Новый Структура();
			ДопПараметры.Вставить("ВидДоговора",			ТекущийВидДоговора);
			ДопПараметры.Вставить("ВалютаВзаиморасчетов",	ВалютаДокумента);
			
			ДоговорВзаиморасчетов	=  ОбработкаРеквизитовДокументаСервер.ПолучитьДоговорВзаиморасчетов(Контрагент,ТекущийВидДоговора,ЭтотОбъект,ДопПараметры,Истина);
			
			// Попробуем найти договор с видом "Прочее"
			Если Не ЗначениеЗаполнено(ДоговорВзаиморасчетов) Тогда
				ДопПараметры.Вставить("ВидДоговора", ТекущийВидДоговора);
				ДоговорВзаиморасчетов = ОбработкаРеквизитовДокументаСервер.ПолучитьДоговорВзаиморасчетов(Контрагент,ТекущийВидДоговора,ЭтотОбъект,ДопПараметры,Истина);
			КонецЕсли;
			
			// Данные реквизиты необходимо заполнять стандартно из общего модуля документов
			ВалютаДокумента	= Неопределено;
			ТипЦен			= Неопределено;
			Дата			= Неопределено;
		КонецЕсли;
	КонецЕсли;	
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Товары.Очистить();
	// определим ХО.
	Если ДанныеЗаполнения=Неопределено ИЛИ (ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Контрагенты")) Тогда
		ТипЦен = ПраваИНастройкиПользователя.Значение("ОсновнойТипЦенПродажиАвтомобилей",ЭтотОбъект);
	Иначе
		ТипЦен = ДанныеЗаполнения.ТипЦен;
		// проставим партию
		Для Каждого СтрокаТЧ Из Автомобили Цикл
			Если СтрокаТЧ.Количество=0 Тогда
				СтрокаТЧ.Количество=1;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторАвтомобиля) Тогда
				СтрокаТЧ.ИдентификаторАвтомобиля = Новый УникальныйИдентификатор;
			КонецЕсли;
			СтрокаТЧ.ДокументПродажи=ДанныеЗаполнения;
			Документы.ВозвратОтПокупателяАвтомобилей.АвтомобилиДокументПродажиПриИзменении(ЭтотОбъект, СтрокаТЧ, ЭтотОбъект.ДополнительныеСвойства.ПараметрыДействия);
			Если Не ЗначениеЗаполнено(СтрокаТЧ.СтавкаНДС) Тогда
				СтрокаТЧ.СтавкаНДС = ПолучитьПараметрыПлательщикаНДС(ЭтотОбъект.Организация, ЭтотОбъект.ПодразделениеКомпании, ЭтотОбъект.Дата).ОсновнаяСтавка;
				Документы.ВозвратОтПокупателяАвтомобилей.АвтомобилиСтавкаНДСПриИзменении(ЭтотОбъект, СтрокаТЧ, ЭтотОбъект.ДополнительныеСвойства.ПараметрыДействия);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(СкладКомпании) Тогда
		СкладКомпании = ПраваИНастройкиПользователя.Значение("ОсновнойСкладКомпании",ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события заполнения объекта копированием.
//
// Параметры:
//  ОбъектКопирования - ДокументОбъект - Исходный объект, который является источником копирования.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

// Обработчик события возникающего при необходимости проверки заполнения реквизитов при записи или при проведении.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// проверим заполненность ТЧ Автомобили
	Для Каждого СтрокаАвтомобиля Из Автомобили Цикл
		Если ПустаяСтрока(СтрокаАвтомобиля.ИдентификаторАвтомобиля) Тогда
			СтрокаАвтомобиля.ИдентификаторАвтомобиля = Новый УникальныйИдентификатор();
		КонецЕсли;
	КонецЦикла;
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ДокументОснование) И (ТипЗнч(ЭтотОбъект.ДокументОснование) <> Тип("СправочникСсылка.Контрагенты")) Тогда
		Если ЭтотОбъект.ДокументОснование.Контрагент <> ЭтотОбъект.Контрагент Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Контрагент документа основания отличается от контрагента текущего документа.'"), ЭтотОбъект,,, Отказ);
		КонецЕсли;
		
		Если ЭтотОбъект.ДокументОснование.ДоговорВзаиморасчетов <> ЭтотОбъект.ДоговорВзаиморасчетов Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Договор взаиморасчетов документа основания отличается от договора взаиморасчетов текущего документа.'"), ЭтотОбъект,,, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	ОбработкаСобытийДокументаСервер.ПроверитьКорректностьТоваровКомиссионныхДокументов(
		ЭтотОбъект,
		Отказ,
		"Автомобили",
		"Автомобиль",
		Ложь
	);
	ОбработкаСобытийДокументаСервер.ПроверитьКорректностьТоваровКомиссионныхДокументов(ЭтотОбъект, Отказ);
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Обработчик события возникающего после начала транзакции записи, но до начала записи объекта.
//
// Параметры:
//  Отказ           - Булево                   - Признак отказа от совершения операции.
//  РежимЗаписи     - РежимЗаписиДокумента     - Текущий режим записи документа.
//  РежимПроведения - РежимПроведенияДокумента - Текущий режим проведения.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);
	// Конец УтверждениеДокументов
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЦен.Рассчитывается Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Использование расчетных типов цен запрещено.'"), ЭтотОбъект);
		
	КонецЕсли;
	
	// Проверим корректность склада
	Если НЕ Отказ Тогда
		Если ЗначениеЗаполнено(СкладКомпании) Тогда
			Если СкладКомпании.Розничный Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = 'Выбранный склад: ""%1"" является розничным! Выберите оптовый склад'"),СкладКомпании),
					ЭтотОбъект,,, Отказ);
				Возврат;
			КонецЕсли;
		КонецЕсли; 
		Для Каждого СтрокаАвтомобилей Из Автомобили Цикл
			ОборудованиеАвтомобиля=Товары.НайтиСтроки(Новый Структура("ИдентификаторАвтомобиля",СтрокаАвтомобилей.ИдентификаторАвтомобиля));
			Для Каждого СтрокаТоваров Из ОборудованиеАвтомобиля Цикл
				СтрокаТоваров.ДокументПродажи=СтрокаАвтомобилей.ДокументПродажи;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	РаботаСГраницами.МоментВремениПередПроведением(Ссылка, ДополнительныеСвойства);
	РаботаСГраницами.ДвиженияПоВзаиморасчетамПередПроведением(Ссылка, ДополнительныеСвойства);
	РаботаСГраницами.ДвиженияПоРасчетамСКонтрагентамиПередПроведением(Ссылка, ДополнительныеСвойства);
	РаботаСГраницами.ДвиженияПоОстаткамАвтомобилейПередПроведением(Ссылка, ДополнительныеСвойства);
	РаботаСГраницами.ДвиженияПоКомплектацииПередПроведением(Ссылка, ДополнительныеСвойства);
	
КонецПроцедуры

// Обработчик события возникающего после записи объекта в базу данных, но до окончания транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПриЗаписи(ЭтотОбъект, Отказ);
	// Конец УтверждениеДокументов
	
КонецПроцедуры // ПриЗаписи()

// Обработчик события возникающего в транзакции удаления перед непосредственным удалением объекта из базы данных.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередУдалением(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	// Запретим удалять документ партии отрицательных остатков
	Если ЭтотОбъект.Ссылка=Константы.ПартияТоваровОтрицательныхОстатков.Получить() Тогда
		ОбщегоНазначения.СообщитьПользователю (НСтр("ru='Документ является документом партии отрицательных остатках и не может быть удалён.'"), ЭтотОбъект,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры // ПередУдалением()

// Обработчик события возникающего при отмене проведения документа. Выполняется в транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

// Обработчик события возникающего в транзакции записи для формирования движений документу по подчиненным регистрам.
//
// Параметры:
//  Отказ           - Булево                   - Признак отказа от совершения операции.
//  РежимПроведения - РежимПроведенияДокумента - Текущий режим проведения.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	// проверим, что автомобиль отсутствует на остатках по различным регистрам
	Если НЕ РегистрыНакопления.ОстаткиАвтомобилей.ПроверитьОстаткиАвтомобилей(ЭтотОбъект,Отказ) Тогда 
		Возврат; 
	КонецЕсли;
	
	СпособУчетаВзаиморасчетовПоРасчетнымДокументам =
		РасчетыСКонтрагентамиСервер.ИспользуютсяВзаиморасчетыПоРасчетнымДокументам(ДоговорВзаиморасчетов);
	
	// проведем взаиморасчеты
	Если ХозОперация <> Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия
		И Не СпособУчетаВзаиморасчетовПоРасчетнымДокументам Тогда
		НаборЗаписейВзаиморасчеты = Движения.ВзаиморасчетыКомпании;
		НаборЗаписейВзаиморасчеты.ДокументОбъект        = ЭтотОбъект;
		НаборЗаписейВзаиморасчеты.РежимПроведения       = РежимПроведения;
		НаборЗаписейВзаиморасчеты.Контрагент            = Контрагент;
		НаборЗаписейВзаиморасчеты.ДоговорВзаиморасчетов = ДоговорВзаиморасчетов;
		НаборЗаписейВзаиморасчеты.АвтоЗакрытиеСделок	= 
			(СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически);
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			НаборЗаписейВзаиморасчеты.Сделка                   = ДокументОснование;
			НаборЗаписейВзаиморасчеты.ВзаиморасчетыСПокупателем= Истина;
		Иначе
			НаборЗаписейВзаиморасчеты.Сделка = Неопределено;
		КонецЕсли;
		НаборЗаписейВзаиморасчеты.Сумма = СуммаДокумента;
		НаборЗаписейВзаиморасчеты.СуммаДоходаРасходаСуммовыхРазниц=0;
		Отказ = НЕ НаборЗаписейВзаиморасчеты.Расход() ИЛИ Отказ;
		
		// доходы и расходы по суммовым разницам
		СуммаДоходаРасходаСуммовыхРазниц = НаборЗаписейВзаиморасчеты.СуммаДоходаРасходаСуммовыхРазниц;
		Если СуммаДоходаРасходаСуммовыхРазниц <> 0 Тогда
			НаборЗаписейДиР = Движения.ДоходыИРасходы;
			НаборЗаписейДиР.ДокументОбъект         = ЭтотОбъект;
			НаборЗаписейДиР.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СуммовыеРазницы;
			НаборЗаписейДиР.ВУпрВалюте             = Истина;
			Если СуммаДоходаРасходаСуммовыхРазниц < 0 Тогда
				НаборЗаписейДиР.Расход = -СуммаДоходаРасходаСуммовыхРазниц;
			Иначе
				НаборЗаписейДиР.Доход = СуммаДоходаРасходаСуммовыхРазниц;
			КонецЕсли;
			Отказ = НЕ НаборЗаписейДиР.Приход() ИЛИ Отказ;
		КонецЕсли;
	КонецЕсли;
	
	Документы.ВозвратОтПокупателяАвтомобилей.ИнициализироватьДанныеДокументаДляПроведения(ЭтотОбъект, ДополнительныеСвойства);
	Документы.ВозвратОтПокупателяАвтомобилей.СформироватьТаблицуРасчетыСКонтрагентами(ДополнительныеСвойства, Отказ);
	ОбработкаСобытийДокументаСервер.ЗаписатьДвижения(ЭтотОбъект);
	
	// вернем автомобили
	НаборЗаписейОстаткиАвтомобилей = Движения.ОстаткиАвтомобилей;
	НаборЗаписейОстаткиАвтомобилей.ДокументОбъект = ЭтотОбъект;
	НаборЗаписейОстаткиАвтомобилей.СкладКомпании  = СкладКомпании;
	НаборЗаписейОстаткиАвтомобилей.Партия         = "ДокументПродажи";
	//НаборЗаписейОстаткиАвтомобилей.Сторно=Истина;
	Отказ=НЕ НаборЗаписейОстаткиАвтомобилей.ВозвратАвтомобилей(ВидДвиженияНакопления.Расход) ИЛИ Отказ;
	
	Если ХозОперация<>Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия Тогда
		// Если среди возвращаемых автомобилей есть комиссионные, то отсторнируем реализованные автомобили.
		НаборЗаписейРеализованныеАвтомобили=Движения.РеализованныеАвтомобили;
		НаборЗаписейРеализованныеАвтомобили.ДокументОбъект=ЭтотОбъект;
		НаборЗаписейРеализованныеАвтомобили.Сторно=Истина;
		Отказ=НЕ НаборЗаписейРеализованныеАвтомобили.Приход() ИЛИ Отказ;
	Иначе
		// автомобили возвращает комиссионер. отсторнируем передачу на комиссию
		НаборЗаписейАвтомобилиОтданные=Движения.АвтомобилиОтданные;
		НаборЗаписейАвтомобилиОтданные.ДокументОбъект=ЭтотОбъект;
		НаборЗаписейАвтомобилиОтданные.Сторно=Истина;
		НаборЗаписейАвтомобилиОтданные.Контрагент=Контрагент;
		НаборЗаписейАвтомобилиОтданные.ДоговорВзаиморасчетов=ДоговорВзаиморасчетов;
		Отказ=НЕ НаборЗаписейАвтомобилиОтданные.Приход() ИЛИ отказ;
	КонецЕсли;
	
	// проведем партии товаров
	Отказ=НЕ ПровестиПоПартиям(РежимПроведения,Ссылка) ИЛИ Отказ;
	
	Если (НЕ Отказ) И (ХозОперация<>Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия) Тогда
		
		ШапкаДокумента = ПолучитьШапкуДокумента(Ссылка);
		// определим необходимость формирования корректирующих проводок
		БалансВедетсяПоПодразделениям = БалансВедетсяПоПодразделениям(ШапкаДокумента.Дата);
		
		// продажи
		Если НЕ Отказ Тогда
			НаборЗаписейПродажи = Движения.ПродажиАвтомобилей;
			НаборЗаписейПродажи.ДокументОбъект = ЭтотОбъект;
			НаборЗаписейПродажи.СкладКомпании         = СкладКомпании;
			НаборЗаписейПродажи.Сторно                = Истина;
			НаборЗаписейПродажи.Покупатель            = Контрагент;
			НаборЗаписейПродажи.ДоговорВзаиморасчетов = ДоговорВзаиморасчетов;
			НаборЗаписейПродажи.ПодразделениеКомпании = ПодразделениеКомпании;
			НаборЗаписейПродажи.Комиссия=(ХозОперация = Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия);
			НаборЗаписейПродажи.РасчетыСКонтрагентами = ДополнительныеСвойства.ТаблицыДвиженийДокумента.РасчетыСКонтрагентами;
			Отказ=НЕ НаборЗаписейПродажи.Приход() ИЛИ Отказ;
		КонецЕсли;
		
		
		// доходы и расходы
		НаборЗаписейРеализованныеТовары=Движения.РеализованныеТовары;
		НаборЗаписейРеализованныеТовары.Записать();
		НаборЗаписейРеализованныеАвтомобили.Записать();
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	ОбъединенныйЗапрос.Подразделение КАК Подразделение,
		             |	-СУММА(ОбъединенныйЗапрос.СуммаАвтомобилейУпр) КАК СуммаАвтомобилейУпр,
		             |	-СУММА(ОбъединенныйЗапрос.СуммаОборудованияУпр) КАК СуммаОборудованияУпр
		             |ИЗ
		             |	(ВЫБРАТЬ
		             |		РеализованныеАвтомобили.ДоговорВзаиморасчетов.ПодразделениеКомпании КАК Подразделение,
		             |		ЕСТЬNULL(РеализованныеАвтомобили.СуммаУпр, 0) КАК СуммаАвтомобилейУпр,
		             |		0 КАК СуммаОборудованияУпр
		             |	ИЗ
		             |		РегистрНакопления.РеализованныеАвтомобили КАК РеализованныеАвтомобили
		             |	ГДЕ
		             |		РеализованныеАвтомобили.Регистратор = &Регистратор
		             |	
		             |	ОБЪЕДИНИТЬ ВСЕ
		             |	
		             |	ВЫБРАТЬ
		             |		РеализованныеТовары.ДоговорВзаиморасчетов.ПодразделениеКомпании,
		             |		0,
		             |		ЕСТЬNULL(РеализованныеТовары.СуммаУпр, 0)
		             |	ИЗ
		             |		РегистрНакопления.РеализованныеТовары КАК РеализованныеТовары
		             |	ГДЕ
		             |		РеализованныеТовары.Регистратор = &Регистратор) КАК ОбъединенныйЗапрос
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	ОбъединенныйЗапрос.Подразделение";
		Запрос.УстановитьПараметр("Регистратор", ШапкаДокумента.Ссылка);
		// В случае если ведется баланс по подразделению передадим подразделение соответствующее корреспонденции.
		Если БалансВедетсяПоПодразделениям Тогда
			Выборка=Запрос.Выполнить().Выбрать();
			НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
			Пока Выборка.Следующий() Цикл
				СуммаАвтомобилейУпр  = Выборка.СуммаАвтомобилейУпр;
				СуммаОборудованияУпр = Выборка.СуммаОборудованияУпр;
				Если СуммаАвтомобилейУпр <> 0 Тогда
					НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
					НаборЗаписейДоходыИРасходы.Подразделение  = Выборка.Подразделение;
					НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СебестоимостьАвтомобилей;
					НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
					НаборЗаписейДоходыИРасходы.Расход                 = СуммаАвтомобилейУпр;
					НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
					Отказ=НЕ НаборЗаписейДоходыИРасходы.Расход() ИЛИ Отказ;
				КонецЕсли;
				Если СуммаОборудованияУпр <> 0 Тогда
					НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
					НаборЗаписейДоходыИРасходы.Подразделение  = Выборка.Подразделение;
					НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.Себестоимость;
					НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
					НаборЗаписейДоходыИРасходы.Расход                 = СуммаОборудованияУпр;
					НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
					Отказ=НЕ НаборЗаписейДоходыИРасходы.Расход() ИЛИ Отказ;
				КонецЕсли;
			КонецЦикла; 
		Иначе
			ТаблицаСебестоимости = Запрос.Выполнить().Выгрузить();
			СуммаАвтомобилейУпр = ТаблицаСебестоимости.Итог("СуммаАвтомобилейУпр");
			СуммаОборудованияУпр = ТаблицаСебестоимости.Итог("СуммаОборудованияУпр");
			Если СуммаАвтомобилейУпр <> 0 Тогда
				НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
				НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
				НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СебестоимостьАвтомобилей;
				НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
				НаборЗаписейДоходыИРасходы.Расход                 = СуммаАвтомобилейУпр;
				НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
				Отказ=НЕ НаборЗаписейДоходыИРасходы.Расход() ИЛИ Отказ;
			КонецЕсли;
			Если СуммаОборудованияУпр <> 0 Тогда
				НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
				НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
				НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.Себестоимость;
				НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
				НаборЗаписейДоходыИРасходы.Расход                 = СуммаОборудованияУпр;
				НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
				Отказ=НЕ НаборЗаписейДоходыИРасходы.Расход() ИЛИ Отказ;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	// Проверим налиие прослеживаемых товаров, которые были возвращены из розницы
	Если НЕ Отказ Тогда
		Движения.ПродажиАвтомобилей.Записать();
	КонецЕсли;
	ТаблицаПрослеживаемыхТоваров = Документы.ВозвратОтПокупателяАвтомобилей.ОперацииСПрослеживаемымиТоварами(
		ЭтотОбъект);
	НаборЗаписейОперацииПрослеживаемости = Движения.ОперацииПрослеживаемыхТоваров;
	НаборЗаписейОперацииПрослеживаемости.ДокументОбъект = ЭтотОбъект;
	НаборЗаписейОперацииПрослеживаемости.ТаблицаПрослеживаемыхТоваров = ТаблицаПрослеживаемыхТоваров;
	Если НЕ НаборЗаписейОперацииПрослеживаемости.ДобавитьОперациюПрослеживаемости() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	// Возможно расхождение баланса на "копейки" из-за округления. Возникшую разницу
	// необходимо списать на доходы и расходы.
	Отказ = НЕ ОбработкаСобытийДокументаСервер.СписаниеКопейкиПриОкругленииВалютныхСчетов(ЭтотОбъект) ИЛИ Отказ;
	
	Если НЕ Отказ Тогда
		ОбработкаПроведенияНакопленияПоКарточкамКонтрагентов();
		
		// Запишем историю владельцев автомобилей
		Для Каждого ТекСтрока Из Автомобили Цикл
			Справочники.Автомобили.ЗаписьЗначенияРегистраСведения(
				ТекСтрока.Автомобиль,
				Организация,
				Перечисления.ДополнительнаяИнформацияАвтомобилей.Хозяин,
				Дата,
				Перечисления.ИсточникиИнформацииХарактеристикАвтомобиля.ВозвратАвтомобиляОтПокупателя);
		КонецЦикла;
	КонецЕсли;
	
	// двигаем границу последовательности автомобилей
	РаботаСГраницами.СдвинутьГраницуОстатковАвтомобилей(Ссылка, ДополнительныеСвойства, Движения);
	
	// двигаем границу последовательности взаиморасчетов
	РаботаСГраницами.СдвинутьГраницуРасчетовСКонтрагентами(Ссылка, ДополнительныеСвойства, Движения);
	РаботаСГраницами.СдвинутьГраницуВзаиморасчетов(Ссылка, ДополнительныеСвойства, Движения);
	
КонецПроцедуры // ОбработкаПроведения()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиЗаполненияОбъекта

// Производит заполнение объекта на основании документа "Реализация автомобилей"
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_РеализацияАвтомобилей(ДанныеЗаполнения,
	ТекстЗаполнения = "",
	СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Вызываем общий обработчик заполнения
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ДанныеЗаполнения.ХозОперация = Справочники.ХозОперации.РеализацияАвтомобилейКомиссия Тогда
		ХозОперация = Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия;
	КонецЕсли;
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции

// Производит заполнение объекта на основании документа "Ввод остатков автомобилей"
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_ВводОстатковАвтомобилей(ДанныеЗаполнения,
	ТекстЗаполнения = "",
	СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Вызываем общий обработчик заполнения
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ДанныеЗаполнения.ХозОперация=Справочники.ХозОперации.ВводОстатковАвтомобилейПереданныхНаКомиссию Тогда
		ХозОперация = Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия;
	КонецЕсли;
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции

// Производит заполнение объекта на основании документа "Инвентаризация автомобилей".
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_ИнвентаризацияАвтомобилей(ДанныеЗаполнения,
	ТекстЗаполнения = "",
	СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Вызываем общий обработчик заполнения
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ДанныеЗаполнения.ХозОперация = Справочники.ХозОперации.ИнвентаризацияАвтомобилейОтданныхНаКомиссию Тогда
		ХозОперация = Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия;
	КонецЕсли;
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ФормированиеДвиженийДокумента

Процедура ОбработкаПроведенияНакопленияПоКарточкамКонтрагентов()
	
	Если НЕ ЗначениеЗаполнено(Карточка) ИЛИ НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка.Контрагент,
	|	ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка.Карточка,
	|	ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка.Дата КАК ПериодНакопления,
	|	СУММА(-ВозвратОтПокупателяАвтомобилейАвтомобили.Количество) КАК КоличествоНоменклатуры,
	|	СУММА(-ВозвратОтПокупателяАвтомобилейАвтомобили.СуммаВсего) КАК Сумма,
	|	СУММА(0) КАК КоличествоЧеков
	|ИЗ
	|	Документ.ВозвратОтПокупателяАвтомобилей.Автомобили КАК ВозвратОтПокупателяАвтомобилейАвтомобили
	|ГДЕ
	|	ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка.Контрагент,
	|	ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка.Дата,
	|	ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка.Карточка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратОтПокупателяАвтомобилейТовары.Ссылка.Контрагент,
	|	ВозвратОтПокупателяАвтомобилейТовары.Ссылка.Карточка,
	|	ВозвратОтПокупателяАвтомобилейТовары.Ссылка.Дата,
	|	СУММА(-ВозвратОтПокупателяАвтомобилейТовары.Количество),
	|	СУММА(-ВозвратОтПокупателяАвтомобилейТовары.СуммаВсего),
	|	СУММА(0)
	|ИЗ
	|	Документ.ВозвратОтПокупателяАвтомобилей.Товары КАК ВозвратОтПокупателяАвтомобилейТовары
	|ГДЕ
	|	ВозвратОтПокупателяАвтомобилейТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратОтПокупателяАвтомобилейТовары.Ссылка.Контрагент,
	|	ВозвратОтПокупателяАвтомобилейТовары.Ссылка.Карточка,
	|	ВозвратОтПокупателяАвтомобилейТовары.Ссылка.Дата";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	НаборНакоплениеСумм = Движения.НакопленияПоКарточкамКонтрагентов;
	НаборНакоплениеСумм.ДокументСсылка   = Ссылка;
	НаборНакоплениеСумм.РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	НаборНакоплениеСумм.ВыполнитьДвижения();
	
КонецПроцедуры

// Возвращает выборку по шапке
// ДокументСсылка - Ссылка на документ для которого получаем шапку.
Функция ПолучитьШапкуДокумента(ДокументСсылка) Экспорт
	Запрос=Новый Запрос("
	|ВЫБРАТЬ
	|	СУММА(СуммыТаблиц.СуммаАвтомобилей) КАК СуммаАвтомобилей,
	|	СУММА(СуммыТаблиц.СуммаДопОборудования) КАК СуммаДопОборудования
	|ПОМЕСТИТЬ
	|	СуммыТаблиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаАвтомобили.СуммаВсего КАК СуммаАвтомобилей,
	|		0 КАК СуммаДопОборудования
	|	ИЗ
	|		Документ.ВозвратОтПокупателяАвтомобилей.Автомобили КАК ТаблицаАвтомобили
	|	ГДЕ
	|		ТаблицаАвтомобили.Ссылка=&Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		0,
	|		ТаблицаТовары.СуммаВсего
	|	ИЗ
	|		Документ.ВозвратОтПокупателяАвтомобилей.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка=&Ссылка) КАК СуммыТаблиц
	|;
	|
	|ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Дата КАК Дата,
	|	Док.ВалютаДокумента КАК ВалютаДокумента,
	|	Док.КурсДокумента КАК КурсДокумента,
	|	Док.ТипЦен КАК ТипЦен,
	|	Док.ХозОперация КАК ХозОперация,
	|	Док.КурсВалютыУпр КАК КурсВалютыУпр,
	|	Док.КурсВалютыВзаиморасчетов КАК КурсВалютыВзаиморасчетов,
	|	Док.МоментВремени КАК МоментВремени,
	|	Док.ПодразделениеКомпании КАК ПодразделениеКомпании,
	/////////// ПРИВАТ ////////////
	|	Док.СкладКомпании КАК СкладКомпании,
	|	Док.Контрагент КАК Контрагент,
	|	Док.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	Док.ДокументОснование КАК ДокументОснование,
	|	Док.СуммаДокумента КАК СуммаДокумента,
	|	ЕСТЬNULL(СуммыТаблиц.СуммаАвтомобилей, 0) КАК СуммаАвтомобилей,
	|	ЕСТЬNULL(СуммыТаблиц.СуммаДопОборудования, 0) КАК СуммаДопОборудования
	|
	|ИЗ
	|	Документ.ВозвратОтПокупателяАвтомобилей КАК Док
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	СуммыТаблиц КАК СуммыТаблиц
	|ПО
	|	ИСТИНА
	|
	|ГДЕ
	|	Док.Ссылка=&Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Выборка=Запрос.Выполнить().Выбрать(); Выборка.Следующий();
	
	Возврат Выборка;
КонецФункции

// Формирует движения документа по партионным регистрам
// Возвращает Истина - все хорошо, ложь - чего-то не так.
Функция ПровестиПоПартиям(Режим,ДокументСсылка) Экспорт
	Отказ=Ложь;
			
	// получим шапку документа
	ШапкаДокумента=ПолучитьШапкуДокумента(ДокументСсылка);

	БалансВедетсяПоПодразделениям = БалансВедетсяПоПодразделениям(ШапкаДокумента.Дата);
	
	// Если было отложенное проведение по партиям, то :
	// Очистим возможные движения по регистру комплектации автомобилей.
	НаборЗаписейПартионногоРегистра=РегистрыНакопления.КомплектацияАвтомобилей.СоздатьНаборЗаписей();
	НаборЗаписейПартионногоРегистра.Отбор.Регистратор.Значение=ШапкаДокумента.Ссылка;
	НаборЗаписейПартионногоРегистра.Отбор.Регистратор.Использование=Истина;
	НаборЗаписейПартионногоРегистра.Записать();
	
	// Проверим, если подразделение проводиться по партиям "отложено", то дальше не идем.
	НаборЗаписейДопроведениеПоПартиям=Движения.ДопроведениеПоПартиям;
	НаборЗаписейДопроведениеПоПартиям.ДокументОбъект=ЭтотОбъект;
	НаборЗаписейДопроведениеПоПартиям.ШапкаДокумента=ШапкаДокумента;
	Отказ=НЕ НаборЗаписейДопроведениеПоПартиям.Зафиксировать() ИЛИ Отказ;
	
	// Вернем обратно опции и оборудование
	Если НЕ Отказ Тогда
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	КомплектацияАвтомобилей.Автомобиль КАК Автомобиль,
		             |	КомплектацияАвтомобилей.Номенклатура КАК Номенклатура,
		             |	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		             |	КомплектацияАвтомобилей.СтатусПартии КАК СтатусПартии,
		             |	КомплектацияАвтомобилей.Партия КАК Партия,
		             |	КомплектацияАвтомобилей.ГТД КАК ГТД,
		             |	РеализацияАвтомобилейТовары.СтавкаНДС,
		             |	КомплектацияАвтомобилей.Количество КАК Количество,
		             |	КомплектацияАвтомобилей.Сумма КАК Сумма,
		             |	КомплектацияАвтомобилей.СуммаНДС КАК СуммаНДС,
		             |	КомплектацияАвтомобилей.СуммаБезНДС КАК СуммаБезНДС,
		             |	КомплектацияАвтомобилей.СуммаУпр КАК СуммаУпр,
		             |	КомплектацияАвтомобилей.СуммаНДСУпр КАК СуммаНДСУпр,
		             |	КомплектацияАвтомобилей.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
		             |	КомплектацияАвтомобилей.СуммаПродажи КАК СуммаПродажи,
		             |	КомплектацияАвтомобилей.СуммаПродажиУпр КАК СуммаПродажиУпр
		             |ИЗ
		             |	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
		             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		             |			РеализацияАвтомобилейАвтомобили.Ссылка КАК Ссылка,
		             |			РеализацияАвтомобилейАвтомобили.Автомобиль КАК Автомобиль,
		             |			РеализацияАвтомобилейТовары.Номенклатура КАК Номенклатура,
		             |			РеализацияАвтомобилейТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		             |			РеализацияАвтомобилейТовары.СтавкаНДС КАК СтавкаНДС
		             |		ИЗ
		             |			Документ.РеализацияАвтомобилей.Автомобили КАК РеализацияАвтомобилейАвтомобили
		             |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияАвтомобилей.Товары КАК РеализацияАвтомобилейТовары
		             |				ПО РеализацияАвтомобилейАвтомобили.Ссылка = РеализацияАвтомобилейТовары.Ссылка
		             |					И РеализацияАвтомобилейАвтомобили.ИдентификаторАвтомобиля = РеализацияАвтомобилейТовары.ИдентификаторАвтомобиля
		             |		ГДЕ
		             |			РеализацияАвтомобилейАвтомобили.Ссылка В(
					 |				ВЫБРАТЬ РАЗЛИЧНЫЕ
					 |					ВозвратОтПокупателяАвтомобилейАвтомобили.ДокументПродажи
					 |				ИЗ
					 |					Документ.ВозвратОтПокупателяАвтомобилей.Автомобили КАК ВозвратОтПокупателяАвтомобилейАвтомобили
					 |				ГДЕ
					 |					ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка = &Ссылка
					 |			)) КАК РеализацияАвтомобилейТовары
		             |		ПО КомплектацияАвтомобилей.Автомобиль = РеализацияАвтомобилейТовары.Автомобиль
		             |			И КомплектацияАвтомобилей.Номенклатура = РеализацияАвтомобилейТовары.Номенклатура
		             |			И КомплектацияАвтомобилей.ХарактеристикаНоменклатуры = РеализацияАвтомобилейТовары.ХарактеристикаНоменклатуры
		             |			И КомплектацияАвтомобилей.Регистратор = РеализацияАвтомобилейТовары.Ссылка
		             |ГДЕ
		             |	КомплектацияАвтомобилей.Регистратор В(
					 |		ВЫБРАТЬ РАЗЛИЧНЫЕ
					 |			ВозвратОтПокупателяАвтомобилейАвтомобили.ДокументПродажи
					 |		ИЗ
					 |			Документ.ВозвратОтПокупателяАвтомобилей.Автомобили КАК ВозвратОтПокупателяАвтомобилейАвтомобили
					 |		ГДЕ
					 |			ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка = &Ссылка
					 |	)
		             |	И КомплектацияАвтомобилей.Автомобиль В(
					 |		ВЫБРАТЬ РАЗЛИЧНЫЕ
					 |			ВозвратОтПокупателяАвтомобилейАвтомобили.Автомобиль
					 |		ИЗ
					 |			Документ.ВозвратОтПокупателяАвтомобилей.Автомобили КАК ВозвратОтПокупателяАвтомобилейАвтомобили
					 |		ГДЕ
					 |			ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка = &Ссылка
					 |	)
		             |	И КомплектацияАвтомобилей.ВидДвижения = &ВидДвиженияРасход";
		Запрос.УстановитьПараметр("Ссылка",ШапкаДокумента.Ссылка);
		Запрос.УстановитьПараметр("ВидДвиженияРасход",ВидДвиженияНакопления.Расход);
		Запрос.УстановитьПараметр("ДокументыПродажи",Автомобили.ВыгрузитьКолонку("ДокументПродажи"));
		ВыборкаОборудования=Запрос.Выполнить().Выбрать();
		НаборЗаписейКомплектацияАвтомобилей=Движения.КомплектацияАвтомобилей;
		ДвиженияОстаткиАвтомобилей=Движения.ОстаткиАвтомобилей.Выгрузить();
		Пока ВыборкаОборудования.Следующий() Цикл
			НоваяЗапись=НаборЗаписейКомплектацияАвтомобилей.Добавить();
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период=ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор=ШапкаДокумента.Ссылка;
			НоваяЗапись.Автомобиль=ВыборкаОборудования.Автомобиль;
			НоваяЗапись.СкладКомпании=ШапкаДокумента.СкладКомпании;
			НоваяЗапись.Номенклатура=ВыборкаОборудования.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры=ВыборкаОборудования.ХарактеристикаНоменклатуры;
			// Вернем по партии с которой списано было оборудование.
			СтрокаОстаткиАвтомобилей=ДвиженияОстаткиАвтомобилей.Найти(ВыборкаОборудования.Автомобиль,"Автомобиль");
			Если СтрокаОстаткиАвтомобилей.Партия = ЭтотОбъект.Ссылка Тогда
				НоваяЗапись.СтатусПартии=СтрокаОстаткиАвтомобилей.СтатусПартии;
				НоваяЗапись.Партия=СтрокаОстаткиАвтомобилей.Партия;
			Иначе
				НоваяЗапись.СтатусПартии=ВыборкаОборудования.СтатусПартии;
				НоваяЗапись.Партия=ВыборкаОборудования.Партия;
			КонецЕсли;
			НоваяЗапись.ГТД=ВыборкаОборудования.ГТД;
			НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
			НоваяЗапись.СтавкаНДС=ВыборкаОборудования.СтавкаНДС;
			НоваяЗапись.Количество=-ВыборкаОборудования.Количество;
			НоваяЗапись.Сумма=-ВыборкаОборудования.Сумма;
			НоваяЗапись.СуммаНДС=-ВыборкаОборудования.СуммаНДС;
			НоваяЗапись.СуммаБезНДС=-ВыборкаОборудования.СуммаБезНДС;
			НоваяЗапись.СуммаУпр=-ВыборкаОборудования.СуммаУпр;
			НоваяЗапись.СуммаНДСУпр=-ВыборкаОборудования.СуммаНДСУпр;
			НоваяЗапись.СуммаБезНДСУпр=-ВыборкаОборудования.СуммаБезНДСУпр;
			НоваяЗапись.СуммаПродажи=-ВыборкаОборудования.СуммаПродажи;
			НоваяЗапись.СуммаПродажиУпр=-ВыборкаОборудования.СуммаПродажиУпр;
		КонецЦикла; 
		Если НЕ Отказ Тогда
			НаборЗаписейКомплектацияАвтомобилей.Записать();
		КонецЕсли;
	КонецЕсли;
	
	// двигаем границу последовательности комплектаций автомобилей
	Если Ссылка<>ДокументСсылка Тогда
		
		РаботаСГраницами.МоментВремениПередПроведением(ДокументСсылка, ДополнительныеСвойства);
		РаботаСГраницами.ДвиженияПоКомплектацииПередПроведением(ДокументСсылка, ДополнительныеСвойства);
		
	КонецЕсли;
	
	РаботаСГраницами.СдвинутьГраницуКомплектации(ДокументСсылка, ДополнительныеСвойства, Движения);
	
	Если НаборЗаписейДопроведениеПоПартиям.НеПроводитьПартии Тогда
		Если ШапкаДокумента.ХозОперация<>Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия Тогда
			НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
			НаборЗаписейДоходыИРасходы.ДокументОбъект=ЭтотОбъект;
			НаборЗаписейДоходыИРасходы.ВУпрВалюте=Ложь;
			НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов=Справочники.СтатьиДоходовИРасходов.СебестоимостьНеоприходованныхПартий;
			НаборЗаписейДоходыИРасходы.Расход=ШапкаДокумента.СуммаДокумента;
			НаборЗаписейДоходыИРасходы.ШапкаДокумента=ШапкаДокумента;
			Отказ=НЕ НаборЗаписейДоходыИРасходы.Приход() ИЛИ Отказ;
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	ЕСТЬNULL(СУММА(ОстаткиАвтомобилей.СуммаУпр),0) КАК СуммаУпр
			|ИЗ
			|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
			|ГДЕ
			|	ОстаткиАвтомобилей.Регистратор = &Регистратор";
			Запрос.УстановитьПараметр("Регистратор",ШапкаДокумента.Ссылка);
			Выборка=Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Если Выборка.СуммаУпр<>0 Тогда
					НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
					НаборЗаписейДоходыИРасходы.ДокументОбъект=ЭтотОбъект;
					НаборЗаписейДоходыИРасходы.ВУпрВалюте=Истина;
					НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов=Справочники.СтатьиДоходовИРасходов.СебестоимостьНеоприходованныхПартий;
					НаборЗаписейДоходыИРасходы.Расход=Выборка.СуммаУпр;
					НаборЗаписейДоходыИРасходы.ШапкаДокумента=ШапкаДокумента;
					Отказ=НЕ НаборЗаписейДоходыИРасходы.Приход() ИЛИ Отказ;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли;
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(КомплектацияАвтомобилей.СуммаУпр),0) КАК СуммаУпр
		|ИЗ
		|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
		|ГДЕ
		|	КомплектацияАвтомобилей.Регистратор = &Регистратор";
		Запрос.УстановитьПараметр("Регистратор",ШапкаДокумента.Ссылка);
		Выборка=Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.СуммаУпр<>0 Тогда
				НаборЗаписейДоходыИРасходы=Движения.ДоходыИРасходы;
				НаборЗаписейДоходыИРасходы.ДокументОбъект=ЭтотОбъект;
				НаборЗаписейДоходыИРасходы.ВУпрВалюте=Истина;
				НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов=Справочники.СтатьиДоходовИРасходов.СебестоимостьНеоприходованныхПартий;
				НаборЗаписейДоходыИРасходы.Расход=Выборка.СуммаУпр;
				НаборЗаписейДоходыИРасходы.ШапкаДокумента=ШапкаДокумента;
				Отказ=НЕ НаборЗаписейДоходыИРасходы.Приход() ИЛИ Отказ;
			КонецЕсли; 
		КонецЕсли; 
		Возврат НЕ Отказ;
	КонецЕсли;
	
	Если ШапкаДокумента.ХозОперация<>Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия Тогда
		// Если среди возвращенного товара есть комиссионный, то отсторнируем реализованные товары.
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	КомплектацияАвтомобилей.Автомобиль,
		|	КомплектацияАвтомобилей.СкладКомпании,
		|	КомплектацияАвтомобилей.Номенклатура,
		|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры,
		|	КомплектацияАвтомобилей.СтатусПартии,
		|	КомплектацияАвтомобилей.Партия,
		|	КомплектацияАвтомобилей.ГТД,
		|	КомплектацияАвтомобилей.Количество,
		|	КомплектацияАвтомобилей.Сумма,
		|	КомплектацияАвтомобилей.СуммаНДС,
		|	КомплектацияАвтомобилей.СуммаБезНДС,
		|	КомплектацияАвтомобилей.СуммаУпр,
		|	КомплектацияАвтомобилей.СуммаНДСУпр,
		|	КомплектацияАвтомобилей.СуммаБезНДСУпр,
		|	КомплектацияАвтомобилей.СуммаПродажи,
		|	КомплектацияАвтомобилей.СуммаПродажиУпр,
		|	КомплектацияАвтомобилей.ХозОперация,
		|	КомплектацияАвтомобилей.СтавкаНДС
		|ИЗ
		|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
		|ГДЕ
		|	КомплектацияАвтомобилей.Регистратор = &Регистратор
		|	И КомплектацияАвтомобилей.Номенклатура ССЫЛКА Справочник.Номенклатура";
		Запрос.УстановитьПараметр("Регистратор",ШапкаДокумента.Ссылка);
		НаборЗаписейРеализованныеТовары=Движения.РеализованныеТовары;
		НаборЗаписейРеализованныеТовары.ДокументОбъект=ЭтотОбъект;
		НаборЗаписейРеализованныеТовары.Сторно=Истина;
		НаборЗаписейРеализованныеТовары.ЕстьАвтомобиль = Истина;
		НаборЗаписейРеализованныеТовары.ПоБазовомуКоличеству=Ложь;
		НаборЗаписейРеализованныеТовары.РезультатЗапросаПоПартиям=Запрос.Выполнить().Выгрузить();
		НаборЗаписейРеализованныеТовары.РезультатЗапросаПоГТД=НаборЗаписейРеализованныеТовары.РезультатЗапросаПоПартиям.Скопировать();
		НаборЗаписейРеализованныеТовары.ШапкаДокумента=ШапкаДокумента;
		Отказ=НЕ НаборЗаписейРеализованныеТовары.Приход() ИЛИ Отказ;
		// продажи
		Если НЕ Отказ Тогда
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			             |	КомплектацияАвтомобилей.ВидДвижения,
			             |	КомплектацияАвтомобилей.Автомобиль,
			             |	КомплектацияАвтомобилей.Номенклатура,
			             |	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры,
			             |	КомплектацияАвтомобилей.СтатусПартии,
			             |	КомплектацияАвтомобилей.Партия,
			             |	КомплектацияАвтомобилей.ГТД,
			             |	КомплектацияАвтомобилей.СтавкаНДС,
			             |	КомплектацияАвтомобилей.Количество,
			             |	КомплектацияАвтомобилей.Сумма,
			             |	КомплектацияАвтомобилей.СуммаНДС,
			             |	КомплектацияАвтомобилей.СуммаБезНДС,
			             |	КомплектацияАвтомобилей.СуммаУпр,
			             |	КомплектацияАвтомобилей.СуммаНДСУпр,
			             |	КомплектацияАвтомобилей.СуммаБезНДСУпр
			             |ИЗ
			             |	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
			             |ГДЕ
			             |	КомплектацияАвтомобилей.Регистратор = &Регистратор
			             |	И КомплектацияАвтомобилей.Номенклатура ССЫЛКА Справочник.Номенклатура";
			Запрос.УстановитьПараметр("Регистратор",ШапкаДокумента.Ссылка);
			НаборЗаписейПродажи = Движения.Продажи;
			НаборЗаписейПродажи.ДокументОбъект            = ЭтотОбъект;
			НаборЗаписейПродажи.РезультатЗапросаПоПартиям = Запрос.Выполнить().Выгрузить();
			НаборЗаписейПродажи.СкладКомпании             = ШапкаДокумента.СкладКомпании;
			НаборЗаписейПродажи.Сторно                    = Истина;
			НаборЗаписейПродажи.ПоБазовомуКоличеству      = Ложь;
			НаборЗаписейПродажи.Покупатель                = ШапкаДокумента.Контрагент;
			НаборЗаписейПродажи.ДоговорВзаиморасчетов     = ШапкаДокумента.ДоговорВзаиморасчетов;
			НаборЗаписейПродажи.ПодразделениеКомпании     = ШапкаДокумента.ПодразделениеКомпании;
			НаборЗаписейПродажи.Комиссия                  = (ШапкаДокумента.ХозОперация=Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия);
			НаборЗаписейПродажи.ШапкаДокумента            = ШапкаДокумента;
			НаборЗаписейПродажи.ЕстьАвтомобиль            = Истина;
			Запрос=Новый Запрос("
			|ВЫБРАТЬ
			|	КомплектацияАвтомобилей.Автомобиль КАК Автомобиль,
			|	КомплектацияАвтомобилей.Номенклатура КАК Номенклатура,
			|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	КомплектацияАвтомобилей.Партия КАК Партия,
			|	КомплектацияАвтомобилей.ГТД КАК ГТД,
			|	СУММА(КомплектацияАвтомобилей.Сумма) КАК Сумма,
			|	СУММА(КомплектацияАвтомобилей.СуммаНДС) КАК СуммаНДС,
			|	СУММА(КомплектацияАвтомобилей.СуммаБезНДС) КАК СуммаБезНДС,
			|	СУММА(КомплектацияАвтомобилей.СуммаУпр) КАК СуммаУпр,
			|	СУММА(КомплектацияАвтомобилей.СуммаНДСУпр) КАК СуммаНДСУпр,
			|	СУММА(КомплектацияАвтомобилей.СуммаБезНДСУпр) КАК СуммаБезНДСУпр
			|ИЗ
			|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
			|ГДЕ
			|	КомплектацияАвтомобилей.Регистратор В (
			|		ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			ВозвратОтПокупателяАвтомобилейАвтомобили.ДокументПродажи
			|		ИЗ
			|			Документ.ВозвратОтПокупателяАвтомобилей.Автомобили КАК ВозвратОтПокупателяАвтомобилейАвтомобили
			|		ГДЕ
			|			ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка = &Ссылка
			|	) И 
			|	КомплектацияАвтомобилей.Автомобиль                 В (&Автомобили) И 
			|	КомплектацияАвтомобилей.Партия                     В (&Партии) И 
			|	КомплектацияАвтомобилей.СтатусПартии               = &СтатусПартии И 
			|	КомплектацияАвтомобилей.Номенклатура               В (&Номенклатура) И 
			|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры В (&ХарактеристикиНоменклатуры) И 
			|	КомплектацияАвтомобилей.ВидДвижения = &ВидДвижения
			|СГРУППИРОВАТЬ ПО
			|	КомплектацияАвтомобилей.Автомобиль,
			|	КомплектацияАвтомобилей.Номенклатура,
			|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры,
			|	КомплектацияАвтомобилей.Партия,
			|	КомплектацияАвтомобилей.ГТД,
			|	КомплектацияАвтомобилей.Регистратор");
			Запрос.УстановитьПараметр("ВидДвижения",                ВидДвиженияНакопления.Расход);
			Запрос.УстановитьПараметр("СтатусПартии",               Перечисления.СтатусыПартий.ТоварКупленный);
			Запрос.УстановитьПараметр("Ссылка",                     ШапкаДокумента.Ссылка);
			Запрос.УстановитьПараметр("Автомобили",                 НаборЗаписейПродажи.РезультатЗапросаПоПартиям.ВыгрузитьКолонку("Автомобиль"));
			Запрос.УстановитьПараметр("Партии",                     НаборЗаписейПродажи.РезультатЗапросаПоПартиям.ВыгрузитьКолонку("Партия"));
			Запрос.УстановитьПараметр("Номенклатура",               НаборЗаписейПродажи.РезультатЗапросаПоПартиям.ВыгрузитьКолонку("Номенклатура"));
			Запрос.УстановитьПараметр("ХарактеристикиНоменклатуры", НаборЗаписейПродажи.РезультатЗапросаПоПартиям.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
			НаборЗаписейПродажи.КэшСебестоимостиПриКомиссии = Запрос.Выполнить().Выгрузить();
			Отказ = НЕ НаборЗаписейПродажи.Приход() ИЛИ Отказ;
		КонецЕсли;
	Иначе
		// товар возвращает комиссионер. отсторнируем передачу на комиссию оборудования
		НаборЗаписейПартииОтданные = Движения.ПартииТоваровОтданные;
		НаборЗаписейПартииОтданные.ДокументОбъект        = ЭтотОбъект;
		НаборЗаписейПартииОтданные.Сторно                = Истина;
		НаборЗаписейПартииОтданные.Контрагент            = ШапкаДокумента.Контрагент;
		НаборЗаписейПартииОтданные.ДоговорВзаиморасчетов = ШапкаДокумента.ДоговорВзаиморасчетов;
		НаборЗаписейПартииОтданные.ШапкаДокумента        = ШапкаДокумента;
		НаборЗаписейПартииОтданные.ПоБазовомуКоличеству  = Ложь;
		НаборЗаписейПартииОтданные.ЕстьАвтомобиль        = Истина;
		Запрос = Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	ВозвратОтПокупателяАвтомобилейАвтомобили.Автомобиль КАК Автомобиль,
		             |	ВозвратОтПокупателяАвтомобилейТовары.Номенклатура КАК Номенклатура,
		             |	ВозвратОтПокупателяАвтомобилейТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		             |	ВозвратОтПокупателяАвтомобилейАвтомобили.ДокументПродажи КАК ДокументПередачи,
		             |	ВозвратОтПокупателяАвтомобилейТовары.СуммаНДС КАК СуммаНДС,
		             |	ВозвратОтПокупателяАвтомобилейТовары.Сумма КАК Сумма,
		             |	ВозвратОтПокупателяАвтомобилейТовары.СуммаВсего КАК СуммаВсего,
		             |	ВозвратОтПокупателяАвтомобилейТовары.Количество КАК Количество
		             |ИЗ
		             |	Документ.ВозвратОтПокупателяАвтомобилей.Товары КАК ВозвратОтПокупателяАвтомобилейТовары
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратОтПокупателяАвтомобилей.Автомобили КАК ВозвратОтПокупателяАвтомобилейАвтомобили
		             |		ПО (ВозвратОтПокупателяАвтомобилейТовары.Ссылка = &Ссылка)
		             |			И ВозвратОтПокупателяАвтомобилейТовары.ИдентификаторАвтомобиля = ВозвратОтПокупателяАвтомобилейАвтомобили.ИдентификаторАвтомобиля
		             |			И ВозвратОтПокупателяАвтомобилейТовары.Ссылка = ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка
		             |ГДЕ
		             |	ВозвратОтПокупателяАвтомобилейТовары.Ссылка = &Ссылка
		             |	И ВозвратОтПокупателяАвтомобилейТовары.Номенклатура ССЫЛКА Справочник.Номенклатура";
		Запрос.УстановитьПараметр("Ссылка", ШапкаДокумента.Ссылка);
		НаборЗаписейПартииОтданные.РезультатЗапросаПоТоварам=Запрос.Выполнить();
		Отказ=НЕ НаборЗаписейПартииОтданные.Приход() ИЛИ Отказ;
		Если НЕ Отказ Тогда
			НаборЗаписейПартииОтданные.Записать();
		КонецЕсли; 
		// Товар возвращает комиссионер. отсторнируем передачу на комиссию опций, установленных производителем.
		Запрос=Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВозвратОтПокупателяАвтомобилейАвтомобили.ДокументПродажи,
		|	ВозвратОтПокупателяАвтомобилейАвтомобили.Автомобиль
		|ПОМЕСТИТЬ
		|	ТаблицаАвтомобилей
		|ИЗ
		|	Документ.ВозвратОтПокупателяАвтомобилей.Автомобили КАК ВозвратОтПокупателяАвтомобилейАвтомобили
		|ГДЕ
		|	ВозвратОтПокупателяАвтомобилейАвтомобили.Ссылка = &Ссылка
		|;
		|
		|ВЫБРАТЬ
		|	ПартииТоваровОтданные.Автомобиль КАК Автомобиль,
		|	ПартииТоваровОтданные.Контрагент КАК Контрагент,
		|	ПартииТоваровОтданные.Номенклатура КАК Номенклатура,
		|	ПартииТоваровОтданные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПартииТоваровОтданные.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
		|	ПартииТоваровОтданные.ДокументПередачи КАК ДокументПередачи,
		|	ПартииТоваровОтданные.Партия КАК Партия,
		|	ПартииТоваровОтданные.ГТД КАК ГТД,
		|	СУММА(ВЫБОР
		|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ПартииТоваровОтданные.Количество
		|		ИНАЧЕ
		|			-ПартииТоваровОтданные.Количество
		|	КОНЕЦ) КАК Количество,
		|	СУММА(ВЫБОР
		|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ПартииТоваровОтданные.Сумма
		|		ИНАЧЕ
		|			-ПартииТоваровОтданные.Сумма
		|	КОНЕЦ) КАК Сумма,
		|	СУММА(ВЫБОР
		|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ПартииТоваровОтданные.СуммаУпр
		|		ИНАЧЕ
		|			-ПартииТоваровОтданные.СуммаУпр
		|	КОНЕЦ) КАК СуммаУпр,
		|	СУММА(ВЫБОР
		|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ПартииТоваровОтданные.СуммаНДС
		|		ИНАЧЕ
		|			-ПартииТоваровОтданные.СуммаНДС
		|	КОНЕЦ) КАК СуммаНДС,
		|	СУММА(ВЫБОР
		|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ПартииТоваровОтданные.СуммаСебестоимостиУпр
		|		ИНАЧЕ
		|			-ПартииТоваровОтданные.СуммаСебестоимостиУпр
		|	КОНЕЦ) КАК СуммаСебестоимостиУпр,
		|	СУММА(ВЫБОР
		|		КОГДА ПартииТоваровОтданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ПартииТоваровОтданные.СуммаСебестоимостиРегл
		|		ИНАЧЕ
		|			-ПартииТоваровОтданные.СуммаСебестоимостиРегл
		|	КОНЕЦ) КАК СуммаСебестоимостиРегл
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОтданные КАК ПартииТоваровОтданные
		|ГДЕ
		|	ПартииТоваровОтданные.Период <= &НаДату И 
		|	ПартииТоваровОтданные.Номенклатура = &ОпцияПроизводителя И 
		|	(ПартииТоваровОтданные.Автомобиль, ПартииТоваровОтданные.Регистратор) В 
		|	(ВЫБРАТЬ
		|		ТаблицаАвтомобилей.Автомобиль,
		|		ТаблицаАвтомобилей.ДокументПродажи
		|	ИЗ
		|		ТаблицаАвтомобилей КАК ТаблицаАвтомобилей)
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровОтданные.Автомобиль,
		|	ПартииТоваровОтданные.Контрагент,
		|	ПартииТоваровОтданные.Номенклатура,
		|	ПартииТоваровОтданные.ХарактеристикаНоменклатуры,
		|	ПартииТоваровОтданные.ДоговорВзаиморасчетов,
		|	ПартииТоваровОтданные.ДокументПередачи,
		|	ПартииТоваровОтданные.Партия,
		|	ПартииТоваровОтданные.ГТД
		|";
		Запрос.УстановитьПараметр("НаДату", ШапкаДокумента.МоментВремени.Дата);
		Запрос.УстановитьПараметр("Ссылка", ШапкаДокумента.Ссылка);
		Запрос.УстановитьПараметр("ОпцияПроизводителя",Справочники.Номенклатура.ОпцияПроизводителя);
		Выборка=Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НаборЗаписейПартииОтданные=Движения.ПартииТоваровОтданные;
			НоваяЗапись=НаборЗаписейПартииОтданные.Добавить();
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период=ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор=ШапкаДокумента.Ссылка;
			НоваяЗапись.Автомобиль=Выборка.Автомобиль;
			НоваяЗапись.Контрагент=Выборка.Контрагент;
			НоваяЗапись.Номенклатура=Выборка.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры=Выборка.ХарактеристикаНоменклатуры;
			НоваяЗапись.ДоговорВзаиморасчетов=Выборка.ДоговорВзаиморасчетов;
			НоваяЗапись.ДокументПередачи=Выборка.ДокументПередачи;
			НоваяЗапись.Партия=Выборка.Партия;
			НоваяЗапись.ГТД=Выборка.ГТД;
			НоваяЗапись.Количество=-Выборка.Количество;
			НоваяЗапись.Сумма=-Выборка.Сумма;
			НоваяЗапись.СуммаУпр=-Выборка.СуммаУпр;
			НоваяЗапись.СуммаНДС=-Выборка.СуммаНДС;
			НоваяЗапись.СуммаСебестоимостиУпр=-Выборка.СуммаСебестоимостиУпр;
			НоваяЗапись.СуммаСебестоимостиРегл=-Выборка.СуммаСебестоимостиРегл;
			НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
		КонецЦикла;
	КонецЕсли;
	
	// доходы и расходы
	// получим себестоимость
	Если ШапкаДокумента.ХозОперация=Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателя Тогда
		СебестоимостьАвтомобилейУпр  = 0;
		СебестоимостьОборудованияУпр = 0;
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ОстаткиАвтомобилей.СуммаУпр),0) КАК СуммаУпр
		|ИЗ
		|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
		|ГДЕ
		|	ОстаткиАвтомобилей.Регистратор = &Регистратор
		|	И (НЕ ОстаткиАвтомобилей.СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварПринятыйКомиссия))";
		Запрос.УстановитьПараметр("Регистратор",ШапкаДокумента.Ссылка);
		Выборка=Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СебестоимостьАвтомобилейУпр = -Выборка.СуммаУпр;
		КонецЕсли; 
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(КомплектацияАвтомобилей.СуммаУпр),0) КАК СуммаУпр
		|ИЗ
		|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
		|ГДЕ
		|	КомплектацияАвтомобилей.Регистратор = &Регистратор
		|	И (НЕ КомплектацияАвтомобилей.СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварПринятыйКомиссия))";
		Запрос.УстановитьПараметр("Регистратор",ШапкаДокумента.Ссылка);
		Выборка=Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СебестоимостьОборудованияУпр = - Выборка.СуммаУпр;
		КонецЕсли; 
		// Итоговая Себестоимость автомобилей
		Если СебестоимостьАвтомобилейУпр <> 0 Тогда
			НаборЗаписейДоходыИРасходы = Движения.ДоходыИРасходы;
			НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
			Если БалансВедетсяПоПодразделениям Тогда
				НаборЗаписейДоходыИРасходы.Подразделение      = ШапкаДокумента.СкладКомпании.ПодразделениеКомпании;
			КонецЕсли;
			НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
			НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.СебестоимостьАвтомобилей;
			НаборЗаписейДоходыИРасходы.Расход                 = СебестоимостьАвтомобилейУпр;
			НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
			Отказ = НЕ НаборЗаписейДоходыИРасходы.Расход() ИЛИ Отказ;
		КонецЕсли;
		
		Если СебестоимостьОборудованияУпр <> 0 Тогда
			НаборЗаписейДоходыИРасходы = Движения.ДоходыИРасходы;
			НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
			Если БалансВедетсяПоПодразделениям Тогда
				НаборЗаписейДоходыИРасходы.Подразделение      = ШапкаДокумента.СкладКомпании.ПодразделениеКомпании;
			КонецЕсли;
			НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Истина;
			НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.Себестоимость;
			НаборЗаписейДоходыИРасходы.Расход                 = СебестоимостьОборудованияУпр;
			НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
			Отказ = НЕ НаборЗаписейДоходыИРасходы.Расход() ИЛИ Отказ;
		КонецЕсли;
		// Итог СуммаВсего
		Если ШапкаДокумента.СуммаАвтомобилей<>0 Тогда
			НаборЗаписейДоходыИРасходы = Движения.ДоходыИРасходы;
			НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
			Если БалансВедетсяПоПодразделениям Тогда
				НаборЗаписейДоходыИРасходы.Подразделение      = ШапкаДокумента.СкладКомпании.ПодразделениеКомпании;
			КонецЕсли;
			НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Ложь;
			НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.НачислениеДебиторскойЗадолженностиПоАвтомобилям;
			НаборЗаписейДоходыИРасходы.Доход                  = ШапкаДокумента.СуммаАвтомобилей;
			НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
			Отказ=НЕ НаборЗаписейДоходыИРасходы.Расход() ИЛИ Отказ;
		КонецЕсли;
		Если ШапкаДокумента.СуммаДопОборудования<>0 Тогда
			НаборЗаписейДоходыИРасходы = Движения.ДоходыИРасходы;
			НаборЗаписейДоходыИРасходы.ДокументОбъект         = ЭтотОбъект;
			Если БалансВедетсяПоПодразделениям Тогда
				НаборЗаписейДоходыИРасходы.Подразделение      = ШапкаДокумента.СкладКомпании.ПодразделениеКомпании;
			КонецЕсли;
			НаборЗаписейДоходыИРасходы.ВУпрВалюте             = Ложь;
			НаборЗаписейДоходыИРасходы.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.НачислениеДебиторскойЗадолженностиПоТовару;
			НаборЗаписейДоходыИРасходы.Доход                  = ШапкаДокумента.СуммаДопОборудования;
			НаборЗаписейДоходыИРасходы.ШапкаДокумента         = ШапкаДокумента;
			Отказ=НЕ НаборЗаписейДоходыИРасходы.Расход() ИЛИ Отказ;
		КонецЕсли;
	КонецЕсли;
	
	Если ШапкаДокумента.ХозОперация=Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия Тогда
		// Возможно, что возврат производится на склад, на котором подразделение не совпадает с подразделением договора.
		ПодразделениеСклад = Справочники.ПодразделенияКомпании.ПолучитьБалансовоеПодразделение(ШапкаДокумента.СкладКомпании.ПодразделениеКомпании, ШапкаДокумента.Дата);
		ПодразделениеДоговор = Справочники.ПодразделенияКомпании.ПолучитьБалансовоеПодразделение(ШапкаДокумента.ДоговорВзаиморасчетов.ПодразделениеКомпании, ШапкаДокумента.Дата);
		БалансовыеПодразделенияНеРавны = (ПодразделениеДоговор<>ПодразделениеСклад);
		Если БалансВедетсяПоПодразделениям И БалансовыеПодразделенияНеРавны Тогда
			// получим себестоимость
			ОстаткиАвтомобилей=Движения.ОстаткиАвтомобилей;
			КомплектацияАвтомобилей=Движения.КомплектацияАвтомобилей;
			СебестоимостьАвтомобилей = -(ОстаткиАвтомобилей.Итог("СуммаУпр")+КомплектацияАвтомобилей.Итог("СуммаУпр"));
			
			НаборЗаписейДиР = Движения.ДоходыИРасходы;
			НаборЗаписейДиР.Подразделение = ШапкаДокумента.СкладКомпании.ПодразделениеКомпании;
			НаборЗаписейДиР.ДокументОбъект = ЭтотОбъект;
			НаборЗаписейДиР.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.КорректировкаБалансаПоПодразделениям;
			НаборЗаписейДиР.ВУпрВалюте = Истина;
			НаборЗаписейДиР.Доход = СебестоимостьАвтомобилей;
			Отказ = НЕ НаборЗаписейДиР.Приход() ИЛИ Отказ;
			
			АвтомобилиОтданные=Движения.АвтомобилиОтданные;
			ПартииТоваровОтданные=Движения.ПартииТоваровОтданные;
			СебестоимостьАвтомобилейОтданные = -(АвтомобилиОтданные.Итог("СуммаСебестоимостиУпр")+ПартииТоваровОтданные.Итог("СуммаСебестоимостиУпр"));
			
			НаборЗаписейДиР = Движения.ДоходыИРасходы;
			НаборЗаписейДиР.Подразделение = ШапкаДокумента.ДоговорВзаиморасчетов.ПодразделениеКомпании;
			НаборЗаписейДиР.ДокументОбъект = ЭтотОбъект;
			НаборЗаписейДиР.СтатьяДоходовИРасходов = Справочники.СтатьиДоходовИРасходов.КорректировкаБалансаПоПодразделениям;
			НаборЗаписейДиР.ВУпрВалюте = Истина;
			НаборЗаписейДиР.Доход = СебестоимостьАвтомобилейОтданные;
			Отказ = НЕ НаборЗаписейДиР.Расход() ИЛИ Отказ;
		КонецЕсли;	
	КонецЕсли;
	
	Возврат НЕ Отказ;
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
