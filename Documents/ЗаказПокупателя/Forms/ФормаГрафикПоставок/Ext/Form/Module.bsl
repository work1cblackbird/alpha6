///////////////////////////////////////////////////////////////////////////////
// Модуль формы "График поставок"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Количество = 0 Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Не задано количество'"));
	КонецЕсли;
	
	Коэффициент = ?(ЗначениеЗаполнено(Параметры.ЕдиницаИзмерения.Коэффициент), Параметры.ЕдиницаИзмерения.Коэффициент, 1);
	ЕдиницаИзмерения = Параметры.ЕдиницаИзмерения;
	ЗаказПокупателя = Параметры.ЗаказПокупателя;
	ИдентификаторСтроки = Параметры.ИдентификаторСтроки;
	Номенклатура = Параметры.Номенклатура;
	ХарактеристикаНоменклатуры = Параметры.ХарактеристикаНоменклатуры;
	Количество = Параметры.Количество;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГрафикПоставок.Количество/&Коэффициент КАК Количество,
	|	ГрафикПоставок.ДатаПоставки,
	|	ГрафикПоставок.Контрагент,
	|	ГрафикПоставок.ДатаПоступления,
	|	ГрафикПоставок.Информация
	|ИЗ
	|	РегистрСведений.ГрафикПоставок КАК ГрафикПоставок
	|ГДЕ
	|	ГрафикПоставок.ЗаказПокупателя     = &Ссылка
	|	И ГрафикПоставок.ИдентификаторСтроки = &ИдентификаторСтроки";
	
	Запрос.УстановитьПараметр("Ссылка",              Параметры.ЗаказПокупателя);
	Запрос.УстановитьПараметр("ИдентификаторСтроки", Параметры.ИдентификаторСтроки);
	Запрос.УстановитьПараметр("Коэффициент",         Коэффициент);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ГрафикПоставок.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	ТекстНоменклатура = Строка(Параметры.Номенклатура);
	
	Если ЗначениеЗаполнено(Параметры.ХарактеристикаНоменклатуры) Тогда
		ТекстНоменклатура = ТекстНоменклатура + "[" + Строка(Параметры.ХарактеристикаНоменклатуры) + "]";
	КонецЕсли;
	
	Заголовок = НСтр("ru = 'График поставок номенклатуры: ""'") + ТекстНоменклатура + """";
	
	Элементы.ГруппаСписокПоставщиков.Заголовок = НСтр("ru = 'Поставщики номенклатуры: ""'") + ТекстНоменклатура + """";
	
	ЕстьХарактеристика = ЗначениеЗаполнено(Параметры.ХарактеристикаНоменклатуры);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПокупателейОстатки.ЗаказаноОстаток,
	|	ЗаказыПокупателейОстатки.РезервОстаток,
	|	ЗаказыПокупателейОстатки.СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(
	|			,
	|			Заказ = &Ссылка
	|			И Номенклатура = &Номенклатура" + ?(ЕстьХарактеристика, "
	|			И ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры", "")+") КАК ЗаказыПокупателейОстатки";
	
	Запрос.УстановитьПараметр("Номенклатура", Параметры.Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", Параметры.ХарактеристикаНоменклатуры);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Элементы.ДекорацияЗаказано.Заголовок = НСтр("ru = 'Количество заказа:'") + Символы.НПП + Формат(Выборка.ЗаказаноОстаток, "ЧЦ=15; ЧДЦ=3; ЧН=0");
		Элементы.ДекорацияВРезерве.Заголовок = НСтр("ru = 'В резерве:'") + Символы.НПП + Формат(Выборка.РезервОстаток, "ЧЦ=15; ЧДЦ=3; ЧН=0");
		
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыРаспределениеОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыРаспределение.Остатки(
	|			,
	|			ЗаказПокупателя = &Ссылка
	|			И Номенклатура = &Номенклатура" + ?(ЕстьХарактеристика, "
	|			И ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры", "")+") КАК ЗаказыРаспределениеОстатки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Элементы.ДекорацияРаспределено.Заголовок = "Распределено: " + Формат(Выборка.КоличествоОстаток, "ЧЦ=15; ЧДЦ=3; ЧН=0");
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваров.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ
	|	ТаблицаПоставщиков
	|ИЗ
	|	РегистрНакопления.ПартииТоваровКомпании КАК ПартииТоваровКомпании
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ПО
	|	ПартииТоваровКомпании.Номенклатура = &Номенклатура
	|	И ПартииТоваровКомпании.Регистратор = ПоступлениеТоваров.Ссылка
	|ГДЕ
	|	ПартииТоваровКомпании.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ПартииТоваровКомпании.Количество > 0
	|	И ПартииТоваровКомпании.Номенклатура = &Номенклатура" + ?(ЕстьХарактеристика, "
	|	И ПартииТоваровКомпании.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры", "")+"
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваров.Контрагент
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПоставщиков.Контрагент КАК Контрагент,
	|	0 КАК СрокПоставки,
	|	999 КАК ПолеСортировки,
	|	ЕСТЬNULL(ЗаказыПоставщикамОстатки.ЗаказаноОстаток, 0) КАК Заказано,
	|	ЕСТЬNULL(ЗаказыРаспределениеОстатки.КоличествоОстаток, 0) КАК Распределено
	|ИЗ
	|	ТаблицаПоставщиков КАК ТаблицаПоставщиков
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(,
	|		Номенклатура = &Номенклатура"
			+ ?(ЕстьХарактеристика, " И ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры", "")+") КАК ЗаказыПоставщикамОстатки
	|ПО
	|	ТаблицаПоставщиков.Контрагент = ЗаказыПоставщикамОстатки.Контрагент
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ЗаказыРаспределение.Остатки(,
	|		ЗаказПоставщика ССЫЛКА Документ.ЗаказПоставщику
	|		 И Номенклатура = &Номенклатура"
			+ ?(ЕстьХарактеристика, " И ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры", "")+") КАК ЗаказыРаспределениеОстатки
	|ПО
	|	ТаблицаПоставщиков.Контрагент = ЗаказыРаспределениеОстатки.ЗаказПоставщика.Контрагент
	|УПОРЯДОЧИТЬ ПО
	|	ПолеСортировки
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СписокПоставщиков.Добавить();
		НоваяСтрока.Поставщик    = Выборка.Контрагент;
		НоваяСтрока.СрокПоставки = Выборка.СрокПоставки;
		НоваяСтрока.Заказано     = Выборка.Заказано;
		НоваяСтрока.Распределено = Выборка.Распределено;
	КонецЦикла;
	
КонецПроцедуры //ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте при открытии формы, до показа окна пользователю.
//
// Параметры:
//  Отказ - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Настройка кнопок командной панели табличной части
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ГрафикПоставок");
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события возникающего на клиенте при выполнении команды "Сохранить" на сервере.
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаСервере
Процедура СохранитьИзмененияНаСервере()
	
	НаборЗаписей = РегистрыСведений.ГрафикПоставок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИдентификаторСтроки.Установить(ИдентификаторСтроки);
	
	ПредставлениеПоставки = "";
	Для Каждого СтрокаГрафика Из ГрафикПоставок Цикл
		Если Количество = 0 Тогда
			Прервать;
		КонецЕсли;
		Если СтрокаГрафика.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		КоличествоЗаказа = Мин(Количество, СтрокаГрафика.Количество);
		Запись = НаборЗаписей.Добавить();
		Запись.ИдентификаторСтроки        = ИдентификаторСтроки;
		Запись.ЗаказПокупателя            = ЗаказПокупателя;
		Запись.Номенклатура               = Номенклатура;
		Запись.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатуры;
		Запись.Количество                 = КоличествоЗаказа*Коэффициент;
		Запись.ДатаПоставки               = СтрокаГрафика.ДатаПоставки;
		Запись.Контрагент                 = СтрокаГрафика.Контрагент;
		Запись.ДатаПоступления            = СтрокаГрафика.ДатаПоступления;
		Запись.Информация                 = СтрокаГрафика.Информация;
		
		Количество = Количество - КоличествоЗаказа;
		
		ПредставлениеПоставки = ПредставлениеПоставки + ?(ПредставлениеПоставки = "", "", "; ") + Строка(КоличествоЗаказа) + " " + ЕдиницаИзмерения + "," + Символы.НПП + НСтр("ru = 'дата поставки:'") + Символы.НПП + Формат(СтрокаГрафика.ДатаПоставки, "ДФ=dd.MM.yy");
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры //СохранитьИзмененияНаСервере()

// Обработчик события возникающего на клиенте при выполнении команды "Сохранить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	// Обработает в контексте сервера
	СохранитьИзмененияНаСервере();
	Закрыть(ПредставлениеПоставки);
	
КонецПроцедуры //Процедура Применить()

#КонецОбласти

