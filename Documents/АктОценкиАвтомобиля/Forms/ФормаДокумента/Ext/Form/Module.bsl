///////////////////////////////////////////////////////////////////////////////
// Модуль основной формы документа "Акт оценки автомобиля"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец УтверждениеДокументов
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ОграничитьВыборКонтактныхЛиц(Элементы.Контрагент);
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	
	РазрешитьРедактированиеЦенИСумм = ПраваИНастройкиПользователя.Значение(
		"РедактированиеЦенИСуммВНоменклатурныхТаблицах", Объект);
	РаботаСФормой.РазрешитьРедактированиеЦенИСумм(
		РаботаСФормой.ТиповыеПоляСуммовыхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм
	);
	РаботаСФормой.ОткрытьФормуТолькоДляПросмотра(ЭтотОбъект, Объект);
	
	УстановитьМаркуАвтомобиляПоУмолчанию();
	УстановитьПараметрВыбораМодели();
	НастроитьПоляГодаВыпуска();
	СоздатьСтраницыОценки();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПрочитатьДокументСогласования();
		НастроитьПараметрыВыбораЭлементовФормы();
		ЗаполнитьКонтролируемыеСвойстваАвтомобиля();
		ЗаполнитьДополнительныеРеквизитыХарактеристикАвтомобиля();
		ОбновитьСлужебныеДанныеОПрисоединенныхФайлах(ЭтотОбъект);
		УправлениеДиалогомНаСервере();
		
	КонецЕсли;
	
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец УтверждениеДокументов
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;	
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия = Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанАвтомобиль" И Источник.ВладелецФормы = ЭтотОбъект Тогда
		
		Объект.Автомобиль = Параметр.Автомобиль;
		АвтомобильПриИзменении(Элементы.Автомобиль);
		Возврат;
		
	КонецЕсли;
	
	Если ИмяСобытия = "ЗаписанКонтрагент" И Источник.ВладелецФормы = ЭтотОбъект Тогда
		
		Объект.Контрагент = Параметр;
		КонтрагентПриИзменении(Элементы.Контрагент);
		Возврат;
		
	КонецЕсли;
	
	Если ИмяСобытия = "ЗаписанДокументИзменениеЦенАвтомобилей" Тогда
		
		ПрочитатьДокументСогласования();
		УправлениеДиалогомНаСервере();
		Возврат;
		
	КонецЕсли;
	
	Если ИмяСобытия = "УдалениеПрисоединенногоФайла" И Источник.ВладелецФормы = ЭтотОбъект Тогда
		
		УдалитьСсылкиНаПрисоединенныйФайл(Параметр);
		ОбновитьСлужебныеДанныеОПрисоединенныхФайлах(ЭтотОбъект);
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец УтверждениеДокументов
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПрочитатьДокументСогласования();
	НастроитьПараметрыВыбораЭлементовФормы();
	ЗаполнитьКонтролируемыеСвойстваАвтомобиля();
	ЗаполнитьДополнительныеРеквизитыХарактеристикАвтомобиля();
	ОбновитьСлужебныеДанныеОПрисоединенныхФайлах(ЭтотОбъект);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
			
	Отказ = Отказ Или РаботаСФормойКлиент.НачатьПроверкуПодразделенияДокументаИПользователя(
		Объект.ПодразделениеКомпании,
		Новый ОписаниеОповещения(
			"ПроверкаПодразделенияДокументаИПользователяЗавершение",
			ЭтотОбъект,
			Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)
		)
	);

	ПроверитьЗаполнениеЦенРынка(Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	НастроитьПараметрыВыбораЭлементовФормы();
	ЗаполнитьДополнительныеРеквизитыХарактеристикАвтомобиля();
	ОбновитьСлужебныеДанныеОПрисоединенныхФайлах(ЭтотОбъект);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормойКлиент.ОповеститьОЗаписиДокумента(Объект.Ссылка);
	ЗаписатьСсылкуНаДокументВПараметрыОписанияОповещенияОЗакрытии();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.АктОценкиАвтомобиля.ДатаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	// Вызываем общий обработчик события выбора одного из пунктов меню доступных хоз. операций.
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	
	// Определим структуру параметров обработки текущего события
	ПараметрыДействия = Новый Структура;
	
	// Обработаем событие в контексте сервера
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	
	// Вызываем обработчик результата выполнения
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.АктОценкиАвтомобиля.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	КонтрагентПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.АктОценкиАвтомобиля.КонтрагентПриИзменении(Объект, ПараметрыДействия);
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Объект.Контрагент, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	АвтомобильПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура АвтомобильПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.АктОценкиАвтомобиля.АвтомобильПриИзменении(Объект, ПараметрыДействия);
	ЗаполнитьКонтролируемыеСвойстваАвтомобиля();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НижняяЦенаРынкаПриИзменении(Элемент)
	
	ПроверитьЗаполнениеЦенРынка();
	
КонецПроцедуры

&НаКлиенте
Процедура ВерхняяЦенаРынкаПриИзменении(Элемент)
	
	ПроверитьЗаполнениеЦенРынка();
	
КонецПроцедуры

&НаКлиенте
Процедура ИтоговаяЦенаПриИзменении(Элемент)
	
	Объект.ДатаОценки = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура ОсмотрПроизведенПриИзменении(Элемент)
	
	НастроитьВидимостьПереключателяОсмотр();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОсновныеХарактеристики

&НаКлиенте
Процедура МаркаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	МаркаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура МаркаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.АктОценкиАвтомобиля.МаркаПриИзменении(Объект, ПараметрыДействия);
	УстановитьПараметрВыбораМодели();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	МодельПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура МодельПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.АктОценкиАвтомобиля.МодельПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомплектацияПриИзменении(Элемент)
	
	Если Объект.Модель = ПредопределенноеЗначение("Справочник.Модели.ПустаяСсылка") Тогда
		Объект.Комплектация = ПредопределенноеЗначение("Справочник.ВариантыКомплектации.ПустаяСсылка");
		Возврат;
	Иначе
		ПараметрыДействия = Новый Структура;
		КомплектацияПриИзмененииНаСервере(ПараметрыДействия);
		ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура КомплектацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.АктОценкиАвтомобиля.КомплектацияПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПТСПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПТСПриИзменении(Элемент)
	
	ПТСПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ГодВыпускаПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодВыпускаПриИзменении(Элемент)
	
	ГодВыпускаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПробегПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПробегПриИзменении(Элемент)
	
	ПробегПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СвидетельствоРегистрацииТСПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СвидетельствоРегистрацииТСПриИзменении(Элемент)
	
	СвидетельствоРегистрацииТСПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НомерДвигателяПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерДвигателяПриИзменении(Элемент)
	
	НомерДвигателяПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НомерКузоваПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерКузоваПриИзменении(Элемент)
	
	НомерКузоваПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НомерШассиПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерШассиПриИзменении(Элемент)
	
	НомерШассиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипСалонаПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСалонаПриИзменении(Элемент)
	
	ТипСалонаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипДвигателяПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДвигателяПриИзменении(Элемент)
	
	ТипДвигателяПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипКПППриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКПППриИзменении(Элемент)
	
	ТипКПППриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипКузоваПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКузоваПриИзменении(Элемент)
	
	ТипКузоваПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЦветПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветПриИзменении(Элемент)
	
	ЦветПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЦветСалонаПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветСалонаПриИзменении(Элемент)
	
	ЦветСалонаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтролируемыеСвойстваАвтомобиляСРасхождениями

&НаКлиенте
Процедура КонтролируемыеСвойстваАвтомобиляСРасхождениямиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "КонтролируемыеСвойстваАвтомобиляСРасхождениямиДействиеЗаменитьВДокументе" Тогда
		
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = КонтролируемыеСвойстваАвтомобиляСРасхождениями.НайтиПоИдентификатору(ВыбраннаяСтрока);
		УстановитьЗначениеИзКарточкиАвтомобиля(ТекущиеДанные);
		КонтролируемыеСвойстваАвтомобиляСРасхождениями.Удалить(ТекущиеДанные);
		Модифицированность = Истина;
		УправлениеДиалогомНаСервере();
		
	ИначеЕсли Поле.Имя = "КонтролируемыеСвойстваАвтомобиляСРасхождениямиДействиеЗаменитьВАвтомобиле" Тогда
		
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = КонтролируемыеСвойстваАвтомобиляСРасхождениями.НайтиПоИдентификатору(ВыбраннаяСтрока);
		УстановитьЗначениеВКарточкуАвтомобиля(ТекущиеДанные);
		КонтролируемыеСвойстваАвтомобиляСРасхождениями.Удалить(ТекущиеДанные);
		Модифицированность = Истина;
		УправлениеДиалогомНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗамечания

&НаКлиенте
Процедура ЗамечанияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ СтрНачинаетсяС(Поле.Имя, "ЗамечанияМедиаФайлы") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЭтоПолеКомандаПосмотреть = (Поле.Имя = Элементы.ЗамечанияМедиаФайлыПосмотреть.Имя);
	ЭтоПолеКомандаДобавить = (Поле.Имя = Элементы.ЗамечанияМедиаФайлыДобавить.Имя);
	
	Если Элемент.ТекущиеДанные.ЕстьПрисоединенныеФайлы И ЭтоПолеКомандаПосмотреть Тогда
	
		ОткрытьКарусельПрисоединенныхФайлов(Элемент.ТекущиеДанные.КлючСтроки);
		
	ИначеЕсли ЭтоПолеКомандаДобавить Тогда
		
		Контекст = Новый Структура("ИмяТаблицы,ИдентификаторСтроки", "Замечания", ВыбраннаяСтрока);

		Если Объект.Ссылка.Пустая() Тогда
		
			ПараметрыЗаписиНового = ЗащищенныеФункцииКлиент.СоздатьПараметрыЗаписиНовогоОбъектаНаКлиенте(); 
			ПараметрыЗаписиНового.РезультатСобытия = Контекст;
			ПараметрыЗаписиНового.ОбработчикСобытия = Новый ОписаниеОповещения("РаботаСФайломПослеЗаписи", ЭтотОбъект);
			
			ЗащищенныеФункцииКлиент.ЗаписатьНовыйОбъектНаКлиенте(ЭтотОбъект, ПараметрыЗаписиНового);
			Возврат;
		Иначе 
			ОбработчикОповещения = Новый ОписаниеОповещения ("ДобавлениеФайловВТаблицы", ЭтотОбъект, Контекст);
			РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, УникальныйИдентификатор,,,ОбработчикОповещения);

		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура РаботаСФайломПослеЗаписи(Контекст, ДополнительныеПараметры) Экспорт
	
	ОбработчикОповещения = Новый ОписаниеОповещения ("ДобавлениеФайловВТаблицы", ЭтотОбъект, Контекст);
	РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, УникальныйИдентификатор,,,ОбработчикОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайловВТаблицы(ПрисоединенныеФайлы, Контекст) Экспорт
	
	Если ПрисоединенныеФайлы.Количество() > 0 Тогда 
		КлючСтрокиСвязаннойСДобавленнымиФайлами = Объект[Контекст.ИмяТаблицы]
			.НайтиПоИдентификатору(Контекст.ИдентификаторСтроки)
			.КлючСтроки;

		Для Каждого НовыйПрисоединенныйФайл Из ПрисоединенныеФайлы Цикл
			
			НоваяСвязьФайлаИСтрокиТаблицы = Объект.ПрисоединенныеФайлыХарактеристикИЗамечаний.Добавить();
			НоваяСвязьФайлаИСтрокиТаблицы.КлючСтроки = КлючСтрокиСвязаннойСДобавленнымиФайлами;
			НоваяСвязьФайлаИСтрокиТаблицы.Файл       = НовыйПрисоединенныйФайл;
			
		КонецЦикла;
		
		Модифицированность = Истина;
		ОбновитьСлужебныеДанныеОПрисоединенныхФайлах(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗамечанияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НоваяСтрока И Не ОтменаРедактирования Тогда
		
		Элемент.ТекущиеДанные.КлючСтроки = Новый УникальныйИдентификатор();
		Элемент.ТекущиеДанные.МедиаФайлыДобавить = ПредставлениеМедиаФайловДобавить();
		Элемент.ТекущиеДанные.МедиаФайлыПосмотреть = ПредставлениеМедиаФайловПоказать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗамечанияПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура СоздатьКонтрагента(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ДанныеКлиентаВРЛВ(Объект.ДокументОснование));
	ПараметрыФормы.Вставить("НеобходимоОповеститьПослеЗаписи", Истина);
	
	ОткрытьФорму(
		"Справочник.Контрагенты.ФормаОбъекта",
		ПараметрыФормы,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАвтомобиль(Команда)
	
	Если Объект.Контрагент.Пустая() Тогда
		
		ПредложитьВыбратьКонтрагента();
		Возврат;
		
	КонецЕсли;
	
	НачатьСозданиеАвтомобиля();
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПТС(Команда)
	
	СоздатьДокументНаАвтомобиль(ПредопределенноеЗначение("Перечисление.ВидыДокументов.ПТС"), "ПТС");
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиСРТС(Команда)
	
	СоздатьДокументНаАвтомобиль(
		ПредопределенноеЗначение("Перечисление.ВидыДокументов.СвидетельствоОРегистрацииТС"),
		"СвидетельствоРегистрацииТС"
	);
	
КонецПроцедуры

&НаКлиенте
Процедура Согласовать(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ПараметрыЗаписиНового = ЗащищенныеФункцииКлиент.СоздатьПараметрыЗаписиНовогоОбъектаНаКлиенте();
		ПараметрыЗаписиНового.ОбработчикСобытия = "СогласованиеПродолжить";
		ЗащищенныеФункцииКлиент.ЗаписатьНовыйОбъектНаКлиенте(ЭтотОбъект, ПараметрыЗаписиНового);
		Возврат;
		
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Обработчик = Новый ОписаниеОповещения("Подключаемый_СогласованиеПродолжить", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
		
	КонецЕсли;
	
	СогласованиеПродолжить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКонтрагента(Команда)
	
	ПараметрыФормы = Новый Структура("РежимВыбора,ТекущаяСтрока", Истина, Объект.Контрагент);
	
	Если
		ЗначениеЗаполнено(Объект.ДокументОснование)
		И ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РабочийЛистВыкупаАвтомобиля")
		И Объект.Контрагент.Пустая()
	Тогда
	
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(
			ПараметрыФормы,
			ДанныеВладельцаИзРабочегоЛистаВыкупа(Объект.ДокументОснование)
		);
	
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаСписка", ПараметрыФормы, Элементы.Контрагент);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьВидимостьАвтомобиля()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"АвтомобильГруппаДеталиПроблемы",
		"Видимость",
		ОбновитьИнформациюОРасхожденииВСвойствахАвтомобиля()
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Автомобиль",
		"АвтоМаксимальнаяШирина",
		НЕ Объект.Автомобиль.Пустая()
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СоздатьАвтомобиль",
		"Видимость",
		Объект.Автомобиль.Пустая()
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Автомобиль",
		"АвтоОтметкаНезаполненного",
		Истина
	);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьПереключателяОсмотр()
	
	ЕстьВладелецИАвтомобиль = НЕ Объект.Контрагент.Пустая() И НЕ Объект.Автомобиль.Пустая();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ОсмотрПроизведен",
		"ТолькоПросмотр",
		НЕ ЕстьВладелецИАвтомобиль
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДекорацияНеЗаполненыАвтомобильВладелец",
		"Видимость",
		НЕ ЕстьВладелецИАвтомобиль
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДекорацияОсмотрНеПроизведен",
		"Видимость",
		ЕстьВладелецИАвтомобиль И НЕ Объект.ОсмотрПроизведен
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДекорацияОсмотрПроизведен",
		"Видимость",
		ЕстьВладелецИАвтомобиль И Объект.ОсмотрПроизведен
	);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПоляГодаВыпуска()

	ФорматГода = АвтомобилиСервер.ПолучитьФорматПредставленияГодаВыпускаАвтомобиля(Объект);	
	Элементы.ГодВыпуска.Формат = ФорматГода;
	Элементы.ГодВыпуска.ФорматРедактирования = ФорматГода;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМаркуАвтомобиляПоУмолчанию()
	
	Если ЗначениеЗаполнено(Объект.Марка) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяМаркаПоУмолчанию = УчетныеПолитикиСервер.Значение(
		"МаркаПоУмолчанию",
		ТекущаяДатаСеанса(),
		ПараметрыСеанса.ПодразделениеКомпании		
	);
	
	Если ТекущаяМаркаПоУмолчанию = Справочники.Марки.ПустаяСсылка() Тогда
		
		ТекущаяМаркаПоУмолчанию = Справочники.Марки.МаркаНеУказана;
		
	КонецЕсли;
	
	Объект.Марка = ТекущаяМаркаПоУмолчанию;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрВыбораМодели()
	
	Если НеСтандартнаяМарка(Объект.Марка) И Элементы.Найти("Модель") <> Неопределено Тогда
		
		УправлениеДиалогомСервер.ОбновитьПараметрВыбора(
			Элементы.Модель.ПараметрыВыбора,
			"Отбор.Марка",
			Объект.Марка
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НеСтандартнаяМарка(ВыбраннаяМарка)
	
	Возврат НЕ ВыбраннаяМарка = Справочники.Марки.МаркаНеУказана;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ЗаполнитьПодтверждающиеДокументы(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, ДополнительныеПараметры);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры // Подключаемый_ЗаполнитьПодтверждающиеДокументы()

&НаКлиенте
Процедура ЗаписатьСсылкуНаДокументВПараметрыОписанияОповещенияОЗакрытии()
	
	Если НеНужноДобавлятьСсылкуНаДокумент() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры.Вставить("НовыйАктОценкиАвтомобиля", Объект.Ссылка);
	ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры.Вставить("АвтомобильВАкте", Объект.Автомобиль);
	
КонецПроцедуры

&НаКлиенте
Функция НеНужноДобавлятьСсылкуНаДокумент()
	
	Возврат ОписаниеОповещенияОЗакрытии = Неопределено
		ИЛИ (ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры <> Неопределено
			И ТипЗнч(ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры) <> Тип("Структура"));
	
КонецФункции

&НаКлиенте
Процедура СоздатьДокументНаАвтомобиль(ВидДокумента, ИмяРеквизита)
	
	Если Объект.Автомобиль.Пустая() Тогда
		
		ВызватьИсключение НСтр("ru = 'Для создания документа необходимо указать автомобиль'");
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Владелец", Объект.Автомобиль);
	ПараметрыФормы.Вставить("ВидПодтверждающегоДокумента", ВидДокумента);
	Контекст = Новый Структура("ИмяРеквизита,Результат", ИмяРеквизита);
	
	Обработчик = Новый ОписаниеОповещения("Подключаемый_СозданиеПодтверждающегоДокументаЗавершение",
		ЭтотОбъект, Контекст);
	
	ОткрытьФорму(
		"Справочник.ПодтверждающиеДокументы.ФормаОбъекта",
		ПараметрыФормы,
		ЭтотОбъект,
		,
		,
		,
		Обработчик,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СозданиеПодтверждающегоДокументаЗавершение(Результат, Контекст)  Экспорт
	
	ИмяРеквизита = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Контекст, "ИмяРеквизита", "");
	Документ = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Контекст, "Результат");
	
	Если ЗначениеЗаполнено(Документ) И НЕ ПустаяСтрока(ИмяРеквизита) Тогда
		
		Объект[ИмяРеквизита] = Документ;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтролируемыеСвойстваАвтомобиля()
	
	КонтролируемыеСвойства = Новый Структура();
	КонтролируемыеСвойства.Вставить("ГодВыпуска");
	КонтролируемыеСвойства.Вставить("НомерДвигателя");
	КонтролируемыеСвойства.Вставить("НомерКузова");
	КонтролируемыеСвойства.Вставить("НомерШасси");
	КонтролируемыеСвойства.Вставить("Цвет", "ЦветКузова");
	КонтролируемыеСвойства.Вставить("ГосНомер");
	КонтролируемыеСвойства.Вставить("ТипСалона");
	КонтролируемыеСвойства.Вставить("ТипКПП");
	КонтролируемыеСвойства.Вставить("ТипДвигателя");
	КонтролируемыеСвойства.Вставить("ТипКузова");
	КонтролируемыеСвойства.Вставить("Паспорт", "ПТС");
	КонтролируемыеСвойства.Вставить("Свидетельство", "СвидетельствоРегистрацииТС");
	
	Если Объект.Автомобиль.Пустая() Тогда
		КонтролируемыеСвойства.Вставить("VIN");
		КонтролируемыеСвойства.Вставить("Марка");
		КонтролируемыеСвойства.Вставить("Модель");
		КонтролируемыеСвойства.Вставить("ВариантКомплектации", "Комплектация");
	КонецЕсли;
	
	КонтролируемыеСвойстваАвтомобиля = Новый ФиксированнаяСтруктура(КонтролируемыеСвойства);
	
КонецПроцедуры

&НаСервере
Функция ОбновитьИнформациюОРасхожденииВСвойствахАвтомобиля()
	
	Если Объект.Автомобиль.Пустая() Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ПоляСРазличиями = ДайПоляСРазличиями(Объект.Автомобиль);
	ЗаполнитьКонтролируемыеСвойстваАвтомобиляСРасхождениями(ПоляСРазличиями);
	Возврат ПоляСРазличиями.Количество() > 0;
	
КонецФункции

&НаСервере
Функция ДайПоляСРазличиями(Автомобиль)
	
	РеквизитыАвтомобиля = АвтомобилиСервер.ДанныеАвтомобиля(Объект.Автомобиль);
	ПоляСРазличиями = Новый Структура();
	
	Для Каждого КонтролируемоеСвойство Из КонтролируемыеСвойстваАвтомобиля Цикл
		
		ВАвтомобиле = РеквизитыАвтомобиля[КонтролируемоеСвойство.Ключ];
		
		ПолеВДокументе = ?(
			ЗначениеЗаполнено(КонтролируемоеСвойство.Значение),
			КонтролируемоеСвойство.Значение,
			КонтролируемоеСвойство.Ключ
		);
		ВДокументе = Объект[ПолеВДокументе];
		
		Если ПолеВДокументе = "VIN" Тогда
			ВДокументе = СокрЛП(ВДокументе);
		КонецЕсли;
		
		Если (ЗначениеЗаполнено(ВАвтомобиле) ИЛИ ЗначениеЗаполнено(ВДокументе)) И ВАвтомобиле <> ВДокументе Тогда
			
			Значения = Новый Структура;
			Значения.Вставить("ВАвтомобиле", ВАвтомобиле);
			Значения.Вставить("ВДокументе", ВДокументе);
			ПоляСРазличиями.Вставить(КонтролируемоеСвойство.Ключ, Значения);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПоляСРазличиями;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьКонтролируемыеСвойстваАвтомобиляСРасхождениями(ПоляСРазличиями)
	
	КонтролируемыеСвойстваАвтомобиляСРасхождениями.Очистить();
	МетаданныеДокумента = Метаданные.Документы.АктОценкиАвтомобиля;
	
	Для Каждого Поле Из ПоляСРазличиями Цикл
		
		НоваяСтрока = КонтролируемыеСвойстваАвтомобиляСРасхождениями.Добавить();
		НоваяСтрока.КлючСвойства = Поле.Ключ;
		НоваяСтрока.ЗначениеВАвтомобиле = Поле.Значение.ВАвтомобиле;
		НоваяСтрока.ЗначениеВДокументе = Поле.Значение.ВДокументе;
		НоваяСтрока.ДействиеЗаменитьВАвтомобиле = НСтр("ru = 'Заменить значение в карточке автомобиля'");
		НоваяСтрока.ДействиеЗаменитьВДокументе = НСтр("ru = 'Заменить значение в документе'");
		
		Реквизит = КонтролируемыеСвойстваАвтомобиля[Поле.Ключ];
		
		Если НЕ ЗначениеЗаполнено(Реквизит) Тогда
			
			Реквизит = Поле.Ключ;
			
		КонецЕсли;
		
		ОписаниеРеквизита = МетаданныеДокумента.Реквизиты.Найти(Реквизит);
		
		Если ОписаниеРеквизита <> Неопределено Тогда
			
			НоваяСтрока.ИмяСвойства = ОписаниеРеквизита.Представление();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеИзКарточкиАвтомобиля(ТекущиеДанные)
	
	КлючСвойства = ТекущиеДанные.КлючСвойства;
	Реквизит = КонтролируемыеСвойстваАвтомобиля[КлючСвойства];
		
	Если НЕ ЗначениеЗаполнено(Реквизит) Тогда
		
		Реквизит = КлючСвойства;
		
	КонецЕсли;
	
	Объект[Реквизит] = ТекущиеДанные.ЗначениеВАвтомобиле;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеВКарточкуАвтомобиля(ТекущиеДанные)
	
	АвтомобилиКлиент.ОбновитьСвойствоАвтомобиля(
		ТекущиеДанные.КлючСвойства,
		ТекущиеДанные.ЗначениеВДокументе,
		Объект.Автомобиль
	);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СоздатьАвтомобиль(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Автомобиль = ДополнительныеПараметры;
	
	ПараметрыДействия = Новый Структура;
	АвтомобильПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеКлиентаВРЛВ(РабочийЛистВыкупа)
	
	Если ЗначениеЗаполнено(РабочийЛистВыкупа) Тогда
		
		РеквизитыРЛВ = Новый Структура();
		РеквизитыРЛВ.Вставить("Пол", "ПолКлиента");
		РеквизитыРЛВ.Вставить("ФормаСобственности", "ФормаСобственности");
		РеквизитыРЛВ.Вставить("ВозрастнаяГруппа", "ВозрастнаяГруппа");
		РеквизитыРЛВ.Вставить("НаименованиеПолное", "ОбращениеККлиенту");
		Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РабочийЛистВыкупа, РеквизитыРЛВ);
		
	КонецЕсли;
	
	Возврат Новый Структура();
	
КонецФункции

&НаКлиенте
Процедура НачатьСозданиеАвтомобиля()
	
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("Марка", Объект.Марка);
	ДанныеЗаполнения.Вставить("Модель", Объект.Модель);
	ДанныеЗаполнения.Вставить("ВариантКомплектации", Объект.Комплектация);
	ДанныеЗаполнения.Вставить("ТипСалона", Объект.ТипСалона);
	ДанныеЗаполнения.Вставить("ТипКПП", Объект.ТипКПП);
	ДанныеЗаполнения.Вставить("ТипДвигателя", Объект.ТипДвигателя);
	ДанныеЗаполнения.Вставить("ТипКузова", Объект.ТипКузова);
	ДанныеЗаполнения.Вставить("ГодВыпуска", Объект.ГодВыпуска);
	ДанныеЗаполнения.Вставить("VIN", Объект.VIN);
	ДанныеЗаполнения.Вставить("НомерДвигателя", Объект.НомерДвигателя);
	ДанныеЗаполнения.Вставить("НомерКузова", Объект.НомерКузова);
	ДанныеЗаполнения.Вставить("НомерШасси", Объект.НомерШасси);
	ДанныеЗаполнения.Вставить("Цвет", Объект.ЦветКузова);
	ДанныеЗаполнения.Вставить("ЦветСалона", Объект.ЦветСалона);
	ДанныеЗаполнения.Вставить("ДатаНачалаГарантии", Объект.ДатаНачалаГарантии);
	ДанныеЗаполнения.Вставить("ДатаОкончанияГарантии", Объект.ДатаОкончанияГарантии);
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("Владелец", Объект.Контрагент);
	ДопПараметры.Вставить("Пробег", Объект.Пробег);
	ДопПараметры.Вставить("ГосНомер", Объект.ГосНомер);
	
	ПараметрыФормы = Новый Структура(
		"ЗначенияЗаполнения,ПараметрыВыбора,НеобходимоОповеститьПослеЗаписи",
		ДанныеЗаполнения,
		ДопПараметры,
		Истина
	);
	
	Автомобиль = УжеЕстьТакойАвтомобиль(Объект.VIN);
	
	Если Автомобиль <> Неопределено Тогда
		
		Оповещение = Новый ОписаниеОповещения("Подключаемый_СоздатьАвтомобиль", ЭтотОбъект, Автомобиль);
		ТекстВопроса = СТрШаблон(
			НСтр("ru = 'Карточка автомобиля с VIN: %1 уже есть в базе. Выбрать ее в акт осмотра и оценки?'"),
			Объект.VIN
		);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
	
		ОткрытьФорму(
			"Справочник.Автомобили.ФормаОбъекта",
			ПараметрыФормы,
			ЭтотОбъект,
			УникальныйИдентификатор,
			,
			,
			,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложитьВыбратьКонтрагента()
	
	Кнопки = Новый СписокЗначений();
	Кнопки.Добавить("Продолжить", НСтр("ru = 'Продолжить'"));
	Кнопки.Добавить("Вернуться", НСтр("ru = 'Вернуться'"));
	
	ТекстВопроса = НСтр("ru = 'Рекомендуется сначала создать карточку контрагента, а затем создавать карточку автомобиля.'"); // BSLLS-off
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПредложитьВыбратьКонтрагентаЗавершение", ЭтотОбъект), ТекстВопроса, Кнопки);

КонецПроцедуры

&НаКлиенте
Процедура ПредложитьВыбратьКонтрагентаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> "Продолжить" Тогда
		
		Возврат;
		
	КонецЕсли;
	
	НачатьСозданиеАвтомобиля();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УжеЕстьТакойАвтомобиль(VIN)
	
	Если НЕ ЗначениеЗаполнено(VIN) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Автомобили.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Автомобили КАК Автомобили
	|ГДЕ
	|	Автомобили.VIN = &VIN
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Автомобили.Ссылка
	|ИЗ
	|	Справочник.Автомобили КАК Автомобили
	|ГДЕ
	|	Автомобили.ОригинальныйVIN = &VIN";
	
	Запрос.УстановитьПараметр("VIN", VIN);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции // УжеЕстьТакойАвтомобиль()

&НаКлиенте
Процедура СогласоватьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПрочитатьДокументСогласования();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьВидимостьСогласованияЦены(Форма)
	
	ЕстьДокумент = НЕ Форма.ДокументИзменениеЦенАвтомобилей.Пустая();
	ЕстьРасхождениеСумм = Форма.ЦенаСогласована И Форма.Объект.ИтоговаяЦена <> Форма.СогласованнаяЦена;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Согласовать",
		"Видимость",
		НЕ ЕстьДокумент
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"НадписьИзменениеЦенАвтомобилей",
		"Видимость",
		ЕстьДокумент
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ИндикацияРасхожденияСумм",
		"Видимость",
		ЕстьРасхождениеСумм
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ИтоговаяЦена",
		"ТолькоПросмотр",
		Форма.ЦенаСогласована
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ДатаОценки",
		"ТолькоПросмотр",
		Форма.ЦенаСогласована
	);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДокументСогласования()
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОписаниеДокумента = АвтомобилиСПробегомЗащищенныеФункцииСервер.ПолучитьДокументСогласованияЦены(Объект.Ссылка);
	
	Если ОписаниеДокумента = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДокументИзменениеЦенАвтомобилей = ОписаниеДокумента.Ссылка;
	СогласованнаяЦена = РаботаСКурсамиВалют.ПересчитатьВВалюту(
		ОписаниеДокумента.Цена,
		ОписаниеДокумента.ВалютаДокумента,
		Объект.ВалютаДокумента,
		Объект.Дата
	);
	
	ЦенаСогласована = ОписаниеДокумента.Проведен;
	НадписьИзменениеЦенАвтомобилей = ?(ЦенаСогласована,
		СтрШаблон(НСтр("ru = 'Согласован. Сумма согласования составляет %1 %2'"),
			СогласованнаяЦена , ОписаниеДокумента.ВалютаПредставление),
		НСтр("ru = 'Ожидает согласования'")
	);
	
КонецПроцедуры // ПрочитатьДокументСогласования()

&НаСервере
Процедура НастроитьВидимостьДанныхАвтомобиля()
	
	ЕстьАвтомобиль = НЕ Объект.Автомобиль.Пустая();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПТС",
		"Доступность",
		ЕстьАвтомобиль
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СвидетельствоРегистрацииТС",
		"Доступность",
		ЕстьАвтомобиль
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"VIN",
		"ТолькоПросмотр",
		ЕстьАвтомобиль
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Марка",
		"ТолькоПросмотр",
		ЕстьАвтомобиль
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Модель",
		"ТолькоПросмотр",
		ЕстьАвтомобиль
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Комплектация",
		"ТолькоПросмотр",
		ЕстьАвтомобиль
	);
	
КонецПроцедуры // НастроитьВидимостьДанныхАвтомобиля()

&НаКлиенте
Процедура Подключаемый_СогласованиеПродолжить(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		
		Записать();
		
	Исключение
		
		ОбщегоНазначенияАвтосалонВызовСервера.ОшибкаЖурналаРегистрации(
			НСтр(
				"ru = 'Акт оценки автомобиля. Ошибка записи документа'",
				ОбщегоНазначенияКлиент.КодОсновногоЯзыка()
			),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),
			Объект.Ссылка
		);
		
		ПоказатьПредупреждение(, НСтр("ru = 'Не удалось записать: ""Акт оценки автомобиля""'"));
		
		Возврат;
		
	КонецПопытки;
	
	СогласованиеПродолжить();
	
КонецПроцедуры

&НаКлиенте
Процедура СогласованиеПродолжить(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Оповещение = Новый ОписаниеОповещения(
		"СогласоватьЗавершение",
		ЭтотОбъект
	);
	
	ОткрытьФорму(
		"Документ.ИзменениеЦенАвтомобилей.ФормаОбъекта",
		Новый Структура("Основание", Объект.Ссылка),
		ЭтотОбъект,
		КлючУникальности,
		,
		,
		Оповещение
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеЦенРынка(Отказ = Ложь)
	
	Если Объект.ВерхняяЦенаРынка <> 0
		И Объект.ВерхняяЦенаРынка < Объект.НижняяЦенаРынка Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Верхняя цена по рынку не может быть меньше нижней.'"),
			ЭтотОбъект,
			"Объект.ВерхняяЦенаРынка",
			,
			Отказ
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеВладельцаИзРабочегоЛистаВыкупа(РабочийЛистВыкупа)
	
	РеквизитыРЛ = Новый Структура(
		"ОтборПоНаименованию,ОтборНомерТелефона,ОтборEmail",
		"ОбращениеККлиенту",
		"ПредставлениеТелефона",
		"АдресЭлектроннойПочты"
	);
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РабочийЛистВыкупа, РеквизитыРЛ);
	
КонецФункции

#Область СвойстваИХарактеристикиАвтомобиля

&НаСервере
Процедура СоздатьСтраницыОценки()
	
	ГруппыХарактеристик = ЗапроситьГруппыХарактеристикАвтомобиля();
	
	Если ГруппыХарактеристик.Количество() = 0 Тогда
		
		СоздатьСтраницуГруппыХарактеристик(Неопределено, НСтр("ru = 'Характеристики автомобиля'"));
		Возврат;
		
	КонецЕсли;
	
	Пока ГруппыХарактеристик.Следующий() Цикл
		
		СоздатьСтраницуГруппыХарактеристик(ГруппыХарактеристик.ГруппаХарактеристик, ГруппыХарактеристик.Наименование);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗапроситьГруппыХарактеристикАвтомобиля()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ХарактеристикиАвтомобиля.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ТаблицаХарактеристикАвтомобиля
	|ИЗ
	|	&ХарактеристикиАвтомобиля КАК ХарактеристикиАвтомобиля
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ТаблицаПолученияГруппХарактеристик.Характеристика.Родитель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СВойстваИХарактеристикиАвтомобилей.ПустаяСсылка)
	|			ТОГДА &ПредставлениеПрочее
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаПолученияГруппХарактеристик.Характеристика.Родитель)
	|	КОНЕЦ КАК Наименование,
	|	ТаблицаПолученияГруппХарактеристик.Характеристика.Родитель КАК ГруппаХарактеристик
	|ИЗ
	|	ТаблицаХарактеристикАвтомобиля КАК ТаблицаПолученияГруппХарактеристик";
	
	Запрос.УстановитьПараметр("ХарактеристикиАвтомобиля", Объект.ХарактеристикиАвтомобиля.Выгрузить(, "Характеристика"));
	Запрос.УстановитьПараметр("ПредставлениеПрочее", НСтр("ru = 'Прочее'"));
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

&НаСервере
Процедура СоздатьСтраницуГруппыХарактеристик(СсылкаНаГруппу, ПредставлениеГруппы)
	
	УникальныйИдентификаторСтраницы = СтрЗаменить(Новый УникальныйИдентификатор(), "-", "");
	
	НоваяСтраница = СоздатьНовуюСтраницуГруппуХарактеристик(
		ПредставлениеГруппы,
		УникальныйИдентификаторСтраницы
	);
	НоваяТаблица = СоздатьНовоеТабличноеПолеГруппыХарактеристик(
		НоваяСтраница,
		СсылкаНаГруппу,
		УникальныйИдентификаторСтраницы
	);
	СоздатьКолонкуХарактеристикаТабличногоПоля(НоваяТаблица, СсылкаНаГруппу, УникальныйИдентификаторСтраницы);
	СоздатьКолонкуЗначениеТабличногоПоля(НоваяТаблица, УникальныйИдентификаторСтраницы);
	СоздатьИндикаторыПрисоединенныхФайловТабличногоПоля(НоваяТаблица, УникальныйИдентификаторСтраницы);
	
КонецПроцедуры

&НаСервере
Функция СоздатьНовуюСтраницуГруппуХарактеристик(Знач ПредставлениеГруппы, Знач УникальныйИдентификаторСтраницы)
	
	Результат = Элементы.Добавить(
		"СтраницаТребований" + УникальныйИдентификаторСтраницы,
		Тип("ГруппаФормы"),
		Элементы.СтраницыОсмотра
	);
	Результат.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	Результат.Заголовок   = ПредставлениеГруппы;
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СоздатьНовоеТабличноеПолеГруппыХарактеристик(Знач НоваяСтраница,
                                                     Знач СсылкаНаГруппу,
                                                     Знач УникальныйИдентификаторСтраницы)
	
	Результат = Элементы.Добавить(
		"ТаблицаХарактеристик" + УникальныйИдентификаторСтраницы,
		Тип("ТаблицаФормы"),
		НоваяСтраница
	);
	Результат.ПутьКДанным         = "Объект.ХарактеристикиАвтомобиля";
	Результат.ИзменятьСоставСтрок = Истина;
	Результат.Подсказка           = НСтр("ru = 'Список характеристик'");
	
	Если СсылкаНаГруппу <> Неопределено Тогда
	
		Результат.ОтборСтрок = Новый ФиксированнаяСтруктура("Родитель", СсылкаНаГруппу);
		
	КонецЕсли;
	
	Результат.РазрешитьПеретаскивание = Истина;
	Результат.СпособПеретаскиванияФайлов = СпособПеретаскиванияФайлов.КакФайл;
	Результат.УстановитьДействие("Выбор", "Подключаемый_ТаблицаХарактеристикВыбор");
	Результат.УстановитьДействие(
		"ПередОкончаниемРедактирования",
		"Подключаемый_ТаблицаХарактеристикПередОкончаниемРедактирования"
	);
	Результат.УстановитьДействие("ПроверкаПеретаскивания", "Подключаемый_ТаблицаХарактеристикПроверкаПеретаскивания");
	Результат.УстановитьДействие("Перетаскивание", "Подключаемый_ТаблицаХарактеристикПеретаскивание");
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ТаблицаХарактеристикВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если СтрНайти(Поле.Имя, "МедиаФайлы") = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЭтоПолеКомандаПосмотреть = СтрНачинаетсяС(Поле.Имя, "ТаблицаХарактеристикМедиаФайлыПосмотреть");
	ЭтоПолеКомандаДобавить = СтрНачинаетсяС(Поле.Имя, "ТаблицаХарактеристикМедиаФайлыДобавить");
	
	Если Элемент.ТекущиеДанные.ЕстьПрисоединенныеФайлы И ЭтоПолеКомандаПосмотреть Тогда
	
		ОткрытьКарусельПрисоединенныхФайлов(Элемент.ТекущиеДанные.КлючСтроки);
		
	ИначеЕсли ЭтоПолеКомандаДобавить Тогда
		
		Контекст = Новый Структура("ИмяТаблицы,ИдентификаторСтроки", "ХарактеристикиАвтомобиля", ВыбраннаяСтрока);

		Если Объект.Ссылка.Пустая() Тогда
		
			ПараметрыЗаписиНового = ЗащищенныеФункцииКлиент.СоздатьПараметрыЗаписиНовогоОбъектаНаКлиенте(); 
			ПараметрыЗаписиНового.РезультатСобытия = Контекст;
			ПараметрыЗаписиНового.ОбработчикСобытия = Новый ОписаниеОповещения("РаботаСФайломПослеЗаписи", ЭтотОбъект);
			
			ЗащищенныеФункцииКлиент.ЗаписатьНовыйОбъектНаКлиенте(ЭтотОбъект, ПараметрыЗаписиНового);
			Возврат;
		Иначе 
			ОбработчикОповещения = Новый ОписаниеОповещения ("ДобавлениеФайловВТаблицы", ЭтотОбъект, Контекст);
			РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, УникальныйИдентификатор,,,ОбработчикОповещения);

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТаблицаХарактеристикПередОкончаниемРедактирования(Элемент,
                                                                         НоваяСтрока,
                                                                         ОтменаРедактирования,
                                                                         Отказ)
	
	Если НоваяСтрока И Не ОтменаРедактирования Тогда
		
		Элемент.ТекущиеДанные.КлючСтроки = Новый УникальныйИдентификатор();
		Элемент.ТекущиеДанные.МедиаФайлыДобавить = ПредставлениеМедиаФайловДобавить();
		Элемент.ТекущиеДанные.МедиаФайлыПосмотреть = ПредставлениеМедиаФайловПоказать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТаблицаХарактеристикПроверкаПеретаскивания(Элемент,
                                                                  ПараметрыПеретаскивания,
                                                                  СтандартнаяОбработка,
                                                                  Строка,
                                                                  Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКолонкуХарактеристикаТабличногоПоля(Знач НоваяТаблица,
                                                     Знач СсылкаНаГруппу,
                                                     Знач УникальныйИдентификаторСтраницы)
	
	НоваяКолонка = Элементы.Добавить(
		"ХарактеристикиАвтомобиляХарактеристика" + УникальныйИдентификаторСтраницы,
		Тип("ПолеФормы"),
		НоваяТаблица
	);
	НоваяКолонка.Заголовок   = "Характеристика";
	НоваяКолонка.Вид         = ВидПоляФормы.ПолеВвода;
	НоваяКолонка.ПутьКДанным = "Объект.ХарактеристикиАвтомобиля.Характеристика";
	
	Если СсылкаНаГруппу <> Неопределено Тогда
		
		НоваяКолонка.ПараметрыВыбора = Новый ФиксированныйМассив(
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
				Новый ПараметрВыбора("Отбор.Родитель", СсылкаНаГруппу)
			)
		);
		
	КонецЕсли;
	
	НоваяКолонка.УстановитьДействие("ПриИзменении", "Подключаемый_ХарактеристикаПриИзменении");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	ТекущиеДанные.Родитель = ПолучитьРодителя(ТекущиеДанные.Характеристика);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКолонкуЗначениеТабличногоПоля(Знач НоваяТаблица, Знач УникальныйИдентификаторСтраницы)
	
	НоваяКолонка = Элементы.Добавить(
		"ХарактеристикиАвтомобиляЗначение" + УникальныйИдентификаторСтраницы,
		Тип("ПолеФормы"),
		НоваяТаблица
	);
	НоваяКолонка.Заголовок   = "Значение";
	НоваяКолонка.Вид         = ВидПоляФормы.ПолеВвода;
	НоваяКолонка.ПутьКДанным = "Объект.ХарактеристикиАвтомобиля.Значение";
	
КонецПроцедуры

&НаСервере
Процедура СоздатьИндикаторыПрисоединенныхФайловТабличногоПоля(НоваяТаблица, УникальныйИдентификаторСтраницы)
	
	#Область КомандыМедиаФайлов
	
	КомандыРаботыСФайлами = Элементы.Добавить(
		"КомандыРаботыСФайлами" + УникальныйИдентификаторСтраницы,
		Тип("ГруппаФормы"),
		НоваяТаблица
	);
	ЗаполнитьЗначенияСвойств(
		КомандыРаботыСФайлами,
		Элементы.ЗамечанияКомандыРаботыСФайлами,
		,
		"Имя,ПутьКДаннымШапки"
	);
	
	НоваяКолонка = Элементы.Добавить(
		"ТаблицаХарактеристикМедиаФайлыДобавить" + УникальныйИдентификаторСтраницы,
		Тип("ПолеФормы"),
		КомандыРаботыСФайлами
	);
	НоваяКолонка.ПутьКДанным = "Объект.ХарактеристикиАвтомобиля.МедиаФайлыДобавить";
	ЗаполнитьЗначенияСвойств(
		НоваяКолонка,
		Элементы.ЗамечанияМедиаФайлыДобавить,
		,
		"Имя,ПутьКДанным,ВыделенныйТекст"
	);
	
	НоваяКолонка = Элементы.Добавить(
		"ТаблицаХарактеристикМедиаФайлыПосмотреть" + УникальныйИдентификаторСтраницы,
		Тип("ПолеФормы"),
		КомандыРаботыСФайлами
	);
	НоваяКолонка.ПутьКДанным = "Объект.ХарактеристикиАвтомобиля.МедиаФайлыПосмотреть";
	ЗаполнитьЗначенияСвойств(
		НоваяКолонка,
		Элементы.ЗамечанияМедиаФайлыПосмотреть,
		,
		"Имя,ПутьКДанным,ВыделенныйТекст"
	);
	
	#КонецОбласти
	
	ИндикаторыПрисоединенныхФайлов = Элементы.Добавить(
		"ИндикаторыПрисоединенныхФайлов" + УникальныйИдентификаторСтраницы,
		Тип("ГруппаФормы"),
		НоваяТаблица
	);
	ЗаполнитьЗначенияСвойств(
		ИндикаторыПрисоединенныхФайлов,
		Элементы.ЗамечанияПрисоединенныеФайлыГруппа,
		,
		"Имя,ПутьКДаннымШапки"
	);
	
	НоваяКолонка = Элементы.Добавить(
		"ХарактеристикиАвтомобиляКоличествоПрисоединенныхФайлов" + УникальныйИдентификаторСтраницы,
		Тип("ПолеФормы"),
		ИндикаторыПрисоединенныхФайлов
	);
	НоваяКолонка.ПутьКДанным = "Объект.ХарактеристикиАвтомобиля.КоличествоПрисоединенныхФайлов";
	ЗаполнитьЗначенияСвойств(
		НоваяКолонка,
		Элементы.ЗамечанияКоличествоПрисоединенныхФайлов,
		,
		"Имя,ПутьКДанным,ВыделенныйТекст"
	);
	
	НоваяКолонка = Элементы.Добавить(
		"ХарактеристикиАвтомобиляЕстьПрисоединенныеФайлы" + УникальныйИдентификаторСтраницы,
		Тип("ПолеФормы"),
		ИндикаторыПрисоединенныхФайлов
	);
	НоваяКолонка.ПутьКДанным = "Объект.ХарактеристикиАвтомобиля.ЕстьПрисоединенныеФайлы";
	ЗаполнитьЗначенияСвойств(
		НоваяКолонка,
		Элементы.ЗамечанияЕстьПрисоединенныеФайлы,
		,
		"Имя,ПутьКДанным"
	);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДополнительныеРеквизитыХарактеристикАвтомобиля()
	
	Для Каждого Строка Из Объект.ХарактеристикиАвтомобиля Цикл
		
		Строка.Родитель = Строка.Характеристика.Родитель;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРодителя(Ссылка)
	
	Если Ссылка = Неопределено Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Родитель");
	
КонецФункции

#КонецОбласти

#Область УдалитьПрисоединенныеФайлы

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСлужебныеДанныеОПрисоединенныхФайлах(Форма)
	
	Для Каждого ЭлементЗамечаний Из Форма.Объект.Замечания Цикл
		
		СвязанныеПрисоединенныеФайлы = Форма
			.Объект
			.ПрисоединенныеФайлыХарактеристикИЗамечаний
			.НайтиСтроки(Новый Структура("КлючСтроки", ЭлементЗамечаний.КлючСтроки));
		ЭлементЗамечаний.ЕстьПрисоединенныеФайлы = СвязанныеПрисоединенныеФайлы.Количество();
		ЭлементЗамечаний.КоличествоПрисоединенныхФайлов = СвязанныеПрисоединенныеФайлы.Количество();
		ЭлементЗамечаний.МедиаФайлыДобавить = ПредставлениеМедиаФайловДобавить();
		ЭлементЗамечаний.МедиаФайлыПосмотреть = ПредставлениеМедиаФайловПоказать();
		
	КонецЦикла;
	
	Для Каждого ЭлементХарактеристикАвтомобиля Из Форма.Объект.ХарактеристикиАвтомобиля Цикл
		
		СвязанныеПрисоединенныеФайлы = Форма
			.Объект
			.ПрисоединенныеФайлыХарактеристикИЗамечаний
			.НайтиСтроки(Новый Структура("КлючСтроки", ЭлементХарактеристикАвтомобиля.КлючСтроки));
		ЭлементХарактеристикАвтомобиля.ЕстьПрисоединенныеФайлы = СвязанныеПрисоединенныеФайлы.Количество();
		ЭлементХарактеристикАвтомобиля.КоличествоПрисоединенныхФайлов = СвязанныеПрисоединенныеФайлы.Количество();
		ЭлементХарактеристикАвтомобиля.МедиаФайлыДобавить = ПредставлениеМедиаФайловДобавить();
		ЭлементХарактеристикАвтомобиля.МедиаФайлыПосмотреть = ПредставлениеМедиаФайловПоказать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеМедиаФайловДобавить()
	
	Возврат НСтр("ru = 'Добавить'");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеМедиаФайловПоказать()
	
	Возврат НСтр("ru = 'Показать'");
	
КонецФункции

&НаКлиенте
Процедура ОткрытьКарусельПрисоединенныхФайлов(КлючВыбраннойСтроки)
	
	ПрисоединенныеФайлыПоКлючу = ПрисоединенныеФайлыПоКлючу(Объект, КлючВыбраннойСтроки);
	
	Если ПрисоединенныеФайлыПоКлючу.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		"Документ.АктОценкиАвтомобиля.Форма.ПрисоединенныеФайлыЭлементаТаблицы",
		Новый Структура("Файлы", ПрисоединенныеФайлыПоКлючу),
		ЭтотОбъект,
		ЭтотОбъект
	);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрисоединенныеФайлыПоКлючу(Знач Объект, КлючВыбраннойСтроки)
	
	ЗаписиПрисоединенныхФайловПоКлючу = Объект
		.ПрисоединенныеФайлыХарактеристикИЗамечаний
		.НайтиСтроки(Новый Структура("КлючСтроки", КлючВыбраннойСтроки));
	
	СоответствиеТиповФайловКартинок = Новый Соответствие;
	СоответствиеТиповФайловКартинок.Вставить("bmp", "bmp");
	СоответствиеТиповФайловКартинок.Вставить("emf", "emf");
	СоответствиеТиповФайловКартинок.Вставить("gif", "gif");
	СоответствиеТиповФайловКартинок.Вставить("ico", "ico");
	СоответствиеТиповФайловКартинок.Вставить("jpg", "jpg");
	СоответствиеТиповФайловКартинок.Вставить("png", "png");
	СоответствиеТиповФайловКартинок.Вставить("tif", "tif");
	СоответствиеТиповФайловКартинок.Вставить("wmf", "wmf");
	
	КоличествоЗаписей = ЗаписиПрисоединенныхФайловПоКлючу.Количество() - 1;
	
	Пока КоличествоЗаписей >= 0 Цикл
		
		РасширениеФайла = ЗаписиПрисоединенныхФайловПоКлючу[КоличествоЗаписей].Файл.Расширение;
		Если СоответствиеТиповФайловКартинок.Получить(РасширениеФайла) = Неопределено Тогда
			ЗаписиПрисоединенныхФайловПоКлючу.Удалить(КоличествоЗаписей);
		КонецЕсли;
		
		КоличествоЗаписей = КоличествоЗаписей - 1;
		
	КонецЦикла;
	
	Возврат Объект
		.ПрисоединенныеФайлыХарактеристикИЗамечаний
		.Выгрузить(ЗаписиПрисоединенныхФайловПоКлючу)
		.ВыгрузитьКолонку("Файл");
	
КонецФункции

&НаКлиенте
Процедура УдалитьСсылкиНаПрисоединенныйФайл(Файл)
	
	СтрокиКУдалению = Объект.ПрисоединенныеФайлыХарактеристикИЗамечаний.НайтиСтроки(
		Новый Структура("Файл", Файл)
	);
	
	Для Каждого УдаляемаяСтрока Из СтрокиКУдалению Цикл
		
		Объект.ПрисоединенныеФайлыХарактеристикИЗамечаний.Удалить(УдаляемаяСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

//@skip-warning
&НаКлиенте
Процедура ПроверкаПодразделенияДокументаИПользователяЗавершение(Контекст) Экспорт
	
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЗаполнениеОбъектов
&НаКлиенте
Процедура ПослеОбработкиЗаполнения(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ПослеОбработкиЗаполненияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеОбработкиЗаполненияНаСервере()
	
	ЗаполнениеОбъектовАльфаАвто.ПослеОбработкиЗаполнения(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ЗаполнениеОбъектов

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиАльфаАвто

&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьИзменениеЦенАвтомобилейНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ДокументИзменениеЦенАвтомобилей.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.ИзменениеЦенАвтомобилей.ФормаОбъекта",
		Новый Структура("Ключ", ДокументИзменениеЦенАвтомобилей),
		ЭтотОбъект
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомАльфаАвтоСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);

	НастроитьВидимостьАвтомобиля();
	НастроитьВидимостьПереключателяОсмотр();
	НастроитьВидимостьДанныхАвтомобиля();
	НастроитьВидимостьСогласованияЦены(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
	Если ПараметрыДействия.Свойство("ЕстьПодтверждающиеДокументы") Тогда
		
		Оповещение = Новый ОписаниеОповещения(
			"Подключаемый_ЗаполнитьПодтверждающиеДокументы",
			ЭтотОбъект,
			ПараметрыДействия.ЕстьПодтверждающиеДокументы
		);
		ТекстВопроса = НСтр("ru = 'Для данного автомобиля есть СТС и СРТС. Заполнить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры = Неопределено)
	
	ТребуетсяПродолжение = УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(
		ЭтотОбъект,
		РезультатОповещения,
		ДополнительныеПараметры
	);
	
	Если НЕ ТребуетсяПродолжение Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(
	РезультатОповещения,
	ДополнительныеПараметры = Неопределено) Экспорт
	
	ТребуетсяПродолжение = УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(
		ЭтотОбъект,
		РезультатОповещения,
		ДополнительныеПараметры
	);
	
	Если НЕ ТребуетсяПродолжение Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	                                                                                                                
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, 	РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект,			РезультатОповещения);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область УтверждениеДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуУтверждения(Команда)
	
	УтверждениеДокументовКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект.Ссылка);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбработкуКомандыУтвержденияНаСервере(ПараметрыОбработки,
		ДополнительныеПараметры) Экспорт
	
	ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры);
	Оповестить("ПослеУтвержденияДокументов", Объект.Ссылка, ИмяФормы);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры)
	
	УтверждениеДокументовВызовСервера.ОбработкаКомандыФормы(ЭтотОбъект, ПараметрыОбработки.ИмяКоманды, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКомандыУтвержденияДокументов()
	
	ОбновитьКомандыУтвержденияДокументовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКомандыУтвержденияДокументовНаСервере()
	
	УтверждениеДокументовКлиентСервер.УстановитьДоступностьКнопокУтверждения(ЭтотОбъект, Объект, ТолькоПросмотр);
	УтверждениеДокументовВызовСервера.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, Объект, ТолькоПросмотр);
	
КонецПроцедуры

&НаКлиенте
Процедура ПТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	МассивВидовДокумента = Новый Массив();
	МассивВидовДокумента.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДокументов.ПТС"));
	МассивВидовДокумента.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДокументов.ЭлектронныйПТС"));
	
	// параметры формы
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("Отбор", Новый Структура("ВидПодтверждающегоДокумента, Владелец", Новый ФиксированныйМассив(МассивВидовДокумента), Объект.Автомобиль));
	
	ОткрытьФорму("Справочник.ПодтверждающиеДокументы.ФормаСписка", ПараметрыФормы, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
