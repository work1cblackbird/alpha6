#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения = "", СтандартнаяОбработка = Истина)
	
	ДанныеЗаполнения = ПроверитьВводИзПоискКлиентовИДокументов(ДанныеЗаполнения);
	
	ПродолжатьЗаполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка,
		"Контрагент"
	);
	
	Если НЕ ПродолжатьЗаполнение Тогда
		Возврат;
	КонецЕсли;
	
	Статус = Справочники.СтатусыРабочегоЛистаВыкупаАвтомобиля.Новый;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ОбработкаСобытийСправочникаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
	Заполнить(ОбъектКопирования.Ссылка);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ПередЗаписью(
		ЭтотОбъект,
		Отказ,
		РежимЗаписи,
		РежимПроведения
	); 
	
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеСвойства, "ОбновлятьКИ", Ложь) Тогда
		КомментарийТелефона = УправлениеКонтактнойИнформацией.КомментарийКонтактнойИнформации(ПредставлениеТелефонаСтрокой);
		УправлениеКонтактнойИнформациейАльфаАвто.СохранитьТелефон(Контрагент, ПредставлениеТелефона, КомментарийТелефона, Отказ);
		УправлениеКонтактнойИнформациейАльфаАвто.СохранитьЭлектроннуюПочту(Контрагент, АдресЭлектроннойПочты, Отказ);
	КонецЕсли;
	
	УправлениеКонтактнойИнформациейАльфаАвто.ПроверитьТелефонСМаскойПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПродолжатьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	Если НЕ ПродолжатьВыполнение Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиЗаполненияОбъекта

// Производит заполнение объекта на основании документа "Событие"
//
// Параметры:
//  Событие			     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_Событие(ДанныеЗаполнения, ТекстЗаполнения = "", СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПродолжатьЗаполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	
	Если НЕ ПродолжатьЗаполнение Тогда
		Возврат Истина;
	КонецЕсли;
	
	РеквизитыСобытия = Новый Структура();
	РеквизитыСобытия.Вставить("ВидПервичногоКонтакта", "ВидСобытия");
	РеквизитыСобытия.Вставить("ИсточникИнформации", "ИсточникИнформации");
	РеквизитыСобытия.Вставить("Контрагент", "Контрагент");
	РеквизитыСобытия.Вставить("ОбращениеККлиенту", "ОбращениеККлиенту");
	РеквизитыСобытия.Вставить("АдресЭлектроннойПочты", "АдресЭлектроннойПочты");
	РеквизитыСобытия.Вставить("ПредставлениеТелефона", "ПредставлениеТелефона");
	
	ЗначенияРеквизитовСобытия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, РеквизитыСобытия);
	
	Если ДополнительныеСвойства.Свойство("НовыйКонтрагент") Тогда
		
		ЗначенияРеквизитовСобытия.Контрагент = ДополнительныеСвойства.НовыйКонтрагент;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ЗначенияРеквизитовСобытия.ОбращениеККлиенту) Тогда
		
		ЗначенияРеквизитовСобытия.ОбращениеККлиенту = ЗначенияРеквизитовСобытия.Контрагент;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитовСобытия);
	
	Если ЗначениеЗаполнено(ЗначенияРеквизитовСобытия.Контрагент) Тогда
		
		Документы.РабочийЛистВыкупаАвтомобиля.КонтрагентПриИзменении(ЭтотОбъект, Неопределено);
		
	КонецЕсли;
	
	// Даже если в карточке контрагента заполнен телефон/почта заполняем эту информацию из События.
	УправлениеКонтактнойИнформациейАльфаАвто.ЗаполнитьКонтактнуюИнформациюИзСобытия(ДанныеЗаполнения, ЭтотОбъект);
	
	// Возвращаем признак возможности дальнейшей обработки события.
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_Событие()

// Производит заполнение объекта на основании документа "Рабочий лист"
//
// Параметры:
//  РабочийЛист		     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_РабочийЛист(РабочийЛист, ТекстЗаполнения = "", СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(РабочийЛист) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПродолжатьЗаполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект,
		РабочийЛист,
		ТекстЗаполнения,
		СтандартнаяОбработка,
		"Автомобиль,ТипСалона,ТипКПП,ТипДвигателя,ТипКузова"
	);
	
	Если НЕ ПродолжатьЗаполнение Тогда
		Возврат Истина;
	КонецЕсли;
	
	ДокументРабочийЛист = РабочийЛист;
	
	Если РабочийЛист.ТрейдИн Тогда
		
		ХозОперация = Справочники.ХозОперации.РабочийЛистВыкупаАвтомобиляTradeIn;
		Документы.РабочийЛистВыкупаАвтомобиля.ХозОперацияПриИзменении(ЭтотОбъект, Неопределено);
		
	КонецЕсли;
	
	РеквизитыРабочегоЛиста = Новый Структура();
	РеквизитыРабочегоЛиста.Вставить("Контрагент", "Контрагент");
	РеквизитыРабочегоЛиста.Вставить("Марка", "ТрейдИнМарка");
	РеквизитыРабочегоЛиста.Вставить("Модель", "ТрейдИнМодель");
	РеквизитыРабочегоЛиста.Вставить("Пробег", "ТрейдИнПробег");
	РеквизитыРабочегоЛиста.Вставить("ГодВыпуска", "ТрейдИнГодВыпуска");
	РеквизитыРабочегоЛиста.Вставить("ОбращениеККлиенту", "ОбращениеККлиенту");
	РеквизитыРабочегоЛиста.Вставить("АдресЭлектроннойПочты", "АдресЭлектроннойПочты");
	РеквизитыРабочегоЛиста.Вставить("ПредставлениеТелефона", "ПредставлениеТелефона");
	РеквизитыРабочегоЛиста.Вставить("ИсточникИнформации", "ИсточникИнформации");
	РеквизитыРабочегоЛиста.Вставить("ВозрастнаяГруппа", "ВозрастнаяГруппа");
	РеквизитыРабочегоЛиста.Вставить("ПолКлиента", "ПолКлиента");
	РеквизитыРабочегоЛиста.Вставить("ПредполагаемыйСрок", "ПредполагаемыйСрок");
	РеквизитыРабочегоЛиста.Вставить("Автомобиль", "ТрейдИнАвтомобиль");
	
	ЗначенияРеквизитовРабочегоЛиста = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РабочийЛист, РеквизитыРабочегоЛиста);
	
	Если ПустаяСтрока(ЗначенияРеквизитовРабочегоЛиста.ОбращениеККлиенту) Тогда
		
		ЗначенияРеквизитовРабочегоЛиста.ОбращениеККлиенту = ЗначенияРеквизитовРабочегоЛиста.Контрагент;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитовРабочегоЛиста);
	
	Если ЗначениеЗаполнено(ЗначенияРеквизитовРабочегоЛиста.Контрагент) Тогда
		
		Документы.РабочийЛистВыкупаАвтомобиля.КонтрагентПриИзменении(ЭтотОбъект, Неопределено);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначенияРеквизитовРабочегоЛиста.Автомобиль) Тогда
		
		Документы.РабочийЛистВыкупаАвтомобиля.АвтомобильПриИзменении(ЭтотОбъект, Неопределено);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначенияРеквизитовРабочегоЛиста.Марка) Тогда
		
		Документы.РабочийЛистВыкупаАвтомобиля.МаркаПриИзменении(ЭтотОбъект, Неопределено);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначенияРеквизитовРабочегоЛиста.Модель) Тогда
		
		Документы.РабочийЛистВыкупаАвтомобиля.МодельПриИзменении(ЭтотОбъект, Неопределено);
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_РабочийЛист()

#КонецОбласти

Функция ПроверитьВводИзПоискКлиентовИДокументов(ДанныеЗаполнения)
	
	Если
		ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Имя")
		И ДанныеЗаполнения.Имя = "Событие"
	Тогда
		
		НовыйКонтрагент = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "Контрагент");
		
		Если ЗначениеЗаполнено(НовыйКонтрагент) Тогда
			
			ДополнительныеСвойства.Вставить("НовыйКонтрагент", НовыйКонтрагент);
			
		КонецЕсли;
		
		ДанныеЗаполнения = ДанныеЗаполнения.Событие;
		
	КонецЕсли;
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

#КонецОбласти

#КонецЕсли