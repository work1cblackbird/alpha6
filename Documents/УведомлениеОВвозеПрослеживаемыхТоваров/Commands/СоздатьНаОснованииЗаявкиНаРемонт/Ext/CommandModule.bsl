
#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ДанныеЗаполнения = ДанныеЗаполненияУвдомлений(ПараметрКоманды);
	
	Если ДанныеЗаполнения.Количество() = 0 Тогда
		// Нет прослеживаемых товаров
		Основание = Новый Структура("Основание", ПараметрКоманды);
		ОткрытьФорму(
			"Документ.УведомлениеОВвозеПрослеживаемыхТоваров.ФормаОбъекта",
			Основание,
			ПараметрыВыполненияКоманды.Источник,
			ПараметрыВыполненияКоманды.Уникальность,
			ПараметрыВыполненияКоманды.Окно);
	Иначе
		// Откроем окна для каждого документа
		Для Каждого ТекущийДокумент Из ДанныеЗаполнения Цикл
			
			Основание = Новый Структура("Основание", ТекущийДокумент);
			ОткрытьФорму(
				"Документ.УведомлениеОВвозеПрослеживаемыхТоваров.ФормаОбъекта",
				Основание,
				ПараметрыВыполненияКоманды.Источник,
				Новый УникальныйИдентификатор,
				ПараметрыВыполненияКоманды.Окно);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ДанныеЗаполненияУвдомлений(ТаможеннаяДекларация)
	
	МассивУведомлений = Новый Массив;
	
	// Получим уведомления по данным таможенной декларации
	РезультатЗапроса = Документы.УведомлениеОВвозеПрослеживаемыхТоваров.ЗапросТоварыпоОснованию(Неопределено, ТаможеннаяДекларация, Ложь);
	СписокПартийТоваров = РезультатЗапроса.Выгрузить();
	СписокПартий = СписокПартийТоваров.Скопировать();
	ПоляПоиска = "ПервичныйДокумент,КодТНВЭД,ЕдиницаИзмерения,ЕдиницаИзмеренияПрослеживаемости,СтранаПроисхождения";
	СписокПартий.Свернуть(ПоляПоиска);
	
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	
	Для Каждого ДанныеПартии Из СписокПартий Цикл
		
		ДанныеЗаполнения = Новый Структура(ПоляПоиска);
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, ДанныеПартии);
		ДанныеЗаполнения.Вставить("Основание", ТаможеннаяДекларация);
		
		// Получим данные по товарам
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ДанныеПартии);
		НайденныеТовары = СписокПартийТоваров.НайтиСтроки(СтруктураПоиска);
		ДанныеЗаполнения.Вставить("Товары", ПоместитьВоВременноеХранилище(НайденныеТовары, Новый УникальныйИдентификатор));
		
		МассивУведомлений.Добавить(ДанныеЗаполнения);
		
	КонецЦикла;
	
	Возврат МассивУведомлений;
	
КонецФункции

#КонецОбласти