// Модуль менеджера документа "Уведомление о ввозе прослеживаемых товаров"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область СозданиеНаОсновании

// Заполняет список команд создания на основании.
//
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//	 КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Возврат СозданиеНаОснованииАльфаАвто.ДобавитьКомандуСозданияНаОсновании(КомандыСоздатьНаОсновании,
		Метаданные.Документы.УведомлениеОВвозеПрослеживаемыхТоваров);

КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст = 
		"РазрешитьЧтениеИзменение
		|ГДЕ
		|	ЗначениеРазрешено(ПодразделениеКомпании)
		|	И ЗначениеРазрешено(Организация)";
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// 	 Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

// Производит расчет значений итоговых показателей по операции в целом.
//
// Параметры:
//  Объект      - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  Расширенные - Булево               - Признак получения расширенных сведений об итогах операции.
//
Функция РассчитатьИтогиОперации(Объект, Расширенные = Ложь) Экспорт
	
	// Формируем перечень основной информации об итогах операции
	ИтогиОперации = Новый Структура();
	ИтогиОперации.Вставить("СуммаДокумента", Объект.Товары.Итог("Сумма"));
	
	Если НЕ Расширенные Тогда
		Возврат ИтогиОперации;
	КонецЕсли;
	
	Возврат ИтогиОперации;
	
КонецФункции

// Заполнение документа по основанию
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//
Процедура ЗаполнитьТоварыПоОснованию(Объект) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	// Получим данные по основанию
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл,Объект.Дата);
	КурсРегл = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	
	Объект.Товары.Очистить();
	РезультатЗапроса = ЗапросТоварыпоОснованию(Объект, Объект.ДокументОснование);
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		// Заполним табличную часть
		ВыборкаПоТНВЭД = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ЗначениеЗаполнено(Объект.КодТНВЭД) Тогда
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("КодТНВЭД", Объект.КодТНВЭД);
			
			Если НЕ ВыборкаПоТНВЭД.НайтиСледующий(СтруктураПоиска) Тогда
				
				ОбщегоНазначения.СообщитьПользователю(
					НСтр("ru = 'В документе основании нет прослеживаемых товаров по указанному коду ТН ВЭД'")
				);
				Возврат;
			КонецЕсли;
			
		Иначе
			ВыборкаПоТНВЭД.Следующий();
			Объект.КодТНВЭД = ВыборкаПоТНВЭД.КодТНВЭД;
		КонецЕсли;
		
		ВыборкаТоваров = ВыборкаПоТНВЭД.Выбрать();
		
		ПерваяСтрока = Истина;
		
		Пока ВыборкаТоваров.Следующий() Цикл
			
			Если ПерваяСтрока Тогда
				Если НЕ ЗначениеЗаполнено(Объект.СтранаПроисхождения) Тогда
					Объект.СтранаПроисхождения = ВыборкаТоваров.СтранаПроисхождения;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(Объект.ЕдиницаИзмерения) Тогда
					Объект.ЕдиницаИзмерения = ВыборкаТоваров.ЕдиницаИзмерения;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(Объект.ЕдиницаИзмеренияПрослеживаемости) Тогда
					Объект.ЕдиницаИзмеренияПрослеживаемости = ВыборкаТоваров.ЕдиницаИзмеренияПрослеживаемости;
				КонецЕсли;
				Объект.ПервичныйДокумент = ВыборкаТоваров.ПервичныйДокумент;
				ПерваяСтрока = Ложь;
			КонецЕсли;
			
			Если Объект.СтранаПроисхождения <> ВыборкаТоваров.СтранаПроисхождения
				ИЛИ Объект.ЕдиницаИзмерения <> ВыборкаТоваров.ЕдиницаИзмерения
				ИЛИ Объект.ЕдиницаИзмеренияПрослеживаемости <> ВыборкаТоваров.ЕдиницаИзмеренияПрослеживаемости
				ИЛИ Объект.ПервичныйДокумент <> ВыборкаТоваров.ПервичныйДокумент Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТоваров);
			НоваяСтрока.КоличествоПрослеживаемости = ВыборкаТоваров.Количество * ВыборкаТоваров.Коэффициент;
			
			// Пересчитаем сумму
			Если Объект.ВалютаДокумента <> ВалютаРегл Тогда
				НоваяСтрока.Сумма = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
					НоваяСтрока.Сумма, ВалютаРегл, КурсРегл, Объект.ВалютаДокумента, Объект.КурсДокумента);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполнение документа по основанию
//
// Параметры:
//  Объект - ДокументСсылка - Объект, для которого выполняется обработка события.
//
Функция ДанныеДляУведомленияФНС(Объект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка КАК Ссылка,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Номер КАК Номер,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Дата КАК Дата,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация КАК Организация,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация.ИНН КАК ОрганизацияИНН,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация.КПП КАК ОрганизацияКПП,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация.ФормаСобственности КАК ОрганизацияФормаСобственности,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация.Фамилия КАК ОрганизацияФамилия,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация.Имя КАК ОрганизацияИмя,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация.Отчество КАК ОрганизацияОтчество,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация.КодИМНС КАК ОрганизацияКодИМНС,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Контрагент КАК Контрагент,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Контрагент.ФормаСобственности КАК КонтрагентФормаСобственности,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Контрагент.Фамилия КАК КонтрагентФамилия,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Контрагент.Имя КАК КонтрагентИмя,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Контрагент.Отчество КАК КонтрагентОтчество,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Контрагент.СтранаРегистрации.Код КАК СтранаРегистрацииКод,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Контрагент.НалоговыйНомер КАК НалоговыйНомер,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.КодТНВЭД.Код КАК КодТНВЭДКод,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.КодТНВЭД.Наименование КАК КодТНВЭДНаименование,
	|	ВЫБОР
	|		КОГДА УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код
	|		КОГДА УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаИзмерения ССЫЛКА Справочник.КлассификаторЕдиницИзмерения
	|			ТОГДА УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ""796""
	|	КОНЕЦ КАК КодЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаИзмеренияПрослеживаемости = ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|			ТОГДА ""796""
	|		ИНАЧЕ УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаИзмеренияПрослеживаемости.Код
	|	КОНЕЦ КАК КодЕдиницыИзмеренияПрослеж,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.РНПТ.Наименование КАК РНПТ,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент КАК ПервичныйДокумент
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Количество КАК Количество,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Сумма КАК Сумма
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров.Товары КАК УведомлениеОВвозеПрослеживаемыхТоваровТовары
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект);
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

// Получить список доступных партий по основанию
//
// Параметры:
//  Объект - ДокументСсылка - Объект, для которого выполняется обработка события.
//
Функция СписокПартийТаможеннойДекларации(Объект) Экспорт
	
	Если Объект.ХозОперация = Справочники.ХозОперации.УведомлениеОВвозеПрослеживаемыхАвтомобилей Тогда
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаможеннаяДекларацияИмпортАвтомобили.Автомобиль КАК Автомобиль,
		|	ТаможеннаяДекларацияИмпортАвтомобили.Склад КАК Склад
		|ПОМЕСТИТЬ СписокАвтомобилей
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Автомобили КАК ТаможеннаяДекларацияИмпортАвтомобили
		|ГДЕ
		|	ТаможеннаяДекларацияИмпортАвтомобили.Ссылка = &Основание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ОстаткиАвтомобилейОстатки.Партия КАК Партия
		|ИЗ
		|	РегистрНакопления.ОстаткиАвтомобилей.Остатки(
		|			&моментВремени,
		|			(Автомобиль, СкладКомпании) В
		|				(ВЫБРАТЬ
		|					СписокАвтомобилей.Автомобиль КАК Автомобиль,
		|					СписокАвтомобилей.Склад КАК Склад
		|				ИЗ
		|					СписокАвтомобилей КАК СписокАвтомобилей)) КАК ОстаткиАвтомобилейОстатки";
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаможеннаяДекларацияИмпортТовары.Партия КАК Партия
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТаможеннаяДекларацияИмпортТовары
		|ГДЕ
		|	ТаможеннаяДекларацияИмпортТовары.Ссылка = &Основание";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Основание", Объект.ДокументОснование);
	Запрос.УстановитьПараметр("МоментВремени",
		?(ЗначениеЗаполнено(Объект.Ссылка), Новый МоментВремени(Объект.Дата, Объект.Ссылка), Неопределено));
		
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Партия");
	
КонецФункции

Функция ЗапросТоварыпоОснованию(Знач Объект, Основание, ИтогиПоТНВЭД = Истина) Экспорт
	
	ХозОперацияОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "ХозОперация");
	
	// Получим данные для заполнения реквизитов по основанию
	Если ХозОперацияОснования = Справочники.ХозОперации.ТаможеннаяДекларацияИмпортАвтомобилей Тогда
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаможеннаяДекларацияИмпортАвтомобили.Автомобиль КАК Номенклатура,
		|	1 КАК Количество,
		|	1 КАК Коэффициент,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.шт) КАК ЕдиницаИзмерения,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.шт) КАК ЕдиницаИзмеренияПрослеживаемости,
		|	ТаможеннаяДекларацияИмпортАвтомобили.Автомобиль.КодТНВЭД КАК АвтомобильКодТНВЭД,
		|	ТаможеннаяДекларацияИмпортАвтомобили.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаможеннаяДекларацияИмпортАвтомобили.Автомобиль.КодОКПД2 КАК АвтомобильКодОКПД2,
		|	ТаможеннаяДекларацияИмпортАвтомобили.Ссылка.ДокументОснование КАК ПервичныйДокумент
		|ПОМЕСТИТЬ СписокАвтомобилей
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Автомобили КАК ТаможеннаяДекларацияИмпортАвтомобили
		|ГДЕ
		|	ТаможеннаяДекларацияИмпортАвтомобили.Ссылка = &Ссылка
		|	И ТаможеннаяДекларацияИмпортАвтомобили.Автомобиль.Прослеживаемый
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОстаткиАвтомобилейОстатки.Автомобиль КАК Автомобиль,
		|	ОстаткиАвтомобилейОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
		|	ОстаткиАвтомобилейОстатки.Партия КАК Партия
		|ПОМЕСТИТЬ ПартииАвтомобилей
		|ИЗ
		|	РегистрНакопления.ОстаткиАвтомобилей.Остатки(
		|			&МоментВремени,
		|			Автомобиль В
		|				(ВЫБРАТЬ
		|					СписокАвтомобилей.Номенклатура КАК Номенклатура
		|				ИЗ
		|					СписокАвтомобилей КАК СписокАвтомобилей)) КАК ОстаткиАвтомобилейОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПартииАвтомобилей.Автомобиль КАК Автомобиль,
		|	ПартииАвтомобилей.Партия КАК Партия,
		|	ОстаткиАвтомобилей.СуммаБезНДС КАК СуммаБезНДС
		|ПОМЕСТИТЬ СуммыАвтомобилей
		|ИЗ
		|	ПартииАвтомобилей КАК ПартииАвтомобилей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
		|		ПО ПартииАвтомобилей.Автомобиль = ОстаткиАвтомобилей.Автомобиль
		|			И ПартииАвтомобилей.Партия = ОстаткиАвтомобилей.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокАвтомобилей.Номенклатура КАК Номенклатура,
		|	СписокАвтомобилей.Количество КАК Количество,
		|	СписокАвтомобилей.Коэффициент КАК Коэффициент,
		|	СписокАвтомобилей.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СписокАвтомобилей.ЕдиницаИзмеренияПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
		|	СписокАвтомобилей.АвтомобильКодТНВЭД КАК КодТНВЭД,
		|	СписокАвтомобилей.СтранаПроисхождения КАК СтранаПроисхождения,
		|	СписокАвтомобилей.АвтомобильКодОКПД2 КАК КодОКПД2,
		|	ЕСТЬNULL(СуммыАвтомобилей.СуммаБезНДС, 0) КАК Сумма,
		|	ЕСТЬNULL(СуммыАвтомобилей.Партия, СписокАвтомобилей.ПервичныйДокумент) КАК ПервичныйДокумент
		|ИЗ
		|	СписокАвтомобилей КАК СписокАвтомобилей
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыАвтомобилей КАК СуммыАвтомобилей
		|		ПО СписокАвтомобилей.Номенклатура = СуммыАвтомобилей.Автомобиль
		|#ИТОГИ";
	ИначеЕсли ХозОперацияОснования = Справочники.ХозОперации.ТаможеннаяДекларацияИмпорт Тогда
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаможеннаяДекларацияИмпортТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ТаможеннаяДекларацияИмпортТовары.Количество) КАК Количество,
		|	ТаможеннаяДекларацияИмпортТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаможеннаяДекларацияИмпортТовары.Коэффициент КАК Коэффициент,
		|	ТаможеннаяДекларацияИмпортТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмеренияПрослеживаемости,
		|	ТаможеннаяДекларацияИмпортТовары.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаможеннаяДекларацияИмпортТовары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
		|	ТаможеннаяДекларацияИмпортТовары.Партия КАК Партия,
		|	ТаможеннаяДекларацияИмпортТовары.Номенклатура.КодОКПД2 КАК КодОКПД2,
		|	ТаможеннаяДекларацияИмпортТовары.Склад КАК Склад
		|ПОМЕСТИТЬ СписокНоменклатуры
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТаможеннаяДекларацияИмпортТовары
		|ГДЕ
		|	ТаможеннаяДекларацияИмпортТовары.Ссылка = &Ссылка
		|	И ТаможеннаяДекларацияИмпортТовары.Номенклатура.Прослеживаемый
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаможеннаяДекларацияИмпортТовары.Номенклатура,
		|	ТаможеннаяДекларацияИмпортТовары.ЕдиницаИзмерения,
		|	ТаможеннаяДекларацияИмпортТовары.Коэффициент,
		|	ТаможеннаяДекларацияИмпортТовары.Номенклатура.БазоваяЕдиницаИзмерения,
		|	ТаможеннаяДекларацияИмпортТовары.СтранаПроисхождения,
		|	ТаможеннаяДекларацияИмпортТовары.Номенклатура.КодТНВЭД,
		|	ТаможеннаяДекларацияИмпортТовары.Партия,
		|	ТаможеннаяДекларацияИмпортТовары.Номенклатура.КодОКПД2,
		|	ТаможеннаяДекларацияИмпортТовары.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СписокНоменклатуры.Партия КАК Партия,
		|	СписокНоменклатуры.Склад КАК Склад
		|ПОМЕСТИТЬ СписокРазныхНоменклатур
		|ИЗ
		|	СписокНоменклатуры КАК СписокНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СписокРазныхНоменклатур.Склад КАК СкладКомпании,
		|	СписокРазныхНоменклатур.Номенклатура КАК Номенклатура,
		|	СписокРазныхНоменклатур.Партия КАК Партия,
		|	СУММА(ЕСТЬNULL(ПартииТоваровКомпании.СуммаБезНДС, 0)) КАК СуммаБезНДС,
		|	ЕСТЬNULL(ПартииТоваровКомпании.Количество, 0) КАК КоличествоПоПартии
		|ПОМЕСТИТЬ СуммыНоменклатуры
		|ИЗ
		|	СписокРазныхНоменклатур КАК СписокРазныхНоменклатур
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровКомпании КАК ПартииТоваровКомпании
		|		ПО СписокРазныхНоменклатур.Номенклатура = ПартииТоваровКомпании.Номенклатура
		|			И СписокРазныхНоменклатур.Партия = ПартииТоваровКомпании.Партия
		|			И СписокРазныхНоменклатур.Склад = ПартииТоваровКомпании.СкладКомпании
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокРазныхНоменклатур.Склад,
		|	СписокРазныхНоменклатур.Номенклатура,
		|	СписокРазныхНоменклатур.Партия,
		|	ЕСТЬNULL(ПартииТоваровКомпании.Количество, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СписокНоменклатуры.Количество КАК Количество,
		|	СписокНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СписокНоменклатуры.Коэффициент КАК Коэффициент,
		|	СписокНоменклатуры.ЕдиницаИзмеренияПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
		|	СписокНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
		|	СписокНоменклатуры.КодТНВЭД КАК КодТНВЭД,
		|	СписокНоменклатуры.Партия КАК ПервичныйДокумент,
		|	СписокНоменклатуры.КодОКПД2 КАК КодОКПД2,
		|	СУММА(ВЫБОР
		|			КОГДА ЕСТЬNULL(СуммыНоменклатуры.КоличествоПоПартии, 0) = СписокНоменклатуры.Количество * СписокНоменклатуры.Коэффициент
		|				ТОГДА ЕСТЬNULL(СуммыНоменклатуры.СуммаБезНДС, 0)
		|			КОГДА ЕСТЬNULL(СуммыНоменклатуры.КоличествоПоПартии, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СуммыНоменклатуры.СуммаБезНДС, 0) / ЕСТЬNULL(СуммыНоменклатуры.КоличествоПоПартии, 0) * СписокНоменклатуры.Количество * СписокНоменклатуры.Коэффициент КАК ЧИСЛО(15, 2))
		|		КОНЕЦ) КАК Сумма
		|ИЗ
		|	СписокНоменклатуры КАК СписокНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыНоменклатуры КАК СуммыНоменклатуры
		|		ПО СписокНоменклатуры.Номенклатура = СуммыНоменклатуры.Номенклатура
		|			И СписокНоменклатуры.Партия = СуммыНоменклатуры.Партия
		|			И СписокНоменклатуры.Склад = СуммыНоменклатуры.СкладКомпании
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокНоменклатуры.Номенклатура,
		|	СписокНоменклатуры.Количество,
		|	СписокНоменклатуры.ЕдиницаИзмерения,
		|	СписокНоменклатуры.Коэффициент,
		|	СписокНоменклатуры.ЕдиницаИзмеренияПрослеживаемости,
		|	СписокНоменклатуры.СтранаПроисхождения,
		|	СписокНоменклатуры.КодТНВЭД,
		|	СписокНоменклатуры.Партия,
		|	СписокНоменклатуры.КодОКПД2
		|#ИТОГИ";
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ПоступлениеТоваровТовары.Количество) КАК Количество,
		|	ПоступлениеТоваровТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ПоступлениеТоваровТовары.Коэффициент КАК Коэффициент,
		|	ПоступлениеТоваровТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмеренияПрослеживаемости,
		|	ПоступлениеТоваровТовары.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ПоступлениеТоваровТовары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
		|	ПоступлениеТоваровТовары.Ссылка КАК Партия,
		|	ПоступлениеТоваровТовары.Номенклатура.КодОКПД2 КАК КодОКПД2,
		|	ПоступлениеТоваровТовары.Ссылка.СкладКомпании КАК Склад
		|ПОМЕСТИТЬ СписокНоменклатуры
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
		|ГДЕ
		|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
		|	И ПоступлениеТоваровТовары.Номенклатура.Прослеживаемый
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровТовары.Номенклатура,
		|	ПоступлениеТоваровТовары.ЕдиницаИзмерения,
		|	ПоступлениеТоваровТовары.Коэффициент,
		|	ПоступлениеТоваровТовары.Номенклатура.БазоваяЕдиницаИзмерения,
		|	ПоступлениеТоваровТовары.Номенклатура.СтранаПроисхождения,
		|	ПоступлениеТоваровТовары.Номенклатура.КодТНВЭД,
		|	ПоступлениеТоваровТовары.Ссылка,
		|	ПоступлениеТоваровТовары.Номенклатура.КодОКПД2,
		|	ПоступлениеТоваровТовары.Ссылка.СкладКомпании
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СписокНоменклатуры.Партия КАК Партия,
		|	СписокНоменклатуры.Склад КАК Склад
		|ПОМЕСТИТЬ СписокРазныхНоменклатур
		|ИЗ
		|	СписокНоменклатуры КАК СписокНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СписокРазныхНоменклатур.Склад КАК СкладКомпании,
		|	СписокРазныхНоменклатур.Номенклатура КАК Номенклатура,
		|	СписокРазныхНоменклатур.Партия КАК Партия,
		|	СУММА(ЕСТЬNULL(ПартииТоваровКомпании.СуммаБезНДС, 0)) КАК СуммаБезНДС,
		|	ЕСТЬNULL(ПартииТоваровКомпании.Количество, 0) КАК КоличествоПоПартии
		|ПОМЕСТИТЬ СуммыНоменклатуры
		|ИЗ
		|	СписокРазныхНоменклатур КАК СписокРазныхНоменклатур
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровКомпании КАК ПартииТоваровКомпании
		|		ПО СписокРазныхНоменклатур.Номенклатура = ПартииТоваровКомпании.Номенклатура
		|			И СписокРазныхНоменклатур.Партия = ПартииТоваровКомпании.Партия
		|			И СписокРазныхНоменклатур.Склад = ПартииТоваровКомпании.СкладКомпании
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокРазныхНоменклатур.Склад,
		|	СписокРазныхНоменклатур.Номенклатура,
		|	СписокРазныхНоменклатур.Партия,
		|	ЕСТЬNULL(ПартииТоваровКомпании.Количество, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СписокНоменклатуры.Количество КАК Количество,
		|	СписокНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СписокНоменклатуры.Коэффициент КАК Коэффициент,
		|	СписокНоменклатуры.ЕдиницаИзмеренияПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
		|	СписокНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
		|	СписокНоменклатуры.КодТНВЭД КАК КодТНВЭД,
		|	СписокНоменклатуры.Партия КАК ПервичныйДокумент,
		|	СписокНоменклатуры.КодОКПД2 КАК КодОКПД2,
		|	СУММА(ВЫБОР
		|			КОГДА ЕСТЬNULL(СуммыНоменклатуры.КоличествоПоПартии, 0) = СписокНоменклатуры.Количество * СписокНоменклатуры.Коэффициент
		|				ТОГДА ЕСТЬNULL(СуммыНоменклатуры.СуммаБезНДС, 0)
		|			КОГДА ЕСТЬNULL(СуммыНоменклатуры.КоличествоПоПартии, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СуммыНоменклатуры.СуммаБезНДС, 0) / ЕСТЬNULL(СуммыНоменклатуры.КоличествоПоПартии, 0) * СписокНоменклатуры.Количество * СписокНоменклатуры.Коэффициент КАК ЧИСЛО(15, 2))
		|		КОНЕЦ) КАК Сумма
		|ИЗ
		|	СписокНоменклатуры КАК СписокНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыНоменклатуры КАК СуммыНоменклатуры
		|		ПО СписокНоменклатуры.Номенклатура = СуммыНоменклатуры.Номенклатура
		|			И СписокНоменклатуры.Партия = СуммыНоменклатуры.Партия
		|			И СписокНоменклатуры.Склад = СуммыНоменклатуры.СкладКомпании
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокНоменклатуры.Номенклатура,
		|	СписокНоменклатуры.Количество,
		|	СписокНоменклатуры.ЕдиницаИзмерения,
		|	СписокНоменклатуры.Коэффициент,
		|	СписокНоменклатуры.ЕдиницаИзмеренияПрослеживаемости,
		|	СписокНоменклатуры.СтранаПроисхождения,
		|	СписокНоменклатуры.КодТНВЭД,
		|	СписокНоменклатуры.Партия,
		|	СписокНоменклатуры.КодОКПД2
		|#ИТОГИ";
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеАвтомобилей") Тогда
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПоступлениеАвтомобилейАвтомобили.Автомобиль КАК Номенклатура,
		|	1 КАК Количество,
		|	1 КАК Коэффициент,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.шт) КАК ЕдиницаИзмерения,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.шт) КАК ЕдиницаИзмеренияПрослеживаемости,
		|	ПоступлениеАвтомобилейАвтомобили.Автомобиль.КодТНВЭД КАК АвтомобильКодТНВЭД,
		|	ПоступлениеАвтомобилейАвтомобили.Автомобиль.КодОКПД2 КАК АвтомобильКодОКПД2,
		|	ПоступлениеАвтомобилейАвтомобили.Ссылка.ДокументОснование КАК ПервичныйДокумент
		|ПОМЕСТИТЬ СписокАвтомобилей
		|ИЗ
		|	Документ.ПоступлениеАвтомобилей.Автомобили КАК ПоступлениеАвтомобилейАвтомобили
		|ГДЕ
		|	ПоступлениеАвтомобилейАвтомобили.Ссылка = &Ссылка
		|	И ПоступлениеАвтомобилейАвтомобили.Автомобиль.Прослеживаемый
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОстаткиАвтомобилейОстатки.Автомобиль КАК Автомобиль,
		|	ОстаткиАвтомобилейОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
		|	ОстаткиАвтомобилейОстатки.Партия КАК Партия
		|ПОМЕСТИТЬ ПартииАвтомобилей
		|ИЗ
		|	РегистрНакопления.ОстаткиАвтомобилей.Остатки(
		|			&МоментВремени,
		|			Автомобиль В
		|				(ВЫБРАТЬ
		|					СписокАвтомобилей.Номенклатура КАК Номенклатура
		|				ИЗ
		|					СписокАвтомобилей КАК СписокАвтомобилей)) КАК ОстаткиАвтомобилейОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПартииАвтомобилей.Автомобиль КАК Автомобиль,
		|	ПартииАвтомобилей.Партия КАК Партия,
		|	ОстаткиАвтомобилей.СуммаБезНДС КАК СуммаБезНДС
		|ПОМЕСТИТЬ СуммыАвтомобилей
		|ИЗ
		|	ПартииАвтомобилей КАК ПартииАвтомобилей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
		|		ПО ПартииАвтомобилей.Автомобиль = ОстаткиАвтомобилей.Автомобиль
		|			И ПартииАвтомобилей.Партия = ОстаткиАвтомобилей.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокАвтомобилей.Номенклатура КАК Номенклатура,
		|	СписокАвтомобилей.Количество КАК Количество,
		|	СписокАвтомобилей.Коэффициент КАК Коэффициент,
		|	СписокАвтомобилей.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СписокАвтомобилей.ЕдиницаИзмеренияПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
		|	СписокАвтомобилей.АвтомобильКодТНВЭД КАК КодТНВЭД,
		|	СписокАвтомобилей.АвтомобильКодОКПД2 КАК КодОКПД2,
		|	ЕСТЬNULL(СуммыАвтомобилей.СуммаБезНДС, 0) КАК Сумма,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаПроисхождения,
		|	ЕСТЬNULL(СуммыАвтомобилей.Партия, СписокАвтомобилей.ПервичныйДокумент) КАК ПервичныйДокумент
		|ИЗ
		|	СписокАвтомобилей КАК СписокАвтомобилей
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыАвтомобилей КАК СуммыАвтомобилей
		|		ПО СписокАвтомобилей.Номенклатура = СуммыАвтомобилей.Автомобиль
		|#ИТОГИ";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"#ИТОГИ",
		?(ИтогиПоТНВЭД,
			"ИТОГИ ПО
			|	КодТНВЭД",
			""));
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Запрос.УстановитьПараметр("МоментВремени",
		?(Объект <> Неопределено
		И ЗначениеЗаполнено(Объект.Ссылка),
			Новый МоментВремени(Объект.Дата, Объект.Ссылка),
			Неопределено));
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Организация");
	ОбязательныеРеквизиты.Добавить("ПодразделениеКомпании");
	ОбязательныеРеквизиты.Добавить("Автор");
	ОбязательныеРеквизиты.Добавить("ДокументОснование");
	ОбязательныеРеквизиты.Добавить("Состояние");
	ОбязательныеРеквизиты.Добавить("ХозОперация");
	ОбязательныеРеквизиты.Добавить("КодТНВЭД");
	ОбязательныеРеквизиты.Добавить("СтранаПроисхождения");
	ОбязательныеРеквизиты.Добавить("Контрагент");
	ОбязательныеРеквизиты.Добавить("ПервичныйДокумент");
	
	Если Объект.Состояние = Перечисления.СостоянияУведомленияПрослеживаемостиТоваров.ПолученОтвет Тогда
		ОбязательныеРеквизиты.Добавить("РНПТ");
	КонецЕсли;
	
	Если НЕ ПраваИНастройкиПользователя.Значение("ПроведениеНезаполненныхДокументов", Объект) Тогда
		ОбязательныеРеквизиты.Добавить("Товары");
	КонецЕсли;
	
	ОбязательныеРеквизиты.Добавить("Товары.Номенклатура");
	ОбязательныеРеквизиты.Добавить("Товары.Количество");
	ОбязательныеРеквизиты.Добавить("Товары.КоличествоПрослеживаемости");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Уникальные поля таблицы товаров
	УникальныеТовары = Новый Массив();
	УникальныеТовары.Добавить("Номенклатура");
	
	// Структура уникальных реквизитов табличных частей
	УникальныеТабличныеЧасти = Новый Структура();
	УникальныеТабличныеЧасти.Вставить("Товары", УникальныеТовары);
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеТабличныеЧасти;
	
КонецФункции

// Производит формирование перечня реквизитов для проверки соответствия Организации и Подразделению.
//
// Параметры:
//  Объект                  - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//  КонтрольПоПодразделению - Булево               - Признак необходимости выполнить контроль по подразделению.
//
// Возвращаемое значение:
//  Структура - Содержит перечень проверяемых реквизитов.
//
Функция ПолучитьРеквизитыКонтроляПоОрганизации(Объект, КонтрольПоПодразделению) Экспорт
	
	КонтролируемыеРеквизиты = Новый Структура();
	
	Возврат КонтролируемыеРеквизиты;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиИзмененияДанныхОбъекта

// Возвращает предопределенную структуру действий
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Функция ПолучитьПараметрыДействия(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	Если ПараметрыДействия = Неопределено Тогда
		ПараметрыДействия = Новый Структура;
	КонецЕсли;
	
	ПараметрыДействия.Вставить("ТребуетсяУстановкаЦен", Ложь);
	
	Возврат ПараметрыДействия;
	
КонецФункции

// Обработчик события пересчета зависимых показателей объекта при изменении значений ведущих реквизитов.
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОбработкаПересчетаПоказателейОбъекта(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	ОбработкаРеквизитовДокументаСервер.ОбработкаПересчетаПоказателейОбъекта(Объект, ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события возникающего при изменении данных реквизита "Дата".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ДатаПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	ОбработкаРеквизитовДокументаСервер.ДатаПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Документ основание".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ДокументОснованиеПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	ОбработкаРеквизитовДокументаСервер.ДокументОснованиеПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Подразделение компании".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ПодразделениеКомпанииПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	ОбработкаРеквизитовДокументаСервер.ПодразделениеКомпанииПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Организация".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОрганизацияПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	ОбработкаРеквизитовДокументаСервер.ОрганизацияПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Автор".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвторПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	ОбработкаРеквизитовДокументаСервер.АвторПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Хоз. операция".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ХозОперацияПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	ОбработкаРеквизитовДокументаСервер.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Валюта".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ВалютаДокументаПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	// Вызываем общий обработчик события
	ОбработкаРеквизитовДокументаСервер.ВалютаДокументаПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // ВалютаДокументаПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Курс документа".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура КурсДокументаПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	// Вызываем общий обработчик события
	ОбработкаРеквизитовДокументаСервер.КурсДокументаПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // КурсДокументаПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Контрагент".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура КонтрагентПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	// Вызываем общий обработчик события
	ОбработкаРеквизитовДокументаСервер.КонтрагентПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // КонтрагентПриИзменении()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

// Обработчик события возникающего при изменении данных реквизита "Номенклатура" в таблице "Товары".
//
// Параметры:
//  Объект - ДанныеФормыСтруктура   - Объект, для которого выполняется обработка события.
//  Строка - Строка табличной части - Строка, при изменении поля которой возникло событие.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ТоварыНоменклатураПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	Если ЕстьРеквизит(Строка, "АртикулVIN") Тогда
		Если ТипЗнч(Строка.Номенклатура) = Тип("СправочникСсылка.Автомобили") Тогда
			Строка.АртикулVIN = Строка.Номенклатура.VIN;
		Иначе
			Строка.АртикулVIN = Строка.Номенклатура.Артикул;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Строка.КодОКПД2) Тогда
		Строка.КодОКПД2 = Строка.Номенклатура.КодОКПД2;
	КонецЕсли;
	
КонецПроцедуры // ТоварыНоменклатураПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Количество" в таблице "Товары".
//
// Параметры:
//  Объект - ДанныеФормыСтруктура   - Объект, для которого выполняется обработка события.
//  Строка - Строка табличной части - Строка, при изменении поля которой возникло событие.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ТоварыКоличествоПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	Если ТипЗнч(Объект.ЕдиницаИзмерения) <> Тип("СправочникСсылка.ЕдиницыИзмерения")
		ИЛИ НЕ ЗначениеЗаполнено(Объект.ЕдиницаИзмерения)
		ИЛИ Объект.ЕдиницаИзмерения.Коэффициент = 0 Тогда
		Коэффициент = 1;
	Иначе
		Коэффициент = Объект.ЕдиницаИзмерения.Коэффициент;
	КонецЕсли;
	
	Строка.КоличествоПрослеживаемости = Строка.Количество * Коэффициент;
	
КонецПроцедуры // ТоварыКоличествоФактПриИзменении()

#КонецОбласти

#Область ОбработчикиЗаполненияОбъекта

// Производит формирование структуры с доступностью и видимостью команд заполнения объекта.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//
Функция ПолучитьПараметрыКомандЗаполнения(Объект) Экспорт
	
	ПараметрыКоманд = Новый Соответствие;
	Возврат ПараметрыКоманд;
	
КонецФункции

#КонецОбласти

#Область Печать

// Переопределяет настройки печати для объекта.
//
// Параметры:
//  Настройки - см. УправлениеПечатью.НастройкиПечатиОбъекта.
//
Процедура ПриОпределенииНастроекПечати(Настройки) Экспорт
	
	Настройки.ПриДобавленииКомандПечати = Истина;
	
КонецПроцедуры

// Процедура используется для указания доступного данному виду объектов перечня вариантов печати.
//
// Параметры:
//  КомандыПечати - ТаблицаЗначений - Каждая строка таблицы соответствует одному из вариантов печати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	СсылкаНаДокумент = ПолучитьСсылку();
	УправлениеПечатьюПлатформа.ДобавитьКоманду(КомандыПечати,
		"Документ.УведомлениеОВвозеПрослеживаемыхТоваров",
		"УведомлениеОВвозеПрослеживаемыхТоваров",
		НСтр("ru = 'Уведомление о ввозе прослеживаемых товаров'"),
		СсылкаНаДокумент
	);
	
КонецПроцедуры

// Обработчик печати документа
//
// Параметры:
//  МассивОбъектов         - Массив           - массив объектов для формирования печатных форм
//  ПараметрыПечати        - Структура        - дополнительные параметры печати
//  КоллекцияПечатныхФорм  - Таблица значений - таблица с идентификаторами печатных форм и макетами печати
//  ОбъектыПечати          - Структура        - список областей печатной формы в разрезе документов
//  ПараметрыВывода        - Структура        - дополнительные параметры вывода формы.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УведомлениеОВвозеПрослеживаемыхТоваров") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"УведомлениеОВвозеПрослеживаемыхТоваров",
			НСтр("ru = 'Уведомление о ввозе прослеживаемых товаров'"),
			ПечатьУведомлениеОВвозе(МассивОбъектов, ОбъектыПечати)
		);
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует печатную форму "ПечатьУведомлениеОВвозе"
//
Функция ПечатьУведомлениеОВвозе(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати =
		"ПАРАМЕТРЫ_ПЕЧАТИ_УведомлениеОбОстаткахПрослеживаемыхТоваров_УведомлениеОВвозеПрослеживаемыхТоваров";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	// Зададим параметры макета
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы(
			"Документ.УведомлениеОВвозеПрослеживаемыхТоваров.УведомлениеОВвозеПрослеживаемогоТовара"
		);
		
		ДанныеДокумента = ДанныеДляУведомленияФНС(Документ);
		ШапкаДокумента = ДанныеДокумента[0].Выбрать();
		ШапкаДокумента.Следующий();
		Товары = ДанныеДокумента[1].Выгрузить();
		
		Если НЕ ЗначениеЗаполнено(ШапкаДокумента.ПервичныйДокумент) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не указан первичный документ.'"));
			Продолжить;
		КонецЕсли;
		
		ВходящиеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ШапкаДокумента.ПервичныйДокумент, "ВхДокДата,ВхДокНомер");
		
		Если НЕ ЗначениеЗаполнено(ВходящиеДанныеДокумента.ВхДокДата)
			ИЛИ НЕ ЗначениеЗаполнено(ВходящиеДанныеДокумента.ВхДокНомер) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Не указана дата или номер входящего документа в первичном документе.'")
			);
			Продолжить;
		КонецЕсли;
		
		// Вывод заголовка документа
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		ОбластьМакета.Параметры.НомерУведомления = УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(Документ);
		ОбластьМакета.Параметры.ДатаУведомления = Формат(ШапкаДокумента.Дата, "ДЛФ=D");
		ОбластьМакета.Параметры.НомерКорректировки = "0";
		
		ОбластьМакета.Параметры.НаимОрг = СокрЛП(ШапкаДокумента.ОрганизацияНаименованиеПолное);
		ОбластьМакета.Параметры.ИНН = ШапкаДокумента.ОрганизацияИНН;
		ОбластьМакета.Параметры.КПП = ШапкаДокумента.ОрганизацияКПП;
		ОбластьМакета.Параметры.НаимЛицаПередПраво =
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ШапкаДокумента.Контрагент);
		ОбластьМакета.Параметры.КодСтраныКонтрагента = ШапкаДокумента.СтранаРегистрацииКод;
		ОбластьМакета.Параметры.НалоговыйОрганКонтаргента = ШапкаДокумента.НалоговыйНомер;
		ОбластьМакета.Параметры.АдресКонтрагента = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				ШапкаДокумента.Контрагент,
				Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, ТекущаяДатаСеанса());
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСопрДокумент");
		
		ОбластьМакета.Параметры.ВидСопоставляемогоДокумента = "2";
		ОбластьМакета.Параметры.ДатаВходящегоДокумента = Формат(ВходящиеДанныеДокумента.ВхДокДата, "ДЛФ=D");
		ОбластьМакета.Параметры.НомерВходящегоДокумента = ВходящиеДанныеДокумента.ВхДокНомер;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Стр9");
		ОбластьМакета.Параметры.КодТНВЭД = ШапкаДокумента.КодТНВЭДКод;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Стр10");
		ОбластьМакета.Параметры.КоличествоТовара = Формат(Товары.Итог("Количество"), "ЧЦ=19; ЧДЦ=6; ЧРД=.; ЧН=-");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Стр11");
		ОбластьМакета.Параметры.КодЕдиницыПервичногоДокумента = ШапкаДокумента.КодЕдиницыИзмерения;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Стр12");
		ОбластьМакета.Параметры.РНПТ = ШапкаДокумента.РНПТ;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Стр13");
		ОбластьМакета.Параметры.КодЕдиницыПроследиваемости = ШапкаДокумента.КодЕдиницыИзмеренияПрослеж;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Стр14");
		ОбластьМакета.Параметры.КоличествоТовараПрослеживаемости = Формат(Товары.Итог("КоличествоПрослеживаемости"), "ЧЦ=19; ЧДЦ=6; ЧРД=.; ЧН=-");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Стр15");
		ОбластьМакета.Параметры.Стоимость = Формат(Товары.Итог("Сумма"), "ЧЦ=19; ЧДЦ=2; ЧРД=.; ЧН=-");
		
		Руководитель = УправлениеПечатьюПлатформа.ДанныеОтветственногоЛица(
				Документ,
				"Руководитель",
				"Руководитель",
				,
				Истина
			);
		Руководитель = Руководитель.РуководительПредставление;
		Если НЕ ПустаяСтрока(Руководитель) Тогда
			
			ОбластьМакета.Параметры.ПрПодп = "1";
			ФИОРуководителя = ФизическиеЛицаКлиентСервер.ЧастиИмени(Руководитель);
			ОбластьМакета.Параметры.ОргПодписантФамилия = ФИОРуководителя.Фамилия;
			ОбластьМакета.Параметры.ОргПодписантИмя = ФИОРуководителя.Имя;
			ОбластьМакета.Параметры.ОргПодписантОтчество = ФИОРуководителя.Отчество;
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ДатаПодписи = Формат(ШапкаДокумента.Дата, "ДЛФ=D");
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// отметим конец области документа
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли