///////////////////////////////////////////////////////////////////////////////
// Модуль основной формы документа "Передача товаров между организациями"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	НалоговыйДокумент = ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, Объект);
	
	// ПодключаемоеОборудование
	ТипыОборудования = МенеджерОборудованияКлиентСервер.ПараметрыТипыОборудования();
	ТипыОборудования.СканерШтрихкода = Истина;
	ТипыОборудования.СчитывательМагнитныхКарт = Истина;
	МенеджерОборудования.ПриСозданииНаСервере(ЭтаФорма, ТипыОборудования);
	// Конец ПодключаемоеОборудование
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	УчетОригиналовПервичныхДокументовАльфаАвто.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ОграничитьВыборКонтактныхЛиц(Элементы.Контрагент);
	РаботаСФормой.НастроитьОтображениеСИспользованиемБазовогоКоличества(Элементы.ТоварыКоличество);
	
	РазрешитьРедактированиеЦенИСумм = ПраваИНастройкиПользователя.Значение("РедактированиеЦенИСуммВНоменклатурныхТаблицах", Объект);
	РаботаСФормой.РазрешитьРедактированиеЦенИСумм(
		РаботаСФормой.ТиповыеПоляСуммовыхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм
	);
	
	СпособВыбораСкидки = ПраваИНастройкиПользователя.Значение("СпособВыбораСкидки", Объект);
	РаботаСФормой.РазрешитьРедактированиеСкидок(
		РаботаСФормой.ТиповыеПоляСкидочныхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм,
		СпособВыбораСкидки
	);
	
	// Штрихкодирование
	ШтрихкодированиеВызовСервера.ПрочитатьШтрихкодДокумента(ЭтотОбъект, Объект);
	// Конец Штрихкодирование
	
	ОписаниеНовойКолонкиПроизводитель = РаботаСФормой.ОписаниеНовойКолонкиПроизводитель();
	ОписаниеНовойКолонкиПроизводитель.ТабличнаяЧасть = Элементы.Товары;
	ОписаниеНовойКолонкиПроизводитель.ПоставитьПеред = Элементы.ТоварыАртикул;
	НоваяКолонкаПроизводитель = РаботаСФормой.НоваяКолонкаПроизводитель(ЭтотОбъект, ОписаниеНовойКолонкиПроизводитель);
	
	КолонкиКодАртикулИПроизводитель = Новый Структура();
	КолонкиКодАртикулИПроизводитель.Вставить("Код", Элементы.ТоварыКод);
	КолонкиКодАртикулИПроизводитель.Вставить("Артикул", Элементы.ТоварыАртикул);
	КолонкиКодАртикулИПроизводитель.Вставить("Производитель", НоваяКолонкаПроизводитель);
	РаботаСФормой.НастроитьВидимостьКолонокКодАртикулИПроизводитель(КолонкиКодАртикулИПроизводитель);
	РаботаСФормой.ОткрытьФормуТолькоДляПросмотра(ЭтотОбъект, Объект);
	
	ЕдиницаИзмеренияМассы = Строка(Константы.ОсновнаяЕдиницаИзмеренияМассы.Получить());
	РассчитатьМассуНоменклатуры();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
		
		РаботаСФормой.ЗаполнитьСлужебныеРеквизитыТоваров(Объект.Товары);
		РаботаСФормой.УстановитьВидимостьКолонкиХарактеристика(ЭтотОбъект, Объект);
		
		// Маркировка
		МаркировкаТоваровСервер.ПриСозданииЧтенииНаСервере(ЭтотОбъект, Объект);
		МаркировкаТоваровСервер.ИнициализироватьСлужебныеРеквизиты(ЭтотОбъект);
		// Конец Маркировка
		
		РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект);
		ДополнительнеПараметры = Документы.ПередачаТоваровМеждуОрганизациями.ДополнительныеПараметрыОтправителя();
		РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект, ДополнительнеПараметры);
		
		// ПрослеживаемыеТовары
		УчетПрослеживаемыхТоваровСервер.ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара(Объект);
		// Конец ПрослеживаемыеТовары
		
		РаботаСФормой.ЗаполнитьСлужебныеРеквизитыТоваров(Объект.Товары);
		НастроитьПараметрыВыбораЭлементовФормы();
		
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);
	Если Элементы.ТоварыОстатокНаСкладе.Видимость Тогда
		РаботаСФормой.ОтобразитьОстаткиТоваровНаСкладе(Объект, Элементы.ТоварыОстатокНаСкладе);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия=Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	
	Если НЕ УправлениеДиалогомДокументаКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Объект, Окно, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// Штрихкодирование
	ШтрихкодированиеКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец Штрихкодирование
	
	// СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	УчетОригиналовПервичныхДокументовКлиент.ОбработчикОповещенияФормаДокумента(ИмяСобытия,ЭтотОбъект);
	// Конец СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	
	РаботаСФормойКлиент.ТребуетсяОбновитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, ИмяСобытия);
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	РаботаСФормой.ЗаполнитьСлужебныеРеквизитыТоваров(Объект.Товары);
	РаботаСФормой.УстановитьВидимостьКолонкиХарактеристика(ЭтотОбъект, Объект);
	
	ИспользоватьОбменЭД = ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД");
	
	// ПрослеживаемыеТовары
	УчетПрослеживаемыхТоваровСервер.ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара(Объект);
	// Конец ПрослеживаемыеТовары
	
	РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект);
	ДополнительнеПараметры = Документы.ПередачаТоваровМеждуОрганизациями.ДополнительныеПараметрыОтправителя();
	РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект, ДополнительнеПараметры);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	РассчитатьМассуНоменклатуры();
	РаботаСФормой.ЗаполнитьСлужебныйРеквизитСуммаСписания(Объект, "ПартииТоваровКомпании");
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
	НалоговыйДокумент = ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ПередачаТоваровМеждуОрганизациями", ПараметрыЗаписи.РежимЗаписи,
		Объект.Товары.Количество() > 50);
		
	Отказ = Отказ Или РаботаСФормойКлиент.НачатьПроверкуПодразделенияДокументаИПользователя(
		Объект.ПодразделениеКомпании,
		Новый ОписаниеОповещения(
			"ПроверкаПодразделенияДокументаИПользователяЗавершение",
			ЭтотОбъект,
			Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)
		)
	);
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	Если НЕ ЭтотОбъект.Элементы.Найти("НадписьНалоговыйДокумент") = Неопределено Тогда
		ЭтотОбъект.НалоговыйДокумент = ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;

	РаботаСФормой.ЗаполнитьСлужебныеРеквизитыТоваров(Объект.Товары);
	РаботаСФормой.УстановитьВидимостьКолонкиХарактеристика(ЭтотОбъект, Объект);
	
	// ПрослеживаемыеТовары
	УчетПрослеживаемыхТоваровСервер.ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара(Объект);
	// Конец ПрослеживаемыеТовары
	
	// Штрихкодирование
	ШтрихкодированиеВызовСервера.ЗаписатьШтрихкодДокумента(ЭтотОбъект, Объект);
	// Конец Штрихкодирование
	
	РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект);
	ДополнительнеПараметры = Документы.ПередачаТоваровМеждуОрганизациями.ДополнительныеПараметрыОтправителя();
	РасчетыСКонтрагентамиСервер.ЗаполнитьСлужебныйРеквизитОстатокПоДокументуОплаты(Объект, ДополнительнеПараметры);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	РассчитатьМассуНоменклатуры();
	РаботаСФормой.ЗаполнитьСлужебныйРеквизитСуммаСписания(Объект, "ПартииТоваровКомпании");
	УправлениеДиалогомНаСервере();
	Если Элементы.ТоварыОстатокНаСкладе.Видимость Тогда
		РаботаСФормой.ОтобразитьОстаткиТоваровНаСкладе(Объект, Элементы.ТоварыОстатокНаСкладе);
	КонецЕсли;
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормойКлиент.ОповеститьОЗаписиДокумента(Объект.Ссылка);
	РаботаСФормойКлиент.ОбновитьПодчиненныеСчета(Объект.Ссылка, Неопределено);
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);
	
КонецПроцедуры 

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПередачаТоваровМеждуОрганизациями.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();  
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	
	ПараметрыДействия = Новый Структура;
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПередачаТоваровМеждуОрганизациями.ДатаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура СкладКомпанииПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПередачаТоваровМеждуОрганизациями.СкладКомпанииПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура СкладКомпанииПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СкладКомпанииПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПередачаТоваровМеждуОрганизациями.КонтрагентПриИзменении(Объект, ПараметрыДействия);
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Объект.Контрагент, ПараметрыДействия);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	КонтрагентПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПоставкиПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Объект.КонтрагентПоставки, ПараметрыДействия);
	
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура КонтрагентПоставкиПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	КонтрагентПоставкиПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);

КонецПроцедуры

&НаСервере
Процедура ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПередачаТоваровМеждуОрганизациями.ДоговорВзаиморасчетовПриИзменении(Объект, ПараметрыДействия);
	
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Объект.ДоговорВзаиморасчетов, ПараметрыДействия);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДоговорВзаиморасчетовПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДоговорВзаиморасчетовПоставкиПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ПередачаТоваровМеждуОрганизациями.ДоговорВзаиморасчетовПоставкиПриИзменении(Объект, ПараметрыДействия);
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Объект.ДоговорВзаиморасчетовПоставки, ПараметрыДействия);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорВзаиморасчетовПоставкиПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДоговорВзаиморасчетовПоставкиПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);

КонецПроцедуры

&НаКлиенте
Процедура СпособЗачетаАвансовПриИзменении(Элемент)
	
	СпособЗачетаАвансовПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СпособЗачетаАвансовПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДиалогомДокументаКлиент.ТоварыПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ИдентификаторТовара) ИЛИ Копирование Тогда
		ТекущиеДанные.ИдентификаторТовара = Новый УникальныйИдентификатор;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыПослеУдаленияНаСервере(ПараметрыДействия = Неопределено)
	
	УправлениеДиалогомДокументаСервер.ТоварыПослеУдаления(ЭтотОбъект, Элементы.Товары, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	ТоварыПослеУдаленияНаСервере();
	
КонецПроцедуры 

#Область ОбработчикиСобытийПолейТаблицыФормыТовары

&НаСервере
Процедура ТоварыНоменклатураПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыНоменклатураПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	УправлениеДиалогомДокументаСервер.НоменклатураПриИзменении(ЭтотОбъект, ТекущиеДанные, ПараметрыДействия);
	
	РассчитатьМассуСтрокиТовары(ТекущиеДанные);
	
	Если Элементы.ТоварыМасса.Видимость Тогда
		ОбработкаТабличнойЧастиТовары.ВывестиОбщуюМассуТоваров(Объект.Товары, ТоварыМассаТекстПодвала, ЕдиницаИзмеренияМассы);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;

	ТоварыНоменклатураПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтрока", ТекущиеДанные.Номенклатура);
	
	УправлениеДиалогомДокументаКлиент.ТоварыНоменклатураНачалоВыбора(
		ЭтотОбъект,
		Элемент,
		ДанныеВыбора,
		ВыборДобавлением,
		СтандартнаяОбработка,
		ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ТоварыХарактеристикаНоменклатурыПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыХарактеристикаНоменклатурыПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыХарактеристикаНоменклатурыПриИзменении(Элемент)
	
	ТоварыХарактеристикаНоменклатурыПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыЕдиницаИзмеренияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыЕдиницаИзмеренияПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	РассчитатьМассуСтрокиТовары(ТекущиеДанные);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	ТоварыЕдиницаИзмеренияПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыКоличествоПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыКоличествоПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	РассчитатьМассуСтрокиТовары(ТекущиеДанные);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТоварыКоличествоПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыКоличествоБазовоеПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыКоличествоБазовоеПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	РассчитатьМассуСтрокиТовары(ТекущиеДанные);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыКоличествоБазовоеПриИзменении(Элемент)
	
	ТоварыКоличествоБазовоеПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыЦенаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыЦенаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТоварыЦенаПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыСуммаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыСуммаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	ТоварыСуммаПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыСуммаВсегоПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыСуммаВсегоПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыСуммаВсегоПриИзменении(Элемент)
	
	ТоварыСуммаВсегоПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыСтавкаНДСПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыСтавкаНДСПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	
	ТоварыСтавкаНДСПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыСуммаНДСПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыСуммаНДСПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыСуммаНДСПриИзменении(Элемент)
	
	ТоварыСуммаНДСПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыГТДПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ТоварыГТДПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыГТДПриИзменении(Элемент)
	
	ТоварыГТДПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийПолейТаблицыФормыЗачетАвансов

&НаСервере
Процедура ЗачетАвансовДокументАвансаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.ЗачетАвансов.НайтиПоИдентификатору(Элементы.ЗачетАвансов.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ЗачетАвансовДокументАвансаПриИзменении(
		Объект,
		ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗачетАвансовДокументАвансаПриИзменении(Элемент)
	
	ЗачетАвансовДокументАвансаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПолейТаблицыФормыЗачетАвансов

&НаСервере
Процедура ЗачетАвансовПоставкиДокументАвансаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.ЗачетАвансов.НайтиПоИдентификатору(Элементы.ЗачетАвансов.ТекущаяСтрока);
	Документы.ПередачаТоваровМеждуОрганизациями.ЗачетАвансовПоставкиДокументАвансаПриИзменении(
		Объект,
		ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗачетАвансовПоставкиДокументАвансаПриИзменении(Элемент)
	
	ЗачетАвансовПоставкиДокументАвансаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ПодборНоменклатуры(Команда)
	
	ПараметрыДействия = Новый Структура();
	
	// Вызываем общий обработчик события
	УправлениеДиалогомКлиент.ОткрытьПодборНоменклатуры(ЭтотОбъект,,,,, ПараметрыДействия);
	
КонецПроцедуры // ПодборНоменклатуры()

&НаКлиенте
Процедура ПодборАвансов(Команда)
	
	УправлениеДиалогомКлиент.ОткрытьПодборАвансов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборАвансовОтправителя(Команда)
	
	ОбработчикОповещения = Новый ОписаниеОповещения(
		"Подключаемый_ОбработкаРезультатаОповещения",
		ЭтотОбъект,
		"ПодборАвансов");
	
	ПараметрыПодбора = Новый Структура();
	ПараметрыПодбора.Вставить("Период", ?(Объект.Ссылка.Пустая(), Неопределено, Объект.Дата));
	ПараметрыПодбора.Вставить("Организация", Объект.ОрганизацияПолучатель);
	ПараметрыПодбора.Вставить("Контрагент", Объект.КонтрагентПоставки);
	ПараметрыПодбора.Вставить("ДоговорВзаиморасчетов", Объект.ДоговорВзаиморасчетовПоставки);
	ПараметрыПодбора.Вставить("РасчетыСПокупателем", Ложь);
	ПараметрыПодбора.Вставить("ЗачтенныеАвансы", Объект.ЗачетАвансовПоставки);
	ПараметрыПодбора.Вставить(
		"СуммаДокумента",
		Объект.Товары.Итог("СуммаВсего"));
	ПараметрыПодбора.Вставить("ВалютаДокумента", Объект.ВалютаДокумента);
	ПараметрыПодбора.Вставить("КурсДокумента", Объект.КурсДокумента);
	
	ОткрытьФорму(
		"ОбщаяФорма.ПодборАвансов",
		ПараметрыПодбора,
		ЭтотОбъект,,,,
		ОбработчикОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РассчитатьМассуСтрокиТовары(ТекущиеДанные)
	
	Если Элементы.ТоварыМасса.Видимость Тогда
		ТекущиеДанные.Масса = ОбработкаТабличнойЧастиТовары.ПолучитьМассуСтрокиТовары(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры //РассчитатьМассуСтрокиТовары()

&НаСервере
Процедура РассчитатьМассуНоменклатуры()
	
	Если Элементы.ТоварыМасса.Видимость Тогда
		Для Каждого СтрокаТаблицы Из Объект.Товары Цикл
			РассчитатьМассуСтрокиТовары(СтрокаТаблицы);
		КонецЦикла;
		
		ОбработкаТабличнойЧастиТовары.ВывестиОбщуюМассуТоваров(Объект.Товары, ТоварыМассаТекстПодвала, ЕдиницаИзмеренияМассы);
	КонецЕсли;
	
КонецПроцедуры // РассчитатьМассуНоменклатуры()

//@skip-warning
&НаКлиенте
Процедура ПроверкаПодразделенияДокументаИПользователяЗавершение(Ответ, Контекст) Экспорт
	
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЗаполнениеОбъектов
&НаКлиенте
Процедура ПослеОбработкиЗаполнения(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ПослеОбработкиЗаполненияНаСервере();
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПослеОбработкиЗаполненияНаСервере()
	
	ЗаполнениеОбъектовАльфаАвто.ПослеОбработкиЗаполнения(ЭтотОбъект, Объект);
	
	ЭтотОбъект.Модифицированность = Истина;
		
КонецПроцедуры
// Конец ЗаполнениеОбъектов

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_ДекорацияСостояниеОригиналаНажатие()
	
	// СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	УчетОригиналовПервичныхДокументовКлиент.ОткрытьМенюВыбораСостояния(ЭтотОбъект, Элементы.ДекорацияСостояниеОригинала);
	//Конец СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиАльфаАвто

// Ядро
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСуммаДокументаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.ПоказатьРасширенныеИтогиОперации(ЭтотОбъект, Элемент);
	
КонецПроцедуры
// Конец Ядро

// СчетаФактуры
&НаКлиенте
Процедура НадписьНалоговыйДокументНажатие(Элемент)
	
	УправлениеДиалогомДокументаКлиент.НадписьНалоговыйДокументНажатие(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
	ВидыДоговоровПокупки = Новый Массив;
	ВидыДоговоровПокупки.Добавить(Перечисления.ВидыДоговоров.Покупка);
	ВидыДоговоровПокупки.Добавить(Перечисления.ВидыДоговоров.Прочее);
	УправлениеДиалогомСервер.ОбновитьПараметрВыбора(Элементы.ДоговорВзаиморасчетовПоставки.ПараметрыВыбора, "Отбор.ВидДоговора", ВидыДоговоровПокупки);
	
	
	ПараметрыСвязиДляПолучателя = ПараметрыВыбораДокументаАванса();
	ПараметрыСвязиДляПолучателя.ИмяРеквизитаДокументаАванса = "ЗачетАвансовДокументАванса";
	ПараметрыСвязиДляПолучателя.ИмяРеквизитаОрганизация = "Организация";
	ПараметрыСвязиДляПолучателя.ИмяРеквизитаКонтрагент = "Контрагент";
	ПараметрыСвязиДляПолучателя.ИмяРеквизитаДоговорВзаиморасчетов = "ДоговорВзаиморасчетов";
	УправлениеДиалогомДокументаСервер.РасставитьСвязиПараметровВыбораДокументовАванса(
		ЭтотОбъект,,,
		ПараметрыСвязиДляПолучателя);
	
	ПараметрыСвязиДляОтправителя = ПараметрыВыбораДокументаАванса();
	ПараметрыСвязиДляОтправителя.ИмяРеквизитаДокументаАванса = "ЗачетАвансовПоставкиДокументАванса";
	ПараметрыСвязиДляОтправителя.ИмяРеквизитаОрганизация = "ОрганизацияПолучатель";
	ПараметрыСвязиДляОтправителя.ИмяРеквизитаКонтрагент = "КонтрагентПоставки";
	ПараметрыСвязиДляОтправителя.ИмяРеквизитаДоговорВзаиморасчетов = "ДоговорВзаиморасчетовПоставки";
	УправлениеДиалогомДокументаСервер.РасставитьСвязиПараметровВыбораДокументовАванса(
		ЭтотОбъект,,,
		ПараметрыСвязиДляОтправителя);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомДокументаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	// колонки ТЧ
	Элементы.ТоварыОстатокНаСкладе.Видимость = Истина;
	Элементы.ТоварыМасса.Видимость = Истина;
	
	Элементы.СпособЗачетаАвансовПоставки.ТолькоПросмотр =
		НЕ ПраваИНастройкиПользователя.Значение("РедактированиеСпособаЗачатаАвансов", Объект);
	
	ИменаРеквизитовАвансаПоставки = Новый Структура;
	ИменаРеквизитовАвансаПоставки.Вставить("ИмяЗачетАвансовСумма", "ЗачетАвансовПоставкиСумма");
	ИменаРеквизитовАвансаПоставки.Вставить("ИмяЗачетАвансовСуммаОстаток", "ЗачетАвансовПоставкиСуммаОстаток");
	ИменаРеквизитовАвансаПоставки.Вставить("ИмяРеквизитаСпособЗачетаАвансов", "СпособЗачетаАвансовПоставки");
	ИменаРеквизитовАвансаПоставки.Вставить("ИмяРеквизитаДоговорВзаиморасчетов", "ДоговорВзаиморасчетовПоставки");
	ИменаРеквизитовАвансаПоставки.Вставить("ИмяРеквизитаЗачетаАвансов", "ЗачетАвансовПоставки");
	ИменаРеквизитовАвансаПоставки.Вставить("ИмяПодборАвансов", "ПодборАвансовОтправителя");
	
	УправлениеДиалогомДокументаСервер.УстановитьДоступностьРеквизитовВзаиморасчетов(
		ЭтотОбъект,
		Объект,
		ИменаРеквизитовАвансаПоставки);
	
	УправлениеДиалогомДокументаСервер.УстановитьЗаголовокКолонокЗачетаАвансов(
		ЭтотОбъект,
		Объект,
		Объект.ДоговорВзаиморасчетовПоставки,
		ИменаРеквизитовАвансаПоставки);
	
КонецПроцедуры // УправлениеДиалогомНаСервере()

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УправлениеДиалогомДокументаСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект);
	
	УправлениеДиалогомДокументаСервер.УстановитьУсловноеОформлениеРучногоСписанияХарактеристик(ЭтотОбъект);
	УправлениеДиалогомДокументаСервер.УстановитьУсловноеОформлениеСуммыВсего(ЭтотОбъект);
	
	// Запрет редактирования Суммы
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыСумма.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыСуммаВсегоТолькоПросмотр");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	Если ДополнительныеПараметры = "ПодборАвансов"
		И ТипЗнч(РезультатОповещения) = Тип("Структура") Тогда
		РезультатОповещения.Вставить("ИмяТабличнойЧастиАвансов",
			?(ПолучитьЗначениеПараметраСтруктуры(РезультатОповещения, "РасчетыСПокупателем", Истина),
				"ЗачетАвансов", "ЗачетАвансовПоставки"));
	КонецЕсли;
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьМассуНоменклатуры();
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если НЕ УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры 

#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект, РезультатОповещения);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыДоставкиНажатие(Элемент)
	УправлениеПечатьюКлиентАльфаАвто.ОткрытьФормуРедактированияРеквизитовДоставки(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область Штрихкодирование

&НаКлиенте
Процедура Подключаемый_ШтрихкодированиеОбработкаОповещения(РезультатОповещения,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если РезультатОповещения.Свойство("Действие") Тогда
		ШтрихкодированиеОбработкаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ШтрихкодированиеОбработкаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ШтрихкодированиеВызовСервера.ОбработкаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры, , Объект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Подключаемый_ОбновитьЗаголовокНадписиНалоговыйДокумент(РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	ОбновитьЗаголовокНадписиНалоговыйДокументНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокНадписиНалоговыйДокументНаСервере()
	
	РаботаСФормойВызовСервера.ОбновитьЗаголовокНадписиНалоговыйДокумент(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаСервере
Функция ПараметрыВыбораДокументаАванса()
	
	ПараметрыСвязи = Новый Структура;
	ПараметрыСвязи.Вставить("ИмяРеквизитаДокументаАванса");
	ПараметрыСвязи.Вставить("ИмяРеквизитаОрганизация");
	ПараметрыСвязи.Вставить("ИмяРеквизитаКонтрагент");
	ПараметрыСвязи.Вставить("ИмяРеквизитаДоговорВзаиморасчетов");
	
	Возврат ПараметрыСвязи;
	
КонецФункции

#КонецОбласти