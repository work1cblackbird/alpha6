
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец УтверждениеДокументов
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	
	РазрешитьРедактированиеЦенИСумм = ПраваИНастройкиПользователя.Значение("РедактированиеЦенИСуммВНоменклатурныхТаблицах", Объект);
	РаботаСФормой.РазрешитьРедактированиеЦенИСумм(
		РаботаСФормой.ТиповыеПоляСуммовыхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм
	);
	РаботаСФормой.ОткрытьФормуТолькоДляПросмотра(ЭтотОбъект, Объект);
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		НастройкаПараметровВыбораСервиснойКампании();
		Возврат;
		
	КонецЕсли;
	
	ТекущаяМаркаПоУмолчанию = УчетныеПолитикиСервер.Значение(
		"МаркаПоУмолчанию", 
		ТекущаяДатаСеанса(),
		ПараметрыСеанса.ПодразделениеКомпании
	);
	
	Если Объект.Марка.Пустая() Тогда
		
		Если ТекущаяМаркаПоУмолчанию = Справочники.Марки.ПустаяСсылка() Тогда
			
			Объект.Марка = Справочники.Марки.МаркаНеУказана;
			
		Иначе
			
			Объект.Марка = ТекущаяМаркаПоУмолчанию;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НеСтандартнаяМарка(Объект.Марка) И Элементы.Найти("Модель") <> Неопределено Тогда
		
		УправлениеДиалогомСервер.ОбновитьПараметрВыбора(
			Элементы.Модель.ПараметрыВыбора,
			"Отбор.Марка",
			Объект.Марка
		);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Автомобиль) Тогда
		
		ЗначениеВРеквизитФормы(Объект.Автомобиль.ПолучитьОбъект(), "АвтомобильЗаказа");
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(
			АвтомобильЗаказа,
			Объект,
			"Модель,ВариантКомплектации,Цвет,ЦветКод,ТипСалона"
		);
		Документы.ЗаказНаАвтомобиль.ОбновитьДанныеАвтомобиляЗаказа(АвтомобильЗаказа);
		АвтомобильЗаказа.НаименованиеПолное = НСтр("ru = 'Будет создан при проведении документа'");
		
	КонецЕсли;
	
	АвтомобильЗаказаНаФорме = АвтомобильЗаказа.Ссылка;
	ОбновитьБазовыеОпции();
	НастроитьПараметрыВыбораОпций();
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец УтверждениеДокументов
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УправлениеДиалогомАльфаАвтоКлиент.ПриОткрытии(ЭтотОбъект);
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);

КонецПроцедуры 

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия = Неопределено)
	
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец УтверждениеДокументов
	
	Если ИмяСобытия = "ПеречитатьДополнительныеРеквизиты" Тогда
		ОбработкаОповещенияНаСервере();
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияНаСервере()
	
	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект, Объект);
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ОбновитьБазовыеОпции();
	НастроитьПараметрыВыбораЭлементовФормы();
	НастроитьПараметрыВыбораОпций();
	
	Если ЗначениеЗаполнено(Объект.Автомобиль) Тогда
		
		ЗначениеВРеквизитФормы(Объект.Автомобиль.ПолучитьОбъект(), "АвтомобильЗаказа");
		АвтомобильЗаказаНаФорме = АвтомобильЗаказа.Ссылка;
		
	Иначе
		
		АвтомобильЗаказаОбъект = РеквизитФормыВЗначение("АвтомобильЗаказа");
		ЗаполнитьЗначенияСвойств(АвтомобильЗаказаОбъект, Объект);
		Документы.ЗаказНаАвтомобиль.ОбновитьДанныеАвтомобиляЗаказа(АвтомобильЗаказаОбъект);
		ЗначениеВРеквизитФормы(АвтомобильЗаказаОбъект, "АвтомобильЗаказа");
		
	КонецЕсли;
	
	УстановитьРасширенноеПредставлениеСрокаПоставки();
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	Отказ = Отказ Или РаботаСФормойКлиент.НачатьПроверкуПодразделенияДокументаИПользователя(
		Объект.ПодразделениеКомпании,
		Новый ОписаниеОповещения(
			"ПроверкаПодразделенияДокументаИПользователяЗавершение",
			ЭтотОбъект,
			Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)
		)
	);

	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗаписатьАвтомобиль = Истина;
	Если НЕ ЗначениеЗаполнено(АвтомобильЗаказа.Ссылка) Тогда
		
		Если НЕ ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ЗаписатьАвтомобиль = Ложь;
		ИначеЕсли АвтомобильЗаказа.НаименованиеПолное = НСтр("ru = '<будет создан при проведении документа>'") Тогда
			// Сформируем наименование автомобиля
			Документы.ЗаказНаАвтомобиль.ОбновитьДанныеАвтомобиляЗаказа(
				АвтомобильЗаказа,
				Новый Структура("ОбновитьНаименование", Истина)
			);
			АвтомобильЗаказа.НаименованиеПолное = АвтомобильЗаказа.Наименование;
		КонецЕсли;
		АвтомобильОбъект = РеквизитФормыВЗначение("АвтомобильЗаказа", Тип("СправочникОбъект.Автомобили"));
	Иначе
		АвтомобильОбъект = АвтомобильЗаказа.Ссылка.ПолучитьОбъект();
		
		ПереносимыеПоля = Новый Массив;
		ПереносимыеПоля.Добавить("Наименование");
		ПереносимыеПоля.Добавить("Марка");
		ПереносимыеПоля.Добавить("Модель");
		ПереносимыеПоля.Добавить("ВариантКомплектации");
		ПереносимыеПоля.Добавить("Цвет");
		ПереносимыеПоля.Добавить("ЦветКод");
		ПереносимыеПоля.Добавить("ТипСалона");
		ПереносимыеПоля.Добавить("ДатаОкончанияГарантии");
		
		// Проверим изменились ли значения реквизитов.
		ЗаписатьАвтомобиль = Ложь;
		Для Каждого ИмяРеквизита Из ПереносимыеПоля Цикл
			Если НЕ АвтомобильОбъект[ИмяРеквизита] = АвтомобильЗаказа[ИмяРеквизита] Тогда
				ЗаписатьАвтомобиль = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗаписатьАвтомобиль Тогда
			ЗаполнитьЗначенияСвойств(АвтомобильОбъект, АвтомобильЗаказа, стрСоединить(ПереносимыеПоля, ","));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗаписатьАвтомобиль Тогда
		АвтомобильОбъект.ОбменДанными.Загрузка = Истина;
		АвтомобильОбъект.Заполнить(Новый Структура);
		Если НЕ ЗначениеЗаполнено(АвтомобильОбъект.Код) Тогда
			АвтомобильОбъект.УстановитьНовыйКод();
		КонецЕсли;
		Если АвтомобильОбъект.ЭтоНовый() Тогда
			АвтомобильОбъект.Родитель        = Справочники.Автомобили.АвтомобилиПоЗаказам;
			АвтомобильОбъект.Автор           = Пользователи.ТекущийПользователь();
			АвтомобильОбъект.ДатаРегистрации = Объект.Дата;
		КонецЕсли;
		
		АвтомобильОбъект.НаименованиеПолное = АвтомобильОбъект.Наименование;
		
		Попытка
			АвтомобильОбъект.Записать();
		Исключение
			ОбщегоНазначения.СообщитьПользователю(Нстр("ru = 'Не удалось записать автомобиль.'"),,,, Отказ);
			Возврат;
		КонецПопытки;
		
		ТекущийОбъект.Автомобиль = АвтомобильОбъект.Ссылка;
		ЗначениеВРеквизитФормы(ТекущийОбъект.Автомобиль.ПолучитьОбъект(), "АвтомобильЗаказа");
		ЭтаФорма.АвтомобильЗаказаНаФорме = ЭтаФорма.АвтомобильЗаказа.Ссылка;
	КонецЕсли;
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормойКлиент.ОповеститьОЗаписиДокумента(Объект.Ссылка);
	АвтомобильЗаказаНаФорме = АвтомобильЗаказа.Ссылка;
	ОтобразитьИзменениеДанных(АвтомобильЗаказаНаФорме, ВидИзмененияДанных.Изменение);
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);
	
КонецПроцедуры 

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтатусАвтомобиляПриИзменении(Элемент)
	
	СтатусАвтомобиляПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СтатусАвтомобиляПриИзмененииНаСервере()
	
	Если НЕ Объект.СтатусАвтомобиля.ЗаказПоставщику Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Статус автомобиля <" + Объект.СтатусАвтомобиля +
			"> не может быть использован для документов <Заказ поставщику на автомобиль>.'"), Объект.Ссылка, "СтатусАвтомобиля");
		Объект.СтатусАвтомобиля = Справочники.СтатусыАвтомобилей.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильЗаказаНаименованиеПолноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура("ТекущаяСтрока,Марка, Модель,ВариантКомплектации,ТипСалона",
		Объект.Автомобиль, Объект.Марка, Объект.Модель, Объект.ВариантКомплектации, Объект.ТипСалона);

	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтотОбъект, "ВыборАвтомобиля");
	
	ОткрытьФорму("Документ.ЗаказПоставщикуНаАвтомобиль.Форма.ФормаВыбораАвтомобиля",
		ПараметрыОткрытия, Элемент, Элемент, , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ЗаказПоставщикуНаАвтомобиль.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	ПараметрыДействия = Новый Структура;
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ЗаказПоставщикуНаАвтомобиль.ДатаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура МаркаПриИзменении(Элемент = Неопределено)
	
	Если Не Элементы.Найти("Модель")=Неопределено Тогда
		Если ЗначениеЗаполнено(Объект.Марка) И НеСтандартнаяМарка(Объект.Марка) Тогда
			УправлениеДиалогомВызовСервера.ОбновитьПараметрВыбора(ЭтаФорма.Элементы.Модель.ПараметрыВыбора, "Отбор.Марка", Объект.Марка);
		Иначе
			УправлениеДиалогомВызовСервера.УдалитьПараметрВыбора(ЭтаФорма.Элементы.Модель.ПараметрыВыбора, "Отбор.Марка");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура МаркаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Объект.Модель = Справочники.Модели.ПустаяСсылка();
	ОбновитьБазовыеОпции();
	НастроитьПараметрыВыбораОпций();
	
КонецПроцедуры

&НаКлиенте
Процедура МаркаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	МаркаМодели = МаркаМодели(Объект.Модель);
	Если НЕ МаркаМодели = ВыбранноеЗначение И ЗначениеЗаполнено(Объект.Модель) Тогда
		СтандартнаяОбработка = Ложь;
		Режим = РежимДиалогаВопрос.ДаНет;
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Вопрос", "ВопросСоответствияМарок");
		ДополнительныеПараметры.Вставить("ВыбранноеЗначение", ВыбранноеЗначение);
		Оповещение = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, "Текущая модель марки <" + МаркаМодели + ">. Выбрана марка автомобиля <" + ВыбранноеЗначение + ">. 
			|Подтвердить выбор марки и очистить модель?", Режим);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура МодельПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ПараметрыДействия.Вставить("АвтомобильЗаказа", АвтомобильЗаказа);
	
	Документы.ЗаказПоставщикуНаАвтомобиль.МодельПриИзменении(Объект, ПараметрыДействия);
	Документы.ЗаказНаАвтомобиль.ОбновитьДанныеАвтомобиляЗаказа(АвтомобильЗаказа);
	АвтомобильЗаказаНаФорме = АвтомобильЗаказа.Ссылка;
	
	ОбновитьБазовыеОпции();
	НастроитьПараметрыВыбораОпций();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент = Неопределено)
	
	ПараметрыДействия = Новый Структура;
	МодельПриИзмененииНаСервере(ПараметрыДействия);
	УдалитьНесовместимыеДополнительныеОпции();
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура МодельНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("Марка", Объект.Марка);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("Справочник.Модели.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма,,,, Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтотОбъект, ПараметрыОткрытия),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ВариантКомплектацииПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ПараметрыДействия.Вставить("АвтомобильЗаказа", АвтомобильЗаказа);
	
	Документы.ЗаказПоставщикуНаАвтомобиль.ВариантКомплектацииПриИзменении(Объект, ПараметрыДействия);
	Документы.ЗаказНаАвтомобиль.ОбновитьДанныеАвтомобиляЗаказа(АвтомобильЗаказа, ПараметрыДействия);
	АвтомобильЗаказаНаФорме = АвтомобильЗаказа.Ссылка;
	
	ОбновитьБазовыеОпции();
	НастроитьПараметрыВыбораОпций();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантКомплектацииПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;	
	ВариантКомплектацииПриИзмененииНаСервере(ПараметрыДействия);
	УдалитьНесовместимыеДополнительныеОпции();
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ЗаказПоставщикуНаАвтомобиль.КонтрагентПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УстановитьРасширенноеПредставлениеСрокаПоставки();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	КонтрагентПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ЗаказПоставщикуНаАвтомобиль.ДоговорВзаиморасчетовПриИзменении(Объект, ПараметрыДействия);
	УстановитьРасширенноеПредставлениеСрокаПоставки();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорВзаиморасчетовПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;	
	ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ЦветПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);	
	ЭтаФорма.АвтомобильЗаказаНаФорме = ЭтаФорма.АвтомобильЗаказа.Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура ЦветПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// добавим параметр автомобиль заказа
	ПараметрыДействия.Вставить("АвтомобильЗаказа", АвтомобильЗаказа);
	
	Документы.ЗаказПоставщикуНаАвтомобиль.ЦветПриИзменении(Объект, ПараметрыДействия);
	Документы.ЗаказНаАвтомобиль.ОбновитьДанныеАвтомобиляЗаказа(АвтомобильЗаказа);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЦветКодПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ПараметрыДействия.Вставить("АвтомобильЗаказа", АвтомобильЗаказа);	
	Документы.ЗаказПоставщикуНаАвтомобиль.ЦветКодПриИзменении(Объект, ПараметрыДействия);
	Документы.ЗаказНаАвтомобиль.ОбновитьДанныеАвтомобиляЗаказа(АвтомобильЗаказа, ПараметрыДействия);

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветКодПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ЦветКодПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ТипСалонаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// добавим параметр автомобиль заказа
	ПараметрыДействия.Вставить("АвтомобильЗаказа", АвтомобильЗаказа);
	
	Документы.ЗаказПоставщикуНаАвтомобиль.ТипСалонаПриИзменении(Объект, ПараметрыДействия);
	
	// вызовем обработчки заполнения автомобиля заказа
	Документы.ЗаказНаАвтомобиль.ОбновитьДанныеАвтомобиляЗаказа(АвтомобильЗаказа, ПараметрыДействия);
	ЭтаФорма.АвтомобильЗаказаНаФорме = ЭтаФорма.АвтомобильЗаказа.Ссылка;
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ТипСалонаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ТипСалонаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ЦенаАвтомобиляПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ЗаказПоставщикуНаАвтомобиль.ЦенаАвтомобиляПриИзменении(Объект, ПараметрыДействия);
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Объект.Автомобиль, ПараметрыДействия);	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаАвтомобиляПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ЦенаАвтомобиляПриИзмененииНаСервере(ПараметрыДействия);	
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СуммаНДСНаАвтомобильПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ЗаказПоставщикуНаАвтомобиль.СуммаНДСНаАвтомобильПриИзменении(Объект, ПараметрыДействия);	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаНДСНаАвтомобильПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СуммаНДСНаАвтомобильПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СуммаВсегоНаАвтомобильПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ЗаказПоставщикуНаАвтомобиль.СуммаВсегоНаАвтомобильПриИзменении(Объект, ПараметрыДействия);	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаВсегоНаАвтомобильПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СуммаВсегоНаАвтомобильПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СтавкаНДСНаАвтомобильПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ЗаказПоставщикуНаАвтомобиль.СтавкаНДСНаАвтомобильПриИзменении(Объект, ПараметрыДействия);	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСНаАвтомобильПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;	
	СтавкаНДСНаАвтомобильПриИзмененииНаСервере(ПараметрыДействия);	
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СрокПоставкиПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	УстановитьРасширенноеПредставлениеСрокаПоставки();	
	
КонецПроцедуры

&НаКлиенте
Процедура СрокПоставкиПриИзменении(Элемент)
	
	СрокПоставкиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СервиснаяКампанияРасширеннаяПодсказкаНажатие(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Автомобиль) Тогда
		ПараметрыОткрытия = Новый Структура("Автомобиль,ТолькоАктуальные", Объект.Автомобиль, Истина);
		
		ОткрытьФорму("РегистрСведений.ВыполнениеСервисныхКампаний.Форма.СервисныеКампанииАвтомобиля",
					 ПараметрыОткрытия,
					 ЭтотОбъект,,,,,
					 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовУправленияОбщегоНазначения

&НаКлиенте
Процедура АвтомобильЗаказаНаименованиеПолноеРасширеннаяПодсказкаНажатие(Элемент)
	

	АвтомобилиКлиент.ОтчетИсторияАвтомобиля(ЭтотОбъект, АвтомобильЗаказа.Ссылка);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОпции

&НаКлиенте
Процедура ОпцииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДиалогомАльфаАвтоКлиент.ОпцииПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

&НаСервере
Процедура ОпцииПослеУдаленияНаСервере(ПараметрыДействия = Неопределено)
	
	УправлениеДиалогомАльфаАвтоСервер.ОпцииПослеУдаления(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииПослеУдаления(Элемент)
	
	ОпцииПослеУдаленияНаСервере();
	
КонецПроцедуры

#Область ОбработчикиСобытийПолейТаблицыФормыОпции

&НаСервере
Процедура ОпцииОпцияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Опции.НайтиПоИдентификатору(Элементы.Опции.ТекущаяСтрока);
	Документы.ЗаказПоставщикуНаАвтомобиль.ОпцииОпцияПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииОпцияПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ОпцииОпцияПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОпцииКоличествоПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Опции.НайтиПоИдентификатору(Элементы.Опции.ТекущаяСтрока);
	Документы.ЗаказПоставщикуНаАвтомобиль.ОпцииКоличествоПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииКоличествоПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ОпцииКоличествоПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОпцииЦенаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Опции.НайтиПоИдентификатору(Элементы.Опции.ТекущаяСтрока);
	Документы.ЗаказПоставщикуНаАвтомобиль.ОпцииЦенаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииЦенаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;	
	ОпцииЦенаПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОпцииСуммаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Опции.НайтиПоИдентификатору(Элементы.Опции.ТекущаяСтрока);	
	Документы.ЗаказПоставщикуНаАвтомобиль.ОпцииСуммаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииСуммаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ОпцииСуммаПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОпцииСуммаВсегоПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Опции.НайтиПоИдентификатору(Элементы.Опции.ТекущаяСтрока);
	Документы.ЗаказПоставщикуНаАвтомобиль.ОпцииСуммаВсегоПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииСуммаВсегоПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ОпцииСуммаВсегоПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОпцииСтавкаНДСПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Опции.НайтиПоИдентификатору(Элементы.Опции.ТекущаяСтрока);	
	Документы.ЗаказПоставщикуНаАвтомобиль.ОпцииСтавкаНДСПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииСтавкаНДСПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ОпцииСтавкаНДСПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ПодборОпций(Команда)
	
	УправлениеДиалогомКлиент.ОткрытьПодборОпций(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьРасширенноеПредставлениеСрокаПоставки()
	
	Если ЗначениеЗаполнено(Объект.СрокПоставки) Тогда
		Если Объект.Ссылка.Пустая() ИЛИ НЕ Объект.Проведен Тогда
			ПросроченоДней = Цел((ТекущаяДатаСеанса()-Объект.СрокПоставки)/86400);
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	МАКСИМУМ(ЗаказыАвтомобилей.Период) КАК Период,
			|	СУММА(ВЫБОР
			|		КОГДА ЗаказыАвтомобилей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
			|			ЗаказыАвтомобилей.Количество
			|		ИНАЧЕ
			|			-ЗаказыАвтомобилей.Количество
			|	КОНЕЦ) КАК Количество
			|ИЗ
			|	РегистрНакопления.ЗаказыАвтомобилей КАК ЗаказыАвтомобилей
			|ГДЕ
			|	ЗаказыАвтомобилей.Заказ = &Заказ";
			Запрос.УстановитьПараметр("Заказ", Объект.Ссылка);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			ПросроченоДней = 0;
			Если Выборка.Следующий() Тогда
				Если Выборка.Период <> null И Выборка.Количество > 0 Тогда
					ПросроченоДней = Цел((ТекущаяДатаСеанса()-Объект.СрокПоставки)/86400);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		КолДней = Макс(ПросроченоДней, -ПросроченоДней);
		ОстатокОтДеления = КолДней%10; 
		Если ОстатокОтДеления = 0 ИЛИ ОстатокОтДеления >=5 И ОстатокОтДеления <=9 ИЛИ КолДней%100 >= 10 И КолДней%100 <= 19 Тогда
			НадписьДень =  "дней";
		ИначеЕсли ОстатокОтДеления = 1 Тогда
			НадписьДень = "день";
		ИначеЕсли ОстатокОтДеления >=2 И ОстатокОтДеления <=4 Тогда
			НадписьДень = "дня";
		КонецЕсли;
		
		Если ПросроченоДней > 0 Тогда
			Элементы.СрокПоставкиРасширеннаяПодсказка.Заголовок  = "просрочено на " + СокрЛП(ПросроченоДней) + " " + НадписьДень;
			Элементы.СрокПоставкиРасширеннаяПодсказка.ЦветТекста = Новый Цвет(128,0,0);
		Иначе
			Элементы.СрокПоставкиРасширеннаяПодсказка.Заголовок  = "";
			Элементы.СрокПоставкиРасширеннаяПодсказка.ЦветТекста = Новый Цвет(128,128,128);
		КонецЕсли;
	Иначе
		Элементы.СрокПоставкиРасширеннаяПодсказка.Заголовок = "<срок не определен>";
		Элементы.СрокПоставкиРасширеннаяПодсказка.ЦветТекста = Новый Цвет(128, 128, 128);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МаркаМодели(Модель)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Модель, "Марка");
КонецФункции

&НаСервере
Функция НеСтандартнаяМарка(ВыбраннаяМарка)
	Возврат НЕ ВыбраннаяМарка = Справочники.Марки.МаркаНеУказана;
КонецФункции

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
	НастройкаПараметровВыбораСервиснойКампании();
	
КонецПроцедуры // НастроитьПараметрыВыбораЭлементовФормы()

&НаСервере
Процедура НастроитьПараметрыВыбораОпций()
	
	ДоступныеОпции = Новый Массив();
	ДополнительныеОпции = ОпцииАвтомобилей.ДополнительныеОпцииКомплектации(Объект.ВариантКомплектации);
	УстановленныеНаАвтомобильОпции = ОпцииАвтомобилей.ОпцииУстановленныеНаАвтомобиль(Объект.Автомобиль);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеОпции, ДополнительныеОпции, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеОпции, УстановленныеНаАвтомобильОпции, Истина);
	
	Если ДоступныеОпции.Количество() = 0 Тогда
		ДоступныеОпции.Добавить(Справочники.Опции.ПустаяСсылка());
	КонецЕсли;
	
	УправлениеДиалогомСервер.ОбновитьПараметрВыбора(
		Элементы.ОпцииОпция.ПараметрыВыбора,
		"Отбор.Ссылка",
		ДоступныеОпции
	);
	
КонецПроцедуры

&НаСервере
Процедура НастройкаПараметровВыбораСервиснойКампании()
	
	СервисныеКомпании = АвтомобилиСервер.ПроверитьСервиснуюКампанию(
		Объект.Автомобиль,
		Объект.Дата,
		Истина,
		Объект.Ссылка
	).ВыгрузитьКолонку("СервиснаяКампания");
	
	АвтомобилиСервер.ОбновитьСостояниеСервиснойКомпании(
		СервисныеКомпании.Количество() > 0,
		Элементы.СервиснаяКампания,
		Элементы.СостояниеСервиснойКомпании
	);
	
	ШиринаПоляСервиснойКомпании = 38;
	ШиринаДекорацииСостояния = 2;
	
	Если Элементы.СостояниеСервиснойКомпании.Видимость Тогда
		
		Элементы
			.АвтомобильЗаказаНаименованиеПолное
			.МаксимальнаяШирина = ШиринаПоляСервиснойКомпании - ШиринаДекорацииСостояния;
		
	Иначе
		
		Элементы.АвтомобильЗаказаНаименованиеПолное.МаксимальнаяШирина = ШиринаПоляСервиснойКомпании;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьБазовыеОпции()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		БазовыеОпции,
		"ВариантКомплектации",
		Объект.ВариантКомплектации,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
	);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНесовместимыеДополнительныеОпции()
	
	Если Объект.Опции.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ВариантКомплектации = Объект.ВариантКомплектации;
	
	Если ВариантКомплектации = ПредопределенноеЗначение("Справочник.ВариантыКомплектации.ПустаяСсылка") Тогда
		
		ПоказатьПредупреждение(
			,
			НСтр("ru = 'Из таблицы опций будут удалены опции, несовместимые с выбранным вариантом комплектации.'")
		);
		Объект.Опции.Очистить();
		Возврат;
		
	КонецЕсли;
	
	НесовместимыеОпции = ПолучитьНесовместимыеДополнительныеОпции();
	
	Если НесовместимыеОпции = Неопределено Тогда
		
		ОбновитьОпцииНаСервере();
		Возврат;
		
	КонецЕсли;
	
	ПоказатьПредупреждение(
		,
		НСтр("ru = 'Из таблицы опций будут удалены опции, несовместимые с выбранным вариантом комплектации.'")
	);
	
	Для Каждого Строка Из НесовместимыеОпции Цикл
		
		НайденныеСтроки = Объект.Опции.НайтиСтроки(Новый Структура ("Опция", Строка));
		
		Для Каждого ТекСтрока Из НайденныеСтроки Цикл
			
			Объект.Опции.Удалить(ТекСтрока);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ОбновитьОпцииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНесовместимыеДополнительныеОпции()
	
	Возврат ОпцииАвтомобилей.ПолучитьНесовместимыеДополнительныеОпции(Объект);
	
КонецФункции

&НаСервере
Процедура ОбновитьОпцииНаСервере()
	
	Для Каждого Строка Из Объект.Опции Цикл
		
		Строка.Цена = 0;
		Документы.РабочийЛист.ОпцииОпцияПриИзменении(Объект, Строка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
 
	// Вызываем общий обработчик действия
	УправлениеДиалогомДокументаСервер.УстановитьУсловноеОформление(ЭтотОбъект);
	
	// Запрет редактирования ОпцииСумма	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОпцииСумма.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыСуммаВсегоТолькоПросмотр");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Запрет редактирования ОпцииСуммаВсего	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОпцииСуммаВсего.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыСуммаВсегоТолькоПросмотр");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры // УстановитьУсловноеОформление()

//@skip-warning
&НаКлиенте
Процедура ПроверкаПодразделенияДокументаИПользователяЗавершение(Контекст) Экспорт
	
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЗаполнениеОбъектов
&НаКлиенте
Процедура ПослеОбработкиЗаполнения(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ПослеОбработкиЗаполненияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеОбработкиЗаполненияНаСервере()
	
	ЗаполнениеОбъектовАльфаАвто.ПослеОбработкиЗаполнения(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ЗаполнениеОбъектов

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиАльфаАвто

// Ядро
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСуммаДокументаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.ПоказатьРасширенныеИтогиОперации(ЭтотОбъект, Элемент);
	
КонецПроцедуры
// Конец Ядро

&НаКлиенте
Процедура НадписьВзаиморасчетыНажатие(Элемент)
	
	УправлениеДиалогомДокументаКлиент.НадписьВзаиморасчетыНажатие(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомДокументаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	ДоступИзмененияАвтомобиля = ?(ЗначениеЗаполнено(АвтомобильЗаказа.Ссылка), ПравоДоступа("Изменение",Метаданные.Справочники.Автомобили), Истина);
	
	Элементы.ДанныеАвтомобиляЛево.ТолькоПросмотр = НЕ ДоступИзмененияАвтомобиля;
	Элементы.ЦветКодЛП.ТолькоПросмотр            = НЕ ДоступИзмененияАвтомобиля;
	Элементы.ТипСалона.ТолькоПросмотр            = НЕ ДоступИзмененияАвтомобиля;
	
	// установим доступность реквизитов в зависимости от хоз. операции
	Если Объект.ХозОперация = Справочники.ХозОперации.ЗаказПоставщикуНаАвтомобильОтмена Тогда
		Элементы.ГруппаОтменаЗаказа.Видимость = Истина;
	Иначе
		Элементы.ГруппаОтменаЗаказа.Видимость = Ложь;
	КонецЕсли;
	
	// Сформируем информацию об автомобиле
	Если ЗначениеЗаполнено(АвтомобильЗаказа.Ссылка) Тогда
		Элементы.АвтомобильЗаказаНаименованиеПолноеРасширеннаяПодсказка.Заголовок = Справочники.Автомобили.СформироватьИнформациюАвтомобиля(Объект, АвтомобильЗаказа.Ссылка);
	Иначе
		Элементы.АвтомобильЗаказаНаименованиеПолноеРасширеннаяПодсказка.Заголовок = АвтомобильЗаказа.Наименование+" (Новый автомобиль)";
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры = Неопределено)
	
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПолучитьЗначениеПараметраСтруктуры(ДополнительныеПараметры, "Действие", "") = "ВыборАвтомобиляСервер" Тогда
		Если РезультатОповещения = "ОТМЕНА" Тогда
			Возврат;
		ИначеЕсли РезультатОповещения = "ДА" Тогда
			ПараметрыДействия = Новый Структура("ОчиститьТЧ", Истина);
		Иначе
			ПараметрыДействия = Новый Структура("ОчиститьТЧ", Ложь);
		КонецЕсли;
		
		Объект.Автомобиль = ДополнительныеПараметры.Автомобиль;
		ЗначениеВРеквизитФормы(Объект.Автомобиль.ПолучитьОбъект(), "АвтомобильЗаказа");
		
		Документы.ЗаказПоставщикуНаАвтомобиль.АвтомобильПриИзменении(Объект, ПараметрыДействия);
		АвтомобильЗаказаНаФорме = АвтомобильЗаказа.Ссылка;
		
		ОбновитьБазовыеОпции();
		НастроитьПараметрыВыбораОпций();
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	// Вызываем общий обработчик события в контексте клиента
	Продолжать = УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(
		ЭтотОбъект,
		РезультатОповещения,
		ДополнительныеПараметры
	);
	Если НЕ Продолжать Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры = "ВыборАвтомобиля" Тогда
		Если (Объект.Опции.Количество() > 0) Тогда
			ПараметрыДействия = Новый Структура("Действие,Автомобиль", "ВыборАвтомобиляСервер", РезультатОповещения);
			
			Описание = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтотОбъект, ПараметрыДействия);
			
			ТекстВопроса = НСтр("ru = 'Очищать табличные части опции и оборудование?'");
			
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить("ДА"     , "Да");
			Кнопки.Добавить("НЕТ"    , "Нет");
			Кнопки.Добавить("ОТМЕНА" , "Отмена");
			
			ПоказатьВопрос(Описание, ТекстВопроса, Кнопки);
			
			Возврат;
		Иначе
			ДополнительныеПараметры = Новый Структура("Действие,Автомобиль", "ВыборАвтомобиляСервер", РезультатОповещения);
		КонецЕсли;
	ИначеЕсли ТипЗнч(РезультатОповещения) = Тип("СправочникСсылка.Модели") Тогда
		Объект.Модель = РезультатОповещения;
		МодельПриИзменении();
		Возврат;
	ИначеЕсли ПолучитьЗначениеПараметраСтруктуры(ДополнительныеПараметры,"Вопрос") = "ВопросСоответствияМарок" Тогда
		Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
			Объект.Марка = ДополнительныеПараметры.ВыбранноеЗначение;
			МаркаПриИзменении();
			МаркаПриИзмененииНаСервере();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	// Обработаем событие в контексте сервера
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	
	// Вызываем обработчик результата выполнения
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры // Подключаемый_ОбработкаРезультатаОповещения()

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры 

#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	                                                                                                                
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, 	РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект,			РезультатОповещения);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область УтверждениеДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуУтверждения(Команда)
	
	УтверждениеДокументовКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект.Ссылка);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбработкуКомандыУтвержденияНаСервере(ПараметрыОбработки,
		ДополнительныеПараметры) Экспорт
	
	ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры);
	Оповестить("ПослеУтвержденияДокументов", Объект.Ссылка, ИмяФормы);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры)
	
	УтверждениеДокументовВызовСервера.ОбработкаКомандыФормы(ЭтотОбъект, ПараметрыОбработки.ИмяКоманды, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКомандыУтвержденияДокументов()
	
	ОбновитьКомандыУтвержденияДокументовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКомандыУтвержденияДокументовНаСервере()
	
	УтверждениеДокументовКлиентСервер.УстановитьДоступностьКнопокУтверждения(ЭтотОбъект, Объект, ТолькоПросмотр);
	УтверждениеДокументовВызовСервера.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, Объект, ТолькоПросмотр);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти