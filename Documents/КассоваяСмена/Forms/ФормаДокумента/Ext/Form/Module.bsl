
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ПолныеФискальныеДанные.Видимость = Не Объект.Статус = Перечисления.СтатусыКассовойСмены.Открыта;
	Элементы.ПолныеФискальныеДанные.Видимость = ДоступныВсеФискальныеДанные;
	
	КассовыеСменыПереопределяемый.ФормаДокументаПриСозданииНаСервере(ЭтотОбъект);
	
	// Вызов БСП
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	Если ОбщегоНазначенияБПО.ПодсистемаСуществует("СтандартныеПодсистемы.ВерсионированиеОбъектов") Тогда
		МодульВерсионированиеОбъектов = ОбщегоНазначенияБПО.ОбщийМодуль("ВерсионированиеОбъектов");
		МодульВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// АльфаАвто
	// Отключили вызов подключаемых команд
	//// СтандартныеПодсистемы.ПодключаемыеКоманды
	//Если ОбщегоНазначенияБПО.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
	//	МодульПодключаемыеКоманды = ОбщегоНазначенияБПО.ОбщийМодуль("ПодключаемыеКоманды");
	//	МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	//КонецЕсли;
	//// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// Конец АльфаАвто
	
	// Конец Вызов БСП
	
	// АльфаАвто
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	// Конец АльфаАвто
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	XMLСтрока = ТекущийОбъект.ФДОЗакрытииСмены.Получить();
	Если XMLСтрока = Неопределено Или Не ТипЗнч(XMLСтрока) = Тип("Строка") Или XMLСтрока = "" Тогда
		ДоступныВсеФискальныеДанные = Ложь;
	Иначе
		ДоступныВсеФискальныеДанные = Истина;
	КонецЕсли;
	
	// АльфаАвто
	// Отключили вызов подключаемых команд
	//// Вызов БСП
	//// СтандартныеПодсистемы.ПодключаемыеКоманды
	//Если ОбщегоНазначенияБПО.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
	//	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияБПО.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	//	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	//КонецЕсли;
	//// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// Конец АльфаАвто
	
	// Конец Вызов БСП
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// АльфаАвто
	// Отключили вызов подключаемых команд
	//// Вызов БСП
	//// СтандартныеПодсистемы.ПодключаемыеКоманды
	//Если ОбщегоНазначенияБПОКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
	//	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияБПОКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	//	МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	//КонецЕсли;
	//// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// Конец АльфаАвто
	// Конец Вызов БСП
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// АльфаАвто
	// Отключили вызов подключаемых команд
	//// Вызов БСП
	//// СтандартныеПодсистемы.ПодключаемыеКоманды
	//Если ОбщегоНазначенияБПОКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
	//	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияБПОКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	//	МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	//КонецЕсли;
	//// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// Конец АльфаАвто
	// Конец Вызов БСП
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолныеФискальныеДанные(Команда)
	
	ПараметрыОткрытияВсехДанных = Новый Структура();
	ПараметрыОткрытияВсехДанных.Вставить("КассоваяСмена", Объект.Ссылка);
	
	ОткрытьФорму("Документ.КассоваяСмена.Форма.ФормаФискальныхДанных", ПараметрыОткрытияВсехДанных,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	// Вызов БСП
	Если ОбщегоНазначенияБПОКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияБПОКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
	КонецЕсли;
	// Конец Вызов БСП
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры)
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	
	// Конец Вызов БСП
	Если ОбщегоНазначенияБПО.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначенияБПО.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
	КонецЕсли;
	// Конец Вызов БСП
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	// Конец Вызов БСП
	Если ОбщегоНазначенияБПОКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияБПОКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	// Конец Вызов БСП
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

