// Модуль объекта документа "Ввод в оборот кодов маркировки".

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Автор.Сотрудник;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СпособВводаВОборот) Тогда
		СпособВводаВОборот = ПредопределенноеЗначение("Перечисление.СпособыВводаВОборот.МаркировкаОстатков");
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из Товары Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ИдентификаторТовара) Тогда
			ТекущаяСтрока.ИдентификаторТовара = Новый УникальныйИдентификатор;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(ТоварнаяГруппа) Тогда
		ТоварнаяГруппа = МаркировкаТоваровСервер.ТоварнаяГруппа(Товары.ВыгрузитьКолонку("Номенклатура"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Предварительно проверим ТЧ Коды маркировки
	МаркировкаТоваровСервер.ПроверкаКодовМаркировкиПередЗаписью(ЭтотОбъект);
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	МаркировкаТоваровСервер.ПроверитьЗаполнениеКодовМаркировки(ЭтотОбъект, Отказ, , , Истина);
	МаркировкаТоваровСервер.НоменклатураСоответствуетТоварнойГруппе(ЭтотОбъект, Отказ);
	
	Для Каждого СтрокаТовара Из Товары Цикл
		
		Если СпособВводаВОборот = Перечисления.СпособыВводаВОборот.ПолучениеОтФизическихЛиц
			И СтрокаТовара.ДатаПолученияТовара > ДатаПолученияТовара Тогда
			
			ТекстСообщения = Новый Массив();
			ТекстСообщения.Добавить(
				СтрШаблон(НСтр("ru = 'В строке %1 табличной части ""Товары"" указана дата'"), Строка(СтрокаТовара.НомерСтроки)));
			ТекстСообщения.Добавить(НСтр("ru = 'поступления больше по реквизиту документа ""Дата получения товара""'"));
			ОбщегоНазначения.СообщитьПользователю(
				СтрСоединить(ТекстСообщения, " "),
				ЭтотОбъект,
				СтрШаблон("Товары[%1].ДатаПолученияТовара", Строка((СтрокаТовара.НомерСтроки - 1))),
					,
				Отказ
			);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	// Только для записанных документов определим статус из регистра при необходимости
	Если
		ЗначениеЗаполнено(Ссылка)
		И ПолучитьЗначениеПараметраСтруктуры(ДополнительныеСвойства, "Статус") = Неопределено
	Тогда
		
		ДанныеСтатусаДокумента = РегистрыСведений.СтатусыДокументовМаркировки.ПолучитьСтатусДокумента(Ссылка);
		ДополнительныеСвойства.Вставить("ИдентификаторДокумента", ДанныеСтатусаДокумента.ИдентификаторДокумента);
		ДополнительныеСвойства.Вставить("Статус", ДанныеСтатусаДокумента.Статус);
		ДополнительныеСвойства.Вставить("ОписаниеОшибки", ДанныеСтатусаДокумента.ОписаниеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	
		НаборЗаписейСостоянияКодовМаркировки = РегистрыСведений.СостоянияКодовМаркировки.СоздатьНаборЗаписей();
		НаборЗаписейСостоянияКодовМаркировки.ДокументОбъект = ЭтотОбъект;
		ТаблицаКодовМаркировки = НаборЗаписейСостоянияКодовМаркировки.ТаблицаКодовМаркировки();
		
		КодМаркировкиВведенВОборот = РегистрыСведений.СостоянияКодовМаркировки.КодМаркировкиВведенВОборот(
			ТаблицаКодовМаркировки,
			ЭтотОбъект,
			РежимПроведенияДокумента.Неоперативный
		);
		
		Отказ = Отказ ИЛИ КодМаркировкиВведенВОборот;
	
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		МаркировкаТоваровСервер.ЗаписатьСтатусДокумента(Ссылка, ДополнительныеСвойства);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	// Удалим введенные в оборот коды маркировки
	НаборЗаписейСостоянияКодовМаркировки = РегистрыСведений.СостоянияКодовМаркировки.СоздатьНаборЗаписей();
	НаборЗаписейСостоянияКодовМаркировки.ДокументОбъект = ЭтотОбъект;
	НаборЗаписейСостоянияКодовМаркировки.ОтменаПроведения();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиЗаполненияОбъекта

// Производит заполнение объекта на основании документа "Заявка на расход ДС"
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_ЗаказКодовМаркировки(
	ДанныеЗаполнения,
	ТекстЗаполнения = "",
	СтандартнаяОбработка = Истина) Экспорт
	
	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат Истина;
	КонецЕсли;

	Если ДанныеЗаполнения.Статус <> Перечисления.СтатусыДокументовМаркировки.Выполнен Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Состояние заказа кодов маркировок не выполнено.
			|Проверьте наличие всех кодов маркировок.'"), ЭтотОбъект);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения.ДокументОснование) Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Текущий заказ введен на основании документа %1'"),
			ДанныеЗаполнения.ДокументОснование), ЭтотОбъект);
	КонецЕсли;
	
	УстановитьСпособВводаВОборот(ДанныеЗаполнения);
	
	Товары.Очистить();
	КодыМаркировки.Очистить();
	
	ТоварыДокумента = ДанныеЗаполнения.Товары.Выгрузить();
	ТоварыДокумента.Свернуть("Номенклатура,ХарактеристикаНоменклатуры", "Количество");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	СостоянияКодовМаркировки.Номенклатура КАК Номенклатура,
	               |	СостоянияКодовМаркировки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СостоянияКодовМаркировки.GTIN КАК GTIN,
	               |	СостоянияКодовМаркировки.СерийныйНомер КАК СерийныйНомер
	               |ПОМЕСТИТЬ СписокКодов
	               |ИЗ
	               |	РегистрСведений.СостоянияКодовМаркировки КАК СостоянияКодовМаркировки
	               |ГДЕ
	               |	СостоянияКодовМаркировки.ДокументОснование = &ДокументОснование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СписокКодов.Номенклатура КАК Номенклатура,
	               |	СписокКодов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СостоянияКодовМаркировкиСрезПоследних.Период КАК Период,
	               |	СостоянияКодовМаркировкиСрезПоследних.Состояние КАК Состояние,
	               |	СписокКодов.GTIN КАК GTIN,
	               |	СписокКодов.СерийныйНомер КАК СерийныйНомер
	               |ПОМЕСТИТЬ ТаблицаСостояний
	               |ИЗ
	               |	СписокКодов КАК СписокКодов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияКодовМаркировки.СрезПоследних(
	               |				,
	               |				(Номенклатура, ХарактеристикаНоменклатуры) В
	               |					(ВЫБРАТЬ
	               |						СписокКодов.Номенклатура КАК Номенклатура,
	               |						СписокКодов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	               |					ИЗ
	               |						СписокКодов КАК СписокКодов)) КАК СостоянияКодовМаркировкиСрезПоследних
	               |		ПО СписокКодов.Номенклатура = СостоянияКодовМаркировкиСрезПоследних.Номенклатура
	               |			И СписокКодов.ХарактеристикаНоменклатуры = СостоянияКодовМаркировкиСрезПоследних.ХарактеристикаНоменклатуры
	               |			И СписокКодов.GTIN = СостоянияКодовМаркировкиСрезПоследних.GTIN
	               |			И СписокКодов.СерийныйНомер = СостоянияКодовМаркировкиСрезПоследних.СерийныйНомер
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ТаблицаСостояний.Период) КАК Период,
	               |	ТаблицаСостояний.GTIN КАК GTIN,
	               |	ТаблицаСостояний.СерийныйНомер КАК СерийныйНомер
	               |ПОМЕСТИТЬ МаксимальныеПериоды
	               |ИЗ
	               |	ТаблицаСостояний КАК ТаблицаСостояний
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаСостояний.GTIN,
	               |	ТаблицаСостояний.СерийныйНомер
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаСостояний.Номенклатура КАК Номенклатура,
	               |	ТаблицаСостояний.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ТаблицаСостояний.Период КАК Период,
	               |	ТаблицаСостояний.Состояние КАК Состояние,
	               |	ТаблицаСостояний.GTIN КАК GTIN,
	               |	ТаблицаСостояний.СерийныйНомер КАК СерийныйНомер
	               |ИЗ
	               |	ТаблицаСостояний КАК ТаблицаСостояний
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимальныеПериоды КАК МаксимальныеПериоды
	               |		ПО ТаблицаСостояний.GTIN = МаксимальныеПериоды.GTIN
	               |			И ТаблицаСостояний.Период = МаксимальныеПериоды.Период
	               |			И ТаблицаСостояний.СерийныйНомер = МаксимальныеПериоды.СерийныйНомер
	               |ГДЕ
	               |	ТаблицаСостояний.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКодовМаркировки.Эмитирован)";
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	СписокМаркировок = Запрос.Выполнить().Выгрузить();
	
	СтруктураПоиска = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры");
	
	ШаблонСоСкобками = "(01)%1(21)%2";
	
	Для Каждого ТекущаяСтрока Из СписокМаркировок Цикл
		
		Если ПустаяСтрока(ТекущаяСтрока.GTIN)
			ИЛИ ПустаяСтрока(ТекущаяСтрока.СерийныйНомер) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекущаяСтрока);
		НайденныеСтроки = Товары.НайтиСтроки(СтруктураПоиска);
		
		НоваяСтрока = КодыМаркировки.Добавить();
		НоваяСтрока.КодМаркировки = СтрШаблон(ШаблонСоСкобками, ТекущаяСтрока.GTIN, ТекущаяСтрока.СерийныйНомер);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			НоваяСтрока.ИдентификаторТовара = НайденныеСтроки[0].ИдентификаторТовара;
			НайденныеСтроки[0].Количество = НайденныеСтроки[0].Количество + 1;
		Иначе
			СтрокаТовара = Товары.Добавить();
			СтрокаТовара.ИдентификаторТовара = Новый УникальныйИдентификатор;
			СтрокаТовара.Номенклатура = ТекущаяСтрока.Номенклатура;
			Документы.ВводВОборотКодовМаркировки.ТоварыНоменклатураПриИзменении(ЭтотОбъект, СтрокаТовара);
			СтрокаТовара.Количество = 1;
			СтрокаТовара.ХарактеристикаНоменклатуры = ТекущаяСтрока.ХарактеристикаНоменклатуры;
			Документы.ВводВОборотКодовМаркировки.ТоварыХарактеристикаНоменклатурыПриИзменении(ЭтотОбъект, СтрокаТовара);
			НоваяСтрока.ИдентификаторТовара = СтрокаТовара.ИдентификаторТовара;
		КонецЕсли;
		
	КонецЦикла;
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_ЗаказКодовМаркировки()

Процедура УстановитьСпособВводаВОборот(Основание)
	
	Если Основание.СпособВыпускаВОборот = Перечисления.СпособыВыпускаВОборот.МаркировкаОстатков Тогда
		СпособВводаВОборот = Перечисления.СпособыВводаВОборот.МаркировкаОстатков;
		Возврат;
	КонецЕсли;
	
	// Проверим основание заказа на предмет комиссии от частного лица
	ОснованиеЗаказа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "ДокументОснование");
	
	Если ЗначениеЗаполнено(ОснованиеЗаказа)
		И ТипЗнч(ОснованиеЗаказа) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		// Проверим ХО и контрагента
		ДанныеПоступления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ОснованиеЗаказа,
			"ХозОперация,Дата,Контрагент.ФормаСобственности");
		
		Если ДанныеПоступления.ХозОперация = Справочники.ХозОперации.ПоступлениеТоваровКомиссия
			И ДанныеПоступления.КонтрагентФормаСобственности = Перечисления.ФормыСобственности.ЧастноеЛицо Тогда
			СпособВводаВОборот = Перечисления.СпособыВводаВОборот.ПолучениеОтФизическихЛиц;
			ДатаПолученияТовара = ДанныеПоступления.Дата;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

