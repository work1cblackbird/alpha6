#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	// ПодключаемоеОборудование
	ТипыОборудования = МенеджерОборудованияКлиентСервер.ПараметрыТипыОборудования();
	ТипыОборудования.СканерШтрихкода = Истина;
	ТипыОборудования.СчитывательМагнитныхКарт = Истина;
	МенеджерОборудования.ПриСозданииНаСервере(ЭтаФорма, ТипыОборудования);
	// Конец ПодключаемоеОборудование
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец УтверждениеДокументов
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ОграничитьВыборКонтактныхЛиц(Элементы.Контрагент);
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	
	РазрешитьРедактированиеЦенИСумм = ПраваИНастройкиПользователя
		.Значение("РедактированиеЦенИСуммВНоменклатурныхТаблицах", Объект);
	РаботаСФормой.РазрешитьРедактированиеЦенИСумм(
		РаботаСФормой.ТиповыеПоляСуммовыхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм
	);
	
	СпособВыбораСкидки = ПраваИНастройкиПользователя.Значение("СпособВыбораСкидки", Объект);
	РаботаСФормой.РазрешитьРедактированиеСкидок(
		РаботаСФормой.ТиповыеПоляСкидочныхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм,
		СпособВыбораСкидки
	);
	РаботаСФормой.ОткрытьФормуТолькоДляПросмотра(ЭтотОбъект, Объект);
	
	// Штрихкодирование
	ШтрихкодированиеВызовСервера.ПрочитатьШтрихкодДокумента(ЭтотОбъект, Объект);
	// Конец Штрихкодирование
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		УправлениеДиалогомАльфаАвтоСервер.ПриСозданииНаСервере(ЭтотОбъект);
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
		ОбновитьСлужебныеРеквизитыАвтомобилей(ЭтотОбъект);
		ОбновитьСостоянияАвтомобилей();
		ОбновитьСуммовыеПоказателиСпецификаций();
		
	КонецЕсли;
	
	// Установим вариант отображения цен и сумм
	ЗащищенныеФункцииАльфаАвтоСервер.УстановитьДоступностьКолонокЦенИСуммАвтомобилей(ЭтотОбъект);
	
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец УтверждениеДокументов
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
	УправлениеДиалогомАльфаАвтоКлиент.ПриОткрытии(ЭтотОбъект);

	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// Штрихкодирование
	ШтрихкодированиеКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец Штрихкодирование
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец УтверждениеДокументов
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения	
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УправлениеДиалогомАльфаАвтоСервер.ПриЧтенииНаСервере(ЭтотОбъект);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
	ОбновитьСлужебныеРеквизитыАвтомобилей(ЭтотОбъект);
	ОбновитьСостоянияАвтомобилей();
	ОбновитьСуммовыеПоказателиСпецификаций();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ОптовыйЗаказКлиентаНаАвтомобили", ПараметрыЗаписи.РежимЗаписи,
		Объект.Автомобили.Количество() > 50);
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗаказыСервер.ПроверитьЗаполненостьСпецификацииУАвтомобилей(Объект, Отказ);
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// Штрихкодирование
	ШтрихкодированиеВызовСервера.ЗаписатьШтрихкодДокумента(ЭтотОбъект, Объект);
	// Конец Штрихкодирование
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	ОбработкаТабличнойЧастиАвтомобили.ЗаполнитьДополнительныеРеквизиты(Объект);
	ОбновитьСостоянияАвтомобилей();
	ОбновитьСуммовыеПоказателиСпецификаций();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьСлужебныеРеквизитыАвтомобилей(ЭтотОбъект);
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);
	
КонецПроцедуры 

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

//@skip-check module-structure-form-event-regions
//@skip-check module-unused-method
&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	
	ПараметрыДействия = Новый Структура;
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	КонтрагентПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорВзаиморасчетовПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВзаиморасчетыНажатие(Элемент)
	
	УправлениеДиалогомДокументаКлиент.НадписьВзаиморасчетыНажатие(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПредоплатыПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ПроцентПредоплатыПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПредоплатыПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СуммаПредоплатыПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

#Область ОбработчикиАльфаАвто

// Ядро
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСуммаДокументаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.ПоказатьРасширенныеИтогиОперации(ЭтотОбъект, Элемент);
	
КонецПроцедуры
// Конец Ядро

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСпецификации

&НаКлиенте
Процедура СпецификацииПослеУдаления(Элемент)
	
	ОбновитьСлужебныеРеквизитыАвтомобилей(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацииПриИзменении(Элемент)
	
	Если ТребуетсяОбновитьСписокВыбораСпецификаций Тогда
		
		ОбновитьСлужебныеРеквизитыАвтомобилей(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.КлючСтроки) Тогда
		
		Элемент.ТекущиеДанные.КлючСтроки = Новый УникальныйИдентификатор();
		
	ИначеЕсли Копирование Тогда
		
		Элемент.ТекущиеДанные.КлючСтроки = Новый УникальныйИдентификатор();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацииМаркаПриИзменении(Элемент)
	
	ТребуетсяОбновитьСписокВыбораСпецификаций = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацииМодельПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СпецификацииМодельПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	ТребуетсяОбновитьСписокВыбораСпецификаций = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацииВариантКомплектацииПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СпецификацииВариантКомплектацииПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	ТребуетсяОбновитьСписокВыбораСпецификаций = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацииЦветПриИзменении(Элемент)
	
	ТребуетсяОбновитьСписокВыбораСпецификаций = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацииВидАвтомобиляПриИзменении(Элемент)
	
	ТребуетсяОбновитьСписокВыбораСпецификаций = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАвтомобили

&НаКлиенте
Асинх Процедура АвтомобилиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = Элементы.АвтомобилиСпецификацияПредставление.Имя Тогда
		
		СпецификацииДляВыбора = СпецификацииДляВыбора(ЭтотОбъект);
		РезультатВыбора = Ждать СпецификацииДляВыбора.ВыбратьЭлементАсинх();
		
		Если РезультатВыбора <> Неопределено Тогда
			
			ТекущаяСтрока = Объект.Автомобили.НайтиПоИдентификатору(ВыбраннаяСтрока);
			ТекущаяСтрока.Спецификация = РезультатВыбора.Значение;
			ТекущаяСтрока.СпецификацияПредставление = РезультатВыбора.Представление;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Спецификация) Тогда
		
		Элемент.ТекущиеДанные.СпецификацияПредставление = НСтр("ru = 'Выбрать спецификацию'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиАвтомобильПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	АвтомобилиАвтомобильПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиЦенаПриИзменении(Элемент)
	
	АвтомобилиЦенаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиСуммаПриИзменении(Элемент)
	
	АвтомобилиСуммаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиСуммаВсегоПриИзменении(Элемент)
	
	АвтомобилиСуммаВсегоПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиСтавкаНДСПриИзменении(Элемент)
	
	АвтомобилиСтавкаНДСПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиПриобретенУФизЛицаПриИзменении(Элемент)
	
	АвтомобилиПриобретенУФизЛицаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ПодобратьАвтомобилиАвтоматически(Команда)
	
	ПараметрыДействия = Новый Структура();
	ПодобратьАвтомобилиАвтоматическиНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура СоздатьНедостающиеАвтомобилиПоСпецификации(Команда)
	
	Если Объект.Спецификации.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Ответ = Ждать ВопросАсинх("Будут созданы новые карточки автомобилей!
		|Продолжить?", РежимДиалогаВопрос.ДаНет, 0);
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыДействия = Новый Структура();
	СоздатьНедостающиеАвтомобилиПоСпецификацииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтостоянияАвтомобилей(Команда)
	
	ОбновитьСостоянияАвтомобилей();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ВозможныеСостоянияАвтомоиблей = ЗаказыСервер.ВозможныеСостоянияАвтомоиблей();
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Автомобили.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Автомобили.СостояниеАвтомобиля");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = ВозможныеСостоянияАвтомоиблей.Отгружен;
	//@skip-check new-color
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(128, 128, 128));
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Автомобили.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Автомобили.СостояниеАвтомобиля");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = ВозможныеСостоянияАвтомоиблей.ВНаличии;
	//@skip-check new-color
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(0, 128, 0));
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Автомобили.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Автомобили.СостояниеАвтомобиля");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = ВозможныеСостоянияАвтомоиблей.Ожидается;
	//@skip-check new-color
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(128, 128, 0));
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Автомобили.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Автомобили.СостояниеАвтомобиля");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = ВозможныеСостоянияАвтомоиблей.ЗаказанКлиентом;
	//@skip-check new-color
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(255, 0, 0));
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомАльфаАвтоСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	ВыделениеМежценовойРазницыОтдельнойСтрокой = ПраваИНастройкиПользователя
		.Значение("ВыделениеМежценовойРазницыОтдельнойСтрокой", Объект);
	Элементы.АвтомобилиСебестоимостьАвтомобиля.Видимость = ВыделениеМежценовойРазницыОтдельнойСтрокой;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия = Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры = Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#Область ОбработчикиИзмененияРеквизитов

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.ДатаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.КонтрагентПриИзменении(Объект, ПараметрыДействия);
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(Объект.Контрагент, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.ДоговорВзаиморасчетовПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПроцентПредоплатыПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.ПроцентПредоплатыПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СуммаПредоплатыПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.СуммаПредоплатыПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СпецификацииМодельПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Спецификации.НайтиПоИдентификатору(Элементы.Спецификации.ТекущаяСтрока);
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.СпецификацииМодельПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура СпецификацииВариантКомплектацииПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Спецификации.НайтиПоИдентификатору(Элементы.Спецификации.ТекущаяСтрока);
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.СпецификацииВариантКомплектацииПриИзменении(Объект, ТекущиеДанные,
		ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиАвтомобильПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	ЗаметкиПользователяАльфаАвто.ПроверитьЗаметкиПоПредмету(ТекущиеДанные.Автомобиль, ПараметрыДействия);
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.АвтомобилиАвтомобильПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ОбновитьСлужебныеРеквизитыАвтомобилей(ЭтотОбъект);
	ОбновитьСостоянияАвтомобилей(ТекущиеДанные);
	ОбновитьСуммовыеПоказателиСпецификаций(ТекущиеДанные);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиЦенаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.АвтомобилиЦенаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ОбновитьСуммовыеПоказателиСпецификаций(ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиСуммаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.АвтомобилиСуммаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ОбновитьСуммовыеПоказателиСпецификаций(ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиСуммаВсегоПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.АвтомобилиСуммаВсегоПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ОбновитьСуммовыеПоказателиСпецификаций(ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиСтавкаНДСПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.АвтомобилиСтавкаНДСПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	ОбновитьСуммовыеПоказателиСпецификаций(ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура АвтомобилиПриобретенУФизЛицаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ТекущиеДанные = Объект.Автомобили.НайтиПоИдентификатору(Элементы.Автомобили.ТекущаяСтрока);
	Документы.ОптовыйЗаказКлиентаНаАвтомобили.АвтомобилиПриобретенУФизЛицаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

//@skip-check doc-comment-parameter-section
// ЗаполнениеОбъектов
&НаКлиенте
Процедура ПослеОбработкиЗаполнения(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ПослеОбработкиЗаполненияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеОбработкиЗаполненияНаСервере()
	
	ЗаполнениеОбъектовАльфаАвто.ПослеОбработкиЗаполнения(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ЗаполнениеОбъектов

//@skip-check module-unused-method
// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект, РезультатОповещения);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область Штрихкодирование

&НаКлиенте
Процедура Подключаемый_ШтрихкодированиеОбработкаОповещения(РезультатОповещения,
	ДополнительныеПараметры = Неопределено) Экспорт

	Если РезультатОповещения = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если РезультатОповещения.Свойство("Действие") Тогда
		ШтрихкодированиеОбработкаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ШтрихкодированиеОбработкаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры)

	ШтрихкодированиеВызовСервера.ОбработкаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры, , Объект);

КонецПроцедуры

#КонецОбласти

#Область УтверждениеДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуУтверждения(Команда)
	
	УтверждениеДокументовКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект.Ссылка);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбработкуКомандыУтвержденияНаСервере(ПараметрыОбработки,
		ДополнительныеПараметры) Экспорт
	
	ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры);
	Оповестить("ПослеУтвержденияДокументов", Объект.Ссылка, ИмяФормы);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры)
	
	УтверждениеДокументовВызовСервера.ОбработкаКомандыФормы(ЭтотОбъект, ПараметрыОбработки.ИмяКоманды, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКомандыУтвержденияДокументов()
	
	ОбновитьКомандыУтвержденияДокументовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКомандыУтвержденияДокументовНаСервере()
	
	УтверждениеДокументовКлиентСервер.УстановитьДоступностьКнопокУтверждения(ЭтотОбъект, Объект, ТолькоПросмотр);
	УтверждениеДокументовВызовСервера.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, Объект, ТолькоПросмотр);
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСлужебныеРеквизитыАвтомобилей(Форма)
	
	СпецификацииДляВыбора = СпецификацииДляВыбора(Форма);
	
	Для Каждого Автомобиль Из Форма.Объект.Автомобили Цикл
		
		ОписаниеСпецификации = СпецификацииДляВыбора.НайтиПоЗначению(Автомобиль.Спецификация);
		
		Если ОписаниеСпецификации <> Неопределено Тогда
			
			Автомобиль.СпецификацияПредставление = ОписаниеСпецификации.Представление;
			
		Иначе
			
			Автомобиль.СпецификацияПредставление = НСтр("ru = 'Выбрать спецификацию'");
			Автомобиль.Спецификация = Неопределено;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостоянияАвтомобилей(СтрокаДляОбновления = Неопределено)
	
	АвтомобилиКОбновлению = Новый Массив();
	
	Если СтрокаДляОбновления <> Неопределено Тогда
		
		АвтомобилиКОбновлению.Добавить(СтрокаДляОбновления.Автомобиль);
		
	Иначе
		
		Для Каждого СтрокаАвтомобиля Из Объект.Автомобили Цикл
			
			АвтомобилиКОбновлению.Добавить(СтрокаАвтомобиля.Автомобиль);
			
		КонецЦикла;
		
	КонецЕсли;
	
	СостоянияАвтомобилей = ЗаказыСервер.СостоянияАвтомобилей(АвтомобилиКОбновлению, Объект.Дата);
	
	Если СтрокаДляОбновления <> Неопределено Тогда
		
		Значение = СостоянияАвтомобилей.Получить(СтрокаДляОбновления.Автомобиль);
		
		Если Значение <> Неопределено Тогда
			
			СтрокаДляОбновления.СостояниеАвтомобиля = Значение;
			
		КонецЕсли;
		
	Иначе
		
		Для Каждого СтрокаАвтомобиля Из Объект.Автомобили Цикл
			
			Значение = СостоянияАвтомобилей.Получить(СтрокаАвтомобиля.Автомобиль);
			
			Если Значение <> Неопределено Тогда
				
				СтрокаАвтомобиля.СостояниеАвтомобиля = Значение;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбновитьСостоянияСпецификаций(СтрокаДляОбновления);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостоянияСпецификаций(СтрокаДляОбновления = Неопределено)
	
	Если СтрокаДляОбновления = Неопределено Тогда
		
		СпецификацииДляОбновления = Объект.Спецификации;
		
	Иначе
		
		СпецификацииДляОбновления = Объект.Спецификации.НайтиСтроки(
			Новый Структура("КлючСтроки", СтрокаДляОбновления.Спецификация)
		);
		
	КонецЕсли;
	
	ВозможныеСостоянияАвтомоиблей = ЗаказыСервер.ВозможныеСостоянияАвтомоиблей();
	
	Для Каждого Спецификация Из СпецификацииДляОбновления Цикл
		
		Спецификация.Ожидается = 0;
		Спецификация.ВНаличии = 0;
		Спецификация.Отгружено = 0;
		АвтомобилиСпецификации = Объект
			.Автомобили
			.НайтиСтроки(Новый Структура("Спецификация", Спецификация.КлючСтроки));
		
		Для Каждого Автомобиль Из АвтомобилиСпецификации Цикл
			
			Если Автомобиль.СостояниеАвтомобиля = ВозможныеСостоянияАвтомоиблей.Ожидается Тогда
				
				Спецификация.Ожидается = Спецификация.Ожидается + 1;
				
			ИначеЕсли Автомобиль.СостояниеАвтомобиля = ВозможныеСостоянияАвтомоиблей.ВНаличии Тогда
				
				Спецификация.ВНаличии = Спецификация.ВНаличии + 1;
				
			ИначеЕсли Автомобиль.СостояниеАвтомобиля = ВозможныеСостоянияАвтомоиблей.Отгружен Тогда
				
				Спецификация.Отгружено = Спецификация.Отгружено + 1;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСуммовыеПоказателиСпецификаций(СтрокаДляОбновления = Неопределено)
	
	Если СтрокаДляОбновления = Неопределено Тогда
		
		СпецификацииДляОбновления = Объект.Спецификации;
		
	Иначе
		
		СпецификацииДляОбновления = Объект.Спецификации.НайтиСтроки(
			Новый Структура("КлючСтроки", СтрокаДляОбновления.Спецификация)
		);
		
	КонецЕсли;
	
	Для Каждого Спецификация Из СпецификацииДляОбновления Цикл
		
		Спецификация.СуммаВсего = 0;
		
		АвтомобилиСпецификации = Объект
			.Автомобили
			.НайтиСтроки(Новый Структура("Спецификация", Спецификация.КлючСтроки));
		
		Для Каждого Автомобиль Из АвтомобилиСпецификации Цикл
			
			Спецификация.СуммаВсего = Спецификация.СуммаВсего + Автомобиль.СуммаВсего;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СпецификацииДляВыбора(Форма)
	
	Результат = Новый СписокЗначений();
	
	Для Каждого Спецификация Из Форма.Объект.Спецификации Цикл
		
		Результат.Добавить(Спецификация.КлючСтроки, ПредставлениеСпецификации(Спецификация));
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеСпецификации(Спецификация)
	
	ЧастиПредставления = Новый Массив();
	
	Если ЗначениеЗаполнено(Спецификация.Марка) Тогда
		
		ЧастиПредставления.Добавить(Спецификация.Марка);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Спецификация.Модель) Тогда
		
		ЧастиПредставления.Добавить(Спецификация.Модель);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Спецификация.ВариантКомплектации) Тогда
		
		ЧастиПредставления.Добавить(Спецификация.ВариантКомплектации);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Спецификация.Цвет) Тогда
		
		ЧастиПредставления.Добавить(Спецификация.Цвет);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Спецификация.ВидАвтомобиля) Тогда
		
		ЧастиПредставления.Добавить(Спецификация.ВидАвтомобиля);
		
	КонецЕсли;
	
	Возврат СтрСоединить(ЧастиПредставления, "; "); 
	
КонецФункции

&НаСервере
Процедура ПодобратьАвтомобилиАвтоматическиНаСервере(ПараметрыДействия)
	
	ДобавляемыеАвтомобили = ПодобратьАвтомобили();
	
	Для Каждого ДобавляемыйАвтомобиль Из ДобавляемыеАвтомобили Цикл
		
		НоваяСтрока = Объект.Автомобили.Добавить();
		НоваяСтрока.Автомобиль = ДобавляемыйАвтомобиль.Ключ;
		НоваяСтрока.Спецификация = ДобавляемыйАвтомобиль.Значение;
		Документы.ОптовыйЗаказКлиентаНаАвтомобили.АвтомобилиАвтомобильПриИзменении(Объект, НоваяСтрока,
			ПараметрыДействия);
		
	КонецЦикла;
	
	ОбновитьСлужебныеРеквизитыАвтомобилей(ЭтотОбъект);
	ОбновитьСостоянияАвтомобилей();
	ОбновитьСуммовыеПоказателиСпецификаций();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПодобратьАвтомобили()
	
	СпецификацииБезАвтомобилей = СпецификацииБезАвтомобилей();
	
	Результат = Новый Соответствие();
	
	Если СпецификацииБезАвтомобилей.Количество() = 0 Тогда
		
		Возврат Результат;
		
	КонецЕсли;
	
	АвтомобилиДоступныеДляДобовленияВЗаказ = Документы
		.ОптовыйЗаказКлиентаНаАвтомобили
		.АвтомобилиДоступныеДляДобовленияВЗаказ(СпецификацииБезАвтомобилей.ВыгрузитьКолонку("Модель"));
	ПредложениеАвтомобилейПоСпецификациям = ПредложениеАвтомобилейПоСпецификациям(
		СпецификацииБезАвтомобилей,
		АвтомобилиДоступныеДляДобовленияВЗаказ
	);
	
	Для Каждого Спецификация Из СпецификацииБезАвтомобилей Цикл
		
		СвободныеАвтомобили = ПредложениеАвтомобилейПоСпецификациям.СвободныеАвтомобили.НайтиСтроки(
			Новый Структура("КлючСтроки", Спецификация.КлючСтроки)
		);
		
		Для Каждого Автомобиль Из СвободныеАвтомобили Цикл
			
			Результат.Вставить(Автомобиль.Автомобиль, Спецификация.КлючСтроки);
			Спецификация.Количество = Спецификация.Количество - 1;
			
			Если Спецификация.Количество = 0 Тогда
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если Спецификация.Количество > 0 Тогда
			
			ЗаказанныеУПоставщика = ПредложениеАвтомобилейПоСпецификациям.ЗаказанныеУПоставщика.НайтиСтроки(
				Новый Структура("КлючСтроки", Спецификация.КлючСтроки)
			);
			
			Для Каждого Автомобиль Из ЗаказанныеУПоставщика Цикл
			
				Результат.Вставить(Автомобиль.Автомобиль, Спецификация.КлючСтроки);
				Спецификация.Количество = Спецификация.Количество - 1;
				
				Если Спецификация.Количество = 0 Тогда
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СпецификацииБезАвтомобилей()
	
	Результат = Объект.Спецификации.Выгрузить();
	
	Для Каждого Спецификация Из Результат Цикл
		
		АвтомобилиСпецификации = Объект.Автомобили.НайтиСтроки(
			Новый Структура("Спецификация,Отменено", Спецификация.КлючСтроки, Ложь)
		);
		КоличествоАвтомобилей = Объект.Автомобили.Выгрузить(АвтомобилиСпецификации).Итог("Количество");
		Спецификация.Количество = Спецификация.Количество - КоличествоАвтомобилей;
		
	КонецЦикла;
	
	КУдалению = Новый Массив();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		
		Если СтрокаРезультата.Количество <= 0 Тогда
			
			КУдалению.Добавить(СтрокаРезультата);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаКУдалению Из КУдалению Цикл
		
		Результат.Удалить(СтрокаКУдалению);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПредложениеАвтомобилейПоСпецификациям(СпецификацииБезАвтомобилей, АвтомобилиДоступныеДляДобовленияВЗаказ)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	КлючСтроки КАК КлючСтроки,
		|	Марка КАК Марка,
		|	Модель КАК Модель,
		|	ВариантКомплектации <> ЗНАЧЕНИЕ(Справочник.ВариантыКомплектации.ПустаяСсылка) КАК УчитыватьВариантКомплектации,
		|	ВариантКомплектации КАК ВариантКомплектации,
		|	Цвет <> ЗНАЧЕНИЕ(Справочник.Цвета.ПустаяСсылка) КАК УчитыватьЦвет,
		|	Цвет КАК Цвет,
		|	ВидАвтомобиля <> ЗНАЧЕНИЕ(Перечисление.ВидАвтомобиля.ПустаяСсылка) КАК УчитыватьПризнакБУ,
		|	ВидАвтомобиля
		|ПОМЕСТИТЬ Спецификации
		|ИЗ
		|	&СпецификацииБезАвтомобилей КАК СпецификацииБезАвтомобилей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СвободныеАвтомобили.Автомобиль КАК Автомобиль,
		|	СвободныеАвтомобили.Марка КАК Марка,
		|	СвободныеАвтомобили.Модель КАК Модель,
		|	СвободныеАвтомобили.ВариантКомплектации КАК ВариантКомплектации,
		|	СвободныеАвтомобили.Цвет КАК Цвет,
		|	АвтомобилиСрезПоследних.Значение КАК ВидАвтомобиля
		|ПОМЕСТИТЬ СвободныеАвтомобилиСДопИнформацией
		|ИЗ
		|	СвободныеАвтомобили КАК СвободныеАвтомобили
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Автомобили.СрезПоследних(, Автомобиль В
		|			(ВЫБРАТЬ
		|				Автомобиль
		|			ИЗ
		|				СвободныеАвтомобили КАК СвободныеАвтомобили)
		|		И ВидЗначения = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяИнформацияАвтомобилей.ВидАвтомобиля)) КАК АвтомобилиСрезПоследних
		|		ПО СвободныеАвтомобили.Автомобиль = АвтомобилиСрезПоследних.Автомобиль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Спецификации.КлючСтроки КАК КлючСтроки,
		|	СвободныеАвтомобилиСДопИнформацией.Автомобиль КАК Автомобиль
		|ИЗ
		|	Спецификации КАК Спецификации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СвободныеАвтомобилиСДопИнформацией КАК СвободныеАвтомобилиСДопИнформацией
		|		ПО Спецификации.Марка = СвободныеАвтомобилиСДопИнформацией.Марка
		|		И Спецификации.Модель = СвободныеАвтомобилиСДопИнформацией.Модель
		|		И ВЫБОР
		|			КОГДА Спецификации.УчитыватьВариантКомплектации
		|				ТОГДА Спецификации.ВариантКомплектации = СвободныеАвтомобилиСДопИнформацией.ВариантКомплектации
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|		И ВЫБОР
		|			КОГДА Спецификации.УчитыватьЦвет
		|				ТОГДА Спецификации.Цвет = СвободныеАвтомобилиСДопИнформацией.Цвет
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|		И ВЫБОР
		|			КОГДА Спецификации.УчитыватьПризнакБУ
		|				ТОГДА Спецификации.ВидАвтомобиля = СвободныеАвтомобилиСДопИнформацией.ВидАвтомобиля
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказанныеУПоставщика.Автомобиль КАК Автомобиль,
		|	ЗаказанныеУПоставщика.Марка КАК Марка,
		|	ЗаказанныеУПоставщика.Модель КАК Модель,
		|	ЗаказанныеУПоставщика.ВариантКомплектации КАК ВариантКомплектации,
		|	ЗаказанныеУПоставщика.Цвет КАК Цвет,
		|	АвтомобилиСрезПоследних.Значение КАК ВидАвтомобиля
		|ПОМЕСТИТЬ ЗаказанныеУПоставщикаСДопИнформацией
		|ИЗ
		|	ЗаказанныеУПоставщика КАК ЗаказанныеУПоставщика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Автомобили.СрезПоследних(, Автомобиль В
		|			(ВЫБРАТЬ
		|				Автомобиль
		|			ИЗ
		|				ЗаказанныеУПоставщика КАК ЗаказанныеУПоставщика)
		|		И ВидЗначения = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяИнформацияАвтомобилей.ВидАвтомобиля)) КАК АвтомобилиСрезПоследних
		|		ПО ЗаказанныеУПоставщика.Автомобиль = АвтомобилиСрезПоследних.Автомобиль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Спецификации.КлючСтроки КАК КлючСтроки,
		|	ЗаказанныеУПоставщикаСДопИнформацией.Автомобиль КАК Автомобиль
		|ИЗ
		|	Спецификации КАК Спецификации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаказанныеУПоставщикаСДопИнформацией КАК ЗаказанныеУПоставщикаСДопИнформацией
		|		ПО Спецификации.Марка = ЗаказанныеУПоставщикаСДопИнформацией.Марка
		|		И Спецификации.Модель = ЗаказанныеУПоставщикаСДопИнформацией.Модель
		|		И ВЫБОР
		|			КОГДА Спецификации.УчитыватьВариантКомплектации
		|				ТОГДА Спецификации.ВариантКомплектации = ЗаказанныеУПоставщикаСДопИнформацией.ВариантКомплектации
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|		И ВЫБОР
		|			КОГДА Спецификации.УчитыватьЦвет
		|				ТОГДА Спецификации.Цвет = ЗаказанныеУПоставщикаСДопИнформацией.Цвет
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|		И ВЫБОР
		|			КОГДА Спецификации.УчитыватьПризнакБУ
		|				ТОГДА Спецификации.ВидАвтомобиля = ЗаказанныеУПоставщикаСДопИнформацией.ВидАвтомобиля
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ"
	);
	Запрос.МенеджерВременныхТаблиц = АвтомобилиДоступныеДляДобовленияВЗаказ;
	Запрос.УстановитьПараметр("СпецификацииБезАвтомобилей", СпецификацииБезАвтомобилей);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	АвтомобилиДоступныеДляДобовленияВЗаказ.Закрыть();
	
	Возврат Новый Структура(
		"СвободныеАвтомобили,ЗаказанныеУПоставщика",
		РезультатЗапроса[2].Выгрузить(),
		РезультатЗапроса[4].Выгрузить(),
	);
	
КонецФункции

&НаСервере
Процедура СоздатьНедостающиеАвтомобилиПоСпецификацииНаСервере(ПараметрыДействия)
	
	СпецификацииБезАвтомобилей = СпецификацииБезАвтомобилей();
	
	Для Каждого Спецификация Из СпецификацииБезАвтомобилей Цикл
		
		Пока Спецификация.Количество > 0 Цикл
		
			НоваяСтрока = Объект.Автомобили.Добавить();
			НоваяСтрока.Автомобиль = СоздатьАвтомобильПоСпецификации(Спецификация);
			НоваяСтрока.Спецификация = Спецификация.КлючСтроки;
			Документы.ОптовыйЗаказКлиентаНаАвтомобили.АвтомобилиАвтомобильПриИзменении(Объект, НоваяСтрока,
				ПараметрыДействия);
			Спецификация.Количество = Спецификация.Количество - 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ОбновитьСлужебныеРеквизитыАвтомобилей(ЭтотОбъект);
	ОбновитьСостоянияАвтомобилей();
	ОбновитьСуммовыеПоказателиСпецификаций();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Функция СоздатьАвтомобильПоСпецификации(Спецификация)
	
	НовыйАвтомобиль = Справочники.Автомобили.СоздатьЭлемент();
	НовыйАвтомобиль.Родитель = Справочники.Автомобили.АвтомобилиПоЗаказам;
	ЗаполнитьЗначенияСвойств(НовыйАвтомобиль, Спецификация);
	НовыйАвтомобиль.Наименование = Спецификация.Модель;
	НовыйАвтомобиль.НаименованиеПолное = НовыйАвтомобиль.Наименование;
	НовыйАвтомобиль.Записать();
	
	Если ЗначениеЗаполнено(Спецификация.ВидАвтомобиля) Тогда
		
		НачалоТекущегоДня = НачалоДня(ТекущаяДатаСеанса());
		Справочники.Автомобили.ЗаписьЗначенияРегистраСведения(
			НовыйАвтомобиль.Ссылка,
			Спецификация.ВидАвтомобиля,
			Перечисления.ДополнительнаяИнформацияАвтомобилей.ВидАвтомобиля,
			НачалоТекущегоДня,
			Перечисления.ИсточникиИнформацииХарактеристикАвтомобиля.Прочее
		);
		
	КонецЕсли;
	
	Возврат НовыйАвтомобиль.Ссылка;
	
КонецФункции

#КонецОбласти