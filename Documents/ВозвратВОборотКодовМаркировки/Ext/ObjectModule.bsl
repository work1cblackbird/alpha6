// Модуль документа Возврат в оборот кодов маркировки

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТоварнаяГруппа) Тогда
		ТоварнаяГруппа = МаркировкаТоваровСервер.ТоварнаяГруппа(Товары.ВыгрузитьКолонку("Номенклатура"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из Товары Цикл
		
		Если ТекущаяСтрока.ВидПервичногоДокумента = Перечисления.ВидыПервичныхДокументов.Прочее
			И НЕ ЗначениеЗаполнено(ТекущаяСтрока.НаименованиеПервичногоДокумента) Тогда
			
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", ТекущаяСтрока.НомерСтроки, "НаименованиеПервичногоДокумента");
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Товары. Строка %1: Необходимо заполнить наименование первичного документа.'"),
					ТекущаяСтрока.НомерСтроки
				),		
				,
				ПутьКТабличнойЧасти,
				"Объект",
				Отказ
			);

			
		КонецЕсли;
		
	КонецЦикла;
	
	МаркировкаТоваровСервер.НоменклатураСоответствуетТоварнойГруппе(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Переведем вид кода маркировки
	Для Каждого ТекущаяСтрока Из Товары Цикл
		
		ТекущаяСтрока.КодМаркировки = 
			МаркировкаТоваровКлиентСервер.ПолучитьКодМаркировки(
				ТекущаяСтрока.КодМаркировки,,
				СтрНачинаетсяС(ТекущаяСтрока.КодМаркировки, "("));
		
	КонецЦикла;
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	// Только для записанных документов определим статус из регистра при необходимости
	Если ЗначениеЗаполнено(Ссылка)
		И ПолучитьЗначениеПараметраСтруктуры(ДополнительныеСвойства, "Статус") = Неопределено Тогда
		ДанныеСтатусаДокумента = РегистрыСведений.СтатусыДокументовМаркировки.ПолучитьСтатусДокумента(Ссылка);
		ДополнительныеСвойства.Вставить("ИдентификаторДокумента", ДанныеСтатусаДокумента.ИдентификаторДокумента);
		ДополнительныеСвойства.Вставить("Статус", ДанныеСтатусаДокумента.Статус);
		ДополнительныеСвойства.Вставить("ОписаниеОшибки", ДанныеСтатусаДокумента.ОписаниеОшибки);
	КонецЕсли;
	
	ТаблицаМаркировки = Товары.Выгрузить();
	ТаблицаМаркировки.Колонки.Добавить("GTIN", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	ТаблицаМаркировки.Колонки.Добавить("СерийныйНомер", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	
	// Разберем маркировку на состовляющие для поиска
	Для Каждого ТекущийКодМаркировки Из ТаблицаМаркировки Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекущийКодМаркировки.КодМаркировки) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(
			ТекущийКодМаркировки.КодМаркировки);
		Если СтруктураМаркировки.ТипИдентификатораТовара <>
			ПредопределенноеЗначение("Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1") Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Код маркировки <%1> не разобран. Проверьте его корректность.'"),
				СокрЛП(ТекущийКодМаркировки.КодМаркировки)
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
			Продолжить;
		КонецЕсли;
		
		ТекущийКодМаркировки.GTIN = СтруктураМаркировки.GTIN;
		ТекущийКодМаркировки.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
		
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("ТаблицаМаркировки", ТаблицаМаркировки);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		МаркировкаТоваровСервер.ЗаписатьСтатусДокумента(Ссылка, ДополнительныеСвойства);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	// Удалим введенные в оборот коды маркировки
	НаборЗаписейСостоянияКодовМаркировки = РегистрыСведений.СостоянияКодовМаркировки.СоздатьНаборЗаписей();
	НаборЗаписейСостоянияКодовМаркировки.ДокументОбъект = ЭтотОбъект;
	НаборЗаписейСостоянияКодовМаркировки.ОтменаПроведения();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиЗаполненияОбъекта

Функция ОбработкаЗаполнения_Чек(ДанныеЗаполнения,
	ТекстЗаполнения,
	СтандартнаяОбработка = Истина) Экспорт
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка,
		"Товары"
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ДанныеЗаполнения.Хозоперация <> Справочники.ХозОперации.ЧекНаВозврат Тогда
		ТекстСообщения = НСтр("ru = 'Возврат в оборот доступен только при вводе на основании чека возврата.'");
		УправлениеДиалогомСервер.ЗапретитьОткрытиеФормыОбъекта(ДанныеЗаполнения, ТекстСообщения);
	КонецЕсли;
	
	ВидВозврата = Перечисления.ВидыВозвратов.ВозвратПриРозничнойРеализации;
	
	ЗаполнитьТабличнуюЧастьТоваровПоОснованию(
		ДанныеЗаполнения,
		Перечисления.ВидыПервичныхДокументов.КассовыйЧек,
		НСтр("ru = 'Чек на возврат'"));
	
	Возврат Истина;
	
КонецФункции

Функция ОбработкаЗаполнения_ВозвратОтПокупателя(ДанныеЗаполнения,
	ТекстЗаполнения,
	СтандартнаяОбработка = Истина) Экспорт
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка,
		"Товары"
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат Истина;
	КонецЕсли;
	
	ВидВозврата = Перечисления.ВидыВозвратов.ВозвратПриРозничнойРеализации;
	
	ЗаполнитьТабличнуюЧастьТоваровПоОснованию(
		ДанныеЗаполнения,
		Перечисления.ВидыПервичныхДокументов.Прочее,
		НСтр("ru = 'Возврат от покупателя'"));
	
	Возврат Истина;
	
КонецФункции

Функция ОбработкаЗаполнения_КорректировкаРеализации(ДанныеЗаполнения,
	ТекстЗаполнения,
	СтандартнаяОбработка = Истина) Экспорт
	
	ПродолжитьВыполнение = ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка,
		"Товары"
	);
	Если НЕ ПродолжитьВыполнение Тогда
		Возврат Истина;
	КонецЕсли;
	
	ВидВозврата = Перечисления.ВидыВозвратов.ВозвратПриРозничнойРеализации;
	
	Товары.Очистить();
	
	ВидПервичногоДокумента = Перечисления.ВидыПервичныхДокументов.Прочее;
	НомерПервичногоДокумента = ДанныеЗаполнения.Номер;
	ДатаПервичногоДокумента = ДанныеЗаполнения.Дата;
	НаименованиеПервичногоДокумента = НСтр("ru = 'Корректировка реализации'");
	
	// Заполним ТЧ Товары только теми товарами, которые на уменьшение и не указаны коды
	СтруктураПоиска = Новый Структура("ИдентификаторТовара");
	СтруктураПоиска.Вставить("Возврат", Истина);
	Для Каждого ТекущаяСтрока Из ДанныеЗаполнения.Товары Цикл
		
		// Проверим, что количество возвратов совпадает с количеством разницы
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекущаяСтрока);
		НайденныеСтроки = ДанныеЗаполнения.КодыМаркировки.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого ТекущаяСтрокаМаркировки Из НайденныеСтроки Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.КодМаркировки = ТекущаяСтрокаМаркировки.КодМаркировки;
			НоваяСтрока.Номенклатура = ТекущаяСтрока.Номенклатура;
			Документы.ВозвратВОборотКодовМаркировки.ТоварыНоменклатураПриИзменении(ЭтотОбъект, НоваяСтрока);
			НоваяСтрока.ХарактеристикаНоменклатуры = ТекущаяСтрока.ХарактеристикаНоменклатуры;
			
			НоваяСтрока.ВидПервичногоДокумента = ВидПервичногоДокумента;
			НоваяСтрока.НомерПервичногоДокумента = НомерПервичногоДокумента;
			НоваяСтрока.ДатаПервичногоДокумента = ДатаПервичногоДокумента;
			НоваяСтрока.НаименованиеПервичногоДокумента = НаименованиеПервичногоДокумента;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

Процедура ЗаполнитьТабличнуюЧастьТоваровПоОснованию(Основание, ВидОснования, НаименованиеДокумента)
	
	Товары.Очистить();
	
	ВидПервичногоДокумента = ВидОснования;
	НомерПервичногоДокумента = Основание.Номер;
	ДатаПервичногоДокумента = Основание.Дата;
	НаименованиеПервичногоДокумента = НаименованиеДокумента;
	
	СтруктураПоиска = Новый Структура("ИдентификаторТовара");
	
	// Найдем ноенклатуру, у которой не отсканировали код
	Для Каждого ТекущаяСтрока Из Основание.Товары Цикл
		
		Если НЕ ТекущаяСтрока.Номенклатура.ТипНоменклатуры.ВедетсяМаркировка Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекущаяСтрока);
		
		НайденныеСтроки = Основание.КодыМаркировки.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого ТекущаяМаркировка Из НайденныеСтроки Цикл
			
			НоваяСтрока = Товары.Добавить();
			
			НоваяСтрока.КодМаркировки = ТекущаяМаркировка.КодМаркировки;
			НоваяСтрока.Номенклатура = ТекущаяСтрока.Номенклатура;
			Документы.ВозвратВОборотКодовМаркировки.ТоварыНоменклатураПриИзменении(ЭтотОбъект, НоваяСтрока);
			НоваяСтрока.ХарактеристикаНоменклатуры = ТекущаяСтрока.ХарактеристикаНоменклатуры;
			
			НоваяСтрока.ВидПервичногоДокумента = ВидПервичногоДокумента;
			НоваяСтрока.НомерПервичногоДокумента = НомерПервичногоДокумента;
			НоваяСтрока.ДатаПервичногоДокумента = ДатаПервичногоДокумента;
			НоваяСтрока.НаименованиеПервичногоДокумента = НаименованиеПервичногоДокумента;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
