// Модуль объекта документа "Снятие резервов автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Обработчик события объекта возникает в момент, когда выполняется установка нового номера.
//
// Параметры:
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//  Префикс              - Строка - Префикс, который будет использоваться для генерации номера.
//
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	// Вызываем общий обработчик события
	ПрефиксацияОбъектов.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры // ПриУстановкеНовогоНомера()

// Обработчик события заполнения объекта как при создании нового, так и при вводе на основании существующего.
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения="", СтандартнаяОбработка=ИСТИНА)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Исполнитель) Тогда 
		Подписант = ОрганизацииАльфаАвто.Руководитель(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		
		Если ЗначениеЗаполнено(Подписант)Тогда
			Исполнитель = УправлениеПечатьюПлатформа.ПолучитьПодписантаСотрудника(Подписант, Организация, ПодразделениеКомпании);	
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Обработчик события заполнения объекта копированием.
//
// Параметры:
//  ОбъектКопирования - ДокументОбъект - Исходный объект, который является источником копирования.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего при необходимости проверки заполнения реквизитов при записи или при проведении.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Обработчик события возникающего после начала транзакции записи, но до начала записи объекта.
//
// Параметры:
//  Отказ           - Булево                   - Признак отказа от совершения операции.
//  РежимЗаписи     - РежимЗаписиДокумента     - Текущий режим записи документа.
//  РежимПроведения - РежимПроведенияДокумента - Текущий режим проведения.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);
	// Конец УтверждениеДокументов
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Тогда
		Возврат;
	КонецЕсли; 
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	РаботаСГраницами.МоментВремениПередПроведением(Ссылка, ДополнительныеСвойства);
	РаботаСГраницами.ДвиженияПоЗаказамАвтомобилейПередПроведением(Ссылка, ДополнительныеСвойства);
	
КонецПроцедуры

// Обработчик события возникающего после записи объекта в базу данных, но до окончания транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// УтверждениеДокумментов
	УтверждениеДокументовСервер.ОбработкаУтвержденияПриЗаписи(ЭтотОбъект, Отказ);
	// Конец УтверждениеДокументов

КонецПроцедуры

// Обработчик события возникающего в транзакции удаления перед непосредственным удалением объекта из базы данных.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередУдалением(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПередУдалением()

// Обработчик события возникающего при отмене проведения документа. Выполняется в транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего в транзакции записи для формирования движений документу по подчиненным регистрам.
//
// Параметры:
//  Отказ           - Булево                   - Признак отказа от совершения операции.
//  РежимПроведения - РежимПроведенияДокумента - Текущий режим проведения.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения) Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияПоЗаказамАвтомобилей(Отказ);
	
	// двигаем границу последовательности заказы на автомобили
	РаботаСГраницами.СдвинутьГраницуЗаказовАвтомобилей(Ссылка, ДополнительныеСвойства, Движения);
	
КонецПроцедуры // ОбработкаПроведения

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиЗаполненияОбъекта

// Производит заполнение объекта на основании документа "Резервирование автомобилей".
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_РезервированиеАвтомобилей(
	ДанныеЗаполнения,
	ТекстЗаполнения = "",
	СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Вызываем общий обработчик заполнения
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(
		ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Автомобили.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыАвтомобилейОстатки.Автомобиль КАК Автомобиль
	|ИЗ
	|	РегистрНакопления.ЗаказыАвтомобилей.Остатки(
	|		,
	|		Заказ = &Резервирование) КАК ЗаказыАвтомобилейОстатки
	|ГДЕ
	|	ЗаказыАвтомобилейОстатки.РезервОстаток > 0";
	Запрос.УстановитьПараметр("Резервирование", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовыйАвтомобиль = Автомобили.Добавить();
		НовыйАвтомобиль.Автомобиль = Выборка.Автомобиль;
	КонецЦикла;
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_РезервированиеАвтомобилей()

// Производит заполнение объекта на основании документа "Рабочий лист".
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для заполнения объекта.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
// Возвращаемое значение:
//  Булево - Признак возможности дальнейшей обработки события.
//
Функция ОбработкаЗаполнения_РабочийЛист(
	ДанныеЗаполнения,
	ТекстЗаполнения = "",
	СтандартнаяОбработка = Истина) Экспорт

	// Если данные заполнения не указаны, значит производиться проверка существования обработчика заполнения у объекта.
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Вызываем общий обработчик заполнения
	Если НЕ ОбработкаСобытийДокументаСервер.ОбработкаЗаполненияНаОсновании(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// очистим табличную часть
	Автомобили.Очистить();
	
	АвтомобильДляЗаполнения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения, "Автомобиль");
	
	Если НЕ АвтомобильДляЗаполнения.Пустая() Тогда
		НовыйАвтомобиль = Автомобили.Добавить();
		НовыйАвтомобиль.Автомобиль = АвтомобильДляЗаполнения;
	КонецЕсли;
	
	// Возвращаем признак возможности дальнейшей обработки события
	Возврат Истина;
	
КонецФункции // ОбработкаЗаполнения_РабочийЛист()

#КонецОбласти

#Область ФормированиеДвиженийДокумента

Процедура ДвиженияПоЗаказамАвтомобилей(Отказ)
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ЗаказыАвтомобилей");
	
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, Дата));
	
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", Автомобили);
	
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
	
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(
		СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	запрос = Новый Запрос;
	
	запрос.УстановитьПараметр("Ссылка", Ссылка);
	запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	СнятиеРезервовАвтомобилейАвтомобили.Автомобиль КАК Автомобиль,
	|	СнятиеРезервовАвтомобилейАвтомобили.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Автомобили
	|ИЗ
	|	Документ.СнятиеРезервовАвтомобилей.Автомобили КАК СнятиеРезервовАвтомобилейАвтомобили
	|ГДЕ
	|	СнятиеРезервовАвтомобилейАвтомобили.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыАвтомобилейОстатки.Автомобиль КАК Автомобиль,
	|	ЗаказыАвтомобилейОстатки.Заказ КАК Заказ,
	|	ЗаказыАвтомобилейОстатки.РезервОстаток КАК Резерв,
	|	ЗаказыАвтомобилейОстатки.Заказ ССЫЛКА Документ.ЗаказНаАвтомобиль КАК ЭтоЗаказ
	|ПОМЕСТИТЬ ОстаткиРезервов
	|ИЗ
	|	РегистрНакопления.ЗаказыАвтомобилей.Остатки(
	|			&МоментВремени,
	|			Автомобиль В
	|				(ВЫБРАТЬ
	|					Автомобили.Автомобиль КАК Автомобиль
	|				ИЗ
	|					Автомобили КАК Автомобили)) КАК ЗаказыАвтомобилейОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Автомобили.Автомобиль КАК Автомобиль,
	|	Автомобили.НомерСтроки КАК НомерСтроки,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Автомобили.Автомобиль) КАК АвтомобильПредставление,
	|	ОстаткиРезервов.Заказ КАК Заказ,
	|	ОстаткиРезервов.ЭтоЗаказ КАК ЭтоЗаказ,
	|	ЕСТЬNULL(ОстаткиРезервов.Резерв, 0) КАК Резерв,
	|	ПРЕДСТАВЛЕНИЕ(ОстаткиРезервов.Заказ) КАК ЗаказПредставление
	|ИЗ
	|	Автомобили КАК Автомобили
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРезервов КАК ОстаткиРезервов
	|		ПО Автомобили.Автомобиль = ОстаткиРезервов.Автомобиль";
	
	выборка = запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() Цикл
		Если выборка.Резерв = 0 Тогда
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Автомобили",Выборка.НомерСтроки, "Автомобиль");
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Автомобиль ""%1"" не зарезервирован. Снятие резерва невозможно.'"),
					выборка.АвтомобильПредставление
				),
				,
				ПутьКТабличнойЧасти,
				,
				Отказ	
			);
		ИначеЕсли выборка.ЭтоЗаказ Тогда
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Автомобили",Выборка.НомерСтроки, "Автомобиль");
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Автомобиль ""%1"" заказан. Отмените заказ ""%2"". Снятие резерва невозможно.'"),
					выборка.АвтомобильПредставление,
					выборка.ЗаказПредставление
				),
				,
				ПутьКТабличнойЧасти,
				,
				Отказ	
			);

		Иначе
			новаяЗапись = Движения.ЗаказыАвтомобилей.ДобавитьРасход();
			
			ЗаполнитьЗначенияСвойств(новаяЗапись, выборка);
			
			НоваяЗапись.Период      = Дата;
			НоваяЗапись.Регистратор = Ссылка;
			НоваяЗапись.ХозОперация = ХозОперация;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
