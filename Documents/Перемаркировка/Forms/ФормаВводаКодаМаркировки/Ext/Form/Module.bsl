
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ЭтоВозврат", ЭтоВозврат);
	
	ТекущийКодМаркировки = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТекущийКодМаркировки", "");
	ТекущаяНоменклатура = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТекущаяНоменклатура", Неопределено);
	НовыйКодМаркировки = ПолучитьЗначениеПараметраСтруктуры(Параметры, "НовыйКодМаркировки", "");
	НоваяНоменклатура = ПолучитьЗначениеПараметраСтруктуры(Параметры, "НоваяНоменклатура", Неопределено);
	ТоварнаяГруппа = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТоварнаяГруппа", Неопределено);
	
	Элементы.Страницы.ТекущаяСтраница = ?(ЭтоВозврат, Элементы.СтраницаНовые, Элементы.СтраницаТекущие);
	Элементы.СтраницаТекущие.Доступность = НЕ ЭтоВозврат;
	
	ИспользоватьПодключаемоеОборудование =
		МенеджерОборудованияВызовСервераПереопределяемый.ИспользоватьПодключаемоеОборудование();
		
	Если ЗначениеЗаполнено(ТоварнаяГруппа) Тогда
		
		ТипыНоменклатуры = МаркировкаТоваровСервер.ТипыНоменклатурыТоварнойГруппы(ТоварнаяГруппа);
		
		Если ТипыНоменклатуры.Количество() > 0 Тогда
			
			УправлениеДиалогомСервер.ОбновитьПараметрВыбора(
				Элементы.ТекущаяНоменклатура.ПараметрыВыбора,
				"Отбор.ТипНоменклатуры",
				ТипыНоменклатуры
			);
			УправлениеДиалогомСервер.ОбновитьПараметрВыбора(
				Элементы.НоваяНоменклатура.ПараметрыВыбора,
				"Отбор.ТипНоменклатуры",
				ТипыНоменклатуры
			);
			
		Иначе
			
			УправлениеДиалогомСервер.УдалитьПараметрВыбора(
				Элементы.ТекущаяНоменклатура.ПараметрыВыбора,
				"Отбор.ТипНоменклатуры"
			);
			УправлениеДиалогомСервер.УдалитьПараметрВыбора(
				Элементы.НоваяНоменклатура.ПараметрыВыбора,
				"Отбор.ТипНоменклатуры"
			);
		
		КонецЕсли;
		
	КонецЕсли;
	
	МаркировкаТоваровСервер.УстановитьРедактированиеКодовМаркировки(
		ЭтотОбъект,
		Документы.Перемаркировка.ПустаяСсылка(),
		Элементы.ТекущийКодМаркировки.Имя
	);
	МаркировкаТоваровСервер.УстановитьРедактированиеКодовМаркировки(
		ЭтотОбъект,
		Документы.Перемаркировка.ПустаяСсылка(),
		Элементы.НовыйКодМаркировки.Имя
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ScanData" И ВводДоступен() Тогда
		
		Штрихкод = ШтрихкодированиеКлиент.ПолучитьШтрихкодИзПараметровОборудования(ИмяСобытия, Параметр);
		
		Если ЗначениеЗаполнено(Штрихкод) Тогда
			
			ПараметрыДействия = Новый Структура;
			ШтрихкодированиеКлиент.ОбработатьПолныйШтрихкод(Штрихкод, ПараметрыДействия);
			
			Штрихкод = ПараметрыДействия.Штрихкод;
			
			Номенклатура = НайтиОбъектыПоШтрихКоду(Штрихкод);
			
			Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНовые Тогда
				НовыйКодМаркировки = Штрихкод;
				Если Номенклатура <> Неопределено Тогда
					НоваяНоменклатура = Номенклатура;
				КонецЕсли;
			Иначе
				ТекущийКодМаркировки = Штрихкод;
				Если Номенклатура <> Неопределено Тогда
					ТекущаяНоменклатура = Номенклатура;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекущаяНоменклатураПриИзменении(Элемент)
	
	НоменклатураПриИзмененииНаСервере("ТекущаяНоменклатура");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийКодМаркировкиПриИзменении(Элемент)
	
	ТекстСообщения = "";
	Если НЕ ЭтоКодМаркировки(ТекущийКодМаркировки, ТекстСообщения) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "ТекущийКодМаркировки");
		ТекущийКодМаркировки = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяНоменклатураПриИзменении(Элемент)
	
	НоменклатураПриИзмененииНаСервере("НоваяНоменклатура");
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйКодМаркировкиПриИзменении(Элемент)
	
	ТекстСообщения = "";
	Если НЕ ЭтоКодМаркировки(НовыйКодМаркировки, ТекстСообщения) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "НовыйКодМаркировки");
		НовыйКодМаркировки = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Новый Структура();
	
	Если НЕ ЭтоВозврат Тогда
		Результат.Вставить("Номенклатура",  ТекущаяНоменклатура);
		Результат.Вставить("КодМаркировки", ТекущийКодМаркировки);
	КонецЕсли;
	
	Результат.Вставить("НоменклатураНовая",  НоваяНоменклатура);
	Результат.Вставить("КодМаркировкиНовый", НовыйКодМаркировки);
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НоменклатураПриИзмененииНаСервере(Поле)
	
	Номенклатура = ЭтотОбъект[Поле];
	Если ЗначениеЗаполнено(Номенклатура)
		И НЕ Номенклатура.ТипНоменклатуры.ВедетсяМаркировка Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Нельзя вводить номенклатуру, по которой не ведется учет по маркировке.'"),
			,
			Поле
		);
		ЭтотОбъект[Поле] = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЭтоКодМаркировки(ШтрихКод, ТекстСообщения)
	
	ШтрихКод = МаркировкаТоваровКлиентСервер.ПолучитьКодМаркировки(ШтрихКод, ТекстСообщения);
	Возврат ПустаяСтрока(ТекстСообщения);
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиОбъектыПоШтрихкоду(Штрихкод)
	
	Номенклатура = Неопределено;
	ОбъектыПоШтрихкоду = ШтрихкодированиеВызовСервера.НайтиОбъектыПоШтрихкоду(ШтрихКод, , Истина);
	Если ОбъектыПоШтрихкоду.Количество() > 0 Тогда
		Номенклатура = ОбъектыПоШтрихкоду[0].Объект;
	КонецЕсли;
	
	Возврат Номенклатура;
	
КонецФункции

#КонецОбласти