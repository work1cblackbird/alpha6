///////////////////////////////////////////////////////////////////////////////
// Модуль основной формы документа "Бюджет продаж"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// ПодключаемоеОборудование
	ТипыОборудования = МенеджерОборудованияКлиентСервер.ПараметрыТипыОборудования();
	ТипыОборудования.СканерШтрихкода = Истина;
	ТипыОборудования.СчитывательМагнитныхКарт = Истина;
	МенеджерОборудования.ПриСозданииНаСервере(ЭтаФорма, ТипыОборудования);
	// Конец ПодключаемоеОборудование
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец УтверждениеДокументов
	
	РаботаСФормой.ИнициализироватьМенюВыбораХозОперации(ЭтотОбъект);
	РаботаСФормой.РасставитьСвязиПараметровВыбораПоОрганизации(ЭтотОбъект, Объект);
	РаботаСФормой.ЗаблокироватьРедактированиеНомераИДатыДокумента(ЭтотОбъект, Объект);
	
	РазрешитьРедактированиеЦенИСумм = ПраваИНастройкиПользователя.Значение("РедактированиеЦенИСуммВНоменклатурныхТаблицах", Объект);
	РаботаСФормой.РазрешитьРедактированиеЦенИСумм(
		РаботаСФормой.ТиповыеПоляСуммовыхРеквизитов(ЭтотОбъект),
		РазрешитьРедактированиеЦенИСумм
	);
	РаботаСФормой.ОткрытьФормуТолькоДляПросмотра(ЭтотОбъект, Объект);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.ДатаПланирования) Тогда
			
			Объект.ДатаПланирования = НачалоМесяца(ТекущаяДатаСеанса());
			
		КонецЕсли;
	
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
		
	КонецЕсли;
	
	ПараметрыДокумента = ОбщиеПараметрыДокументов.СформироватьПредставлениеПараметровДокумента(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец УтверждениеДокументов
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;	
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия=Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// УтверждениеДокументов
	УтверждениеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец УтверждениеДокументов
	
	// Штрихкодирование
	ШтрихкодированиеКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец Штрихкодирование
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	РаботаСФормой.ЗаполнитьСлужебныеРеквизитыТоваров(Объект.Товары);
	
	ПредыдущийСценарийПланирования = Объект.СценарийПланирования;
	
	ЗаполнитьДополнительныеРеквизитыТабличныхЧастей();
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("БюджетПродаж", ПараметрыЗаписи.РежимЗаписи,
		Объект.Товары.Количество() > 50);
		
	Отказ = Отказ Или РаботаСФормойКлиент.НачатьПроверкуПодразделенияДокументаИПользователя(
		Объект.ПодразделениеКомпании,
		Новый ОписаниеОповещения(
			"ПроверкаПодразделенияДокументаИПользователяЗавершение",
			ЭтотОбъект,
			Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)
		)
	);

КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	РаботаСФормой.ЗаполнитьСлужебныеРеквизитыТоваров(Объект.Товары);
	ЗаполнитьДополнительныеРеквизитыТабличныхЧастей();
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормойКлиент.ОповеститьОЗаписиДокумента(Объект.Ссылка);
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоказыватьПараметрыДокумента", Элементы.ПараметрыДокумента.Видимость);
	
КонецПроцедуры 

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПоказыватьПараметрыДокумента") = Ложь Тогда
		Элементы.ПараметрыДокумента.Видимость = Ложь;
		Элементы.НомерДата         .Видимость = Ложь;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	ПараметрыДействия = Новый Структура;
	ДатаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ДатаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Документы.БюджетПродаж.ДатаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ХозОперацияПриИзменении(Команда)
	
	УправлениеДиалогомДокументаКлиент.ОбработатьВыборХозОперации(Объект, Элементы, Команда.Имя);
	ПараметрыДействия = Новый Структура;
	ХозОперацияПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ХозОперацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Вызываем обработчик изменения данных объекта
	Документы.БюджетПродаж.ХозОперацияПриИзменении(Объект, ПараметрыДействия);
	
	Если (Объект.ХозОперация=Справочники.ХозОперации.БюджетПродажПоНоменклатуре И Элементы.ТоварыНоменклатура.Заголовок = НСтр("ru = 'Тип номенклатуры'"))
		 ИЛИ (Объект.ХозОперация=Справочники.ХозОперации.БюджетПродажПоКатегориям И Элементы.ТоварыНоменклатура.Заголовок = "Номенклатура") Тогда
		Объект.Товары.Очистить();
		Объект.Услуги.Очистить();
		Объект.СпособПоследнегоЗаполнения = -2;
		Объект.ДокументОснование = Документы.БюджетПродаж.ПустаяСсылка();
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПланированияПриИзменении(Элемент)
	
	// зададим вопрос
	Если Объект.СценарийПланирования <> ПредыдущийСценарийПланирования И (Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0) Тогда
		
		// Формируем описание обработчика перехвата закрытия формы
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаПриИзмененииСценарияПланирования", ЭтотОбъект);
		
		// Формируем текст вопроса
		ТекстВопроса = НСтр("ru = 'Изменился сценарий планирования. Табличная часть будет очищена. Продолжить?'");
		
		// Получаем подтверждение операции от пользователя
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

	Иначе
		
		ПредыдущийСценарийПланирования = Объект.СценарийПланирования;
		
		ПараметрыДействия = Новый Структура;
		СценарийПланированияПриИзмененииНаСервере(ПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура СценарийПланированияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	// Вызываем обработчик изменения данных объекта
	Документы.БюджетПродаж.СценарийПланированияПриИзменении(Объект, ПараметрыДействия);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры // СценарийПланированияПриИзмененииНаСервере()

&НаКлиенте
Процедура ПланированиеСебестоимостиПриИзменении(Элемент)
	
	ПланированиеСебестоимостиПриИзмененииНаСервере(Неопределено);

КонецПроцедуры 

&НаСервере
Процедура ПланированиеСебестоимостиПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура НадписьИнформацияОТипеЦенНажатие(Элемент)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Курс",   Объект.КурсДокумента);
	СтруктураПараметров.Вставить("ТипЦен", Объект.ТипЦен);
	СтруктураПараметров.Вставить("Дата",   Объект.Дата);
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ОбработкаРезультатаВыбораТипаЦен", ЭтотОбъект);
	
	ОткрытьФорму("Документ.БюджетПродаж.Форма.ФормаДляВыбораТипаЦены", СтруктураПараметров, ЭтотОбъект,,,, ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры 

&НаКлиенте
Процедура НадписьПараметрыНажатие(Элемент)
	
	ОткрытьФормуЗаполнения(Объект.СпособПоследнегоЗаполнения);
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДиалогомДокументаКлиент.ТоварыПриОкончанииРедактирования(
		ЭтотОбъект,
		Элемент,
		НоваяСтрока,
		ОтменаРедактирования
	);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	ТоварыПослеУдаленияНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыПослеУдаленияНаСервере(ПараметрыДействия = Неопределено)
	
	// Вызываем общий обработчик события
	УправлениеДиалогомДокументаСервер.ТоварыПослеУдаления(ЭтотОбъект, Элементы.Товары, ПараметрыДействия);
	
КонецПроцедуры 

#Область ОбработчикиСобытийПолейТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	Если Объект.ХозОперация = ПредопределенноеЗначение("Справочник.ХозОперации.БюджетПродажПоНоменклатуре")Тогда
		
		ТоварыНоменклатураПриИзмененииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыНоменклатураПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.БюджетПродаж.ТоварыНоменклатураПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	УправлениеДиалогомДокументаСервер.НоменклатураПриИзменении(ЭтотОбъект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТоварыКоличествоПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыКоличествоПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.БюджетПродаж.ТоварыКоличествоПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТоварыЦенаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТоварыЦенаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.БюджетПродаж.ТоварыЦенаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыНормативнаяЦенаПриИзменении(Элемент)
	
	ТоварыНормативнаяЦенаПриИзмененииНаСервере();

КонецПроцедуры 

&НаСервере
Процедура ТоварыНормативнаяЦенаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	// Получим данные текущей строки табличной части
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	
	// Вызываем обработчик изменения данных объекта
	Документы.БюджетПродаж.ТоварыНормативнаяЦенаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры // ТоварыНормативнаяЦенаПриИзмененииНаСервере()

&НаКлиенте
Процедура ТоварыСуммаВсегоУпрПриИзменении(Элемент)

	ТоварыСуммаВсегоУпрПриИзмененииНаСервере();

КонецПроцедуры 

&НаСервере
Процедура ТоварыСуммаВсегоУпрПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.БюджетПродаж.ТоварыСуммаВсегоУпрПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСебестоимостьУпрПриИзменении(Элемент)
	
	ТоварыСебестоимостьУпрПриИзмененииНаСервере();

КонецПроцедуры 

&НаСервере
Процедура ТоварыСебестоимостьУпрПриИзмененииНаСервере(ПараметрыДействия=Неопределено)

	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Документы.БюджетПродаж.ТоварыСебестоимостьУпрПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

#Область ОбработчикиСобытийПолейТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиНоменклатураПриИзменении(Элемент)
	
	УслугиНоменклатураПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура УслугиНоменклатураПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	// Получим данные текущей строки табличной части
	ТекущиеДанные = Объект.Услуги.НайтиПоИдентификатору(Элементы.Услуги.ТекущаяСтрока);
	
	// Вызываем обработчик изменения данных объекта
	Документы.БюджетПродаж.УслугиНоменклатураПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
	Если ТипЗнч(ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		// заполним доп реквизиты
		ТекущиеДанные.ЕдиницаИзмерения = ТекущиеДанные.Номенклатура.БазоваяЕдиницаИзмерения;
		ТекущиеДанные.СтавкаНДС        = "" + ТекущиеДанные.Номенклатура.СтавкаНДС.Ставка + "%";
		ТекущиеДанные.Код              = ТекущиеДанные.Номенклатура.Код;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	УслугиКоличествоПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура УслугиКоличествоПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Услуги.НайтиПоИдентификатору(Элементы.Услуги.ТекущаяСтрока);
	Документы.БюджетПродаж.УслугиКоличествоПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)

	УслугиЦенаПриИзмененииНаСервере();
	
КонецПроцедуры 


&НаСервере
Процедура УслугиЦенаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Услуги.НайтиПоИдентификатору(Элементы.Услуги.ТекущаяСтрока);
	Документы.БюджетПродаж.УслугиЦенаПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 


&НаКлиенте
Процедура УслугиСуммаВсегоУпрПриИзменении(Элемент)

	УслугиСуммаВсегоУпрПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура УслугиСуммаВсегоУпрПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	ТекущиеДанные = Объект.Услуги.НайтиПоИдентификатору(Элементы.Услуги.ТекущаяСтрока);
	Документы.БюджетПродаж.УслугиСуммаВсегоУпрПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры 
#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПериодВпередНазадНаСервере(Действие)
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("ДатаИзПериода" , Объект.ДатаПланирования);
	ПараметрыДействия.Вставить("Периодичность" , Объект.СценарийПланирования.Периодичность);
	ПараметрыДействия.Вставить("Действие"      , Действие);
	
	ПланированиеСервер.ПолучитьДатыПланируемогоПериода(ПараметрыДействия);
	
	Объект.ДатаПланирования = ПараметрыДействия.ДатаНачала;
	
	УправлениеДиалогомНаСервере();

КонецПроцедуры // ПериодВпередНазадНаСервере()

&НаКлиенте
Процедура ПериодВперед(Команда)
	
	ПериодВпередНазадНаСервере(+1);
	
КонецПроцедуры // ПериодВперед()

&НаКлиенте
Процедура ПериодНазад(Команда)
	
	ПериодВпередНазадНаСервере(-1);
	
КонецПроцедуры // ПериодНазад()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьСтрокуПоследнегоЗаполнения(СпособЗаполнения = -1)
	
	Если СпособЗаполнения=-1 Тогда
		СпособЗаполнения = Объект.СпособПоследнегоЗаполнения;
	Иначе
		Объект.СпособПоследнегоЗаполнения = СпособЗаполнения;
	КонецЕсли;	
	
	Если СпособЗаполнения=-2 Тогда
		Элементы.НадписьПараметры.Заголовок = "";
		Возврат;
	КонецЕсли;
	
	Текст = "";
	Если СпособЗаполнения=0 Тогда // Наивное прогнозирование
		
		Текст = НСтр("ru = 'Тип анализа:'") + Символы.НПП + Символы.НПП + СокрЛП(Объект.ТипАнализа);
		Текст = Текст  + Символы.НПП + НСтр("ru = '(Коэф.роста='") + СокрЛП(Объект.КоэффициентРостаПродаж) + ";" + Символы.НПП + Символы.НПП + НСтр("ru = 'Коэф.сез.='") + СокрЛП(Объект.КоэффициентСезонности) + ")" + Символы.ПС;
		Текст = Текст + НСтр("ru = 'Показатель планирования:'") + Символы.НПП + Символы.НПП + ?(Объект.ПоказательПланирования,"Количество", НСтр("ru = 'Сумма (упр.)'")) + Символы.ПС;
		Текст = Текст + НСтр("ru = 'Периоды планирования:'") + Символы.НПП + ПланированиеСервер.ВывестиПредставлениеПериода(Объект, Объект.СценарийПланирования.Периодичность, Объект.ДатаПланирования);
		
	ИначеЕсли СпособЗаполнения=1 Тогда // Прогнозирование мат.методами
		
		Текст = Текст + "Модель: " + СокрЛП(Объект.МодельПрогнозирования) + Символы.ПС;
		
		Если Объект.МодельПрогнозирования=Перечисления.МоделиПрогнозирования.Сглаживанием Тогда
			
			Текст = Текст + НСтр("ru = 'Постоянная уровня:'") + Символы.НПП + СокрЛП(Объект.Параметр1) + ";" + Символы.НПП + НСтр("ru = 'Постоянная тренда:'") + Символы.НПП + СокрЛП(Объект.Параметр2);
			Если ( (Объект.СценарийПланирования.Периодичность=Перечисления.ПериодичностьПланирования.Месяц)
				И (Объект.КоличествоПериодов >= 24) )
				ИЛИ ( (Объект.СценарийПланирования.Периодичность=Перечисления.ПериодичностьПланирования.Квартал)
				И (Объект.КоличествоПериодов >= 8)   ) Тогда
				Текст = Текст + ";" + Символы.НПП + НСтр("ru = 'Постоянная сезонности:'") + Символы.НПП + СокрЛП(Объект.Параметр3) + Символы.ПС;  				
			КонецЕсли;
			
		ИначеЕсли Объект.МодельПрогнозирования=Перечисления.МоделиПрогнозирования.Полиномиальный Тогда
			Текст = Текст + НСтр("ru = 'Степень полинома:'") + Символы.НПП + СокрЛП(Объект.Параметр1) + Символы.ПС;
		КонецЕсли;
		
		Если Объект.ХозОперация=Справочники.ХозОперации.БюджетПродажПоНоменклатуре Тогда
			Текст = Текст + НСтр("ru = 'Показатель планирования:'") + Символы.НПП + Символы.НПП + ?(Объект.ПоказательПланирования,"Количество", НСтр("ru = 'Сумма (упр.)'")) + Символы.ПС;
		КонецЕсли;
		Текст = Текст + НСтр("ru = 'Периоды планирования:'") + Символы.НПП + ПланированиеСервер.ВывестиПредставлениеПериода(Объект, Объект.СценарийПланирования.Периодичность, Объект.ДатаПланирования);
		
	ИначеЕсли СпособЗаполнения=2 Тогда // Заполнение по документу основанию
		Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
			Текст = "";
		Иначе
			Текст = Текст + НСтр("ru = 'Док.основание:'") + Символы.НПП + Символы.НПП + СокрЛП(Объект.ДокументОснование);
			Если Объект.ХозОперация=Справочники.ХозОперации.БюджетПродажПоНоменклатуре И Объект.ДокументОснование.ХозОперация=Справочники.ХозОперации.БюджетПродажПоКатегориям Тогда
				Текст = Текст + Символы.ПС + НСтр("ru = 'Метод распределения суммы продаж категорий:'") + Символы.НПП + Символы.НПП + СокрЛП(Объект.МетодыРаспределенияКатегорий);
				Текст = Текст + Символы.ПС + НСтр("ru = 'Изменяемый показатель:'") + Символы.НПП + Символы.НПП + ?(Объект.ПараметрУправленияРаспределением=0, "Количество", "Цена");
			КонецЕсли;
		КонецЕсли;			
	КонецЕсли;
	
	Элементы.НадписьПараметры.Заголовок = Текст;
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЗаполнения(Способ=0)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СценарийПланирования",            Объект.СценарийПланирования);
	ПараметрыФормы.Вставить("КоличествоПериодов",              Объект.КоличествоПериодов);
	ПараметрыФормы.Вставить("КоэффициентРостаПродаж",          Объект.КоэффициентРостаПродаж);
	ПараметрыФормы.Вставить("КоэффициентСезонности",           Объект.КоэффициентСезонности);
	ПараметрыФормы.Вставить("ТипАнализа",                      Объект.ТипАнализа);
	ПараметрыФормы.Вставить("ПоказательПланирования",          Объект.ПоказательПланирования);
	ПараметрыФормы.Вставить("СпособОкругления",                Объект.СпособОкругления);
	ПараметрыФормы.Вставить("НеУчитыватьПериодыБезДанных",     Объект.НеУчитыватьПериодыБезДанных);
	ПараметрыФормы.Вставить("КоличествоСезонов",               Объект.КоличествоСезонов);
	ПараметрыФормы.Вставить("СмещениеПланирования",            Объект.СмещениеПланирования);
	ПараметрыФормы.Вставить("ХозОперация",                     Объект.ХозОперация);
	ПараметрыФормы.Вставить("ДатаПланирования",                Объект.ДатаПланирования);
	ПараметрыФормы.Вставить("ПланированиеСебестоимости",       Объект.ПланированиеСебестоимости);
	ПараметрыФормы.Вставить("МодельПрогнозирования",           Объект.МодельПрогнозирования);
	ПараметрыФормы.Вставить("Параметр1",                       Объект.Параметр1);
	ПараметрыФормы.Вставить("Параметр2",                       Объект.Параметр2);
	ПараметрыФормы.Вставить("Параметр3",                       Объект.Параметр3);
	ПараметрыФормы.Вставить("РасчетСезонности",                Объект.РасчетСезонности);
	ПараметрыФормы.Вставить("ДокументОснование",               Объект.ДокументОснование);
	ПараметрыФормы.Вставить("МетодыРаспределенияКатегорий",    Объект.МетодыРаспределенияКатегорий);
	ПараметрыФормы.Вставить("ПараметрУправленияРаспределением",Объект.ПараметрУправленияРаспределением);
	ПараметрыФормы.Вставить("ТипЦен",                          Объект.ТипЦен);
	ПараметрыФормы.Вставить("Дата",                            Объект.Дата);
	ПараметрыФормы.Вставить("КурсДокумента",                   Объект.КурсДокумента);
	ПараметрыФормы.Вставить("ПодразделениеКомпании",           Объект.ПодразделениеКомпании);
	ПараметрыФормы.Вставить("Владелец",                        Объект.Ссылка);
	ПараметрыФормы.Вставить("ИмяТабличнойЧасти",               Элементы.Страницы.ТекущаяСтраница.Заголовок);
	ПараметрыФормы.Вставить("ТолькоПросмотр",                  ТолькоПросмотр);
	
	Если Способ = 0 Тогда
		
		// Простым способом
		ОповещениеРезультата = Новый ОписаниеОповещения("ОбработкаРезультатаПоПоследнемуСпособуЗаполнения", ЭтотОбъект, "ЗаполнениеПростымСпособом");
		ОткрытьФорму("Документ.БюджетПродаж.Форма.ФормаДляЗаполненияПростымСпособом", ПараметрыФормы, ЭтотОбъект, ,,, ОповещениеРезультата, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли Способ = 1 Тогда
		
		// Метод математического прогнозирования
		ОповещениеРезультата = Новый ОписаниеОповещения("ОбработкаРезультатаПоПоследнемуСпособуЗаполнения", ЭтотОбъект, "ЗаполнениеМатМетодами");
		ОткрытьФорму("Документ.БюджетПродаж.Форма.ФормаДляЗаполненияМатМетодами", ПараметрыФормы, ЭтотОбъект, ,,, ОповещениеРезультата, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли Способ = 2 Тогда
		
		// Заполнение по документу основанию
		ОповещениеРезультата = Новый ОписаниеОповещения("ОбработкаРезультатаПоПоследнемуСпособуЗаполнения", ЭтотОбъект, "ЗаполнениеДокументомОснование");
		ОткрытьФорму("Документ.БюджетПродаж.Форма.ФормаДляЗаполненияПоДокументуОснованию", ПараметрыФормы, ЭтотОбъект, ,,, ОповещениеРезультата, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаПриИзмененииСценарияПланирования(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ДокументОснование = ПредопределенноеЗначение("Документ.БюджетПродаж.ПустаяСсылка");
		Объект.Товары.Очистить();
		Объект.Услуги.Очистить();
		ПредыдущийСценарийПланирования = Объект.СценарийПланирования;
		Объект.СпособПоследнегоЗаполнения = -2;
	Иначе
		Объект.СценарийПланирования = ПредыдущийСценарийПланирования;
	КонецЕсли;
	
	ПараметрыДействия = Новый Структура;
	СценарийПланированияПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаРезультатаПоПоследнемуСпособуЗаполненияНаСервере(Результат, ДополнительныеПараметры = Неопределено)
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		ПараметрыКоманды = Новый Структура("РезультатВыбора, Источник", Результат, Объект);
		Если Элементы.Страницы.ТекущаяСтраница.Заголовок = "Товары" Тогда
			Объект.Товары.Очистить();
			Документы.БюджетПродаж.ЗаполнениеТабличнойЧастиТовары(Объект, ПараметрыКоманды);
		Иначе
			Объект.Услуги.Очистить();
			Документы.БюджетПродаж.ЗаполнениеТабличнойЧастиУслуги(Объект, ПараметрыКоманды);
		КонецЕсли;
		
		Если ДополнительныеПараметры = "ЗаполнениеПростымСпособом" Тогда
			Объект.СпособПоследнегоЗаполнения = 0;
		ИначеЕсли ДополнительныеПараметры = "ЗаполнениеМатМетодами" Тогда
			Объект.СпособПоследнегоЗаполнения = 1;
		ИначеЕсли ДополнительныеПараметры = "ЗаполнениеДокументомОснование" Тогда
			Объект.СпособПоследнегоЗаполнения = 2;
		КонецЕсли;
		
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаПоПоследнемуСпособуЗаполнения(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	// Проверяем статус закрытия
	Если Результат=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаПоПоследнемуСпособуЗаполненияНаСервере(Результат, ДополнительныеПараметры);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаВыбораТипаЦен(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	// Проверяем статус закрытия
	Если Результат=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Объект.КурсДокумента = Результат.КурсДокумента;
		Объект.ТипЦен        = Результат.ТипЦен;
	КонецЕсли;
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьДополнительныеРеквизитыТабличныхЧастей()
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
		Если ТипЗнч(СтрокаТЧ.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			СтрокаТЧ.ЕдиницаИзмерения = СтрокаТЧ.Номенклатура.БазоваяЕдиницаИзмерения;
			СтрокаТЧ.СтавкаНДС = Строка(СтрокаТЧ.Номенклатура.СтавкаНДС.Ставка) + "%";
		КонецЕсли;
		
		СтрокаТЧ.Код = СтрокаТЧ.Номенклатура.Код;
		СтрокаТЧ.МаржинальнаяПрибыль = СтрокаТЧ.СуммаВсегоУпр - СтрокаТЧ.СебестоимостьУпр;
		
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из Объект.Услуги Цикл
		
		Если ТипЗнч(СтрокаТЧ.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			СтрокаТЧ.ЕдиницаИзмерения = СтрокаТЧ.Номенклатура.БазоваяЕдиницаИзмерения;
			СтрокаТЧ.СтавкаНДС = Строка(СтрокаТЧ.Номенклатура.СтавкаНДС.Ставка) + "%";
		КонецЕсли;
		
		СтрокаТЧ.Код = СтрокаТЧ.Номенклатура.Код;
		
	КонецЦикла;
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ПроверкаПодразделенияДокументаИПользователяЗавершение(Контекст) Экспорт
	
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЗаполнениеОбъектов
&НаКлиенте
Процедура ПослеОбработкиЗаполнения(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ПослеОбработкиЗаполненияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеОбработкиЗаполненияНаСервере()
	
	ЗаполнениеОбъектовАльфаАвто.ПослеОбработкиЗаполнения(ЭтотОбъект, Объект);
	СформироватьСтрокуПоследнегоЗаполнения();
	
КонецПроцедуры
// Конец ЗаполнениеОбъектов

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиАльфаАвто

// Ядро
&НаКлиенте
Процедура ПараметрыДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеДиалогомДокументаКлиент.НастроитьПараметрыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	УправлениеДиалогомДокументаКлиент.РасширенноеРедактированиеПоляКомментарий(ЭтотОбъект, Элемент,
		СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	УправлениеДиалогомДокументаСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
	// Исключим вид номенклатуры "Услуга" из параметров связи реквизита "Номенклатура" табличной части "Товары".
	ВидыНоменклатуры = Справочники.ХозОперации.ПолучитьВидыНоменклатуры(Объект.ХозОперация);
	Если НЕ ВидыНоменклатуры.Найти(Перечисления.ВидыНоменклатуры.Услуга) = Неопределено Тогда
		ВидыНоменклатуры.Удалить(ВидыНоменклатуры.Найти(Перечисления.ВидыНоменклатуры.Услуга));
		Если Не Элементы.Найти("ТоварыНоменклатура")=Неопределено Тогда
			УправлениеДиалогомСервер.ОбновитьПараметрВыбора(Элементы.ТоварыНоменклатура.ПараметрыВыбора, "Отбор.ВидНоменклатуры", ВидыНоменклатуры);
		КонецЕсли;
	КонецЕсли;
	
	// наложим отбор по ХО
	Элементы.ТоварыНоменклатура.ОграничениеТипа = Новый ОписаниеТипов(?(Объект.ХозОперация <> Справочники.ХозОперации.БюджетПродажПоКатегориям, "СправочникСсылка.Номенклатура", "СправочникСсылка.ТипыНоменклатуры"));
	Элементы.УслугиНоменклатура.ОграничениеТипа = Новый ОписаниеТипов(?(Объект.ХозОперация <> Справочники.ХозОперации.БюджетПродажПоКатегориям, "СправочникСсылка.Номенклатура", "СправочникСсылка.ТипыНоменклатуры"));
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомДокументаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	// Видимость колонок ТЧ
	БюджетПоНоменклатуре = (Объект.ХозОперация = Справочники.ХозОперации.БюджетПродажПоНоменклатуре);
	
	Элементы.ТоварыЦена.Видимость             = БюджетПоНоменклатуре;
	Элементы.ТоварыСтавкаНДС.Видимость        = БюджетПоНоменклатуре;
	Элементы.ТоварыКоличество.Видимость       = БюджетПоНоменклатуре;
	Элементы.ТоварыКод.Видимость              = БюджетПоНоменклатуре;
	Элементы.ТоварыЕдиницаИзмерения.Видимость = БюджетПоНоменклатуре;
	Элементы.УслугиКоличество.Видимость       = БюджетПоНоменклатуре;
	Элементы.УслугиЦена.Видимость             = БюджетПоНоменклатуре;
	Элементы.УслугиСтавкаНДС.Видимость        = БюджетПоНоменклатуре;
	Элементы.УслугиЕдиницаИзмерения.Видимость = БюджетПоНоменклатуре;
	Элементы.УслугиКод.Видимость              = БюджетПоНоменклатуре;
	Элементы.ТоварыНоменклатура.Заголовок     = ?(БюджетПоНоменклатуре, "Номенклатура" , НСтр("ru = 'Тип номенклатуры'"));
	Элементы.ТоварыНоменклатура.Подсказка     = ?(БюджетПоНоменклатуре, НСтр("ru = 'Номенклатура (товар и т.п.)'") , НСтр("ru = 'Тип номенклатуры'"));
	Элементы.УслугиНоменклатура.Заголовок     = ?(БюджетПоНоменклатуре, "Услуга"       , НСтр("ru = 'Тип услуг'"));
	Элементы.УслугиНоменклатура.Подсказка     = ?(БюджетПоНоменклатуре, "Услуга"       , НСтр("ru = 'Тип услуг'"));
	
	Элементы.ТоварыСебестоимостьУпр.Видимость    = Объект.ПланированиеСебестоимости;
	Элементы.ТоварыМаржинальнаяПрибыль.Видимость = Объект.ПланированиеСебестоимости;
	Элементы.ТоварыНормативнаяЦена.Видимость     = (Объект.ПланированиеСебестоимости И БюджетПоНоменклатуре);
	
	// период планирования
	Если Не ЗначениеЗаполнено(Объект.СценарийПланирования) ИЛИ НЕ ЗначениеЗаполнено(Объект.СценарийПланирования.Периодичность) Тогда
		ПериодПланирования = "<Неопределен>";
	Иначе
		ПараметрыПериода = Новый Структура;
		ПараметрыПериода.Вставить("ДатаИзПериода", Объект.ДатаПланирования);
		ПараметрыПериода.Вставить("Периодичность", Объект.СценарийПланирования.Периодичность);
		ПараметрыПериода.Вставить("Действие", 0);
		ПериодПланирования = ПланированиеСервер.ПолучитьДатыПланируемогоПериода(ПараметрыПериода);
		Если Объект.СпособПоследнегоЗаполнения = 2 Тогда
			Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
				Объект.СпособПоследнегоЗаполнения = -2;
			Иначе
				Если Объект.СценарийПланирования.Периодичность <> Объект.ДокументОснование.СценарийПланирования.Периодичность Тогда
					Объект.ДокументОснование = Новый (ТипЗнч(Объект.ДокументОснование));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПериода = Новый Структура;
	ПараметрыПериода.Вставить("КурсДокумента",             Объект.КурсДокумента);
	ПараметрыПериода.Вставить("ТипЦен",                    Объект.ТипЦен);
	ПараметрыПериода.Вставить("НадписьИнформацияОТипеЦен", Элементы.НадписьИнформацияОТипеЦен);
	ПланированиеСервер.СформироватьНадписьТипаЦены(ПараметрыПериода);
	
	СформироватьСтрокуПоследнегоЗаполнения();
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьУсловноеОформление()
 
	// Вызываем общий обработчик действия
	УправлениеДиалогомДокументаСервер.УстановитьУсловноеОформление(ЭтотОбъект);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыМаржинальнаяПрибыль.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.МаржинальнаяПрибыль");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(255, 0, 0));
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыМаржинальнаяПрибыль.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.МаржинальнаяПрибыль");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(0, 175, 0));
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	// Вызываем общий обработчик события
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры = "КомандаЗаполненияТоварыЗаполнениеПоДаннымПрошлогоПериода" ИЛИ ДополнительныеПараметры = "КомандаЗаполненияУслугиЗаполнениеПоДаннымПрошлогоПериода" Тогда
		Объект.СпособПоследнегоЗаполнения = 0;
	ИначеЕсли ДополнительныеПараметры = "КомандаЗаполненияТоварыЗаполнениеМетодамиМатематическогоПрогнозирования" ИЛИ ДополнительныеПараметры = "КомандаЗаполненияУслугиЗаполнениеМетодамиМатематическогоПрогнозирования" Тогда
		Объект.СпособПоследнегоЗаполнения = 1;
	ИначеЕсли ДополнительныеПараметры = "КомандаЗаполненияТоварыЗаполнениеПоДокументуОснованию" ИЛИ ДополнительныеПараметры = "КомандаЗаполненияУслугиЗаполнениеПоДокументуОснованию" Тогда
		Объект.СпособПоследнегоЗаполнения = 2;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если НЕ УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, ПараметрыДействия);
	УправлениеДиалогомДокументаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыДокумента

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗакрытияПараметровДокумента(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРеквизитовДокументаКлиент.ПолучитьРазрешенияДляПересчета(ЭтотОбъект, РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗакрытияПараметровДокументаНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзмененииРеквизитов(Объект, 	РезультатОповещения);
	ОбщиеПараметрыДокументов.ПараметрыДокументаПриИзменении(ЭтотОбъект,			РезультатОповещения);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область Штрихкодирование

&НаКлиенте
Процедура Подключаемый_ШтрихкодированиеОбработкаОповещения(РезультатОповещения,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения.Свойство("Действие") И ЗначениеЗаполнено(РезультатОповещения.Действие) Тогда
		ШтрихкодированиеОбработкаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ШтрихкодированиеОбработкаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	ШтрихкодированиеВызовСервера.ОбработкаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры, , Объект);
	
КонецПроцедуры

#КонецОбласти

#Область УтверждениеДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуУтверждения(Команда)
	
	УтверждениеДокументовКлиент.ОбработкаКомандыФормы(ЭтотОбъект, Команда, Объект.Ссылка);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбработкуКомандыУтвержденияНаСервере(ПараметрыОбработки,
		ДополнительныеПараметры) Экспорт
	
	ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры);
	Оповестить("ПослеУтвержденияДокументов", Объект.Ссылка, ИмяФормы);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаКомандыУтвержденияНаСервере(ПараметрыОбработки, ДополнительныеПараметры)
	
	УтверждениеДокументовВызовСервера.ОбработкаКомандыФормы(ЭтотОбъект, ПараметрыОбработки.ИмяКоманды, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКомандыУтвержденияДокументов()
	
	ОбновитьКомандыУтвержденияДокументовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКомандыУтвержденияДокументовНаСервере()
	
	УтверждениеДокументовКлиентСервер.УстановитьДоступностьКнопокУтверждения(ЭтотОбъект, Объект, ТолькоПросмотр);
	УтверждениеДокументовВызовСервера.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, Объект, ТолькоПросмотр);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти