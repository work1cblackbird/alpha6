
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ПустаяСтрока(Параметры.АдресФайлаВоВременномХранилище) Тогда
		
		АдресФайлаВоВременномХранилище = Параметры.АдресФайлаВоВременномХранилище;
		ОтобразитьФайлPDF();
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ДокументУчета) Тогда
		
		//@skip-check wrong-type-expression
		Объект.ДокументОснование = Параметры.ДокументУчета;
		ДокументОснованиеПриИзмененииНаСервере();
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ИмяПечатнойФормы) Тогда
		
		Объект.ИмяПечатнойФормы = Параметры.ИмяПечатнойФормы;
		
	КонецЕсли;
	
	ЗаявкиНаПодписаниеПЭП.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	ДоступноИзменениеЗаявкиНаПодпись = ПравоДоступа("Изменение", Метаданные.Документы.ЗаявкаНаПодпись);
	НастроитьФорму();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПоказатьСохраненныйФайл();
	ОбновитьСостояниеДокументаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если СостояниеДокумента = Перечисления.СтатусыЗаявокНаПодпись.ПустаяСсылка() Тогда
		
		СостояниеДокумента = Перечисления.СтатусыЗаявокНаПодпись.ПодготовленКОтправке;
		
	КонецЕсли;
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ТребуетсяОбновитьДанныеДокументаPDF",
		ЗаявкиНаПодписаниеПЭП.ТребуетсяОбновитьДанныеДокументаPDF(СостояниеДокумента));
	ТекущийОбъект.ДополнительныеСвойства.Вставить("АдресФайлаВоВременномХранилище", АдресФайлаВоВременномХранилище);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("СостояниеДокумента", СостояниеДокумента);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	
	ДокументОснованиеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЮридическоеЛицоПЭППриИзменении(Элемент)
	
	УстановитьСтатусЮридическоеЛицоПЭП();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактноеЛицоПЭППриИзменении(Элемент)
	
	УстановитьСтатусКонтактноеЛицоПЭП();
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоПЭППриИзменении(Элемент)
	
	УстановитьСтатусФизическоеЛицоПЭП();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ВыбратьФайл(Команда)
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.Заголовок = НСтр("ru = 'Выбор документа для подписания'");
	ПараметрыДиалога.МножественныйВыбор = Ложь;;
	ПараметрыДиалога.Фильтр = "Докуммент PDF|*.pdf";
	ПомещенныйФайл = Ждать ПоместитьФайлНаСерверАсинх(,,, ПараметрыДиалога, УникальныйИдентификатор);
	
	Если ПомещенныйФайл <> Неопределено И Не ПомещенныйФайл.ПомещениеФайлаОтменено Тогда
		
		АдресФайлаВоВременномХранилище = ПомещенныйФайл.Адрес;
		
		Если ПустаяСтрока(Объект.ИмяПечатнойФормы) Тогда
			
			Объект.ИмяПечатнойФормы = ПомещенныйФайл.СсылкаНаФайл.Имя;
			
		КонецЕсли;
		
		ОтобразитьФайлPDF();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеДокумента(Команда)
	
	ОбновитьСостояниеДокументаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОтправитьНаПодпись(Команда)
	
	Если Модифицированность Или Объект.Ссылка.Пустая() Тогда
		
		Ответ = Ждать ВопросАсинх(НСтр("ru = 'Необходимо записать документ. Продолжить?'"),
			РежимДиалогаВопрос.ОКОтмена);
			
		Если Ответ <> КодВозвратаДиалога.ОК Тогда
			
			Возврат;
			
		КонецЕсли;
		
		Записать();
		
	КонецЕсли;
	
	ОтправитьНаПодписьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура Синхронизировать(Команда)
	
	Если Модифицированность Или Объект.Ссылка.Пустая() Тогда
		
		Ответ = Ждать ВопросАсинх(НСтр("ru = 'Необходимо записать документ. Продолжить?'"),
			РежимДиалогаВопрос.ОКОтмена);
			
		Если Ответ <> КодВозвратаДиалога.ОК Тогда
			
			Возврат;
			
		КонецЕсли;
		
		Записать();
		
	КонецЕсли;
	
	СинхронизироватьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДокументОснованиеПриИзмененииНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, ДокументыУчетаПЭП.УчастникиДокументаУчета(Объект.ДокументОснование));
	УстановитьСтатусЮридическоеЛицоПЭП();
	УстановитьСтатусКонтактноеЛицоПЭП();
	УстановитьСтатусФизическоеЛицоПЭП();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму()
	
	Элементы.ДокументОснование.ТолькоПросмотр = ЗначениеЗаполнено(Объект.ДокументОснование);
	Элементы.ФормаСинхронизировать.Видимость = ДоступноИзменениеЗаявкиНаПодпись
		И СостояниеДокумента = Перечисления.СтатусыЗаявокНаПодпись.ОтправленВПЭП;
	Элементы.ФормаОтправитьНаПодпись.Видимость =
		ДоступноИзменениеЗаявкиНаПодпись
		И (СостояниеДокумента = Перечисления.СтатусыЗаявокНаПодпись.ПодготовленКОтправке
			Или СостояниеДокумента = Перечисления.СтатусыЗаявокНаПодпись.ПустаяСсылка());
		
	УстановитьСтатусЮридическоеЛицоПЭП();
	УстановитьСтатусКонтактноеЛицоПЭП();
	УстановитьСтатусФизическоеЛицоПЭП();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусЮридическоеЛицоПЭП()
	
	Если ЗначениеЗаполнено(Объект.ЮридическоеЛицоПЭП) Тогда
		
		Если УчастникиПЭП.УчастникЗарегистрированВПЭП(Объект.ЮридическоеЛицоПЭП) Тогда
			
			Элементы.ДекорацияЮридическоеЛицоПЭПСтатус.Картинка = БиблиотекаКартинок
				.УчастникЗарегистрированВСервисе;
			Элементы.ДекорацияЮридическоеЛицоПЭПСтатус.Подсказка = НСтр("ru = 'Участник зарегистрирован в ПЭП'");
			
		Иначе
			
			Элементы.ДекорацияЮридическоеЛицоПЭПСтатус.Картинка = БиблиотекаКартинок
				.УчастникНеЗарегистрированВСервисе;
			Элементы.ДекорацияЮридическоеЛицоПЭПСтатус.Подсказка = НСтр("ru = 'Участник не зарегистрирован в ПЭП'");
			
		КонецЕсли;
		
	Иначе
		
		Элементы.ДекорацияЮридическоеЛицоПЭПСтатус.Картинка = БиблиотекаКартинок
			.УчастникНеЗарегистрированВСервисе;
		Элементы.ДекорацияЮридическоеЛицоПЭПСтатус.Подсказка = НСтр("ru = 'Участник не зарегистрирован в ПЭП'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусКонтактноеЛицоПЭП()
	
	Если ЗначениеЗаполнено(Объект.КонтактноеЛицоПЭП) Тогда
		
		Если УчастникиПЭП.УчастникЗарегистрированВПЭП(Объект.КонтактноеЛицоПЭП) Тогда
			
			Элементы.ДекорацияКонтактноеЛицоПЭПСтатус.Картинка = БиблиотекаКартинок
				.УчастникЗарегистрированВСервисе;
			Элементы.ДекорацияКонтактноеЛицоПЭПСтатус.Подсказка = НСтр("ru = 'Участник зарегистрирован в ПЭП'");
			
		Иначе
			
			Элементы.ДекорацияКонтактноеЛицоПЭПСтатус.Картинка = БиблиотекаКартинок
				.УчастникНеЗарегистрированВСервисе;
			Элементы.ДекорацияКонтактноеЛицоПЭПСтатус.Подсказка = НСтр("ru = 'Участник не зарегистрирован в ПЭП'");
			
		КонецЕсли;
		
	Иначе
		
		Элементы.ДекорацияКонтактноеЛицоПЭПСтатус.Картинка = БиблиотекаКартинок
			.УчастникНеЗарегистрированВСервисе;
		Элементы.ДекорацияКонтактноеЛицоПЭПСтатус.Подсказка = НСтр("ru = 'Участник не зарегистрирован в ПЭП'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусФизическоеЛицоПЭП()
	
	Если ЗначениеЗаполнено(Объект.ФизическоеЛицоПЭП) Тогда
		
		Если УчастникиПЭП.УчастникЗарегистрированВПЭП(Объект.ФизическоеЛицоПЭП) Тогда
			
			Элементы.ДекорацияФизическоеЛицоПЭПСтатус.Картинка = БиблиотекаКартинок
				.УчастникЗарегистрированВСервисе;
			Элементы.ДекорацияФизическоеЛицоПЭПСтатус.Подсказка = НСтр("ru = 'Участник зарегистрирован в ПЭП'");
			
		Иначе
			
			Элементы.ДекорацияФизическоеЛицоПЭПСтатус.Картинка = БиблиотекаКартинок
				.УчастникНеЗарегистрированВСервисе;
			Элементы.ДекорацияФизическоеЛицоПЭПСтатус.Подсказка = НСтр("ru = 'Участник не зарегистрирован в ПЭП'");
			
		КонецЕсли;
		
	Иначе
		
		Элементы.ДекорацияФизическоеЛицоПЭПСтатус.Картинка = БиблиотекаКартинок
			.УчастникНеЗарегистрированВСервисе;
		Элементы.ДекорацияФизическоеЛицоПЭПСтатус.Подсказка = НСтр("ru = 'Участник не зарегистрирован в ПЭП'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьСохраненныйФайл()
	
	АдресФайлаВоВременномХранилище = ЗаявкиНаПодписаниеПЭП.ПривязанныйФайл(Объект.Ссылка, УникальныйИдентификатор);
	ОтобразитьФайлPDF();
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьФайлPDF()
	
	Если
		ПустаяСтрока(АдресФайлаВоВременномХранилище)
		Или Не ЭтоАдресВременногоХранилища(АдресФайлаВоВременномХранилище)
	Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайлаВоВременномХранилище); // ДвоичныеДанные
	ДокументPDF.Прочитать(ДвоичныеДанныеФайла.ОткрытьПотокДляЧтения());
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостояниеДокументаНаСервере()
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		СостояниеДокумента = ЗаявкиНаПодписаниеПЭП.СостояниеДокумента(Объект.Ссылка);
		Элементы.СостояниеДокументаКартинка.Картинка = ЗаявкиНаПодписаниеПЭП.КартинкаСостояния(СостояниеДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаПодписьНаСервере()
	
	ЗаявкиНаПодписаниеПЭП.ОтправтьНаСервер(Объект.Ссылка);
	СостояниеДокумента = Перечисления.СтатусыЗаявокНаПодпись.ОтправленВПЭП;
	Элементы.СостояниеДокументаКартинка.Картинка = ЗаявкиНаПодписаниеПЭП.КартинкаСостояния(СостояниеДокумента);
	Записать();
	НастроитьФорму();
	
КонецПроцедуры

&НаСервере
Процедура СинхронизироватьНаСервере()
	
	РезультатСинхронизации = ЗаявкиНаПодписаниеПЭП.Синхронизировать(Объект.Ссылка);
	
	Если РезультатСинхронизации.ОбновилсяФайл Тогда
		
		ПоказатьСохраненныйФайл();
		
	КонецЕсли;
	
	Если РезультатСинхронизации.ОбновилосьСостояние Тогда
		
		ОбновитьСостояниеДокументаНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
