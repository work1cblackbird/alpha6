
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Режим") Тогда
		Режим = Параметры.Режим;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("НеДляОтчетов") Тогда
		НеДляОтчетов = Параметры.НеДляОтчетов;
	Иначе
		НеДляОтчетов = Ложь;
	КонецЕсли;
	
	Если Режим <> "ВыборПоляОтбора" Тогда
		СохраненныйСписокВыбора = сфпСофтФонПроСервер.ПолучитьСписокВыбораНаименованийСохраненныхРезультатовОтчетов();
		Для Каждого ЭлементСписка Из СохраненныйСписокВыбора Цикл
			Элементы.Наименование.СписокВыбора.Добавить(ЭлементСписка.Значение);
		КонецЦикла;
		Если Элементы.Наименование.СписокВыбора.Количество() > 0 Тогда
			Наименование = Элементы.Наименование.СписокВыбора[0].Значение;
		КонецЕсли;
		ЗаполнитьСписокПоНаименованию(ЭтотОбъект);
	КонецЕсли;
	
	Если Параметры.Свойство("КомпоновщикНастроек") Тогда
		КомпоновщикНастроек = Параметры.КомпоновщикНастроек;
	КонецЕсли;
	Если Параметры.Свойство("ИспользоватьПользовательскиеПоляОтбора") Тогда
		Если ТипЗнч(Параметры.ИспользоватьПользовательскиеПоляОтбора) = Тип("Булево") Тогда
			ИспользоватьПользовательскиеПоляОтбора = Параметры.ИспользоватьПользовательскиеПоляОтбора;
		Иначе
			ИспользоватьПользовательскиеПоляОтбора = Истина;
		КонецЕсли;
		Если Режим = "ВыборПоляОтбора" И Параметры.Свойство("КомпоновщикНастроек") Тогда
			ЗаполнитьПользовательскиеПоляОтбора(Параметры.КомпоновщикНастроек);
		КонецЕсли;
	КонецЕсли;
	
	НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	ЗаполнитьСписокПоНаименованию(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаДоступныеПоля

&НаКлиенте
Процедура ТаблицаДоступныеПоляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ТаблицаДоступныеПоля.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПредставлениеПоля = ВыбраннаяСтрока;
	Иначе
		ПредставлениеПоля = ТекущиеДанные.Заголовок;
	КонецЕсли;
	
	Закрыть(Новый Структура("Поле,Заголовок", ВыбраннаяСтрока, ПредставлениеПоля));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПредставлениеПоляОтбора

&НаКлиенте
Процедура ПредставлениеПоляОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметры = Новый Структура("Режим, КомпоновщикНастроек, НеДляОтчетов", "ВыборПоляОтбора", КомпоновщикНастроек, НеДляОтчетов);
	Если ИспользоватьПользовательскиеПоляОтбора Тогда
		СтруктураПараметры.Вставить("ИспользоватьПользовательскиеПоляОтбора");
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредставлениеПоляОтбораНачалоВыбораЗавершение", ЭтотОбъект);
	Форма = ПолучитьФорму("ОбщаяФорма.сфпЗагрузкаРезультатовОтчетовВОтбор", СтруктураПараметры, ЭтотОбъект, Новый УникальныйИдентификатор());
	Форма.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Форма.КомпоновщикНастроек = КомпоновщикНастроек;
	Форма.Открыть()

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПоляОтбораНачалоВыбораЗавершение(РезультатЗакрытия, СтандартнаяОбработка) Экспорт
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда
		ПолеОтбора = Строка(РезультатЗакрытия.Поле);
		ПредставлениеПоляОтбора = РезультатЗакрытия.Заголовок;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользовательскиеПоляОтбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ТаблицаПользовательскиеПоляОтбора.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	Закрыть(Новый Структура("Поле,Заголовок", ТекущиеДанные.Поле, ТекущиеДанные.Представление));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	Если Не ПроверитьНаКорректность() Тогда Возврат; КонецЕсли;
	
	Если ЗначениеЗаполнено(Наименование) И ЗначениеЗаполнено(ПолеОтбора) Тогда
		Закрыть(Новый Структура("Наименование,Поле,ПредставлениеПоля", Наименование, ПолеОтбора, ПредставлениеПоляОтбора));
	Иначе
		Закрыть(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокПоНаименованию(Форма)
	Форма.СписокРезультат.Очистить();
	
	СохраненныйСписок = сфпСофтФонПроСервер.ПолучитьСохраненныйРезультатОтчетаПоНаименованию(Форма.Наименование);
	Если СохраненныйСписок <> Неопределено Тогда
		Форма.СписокРезультат.ТипЗначения = СохраненныйСписок.ТипЗначения;
		Для Каждого ЭлементСписка Из СохраненныйСписок Цикл
			Форма.СписокРезультат.Добавить(ЭлементСписка.Значение);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьВидимостьИДоступностьФормы(Форма)
	Если Форма.Режим = "ВыборПоляОтбора" Тогда
		
		Форма.Элементы.СтраницаСписок.Видимость = Ложь;
		
		Если Форма.ИспользоватьПользовательскиеПоляОтбора Тогда
			Форма.Элементы.СтраницаДоступныеПоля.Видимость = Ложь;
			Форма.Элементы.СтраницаПользовательскиеПоля.Видимость = Истина;
		Иначе
			Форма.Элементы.СтраницаДоступныеПоля.Видимость = Истина;
			Форма.Элементы.СтраницаПользовательскиеПоля.Видимость = Ложь;
		КонецЕсли;
		
		Форма.Элементы.ГруппаОКОтмена.Видимость = Ложь;
		
		Форма.Заголовок = НСтр("ru='Выбор поля отбора';en='Choice of a field of selection'");
	Иначе
		Форма.Элементы.СтраницаСписок.Видимость = Истина;
		Форма.Элементы.СтраницаДоступныеПоля.Видимость = Ложь;
		Форма.Элементы.СтраницаПользовательскиеПоля.Видимость = Ложь;
		
		Форма.Элементы.ГруппаОКОтмена.Видимость = Истина;
		
		Форма.Заголовок = НСтр("ru='Загрузка результата отчета в отбор';en='Loading of result of report in selection'");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НайтиПользовательскиеПоляОтбора(ЭлементыОтбора, МассивНайденныеПоля)
	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			//Если НеДляОтчетов ИЛИ ЗначениеЗаполнено(ЭлементОтбора.ИдентификаторПользовательскойНастройки) Тогда
				МассивНайденныеПоля.Добавить(ЭлементОтбора);
			//КонецЕсли;
		Иначе
			НайтиПользовательскиеПоляОтбора(ЭлементОтбора.Элементы, МассивНайденныеПоля);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПользовательскиеПоляОтбора(Компоновщик)
	ТаблицаПользовательскиеПоляОтбора.Очистить();
	НайденныеПоля = Новый Массив();
	НайтиПользовательскиеПоляОтбора(Компоновщик.Настройки.Отбор.Элементы, НайденныеПоля);
	Для Каждого НайденноеПоле Из НайденныеПоля Цикл
		Если ЗначениеЗаполнено(НайденноеПоле.Представление) Тогда
			ЗаголовокПоля = НайденноеПоле.Представление;
		Иначе
			ДоступноеПолеОтбора = Компоновщик.Настройки.ДоступныеПоляОтбора.Элементы.Найти(НайденноеПоле.ЛевоеЗначение);
			Если ДоступноеПолеОтбора = Неопределено Тогда
				ЗаголовокПоля = Строка(НайденноеПоле.ЛевоеЗначение);
			Иначе
				ЗаголовокПоля = ДоступноеПолеОтбора.Заголовок;
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока = ТаблицаПользовательскиеПоляОтбора.Добавить();
		НоваяСтрока.Поле = Строка(НайденноеПоле.ЛевоеЗначение);
		НоваяСтрока.Представление = ЗаголовокПоля;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СообщитьПользователю(ТекстСообщения, ИмяРеквизита = Неопределено)
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = ТекстСообщения;
	Если ИмяРеквизита <> Неопределено Тогда
		Сообщение.Поле = ИмяРеквизита;
	КонецЕсли;
	Сообщение.Сообщить();
КонецПроцедуры

&НаКлиенте
Функция ПроверитьНаКорректность()
	Если Не ЗначениеЗаполнено(Наименование) Тогда
		СообщитьПользователю(НСтр("ru='Наименование должно быть заполнено!';en='The name should be fill!'"), "Наименование");
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПолеОтбора) Тогда
		СообщитьПользователю(НСтр("ru='Поле отбора должно быть заполнено!';en='The field of selection should be fill!'"), "ПредставлениеПоляОтбора");
		Возврат Ложь;
	КонецЕсли;
	
	Типы = СписокРезультат.ТипЗначения.Типы();
	Если Типы.Количество() > 0 Тогда
		Попытка
			ДоступноеПолеОтбора = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.Элементы.Найти(Новый ПолеКомпоновкиДанных(ПолеОтбора));
		Исключение
			ДоступноеПолеОтбора = Неопределено;
		КонецПопытки;
		Если ДоступноеПолеОтбора <> Неопределено Тогда
			бСодержитТип = Ложь;
			Для Каждого Тип Из Типы Цикл
				Если ДоступноеПолеОтбора.ТипЗначения.СодержитТип(Тип) Тогда
					бСодержитТип = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Не бСодержитТип Тогда
				СообщитьПользователю(НСтр("ru='Тип загружаемых значений не соответствует типу выбранного поля!';en='The type of load values did not correspond to type of the select field!'"), "ПредставлениеПоляОтбора");
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

#КонецОбласти
