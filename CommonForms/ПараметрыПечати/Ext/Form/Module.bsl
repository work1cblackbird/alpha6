// Модуль общей формы "Настройка параметров печати"
#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Если настройка параметров печати вызвана из формы списка получим объект по ссылке.
	Если Параметры.Свойство("Ссылка") И ЗначениеЗаполнено(Параметры.Ссылка) Тогда
		ТекущийОбъект = Параметры.Ссылка.ПолучитьОбъект();
		СсылкаНаОбъект = Параметры.Ссылка;
	КонецЕсли;
	
	ВидОбъекта = ОбщегоНазначения.ВидОбъектаПоСсылке(ТекущийОбъект.Ссылка);
	
	// Изменим параметры формы
	Если ВидОбъекта = "Документ" Тогда
		Заголовок = НСтр("ru = 'Параметры печати:'") + " " + ТекущийОбъект.ХозОперация;
	Иначе
		Заголовок = НСтр("ru = 'Параметры печати:'") + " " + ТекущийОбъект.Метаданные().ПредставлениеОбъекта;
	КонецЕсли;
	
	// Получение списка основного набора свойств
	НаборыСвойств = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(ТекущийОбъект);
	
	// Получение списка доступных наборов дополнительных реквизитов со свойством только для печати.
	Для Каждого ТекНабор Из НаборыСвойств Цикл
		Для каждого Строка Из ТекНабор.Набор.ДополнительныеРеквизиты Цикл
			Если Строка.Свойство.ТолькоДляПечати Тогда
				ДоступныеНаборыРеквизитовДляПечати.Добавить(Строка.Свойство);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Заполнение таблицы значений реквизитов для печати
	Для каждого Строка Из ДоступныеНаборыРеквизитовДляПечати Цикл
		
		НоваяСтрока = ТаблицаЗначенийРеквизитовДляПечати.Добавить();
		НоваяСтрока.ДополнительныйРеквизит = Строка.Значение;
		НоваяСтрока.ТипЗначения = Строка.Значение.ТипЗначения;
		НоваяСтрока.Свойство = Строка.Значение;
		
		// Проверка наличия значения дополнительного реквизита
		Если Параметры.Свойство("Ссылка") И ЗначениеЗаполнено(Параметры.Ссылка) Тогда
			Для Каждого ПроверяемыйРеквизит Из ТекущийОбъект.ДополнительныеРеквизиты Цикл
				Если ПроверяемыйРеквизит.Свойство = Строка.Значение Тогда
					НоваяСтрока.Значение = ПроверяемыйРеквизит.Значение;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ОписаниеДополнительныхРеквизитов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ОписаниеДополнительныхРеквизитов", Новый Массив);
			Для Каждого СтрокаСвойств Из ОписаниеДополнительныхРеквизитов Цикл
				Если СтрокаСвойств.Свойство = Строка.Значение Тогда
					НоваяСтрока.Значение = СтрокаСвойств.Значение;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
	КонецЦикла;
	
	// Установим режим просмотра
	Если Параметры.Свойство("Ссылка") И ЗначениеЗаполнено(Параметры.Ссылка) И ВидОбъекта = "Документ" Тогда
		ДоступностьФормыДляРедактирования = Ложь;
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ПроверкаИсторическогоПорядкаОпераций",       Ложь);
		ОбработкаСобытийДокументаСервер.ПроверитьВозможностьИзмененияОбъекта(ТекущийОбъект,ДоступностьФормыДляРедактирования,РежимЗаписиДокумента.Запись);
		ДоступПоПраву = ПравоДоступа("Изменение", СсылкаНаОбъект.Метаданные());  
		ДоступностьФормыДляРедактирования = ?(Не ДоступностьФормыДляРедактирования, Не ДоступПоПраву, ДоступностьФормыДляРедактирования);
		Элементы.ТаблицаЗначенийРеквизитов.ТолькоПросмотр = ДоступностьФормыДляРедактирования;
		ТолькоПросмотр = ДоступностьФормыДляРедактирования;
		ПолучитьСообщенияПользователю(ИСТИНА);
	Иначе
		Элементы.ТаблицаЗначенийРеквизитов.ТолькоПросмотр = ТолькоПросмотр;
		Если ВидОбъекта = "Справочник" И ТекущийОбъект.Ссылка.ЭтоГруппа Тогда
			ТаблицаЗначенийРеквизитовДляПечати.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	// В режиме веб-клиента произведем показ кнопки изменения текущего объекта
	Если ОбщегоНазначения.ЭтоВебКлиент() Тогда
		Элементы.ТаблицаЗначенийРеквизитовКнопки.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаЗначенийРеквизитов

// Обработчик события возникающего при печати при начале редактирования.
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//  НоваяСтрока - Булево - Признак редактирования новой строки.
//  Копирование - Булево - Определяет режим копирования.
//
&НаКлиенте
Процедура ТаблицаЗначенийРеквизитовДляПечатиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Элемент.ПодчиненныеЭлементы.ТаблицаЗначенийРеквизитовЗначение.ОграничениеТипа = Элемент.ТекущиеДанные.ТипЗначения;
	
КонецПроцедуры // ТаблицаЗначенийРеквизитовДляПечатиПриНачалеРедактирования()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события возникающего на клиенте при нажатии кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	МассивДополнительныхРеквизитов = ЗаписатьЗначенияРеквизитов();
	
	РезультатЗакрытия = Новый Структура();
	РезультатЗакрытия.Вставить("СсылкаНаОбъект", СсылкаНаОбъект);
	РезультатЗакрытия.Вставить("МассивДополнительныхРеквизитов", МассивДополнительныхРеквизитов);
	Закрыть(РезультатЗакрытия);
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует массив дополнительных реквизитов.
//
&НаСервере
Функция ЗаписатьЗначенияРеквизитов()
	
	МассивДополнительныхРеквизитов = Новый Массив();
	
	// Добавляем дополнительные реквизиты для печати
	Для каждого Строка Из ТаблицаЗначенийРеквизитовДляПечати Цикл
		НовыйРеквизит = Новый Структура("Свойство, Значение", Строка.Свойство, Строка.Значение);
		МассивДополнительныхРеквизитов.Добавить(НовыйРеквизит);
	КонецЦикла;
	
	Возврат МассивДополнительныхРеквизитов;
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ


