
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период = Параметры.Период;
	Организация = Параметры.Организация;
	Контрагент = Параметры.Контрагент;
	Договор = Параметры.ДоговорВзаиморасчетов;
	РасчетыСПокупателем = Параметры.РасчетыСПокупателем;
	
	
	
	// Заполнить авансы
	Если Параметры.Свойство("ЗачтенныеАвансы") Тогда
		АвансыДляДокумента.Загрузить(Параметры.ЗачтенныеАвансы.Выгрузить());
	КонецЕсли;
	
	// Дата для отбора
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ЗаполнитьОстаткамиПоАвансам();
	
	ДанныеВалютыПоДоговору = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Параметры.ДоговорВзаиморасчетов,
		"ВалютаВзаиморасчетов,ВалютаВзаиморасчетов.Наименование");
	НаименованиеВалюты = ДанныеВалютыПоДоговору.ВалютаВзаиморасчетовНаименование;
	
	СуммаКОплате = ?(
		ДанныеВалютыПоДоговору.ВалютаВзаиморасчетов = Параметры.ВалютаДокумента,
		Параметры.СуммаДокумента,
		РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
			Параметры.СуммаДокумента,
			Параметры.ВалютаДокумента,
			Параметры.КурсДокумента,
			ДанныеВалютыПоДоговору.ВалютаВзаиморасчетов,
			Период));
	
	Элементы.АвансыПоДокументуСумма.Заголовок = СтрШаблон(НСтр("ru = 'Остаток, %1'"), НаименованиеВалюты);
	Элементы.АвансыДляДокументаСумма.Заголовок = СтрШаблон(НСтр("ru = 'Остаток, %1'"), НаименованиеВалюты);
	Элементы.АвансыДляДокументаСуммаОплаты.Заголовок = СтрШаблон(НСтр("ru = 'Сумма, %1'"), НаименованиеВалюты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьОстатокКОплате();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура АвансыПоОтборуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаАванса = АвансыПоОтбору.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если СтрокаАванса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПодбора = АвансыДляДокумента.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаПодбора, СтрокаАванса);
	СтрокаПодбора.Сумма = Мин(СтрокаПодбора.СуммаОстаток, ОсталосьОплатить);
	СформироватьОстатокКОплате();
	
	// Удалим строку выше
	АвансыПоОтбору.Удалить(СтрокаАванса);
	
КонецПроцедуры

&НаКлиенте
Процедура АвансыДляДокументаПослеУдаления(Элемент)
	
	ЗаполнитьОстаткамиПоАвансам();
	СформироватьОстатокКОплате();
	
КонецПроцедуры

&НаКлиенте
Процедура АвансыДляДокументаСуммаОплатыПриИзменении(Элемент)
	
	СформироватьОстатокКОплате();
	
КонецПроцедуры

&НаКлиенте
Процедура АвансыДляДокументаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьОстаткамиПоАвансам();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПодбор(Команда)
	
	Если Не КорректноЗаполненыСуммыАвансов() Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура();
	Результат.Вставить("АдресПодобранныхАвансов", ЗачтенныеАвансы());
	Результат.Вставить("РасчетыСПокупателем", РасчетыСПокупателем);
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОстаткамиПоАвансам()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетыСКонтрагентамиОстатки.ДокументРасчетов КАК ДокументАванса,
		|	ВЫБОР
		|		КОГДА &РасчетыСПокупателем
		|			ТОГДА -1
		|		ИНАЧЕ 1
		|	КОНЕЦ * РасчетыСКонтрагентамиОстатки.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ОстаткиПоАвансам
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(
		|			&Дата,
		|			Организация = &Организация
		|				И Контрагент = &Контрагент
		|				И ДоговорВзаиморасчетов = &Договор
		|				И ТипРасчета = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)) КАК РасчетыСКонтрагентамиОстатки
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &РасчетыСПокупателем
		|				ТОГДА РасчетыСКонтрагентамиОстатки.СуммаОстаток < 0
		|			ИНАЧЕ РасчетыСКонтрагентамиОстатки.СуммаОстаток > 0
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПоАвансам.ДокументАванса КАК ДокументАванса,
		|	ОстаткиПоАвансам.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	ОстаткиПоАвансам КАК ОстаткиПоАвансам
		|ГДЕ
		|	НЕ ОстаткиПоАвансам.ДокументАванса В (&ВыбранныеАвансы)";
	
	Запрос.УстановитьПараметр("Дата", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("РасчетыСПокупателем", РасчетыСПокупателем);
	Запрос.УстановитьПараметр("ВыбранныеАвансы", АвансыДляДокумента.Выгрузить().ВыгрузитьКолонку("ДокументАванса"));
	
	АвансыПоОтбору.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Функция ЗачтенныеАвансы()
	
	Возврат ПоместитьВоВременноеХранилище(АвансыДляДокумента.Выгрузить());
	
КонецФункции

&НаКлиенте
Процедура СформироватьОстатокКОплате()
	
	Оплата = АвансыДляДокумента.Итог("Сумма");
	ОсталосьОплатить = СуммаКОплате - Оплата;
	
КонецПроцедуры

&НаКлиенте
Функция КорректноЗаполненыСуммыАвансов()
	
	КорректноЗаполнено = Истина;
	НомерСтроки = 1;
	Для Каждого СтрокаАванса Из АвансыДляДокумента Цикл
		
		Если СтрокаАванса.СуммаОстаток < СтрокаАванса.Сумма Тогда
			
			КорректноЗаполнено = Ложь;
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"АвансыДляДокумента",
				НомерСтроки,
				"Сумма");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(НСтр("ru = '""%1"". Указана сумма списания %2 %3 больше остатка по документу аванса %4 %3.'"),
					СтрокаАванса.ДокументАванса,
					Формат(СтрокаАванса.Сумма, "ЧДЦ=2"),
					НаименованиеВалюты,
					Формат(СтрокаАванса.СуммаОстаток, "ЧДЦ=2")),,
				Поле);
			
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	Если АвансыДляДокумента.Итог("Сумма") - СуммаКОплате > 0 Тогда
		
		КорректноЗаполнено = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Сумма зачета аванса больше суммы документа.'"));
		
	КонецЕсли;
	
	Возврат КорректноЗаполнено;
	
КонецФункции

#КонецОбласти
