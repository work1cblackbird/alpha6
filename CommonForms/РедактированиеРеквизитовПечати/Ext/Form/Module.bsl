
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьОсновныеПараметры(Параметры);
	НастроитьФорму(Параметры);
	ЗаполнитьВозможныеАдресаДоставки();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	
	ГрузополучательПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоПеревозкаАвтотранспортомПриИзменении(Элемент)
	
	Элементы.ГруппаАвтотранспорт.ТолькоПросмотр = Не ЭтоПеревозкаАвтотранспортом;
	
	Если Не ЭтоПеревозкаАвтотранспортом Тогда
		
		СброситьРеквизитыАвтомобиля();
		СброситьРеквизитыПрицепа();
		
		Элементы.ГруппаАвтотранспортПрицеп.ТолькоПросмотр = Не ЕстьПрицеп;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьПрицепПриИзменении(Элемент)
	
	Если Не ЕстьПрицеп Тогда
		
		СброситьРеквизитыПрицепа();
		
	КонецЕсли;
	
	Элементы.ГруппаАвтотранспортПрицеп.ТолькоПросмотр = Не ЕстьПрицеп;
	
КонецПроцедуры

&НаКлиенте
Процедура ВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФорму(
		"Справочник.Сотрудники.ФормаВыбора",
		Новый Структура("РежимВыбора", Истина),
		Элемент,
		КлючУникальности,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ВодительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПолученияДанных.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.Сотрудники"), ПараметрыПолученияДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерВодительскогоУдостоверенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("РежимВыбора,Отбор", Истина, ОтборВодительскогоУдостоверения());
	
	ОткрытьФорму(
		"Справочник.ПодтверждающиеДокументы.ФормаВыбора",
		ПараметрыФормы,
		Элемент,
		КлючУникальности,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерВодительскогоУдостоверенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		ДанныеВыбранногоУдостоверения = ДанныеВыбранногоУдостоверения(ВыбранноеЗначение);
		ВыбранноеЗначение = ДанныеВыбранногоУдостоверения.Номер;
		Водитель = ДанныеВыбранногоУдостоверения.Владелец;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерВодительскогоУдостоверенияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПолученияДанных.Отбор = ОтборВодительскогоУдостоверения();
	ПараметрыПолученияДанных.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	ПараметрыПолученияДанных.СпособПоискаСтроки = СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть;
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ПодтверждающиеДокументы"), ПараметрыПолученияДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура МодельАвтомобиляНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФорму(
		"Справочник.Модели.ФормаВыбора",
		Новый Структура("РежимВыбора", Истина),
		Элемент,
		КлючУникальности,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура МодельАвтомобиляАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПолученияДанных.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.Модели"), ПараметрыПолученияДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ГосНомерАвтомобиляНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФорму(
		"Справочник.Автомобили.ФормаВыбора",
		Новый Структура("РежимВыбора", Истина),
		Элемент,
		КлючУникальности,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ГосНомерАвтомобиляОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		ДанныеВыбранногоАвтомобиля = ДанныеВыбранногоАвтомобиля(ВыбранноеЗначение);
		ВыбранноеЗначение = ДанныеВыбранногоАвтомобиля.ГосНомер;
		МодельАвтомобиля = ДанныеВыбранногоАвтомобиля.Модель;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГосНомерАвтомобиляАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПолученияДанных.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	ПараметрыПолученияДанных.СпособПоискаСтроки = СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть;
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.Автомобили"), ПараметрыПолученияДанных);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	Если ЭтоПеревозкаАвтотранспортом И (НЕ ЗначениеЗаполнено(МодельАвтомобиля) ИЛИ НЕ ЗначениеЗаполнено(ГосНомерАвтомобиля)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Модель и гос. номер автомобиля должны быть заполнены");
		Возврат;
	КонецЕсли;
		
	Если ЕстьПрицеп И (НЕ ЗначениеЗаполнено(МодельПрицепа) ИЛИ НЕ ЗначениеЗаполнено(ГосНомерПрицепа)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Модель и гос. номер прицепа должны быть заполнены");
		Возврат;
	КонецЕсли;
	
	РеквизитовДоставки = УправлениеПечатьюКлиентАльфаАвто.ПолучитьПустуюСтруктуруРеквизитовДоставки();
	
	ЗаполнитьЗначенияСвойств(РеквизитовДоставки, ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект.ВладелецФормы.Объект, РеквизитовДоставки);
	
	ЭтотОбъект.ВладелецФормы.Модифицированность = Истина;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОсновныеПараметры(ВходныеПараметры)
	
	ВходныеПараметры.Свойство("АдресДоставки", АдресДоставки);
	ВходныеПараметры.Свойство("Водитель", Водитель);
	ВходныеПараметры.Свойство("ГосНомерАвтомобиля", ГосНомерАвтомобиля);
	ВходныеПараметры.Свойство("ГосНомерПрицепа", ГосНомерПрицепа);
	ВходныеПараметры.Свойство("Грузоотправитель", Грузоотправитель);
	ВходныеПараметры.Свойство("Грузополучатель", Грузополучатель);
	ВходныеПараметры.Свойство("ЕстьПрицеп", ЕстьПрицеп);
	ВходныеПараметры.Свойство("МодельАвтомобиля", МодельАвтомобиля);
	ВходныеПараметры.Свойство("МодельПрицепа", МодельПрицепа);
	ВходныеПараметры.Свойство("ОписаниеГруза", ОписаниеГруза);
	ВходныеПараметры.Свойство("Перевозчик", Перевозчик);
	ВходныеПараметры.Свойство("ЭтоПеревозкаАвтотранспортом", ЭтоПеревозкаАвтотранспортом);
	ВходныеПараметры.Свойство("НомерВодительскогоУдостоверения", НомерВодительскогоУдостоверения);
	ВходныеПараметры.Свойство("Руководитель", Руководитель);
	ВходныеПараметры.Свойство("ГлавныйБухгалтер", ГлавныйБухгалтер);
	ВходныеПараметры.Свойство("Отпустил", Отпустил);
    ВходныеПараметры.Свойство("Получил", Получил);  
	ВходныеПараметры.Свойство("Принял", Принял);
	ВходныеПараметры.Свойство("Организация", Организация); 
	ВходныеПараметры.Свойство("ПодразделениеКомпании", ПодразделениеКомпании); 
	ВходныеПараметры.Свойство("Контрагент", Контрагент);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму(ВходныеПараметры)
	
	МетаданныеВладельца = Метаданные.НайтиПоПолномуИмени(ВходныеПараметры.ИмяВладельца);
	Доступность     	= ПравоДоступа("Изменение", МетаданныеВладельца);
	
	ОграничитьТипГрузоотправителя(МетаданныеВладельца);
	ОграничитьТипГрузополучателя(МетаданныеВладельца); 
	
	Элементы.ПервыйОтступ.Видимость = Элементы.Грузоотправитель.Видимость Или Элементы.Грузополучатель.Видимость;
    
	Элементы.ГруппаАвтотранспорт.ТолькоПросмотр = Не ЭтоПеревозкаАвтотранспортом;
	Элементы.ГруппаАвтотранспортПрицеп.ТолькоПросмотр = Не ЕстьПрицеп; 
	
	Если МетаданныеВладельца.Реквизиты.Найти("Принял")=Неопределено Тогда
		Элементы.Принял.Видимость = Ложь;
	КонецЕсли;
	
	Если МетаданныеВладельца.Реквизиты.Найти("Отпустил")=Неопределено Тогда
		Элементы.Отпустил.Видимость = Ложь;
	КонецЕсли; 
	
    Если МетаданныеВладельца.Реквизиты.Найти("Получил")=Неопределено Тогда
		Элементы.Получил.Видимость = Ложь;
	КонецЕсли; 

	ДокументыПоступления = Новый Массив();
	ДокументыПоступления.Добавить("ПоступлениеТоваров");
	ДокументыПоступления.Добавить("ПоступлениеАвтомобилей");
	ДокументыПоступления.Добавить("ПоступлениеДопРасходов");
	ДокументыПоступления.Добавить("СчетФактураПолученный"); 
	ДокументыПоступления.Добавить("КорректировкаПоступления");
	ДокументыПоступления.Добавить("КорректировкаПоступленияАвтомобилей");

	ДокументыРеализации = Новый Массив();
	ДокументыРеализации.Добавить("СчетФактураВыданный"); 
	ДокументыРеализации.Добавить("РеализацияТоваров");
	ДокументыРеализации.Добавить("РеализацияАвтомобилей");
	ДокументыРеализации.Добавить("РеализацияАктивов");
	ДокументыРеализации.Добавить("КорректировкаРеализации");
	ДокументыРеализации.Добавить("КорректировкаРеализацииАвтомобилей");
	ДокументыРеализации.Добавить("АктРазногласий");
	ДокументыРеализации.Добавить("ВозвратПоставщику"); 
	ДокументыРеализации.Добавить("ВозвратПоставщикуАвтомобилей");
	ДокументыРеализации.Добавить("ЗаказНаряд");
	ДокументыРеализации.Добавить("Чек");
	ДокументыРеализации.Добавить("ОтчетКомиссионера");
	ДокументыРеализации.Добавить("ОтчетКомиссионераЗаАвтомобили");

	ДокументыПеремещения = Новый Массив();
	ДокументыПеремещения.Добавить("ИзвлечениеТоваровИзПроизводства");
	ДокументыПеремещения.Добавить("ПеремещениеТоваровВПроизводство");
	ДокументыПеремещения.Добавить("ПеремещениеТоваров");
	ДокументыПеремещения.Добавить("ПеремещениеАвтомобилей");
	ДокументыПеремещения.Добавить("ПеремещениеНезавершенногоПроизводства");
	
	ПараметрыВыбораОрганизация = Новый Массив; 	
	ПараметрыВыбораОрганизация.Добавить(
		Новый ПараметрВыбора("Отбор.Организация", ВходныеПараметры.Организация)
	); 
	ПараметрыВыбораОрганизация.Добавить(
		Новый ПараметрВыбора("Отбор.ВидПодписанта", Перечисления.ВидыПодписантов.ПодписантОтОрганизации)
	); 
	
	ПараметрыВыбораПодразделение = Новый Массив();
	ПараметрыВыбораПодразделение.Добавить(
		Новый ПараметрВыбора("Отбор.Организация", ВходныеПараметры.Организация)
	); 
	ПараметрыВыбораПодразделение.Добавить(
		Новый ПараметрВыбора("Отбор.ПодразделениеКомпании", ВходныеПараметры.ПодразделениеКомпании)
	); 
	ПараметрыВыбораПодразделение.Добавить(
		Новый ПараметрВыбора("Отбор.ВидПодписанта", Перечисления.ВидыПодписантов.ПодписантОтОрганизации)
	); 
	
	ПараметрыВыбораКонтрагент = Новый Массив; 
	ПараметрыВыбораКонтрагент.Добавить(
		Новый ПараметрВыбора("Отбор.Контрагент", ВходныеПараметры.Контрагент)
	); 	
	ПараметрыВыбораКонтрагент.Добавить(
		Новый ПараметрВыбора("Отбор.ВидПодписанта", Перечисления.ВидыПодписантов.ПодписантОтКонтрагента)
	);
	
	Если ДокументыПоступления.Найти(МетаданныеВладельца.Имя)<> Неопределено Тогда
		
		Элементы.ГруппаОрганизация.Заголовок = "Контрагент";
		Элементы.ГруппаКонтрагент.Заголовок = "Организация";
		Элементы.ГруппаСведенияОПеревозчике.Видимость = Ложь;
		
		Элементы.Получил.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораОрганизация);
		Элементы.Принял.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораОрганизация);
			
		Элементы.Руководитель.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораКонтрагент);
		Элементы.ГлавныйБухгалтер.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораКонтрагент);
		Элементы.Отпустил.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораКонтрагент); 
			
	ИначеЕсли ДокументыРеализации.Найти(МетаданныеВладельца.Имя) <> Неопределено Тогда
					
		Элементы.ГруппаСведенияОПеревозчике.Видимость = 
			МетаданныеВладельца.Имя = "РеализацияТоваров"  Или  МетаданныеВладельца.Имя = "РеализацияАвтомобилей"
		; 
				
		Элементы.Руководитель.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораОрганизация);
		Элементы.ГлавныйБухгалтер.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораОрганизация);
		Элементы.Отпустил.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПодразделение); 
					
		Элементы.Получил.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораКонтрагент);
		Элементы.Принял.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораКонтрагент);  
		
		
	ИначеЕсли ДокументыПеремещения.Найти(МетаданныеВладельца.Имя)<> Неопределено Тогда
		
		Элементы.ГруппаОрганизация.Видимость = Ложь;
		Элементы.ГруппаКонтрагент.Видимость = Ложь;
		Элементы.Отступ.Видимость = Ложь; 
			
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОграничитьТипГрузоотправителя(МетаданныеВладельца)
	
	ОписаниеРеквизита = МетаданныеВладельца.Реквизиты.Найти("Грузоотправитель");
	
	Если ОписаниеРеквизита = Неопределено Тогда
		
		Элементы.Грузоотправитель.Видимость = Ложь;
		Возврат;
		
	КонецЕсли;
	
	Элементы.Грузоотправитель.ОграничениеТипа = ОписаниеРеквизита.Тип;
	
КонецПроцедуры

&НаСервере
Процедура ОграничитьТипГрузополучателя(МетаданныеВладельца)
	
	ОписаниеРеквизита = МетаданныеВладельца.Реквизиты.Найти("Грузополучатель");
	
	Если ОписаниеРеквизита = Неопределено Тогда
		
		Элементы.Грузополучатель.Видимость = Ложь;
		Возврат;
		
	КонецЕсли;
	
	Элементы.Грузополучатель.ОграничениеТипа = ОписаниеРеквизита.Тип;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВозможныеАдресаДоставки()
	
	Элементы.АдресДоставки.СписокВыбора.Очистить();
	
	Если Не ЗначениеЗаполнено(Грузополучатель) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	АдресаДоставки = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Грузополучатель,
		Перечисления.ТипыКонтактнойИнформации.Адрес,
		ТекущаяДатаСеанса(),
		Ложь
	);
	
	Для Каждого Адрес Из АдресаДоставки Цикл
		
		Элементы.АдресДоставки.СписокВыбора.Добавить(Адрес.Представление);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьРеквизитыАвтомобиля()
	
	МодельАвтомобиля   = "";
	ГосНомерАвтомобиля = "";
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьРеквизитыПрицепа()
	
	ЕстьПрицеп      = Ложь;
	МодельПрицепа   = "";
	ГосНомерПрицепа = "";
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтборВодительскогоУдостоверения()
	
	Результат = Новый Структура("ВидПодтверждающегоДокумента", Перечисления.ВидыДокументов.ВодительскоеУдостоверение);
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныеВыбранногоУдостоверения(Удостоверение)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Удостоверение, "Номер,Владелец");
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныеВыбранногоАвтомобиля(Автомобиль)
	
	Возврат АвтомобилиСервер.ДанныеАвтомобиля(Автомобиль);
	
КонецФункции

&НаСервере
Процедура ГрузополучательПриИзмененииНаСервере()
	
	ЗаполнитьВозможныеАдресаДоставки();
	
КонецПроцедуры

#КонецОбласти

