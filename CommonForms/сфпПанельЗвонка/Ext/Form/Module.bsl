
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЦветФонаГиперссылки = Новый Цвет(163, 173, 187);
	ЦветФонаВыбраннойГиперссылки = ЦветаСтиля["CRM_ОсновнойГолубой"];
	ЦветТекстаКнопки = WebЦвета.Белый;

	МассивДействийЗвонка = сфпСофтФонПроСерверПереопределяемый.сфпПолучитьМассивДоступныхДействий();
	
	Для Каждого ТекДействие Из МассивДействийЗвонка Цикл
		Если ПустаяСтрока(ТекДействие.Действие) ИЛИ ТекДействие.Действие = "сфпОткрытьПанельЗвонка" Тогда
			Продолжить;
		КонецЕсли;
		
		ДействияПоЗвонку.Добавить(ТекДействие.Действие, ТекДействие.Наименование);
	КонецЦикла;
	
	ТекущийПользователь = сфпСофтФонПроСервер.сфпТекущийПользователь();
	
	ИспользуетсяОблачнаяАТС = Константы.сфпИспользоватьОблачнуюТелефонию.Получить();
	
	Если Параметры.Свойство("ИдентификаторЗвонка") Тогда
		ИдентификаторЗвонка = Параметры.ИдентификаторЗвонка;
		ТекущийЗвонокКонтакт = Параметры.Контакт;
		Если ЗначениеЗаполнено(Параметры.Контакт) Тогда
			ИмяМетаданных = сфпСофтФонПроСервер.сфпПолучитьИмяМетаданных(Параметры.Контакт);
			Если ИмяМетаданных = "КонтактныеЛицаПартнеров" Тогда
				ТекущийЗвонокВладелецКонтакта = Параметры.Контакт.Владелец;
			КонецЕсли;
		КонецЕсли;
		ТекущийЗвонокНомерАбонента = Параметры.НомерТелефона;
		
		Элементы.ДекорацияВходящий.Видимость = Параметры.Входящий;
		Элементы.ДекорацияИсходящий.Видимость = НЕ Параметры.Входящий;
		
	Иначе
		Если ИспользуетсяОблачнаяАТС Тогда
			Запрос = Новый Запрос("
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	АбонентКонтакт,
			|	АбонентКонтакт.Владелец КАК ВладелецКонтакта,
			|	НомерТелефона,
			|	ИдентификаторЗвонка,
			|	Входящий
			|ИЗ
			|	РегистрСведений.сфпТекущиеЗвонки
			|ГДЕ
			|	Пользователь = &Пользователь
			|УПОРЯДОЧИТЬ ПО
			|	ДатаЗвонка УБЫВ");
			Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);

			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ИдентификаторЗвонка = Выборка.ИдентификаторЗвонка;
				ТекущийЗвонокКонтакт = Выборка.АбонентКонтакт;
				ТекущийЗвонокВладелецКонтакта = Выборка.ВладелецКонтакта;
				ТекущийЗвонокНомерАбонента = Выборка.НомерТелефона;
				
				Элементы.ДекорацияВходящий.Видимость = Выборка.Входящий;
				Элементы.ДекорацияИсходящий.Видимость = НЕ Выборка.Входящий;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийЗвонокКонтакт) Тогда
		ДанныеКонтакта = сфпСофтФонПроСервер.ПолучитьДанныеПредставленияКонтакта(ТекущийЗвонокКонтакт, УникальныйИдентификатор);
		Если ЗначениеЗаполнено(ДанныеКонтакта.Аватар) Тогда
			ТекущийЗвонокАватарКонтакта = ДанныеКонтакта.Аватар;
			Элементы.ТекущийЗвонокПустойАватар.Видимость = Ложь;
			Элементы.ТекущийЗвонокАватарКонтакта.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;	
		
	Элементы.ТекущийЗвонокДлительность.Видимость = Ложь;
	
	Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		Элементы.ВыбратьДействиеНет.Видимость = Ложь;
		Элементы.ВыбратьДействиеДа.Видимость = Истина;
	КонецЕсли;

	сфпСофтФонПроСервер.ОбновитьКонтактыПанелиЗвонка(ЭтаФорма);
	
	ТекущийФильтрЗвонков = "Все";
	
	ЗаголовокСтатуса = "Нет линии";
	
	Если ИспользуетсяОблачнаяАТС Тогда
		ДанныеПользователя = сфпЛицензированиеСервер.ДанныеПользователяАТС(ТекущийПользователь);
		ВнутреннийНомер = ДанныеПользователя.ВнутреннийНомер;
		
	Иначе
		ВнутреннийНомер = сфпСофтФонПроСервер.сфпТекущийВнутреннийНомер(ТекущийПользователь);
	КонецЕсли;
	Если ЗначениеЗаполнено(ВнутреннийНомер) Тогда
		ЗаголовокСтатуса = "Линия " + ВнутреннийНомер;
	КонецЕсли;
	ЭтаФорма.Заголовок = "" + ТекущийПользователь + " (" + ЗаголовокСтатуса + ")";

	ДоступностьКомандAPI = сфпСофтФонПроСервер.ПолучитьДоступностьКомандAPI();
	ДоступностьКомандAPI_Ответ = ДоступностьКомандAPI.Ответ;
	ДоступностьКомандAPI_Завершить = ДоступностьКомандAPI.Завершить;
	ДоступностьКомандAPI_Пауза = ДоступностьКомандAPI.Пауза;
	ДоступностьКомандAPI_Перевод = ДоступностьКомандAPI.Перевод;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВладельцаКонтакта(Контакт)
	
	Если ЗначениеЗаполнено(Контакт) Тогда
		ИмяМетаданных = сфпСофтФонПроСервер.сфпПолучитьИмяМетаданных(Контакт);
		Если ИмяМетаданных = "КонтактныеЛицаПартнеров" Тогда
			Возврат Контакт.Владелец;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ИспользуетсяОблачнаяАТС Тогда
		Для Каждого ТекСтруктура Из сфпСтруктураЗвонков Цикл
			СтруктураЗвонка = ТекСтруктура.Значение;
			
			ИдентификаторЗвонка = СтруктураЗвонка.hCall;
			ТекущийЗвонокКонтакт = СтруктураЗвонка.Контакт;
			ТекущийЗвонокВладелецКонтакта = ПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			ТекущийЗвонокНомерАбонента = СтруктураЗвонка.НомерТелефона;

			Элементы.ДекорацияВходящий.Видимость = СтруктураЗвонка.ВходящийЗвонок;
			Элементы.ДекорацияИсходящий.Видимость = НЕ СтруктураЗвонка.ВходящийЗвонок;
			
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
	ТекущийЗвонокПредставлениеКонтакта = ?(ЗначениеЗаполнено(ТекущийЗвонокКонтакт), ТекущийЗвонокКонтакт, НСтр("ru='Неизвестный абонент';en='Unknown subscriber'"));
	
	УстановитьОтборыТелефонныхЗвонков();
	сфпСофтФонПроКлиент.УстановитьДоступностьКомандПанелиЗвонка(ЭтаФорма);

	ТекГруппировка = АбонентыТелефонныхКниг.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ТекГруппировка.Использование = Истина;
	ТекГруппировка.Поле = Новый ПолеКомпоновкиДанных("ТелефоннаяКнига");

	УстановитьОтображениеГруппыЕще("Контакты");

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ЗакрыватьФорму = Ложь;
	
	Если ИмяСобытия = "сфпКонецРазговора" Тогда
		Если Параметр.ИдентификаторЗвонка = ЭтаФорма.ИдентификаторЗвонка ИЛИ ПустаяСтрока(ЭтаФорма.ИдентификаторЗвонка) Тогда
			ЗакрыватьФорму = Истина;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "СофтФон_КонецРазговора" И Параметр.Свойство("ИдентификаторЗвонка") Тогда
		Если Параметр.ИдентификаторЗвонка = ЭтаФорма.ИдентификаторЗвонка ИЛИ ПустаяСтрока(ЭтаФорма.ИдентификаторЗвонка) Тогда
			ЗакрыватьФорму = Истина;
		КонецЕсли;
	КонецЕсли;
	
	сфпСофтФонПроКлиент.ОбработкаОповещенияПанелиЗвонка(ЭтаФорма, ИмяСобытия, Параметр, Источник, ИспользуетсяОблачнаяАТС);
	
	Если ЗакрыватьФорму Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомеронабирательУдалитьНажатие(Элемент)
	НабранныйНомер = Лев(НабранныйНомер, СтрДлина(НабранныйНомер) - 1);
КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		НастроитьОтображениеКонтактов("Развернуть", ВыбраннаяСтрока.Ключ);
		
	ИначеЕсли НЕ ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		ПоднятьТрубку();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПриАктивизации()
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		ДоступенНаборНомераДокумента = Ложь;
		
		ТекДанные = Элементы.АбонентыТелефонныхКниг.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			Если НЕ ТекДанные.Свойство("ГруппировкаСтроки") И ЗначениеЗаполнено(ТекДанные.НомерТелефона) Тогда
				ТекущийЗвонокНомерАбонента = ТекДанные.НомерТелефона;
				ДоступенНаборНомераДокумента = ЗначениеЗаполнено(ТекДанные.НомерТелефона);
				ТекущийЗвонокПредставлениеКонтакта = ТекДанные.Контакт;
				ТекущийЗвонокВладелецКонтакта = ТекДанные.Владелец;
				ТекущийЭлементДанныхКонтакта = Элементы.АбонентыТелефонныхКниг.Имя;

			Иначе
				ТекущийЗвонокНомерАбонента = "";
				ТекущийЗвонокПредставлениеКонтакта = "";
				ТекущийЗвонокВладелецКонтакта = "";
				ТекущийЭлементДанныхКонтакта = "";
			КонецЕсли;	
		КонецЕсли;
		
		сфпСофтФонПроКлиент.УстановитьДоступностьКомандПанелиЗвонка(ЭтаФорма, ТекДанные <> Неопределено);
		
		Если ТекДанные = Неопределено И Элементы.ТелефонныеЗвонки.ТекущиеДанные <> Неопределено Тогда
			//ТелефонныеЗвонкиПриАктивизации();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПриАктивизацииСтроки(Элемент)
	АбонентыТелефонныхКнигПриАктивизации();
КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПриАктивизацииПоля(Элемент)
	АбонентыТелефонныхКнигПриАктивизации();
КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПриАктивизацииЯчейки(Элемент)
	АбонентыТелефонныхКнигПриАктивизации();
КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПередРазворачиванием(Элемент, Строка, Отказ)
	
	Отказ = Истина;
	НастроитьОтображениеКонтактов("Развернуть", Строка.Ключ);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область УправлениеТекущимЗвонком

&НаКлиенте
Процедура ПоднятьТрубку(Команда = Неопределено, ВыбранныйНомерКонтакта = Неопределено)
	
	СтруктураЗвонка = Новый Структура("НомераТелефонов,АбонентКонтакт,ДанныеЗаполнения,ИдентификаторЗвонка", Новый СписокЗначений());
	
	Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		Если НЕ ИспользуетсяОблачнаяАТС Тогда
			сфпПанельУправления.AnswerCall(ТекущийЗвонокНомерЛинии, ИдентификаторЗвонка);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НабранныйНомер) Тогда
			СтруктураЗвонка.НомераТелефонов.Добавить(НабранныйНомер);
			НабранныйНомер = "";
		КонецЕсли;
	
	Иначе
		Если ЗначениеЗаполнено(НабранныйНомер) Тогда
			СтруктураЗвонка.НомераТелефонов.Добавить(НабранныйНомер);
			НабранныйНомер = "";

		ИначеЕсли ТекущийЭлементДанныхКонтакта = "ТелефонныеЗвонки" Тогда
			ТекДанные = Элементы.ТелефонныеЗвонки.ТекущиеДанные;
			Если ТекДанные <> Неопределено Тогда
				Если ЗначениеЗаполнено(ТекДанные.АбонентКакСвязаться) Тогда
					СтруктураЗвонка.НомераТелефонов.Добавить(ТекДанные.АбонентКакСвязаться);
					СтруктураЗвонка.АбонентКонтакт = ТекДанные.АбонентКонтакт;
					СтруктураЗвонка.ДанныеЗаполнения = Новый Структура("ВзаимодействиеОснование", ТекДанные.Ссылка);
				КонецЕсли;	
			КонецЕсли;
			
		ИначеЕсли ТекущийЭлементДанныхКонтакта = "АбонентыТелефонныхКниг" Тогда
			ТекДанные = Элементы.АбонентыТелефонныхКниг.ТекущиеДанные;
			Если ТекДанные <> Неопределено Тогда
				Если ЗначениеЗаполнено(ТекДанные.Контакт) Тогда
					СтруктураЗвонка.АбонентКонтакт = ТекДанные.Контакт;
					
				ИначеЕсли ЗначениеЗаполнено(ТекДанные.ИдентификаторАТС) Тогда
					СтруктураЗвонка.АбонентКонтакт = ТекДанные.ИдентификаторАТС;	
				КонецЕсли;
					
				Если ЗначениеЗаполнено(ВыбранныйНомерКонтакта) Тогда
					СтруктураЗвонка.НомераТелефонов.Добавить(ВыбранныйНомерКонтакта);
					
				ИначеЕсли ЗначениеЗаполнено(ТекДанные.Контакт) Тогда
					ТелефоныКонтакта = сфпСофтФонПроСервер.сфпПолучитьМассивТелефоновИФаксов(ТекДанные.Контакт);
					Для Каждого Телефон Из ТелефоныКонтакта Цикл
						СтруктураЗвонка.НомераТелефонов.Добавить(Телефон.Представление, СокрЛП(Телефон.Вид) + ": " + Телефон.Представление);
					КонецЦикла;
					
				Иначе
					Если ТекущаяЯчейкаДанныхКонтакта = "АбонентыТелефонныхКнигНомерТелефона" Тогда
						Если ЗначениеЗаполнено(ТекДанные.НомерТелефона) Тогда
							СтруктураЗвонка.НомераТелефонов.Добавить(ТекДанные.НомерТелефона);
						КонецЕсли;	
						
					ИначеЕсли ТекущаяЯчейкаДанныхКонтакта = "АбонентыТелефонныхКнигВнутреннийНомер" Тогда
						Если ЗначениеЗаполнено(ТекДанные.ВнутреннийНомер) Тогда
							СтруктураЗвонка.НомераТелефонов.Добавить(ТекДанные.ВнутреннийНомер);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураЗвонка.НомераТелефонов.Количество() > 0 Тогда
		Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.АбонентКонтакт) Тогда
			ГолыйНомерТелефона = сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(СтруктураЗвонка.НомераТелефонов[0].Значение);
			МассивЗвонящих = сфпСофтФонПроСервер.сфпНайтиОбъектВРегистреПоТелефону(ГолыйНомерТелефона);
			Если МассивЗвонящих.Количество() > 0 Тогда
				СтруктураЗвонка.АбонентКонтакт = МассивЗвонящих[0];
			КонецЕсли;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
			Если ИспользуетсяОблачнаяАТС Тогда
				Если ТекущийЗвонокДлительность = '00010101' Тогда
					РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ПереводНеотвеченногоЗвонка", ИдентификаторЗвонка, СтруктураЗвонка.НомерТелефона, ВнутреннийНомер, Истина);
					
				Иначе
					РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ПереводОтвеченногоЗвонка", ИдентификаторЗвонка, СтруктураЗвонка.НомерТелефона, ВнутреннийНомер, Истина);
				КонецЕсли;
			КонецЕсли;
		
		Иначе	
			Если СтруктураЗвонка.НомераТелефонов.Количество() > 0 Тогда
				Если СтруктураЗвонка.НомераТелефонов.Количество() > 1 Тогда
					Оповещение = Новый ОписаниеОповещения("ПриВыбореНомера", ЭтаФорма, СтруктураЗвонка);
					ПоказатьВыборИзМеню(Оповещение, СтруктураЗвонка.НомераТелефонов);
					
				Иначе
					ПриВыбореНомера(СтруктураЗвонка.НомераТелефонов[0], СтруктураЗвонка);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореНомера(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("НомерТелефона", ВыбранныйЭлемент.Значение);
		Если сфпСофтФонПроКлиент.сфпПозвонить(ВыбранныйЭлемент.Значение, ДополнительныеПараметры.АбонентКонтакт, ДополнительныеПараметры.ДанныеЗаполнения) Тогда
			//ОбработкаОповещенияПанелиЗвонка(ЭтаФорма, "сфпНовыйИсходящийЗвонок", ДополнительныеПараметры, ЭтаФорма);

		Иначе
		    Элементы.ТекущийЗвонокНомерАбонента.Заголовок = "";
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ПоложитьТрубку(Команда)
	
	Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		Если ИспользуетсяОблачнаяАТС Тогда
			сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ЗавершениеВызова", ИдентификаторЗвонка);

		Иначе	
			Если ИдентификаторПереводимогоЗвонка = "" Тогда
				// Завершаем звонок
				сфпПанельУправления.DropCall(ТекущийЗвонокНомерЛинии, ИдентификаторЗвонка);

			Иначе
				// Отменяем перевод звонка
				сфпПанельУправления.CancelTransferCall(ТекущийЗвонокНомерЛинии, ИдентификаторПереводимогоЗвонка, "");
			КонецЕсли;	
			
			ИдентификаторПереводимогоЗвонка = "";
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПереключитьЗвонок(Команда)
	
	Если НЕ Элементы.ГруппаЕщё.Видимость Тогда
		ДекорацияПокаатьЕщёНажатие();		
	КонецЕсли;
	
	ПоказатьНомеронабиратель();
	ЭтаФорма.ТекущийЭлемент = Элементы.НабранныйНомер;

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура НомеронабирательНажатие(Команда)
	
	ИмяЭлемента = СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "Номеронабиратель", "");
	Если ИмяЭлемента = "Символ1" Тогда
		ВведенноеЗначение = "*";

	ИначеЕсли ИмяЭлемента = "Символ2" Тогда
		ВведенноеЗначение = "#";

	Иначе
		ВведенноеЗначение = Число(ИмяЭлемента);
	КонецЕсли;	
	
	НабранныйНомер = НабранныйНомер + ВведенноеЗначение;
	
	Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		Элементы.ДекорацияПодтвердитьПеревод.Видимость = Истина;
		Элементы.ДекорацияНомеронабирательНабрать.Видимость = Истина;
		
	Иначе
		ТекущийЗвонокНомерАбонента = НабранныйНомер;
	КонецЕсли;
	
	Элементы.ДекорацияОтветНет.Видимость = Ложь;
	Элементы.ДекорацияОтветДа.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтображениеГруппыЕще(Группа)

	Элементы.ПоказатьКонтакты.ЦветФона = ?(Группа = "Контакты", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ПоказатьЖурнал.ЦветФона = ?(Группа = "Журнал", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ПоказатьНомеронабиратель.ЦветФона = ?(Группа = "Номеронабиратель", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ПоказатьНомеронабиратель.Картинка = ?(Группа = "Номеронабиратель", БиблиотекаКартинок.сфпПанельЗвонка_НомеронабирательДа, БиблиотекаКартинок.сфпПанельЗвонка_НомеронабирательНет);
	
	Элементы.СтраницыЕще.ТекущаяСтраница = Элементы["Страница" + Группа];

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтакты(Команда)
	УстановитьОтображениеГруппыЕще("Контакты");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЖурнал(Команда)
	УстановитьОтображениеГруппыЕще("Журнал");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНомеронабиратель(Команда = Неопределено)
	УстановитьОтображениеГруппыЕще("Номеронабиратель");
КонецПроцедуры

&НаКлиенте
Процедура ФильтрЗвонковПоВиду(Фильтр)
	
	ТекущийФильтрЗвонков = Фильтр;
	
	Элементы.ФильтрПринятые.ЦветФона = ?(ТекущийФильтрЗвонков = "Принятые", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ФильтрПринятые.ЦветТекста = ?(ТекущийФильтрЗвонков = "Принятые", ЦветТекстаКнопки, ЦветТекстаКнопки);
	
	Элементы.ФильтрНепринятые.ЦветФона = ?(ТекущийФильтрЗвонков = "Непринятые", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ФильтрНепринятые.ЦветТекста = ?(ТекущийФильтрЗвонков = "Непринятые", ЦветТекстаКнопки, ЦветТекстаКнопки);
	
	Элементы.ФильтрНабранные.ЦветФона = ?(ТекущийФильтрЗвонков = "Набранные", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ФильтрНабранные.ЦветТекста = ?(ТекущийФильтрЗвонков = "Набранные", ЦветТекстаКнопки, ЦветТекстаКнопки);
	
	Элементы.ФильтрВсе.ЦветФона = ?(ТекущийФильтрЗвонков = "Все", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ФильтрВсе.ЦветТекста = ?(ТекущийФильтрЗвонков = "Все", ЦветТекстаКнопки, ЦветТекстаКнопки);

	УстановитьОтборыТелефонныхЗвонков();

КонецПроцедуры

&НаКлиенте
Процедура ФильтрПринятые(Команда)
	ФильтрЗвонковПоВиду("Принятые");
КонецПроцедуры

&НаКлиенте
Процедура ФильтрНепринятые(Команда)
	ФильтрЗвонковПоВиду("Непринятые");
КонецПроцедуры

&НаКлиенте
Процедура ФильтрНабранные(Команда)
	ФильтрЗвонковПоВиду("Набранные");
КонецПроцедуры

&НаКлиенте
Процедура ФильтрВсе(Команда)
	ФильтрЗвонковПоВиду("Все");
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьДлительностьРазговораПанелиЗвонка() Экспорт
	ТекущийЗвонокДлительность = '00010101' + (ТекущаяДата() - ТекущийЗвонокНачалоРазговора);	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДействие(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПриВыбореДействияПоЗвонку", ЭтаФорма);
	ПоказатьВыборИзМеню(Оповещение, ДействияПоЗвонку, Элементы.ВыбратьДействиеДа);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореДействияПоЗвонку(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		СтруктураЗвонка = Новый Структура();
		Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
			СтруктураЗвонка = Новый Структура("ИдентификаторЗвонка,Контакт,НомерТелефона",
				ИдентификаторЗвонка, ТекущийЗвонокКонтакт, ТекущийЗвонокНомерАбонента);
			
		Иначе
			ТекДанные = Элементы.ТелефонныеЗвонки.ТекущиеДанные;
			Если ТекДанные <> Неопределено Тогда
				МассивЗвонящих = Новый Массив();
				МассивЗвонящих.Добавить(ТекДанные.АбонентКонтакт);
				
				СтруктураЗвонка = Новый Структура("ИдентификаторЗвонка,Контакт,НомерТелефона,НовыйЗвонок,МассивЗвонящих",
					ТекДанные.сфпИдентификаторЗвонка, ТекДанные.АбонентКонтакт, ТекДанные.АбонентКакСвязаться, ТекДанные.Ссылка, МассивЗвонящих);
			КонецЕсли;
		КонецЕсли;
		
		Если СтруктураЗвонка.Свойство("ИдентификаторЗвонка") Тогда
			ИндексДействия = 2 + ДействияПоЗвонку.Индекс(ВыбранныйЭлемент);
			сфпСофтФонПроКлиентПереопределяемый.сфпВыполнитьДоступноеДействие(ИндексДействия, СтруктураЗвонка);
		КонецЕсли;	
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьПеревод(Команда)
	
	Если ИспользуетсяОблачнаяАТС Тогда
		Если ЗначениеЗаполнено(ИдентификаторЗвонка) И ЗначениеЗаполнено(НабранныйНомер) Тогда
			Если ТекущийЗвонокДлительность = '00010101' Тогда
				РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ПереводНеотвеченногоЗвонка", ИдентификаторЗвонка, НабранныйНомер, ВнутреннийНомер, Ложь);
				
			Иначе
				РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ПереводОтвеченногоЗвонка", ИдентификаторЗвонка, НабранныйНомер, ВнутреннийНомер, Ложь);
			КонецЕсли;
			
			Если РезультатЗапроса.Успешно Тогда
				НабранныйНомер = "";
				Элементы.ДекорацияПодтвердитьПеревод.Видимость = Ложь;
			КонецЕсли;	
		КонецЕсли;

	Иначе	
		Если ИдентификаторПереводимогоЗвонка = "" Тогда
			Если ИдентификаторЗвонка <> 0 И ЗначениеЗаполнено(НабранныйНомер) Тогда
				сфпПанельУправления.RedirectCall(ТекущийЗвонокНомерЛинии, ИдентификаторЗвонка, НабранныйНомер, "");
				НабранныйНомер = "";
			КонецЕсли;

		Иначе
			// Подтверждаем перевод звонка
			сфпПанельУправления.FinishTransferCall(ТекущийЗвонокНомерЛинии, ИдентификаторПереводимогоЗвонка, "");

			ИдентификаторПереводимогоЗвонка = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНомеронабирательНабратьНажатие(Элемент)
	
	Если ЗначениеЗаполнено(ИдентификаторЗвонка) И ЗначениеЗаполнено(НабранныйНомер) Тогда
		Если ИспользуетсяОблачнаяАТС Тогда
			РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ПереводОтвеченногоЗвонка", ИдентификаторЗвонка, НабранныйНомер, ВнутреннийНомер, Истина);
			Если РезультатЗапроса.Успешно Тогда
				ИдентификаторПереводимогоЗвонка = ИдентификаторЗвонка;
				НабранныйНомер = "";
				Элементы.НомеронабирательНабрать.Видимость = Ложь;
			КонецЕсли;
		
		Иначе	
			сфпПанельУправления.StartTransferCall(ТекущийЗвонокНомерЛинии, ИдентификаторЗвонка, НабранныйНомер, "");
			ИдентификаторПереводимогоЗвонка = ИдентификаторЗвонка;
			НабранныйНомер = "";
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьДлительностьРазговораПанелиЗвонка() Экспорт
	ТекущийЗвонокДлительность = '00010101' + (ТекущаяДата() - ТекущийЗвонокНачалоРазговора);	
КонецПроцедуры

&НаКлиенте
// Процедура устанавливает текущие отборы списка Телефонных звонков
//
// Параметры:
//	Нет.
//
Процедура УстановитьОтборыТелефонныхЗвонков()
	
    ЭлементыСпискаОтбора = ТелефонныеЗвонки.КомпоновщикНастроек.Настройки.Отбор.Элементы;
	Для Каждого ТекущийОтбор Из ЭлементыСпискаОтбора Цикл
		Если ТекущийОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный Тогда
			Если ТекущийОтбор.Представление = "Внутренний номер" Тогда
				ТекущийОтбор.ПравоеЗначение = ВнутреннийНомер;
				
			ИначеЕсли ТекущийОтбор.Представление = "Принятые" Тогда
				Если ТекущийФильтрЗвонков = "Принятые" Тогда
					ТекущийОтбор.Использование = Истина;
				Иначе
					ТекущийОтбор.Использование = Ложь;
				КонецЕсли;

			ИначеЕсли ТекущийОтбор.Представление = "Набранные" Тогда
				Если ТекущийФильтрЗвонков = "Набранные" Тогда
					ТекущийОтбор.Использование = Истина;
			    Иначе
		            ТекущийОтбор.Использование = Ложь;
				КонецЕсли;

			ИначеЕсли ТекущийОтбор.Представление = "Не принятые" Тогда
				Если ТекущийФильтрЗвонков = "Непринятые" Тогда
					ТекущийОтбор.Использование	= Истина;
			    Иначе
		            ТекущийОтбор.Использование	= Ложь;
				КонецЕсли;
			КонецЕсли;
        КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УстановитьОтборыТелефонныхЗвонков()

&НаКлиенте
Процедура ДекорацияПокаатьЕщёНажатие(Элемент = Неопределено)

	Элементы.ГруппаПоказатьЕщё.Видимость = Ложь;
	Элементы.ГруппаЕщё.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Скрыть(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеКонтактов(Режим, Группировка = "")
	
	Если ТипЗнч(Группировка) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;

	ТекущаяГруппировкаКонтактов.Очистить();
	
	Если Режим = "Развернуть" Тогда
		НоваяСтрока = ТекущаяГруппировкаКонтактов.Добавить();
		НоваяСтрока.Группировка = Группировка;
		
		Элементы.ТекущаяГруппировкаКонтактов.Видимость = Истина;

		Элементы.АбонентыТелефонныхКнигКонтактПредставление.ГиперссылкаЯчейки = Ложь;
		
		АбонентыТелефонныхКниг.Группировка.Элементы[0].Использование = Ложь;
		АбонентыТелефонныхКниг.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].Использование = Истина;
		АбонентыТелефонныхКниг.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].ПравоеЗначение = Группировка;
		
	Иначе
		Элементы.АбонентыТелефонныхКниг.ТекущаяСтрока = Неопределено;

		Элементы.ТекущаяГруппировкаКонтактов.Видимость = Ложь;
		
		Элементы.АбонентыТелефонныхКнигКонтактПредставление.ГиперссылкаЯчейки = Истина;
		
		АбонентыТелефонныхКниг.Группировка.Элементы[0].Использование = Истина;
		АбонентыТелефонныхКниг.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].Использование = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьКонтакт(Команда)
	
	ТекДанные = Элементы.АбонентыТелефонныхКниг.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ТипЗнч(ТекДанные) = Тип("ДанныеФормыСтруктура") Тогда
		Попытка ПоказатьЗначение(, ТекДанные.Контакт);
		Исключение КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяГруппировкаКонтактовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НастроитьОтображениеКонтактов("Свернуть");
	
КонецПроцедуры

&НаКлиенте
Процедура УдержаниеЗвонка(Команда)
	
	Если ИспользуетсяОблачнаяАТС Тогда
		// Зарезервировано на будущее
		РазрешенаПауза = Истина;
	
    Иначе
		Если ТекущийЗвонокСостояние = 10 Тогда 
			сфпПанельУправления.UnHoldCall(ТекущийЗвонокНомерЛинии, ИдентификаторЗвонка);

		Иначе
			ИД = Формат(Число(ИдентификаторЗвонка), "ЧГ=");
			сфпПанельУправления.HoldCall(ТекущийЗвонокНомерЛинии, ИД);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти