
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Параметры.СчетНаОплату) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	СчетНаОплату = Параметры.СчетНаОплату;
	РезультатПроверки = ОнлайнОплата.ПроверитьРегистрациюСчета(СчетНаОплату, Истина);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РезультатПроверки);
	
	Если НЕ ЗначениеЗаполнено(Интерфейс) Тогда
		
		РезультатВыполнения = ОнлайнОплата.ПолучитьСтруктуруРезультатВыполнения();
		МассивДоступныхИнтерфейсов = ОнлайнОплата.ПолучитьДоступныеИнтерфейсы(СчетНаОплату, РезультатВыполнения);
		Если НЕ РезультатВыполнения.Успешно Тогда
			
			Для каждого ТекстСообщения Из РезультатВыполнения.ТекстыСообщений Цикл
				ВывестиСообщение(ТекстСообщения, ЭтотОбъект);
			КонецЦикла;
			
			Отказ = Истина;
			
			Возврат;
			
		КонецЕсли;
		
		Если МассивДоступныхИнтерфейсов.Количество() = 1 Тогда
			Интерфейс = МассивДоступныхИнтерфейсов[0];
		КонецЕсли;
		
		Элементы.Интерфейс.СписокВыбора.ЗагрузитьЗначения(МассивДоступныхИнтерфейсов);
		
	КонецЕсли;
	
	Элементы.Интерфейс.Видимость = НЕ ЗначениеЗаполнено(Интерфейс);
	
	РеквизитыСчета = "Контрагент,СуммаДокумента,ДокументОснование";
	ЗначенияРеквизитовСчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СчетНаОплату, РеквизитыСчета);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитовСчета);
	
	ИсточникКИ = Новый Массив;
	ИсточникКИ.Добавить(Контрагент);
	
	ВидыКИ = Новый Массив;
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.EmailКонтрагента);
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
	
	ДанныеКИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(ИсточникКИ, , ВидыКИ, ТекущаяДатаСеанса());
	Для каждого ЭлементКИ Из ДанныеКИ Цикл
		Если ЭлементКИ.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента Тогда
			Если НЕ Взаимодействия.КорректноВведенНомерТелефона(ЭлементКИ.Представление) Тогда
				Продолжить;
			КонецЕсли;
			НомерДляОтправки = ФорматироватьНомер(ЭлементКИ.Представление);
			Элементы.ДоставкаЧекаТелефон.СписокВыбора.Добавить(НомерДляОтправки, ЭлементКИ.Представление);
			Элементы.ДоставкаСсылкиТелефон.СписокВыбора.Добавить(НомерДляОтправки, ЭлементКИ.Представление);
		Иначе // EmailКонтрагента
			АдресЭлектроннойПочты = ЭлементКИ.Представление;
			РезультатВыполнения = ОнлайнОплата.ПроверитьАдресЭлектроннойПочты(АдресЭлектроннойПочты);
			Если РезультатВыполнения.Успешно Тогда
				Элементы.ДоставкаЧекаЭлектроннаяПочта.СписокВыбора.Добавить(АдресЭлектроннойПочты, АдресЭлектроннойПочты);
				Элементы.ДоставкаСсылкиЭлектроннаяПочта.СписокВыбора.Добавить(АдресЭлектроннойПочты, АдресЭлектроннойПочты);	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	УправлениеДиалогомНаСервере();
	
	НастройкиФормы = Новый Структура;
	НастройкиФормы.Вставить("Группа", Элементы.ГруппаПлатежнаяСсылка);
	
	ПриСозданииНаСервереФормыQRКода(ЭтотОбъект, НастройкиФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Оповестить("ЗакрытиеФормыПлатежнойСсылки", СчетНаОплату, ЭтотОбъект);
	
	ОповещениеПриЗакрытииФормы = Новый ОписаниеОповещения(
	"Подключаемый_ПриЗакрытииФормы",
	ЭтотОбъект,
	Новый Структура);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтотОбъект);
		
	ВыполнитьОбработкуОповещения(ОповещениеПриЗакрытииФормы, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантДоставкиЧекаЭлектроннаяПочтаПриИзменении(Элемент)
	
	Если Элементы.ДоставкаЧекаЭлектроннаяПочта.СписокВыбора.Количество() = 1 Тогда
		
		ДоставкаЧекаЭлектроннаяПочта = Элементы.ДоставкаЧекаЭлектроннаяПочта.СписокВыбора[0].Значение;
		
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантДоставкиЧекаТелефонПриИзменении(Элемент)
	
	Если Элементы.ДоставкаЧекаТелефон.СписокВыбора.Количество() = 1 Тогда
		
		ДоставкаЧекаТелефон = Элементы.ДоставкаЧекаТелефон.СписокВыбора[0].Значение;
		
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантДоставкиЧекаВРукиПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкаЧекаЭлектроннаяПочтаПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкаЧекаТелефонПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	 
КонецПроцедуры

&НаКлиенте
Процедура ИнтерфейсПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантДоставкиСсылкиЭлектроннаяПочтаПриИзменении(Элемент)
	
	Если Элементы.ДоставкаСсылкиЭлектроннаяПочта.СписокВыбора.Количество() = 1 Тогда
		
		ДоставкаСсылкиЭлектроннаяПочта = Элементы.ДоставкаСсылкиЭлектроннаяПочта.СписокВыбора[0].Значение;
		
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантДоставкиСсылкиТелефонПриИзменении(Элемент)
	
	Если Элементы.ДоставкаСсылкиТелефон.СписокВыбора.Количество() = 1 Тогда
		
		ДоставкаСсылкиТелефон = Элементы.ДоставкаСсылкиТелефон.СписокВыбора[0].Значение;
		
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантДоставкиСсылкиКодКуАрПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкаСсылкиЭлектроннаяПочтаПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкаСсылкиТелефонПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура КомандаПолучитьСсылкуНаСервере()
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Интерфейс", Интерфейс);
	КонтактДляОтправкиЧека = Неопределено;
	Если ВариантДоставкиЧека = "ЭлектроннаяПочта" Тогда
		КонтактДляОтправкиЧека = ДоставкаЧекаЭлектроннаяПочта;
	ИначеЕсли ВариантДоставкиЧека = "Телефон" Тогда
		КонтактДляОтправкиЧека = ДоставкаЧекаТелефон;
	Иначе
		КонтактДляОтправкиЧека = "";
	КонецЕсли;
	ПараметрыРегистрации.Вставить("КонтактДляОтправкиЧека", КонтактДляОтправкиЧека);
	
	РезультатВыполнения = ОнлайнОплата.ЗарегистрироватьСчет(СчетНаОплату, ПараметрыРегистрации);
	
	Если НЕ РезультатВыполнения.Успешно Тогда
	
		Для каждого ТекстСообщения Из РезультатВыполнения.ТекстыСообщений Цикл
		
			ВывестиСообщение(ТекстСообщения, ЭтотОбъект);
		
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
	РезультатПроверки = ОнлайнОплата.ПроверитьРегистрациюСчета(СчетНаОплату, Истина);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РезультатПроверки);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПолучитьСсылку(Команда)
	КомандаПолучитьСсылкуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомандаДоставитьСсылку(Команда)
	
	Если ВариантДоставкиСсылки = "КодQR" Тогда
		
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(СчетНаОплату);
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("АдресФормыОплаты", АдресФормыОплаты);
		ПараметрыПечати.Вставить("СрокЖизниСсылки", СрокЖизниСсылки);
				
		ПараметрыОткрытия = Новый Структура("ИмяМенеджераПечати,ИменаМакетов,ПараметрКоманды,ПараметрыПечати");
		
		ПараметрыОткрытия.ИмяМенеджераПечати = "Документ.СчетНаОплату";
		ПараметрыОткрытия.ИменаМакетов		 = "ПФ_MXL_QR_КодОнлайнОплата";
		ПараметрыОткрытия.ПараметрКоманды	 = МассивОбъектов;
		ПараметрыОткрытия.ПараметрыПечати	 = ПараметрыПечати;  
				
		ОповещениеПослеЗавершенияНастройкиФормы = Новый ОписаниеОповещения(
		"Подключаемый_ПослеЗавершенияНастройкиФормы",
		ЭтотОбъект,
		Новый Структура);
		
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(
		Неопределено,
		ЭтотОбъект,
		"ДисплейПокупателя");
		
		ДанныеПлатежнойСсылки = Новый Структура;
		ДанныеПлатежнойСсылки.Вставить("СтрокиТекста", НСтр("ru = 'Отсканируйте для оплаты'") + Символы.ПС + "Сумма:" + Строка(ЭтотОбъект.СуммаДокумента));
		ДанныеПлатежнойСсылки.Вставить("ЗначениеQRКода", АдресФормыОплаты);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Форма", ЭтотОбъект);
		ДополнительныеПараметры.Вставить("ДанныеПлатежнойСсылки", ДанныеПлатежнойСсылки);
		
		ВыполнитьОбработкуОповещения(ОповещениеПослеЗавершенияНастройкиФормы, ДополнительныеПараметры);
		
		ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия, ЭтотОбъект, КлючУникальности);
		
	Иначе
		
		ПараметрыОтправки = ПолучитьПараметрыОтправки();
		
		Если ИспользуетсяШаблонСообщения Тогда
			
			СформироватьСообщениеДляОтправки(ПараметрыОтправки);
			
		Иначе
			
			Если ВариантДоставкиСсылки = "ЭлектроннаяПочта" Тогда
				
				РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыОтправки);
				
			Иначе
				
				ПараметрыФормыСообщения = Новый Структура;
				ПараметрыФормыСообщения.Вставить("Текст", ПараметрыОтправки.Текст);
				ПараметрыФормыСообщения.Вставить("Получатель", ПараметрыОтправки.Получатель);
				ПараметрыФормыСообщения.Вставить("Предмет", СчетНаОплату); 
				ДополнительныеПараметры = Новый Структура;
				ДополнительныеПараметры.Вставить("Предмет", СчетНаОплату); 
				ПараметрыФормыСообщения.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
				
				ПоказатьФормуСообщения(ПараметрыФормыСообщения, "СообщениеSMS", СчетНаОплату);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ФорматироватьНомер(Номер)
	
	Результат = "";
	ДопустимыеСимволы = "+1234567890";
	
	Для Позиция = 1 По СтрДлина(Номер) Цикл
		Символ = Сред(Номер, Позиция, 1);
		Если СтрНайти(ДопустимыеСимволы, Символ) > 0 Тогда
			Результат = Результат + Символ;
		КонецЕсли;
	КонецЦикла;
	
	ДлинаНомера = 10;
	Если СтрДлина(Результат) > ДлинаНомера Тогда
		ПервыйСимвол = Лев(Результат, 1);
		Если ПервыйСимвол = "8" Тогда
			Результат = "+7" + Сред(Результат, 2);
		ИначеЕсли ПервыйСимвол <> "+" Тогда
			Результат = "+" + Результат;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	Элементы.КнопкаСформироватьСсылку.Доступность = ДоступностьКнопкиСформироватьСсылку();
	Элементы.КнопкаДоставитьСсылку.Доступность = ДоступностьКнопкиДоставитьСсылку();
	
КонецПроцедуры

&НаСервере
Функция ДоступностьКнопкиСформироватьСсылку()
	
	Если ВариантДоставкиЧека = "" Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ВариантДоставкиЧека = "ЭлектроннаяПочта" И ДоставкаЧекаЭлектроннаяПочта = "" Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Если ВариантДоставкиЧека = "Телефон" И ДоставкаЧекаТелефон = "" Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Если АдресФормыОплаты <> "" Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Интерфейс) Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ДоступностьКнопкиДоставитьСсылку()
	
	Если ВариантДоставкиСсылки = "КодQR" Тогда
		Элементы.КнопкаДоставитьСсылку.Заголовок = НСтр("ru='Показать ссылку'");
	Иначе
		Элементы.КнопкаДоставитьСсылку.Заголовок = НСтр("ru='Доставить ссылку'");
	КонецЕсли;
	
	Если ВариантДоставкиСсылки = "" Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ВариантДоставкиСсылки = "ЭлектроннаяПочта" И ДоставкаСсылкиЭлектроннаяПочта = "" Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Если ВариантДоставкиСсылки = "Телефон" И ДоставкаСсылкиТелефон = "" Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Если АдресФормыОплаты = "" Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПолучитьШаблонСообщения(ПараметрыВзаимодействия)
	
	Если ВариантДоставкиСсылки = "Телефон" Тогда
		
		Если ТипЗнч(СчетНаОплату) = Тип("ДокументСсылка.СчетНаОплату")
			И ПараметрыВзаимодействия.Свойство("СчетШаблонСообщенийСМС") Тогда
		
			Возврат ПараметрыВзаимодействия.СчетШаблонСообщенийСМС;
		
		ИначеЕсли ПараметрыВзаимодействия.Свойство("СчетАвтомобилиШаблонСообщенийСМС") Тогда
		
			Возврат ПараметрыВзаимодействия.СчетАвтомобилиШаблонСообщенийСМС;
		
		КонецЕсли;
		
	Иначе
		
		Если ТипЗнч(СчетНаОплату) = Тип("ДокументСсылка.СчетНаОплату")
			И ПараметрыВзаимодействия.Свойство("СчетШаблонЭлектронныхПисем") Тогда
		
			Возврат ПараметрыВзаимодействия.СчетШаблонЭлектронныхПисем;
		
		ИначеЕсли ПараметрыВзаимодействия.Свойство("СчетАвтомобилиШаблонЭлектронныхПисем") Тогда
		
			Возврат ПараметрыВзаимодействия.СчетАвтомобилиШаблонЭлектронныхПисем;
		
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыОтправки()
	
	ПараметрыВзаимодействия = Справочники.ИнтерфейсыДляВнешнихСистем.ПолучитьПараметрыВзаимодействия(Интерфейс);
	
	ШаблонСообщения = ПолучитьШаблонСообщения(ПараметрыВзаимодействия);
	
	ИспользуетсяШаблонСообщения = ЗначениеЗаполнено(ШаблонСообщения);
	
	Если ИспользуетсяШаблонСообщения Тогда
		
		ПараметрыОтправки = ПолучитьПараметрыОтправкиПоШаблону(ШаблонСообщения);
		
	Иначе	
		
		ПараметрыОтправки = ПолучитьПараметрыОтправкиБезШаблона();
		
	КонецЕсли;
	
	Возврат ПараметрыОтправки;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыОтправкиПоШаблону(ШаблонСообщения)
	
	ПараметрыОтправки = Новый Структура();
	ПараметрыОтправки.Вставить("Шаблон", ШаблонСообщения);
	ПараметрыОтправки.Вставить("Предмет", СчетНаОплату);
	ПараметрыОтправки.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	
	ДополнительныеПараметры = Новый Структура();
	
	ДополнительныеПараметры.Вставить("ПреобразовыватьHTMLДляФорматированногоДокумента", Истина);
	ДополнительныеПараметры.Вставить("ВидСообщения", ВариантДоставкиСсылки);
	ДополнительныеПараметры.Вставить("ПроизвольныеПараметры", Новый Соответствие);
	ДополнительныеПараметры.Вставить("ОтправитьСразу", Ложь);
	ДополнительныеПараметры.Вставить("Предмет", СчетНаОплату);
	
	ПараметрыОтправки.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	Возврат ПараметрыОтправки;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыОтправкиБезШаблона()
	
	ПараметрыСообщения = Новый Структура;
	
	ПараметрыСообщения.Вставить("Получатель", ПолучательСообщения());
	ПараметрыСообщения.Вставить("Предмет", СчетНаОплату);
	ПараметрыСообщения.Вставить("Тема", НСтр("ru = 'Ссылка для оплаты'"));
	
	Если ОтправлятьПисьмаВФорматеHTML() Тогда
		
		ПараметрыСообщения.Вставить("Текст", Новый Структура("ТекстHTML, СтруктураВложений",
		СтрШаблон(ТекстПисьмаБезШаблонаHTML(), АдресФормыОплаты), Новый Структура()));
		
	Иначе
		
		ПараметрыСообщения.Вставить("Текст", СтрШаблон(ТекстПисьмаБезШаблонаТекст(), АдресФормыОплаты));
		
	КонецЕсли;
	
	Возврат ПараметрыСообщения;
	
КонецФункции

&НаСервере
Функция ПолучательСообщения()
	
	Если ВариантДоставкиСсылки = "Телефон" Тогда
		
		Получатели = Новый СписокЗначений;
		Получатели.Добавить(ДоставкаСсылкиТелефон);
		
	Иначе
		
		СтруктураПолучатель = Новый Структура;
		СтруктураПолучатель.Вставить("Адрес", ДоставкаСсылкиЭлектроннаяПочта);
		КонтрагентНаименованиеПолное = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "НаименованиеПолное");
		СтруктураПолучатель.Вставить("Представление", КонтрагентНаименованиеПолное);
		СтруктураПолучатель.Вставить("ИсточникКонтактнойИнформации", Контрагент);
		
		Получатели = Новый Массив;
		Получатели.Добавить(СтруктураПолучатель);
		
	КонецЕсли;
	
	Возврат Получатели;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОтправлятьПисьмаВФорматеHTML()
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Взаимодействия") Тогда
		
		ИмяФункциональнойОпции = "ОтправлятьПисьмаВФорматеHTML";
		
		Возврат ПолучитьФункциональнуюОпцию(ИмяФункциональнойОпции);
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ТекстПисьмаБезШаблонаHTML()
	
	HTMLСтрока = 
	
	"<html>
	|<head>
	|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
	|<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
	|<meta name=""format-detection"" content=""telephone=no"" />
	|</head>
	|<body>
	|<p>Ссылка для оплаты: <a href=""%1"">%1</a></p>
	|
	|</body>
	|</html>";
	
	Возврат СтрШаблон(НСтр("ru = '%1'"), HTMLСтрока);
	
КонецФункции

&НаСервере
Функция ТекстПисьмаБезШаблонаТекст()
	
	Возврат НСтр("ru = 'Ссылка для оплаты: %1'");
		
КонецФункции

&НаКлиенте
Процедура СформироватьСообщениеДляОтправки(ПараметрыОтправки)
	
	Результат = СформироватьСообщениеНаСервере(ПараметрыОтправки);
	
	ПоказатьФормуСообщения(Результат, ПараметрыОтправки.ДополнительныеПараметры.ВидСообщения, ПараметрыОтправки.Предмет);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьСообщениеНаСервере(ПараметрыОтправки)

	Результат = ШаблоныСообщений.СформироватьСообщение(ПараметрыОтправки.Шаблон, ПараметрыОтправки.Предмет
	, ПараметрыОтправки.УникальныйИдентификатор, ПараметрыОтправки.ДополнительныеПараметры);
	
	Вложения = Новый Массив;
	
	Для каждого ЭлементКоллекции Из Результат.Вложения Цикл
		
		ТекущееВложение = Новый Структура;
		
		ТекущееВложение.Вставить("Представление");
		ТекущееВложение.Вставить("АдресВоВременномХранилище");
		ТекущееВложение.Вставить("Кодировка");
		ТекущееВложение.Вставить("Идентификатор");
		
		ЗаполнитьЗначенияСвойств(ТекущееВложение, ЭлементКоллекции);
		
		Вложения.Добавить(ТекущееВложение);
		
	КонецЦикла;		
	
	Результат.Вложения = Вложения;
		
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьФормуСообщения(Сообщение, ВидСообщения, Предмет)
	
	Если ВидСообщения = "Телефон" ИЛИ ВидСообщения = "СообщениеSMS" Тогда
		
		
		ДополнительныеПараметры = Новый Структура("ИсточникКонтактнойИнформации, ПеревестиВТранслит");
		
		Если Сообщение.ДополнительныеПараметры <> Неопределено Тогда
			
			ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, Сообщение.ДополнительныеПараметры);
			
		КонецЕсли;
		
		ДополнительныеПараметры.ИсточникКонтактнойИнформации = Контрагент;
		ДополнительныеПараметры.Вставить("Предмет", Сообщение.ДополнительныеПараметры.Предмет);
		
		Текст  = ?(Сообщение.Свойство("Текст"), Сообщение.Текст, "");
		
		Получатели = Новый Массив;
		
		ЗаполнитьПолучателейИзСообщения(Получатели, Сообщение);
		
		ОтправкаSMSКлиент.ОтправитьSMS(Получатели, Текст, ДополнительныеПараметры);
		
	Иначе
		
		Сообщение.Вставить("Предмет", Предмет);
		РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(Сообщение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолучателейИзСообщения(Получатели, Сообщение)
	
	Если НЕ Сообщение.Свойство("Получатель") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Для каждого ЭлементКоллекции Из Сообщение.Получатель Цикл
		
		КонтактныеДанные = Новый Структура;
		
		Если ТипЗнч(Сообщение.Получатель) = Тип("СписокЗначений") Тогда
			
			КонтактныеДанные.Вставить("Телефон", ЭлементКоллекции.Значение);
			ПредставлениеКонтакта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "НаименованиеПолное");
			КонтактныеДанные.Вставить("Представление", ПредставлениеКонтакта);
			КонтактныеДанные.Вставить("ИсточникКонтактнойИнформации", Контрагент);	
			
		Иначе // Массив структур
			
			КонтактныеДанные.Вставить("Телефон", ЭлементКоллекции.НомерТелефона);
			КонтактныеДанные.Вставить("Представление", ЭлементКоллекции.Представление);
			КонтактныеДанные.Вставить("ИсточникКонтактнойИнформации", ЭлементКоллекции.ИсточникКонтактнойИнформации);	
			
		КонецЕсли;
		
		Получатели.Добавить(КонтактныеДанные);
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервереФормыQRКода(Форма, НастройкиФормы) Экспорт
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПоддерживаемыеТипыПодключаемогоОборудования",Новый ОписаниеТипов("Строка")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьПодключаемоеОборудование",Новый ОписаниеТипов("Булево")));
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ЭтотОбъект.ИспользоватьПодключаемоеОборудование = Истина;   
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеЗавершенияНастройкиФормы(РезультатВыполнения, Параметры) Экспорт
	
	ИнтеграцияПодсистемБИПКлиент.ПриОтображенииQRКода(
		РезультатВыполнения.ДанныеПлатежнойСсылки,
		РезультатВыполнения);
	ИнтеграцияСПлатежнымиСистемамиАльфаАвтоКлиент.ПриОтображенииQRКода(
		РезультатВыполнения.ДанныеПлатежнойСсылки,
		РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриЗакрытииФормы(РезультатВыполнения, Параметры) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиАльфаАвтоКлиент.ПриЗакрытииФормыQRКода(РезультатВыполнения.Форма);
	
КонецПроцедуры

#КонецОбласти