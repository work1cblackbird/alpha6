
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("История") ИЛИ НЕ Параметры.Свойство("ТекущееЗначение") Тогда
		
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Не заполнены обязательные параметры для открытия формы'");
		
	КонецЕсли;
	
	РежимРедактирования = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Режим", "НаименованиеПолное");
	Настройки = НастройкиПоРежиму(РежимРедактирования);
	
	Для Каждого Строка Из Параметры.История Цикл
		
		НоваяСтрока = История.Добавить();
		НоваяСтрока.Период = Строка.Период;
		НоваяСтрока.Значение = Строка[Настройки.Колонка];
		
	КонецЦикла;
	
	Если История.Количество() = 0 И ЗначениеЗаполнено(Параметры.ТекущееЗначение) Тогда
		
		История.Добавить().Значение = Параметры.ТекущееЗначение;
		
	КонецЕсли;
	
	Если НЕ История.Количество() = 0 Тогда
		Элементы.История.ТекущаяСтрока = История[История.Количество() - 1].ПолучитьИдентификатор();
	КонецЕсли;

	УстановитьПризнакПервоначальногоЗначения(История);
	
	// Настроим отображение элементов формы
	ТолькоПросмотр = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТолькоПросмотр", Ложь)
		ИЛИ НЕ ПравоДоступа("Редактирование", Метаданные.Справочники.Контрагенты);
	Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = ТолькоПросмотр;
	Заголовок = Настройки.Заголовок;
	Элементы.ИсторияЗначение.Маска = Настройки.МаскаЗначения;
	Элементы.ИсторияЗначение.Заголовок = Настройки.ОписаниеПоля;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыДинамическогоСписка(ЭтотОбъект, "История");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИстория

&НаКлиенте
Процедура ИсторияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НЕ НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийДень = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
	НовыйПериод = Дата(1, 1, 1);
	Для Каждого Строка Из История Цикл
		НовыйПериод = Макс(НовыйПериод, Строка.Период);
	КонецЦикла;
	
	Если НовыйПериод >= ТекущийДень Тогда
		НовыйПериод = НовыйПериод + 86400;
	Иначе
		НовыйПериод = ТекущийДень;
	КонецЕсли;
	
	Элемент.ТекущиеДанные.Период = НовыйПериод;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	История.Сортировать("Период");
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПередУдалением(Элемент, Отказ)
	
	Отказ = (История.Индекс(Элемент.ТекущиеДанные) = 0);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если ЕстьОшибкиЗаполнения() Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = НастройкиПоРежиму(РежимРедактирования);
	ПоляРезультата = "Период,Значение," + Настройки.Колонка;
	Результат = Новый Массив;
	
	Для Каждого Строка Из История Цикл
		Результат.Добавить(Новый Структура(ПоляРезультата, Строка.Период, Строка.Значение, Строка.Значение));
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция НастройкиРежимов()
	
	Настройки = Новый Структура;
	
	// режим "Наименование полное"
	НастройкиРежима = Новый Структура;
	НастройкиРежима.Вставить("Заголовок", НСтр("ru = 'История наименований'"));
	НастройкиРежима.Вставить("Колонка", "НаименованиеПолное");
	НастройкиРежима.Вставить("МаскаЗначения", "");
	НастройкиРежима.Вставить("ОписаниеПоля", НСтр("ru = 'Наименование полное'"));
	
	Настройки.Вставить("НаименованиеПолное", НастройкиРежима);
	
	// режим "КПП"
	НастройкиРежима = Новый Структура;
	НастройкиРежима.Вставить("Заголовок", НСтр("ru = 'История КПП'"));
	НастройкиРежима.Вставить("Колонка", "КПП");
	НастройкиРежима.Вставить("МаскаЗначения", "@@@@@@@@@");
	НастройкиРежима.Вставить("ОписаниеПоля", НСтр("ru = 'КПП'"));
	Настройки.Вставить("КПП", НастройкиРежима);
	
	Возврат Настройки;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НастройкиПоРежиму(Режим)
	
	Возврат НастройкиРежимов()[Режим];
	
КонецФункции

&НаКлиенте
Функция ЕстьОшибкиЗаполнения()
	
	ЕстьОшибки = Ложь;
	Периоды = Новый Массив;
	ОписаниеПоля = НастройкиПоРежиму(РежимРедактирования)["ОписаниеПоля"];
	СообщениеОбОшибке = СтрШаблон(НСтр("ru = 'Поле ""%1"" не заполнено'"), ОписаниеПоля);
	
	Для Каждого Строка Из История Цикл
		
		Индекс = История.Индекс(Строка);
		
		Если НЕ ЗначениеЗаполнено(Строка.Период) И Индекс > 0 Тогда
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("История", Индекс+1, "Период");
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Нужно указать дату начала действия'"),
				,
				ПутьКТабличнойЧасти,,
				ЕстьОшибки
			);
		КонецЕсли;
		
		Если Периоды.Найти(Строка.Период) <> Неопределено Тогда
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("История", Индекс+1, "Период");
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Уже есть запись с указанной датой сведений'"),
				,
				ПутьКТабличнойЧасти,
				,
				ЕстьОшибки
			);
		ИначеЕсли ЗначениеЗаполнено(Строка.Период) Тогда
			Периоды.Добавить(Строка.Период);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Строка.Значение) Тогда
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("История", Индекс+1, "Значение");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,ПутьКТабличнойЧасти,, ЕстьОшибки);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЕстьОшибки;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПризнакПервоначальногоЗначения(ТаблицаИстории)
	
	ТаблицаИстории.Сортировать("Период");
	// Первая строка должна быть первоначальным значением
	Если ТаблицаИстории.Количество() > 0 Тогда
		ПерваяСтрока = ТаблицаИстории[0];
		ПерваяСтрока.ПервоначальноеЗначение = Истина;
		ПерваяСтрока.Период = '00010101';
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Текст, только просмотр
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ИсторияДата");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("История.ПервоначальноеЗначение");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Начальное заполнение'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Отметка незаполненного
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Использование = Ложь;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ИсторияДата");
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("История.ПервоначальноеЗначение");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("История.Период");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

#КонецОбласти
