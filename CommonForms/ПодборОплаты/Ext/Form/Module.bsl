
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период = Параметры.Период;
	Организация = Параметры.Организация;
	Контрагент = Параметры.Контрагент;
	Договор = Параметры.ДоговорВзаиморасчетов;
	РасчетыСПокупателем = Параметры.РасчетыСПокупателем;
	КурсВалютыВзаиморасчетов = Параметры.КурсВалютыВзаиморасчетов;
	ВалютаДокумента = Параметры.ВалютаДокумента;
	КурсДокумента = Параметры.КурсДокумента;
	ВалютаДоговораВзаиморасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВалютаВзаиморасчетов");
	ИмяСделкиОплаты = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ИмяСделкиОплаты", "ДокументРасчетов");
	
	// Заполнить оплаты
	Если Параметры.Свойство("ЗачтенныеОплаты") Тогда
		Для Каждого ТекущаяСтрока Из Параметры.ЗачтенныеОплаты Цикл
			
			Если Не ЗначениеЗаполнено(ТекущаяСтрока[ИмяСделкиОплаты]) Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ДокументыРасчетаДляДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.ДокументРасчетов = ТекущаяСтрока[ИмяСделкиОплаты];
			
		КонецЦикла;
	КонецЕсли;
	
	// Дата для отбора
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ЗаполнитьОстаткамиПоДокументамРасчета();
	
	ДанныеВалюты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Параметры.ВалютаДокумента, "Наименование");
	НаименованиеВалюты = ДанныеВалюты.Наименование;
	
	СуммаКОплате = Параметры.СуммаДокумента;
	
	Элементы.ДокументыРасчетовПоОтборуСумма.Заголовок = СтрШаблон(НСтр("ru = 'Остаток, %1'"), НаименованиеВалюты);
	Элементы.ДокументыРасчетаДляДокументаСуммаОплаты.Заголовок = СтрШаблон(НСтр("ru = 'Сумма, %1'"), НаименованиеВалюты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьОстатокКОплате();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДокументыРасчетовПоОтборуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаДокумента = ДокументыРасчетовПоОтбору.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если СтрокаДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПодбора = ДокументыРасчетаДляДокумента.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаПодбора, СтрокаДокумента);
	СтрокаПодбора.Сумма = Мин(СтрокаДокумента.СуммаОстаток, ОсталосьОплатить);
	СформироватьОстатокКОплате();
	
	// Удалим строку выше
	ДокументыРасчетовПоОтбору.Удалить(СтрокаДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыРасчетаДляДокументаПослеУдаления(Элемент)
	
	ЗаполнитьОстаткамиПоДокументамРасчета();
	СформироватьОстатокКОплате();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыРасчетаДляДокументаСуммаОплатыПриИзменении(Элемент)
	
	СформироватьОстатокКОплате();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыРасчетаДляДокументаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьОстаткамиПоДокументамРасчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПодбор(Команда)
	
	Результат = Новый Структура();
	Результат.Вставить("АдресПодобранныхДокументовРасчета", ВыбранныеДокументыРасчетов());
	Результат.Вставить("РасчетыСПокупателем", РасчетыСПокупателем);
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОстаткамиПоДокументамРасчета()
	
	ДокументыРасчетовПоОтбору.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетыСКонтрагентамиОстатки.ДокументРасчетов КАК ДокументРасчетов,
		|	РасчетыСКонтрагентамиОстатки.Заказ КАК Заказ,
		|	ВЫБОР
		|		КОГДА &РасчетыСПокупателем
		|			ТОГДА 1
		|		ИНАЧЕ -1
		|	КОНЕЦ * РасчетыСКонтрагентамиОстатки.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ОстаткиПоОплате
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(
		|			&Дата,
		|			Организация = &Организация
		|				И Контрагент = &Контрагент
		|				И ДоговорВзаиморасчетов = &Договор) КАК РасчетыСКонтрагентамиОстатки
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &РасчетыСПокупателем
		|				ТОГДА РасчетыСКонтрагентамиОстатки.СуммаОстаток > 0
		|			ИНАЧЕ РасчетыСКонтрагентамиОстатки.СуммаОстаток < 0
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПоОплате.ДокументРасчетов КАК ДокументРасчетов,
		|	ОстаткиПоОплате.Заказ КАК Заказ,
		|	ОстаткиПоОплате.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	ОстаткиПоОплате КАК ОстаткиПоОплате
		|ГДЕ
		|	НЕ ОстаткиПоОплате.ДокументРасчетов В (&ДокументыРасчета)";
	
	Запрос.УстановитьПараметр("Дата", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("РасчетыСПокупателем", РасчетыСПокупателем);
	Запрос.УстановитьПараметр("ДокументыРасчета", ДокументыРасчетаДляДокумента.Выгрузить().ВыгрузитьКолонку("ДокументРасчетов"));
	
	ВыборкаОстатокПоДокументуРасчета = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаОстатокПоДокументуРасчета.Следующий() Цикл
		
		НоваяСтрока = ДокументыРасчетовПоОтбору.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОстатокПоДокументуРасчета, "ДокументРасчетов,Заказ");
		
		Если ВалютаДоговораВзаиморасчетов = ВалютаДокумента Тогда
			
			НоваяСтрока.СуммаОстаток = ВыборкаОстатокПоДокументуРасчета.СуммаОстаток;
			
		Иначе
			
			НоваяСтрока.СуммаОстаток = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
				ВыборкаОстатокПоДокументуРасчета.СуммаОстаток,
				ВалютаДоговораВзаиморасчетов,
				?(ЗначениеЗаполнено(КурсВалютыВзаиморасчетов), КурсВалютыВзаиморасчетов, Период),
				ВалютаДокумента,
				КурсДокумента);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВыбранныеДокументыРасчетов()
	
	Возврат ПоместитьВоВременноеХранилище(ДокументыРасчетаДляДокумента.Выгрузить());
	
КонецФункции

&НаКлиенте
Процедура СформироватьОстатокКОплате()
	
	Оплата = ДокументыРасчетаДляДокумента.Итог("Сумма");
	ОсталосьОплатить = СуммаКОплате - Оплата;
	
КонецПроцедуры

#КонецОбласти
