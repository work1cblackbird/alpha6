#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ сфпСофтФонПроСервер.сфпИспользоватьМаршрутизацию() ИЛИ НЕ Параметры.Свойство("Контакт") Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;

	Иначе	
		Контакт = Параметры.Контакт;
		Пользователь = сфпСофтФонПроСервер.сфпПолучитьПользователяДляПереключенияЗвонков(Контакт);
		
		Список.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователь);
	КонецЕсли;
	
	// АльфаАвто
	Список.ТекстЗапроса = "ВЫБРАТЬ
	|	НастройкиПользователей.ПользовательПрофиль КАК ПользовательПрофиль,
	|	НастройкиПользователей.Значение КАК Значение,
	|	ВЫБОР
	|		КОГДА НастройкиПользователей.ПользовательПрофиль = &Пользователь
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВыбранныйПользователь
	|ИЗ
	|	РегистрСведений.ПраваИНастройки КАК НастройкиПользователей
	|ГДЕ
	|	НастройкиПользователей.ПравоНастройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПраваИНастройки.сфпТекущийВнутреннийНомер)
	|	И НастройкиПользователей.Значение <> """"";
	// Конец АльфаАвто
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события формы "ПриОткрытии"
//
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Список.ТекущаяСтрока = сфпПолучитьКлючЗаписи(Пользователь);

	Элементы.СписокОчиститьПользователя.Доступность = ЗначениеЗаполнено(Пользователь);
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
// Процедура - обработчик события "Выбор" таблицы формы "Список"
//
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПриВыбореПользователяДляПереключения();
КонецПроцедуры // СписокВыбор()

#КонецОбласти

#Область ОбработчикиКомандФормы
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
// Функция возвращает выбранного пользователя
//
// Параметры:
//	ВыбраннаяСтрока	- РегистрСведенийКлючЗаписи	- Выбранная запись 
//
// Возвращаемое значение:
//	СправочникСсылка	- Выбранный пользователь
//
Функция ПолучитьВыбранногоПользователя(ВыбраннаяСтрока)
	Возврат ВыбраннаяСтрока.Пользователь;
КонецФункции // ПолучитьВыбранногоПользователя()	

&НаСервере
// Функция возвращает ключ записи настройки внутреннего номера для пользователя
//
// Параметры:
//	Пользователь	- СправочникСсылка	- Пользователь
//
// Возвращаемое значение:
//	РегистрСведенийКлючЗаписи	- Ключ записи
//
Функция сфпПолучитьКлючЗаписи(Пользователь)
	
	ИмяПВХ_СофтфонНастройкиПользователей = сфпСофтФонПроСервер.сфпИмяПВХ_СофтфонНастройкиПользователей();
	ИмяРегистраСофтфонНастройкиПользователей = сфпСофтФонПроСервер.сфпИмяРегистраСофтфонНастройкиПользователей();
	
	СтруктураОтбора = Новый Структура();
	// АльфаАвто
	СтруктураОтбора.Вставить("ПользовательПрофиль", Пользователь);
	// Конец АльфаАвто
	СтруктураОтбора.Вставить("Настройка", ПланыВидовХарактеристик[ИмяПВХ_СофтфонНастройкиПользователей].сфпТекущийВнутреннийНомер);
	Возврат РегистрыСведений[ИмяРегистраСофтфонНастройкиПользователей].СоздатьКлючЗаписи(СтруктураОтбора);

КонецФункции // сфпПолучитьКлючЗаписи()	

&НаКлиенте
Процедура ВыбратьПользователя(Команда)
	ПриВыбореПользователяДляПереключения();
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореПользователяДляПереключения()
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.Пользователь = Пользователь Тогда
		Возврат;
	КонецЕсли;
	
	ВнутреннийНомер	= сфпСофтФонПроСервер.сфпТекущийВнутреннийНомер(ТекДанные.Пользователь);
	Если ПустаяСтрока(ВнутреннийНомер) Тогда
		Возврат;
	КонецЕсли;
	
	СтарыйНабор	= сфпСофтФонПроСервер.сфпПолучитьТаблицуМаршрутизации(Контакт, Пользователь);
	ПользовательОбновлен = сфпСофтФонПроСервер.сфпЗаписатьНовогоПользователя(Контакт, ТекДанные.Пользователь);
	Если ПользовательОбновлен Тогда
		НовыйНабор = сфпСофтФонПроСервер.сфпПолучитьТаблицуМаршрутизации(Контакт, ТекДанные.Пользователь);
		СписокМаршрутизации = сфпСофтФонПроСервер.сфпСформироватьСписокМаршрутизации(СтарыйНабор, НовыйНабор);
		сфпСофтФонПроСервер.сфпИзменитьМаршрутизациюВАТС(СписокМаршрутизации);
	КонецЕсли;
	
	ОповеститьОВыборе(ТекДанные.Пользователь);

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПользователя(Команда)
	
	НовыйПользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	
	СтарыйНабор	= сфпСофтФонПроСервер.сфпПолучитьТаблицуМаршрутизации(Контакт, Пользователь);
	ПользовательОбновлен = сфпСофтФонПроСервер.сфпЗаписатьНовогоПользователя(Контакт, НовыйПользователь);
	Если ПользовательОбновлен Тогда
		НовыйНабор = сфпСофтФонПроСервер.сфпПолучитьТаблицуМаршрутизации(Контакт, НовыйПользователь);
		СписокМаршрутизации = сфпСофтФонПроСервер.сфпСформироватьСписокМаршрутизации(СтарыйНабор, НовыйНабор);
		сфпСофтФонПроСервер.сфпИзменитьМаршрутизациюВАТС(СписокМаршрутизации);
	КонецЕсли;
	
	ОповеститьОВыборе(НовыйПользователь);

КонецПроцедуры

#КонецОбласти