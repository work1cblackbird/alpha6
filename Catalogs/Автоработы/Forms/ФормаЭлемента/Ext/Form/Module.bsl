
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// Установим автомасштаб для картинки
	Элементы.АдресКартинки.РазмерКартинки = РазмерКартинки.АвтоРазмер;
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
	// Дальнейшие операции выпольняются только для новых объектов
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Номенклатура = Справочники.Номенклатура.Авторабота;
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// АльфаАвто.РаботаСФайлами
	РаботаСФайламиАльфаАвтоКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.РаботаСФайлами
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Инициализируем текущее изображение с прикрепленных файлов
	ТекущаяКартинка = Объект.ФайлКартинки;
	
	РаботаСФайламиАльфаАвтоВызовСервера.ВывестиТекущееИзображение(ЭтотОбъект);
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ПроверкаУстановкиЦеныАвтоработы() Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Цена автоработы <%1> не установлена.'"),Объект.Наименование),
			Объект.Ссылка
		);
	КонецЕсли;
		
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура НаименованиеПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	// Вызываем обработчик изменения данных объекта
	Справочники.Автоработы.НаименованиеПриИзменении(Объект, ПараметрыДействия);
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	// Обработаем событие в контексте сервера
	НаименованиеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Объект.НаименованиеПолное = Объект.Наименование;
	
КонецПроцедуры

&НаСервере
Процедура ЭтоДополнительноеПредложениеПриИзмененииНаСервере()
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоДополнительноеПредложениеПриИзменении(Элемент)
	
	// Обработаем событие в контексте сервера
	ЭтоДополнительноеПредложениеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолноеОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru ='Для выбора файла с описанием необходимо записать объект.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла",  Объект.Ссылка);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",    Истина);
	
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
		ПараметрыФормы,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтотОбъект, "ВыборФайлаПолногоОписанияАвтоработы"),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолноеОписаниеСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Для создания файла с описанием необходимо записать объект.'"));
		Возврат;
	КонецЕсли;
	
	ИдентификаторФайла = Новый УникальныйИдентификатор;
	СозданиеФайлаОписания = Истина;
	РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АртикулОкончаниеВводаТекстаНаСервере(Текст, ЗапрещенныеСимволы)
	
	Возврат НЕ ОбработкаСобытийСправочникаСервер.ПроверкаНаНедопустимыеСимволы(Текст, ЗапрещенныеСимволы, Истина);
	
КонецФункции

&НаКлиенте
Процедура АртикулОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗапрещенныеСимволы = "";
	Если АртикулОкончаниеВводаТекстаНаСервере(Текст, ЗапрещенныеСимволы) Тогда
		Текст = НСтр("ru = 'Были обнаружены следующие недопустимые символы:'")+ Символы.НПП + ЗапрещенныеСимволы;
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст, Объект.Ссылка , "Артикул" , "Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	РаботаСФайламиАльфаАвтоКлиент.АдресКартинкиНажатие(ЭтотОбъект, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНормыВремени

#Область ОбработчикиСобытийПолейТаблицыФормыНормыВремени

&НаСервере
Процедура НормыВремениМодельПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	// Получим данные текущей строки табличной части
	ТекущиеДанные = Объект.НормыВремени.НайтиПоИдентификатору(Элементы.НормыВремени.ТекущаяСтрока);
	
	// Вызываем обработчик изменения данных объекта
	Справочники.Автоработы.НормыВремениМодельПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура НормыВремениМодельПриИзменении(Элемент)
	
	НормыВремениМодельПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НормыВремениВариантКомплектацииПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	// Получим данные текущей строки табличной части
	ТекущиеДанные = Объект.НормыВремени.НайтиПоИдентификатору(Элементы.НормыВремени.ТекущаяСтрока);
	
	// Вызываем обработчик изменения данных объекта
	Справочники.Автоработы.НормыВремениМодельПриИзменении(Объект, ТекущиеДанные, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура НормыВремениВариантКомплектацииПриИзменении(Элемент)
	
	НормыВремениВариантКомплектацииПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыПрименяемостьДополнительныхПредложенийПоМоделям

&НаКлиенте
Процедура ПрименяемостьДополнительныхПредложенийПоМоделямПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Перед добавлением применяемости необходимо записать автоработу.'"),,,,
			Отказ);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)

	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);

КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	РаботаСФайламиАльфаАвтоКлиент.ДобавитьИзображение(ЭтотОбъект, Объект, Команда);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьИзображениеНаСервере()
	
	РаботаСФайламиАльфаАвтоВызовСервера.УдалитьИзображение(ЭтотОбъект);
	ПолучитьСледующееИзображение("Вперед");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзображение(Команда)
	Если Объект.ФайлКартинки = ТекущаяКартинка Тогда
		ВывестиСообщение(НСтр("ru = 'Картинка установлена основной. Прежде чем удалить ее необходимо снять признак ""Основная"".'"));
		Возврат;
	КонецЕсли;
	
	УдалитьИзображениеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	РаботаСФайламиАльфаАвтоКлиент.ПросмотретьИзображение(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображения(Команда)
	
	ДвижениеПросмотра = ?(СтрНайти(Команда.Имя, "Вперед"), "Вперед", "Назад");
	
	ПолучитьСледующееИзображение(ДвижениеПросмотра);
	
КонецПроцедуры

&НаСервере
Процедура СделатьОсновнойКартинкойНаСервере()
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьОсновнойКартинкой(Команда)
	
	Если НЕ РаботаСФайламиАльфаАвтоКлиент.ФайлЯвляетсяДопустимойКартинкой(ТекущаяКартинка) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Объект.ФайлКартинки = ТекущаяКартинка Тогда
	    Объект.ФайлКартинки = ПредопределенноеЗначение("Справочник.МоделиПрисоединенныеФайлы.ПустаяСсылка");
	Иначе	
		Объект.ФайлКартинки = ТекущаяКартинка;
	КонецЕсли;
	
	Модифицированность = Истина;
	СделатьОсновнойКартинкойНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПроверкаУстановкиЦеныАвтоработы()
	ЦенаАвтоработыУстановлена=Ложь;
	
	// Получим таблицу родителей автоработы с индексом иерархии
	ТаблицаРодителей=Новый ТаблицаЗначений;
	ТаблицаРодителей.Колонки.Добавить("Авторабота",Новый ОписаниеТипов("СправочникСсылка.Автоработы"));
	ТаблицаРодителей.Колонки.Добавить("Индекс",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15)));
	НоваяСтрока=ТаблицаРодителей.Добавить();
	НоваяСтрока.Авторабота=Объект.Ссылка;
	НоваяСтрока.Индекс=0;
	ТекущийРодитель= Объект.Родитель; 
	Индекс=1;
	Пока ТекущийРодитель<>Справочники.Автоработы.ПустаяСсылка() Цикл
		НоваяСтрока=ТаблицаРодителей.Добавить();
		НоваяСтрока.Авторабота=ТекущийРодитель;
		НоваяСтрока.Индекс=Индекс;
		ТекущийРодитель=ТекущийРодитель.Родитель;
		Индекс=Индекс+1;
	КонецЦикла; 
	// Поместим таблицу родителей в менеджер временных таблиц
	// Получим выборку цен автоработы.
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТабРодителей.Авторабота,
	|	ТабРодителей.Индекс
	|ПОМЕСТИТЬ
	|	ТаблицаРодителей
	|ИЗ
	|	&ТабРодителей КАК ТабРодителей
	|;
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаРодителей.Индекс КАК Индекс,
	|	ЦеныАвтоработСрезПоследних.Авторабота КАК Авторабота,
	|	ЦеныАвтоработСрезПоследних.Модель КАК Модель,
	|	ЦеныАвтоработСрезПоследних.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	ЦеныАвтоработСрезПоследних.Цех КАК Цех,
	|	ЦеныАвтоработСрезПоследних.ВидРемонта КАК ВидРемонта,
	|	ЦеныАвтоработСрезПоследних.Нормочас КАК Нормочас,
	|	ЦеныАвтоработСрезПоследних.Валюта КАК Валюта,
	|	ЦеныАвтоработСрезПоследних.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныАвторабот.СрезПоследних(,
	|			(Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) И 
	|			(ДоговорВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ДоговорыВзаиморасчетов.ПустаяСсылка)) И 
	|			(Авторабота В (ВЫБРАТЬ Авторабота ИЗ ТаблицаРодителей))
	|		) КАК ЦеныАвтоработСрезПоследних
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ТаблицаРодителей КАК ТаблицаРодителей
	|ПО
	|	ЦеныАвтоработСрезПоследних.Авторабота=ТаблицаРодителей.Авторабота
	|
	|ГДЕ
	|	(НЕ ЦеныАвтоработСрезПоследних.Нормочас=ЗНАЧЕНИЕ(Справочник.Нормочасы.ПустаяСсылка)) ИЛИ 
	|	(НЕ ЦеныАвтоработСрезПоследних.Валюта=ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
	|";
	Запрос.УстановитьПараметр("ТабРодителей", ТаблицаРодителей);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЦенаАвтоработыУстановлена=Истина;
	КонецЕсли;
	
	Возврат ЦенаАвтоработыУстановлена;
	
КонецФункции

&НаСервере
Процедура ПолучитьСледующееИзображение(ДвижениеПросмотра)
	
	РаботаСФайламиАльфаАвтоВызовСервера.ПолучитьСледующееИзображение(ЭтотОбъект, ДвижениеПросмотра);
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
//@skip-warning
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Устанавливаем отбор по владельцу на динамический список Применяемость по моделям
	Если ЗначениеЗаполнено(Объект.Ссылка) И ПрименяемостьДополнительныхПредложенийПоМоделям.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Количество()=0 Тогда
		ЭлементОтбора = ПрименяемостьДополнительныхПредложенийПоМоделям.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДополнительноеПредложение");
		ЭлементОтбора.Использование  = ИСТИНА;
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	// Если объект не записан убираем доступность для вкладок
	НовыйОбъект = НЕ ЗначениеЗаполнено(Объект.Ссылка);
	Элементы.СтраницаПрименяемостьПоМоделям.Видимость = НЕ НовыйОбъект И Объект.ЭтоДополнительноеПредложение;
	
	Элементы.СделатьОсновнойКартинкой.Пометка = ?(Объект.ФайлКартинки = ТекущаяКартинка
		И ТекущаяКартинка <> Справочники.АвтоработыПрисоединенныеФайлы.ПустаяСсылка(),
		Истина, Ложь);
		
	РаботаСФайламиАльфаАвто.УстановитьДоступностьКомандДляИзображений(Объект, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры = Неопределено)
	
	// Вызываем общий обработчик события
	Если НЕ УправлениеДиалогомСправочникаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	// Обновим параметры выбора элементов формы
	НастроитьПараметрыВыбораЭлементовФормы();
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры // ОбработкаРезультатаОповещенияНаСервере()

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ УправлениеДиалогомСправочникаКлиент.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры = "ВыборФайлаПолногоОписанияАвтоработы" Тогда
		Объект.ПолноеОписание = РезультатОповещения;
		Модифицированность = Истина;
	КонецЕсли;
	
	// Обработаем событие в контексте сервера
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	
	// Вызываем обработчик результата выполнения
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры

// Отображает результат выполнения действия.
//
// Параметры:
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	// Вызываем общий обработчик результата выполнения действия
	УправлениеДиалогомСправочникаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры // ОбработкаРезультатаВыполненияДействия()

#КонецОбласти

#Область АльфаАвтоРаботаСФайлами

&НаКлиенте
Процедура Подключаемый_РаботаСФайламиАльфаАвтоОбработкаОповещения(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСФайламиАльфаАвтоОбработкаОповещенияНаСервере(Результат, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура РаботаСФайламиАльфаАвтоОбработкаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры)
	
	РаботаСФайламиАльфаАвтоВызовСервера.ОбработкаОповещения(ЭтотОбъект, РезультатОповещения, Объект);
	
	Если РезультатОповещения.Свойство("НоваяКартинкаОписания") Тогда 
		ЭтотОбъект.Модифицированность = Истина;
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти