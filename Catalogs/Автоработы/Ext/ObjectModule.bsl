// Модуль объекта справочника "Автоработы"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	
	ПрефиксацияОбъектов.ПриУстановкеНовогоКода(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ПрерватьЗаполнение = Не ОбработкаСобытийСправочникаСервер.ОбработкаЗаполнения(
		ЭтотОбъект,
		ДанныеЗаполнения,
		ТекстЗаполнения,
		СтандартнаяОбработка
	);
	
	Если ПрерватьЗаполнение Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Ссылка.Пустая() И Не Родитель.Пустая() Тогда
		
		РеквизитыРодителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Родитель, "Номенклатура,Тип");
		
		Если Не ЭтоГруппа Тогда
			
			Если ЗначениеЗаполнено(реквизитыРодителя.Номенклатура) Тогда
				
				Номенклатура = реквизитыРодителя.Номенклатура;
				
			Иначе
				
				Номенклатура = ПраваИНастройкиПользователя.Значение("АвтоработаПоУмолчанию", ЭтотОбъект);
				
			КонецЕсли;
			
			Тип = РеквизитыРодителя.Тип;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЭтоГруппа И Не ЗначениеЗаполнено(СпособРасчетаСтоимостиРаботы) Тогда
		
		СпособРасчетаСтоимостиРаботы = Перечисления.СпособыРасчетаСтоимостиРаботы.ПоНормеВремени;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если Не ОбработкаСобытийСправочникаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ОбработкаСобытийСправочникаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	// Выполняется заполнение поля "Артикул для поиска" даже в режиме загрузки
	Если Не ЭтоГруппа Тогда
		
		АртикулДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(Артикул);
		
	КонецЕсли;
	
	Если ЭтоНовый() И Не ЗначениеЗаполнено(Тип) Тогда
		
		Тип = Справочники.ТипыАвторабот.ПоУмолчанию;
		
	КонецЕсли;
	
	Если Не ОбработкаСобытийСправочникаСервер.ПередЗаписью(ЭтотОбъект, Отказ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		
		Если Не ЭтоДополнительноеПредложение И Не Ссылка.Пустая() Тогда
			
			РегистрыСведений.ПрименяемостьДополнительныхПредложенийПоМоделям.УдалитьДополнительноеПредложение(Ссылка);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Не ОбработкаСобытийСправочникаСервер.ПриЗаписи(ЭтотОбъект, Отказ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОбменСAudaPadWeb_ТаблицаСоответствий.Хеш1 КАК Хеш1,
		|	ОбменСAudaPadWeb_ТаблицаСоответствий.Хеш2 КАК Хеш2,
		|	ОбменСAudaPadWeb_ТаблицаСоответствий.Модель КАК Модель
		|ИЗ
		|	РегистрСведений.ОбменСAudaPadWeb_ТаблицаСоответствий КАК ОбменСAudaPadWeb_ТаблицаСоответствий
		|ГДЕ
		|	ОбменСAudaPadWeb_ТаблицаСоответствий.Номенклатура = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.ОбменСAudaPadWeb_ТаблицаСоответствий.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		МенеджерЗаписи.Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
