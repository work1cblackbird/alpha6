// Модуль менеджера справочника "Автоработы"
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСпособРасчетаСтоимостиРаботПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Автоработы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Автоработы КАК Автоработы
	|ГДЕ
	|	НЕ Автоработы.ЭтоГруппа
	|	И Автоработы.СпособРасчетаСтоимостиРаботы = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаСтоимостиРаботы.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Авторабота = Выборка.Ссылка.ПолучитьОбъект();
		Авторабота.СпособРасчетаСтоимостиРаботы = Перечисления.СпособыРасчетаСтоимостиРаботы.ПоНормеВремени;
		Авторабота.ОбменДанными.Загрузка = Истина;
		
		Попытка
			Авторабота.Записать();
		Исключение
			ЗаписьЖурналаРегистрации(
				СтрШаблон(
					НСтр(
						"ru = 'Ошибка обновления справочника %1'",
						ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()
					),
					"Автоработы"
				),
				УровеньЖурналаРегистрации.Предупреждение,
				, ,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

//@skip-check module-empty-method	
// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Переопределяет настройки печати для объекта.
//
// Параметры:
//  Настройки - см. УправлениеПечатью.НастройкиПечатиОбъекта.
//
Процедура ПриОпределенииНастроекПечати(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если СтрДлина(Параметры.СтрокаПоиска) < 3 Тогда

		СтандартнаяОбработка = Ложь;
		Возврат;

	КонецЕсли;

	СтрокаПоиска = Параметры.СтрокаПоиска;

	Если ПустаяСтрока(СтрокаПоиска) Тогда

		Возврат;

	КонецЕсли;

	Источник = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Источник", "");

	Если Источник = "ИзменениеЦенАвторабот_Авторабота" Тогда

		АвтоПодборБезГрупп = "";

	Иначе

		АвтоПодборБезГрупп = " И Автоработы.ЭтоГруппа = ЛОЖЬ ";

	КонецЕсли;

	СтандартнаяОбработка = Ложь;
	СтрокаПоискаАртикул = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(СтрокаПоиска);
	НетОтбораПоВидуИспользования = Не Параметры.Отбор.Свойство("ВидИспользования");
	ВидыИспользования = Новый Массив;

	Если Не НетОтбораПоВидуИспользования Тогда

		ВидыИспользования = Новый Массив(Параметры.Отбор.ВидИспользования);

	КонецЕсли;

	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 10
		|	Автоработы.Ссылка КАК Значение,
		|	Автоработы.Артикул КАК НайденоПо,
		|	Автоработы.Наименование КАК ДополнительноеЗначение,
		|	Автоработы.ПометкаУдаления КАК ПометкаУдаления
		|ПОМЕСТИТЬ ПодходящиеПозиции
		|ИЗ
		|	Справочник.Автоработы КАК Автоработы
		|ГДЕ
		|	Автоработы.Артикул ПОДОБНО &СтрокаПоиска СПЕЦСИМВОЛ ""~""
		|	И НЕ Автоработы.ПометкаУдаления
		|	И (&НетОтбораПоВидуИспользования
		|			ИЛИ Автоработы.ВидИспользования В (&ВидыИспользования))
		|	" + АвтоПодборБезГрупп + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 10
		|	Автоработы.Ссылка,
		|	Автоработы.Наименование,
		|	Автоработы.Артикул,
		|	Автоработы.ПометкаУдаления
		|ИЗ
		|	Справочник.Автоработы КАК Автоработы
		|ГДЕ
		|	Автоработы.Наименование ПОДОБНО &СтрокаПоиска СПЕЦСИМВОЛ ""~""
		|	И НЕ Автоработы.ПометкаУдаления
		|	И (&НетОтбораПоВидуИспользования
		|			ИЛИ Автоработы.ВидИспользования В (&ВидыИспользования))
		|	" + АвтоПодборБезГрупп + " 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 10
		|	Автоработы.Ссылка,
		|	Автоработы.Наименование,
		|	Автоработы.Артикул,
		|	Автоработы.ПометкаУдаления
		|ИЗ
		|	Справочник.Автоработы КАК Автоработы
		|ГДЕ
		|	Автоработы.Код ПОДОБНО &СтрокаПоиска СПЕЦСИМВОЛ ""~""
		|	И НЕ Автоработы.ПометкаУдаления
		|	И (&НетОтбораПоВидуИспользования
		|			ИЛИ Автоработы.ВидИспользования В (&ВидыИспользования))
		|	" + АвтоПодборБезГрупп + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 10
		|	Автоработы.Ссылка,
		|	Автоработы.АртикулДляПоиска,
		|	Автоработы.Наименование,
		|	Автоработы.ПометкаУдаления
		|ИЗ
		|	Справочник.Автоработы КАК Автоработы
		|ГДЕ
		|	Автоработы.АртикулДляПоиска ПОДОБНО &СтрокаПоискаАртикул СПЕЦСИМВОЛ ""~""
		|	И НЕ Автоработы.ПометкаУдаления
		|	И (&НетОтбораПоВидуИспользования
		|			ИЛИ Автоработы.ВидИспользования В (&ВидыИспользования))
		|	" + АвтоПодборБезГрупп + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 10
		|	ПодходящиеПозиции.Значение КАК Значение,
		|	ПодходящиеПозиции.ПометкаУдаления КАК ПометкаУдаления,
		|	МИНИМУМ(ПодходящиеПозиции.НайденоПо) КАК НайденоПо,
		|	МИНИМУМ(ПодходящиеПозиции.ДополнительноеЗначение) КАК ДополнительноеЗначение
		|ИЗ
		|	ПодходящиеПозиции КАК ПодходящиеПозиции
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодходящиеПозиции.Значение,
		|	ПодходящиеПозиции.ПометкаУдаления"
	);
	Запрос.УстановитьПараметр("НетОтбораПоВидуИспользования", НетОтбораПоВидуИспользования);
	Запрос.УстановитьПараметр("ВидыИспользования", ВидыИспользования);
	Запрос.УстановитьПараметр("СтрокаПоиска",
		"%" + ОбщегоНазначения.СформироватьСтрокуДляПоискаВЗапросе(СтрокаПоиска) + "%"
	);
	Запрос.УстановитьПараметр("СтрокаПоискаАртикул",
		"%" + ОбщегоНазначения.СформироватьСтрокуДляПоискаВЗапросе(СтрокаПоискаАртикул) + "%"
	);
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеВыбора = Новый СписокЗначений;

	Если РезультатЗапроса.Пустой() Тогда

		Возврат;

	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	ВыделениеСтрокиПоиска = Новый ФорматированнаяСтрока(СтрокаПоиска, Новый Шрифт(, , Истина),
		ЦветаСтиля.ЦветПоложительногоТекстаВиджета);
	ВыделениеСтрокиПоискаАртикул = Новый ФорматированнаяСтрока(СтрокаПоискаАртикул, Новый Шрифт(, , Истина),
		ЦветаСтиля.ЦветПоложительногоТекстаВиджета);
	ДлинаСтрокиПоиска = СтрДлина(СтрокаПоиска);
	ДлинаСтрокиПоискаАртикул = СтрДлина(СтрокаПоискаАртикул);

	Пока Выборка.Следующий() Цикл

		ПредставлениеСтроки = Новый Массив;
		ИндексСтрокаПоиска = СтрНайти(НРег(Выборка.НайденоПо), СтрокаПоиска);
		ИндексСтрокаПоискаАртикул = СтрНайти(НРег(Выборка.НайденоПо), СтрокаПоискаАртикул);

		Если СтрНайти(Нрег(Выборка.НайденоПо), СтрокаПоиска) > 0 Тогда

			ПредставлениеСтроки.Добавить(Лев(Выборка.НайденоПо, ИндексСтрокаПоиска - 1));
			ПредставлениеСтроки.Добавить(ВыделениеСтрокиПоиска);
			ПредставлениеСтроки.Добавить(Сред(Выборка.НайденоПо, ИндексСтрокаПоиска + ДлинаСтрокиПоиска));
			ПредставлениеСтроки.Добавить(" (");
			ПредставлениеСтроки.Добавить(Выборка.ДополнительноеЗначение);
			ПредставлениеСтроки.Добавить(")");

		ИначеЕсли СтрНайти(Нрег(Выборка.НайденоПо), СтрокаПоискаАртикул) > 0 Тогда

			ПредставлениеСтроки.Добавить(Лев(Выборка.НайденоПо, ИндексСтрокаПоискаАртикул - 1));
			ПредставлениеСтроки.Добавить(ВыделениеСтрокиПоискаАртикул);
			ПредставлениеСтроки.Добавить(Сред(Выборка.НайденоПо, ИндексСтрокаПоискаАртикул + ДлинаСтрокиПоискаАртикул));
			ПредставлениеСтроки.Добавить(" (");
			ПредставлениеСтроки.Добавить(Выборка.ДополнительноеЗначение);
			ПредставлениеСтроки.Добавить(")");

		КонецЕсли;

		ЗначениеВыбора = Новый Структура("Значение,ПометкаУдаления", Выборка.Значение, Выборка.ПометкаУдаления);
		ДанныеВыбора.Добавить(ЗначениеВыбора, Новый ФорматированнаяСтрока(ПредставлениеСтроки));

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПараметрыОбработкиРеквизитовОбъекта

Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	ОбязательныеРеквизиты = Новый Массив;
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	Если Не Объект.ЭтоГруппа Тогда
		
		ОбязательныеРеквизиты.Добавить("Модель");
		ОбязательныеРеквизиты.Добавить("ВидИспользования");
		ОбязательныеРеквизиты.Добавить("Номенклатура");
		ОбязательныеРеквизиты.Добавить("НормыВремени.Модель");
		ОбязательныеРеквизиты.Добавить("НормыВремени.ВремяВыполнения");
		ОбязательныеРеквизиты.Добавить("Тип");
		ОбязательныеРеквизиты.Добавить("СпособРасчетаСтоимостиРаботы");
		
	КонецЕсли;
	
	Возврат ОбязательныеРеквизиты;
	
КонецФункции

Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт

	УникальныеРеквизиты = Новый Структура;
	УникальныеРеквизиты.Вставить("Код");

	Если Не Объект.ЭтоГруппа Тогда

		УникальныеРеквизитыНормВремени = Новый Массив;
		УникальныеРеквизитыНормВремени.Добавить("Модель");
		УникальныеРеквизитыНормВремени.Добавить("ВариантКомплектации");
		УникальныеРеквизиты.Вставить("НормыВремени", УникальныеРеквизитыНормВремени);

	КонецЕсли;

	Возврат УникальныеРеквизиты;

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
	
// Обработчик события возникающего при изменении данных реквизита "Наименование".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура НаименованиеПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт

	Если ПустаяСтрока(Объект.НаименованиеПолное) Тогда

		Объект.НаименованиеПолное = Объект.Наименование;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПолейТаблицыФормыНормыВремени
	
// Обработчик события возникающего при изменении данных реквизита "Наименование".
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события;
//  Строка - СтрокаТаблицыЗначений - Строка, при изменении поля которой возникло событие;
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
Процедура НормыВремениМодельПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт

	Если ЗначениеЗаполнено(Строка.ВариантКомплектации) Тогда

		Если Не Строка.ВариантКомплектации.Владелец = Строка.Модель Тогда

			Строка.ВариантКомплектации = Справочники.Модели.ПустаяСсылка();

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры
	
// Обработчик события возникающего при изменении данных реквизита "Наименование".
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события;
//  Строка - СтрокаТаблицыЗначений - Строка, при изменении поля которой возникло событие;
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
Процедура НормыВремениВариантКомплектацииПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт

	Если ЗначениеЗаполнено(Строка.ВариантКомплектации) Тогда

		НоваяМодель = Строка.ВариантКомплектации.Владелец;

		Если Не НоваяМодель = Строка.Модель Тогда

			Строка.Модель = НоваяМодель;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ЗапретРедактированияРеквизитовОбъектов

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("ЦеноваяГруппа");
	Возврат Результат;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли