// Модуль менеджера справочника "Группы прав и настроек"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс 

// Заполняет регистры для групп доступа
//
Процедура ВыполнитьНачальноеЗаполнение() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПолученияГруппДоступа();
	
	УстановитьПривилегированныйРежим(Истина);
	ПакетЗапроса = Запрос.ВыполнитьПакет();
	
	СписокГрупп = Новый Соответствие;
	
	// Заполним пользователей
	ТаблицаПользователей = ПакетЗапроса[4].Выгрузить();
	ЗаполнитьГруппуПравПользователей(ТаблицаПользователей, СписокГрупп);
	
	// Заполним регистр "Права и настройки"
	ВыборкаПравИНастроек = ПакетЗапроса[5].Выбрать();
	ЗаполнитьРегистрНастройками(
		ВыборкаПравИНастроек,
		СписокГрупп,
		"ПраваИНастройки",
		"ПользовательПрофиль",
		"Права и настройки");
	
	// Заполним регистр "Настройки утверждения документов"
	ВыборкаНастроекУтверждений = ПакетЗапроса[6].Выбрать();
	ЗаполнитьРегистрНастройками(
		ВыборкаНастроекУтверждений,
		СписокГрупп,
		"НастройкиУтвержденияДокументов",
		"Объект",
		"Настройки утверждения документов");
	
	// Заполним регистр "Минимальная наценка"
	ВыборкаМинимальнаяНаценка = ПакетЗапроса[7].Выбрать();
	ЗаполнитьРегистрНастройками(
		ВыборкаМинимальнаяНаценка,
		СписокГрупп,
		"МинимальнаяНаценка",
		"Пользователь",
		"Минимальная наценка");
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы. 
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности и уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов и вариант проверки его заполнения
//  (1-Обязательный, 2-Уникальный, 3-Уникальный и обязательный). Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

Функция ТекстЗапросаПолученияГруппДоступа()
	
	Возврат "ВЫБРАТЬ
	|	ГруппыДоступаПользователи.Ссылка КАК ГруппаДоступа,
	|	ГруппыДоступаПользователи.Пользователь КАК Пользователь
	|ПОМЕСТИТЬ ГруппыДоступаПользователей
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	ГруппыДоступаПользователи.Пользователь ССЫЛКА Справочник.Пользователи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступаПользователи.Ссылка КАК Ссылка,
	|	ГруппыДоступаПользователи.Пользователь КАК Пользователь
	|ПОМЕСТИТЬ ГруппыДоступаГруппПользователей
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	ГруппыДоступаПользователи.Пользователь ССЫЛКА Справочник.ГруппыПользователей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступаГруппПользователей.Ссылка КАК ГруппаДоступа,
	|	ГруппыПользователейСостав.Пользователь КАК Пользователь
	|ПОМЕСТИТЬ ГруппаДоступаПользователейПоГруппе
	|ИЗ
	|	ГруппыДоступаГруппПользователей КАК ГруппыДоступаГруппПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|		ПО ГруппыДоступаГруппПользователей.Пользователь = ГруппыПользователейСостав.Ссылка
	|ГДЕ
	|	НЕ ГруппыПользователейСостав.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ГруппыДоступаПользователей.ГруппаДоступа, ГруппаДоступаПользователейПоГруппе.ГруппаДоступа) КАК ГруппаДоступа,
	|	ЕСТЬNULL(ГруппыДоступаПользователей.Пользователь, ГруппаДоступаПользователейПоГруппе.Пользователь) КАК Пользователь
	|ПОМЕСТИТЬ ПользовательИГруппаДоступа
	|ИЗ
	|	ГруппаДоступаПользователейПоГруппе КАК ГруппаДоступаПользователейПоГруппе
	|		ПОЛНОЕ СОЕДИНЕНИЕ ГруппыДоступаПользователей КАК ГруппыДоступаПользователей
	|		ПО (ГруппыДоступаПользователей.ГруппаДоступа = ГруппаДоступаПользователейПоГруппе.ГруппаДоступа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПользовательИГруппаДоступа.Пользователь КАК Пользователь,
	|	ЕСТЬNULL(ГруппыПравИНастроек.Ссылка, ЗНАЧЕНИЕ(Справочник.ГруппыПравИНастроек.ПустаяСсылка)) КАК ГруппаПравИНастроек,
	|	ПользовательИГруппаДоступа.ГруппаДоступа.Наименование КАК НаименованиеГруппы,
	|	ПользовательИГруппаДоступа.ГруппаДоступа КАК ГруппаДоступа
	|ИЗ
	|	ПользовательИГруппаДоступа КАК ПользовательИГруппаДоступа
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыПравИНастроек КАК ГруппыПравИНастроек
	|		ПО ПользовательИГруппаДоступа.ГруппаДоступа.Наименование = ГруппыПравИНастроек.Наименование
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ПользовательИГруппаДоступа.Пользователь ССЫЛКА Справочник.Пользователи
	|				ТОГДА ПользовательИГруппаДоступа.Пользователь.ГруппаПравИНастроек = ЗНАЧЕНИЕ(Справочник.ГруппыПравИНастроек.ПустаяСсылка)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПраваИНастройки.ПользовательПрофиль КАК ГруппаДоступа,
	|	ПраваИНастройки.ПользовательПрофиль.Наименование КАК НаименованиеГруппы
	|ИЗ
	|	РегистрСведений.ПраваИНастройки КАК ПраваИНастройки
	|ГДЕ
	|	ПраваИНастройки.ПользовательПрофиль ССЫЛКА Справочник.ГруппыДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиУтвержденияДокументов.Объект КАК ГруппаДоступа,
	|	НастройкиУтвержденияДокументов.Объект.Наименование КАК НаименованиеГруппы
	|ИЗ
	|	РегистрСведений.НастройкиУтвержденияДокументов КАК НастройкиУтвержденияДокументов
	|ГДЕ
	|	НастройкиУтвержденияДокументов.Объект ССЫЛКА Справочник.ГруппыДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МинимальнаяНаценка.Пользователь КАК ГруппаДоступа,
	|	МинимальнаяНаценка.Пользователь.Наименование КАК НаименованиеГруппы
	|ИЗ
	|	РегистрСведений.МинимальнаяНаценка КАК МинимальнаяНаценка
	|ГДЕ
	|	МинимальнаяНаценка.Пользователь ССЫЛКА Справочник.ГруппыДоступа";
	
КонецФункции

Функция НайтиСоздатьГруппуДоступаПоОписанию(НазваниеГруппы, ИскатьПоНаименованию = Ложь)
	
	Если ИскатьПоНаименованию Тогда
		НайденнаяГруппа = Справочники.ГруппыПравИНастроек.НайтиПоНаименованию(НазваниеГруппы, Истина);
		Если ЗначениеЗаполнено(НайденнаяГруппа) Тогда
			Возврат НайденнаяГруппа;
		КонецЕсли;
	КонецЕсли;
	
	НоваяГруппа = Справочники.ГруппыПравИНастроек.СоздатьЭлемент();
	НоваяГруппа.Заполнить(Неопределено);
	НоваяГруппа.Наименование = НазваниеГруппы;
	НоваяГруппа.Описание = НСтр("ru = 'Группа сформирована автоматически'");
	
	Попытка
		НоваяГруппа.Записать();
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр(
				"ru = 'Не удалось записать элемент справочника ""Группы прав и настроек""'",
				ОбщегоНазначения.КодОсновногоЯзыка())
				+ " " + СокрЛП(НоваяГруппа.Наименование),
				УровеньЖурналаРегистрации.Ошибка,,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат НоваяГруппа.Ссылка;
	
КонецФункции

Процедура ЗаполнитьГруппуПравПользователей(ТаблицаПользователей, СписокГрупп)
	
	Для Каждого ТекущаяГруппа Из ТаблицаПользователей Цикл 
		// Проверим, что ранее не создали для другого пользователя группу
		НайденнаяГруппа = СписокГрупп.Получить(ТекущаяГруппа.ГруппаДоступа);
		Если НайденнаяГруппа = Неопределено Тогда
			ТекущаяГруппа.ГруппаПравИНастроек = НайтиСоздатьГруппуДоступаПоОписанию(ТекущаяГруппа.НаименованиеГруппы);
		Иначе
			ТекущаяГруппа.ГруппаПравИНастроек = НайденнаяГруппа;
		КонецЕсли;
		// Запишем пользователям группу прав
		Если НЕ ЗначениеЗаполнено(ТекущаяГруппа.ГруппаПравИНастроек) Тогда
			Продолжить;
		КонецЕсли;
		Если СписокГрупп.Получить(ТекущаяГруппа.ГруппаДоступа) = Неопределено Тогда
			СписокГрупп.Вставить(ТекущаяГруппа.ГруппаДоступа, ТекущаяГруппа.ГруппаПравИНастроек);
		КонецЕсли;
		// Запишем пользователей
		ПользовательОбъект = ТекущаяГруппа.Пользователь.ПолучитьОбъект();
		ПользовательОбъект.ГруппаПравИНастроек = ТекущаяГруппа.ГруппаПравИНастроек;
		Попытка
			ПользовательОбъект.Записать();
		Исключение
			ЗаписьЖурналаРегистрации(
			НСтр(
				"ru = 'Не установить группу прав и настроек справочника ""Пользователи""'",
				ОбщегоНазначения.КодОсновногоЯзыка())
				+ " " + СокрЛП(ПользовательОбъект.Наименование),
				УровеньЖурналаРегистрации.Ошибка,,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРегистрНастройками(ВыборкаРегистра, СписокГрупп, ИмяРегистра, ИмяИзмерения, ПредставлениеРегистра)
	
	Пока ВыборкаРегистра.Следующий() Цикл
		
		// Найдем группу прав и настроек
		НайденнаяГруппа = СписокГрупп.Получить(ВыборкаРегистра.ГруппаДоступа);
		Если НайденнаяГруппа = Неопределено Тогда
			НайденнаяГруппа = НайтиСоздатьГруппуДоступаПоОписанию(ВыборкаРегистра.НаименованиеГруппы, Истина);
			Если НайденнаяГруппа = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			СписокГрупп.Вставить(ВыборкаРегистра.ГруппаДоступа, НайденнаяГруппа);
		КонецЕсли;
		
		НаборЗаписи = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
		НаборЗаписи.Отбор[ИмяИзмерения].Установить(ВыборкаРегистра.ГруппаДоступа);
		НаборЗаписи.Прочитать();
		
		ДанныеРегистра = НаборЗаписи.Выгрузить(); 
		
		НаборЗаписи.Очистить();
		
		Попытка
			НаборЗаписи.Записать(Истина);
		Исключение
			ЗаписьЖурналаРегистрации(
				СтрШаблон(НСтр(
				"ru = 'Не установить группу прав и настроек в регистре ""%1"" для группы доступа %2'",
				ОбщегоНазначения.КодОсновногоЯзыка()),
				ПредставлениеРегистра,
				СокрЛП(ВыборкаРегистра.НаименованиеГруппы)),
				УровеньЖурналаРегистрации.Ошибка,,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
		Для Каждого ТекущаяЗапись Из ДанныеРегистра Цикл
			НоваяЗапись = РегистрыСведений[ИмяРегистра].СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекущаяЗапись);
			НоваяЗапись[ИмяИзмерения] = НайденнаяГруппа;
			Попытка
				НоваяЗапись.Записать(Истина);
			Исключение
				ЗаписьЖурналаРегистрации(
					СтрШаблон(НСтр(
					"ru = 'Не установить группу прав и настроек в регистре ""%1"" для группы доступа %2'",
					ОбщегоНазначения.КодОсновногоЯзыка()),
					ПредставлениеРегистра,
					СокрЛП(ВыборкаРегистра.НаименованиеГруппы)),
					УровеньЖурналаРегистрации.Ошибка,,,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли