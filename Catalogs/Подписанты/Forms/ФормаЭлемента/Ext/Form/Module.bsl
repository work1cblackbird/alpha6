
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		УправлениеДиалогомНаСервере();
			
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьДоступностьЭлементов(ЭтотОбъект); 
	
	УстановитьТипПодписанта();

	УстановитьПараметрыВыбора(Элементы.Подписант);
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	УправлениеДиалогомНаСервере();

КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	РаботаСФормойКлиент.ЗамерВремениЗапись("Подписанты");
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
	// Проверим , а есть ли еще с такими параметрами актуальные?
	
	Если Объект.Актуален Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Подписанты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Подписанты КАК Подписанты
		|ГДЕ
		|	Подписанты.Подписант = &Подписант
		|	И Подписанты.Организация = &Организация
		|	И Подписанты.ПодразделениеКомпании = &Подразделение
		|	И Подписанты.Ссылка <> &Ссылка
		|	И Подписанты.Актуален = ИСТИНА";
		Запрос.УстановитьПараметр("Подписант",     Объект.Подписант);
		Запрос.УстановитьПараметр("Организация",   Объект.Организация);
		Запрос.УстановитьПараметр("Подразделение", Объект.ПодразделениеКомпании);
		Запрос.УстановитьПараметр("Ссылка",        Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не может быть более одного актуального подписанта'"), Объект.Ссылка, Объект.Актуален,, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.Подписанты.ОрганизацияПриИзменении(Объект, ПараметрыДействия);
	
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Организация", Объект.Организация);
	
	НовыйМассив = Новый Массив();
	
	НовыйМассив.Добавить(НовыйПараметр);
	
	Элементы.Подписант.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеКомпанииПриИзменении(Элемент)
	
	ПодразделениеКомпанииПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ПодразделениеКомпанииПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.Подписанты.ПодразделениеКомпанииПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьПараметрыВыбора(Элементы.Подписант);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписантПриИзменении(Элемент)
	
	Если  Объект.ВидПодписанта = 
		ПредопределенноеЗначение("Перечисление.ВидыПодписантов.ПодписантОтОрганизации") Тогда
		
		Флаг = Истина;
		Объект.Организация = ПолучитьССылку (Флаг);
		
	ИначеЕсли  Объект.ВидПодписанта = 
		ПредопределенноеЗначение("Перечисление.ВидыПодписантов.ПодписантОтКонтрагента") Тогда
		
		Флаг = Ложь;
		Объект.Контрагент = ПолучитьССылку (Флаг);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПодписантаПриИзменении(Элемент)
	
	УстановитьТипПодписанта();
	
	УстановитьПараметрыВыбора(Элементы.Подписант);
	
	УстановитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

// Устанавливает доступность организации и подразделения в зависимости от подписанта.
&НаКлиентеНаСервереБезКонтекста 
Процедура УстановитьДоступностьЭлементов(Форма)
		
	Если  Форма.Объект.ВидПодписанта = 
		ПредопределенноеЗначение("Перечисление.ВидыПодписантов.ПодписантОтОрганизации") Тогда
		
		Форма.Элементы.Организация.Видимость           = Истина;
		Форма.Элементы.ПодразделениеКомпании.Видимость = Истина;
		Форма.Элементы.Контрагент.Видимость            = Ложь;
		
	ИначеЕсли Форма.Объект.ВидПодписанта = 
		ПредопределенноеЗначение("Перечисление.ВидыПодписантов.ПодписантОтКонтрагента") Тогда
		
		Форма.Элементы.Организация.Видимость           = Ложь;
		Форма.Элементы.ПодразделениеКомпании.Видимость = Ложь;
		Форма.Элементы.Контрагент.Видимость            = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// устанавливаем отбор на поле подписант
&НаКлиенте
Процедура УстановитьПараметрыВыбора(Элемент)
	
	Если  Объект.ВидПодписанта = 
		ПредопределенноеЗначение("Перечисление.ВидыПодписантов.ПодписантОтКонтрагента") Тогда
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ВидКонтрагента",
		ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.КонтактноеЛицо"));
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
		
	ИначеЕсли Объект.ВидПодписанта = 
		ПредопределенноеЗначение("Перечисление.ВидыПодписантов.ПодписантОтОрганизации")  Тогда
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Организация", Объект.Организация);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипПодписанта()
	 
	Массив = Новый Массив(); 
	
	Если Объект.ВидПодписанта = 
		ПредопределенноеЗначение("Перечисление.ВидыПодписантов.ПодписантОтОрганизации")  Тогда
		
		Массив.Добавить(Тип("СправочникСсылка.Сотрудники"));
		
	ИначеЕсли Объект.ВидПодписанта = 
		ПредопределенноеЗначение("Перечисление.ВидыПодписантов.ПодписантОтКонтрагента")  Тогда
		
		Массив.Добавить(Тип("СправочникСсылка.Контрагенты"));
		
	КонецЕсли;
	
	ОписаниеТипа = Новый ОписаниеТипов(Массив);
	Элементы.Подписант.ОграничениеТипа = ОписаниеТипа; 
	Подписант = ОписаниеТипа.ПривестиЗначение(Подписант);
 
 КонецПроцедуры
	 
 &НаСервере
 Функция  ПолучитьСсылку(Флаг)
	 
	 ССылка = Неопределено;
	 
	 Если  Флаг Тогда
		 
		 Запрос = Новый Запрос;
		 Запрос.Текст = 
		 "ВЫБРАТЬ
		 |	Сотрудники.Организация КАК Организация
		 |ИЗ
		 |	Справочник.Сотрудники КАК Сотрудники
		 |ГДЕ
		 |	Сотрудники.Ссылка = &Ссылка";
		 
		 Запрос.УстановитьПараметр("Ссылка", Объект.Подписант);
		 Выборка = Запрос.Выполнить().Выбрать();
		 Выборка.Следующий();
		 Ссылка = Выборка.Организация; 
		 
	 Иначе 	
		 Запрос = Новый Запрос;
		 Запрос.Текст = 
		 "ВЫБРАТЬ
		 |	КонтактныеЛица.Владелец КАК Владелец
		 |ИЗ
		 |	РегистрСведений.КонтактныеЛица КАК КонтактныеЛица
		 |ГДЕ
		 |	КонтактныеЛица.КонтактноеЛицо = &КонтактноеЛицо";
		 
		 Запрос.УстановитьПараметр("КонтактноеЛицо", Объект.Подписант);
		 
		 РезультатЗапроса = Запрос.Выполнить();
		 
		 Если  НЕ РезультатЗапроса.Пустой() Тогда
			 
			 Выборка = РезультатЗапроса.Выбрать();			
			 Выборка.Следующий();
			 Ссылка = Выборка.Владелец;
			 
		 КонецЕсли;
		 
	 КонецЕсли;
	 
	 Возврат Ссылка;
	 
 КонецФункции
 
#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

