// Модуль менеджера справочника "СтавкиНДС"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника Организации.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением.
//                                  Например:
//                                    Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                    ЭлементТЧ = Элемент.Ключи.Добавить();
//                                    ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОсновнаяСтавкаНДС";
	Элемент.Наименование = НСтр("ru = '20%'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Ставка = 20;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОсновнаяСтавкаНДСРасчетная";
	Элемент.Наименование = НСтр("ru = '20/120'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Ставка = 20;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОсновнаяСтавкаНДС10";
	Элемент.Наименование = НСтр("ru = '10%'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Ставка = 10;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасчетнаяСтавкаНДС10";
	Элемент.Наименование = НСтр("ru = '10/110'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Ставка = 10;

КонецПроцедуры

Процедура ЗаполнитьПризнакРасчетнаяСтавка() Экспорт  
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтавкиНДС.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтавкиНДС КАК СтавкиНДС
		|ГДЕ
		|	СтавкиНДС.Предопределенный";
	
    Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл	
		
		СтавкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СтавкаОбъект.ОбменДанными.Загрузка = Истина;				
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			
			Если Выборка.Ссылка = Справочники.СтавкиНДС.ОсновнаяСтавкаНДСРасчетная ИЛИ  Выборка.Ссылка = Справочники.СтавкиНДС.РасчетнаяСтавкаНДС10 Тогда
            	СтавкаОбъект.РасчетнаяСтавка = Истина; 
				СтавкаОбъект.Записать();
			КонецЕсли;	
   		
		Исключение
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Ошибка обновления справочника ""Ставки НДС""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
    			УровеньЖурналаРегистрации.Предупреждение,
				,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
					
		КонецПопытки;		
		
	КонецЦикла;

КонецПроцедуры

Процедура СоздатьСтавкиНДС5и7() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтавкиНДС.Ставка КАК Ставка,
		|	СтавкиНДС.Наименование КАК Наименование,
		|	СтавкиНДС.РасчетнаяСтавка КАК РасчетнаяСтавка,
		|	СтавкиНДС.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтавкиНДС КАК СтавкиНДС
		|ГДЕ
		|	СтавкиНДС.Ставка = 5
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкиНДС.Ставка КАК Ставка,
		|	СтавкиНДС.Наименование КАК Наименование,
		|	СтавкиНДС.РасчетнаяСтавка КАК РасчетнаяСтавка,
		|	СтавкиНДС.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтавкиНДС КАК СтавкиНДС
		|ГДЕ
		|	СтавкиНДС.Ставка = 7";
		
	РезультатЗапроса = Запрос.ВыполнитьПакет();	
	НайденаРасчетнаяСтавка = Ложь; НайденаОсновнаяСтавка = Ложь;
	
	СоздатьОбновитьСтавку(РезультатЗапроса[0].Выгрузить(), 5);
	СоздатьОбновитьСтавку(РезультатЗапроса[1].Выгрузить(), 7);	
		
КонецПроцедуры

Процедура СоздатьОбновитьСтавку(ТаблицаСтавок, Ставка)
	
	НайденаРасчетнаяСтавка 	= Ложь; 
	НайденаОсновнаяСтавка	= Ложь; 
	
	СтавкаРасчетная = Неопределено;
	
	Если ТаблицаСтавок.Количество() > 0 Тогда 
					
		ОтборРасчетнаяСтавка = Новый Структура("РасчетнаяСтавка", Истина);
		РасчетнаяСтавка = ТаблицаСтавок.НайтиСтроки(ОтборРасчетнаяСтавка); 
		
		Если РасчетнаяСтавка.Количество()> 0 Тогда 
			НайденаРасчетнаяСтавка = Истина;
		Иначе 
			СтрокаПоиска = Строка(100 + Ставка);
			Для Каждого Строка Из ТаблицаСтавок Цикл 
				
				Строка.Наименование 	= СтрЗаменить(Строка.Наименование," ", "");
				НайденаРасчетнаяСтавка 	= СтрНайти(Строка.Наименование, СтрокаПоиска) > 0; 
				СтавкаРасчетная 		= Строка.Ссылка; 
				Строка.РасчетнаяСтавка	= Истина;
				
			КонецЦикла;
			
			Если Не НайденаРасчетнаяСтавка И ТаблицаСтавок.Количество()>= 2 Тогда
				СтавкаРасчетная 		= ТаблицаСтавок[0].Ссылка;
				НайденаРасчетнаяСтавка 	= Истина;
				ТаблицаСтавок[0].РасчетнаяСтавка = Истина;
			КонецЕсли;
		КонецЕсли;
		
		ОтборРасчетная = Новый Структура("РасчетнаяСтавка", Ложь);
		ОсновнаяСтавка = ТаблицаСтавок.НайтиСтроки(ОтборРасчетная); 
		НайденаОсновнаяСтавка = (ОсновнаяСтавка.Количество()> 0);		
	КонецЕсли; 
	
		
    Если Не НайденаРасчетнаяСтавка ИЛИ ТаблицаСтавок.Количество() = 0 Тогда
		
		СтавкаНДСРасчетная 					= Справочники.СтавкиНДС.СоздатьЭлемент();
		СтавкаНДСРасчетная.Наименование		= Строка(Ставка)+ "/" + Строка(100 + Ставка);
		СтавкаНДСРасчетная.Ставка 			= Ставка;
		СтавкаНДСРасчетная.РасчетнаяСтавка 	= Истина;  
		
		Попытка 
			СтавкаНДСРасчетная.Записать();
		Исключение 
			ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Ошибка запись элемента справочника ""Ставки НДС""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Предупреждение,
			,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
		КонецПопытки;
	ИначеЕсли ЗначениеЗаполнено(СтавкаРасчетная) Тогда
			
		СтавкаОбъект = СтавкаРасчетная.Ссылка.ПолучитьОбъект();
		СтавкаОбъект.ОбменДанными.Загрузка = Истина;				
		
		СтавкаОбъект.РасчетнаяСтавка = Истина;
		Попытка
			ЗаблокироватьДанныеДляРедактирования(СтавкаРасчетная.Ссылка);
			СтавкаОбъект.Записать();
		Исключение
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Ошибка обновления справочника ""Ставки НДС""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
	    		УровеньЖурналаРегистрации.Предупреждение,
				,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
						
		КонецПопытки;
			
	КонецЕсли; 
	
	Если Не НайденаОсновнаяСтавка ИЛИ ТаблицаСтавок.Количество() = 0 Тогда
		СтавкаНДС 					= Справочники.СтавкиНДС.СоздатьЭлемент();
		СтавкаНДС.Наименование		= Строка(Ставка) + "%";
		СтавкаНДС.Ставка 			= Ставка;
		СтавкаНДС.РасчетнаяСтавка 	= Ложь;  
		
		Попытка 
			СтавкаНДС.Записать();
		Исключение 
			ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Ошибка записи элемента справочника ""Ставки НДС""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Предупреждение,
			,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
		КонецПопытки;
	КонецЕсли; 

			
КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Наименование");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// 	 Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти	

#КонецЕсли