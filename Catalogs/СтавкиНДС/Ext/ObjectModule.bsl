// Модуль объекта справочника "Ставки НДС"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбработчикиСобытий

// Обработчик события заполнения объекта как при создании нового, так и при вводе на основании существующего.
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для формирования наименования/кода нового элемента.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

// Обработчик события заполнения объекта копированием.
//
// Параметры:
//  ОбъектКопирования - СправочникОбъект - Исходный объект, который является источником копирования.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

// Обработчик события возникающего при необходимости проверки заполнения реквизитов при записи объекта.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Обработчик события возникающего после начала транзакции записи, но до начала записи объекта.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередЗаписью(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПередЗаписью(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктураПоиска = Новый Структура("Ссылка, Ставка, РасчетнаяСтавка"); 
	ЗаполнитьЗначенияСвойств(СтруктураПоиска, ЭтотОбъект);

	ВыполнитьПоискДублейСтавки(СтруктураПоиска, Отказ);

КонецПроцедуры // ПередЗаписью()

// Обработчик события возникающего после записи объекта в базу данных, но до окончания транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПриЗаписи(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПриЗаписи(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

// Обработчик события возникающего в транзакции удаления перед непосредственным удалением объекта из базы данных.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередУдалением(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПередУдалением()

#КонецОбласти   

#Область СлужебныеПроцедурыИФункции 

Процедура ВыполнитьПоискДублейСтавки(СтруктураПоиска, Отказ);
	
	Запрос = Новый Запрос;
	Текст = 
		"ВЫБРАТЬ
		|	СтавкиНДС.Ставка КАК Ставка,
		|	СтавкиНДС.РасчетнаяСтавка КАК РасчетнаяСтавка
		|ИЗ
		|	Справочник.СтавкиНДС КАК СтавкиНДС
		|ГДЕ
		|	СтавкиНДС.Ставка = &Ставка
		|	И СтавкиНДС.РасчетнаяСтавка = &РасчетнаяСтавка
		|	И СтавкиНДС.Ссылка <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)" ;
	
	Запрос.УстановитьПараметр("РасчетнаяСтавка", СтруктураПоиска.РасчетнаяСтавка);
	Запрос.УстановитьПараметр("Ставка", СтруктураПоиска.Ставка);
	
	Если ЗначениеЗаполнено(СтруктураПоиска.Ссылка) Тогда  
		Запрос.УстановитьПараметр("Ссылка", СтруктураПоиска.Ссылка);
		ДопУсловие = "И СтавкиНДС.Ссылка <> &ССылка"; 
	Иначе
		ДопУсловие = "";	
	КонецЕсли;
	
	Запрос.Текст = Текст + ДопУсловие;
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Если Не РезультатЗапроса.Пустой() Тогда 
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = 'В информационной базе уже создана ставка НДС со ставкой %1 и %2 признаком Расчетная ставка'"),
				СтруктураПоиска.Ставка, 
				?(СтруктураПоиска.РасчетнаяСтавка, "установленным", "не установленным")
			),
			ЭтотОбъект,
		);
		Отказ = Истина;
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

#КонецЕсли