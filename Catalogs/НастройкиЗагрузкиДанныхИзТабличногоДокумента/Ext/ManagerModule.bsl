// Модуль менеджера справочника "Настройки Загрузки Данных Из Табличного Документа"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Функция возвращает метаданные источника данных
//
// Параметры:
//  ЗаполнитьПредставления - Булево.
//
// Возвращаемое значение:
//   ОбъектМетаданныхТабличнаяЧасть	- Объект метаданных.
//
Функция ПолучитьМетаданныеИсточника(Объект, ЗаполнитьПредставления = Ложь) Экспорт
	Если Объект.ТипПрикладногоОбъекта = Перечисления.ТипыПрикладныхОбъектов.Справочник Тогда
		ОбъектМетаданныхСправочник = Метаданные.Справочники.Найти(Объект.ИмяПрикладногоОбъекта);
		Если ОбъектМетаданныхСправочник<>Неопределено Тогда
			
			ОбъектМетаданныхТабличнаяЧасть = ОбъектМетаданныхСправочник.ТабличныеЧасти.Найти(Объект.ИмяТабличнойЧасти);
			Если ОбъектМетаданныхТабличнаяЧасть<>Неопределено Тогда
				Если ЗаполнитьПредставления Тогда
					ПредставлениеТабличнойЧасти = ОбъектМетаданныхТабличнаяЧасть.Представление();
				КонецЕсли;
				Возврат ОбъектМетаданныхТабличнаяЧасть;
			КонецЕсли;
			
			Если ЗаполнитьПредставления Тогда
				ПредставлениеПрикладногоОбъекта = ОбъектМетаданныхСправочник.Представление();
			КонецЕсли;
			
			Возврат ОбъектМетаданныхСправочник;
		КонецЕсли;	
		
	ИначеЕсли Объект.ТипПрикладногоОбъекта = Перечисления.ТипыПрикладныхОбъектов.Документ Тогда
		ОбъектМетаданныхДокумент = Метаданные.Документы.Найти(Объект.ИмяПрикладногоОбъекта);
		Если ОбъектМетаданныхДокумент<>Неопределено Тогда
			Если ЗаполнитьПредставления Тогда
				ПредставлениеПрикладногоОбъекта = ОбъектМетаданныхДокумент.Представление();
			КонецЕсли;
			ОбъектМетаданныхТабличнаяЧасть = ОбъектМетаданныхДокумент.ТабличныеЧасти.Найти(Объект.ИмяТабличнойЧасти);
			Если ОбъектМетаданныхТабличнаяЧасть<>Неопределено Тогда
				Если ЗаполнитьПредставления Тогда
					ПредставлениеТабличнойЧасти = ОбъектМетаданныхТабличнаяЧасть.Представление();
				КонецЕсли;
				Возврат ОбъектМетаданныхТабличнаяЧасть;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Объект.ТипПрикладногоОбъекта = Перечисления.ТипыПрикладныхОбъектов.Обработка Тогда
		ОбъектМетаданныхОбработка = Метаданные.Обработки.Найти(Объект.ИмяПрикладногоОбъекта);
		Если ОбъектМетаданныхОбработка<>Неопределено Тогда
			Если ЗаполнитьПредставления Тогда
				ПредставлениеПрикладногоОбъекта = ОбъектМетаданныхОбработка.Представление();
			КонецЕсли;
			Возврат ОбъектМетаданныхОбработка;
		КонецЕсли;
		
	ИначеЕсли Объект.ТипПрикладногоОбъекта = Перечисления.ТипыПрикладныхОбъектов.РегистрСведений Тогда
		ОбъектМетаданныхРегистр = Метаданные.РегистрыСведений.Найти(Объект.ИмяПрикладногоОбъекта);
		Если ОбъектМетаданныхРегистр<>Неопределено Тогда
			Если ЗаполнитьПредставления Тогда
				ПредставлениеПрикладногоОбъекта = ОбъектМетаданныхРегистр.Представление();
			КонецЕсли;
			Возврат ОбъектМетаданныхРегистр;
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции // ПолучитьМетаданныеИсточника()

// Процедура заполняет настройки в структуру на основании табличного документа (выгрузка).
//
// Параметры:
//  Настройки - ТабличныйДокумент - Табличный документ.
//
// Возвращаемое значение:
//  <Структура>, Неопределено - Структура полученных настроек, неопределено в случае ошибки.
//
Функция ПолучитьНастройкиВыгрузкиИзТабличногоДокумента(Настройки) Экспорт
	
	Если ТипЗнч(Настройки)<>Тип("ТабличныйДокумент") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Исходные данные табличной части (КЕШ)
	мВыгружаемыеРеквизиты = Новый ТаблицаЗначений;	
	мВыгружаемыеРеквизиты.Колонки.Добавить("ТипПоля");
	мВыгружаемыеРеквизиты.Колонки.Добавить("Представление");
	мВыгружаемыеРеквизиты.Колонки.Добавить("ПолеДБФ");
	мВыгружаемыеРеквизиты.Колонки.Добавить("Тип");
	мВыгружаемыеРеквизиты.Колонки.Добавить("Длина");
	мВыгружаемыеРеквизиты.Колонки.Добавить("Точность");
	мВыгружаемыеРеквизиты.Колонки.Добавить("Данные");
	
	Попытка
		Версия = СокрЛП(Настройки.Область("R1C5").Текст);
		Если Версия = "1.0" Тогда
			мТипОбъекта = СокрЛП(Настройки.Область("R2C5").Текст);
			Если (((мТипОбъекта<> НСтр("ru = 'табличная часть документа'")) 
				И (мТипОбъекта<> НСтр("ru = 'табличная часть обработки'"))) 
				И (мТипОбъекта<>"справочник")) Тогда
				ОбщегоНазначения.СообщитьПользователю(НСтр("ru= 'Значение поля ""Тип объекта"" не корректно'"));
				Возврат Неопределено;
			КонецЕсли;
			
			Если мТипОбъекта=НСтр("ru = 'табличная часть документа'") Тогда
				мТипПрикладногоОбъекта = Перечисления.ТипыПрикладныхОбъектов.Документ;
			ИначеЕсли мТипОбъекта=НСтр("ru = 'табличная часть обработки'") Тогда
				мТипПрикладногоОбъекта = Перечисления.ТипыПрикладныхОбъектов.Обработка;
			Иначе
				мТипПрикладногоОбъекта = Перечисления.ТипыПрикладныхОбъектов.Справочник;
			КонецЕсли;
			
			мМетаданныеИсточника = Метаданные.НайтиПоПолномуИмени(Настройки.Область("R3C5").Текст);
			Если мМетаданныеИсточника = Неопределено Тогда
				ОбщегоНазначения.СообщитьПользователю(НСтр("ru= 'Ошибка определения метаданных'"));
				Возврат Неопределено;
			КонецЕсли;
			мФорматФайла = СокрЛП(Настройки.Область("R4C5").Текст);
			мКодировка   = СокрЛП(Настройки.Область("R5C5").Текст);
			мПередВыгрузкойОбъекта =  СокрЛП(Настройки.Область("R6C5").Текст);
			мПослеДобавленияСтроки =  СокрЛП(Настройки.Область("R7C5").Текст);
			
			ТекущаяСтрока = 10;
			ТекущаяСтрокаОбласти = "R" + Формат(ТекущаяСтрока, "ЧГ=");
			ПризнакСтроки = Настройки.Область(ТекущаяСтрокаОбласти+ "C1").Текст;
			
			Пока ПризнакСтроки = "Х" Цикл
				Попытка Длина    = Число(Настройки.Область(ТекущаяСтрокаОбласти + "C6").Текст); Исключение Длина = 0;    КонецПопытки;
				Попытка Точность = Число(Настройки.Область(ТекущаяСтрокаОбласти + "C7").Текст); Исключение Точность = 0; КонецПопытки;
				
				СтрокаИсходныхДанных = мВыгружаемыеРеквизиты.Добавить();
				
				СтрокаИсходныхДанных.ТипПоля       = Настройки.Область(ТекущаяСтрокаОбласти + "C2").Текст;
				СтрокаИсходныхДанных.Представление = Настройки.Область(ТекущаяСтрокаОбласти + "C3").Текст;
				СтрокаИсходныхДанных.ПолеДБФ       = Настройки.Область(ТекущаяСтрокаОбласти + "C4").Текст;
				СтрокаИсходныхДанных.Тип           = Настройки.Область(ТекущаяСтрокаОбласти + "C5").Текст;
				СтрокаИсходныхДанных.Длина         = Длина;
				СтрокаИсходныхДанных.Точность      = Точность;
				СтрокаИсходныхДанных.Данные        = Настройки.Область(ТекущаяСтрокаОбласти + "C8").Текст;
							
				ТекущаяСтрока = ТекущаяСтрока + 1;
				ТекущаяСтрокаОбласти = "R" + Формат(ТекущаяСтрока, "ЧГ=");
				ПризнакСтроки = Настройки.Область(ТекущаяСтрокаОбласти+ "C1").Текст;
			КонецЦикла;
		Иначе
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru= 'Файл не содержит настройки выгрузки данных'"));
			Возврат Неопределено;
		КонецЕсли;
	Исключение
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru= '%1'"), ОписаниеОшибки());
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Возврат Неопределено;
	КонецПопытки;
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ТипПрикладногоОбъекта",мТипПрикладногоОбъекта);
	СтруктураНастроек.Вставить("МетаданныеИсточника",мМетаданныеИсточника);
	СтруктураНастроек.Вставить("ФорматФайла",мФорматФайла);
	СтруктураНастроек.Вставить("Кодировка",мКодировка);
	СтруктураНастроек.Вставить("ПередВыгрузкойОбъекта",мПередВыгрузкойОбъекта);
	СтруктураНастроек.Вставить("ПослеДобавленияСтроки",мПослеДобавленияСтроки);
	СтруктураНастроек.Вставить("ВыгружаемыеРеквизиты",мВыгружаемыеРеквизиты);

	Возврат СтруктураНастроек;
	
КонецФункции // ПолучитьНастройкиВыгрузкиИзТабличногоДокумента()

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты объекта
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("ВариантИспользованияНастройки");
	ОбязательныеРеквизиты.Добавить("ТипПрикладногоОбъекта");
	ОбязательныеРеквизиты.Добавить("ИмяПрикладногоОбъекта");
	ОбязательныеРеквизиты.Добавить("Наименование");
	ОбязательныеРеквизиты.Добавить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

#КонецОбласти

#КонецЕсли