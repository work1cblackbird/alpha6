///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Карточки"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	// ПодключаемоеОборудование
	ТипыОборудования = МенеджерОборудованияКлиентСервер.ПараметрыТипыОборудования();
	ТипыОборудования.СканерШтрихкода = Истина;
	ТипыОборудования.СчитывательМагнитныхКарт = Истина;
	МенеджерОборудования.ПриСозданииНаСервере(ЭтаФорма, ТипыОборудования);
	// Конец ПодключаемоеОборудование
	
	ШтрихКоды = ШтрихкодированиеВызовСервера.ПолучитьШтрихКодОбъекта(Объект.Ссылка,,, Истина);
	Если ШтрихКоды.Количество() > 0 Тогда
		ШтрихКод = ШтрихКоды[0].Штрихкод;
		ШтрихкодБлокировка = ШтрихКоды[0].Запрет;
	КонецЕсли;
	
	ТекущийВидКарточки = Объект.ВидКарточки;
	
	СформироватьНаименованиеПоУмолчанию();
	КэшНаименование = Справочники.Карточки.СформироватьНаименованиеПоУмолчанию(Объект, Штрихкод);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия = Неопределено)
	
	Если НЕ УправлениеДиалогомДокументаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ВводДоступен() И ИмяСобытия = "ScanData" Тогда
		
		ПолученныйШтрихкод = ШтрихкодированиеКлиент.ПолучитьШтрихкодИзПараметровОборудования(ИмяСобытия, Параметр);
		
		Если ЗначениеЗаполнено(ПолученныйШтрихкод) Тогда
			
			ПараметрыДействия = Новый Структура;
			ШтрихкодированиеКлиент.ОбработатьПолныйШтрихкод(ПолученныйШтрихкод, ПараметрыДействия);
			Штрихкод = ПараметрыДействия.Штрихкод;
			ШтрихКодПриИзмененииНаСервере();
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("СкладыКомпании");
	
	ПропуститьПроверкуУникальности = ПараметрыЗаписи.Свойство("ПропуститьПроверкуУникальности") ИЛИ (ПараметрыЗаписи.Свойство("ПропуститьПроверкуУникальности") И ПараметрыЗаписи.ПропуститьПроверкуУникальности);
	Если ЗначениеЗаполнено(Штрихкод) И НЕ ПропуститьПроверкуУникальности Тогда
		ШтрихкодированиеКлиент.ПроверкаШтрихкодовПередЗаписью(ЭтотОбъект, Штрихкод, Объект.Ссылка, Отказ);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Родитель) Тогда
		Справочники.Карточки.ПолучитьРодителя(ТекущийОбъект);
		Справочники.Карточки.СформироватьПолноеНаименование(ТекущийОбъект);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов   
	
	ЗаписатьШтрихкодыНаСервере();	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ОбъектПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Справочники.Карточки.СформироватьПолноеНаименование(Объект, ПараметрыДействия);
	Объект.Наименование =  Справочники.Карточки.СформироватьНаименованиеПоУмолчанию(Объект, Штрихкод);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	
	ОбъектПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура РодительПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Справочники.Карточки.РодительПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	РодительПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура НоминалПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Справочники.Карточки.СформироватьПолноеНаименование(Объект, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура НоминалПриИзменении(Элемент)
	
	НоминалПриИзмененииНаСервере(Штрихкод);
	
КонецПроцедуры 

&НаСервере
Процедура ВидКарточкиПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Справочники.Карточки.ВидКарточкиПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ВидКарточкиПриИзменении(Элемент)
	
	ВидКарточкиПриИзмененииНаСервере();
	
	Если ЗначениеЗаполнено(Объект.ВидКарточки) И Объект.ВидКарточки <> ТекущийВидКарточки Тогда
		Объект.Объект = Неопределено;
	КонецЕсли;
	
	ТекущийВидКарточки = Объект.ВидКарточки;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Если ТипОбъектаСтрока(Объект.ВидКарточки) Тогда
		СписокДляВыбора = Новый СписокЗначений();
		СписокДляВыбора.Добавить("ЗавершитьРаботу", НСтр("ru = 'Завершить работу'"));
		СписокДляВыбора.Добавить("ОбновитьПраваПользователя", НСтр("ru = 'Обновить права пользователя'"));
		СписокДляВыбора.Добавить("ПереинициализироватьОборудование", НСтр("ru = 'Переинициализировать оборудование'"));
		СписокДляВыбора.Добавить("НажатьКлавишу.", НСтр("ru = 'Нажать клавишу'"));
		СписокДляВыбора.Добавить("Форма.", НСтр("ru = 'Действие формы'"));
		
		ОбработчикВыбораИзМеню = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияОбъект", ЭтотОбъект);
		ПоказатьВыборИзМеню(ОбработчикВыбораИзМеню, СписокДляВыбора, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолноеНаименованиеНачалоВыбораНаСервере(ПараметрыДействия = Неопределено)
	
	Справочники.Карточки.СформироватьПолноеНаименование(Объект, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолноеНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ПустаяСтрока(Объект.ПолноеНаименование) Тогда
		Оповещение = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияСформироватьПолноеНаименование", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Сформировать новое полное наименование?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ПолноеНаименованиеНачалоВыбораНаСервере();
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ШтрихКодПриИзмененииНаСервере()
	
	СформироватьНаименованиеПоУмолчанию();
	
КонецПроцедуры 

&НаКлиенте
Процедура ШтрихКодПриИзменении(Элемент)
	
	ШтрихКодПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ШтрихКодНачалоВыбораНаСервере()
	
	Штрихкод = ШтрихкодированиеВызовСервера.СформироватьНовыйШтрихкод(Объект.Ссылка, 22);
	ШтрихкодПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ШтрихКодНачалоВыбора()
	
	ШтрихКодНачалоВыбораНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихКодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ШтрихКод) Тогда
		Оповещение = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияШтрихкод", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Создать новый штрихкод карточки?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ПодключитьОбработчикОжидания("Подключаемый_ШтрихКодНачалоВыбора", 0.1, Истина);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	КэшНаименование = ВыбранноеЗначение;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ТипОбъектаСтрока(ВидКарточки, ПараметрыДействия = Неопределено)
	
	Возврат ВидКарточки = Перечисления.ВидыКарточек.УдалитьСлужебнаяОперация;
	
КонецФункции

&НаСервере
Процедура ЗаписатьШтрихкодыНаСервере()
	
	СтруктураШтрихкод = Новый Структура("Штрихкод,Запрет",ШтрихКод, ШтрихкодБлокировка);
	Если НЕ ШтрихкодированиеВызовСервера.ЗаписатьШтрихкоды(Объект.Ссылка, СтруктураШтрихкод) Тогда
		ТекстОшибки = НСтр("ru = 'Ошибка записи штрихкода карточки.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияПриИзмененииШтрихкода(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		Записать(Новый Структура("ПропуститьПроверкуУникальности",Истина));
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияСформироватьПолноеНаименование(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		ПолноеНаименованиеНачалоВыбораНаСервере();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияШтрихкод(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		ШтрихКодНачалоВыбораНаСервере();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияОбъект(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ РезультатОповещения = Неопределено Тогда
		Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("ПараметрыКомандыОбъекта") Тогда
			Объект.Объект = ДополнительныеПараметры.ПараметрыКомандыОбъекта +  " " + РезультатОповещения;
			Объект.Комментарий = ДополнительныеПараметры.ПараметрыКомандыОбъекта;
			ОбъектПриИзменении(ТекущийЭлемент);
		Иначе
			Если СтрНайти(РезультатОповещения.Значение,".") = 0 Тогда
				Объект.Объект = РезультатОповещения.Значение;
				Объект.Комментарий = РезультатОповещения.Представление;
				ОбъектПриИзменении(ТекущийЭлемент);
			Иначе
				ПараметрКоманды = "";
				// Формируем описание обработчика перехвата закрытия формы
				ОбработчикВводаСтроки = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияОбъект", ЭтотОбъект, 
										Новый Структура("ПараметрыКомандыОбъекта", РезультатОповещения.Представление));
				ПоказатьВводСтроки(ОбработчикВводаСтроки,ПараметрКоманды, НСтр("ru = 'Укажите параметры команды'") + " """ 
				  +РезультатОповещения.Представление + """ :", 250, Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура СформироватьНаименованиеПоУмолчанию(ПараметрыДействия = Неопределено)
	
	УправлениеДиалогомСервер.СформироватьЗначениеПоУмолчанию(ЭтотОбъект, Объект, Штрихкод);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Если Справочники.Карточки.ПолучитьВидКарточки(Объект.Родитель) = Справочники.Карточки.Талон Тогда
		Элементы.Номинал.Видимость   = Истина;
		Элементы.Номинал.Доступность = Истина;
		Элементы.ШтрихКодБлокировка.Видимость    = Ложь;
		Элементы.ШтрихКодБлокировка.Доступность  = Ложь;
	Иначе
		Элементы.Номинал.Видимость       = Ложь;
		Элементы.Номинал.Доступность     = Ложь;
		Элементы.ШтрихКодБлокировка.Видимость   = Истина;
		Элементы.ШтрихКодБлокировка.Доступность = Истина;
	КонецЕсли;
	
	Если ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
		Элементы.Объект.Заголовок = "Контрагент";
	ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.Пользователи") Тогда
		Элементы.Объект.Заголовок = "Пользователь";
	ИначеЕсли ТипЗнч(Объект.Объект) = Тип("Строка") Тогда
		Элементы.Объект.Заголовок = "Команда";
	ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.Сотрудники") Тогда
		Элементы.Объект.Заголовок = "Сотрудник";
	КонецЕсли;
	
	врВидКарточки = Справочники.Карточки.ПолучитьВидКарточки(Объект.Родитель);
	Если врВидКарточки = Справочники.Карточки.ДисконтнаяКарта Тогда
		ТипОбъекта="СправочникСсылка.Контрагенты";
		Элементы.Объект.КнопкаВыбора = Истина;
		Элементы.Объект.КнопкаОткрытия = Истина;
		Элементы.Объект.Заголовок = "Контрагент";
	ИначеЕсли врВидКарточки = Справочники.Карточки.КарточкаПользователя Тогда
		ТипОбъекта="СправочникСсылка.Пользователи";
		Элементы.Объект.КнопкаВыбора = Истина;
		Элементы.Объект.КнопкаОткрытия = Истина;
		Элементы.Объект.Заголовок = "Пользователь";
	ИначеЕсли врВидКарточки = Справочники.Карточки.УдалитьСлужебнаяОперация Тогда
		ТипОбъекта="Строка";
		Элементы.Объект.КнопкаВыбора = Истина;
		Элементы.Объект.КнопкаОткрытия = Ложь;
		Элементы.Объект.Заголовок = "Команда";
	ИначеЕсли врВидКарточки = Справочники.Карточки.ПрофилиСкидок Тогда
		ТипОбъекта = "СправочникСсылка.Контрагенты";
		
		Элементы.Объект.КнопкаВыбора   = Ложь;
		Элементы.Объект.КнопкаОткрытия = Ложь;
	ИначеЕсли врВидКарточки = Справочники.Карточки.Чистая Тогда
		Если Объект.Объект <> Неопределено Тогда // во избежание лишней модифицированности
			Объект.Объект = Неопределено;
		КонецЕсли;
		Элементы.Объект.КнопкаВыбора = Ложь;
		Элементы.Объект.КнопкаОткрытия = Ложь;
		Элементы.Объект.Доступность = Ложь;
		Элементы.Объект.Заголовок = "<" + НСтр("ru = 'Не назначено'") + ">";
		Возврат;
	ИначеЕсли врВидКарточки = Справочники.Карточки.КлубнаяКарта
			ИЛИ врВидКарточки = Справочники.Карточки.Талон Тогда
		ТипОбъекта = "СправочникСсылка.ДоговорыВзаиморасчетов";
		Элементы.Объект.КнопкаВыбора = Истина;
		Элементы.Объект.КнопкаОткрытия = Истина;
		Элементы.Объект.Заголовок = "Договор";
	ИначеЕсли врВидКарточки = Справочники.Карточки.КарточкаСотрудника Тогда
		ТипОбъекта="СправочникСсылка.Сотрудники";
		Элементы.Объект.КнопкаВыбора = Истина;
		Элементы.Объект.КнопкаОткрытия = Истина;
		Элементы.Объект.Заголовок = "Сотрудник";
	Иначе
		Если Объект.Объект <> Неопределено Тогда // во избежание лишней модифицированности
			Объект.Объект = Неопределено;
		КонецЕсли;
		Элементы.Объект.КнопкаВыбора = Ложь;
		Элементы.Объект.КнопкаОткрытия = Ложь;
		Элементы.Объект.Доступность = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.Объект.Доступность = (врВидКарточки <> Справочники.Карточки.ПрофилиСкидок);
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип(ТипОбъекта));
	Если ТипОбъекта = "Строка" Тогда
		КС = Новый КвалификаторыСтроки(50);
		Типы = Новый ОписаниеТипов(МассивТипов,, КС);
	Иначе
		Типы = Новый ОписаниеТипов(МассивТипов);
	КонецЕсли;
	Элементы.Объект.ОграничениеТипа = Типы;
	Если (НЕ ТипЗнч(Объект.Объект) = Тип("Строка")) И (ТипОбъекта = "Строка") Тогда
		Объект.Объект = "";
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	УправлениеДиалогомСправочникаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

