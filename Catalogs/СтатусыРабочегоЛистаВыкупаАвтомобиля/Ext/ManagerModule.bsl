
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника Организации.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением.
//                                  Например:
//                                    Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                    ЭлементТЧ = Элемент.Ключи.Добавить();
//                                    ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Новый";
	Элемент.Код                       = "000000001";
	Элемент.Наименование              = НСтр("ru = 'Новый'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.РеквизитДопУпорядочивания = 1;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Закрыт";
	Элемент.Код                       = "000000002";
	Элемент.Наименование              = НСтр("ru = 'Закрыт'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.РеквизитДопУпорядочивания = 7;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОтказВВыкупе";
	Элемент.Код                       = "000000003";
	Элемент.Наименование              = НСтр("ru = 'Отказ в выкупе'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.РеквизитДопУпорядочивания = 5;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОтказКлиента";
	Элемент.Код                       = "000000004";
	Элемент.Наименование              = НСтр("ru = 'Отказ клиента'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.РеквизитДопУпорядочивания = 6;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПредварительнаяОценка";
	Элемент.Код                       = "000000005";
	Элемент.Наименование              = НСтр("ru = 'Предварительная оценка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.РеквизитДопУпорядочивания = 2;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Оценка";
	Элемент.Код                       = "000000006";
	Элемент.Наименование              = НСтр("ru = 'Оценка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.РеквизитДопУпорядочивания = 3;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Договор";
	Элемент.Код                       = "000000007";
	Элемент.Наименование              = НСтр("ru = 'Договор'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.РеквизитДопУпорядочивания = 3;

КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	Возврат ОбязательныеРеквизиты;
	
КонецФункции

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	Возврат УникальныеРеквизиты;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СтатусыРабочегоЛистаВыкупаАвтомобиля.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(СтатусыРабочегоЛистаВыкупаАвтомобиля.Ссылка) КАК СсылкаПредставление
		|ИЗ
		|	Справочник.СтатусыРабочегоЛистаВыкупаАвтомобиля КАК СтатусыРабочегоЛистаВыкупаАвтомобиля
		|ГДЕ
		|	НЕ СтатусыРабочегоЛистаВыкупаАвтомобиля.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатусыРабочегоЛистаВыкупаАвтомобиля.РеквизитДопУпорядочивания"
	);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда	
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.СсылкаПредставление);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
