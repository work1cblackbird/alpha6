// Модуль менеджера справочника "Статьи ДДС"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника Организации.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением.
//                                  Например:
//                                    Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                    ЭлементТЧ = Элемент.Ключи.Добавить();
//                                    ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаОтПокупателя";
	Элемент.Код                       = "000001001";
	Элемент.Наименование              = НСтр("ru = 'Оплата от покупателей'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыСПокупателями;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПредоплатаОтПокупателя";
	Элемент.Код                       = "000001002";
	Элемент.Наименование              = НСтр("ru = 'Предоплата от покупателя'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыПоАвансамПолученным;
	Элемент.РазрешитьВводАвансовойСчетФактуры = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РозничнаяВыручка";
	Элемент.Код                       = "000001003";
	Элемент.Наименование              = НСтр("ru = 'Розничная выручка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.Выручка;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВозвратОтПоставщика";
	Элемент.Код                       = "000001004";
	Элемент.Наименование              = НСтр("ru = 'Возврат от поставщиков'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыСПоставщиками;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВозвратИзПодОтчета";
	Элемент.Код                       = "000001005";
	Элемент.Наименование              = НСтр("ru = 'Возврат подотчетных сумм'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыСПодотчетнымиЛицами; 
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаОтФакторинговойКомпании";
	Элемент.Код                       = "000001006";
	Элемент.Наименование              = НСтр("ru = 'Оплата от факторинговой компании'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПродаж;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПолучениеКредитовИЗаймов";
	Элемент.Код                       = "000001007";
	Элемент.Наименование              = НСтр("ru = 'Получение кредитов и займов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеДоходы; 
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПоступленияОтПогашенияЗаймов";
	Элемент.Код                       = "000001008";
	Элемент.Наименование              = НСтр("ru = 'Поступления от погашения займов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПоступленияОтУчредителей";
	Элемент.Код                       = "000001009";
	Элемент.Наименование              = НСтр("ru = 'Поступления от учредителей'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеПоступления";
	Элемент.Код                       = "000001010";
	Элемент.Наименование              = НСтр("ru = 'Прочие поступления'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеДоходы;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаПоставщику";
	Элемент.Код                       = "000002001";
	Элемент.Наименование              = НСтр("ru = 'Оплата поставщикам (подрядчикам)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыСПоставщиками;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПредоплатаПоставщику";
	Элемент.Код                       = "00002002";
	Элемент.Наименование              = НСтр("ru = 'Предоплата поставщику'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыПоАвансамВыданным;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыдачаПодОтчет";
	Элемент.Код                       = "000002003";
	Элемент.Наименование              = НСтр("ru = 'Выдача подотчетных сумм'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыСПодотчетнымиЛицами;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВозвратПокупателю";
	Элемент.Код                       = "000002004";
	Элемент.Наименование              = НСтр("ru = 'Возврат покупателям'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыСПокупателями;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаНалоговИСборов";
	Элемент.Код                       = "000002005";
	Элемент.Наименование              = НСтр("ru = 'Прочие налоги и сборы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыПоНалогам;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыдачаЗП";
	Элемент.Код                       = "000002006";
	Элемент.Наименование              = НСтр("ru = 'Выплата заработной платы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.РасчетыСПерсоналомПоОплатеТруда;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаБанковскихУслуг";
	Элемент.Код                       = "000002007";
	Элемент.Наименование              = НСтр("ru = 'Расходы на услуги банков'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы; 
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыплатаПроцентовПоКредитам";
	Элемент.Код                       = "000002008";
	Элемент.Наименование              = НСтр("ru = 'Выплата процентов по кредитам и займам'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы; 
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НалогНаПрибыль";
	Элемент.Код                       = "000002009";
	Элемент.Наименование              = НСтр("ru = 'Налог на прибыль'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы;  
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПогашениеКредитовИЗаймов";
	Элемент.Код                       = "000002010";
	Элемент.Наименование              = НСтр("ru = 'Погашение кредитов и займов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПредоставлениеЗаймов";
	Элемент.Код                       = "000002011";
	Элемент.Наименование              = НСтр("ru = 'Предоставление займов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеРасходы";
	Элемент.Код                       = "000002012";
	Элемент.Наименование              = НСтр("ru = 'Прочие расходы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПеремещениеДС";
	Элемент.Код                       = "000003001";
	Элемент.Наименование              = НСтр("ru = 'Внутреннее перемещение денежных средств'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Прочее;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.Вспомогательный;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВводОстатковДС";
	Элемент.Код                       = "000003002";
	Элемент.Наименование              = НСтр("ru = 'Ввод остатков ДС'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Прочее;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.Вспомогательный;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницы";
	Элемент.Код                       = "000003003";
	Элемент.Наименование              = НСтр("ru = 'Курсовые разницы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Прочее;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НедостачаДенежныхСредств";
	Элемент.Код                       = "000003004";
	Элемент.Наименование              = НСтр("ru = 'Недостача денежных средств'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Прочее;
	Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.Вспомогательный;


КонецПроцедуры

// Актуализация предопределеннных элементов.
//
Процедура АктуализацияПредопределеннныхЭлементов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДДС.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиДДС КАК СтатьиДДС
		|ГДЕ
		|	СтатьиДДС.Предопределенный = ИСТИНА
		|	И СтатьиДДС.ЭтоГруппа = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл	
			Элемент = Выборка.Ссылка.ПолучитьОбъект();
			Элемент.ОбменДанными.Загрузка = Истина;				
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);	
			Если Выборка.Ссылка = Справочники.СтатьиДДС.ПеремещениеДС Тогда
				Элемент.Наименование = НСтр("ru = 'Внутреннее перемещение денежных средств'", ОбщегоНазначения.КодОсновногоЯзыка());
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВозвратОтПоставщика Тогда
				Элемент.Наименование = НСтр("ru = 'Возврат от поставщиков'", ОбщегоНазначения.КодОсновногоЯзыка()); 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВозвратИзПодОтчета Тогда
				Элемент.Наименование = НСтр("ru = 'Возврат подотчетных сумм'", ОбщегоНазначения.КодОсновногоЯзыка());
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВозвратПокупателю Тогда
				Элемент.Наименование = НСтр("ru = 'Возврат покупателям'", ОбщегоНазначения.КодОсновногоЯзыка());
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВыдачаПодОтчет Тогда
				Элемент.Наименование = НСтр("ru = 'Выдача подотчетных сумм'", ОбщегоНазначения.КодОсновногоЯзыка()); 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВыдачаЗП Тогда
				Элемент.Наименование = НСтр("ru = 'Выплата заработной платы'", ОбщегоНазначения.КодОсновногоЯзыка());
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВыплатаПроцентовПоКредитам Тогда
				Элемент.ИмяПредопределенныхДанных = "ВыплатаПроцентовПоКредитам";
				Элемент.Код                       = "000002008";
				Элемент.Наименование              = НСтр("ru = 'Выплата процентов по кредитам и займам'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.НалогНаПрибыль Тогда
				Элемент.ИмяПредопределенныхДанных = "НалогНаПрибыль";
				Элемент.Код                       = "000002009";
				Элемент.Наименование              = НСтр("ru = 'Налог на прибыль'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы;	
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.НедостачаДенежныхСредств Тогда
				Элемент.ИмяПредопределенныхДанных = "НедостачаДенежныхСредств";
				Элемент.Код                       = "000003004";
				Элемент.Наименование              = НСтр("ru = 'Недостача денежных средств'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Прочее; 
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.Вспомогательный;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаОтПокупателя Тогда
				Элемент.Наименование = НСтр("ru = 'Оплата от покупателей'", ОбщегоНазначения.КодОсновногоЯзыка());
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаОтФакторинговойКомпании Тогда
				Элемент.ИмяПредопределенныхДанных = "ОплатаОтФакторинговойКомпании";
				Элемент.Код                       = "000001006";
				Элемент.Наименование              = НСтр("ru = 'Оплата от факторинговой компании'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПродаж;	
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаПоставщику Тогда
				Элемент.Наименование = НСтр("ru = 'Оплата поставщикам (подрядчикам)'", ОбщегоНазначения.КодОсновногоЯзыка());
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ПогашениеКредитовИЗаймов Тогда
				Элемент.ИмяПредопределенныхДанных = "ПогашениеКредитовИЗаймов";
				Элемент.Код                       = "000002010";
				Элемент.Наименование              = НСтр("ru = 'Погашение кредитов и займов'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ПолучениеКредитовИЗаймов Тогда
				Элемент.ИмяПредопределенныхДанных = "ПолучениеКредитовИЗаймов";
				Элемент.Код                       = "000001007";
				Элемент.Наименование              = НСтр("ru = 'Получение кредитов и займов'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ПоступленияОтПогашенияЗаймов Тогда
				Элемент.ИмяПредопределенныхДанных = "ПоступленияОтПогашенияЗаймов";
				Элемент.Код                       = "000001008";
				Элемент.Наименование              = НСтр("ru = 'Поступления от погашения займов'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ПоступленияОтУчредителей Тогда
				Элемент.ИмяПредопределенныхДанных = "ПоступленияОтУчредителей";
				Элемент.Код                       = "000001009";
				Элемент.Наименование              = НСтр("ru = 'Поступления от учредителей'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ПредоставлениеЗаймов Тогда
				Элемент.ИмяПредопределенныхДанных = "ПредоставлениеЗаймов";
				Элемент.Код                       = "000002011";
				Элемент.Наименование              = НСтр("ru = 'Предоставление займов'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаНалоговИСборов Тогда
				Элемент.Наименование = НСтр("ru = 'Прочие налоги и сборы'", ОбщегоНазначения.КодОсновногоЯзыка());
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ПрочиеПоступления Тогда
				Элемент.ИмяПредопределенныхДанных = "ПрочиеПоступления";
				Элемент.Код                       = "000001010";
				Элемент.Наименование              = НСтр("ru = 'Прочие поступления'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Приход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ПрочиеРасходы Тогда
				Элемент.ИмяПредопределенныхДанных = "ПрочиеРасходы";
				Элемент.Код                       = "000002012";
				Элемент.Наименование              = НСтр("ru = 'Прочие расходы'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДвижения               = Перечисления.ВидыДвижений.Расход;
				Элемент.КоррСчет                  = ПланыСчетов.Регламентированный.ПрочиеРасходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаБанковскихУслуг Тогда
				Элемент.Наименование = НСтр("ru = 'Расходы на услуги банков'", ОбщегоНазначения.КодОсновногоЯзыка());	
			КонецЕсли;
			Элемент.Записать();
		Исключение
			 ЗаписьЖурналаРегистрации(
			 	НСтр("ru = 'Ошибка обновления справочника Подразделения компании'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
    			УровеньЖурналаРегистрации.Предупреждение,
				,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
					
		КонецПопытки;		
		
	КонецЦикла;
	
	ЗаполнитьВидОперации();
	
КонецПроцедуры

// Обновление предопределеннных элементов.
//
Процедура ОбновлениеПредопределеннныхЭлементов() Экспорт
	
	СсылкаНаСтатью = Справочники.СтатьиДДС.ПредоплатаОтПокупателя;
	ПолученныйОбъект = СсылкаНаСтатью.ПолучитьОбъект();
	ПолученныйОбъект.ОбменДанными.Загрузка = Истина;
	ПолученныйОбъект.РазрешитьВводАвансовойСчетФактуры = Истина;
	Попытка
		ЗаблокироватьДанныеДляРедактирования(ПолученныйОбъект.Ссылка);
		ПолученныйОбъект.Записать();
	Исключение
		ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Ошибка обновления справочника Статьи ДДС'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Предупреждение,
		,,
		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		
	КонецПопытки;
	
КонецПроцедуры

// Заполнение вида операции.
//
Процедура ЗаполнитьВидОперации() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДДС.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиДДС КАК СтатьиДДС
		|ГДЕ
		|	СтатьиДДС.Предопределенный = ИСТИНА
		|	И СтатьиДДС.ЭтоГруппа = ЛОЖЬ
		|	И СтатьиДДС.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДвиженияДенежныхСредств.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл	
			Элемент = Выборка.Ссылка.ПолучитьОбъект();
			Элемент.ОбменДанными.Загрузка = Истина;				
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);	
			Если Выборка.Ссылка = Справочники.СтатьиДДС.ВводОстатковДС  
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.КурсовыеРазницы 
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ПеремещениеДС 
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.РозничнаяВыручка
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ВыплатаПроцентовПоКредитам
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.НедостачаДенежныхСредств
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаОтФакторинговойКомпании
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ПогашениеКредитовИЗаймов 
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ПолучениеКредитовИЗаймов
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ПоступленияОтПогашенияЗаймов
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ПоступленияОтУчредителей
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ПрочиеПоступления
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ПрочиеРасходы
			Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.Прочее");
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВозвратИзПодОтчета Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.ВозвратПодотчетныхСумм");
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВозвратОтПоставщика Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.ВозвратОтПоставщика"); 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВозвратПокупателю Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.ВозвратОплатыПокупателю");
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВыдачаЗП Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.ПеречислениеЗаработнойПлаты");
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ВыдачаПодОтчет Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.ПеречислениеПодОтчет"); 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаБанковскихУслуг Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.КомиссияБанка");
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаНалоговИСборов 
				ИЛИ	Выборка.Ссылка = Справочники.СтатьиДДС.НалогНаПрибыль Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.ПеречислениеНалога");
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаОтПокупателя 
				ИЛИ Выборка.Ссылка = Справочники.СтатьиДДС.ПредоплатаОтПокупателя Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.ПоступлениеОтПокупателя");
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДДС.ОплатаПоставщику 
				ИЛИ	Выборка.Ссылка = Справочники.СтатьиДДС.ПредоплатаПоставщику Тогда
				Элемент.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДенежныхСредств.ОплатаПоставщику");
			КонецЕсли;
			Элемент.Записать();
		Исключение
			 ЗаписьЖурналаРегистрации(
			 	НСтр("ru = 'Ошибка обновления справочника Подразделения компании'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
    			УровеньЖурналаРегистрации.Предупреждение,
				,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
					
		КонецПопытки;		
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	// Обработаем в зависимости от вида элемента
	Если НЕ Объект.ЭтоГруппа Тогда
		ОбязательныеРеквизиты.Добавить("ВидДвижения");
	КонецЕсли;
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// 	 Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

#КонецЕсли