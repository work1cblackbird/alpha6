///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Статьи ДДС"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	УстановитьОтборВидаОперации();
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда

		УправлениеДиалогомНаСервере();
		
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеДиалогомНаСервере();

КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("СтатьиДДС");
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

#КонецОбласти   

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ВидДвиженияПриИзменении(Элемент)
	УстановитьОтборВидаОперации();
КонецПроцедуры  
#КонецОбласти 


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборВидаОперации() 
	
	ПараметрыВыбораОпераций = Новый Массив();
	Операции = Новый Массив();
	
	Если ЭтаФорма.Объект.ВидДвижения = Перечисления.ВидыДвижений.Приход Тогда
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВозвратЗаймаСотрудником);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВозвратКредитаБанку);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВозвратНалогов);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВозвратОплатыПокупателю);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВозвратОтПоставщика);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВозвратПодотчетныхСумм);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПоступлениеОтПокупателя);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПоступленияПоПлатежнымКартам);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПрочееПоступление);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПрочиеДоходы); 
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВзносНаличнымиИзКассы); 
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПолучениеНаличныхВБанке); 
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПереводСДругогоСчетаОрганизации);
	ИначеЕсли ЭтаФорма.Объект.ВидДвижения = Перечисления.ВидыДвижений.Расход Тогда
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.КомиссияБанка);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ОплатаПоставщику);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВозвратОплатыПокупателю);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПеречислениеЗаймаСотруднику);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПеречислениеЗаработнойПлаты); 
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПеречислениеЗаработнойПлатыСотруднику);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПеречислениеНалога); 
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПеречислениеПодОтчет);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПрочееСписание);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПрочиеРасходы);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.Инкассация);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПереводНаДругойСчетОрганизации);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.СнятиеНаличныхВКассу);
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВзносНаличнымиВБанк);
	ИначеЕсли ЭтаФорма.Объект.ВидДвижения = Перечисления.ВидыДвижений.Прочее Тогда
		Операции.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.Прочее); 
	КонецЕсли;
	
	Параметр = Новый ПараметрВыбора("Отбор.Ссылка",Новый ФиксированныйМассив(Операции)); 
	ПараметрыВыбораОпераций.Добавить(Параметр);
	ЭтаФорма.Элементы.Операция.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораОпераций);	
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

