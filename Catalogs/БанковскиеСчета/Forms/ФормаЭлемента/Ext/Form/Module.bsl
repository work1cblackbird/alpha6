
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	ВладелецСчета = Объект.Владелец;
	
	СформироватьНаименованиеПоУмолчанию();
	КэшНаименование = Справочники.БанковскиеСчета.СформироватьНаименованиеПоУмолчанию(Объект);
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
	// Дальнейшие операции выполняются только для новых объектов
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	// Обновим параметры выбора элементов формы
	ОбновитьПредупреждениеНомерСчета();
	УправлениеДиалогомНаСервере();
	Элементы.Банк.АктивизироватьПоУмолчанию = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
	ПараметрыДействия = Новый Структура;
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьПредупреждениеНомерСчета();
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыЗаписи.Вставить("Оповестить", Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ВладелецСчета = Объект.Владелец;
	
	Если ПолучитьЗначениеПараметраСтруктуры(ПараметрыЗаписи, "Оповестить", Ложь) Тогда
		Оповестить("ЗаписанБанковскийСчет", Объект.Ссылка, ВладелецФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ВалютаДенежныхСредствПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	ВалютаДенежныхСредствПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НомерСчетаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	ОбновитьПредупреждениеНомерСчета();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	НомерСчетаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура БанкПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	
	БанкПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВидСчетаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСчетаПриИзменении(Элемент)
	
	ВидСчетаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	СообщитьОбИзмененииВладельца();
	
	ВладелецПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	КэшНаименование = ВыбранноеЗначение;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СообщитьОбИзмененииВладельца()
	
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		Возврат
	КонецЕсли;
	
	МассивТиповВладельцев = Новый Массив;
	МассивТиповВладельцев.Добавить(Тип("СправочникСсылка.Организации"));
	МассивТиповВладельцев.Добавить(Тип("СправочникСсылка.ПодразделенияКомпании"));
	
	ТипВладельца = ТипЗнч(Объект.Владелец);
	ТипВладельцаСчета = ТипЗнч(ВладелецСчета);
	
	Если ТипВладельца <> ТипВладельцаСчета 
		И ((НЕ МассивТиповВладельцев.Найти(ТипВладельца) = Неопределено) И ТипВладельцаСчета = Тип("СправочникСсылка.Контрагенты")
		ИЛИ (НЕ МассивТиповВладельцев.Найти(ТипВладельцаСчета) = Неопределено) И ТипВладельца = Тип("СправочникСсылка.Контрагенты")) Тогда
		
		ПоказатьПредупреждение(,
			НСтр("ru = 'Изменен владелец банковского счета. Изменение может повлиять на использование данного банковского счета.'"),,
			НСтр("ru = 'Изменение владельца банковского счета'"));
		
	КонецЕсли;
	
	ВладелецСчета = Объект.Владелец;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаименованиеПоУмолчанию(ПараметрыДействия=Неопределено)
	
	УправлениеДиалогомСервер.СформироватьЗначениеПоУмолчанию(ЭтотОбъект,Объект, ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредупреждениеНомерСчета()
	
	РезультатПроверки = Справочники.БанковскиеСчета.ПроверитьНомерСчета(Объект.НомерСчета, Объект.Банк);
	Декорация = Элементы.ПредупреждениеНомерСчета;
	ПолеВвода = Элементы.НомерСчета;
	
	Если РезультатПроверки.ЭтоОшибка Тогда
		
		Декорация.Видимость              = Истина;
		ПолеВвода.АвтоМаксимальнаяШирина = Ложь;
		Декорация.Подсказка              = РезультатПроверки.Текст;
		Возврат;
		
	КонецЕсли;
	
	Декорация.Видимость              = Ложь;
	ПолеВвода.АвтоМаксимальнаяШирина = Истина;
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Элементы.ПодразделениеКомпании.Доступность = (ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации"));
	Элементы.ВидСчета.Доступность              = (ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	УправлениеДиалогомСправочникаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
//@skip-warning
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

#КонецОбласти

#КонецОбласти

