///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Типы номенклатуры"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Прочитаем набор дополнительных реквизитов и сведений
	Если НЕ ЗначениеЗаполнено(Объект.НаборСвойствНоменклатуры)
		ИЛИ Объект.НаборСвойствНоменклатуры.Наименование <> Объект.Наименование
		ИЛИ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		НаборСвойствОбъектНоменклатура = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
		НаборСвойствОбъектНоменклатура.Наименование    = Объект.Наименование;
		НаборСвойствОбъектНоменклатура.Родитель        = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура;
		НаборСвойствОбъектНоменклатура.ПометкаУдаления = Объект.ПометкаУдаления;
		НаборСвойствОбъектНоменклатура.Используется    = Истина;
		ЗначениеВРеквизитФормы(НаборСвойствОбъектНоменклатура, "ОбъектНаборСвойствНоменклатуры");
		Объект.НаборСвойствНоменклатуры = НаборСвойствОбъектНоменклатура;
	Иначе
		ЗначениеВРеквизитФормы(Объект.НаборСвойствНоменклатуры.ПолучитьОбъект(),"ОбъектНаборСвойствНоменклатуры");
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.НаборСвойствХарактеристик)
		ИЛИ Объект.НаборСвойствХарактеристик.Наименование <> Объект.Наименование + НСтр("ru = '(Для характеристик)'")
		ИЛИ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		НаборСвойствОбъектХарактеристикиНоменклатуры = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
		НаборСвойствОбъектХарактеристикиНоменклатуры.Наименование    = Объект.Наименование + НСтр("ru = '(Для характеристик)'");
		НаборСвойствОбъектХарактеристикиНоменклатуры.Родитель        = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры;
		НаборСвойствОбъектХарактеристикиНоменклатуры.ПометкаУдаления = Объект.ПометкаУдаления;
		НаборСвойствОбъектХарактеристикиНоменклатуры.Используется    = Истина;
		ЗначениеВРеквизитФормы(НаборСвойствОбъектХарактеристикиНоменклатуры, "ОбъектНаборСвойствХарактеристик");
		Объект.НаборСвойствХарактеристик = НаборСвойствОбъектХарактеристикиНоменклатуры;
	Иначе
		ЗначениеВРеквизитФормы(Объект.НаборСвойствХарактеристик.ПолучитьОбъект(), "ОбъектНаборСвойствХарактеристик");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ПравоДоступа("Просмотр", Метаданные.Справочники.НаборыДополнительныхРеквизитовИСведений) Тогда 
		ДоступноДобавлениеДополнительныхСвойств = ПравоДоступа("Добавление", Метаданные.Справочники.НаборыДополнительныхРеквизитовИСведений);
		Элементы.ДополнительныеРеквизитыОбъектХарактеристикПодбор.Доступность = ДоступноДобавлениеДополнительныхСвойств;
		Элементы.ДополнительныеРеквизитыНоменклатураПодбор.Доступность = ДоступноДобавлениеДополнительныхСвойств;
		Элементы.ДополнительныеСведенияХарактеристикПодбор.Доступность = ДоступноДобавлениеДополнительныхСвойств;
		Элементы.ДополнительныеСведенияНоменклатураПодбор.Доступность = ДоступноДобавлениеДополнительныхСвойств;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	    Возврат;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ТипыНоменклатуры");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Запишем набор дополнительных реквизитов и сведений
	НаборСвойствНоменклатуры = РеквизитФормыВЗначение("ОбъектНаборСвойствНоменклатуры");
	НаборСвойствНоменклатуры.Записать();
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.НаборСвойствНоменклатуры) Тогда
		ТекущийОбъект.НаборСвойствНоменклатуры = НаборСвойствНоменклатуры.Ссылка;
	КонецЕсли;
	НаборСвойствХарактеристик = РеквизитФормыВЗначение("ОбъектНаборСвойствХарактеристик");
	НаборСвойствХарактеристик.Записать();
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.НаборСвойствХарактеристик) Тогда
		ТекущийОбъект.НаборСвойствХарактеристик = НаборСвойствХарактеристик.Ссылка;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	Если ЗначениеЗаполнено(Объект.НаборСвойствНоменклатуры) Тогда
		ЗначениеВРеквизитФормы(Объект.НаборСвойствНоменклатуры.ПолучитьОбъект(), "ОбъектНаборСвойствНоменклатуры");
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.НаборСвойствХарактеристик) Тогда
		ЗначениеВРеквизитФормы(Объект.НаборСвойствХарактеристик.ПолучитьОбъект(), "ОбъектНаборСвойствХарактеристик");
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ВидНоменклатурыПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ТипыНоменклатуры.ВидНоменклатурыПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	ВидНоменклатурыПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ОсновнаяБазоваяЕдиницаИзмеренияПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ТипыНоменклатуры.ОсновнаяБазоваяЕдиницаИзмеренияПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОсновнаяБазоваяЕдиницаИзмеренияПриИзменении(Элемент)
	
	ОсновнаяБазоваяЕдиницаИзмеренияПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ИспользованиеХарактеристикПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ТипыНоменклатуры.ИспользованиеХарактеристикПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ИспользованиеХарактеристикПриИзменении(Элемент)
	
	ИспользованиеХарактеристикПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ОграничениеДанныхХарактеристикПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ТипыНоменклатуры.УникальностьСерийногоНомераПриИзменении(Объект, ПараметрыДействия);

	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничениеДанныхХарактеристикПриИзменении(Элемент)
	
	ОграничениеДанныхХарактеристикПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ИспользованиеШтрихКодовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если (Объект.ИспользованиеХарактеристик = 3) Тогда
		ЭлементСписка = Элементы.ИспользованиеШтрихКодов.СписокВыбора.НайтиПоЗначению(3);
		Если НЕ ЭлементСписка = Неопределено Тогда
			Элементы.ИспользованиеШтрихКодов.СписокВыбора.Удалить(ЭлементСписка);
		КонецЕсли;
	Иначе
		Если Элементы.ИспользованиеШтрихКодов.СписокВыбора.НайтиПоЗначению(3) = Неопределено Тогда
			Элементы.ИспользованиеШтрихКодов.СписокВыбора.Вставить(3,3,
				НСтр("ru = 'Штрихкоды формируются для каждой характеристики номенклатуры'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВедетсяМаркировкаПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ВедетсяМаркировкаПриИзменении(Элемент)
	
	ВедетсяМаркировкаПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура МаркировкаОбязательнаяПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МаркировкаОбязательнаяПриИзменении(Элемент)
	
	Если НЕ Объект.МаркировкаОбязательная
		ИЛИ НЕ ЕстьОстатокКодовМаркировкиВПроизводстве(Объект.Ссылка) Тогда
		МаркировкаОбязательнаяПриИзмененииНаСервере();
		Возврат;
	КонецЕсли;
	// Зададим вопрос о необходимости устновки признака.
	ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_УстановкаОбязательностиМаркировки", ЭтотОбъект);
	
	ПоказатьВопрос(
		ОбработчикОповещения,
		НСтр("ru = 'Для данного типа номенклатуры имеются немаркированные остатки в производстве. Продолжить?'"),
		РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры 

#Область ОбработчикиСобытийЭлементовУправленияОбщегоНазначения

&НаКлиенте
Процедура ОбщиеРеквизитыИСвойстваНоменклатурыНажатие(Элемент)
	
	ВидНабора = ПредопределенноеЗначение("Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие");
	ПоказатьЗначение(,ВидНабора);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбщиеРеквизитыИСвойстваХарактеристикНажатие(Элемент)
	
	ВидНабора = ПредопределенноеЗначение("Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие");
	ПоказатьЗначение(,ВидНабора);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныереквизитыноменклатуры

&НаКлиенте
Процедура ДополнительныеРеквизитыНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Прав(Поле.Имя, СтрДлина("Свойство")) = "Свойство" Тогда
		ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеРеквизитыНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыНоменклатурыПередУдалением(Элемент, Отказ)
	
	ДополнительныеСвойстваПередУдалением(Элемент, ОбъектНаборСвойствНоменклатуры.ДополнительныеРеквизиты);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеРеквизитыНоменклатурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораСвойства(ВыбранноеЗначение, ОбъектНаборСвойствНоменклатуры.ДополнительныеРеквизиты);
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныесведенияноменклатуры

&НаКлиенте
Процедура ДополнительныеСведенияНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеСведенияНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеСведенияНоменклатурыПередУдалением(Элемент, Отказ)
	
	ДополнительныеСвойстваПередУдалением(Элемент, ОбъектНаборСвойствНоменклатуры.ДополнительныеСведения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеСведенияНоменклатурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораСвойства(ВыбранноеЗначение, ОбъектНаборСвойствНоменклатуры.ДополнительныеСведения);
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныереквизитыхарактеристик

&НаКлиенте
Процедура ДополнительныеРеквизитыХарактеристикВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Прав(Поле.Имя, СтрДлина("Свойство")) = "Свойство" Тогда
		ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыХарактеристикПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеРеквизитыХарактеристикПередУдалением(Элемент, Отказ)
	
	ДополнительныеСвойстваПередУдалением(Элемент, ОбъектНаборСвойствХарактеристик.ДополнительныеРеквизиты);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеРеквизитыХарактеристикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораСвойства(ВыбранноеЗначение, ОбъектНаборСвойствХарактеристик.ДополнительныеРеквизиты);
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныесведенияхарактеристик

&НаКлиенте
Процедура ДополнительныеСведенияХарактеристикВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеСведенияХарактеристикПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеСведенияХарактеристикПередУдалением(Элемент, Отказ)
	
	ДополнительныеСвойстваПередУдалением(Элемент, ОбъектНаборСвойствХарактеристик.ДополнительныеСведения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеСведенияХарактеристикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораСвойства(ВыбранноеЗначение, ОбъектНаборСвойствХарактеристик.ДополнительныеСведения);
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ПодборДопРеквизитовНоменклатура(Команда)
	
	ПодобратьДополнительныеСвойства(ОбъектНаборСвойствНоменклатуры, Элементы.ОбъектНаборСвойствНоменклатурыДополнительныеРеквизиты, Объект.НаборСвойствНоменклатуры, Ложь);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПодборДопСведенийНоменклатура(Команда)
	
	ПодобратьДополнительныеСвойства(ОбъектНаборСвойствНоменклатуры, Элементы.ОбъектНаборСвойствНоменклатурыДополнительныеСведения,  Объект.НаборСвойствНоменклатуры, Истина);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПодборДопРеквизитовХарактеристик(Команда)
	
	ПодобратьДополнительныеСвойства(ОбъектНаборСвойствХарактеристик, Элементы.ОбъектНаборСвойствХарактеристикДополнительныеРеквизиты,  Объект.НаборСвойствХарактеристик, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборДопСведенийХарактеристик(Команда)
	
	ПодобратьДополнительныеСвойства(ОбъектНаборСвойствХарактеристик, Элементы.ОбъектНаборСвойствХарактеристикДополнительныеСведения,  Объект.НаборСвойствХарактеристик, Истина);
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодобратьДополнительныеСвойства(Таблица, Владелец, НаборСвойств, ЭтоДополнительноеСведение)
	
	ДоступныеНаборыСвойств = Новый Массив();
	ДоступныеНаборыСвойств.Добавить(ПредопределенноеЗначение("Справочник.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка"));
	ДоступныеНаборыСвойств.Добавить(НаборСвойств);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура("НаборСвойств", ДоступныеНаборыСвойств));
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ЛОЖЬ);
	
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", ЭтоДополнительноеСведение);
	ПараметрыФормы.Вставить("ДополнительныеПараметры", Новый Структура("ТекущийНаборСвойств", НаборСвойств));
	
	ВыбранныеСвойства = Новый Массив;
	
	Если ЭтоДополнительноеСведение Тогда
		Для Каждого Строка Из Таблица.ДополнительныеСведения Цикл
			ВыбранныеСвойства.Добавить(Строка.Свойство);
		КонецЦикла;
		ВладелецФормы = Владелец;
	Иначе
		Для Каждого Строка Из Таблица.ДополнительныеРеквизиты Цикл
			ВыбранныеСвойства.Добавить(Строка.Свойство);
		КонецЦикла;
		ВладелецФормы = Владелец;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ВыбранныеЗначения", ВыбранныеСвойства);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаВыбора", ПараметрыФормы, ВладелецФормы, Объект.Ссылка);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Элемент.ДанныеСтроки(ВыбраннаяСтрока).Свойство);
	
	ОткрытьФорму(
		"ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
		ПараметрыФормы);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеСвойстваПередУдалением(Элемент, ТаблицаСвойств)
	
	Для каждого ВыделеннаяСтрока Из Элемент.ВыделенныеСтроки Цикл
		Свойство = Элемент.ДанныеСтроки(ВыделеннаяСтрока).Свойство;
		Строки = ТаблицаСвойств.НайтиСтроки(Новый Структура("Свойство", Свойство));
		ТаблицаСвойств.Удалить(Строки[0]);
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбораСвойства(ВыбранноеЗначение, Таблица)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для каждого Значение Из ВыбранноеЗначение Цикл
			ДобавитьВыбранноеСвойство(Значение, Таблица);
		КонецЦикла;
	Иначе
		ДобавитьВыбранноеСвойство(ВыбранноеЗначение, Таблица);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДобавитьВыбранноеСвойство(Значение, Таблица)
	
	Если ТипЗнч(Значение) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		Отбор = Новый Структура("Свойство", Значение);
		Если Таблица.НайтиСтроки(Отбор).Количество() = 0 Тогда
			Таблица.Добавить().Свойство = Значение;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ЕстьОстатокКодовМаркировкиВПроизводстве(ТипНоменклатуры)
	
	Возврат МаркировкаТоваровСервер.ПроверитьОстатокНоменклатуры(ТипНоменклатуры);
	
КонецФункции 

&НаКлиенте
Процедура Подключаемый_УстановкаОбязательностиМаркировки(Ответ, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Объект.МаркировкаОбязательная = Ложь;
	КонецЕсли;
	
	МаркировкаОбязательнаяПриИзмененииНаСервере();
	
КонецПроцедуры 

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
//@skip-warning
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Очистить();
	
	Если Объект.ОграничениеДанныхХарактеристик = Перечисления.ОграниченияДанныхХарактеристики.Все Тогда
		Элементы.АвтоСписаниеХарактеристик.РежимВыбораИзСписка = ЛОЖЬ;
		Возврат;
	КонецЕсли;
	// Составим список, в зависимости от вида ограничения
	Если Не Элементы.АвтоСписаниеХарактеристик.РежимВыбораИзСписка Тогда
		Элементы.АвтоСписаниеХарактеристик.РежимВыбораИзСписка = ИСТИНА;
	КонецЕсли;
	Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Добавить(Перечисления.РежимыАвтоСписанияХарактеристик.РучноеСписание);
	Если Объект.ОграничениеДанныхХарактеристик=Перечисления.ОграниченияДанныхХарактеристики.Качество Тогда
		Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Добавить(Перечисления.РежимыАвтоСписанияХарактеристик.КачествоВозр);
		Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Добавить(Перечисления.РежимыАвтоСписанияХарактеристик.КачествоУбыв);
	ИначеЕсли Объект.ОграничениеДанныхХарактеристик=Перечисления.ОграниченияДанныхХарактеристики.СерийныйНомер_Свойства Тогда
		Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Добавить(Перечисления.РежимыАвтоСписанияХарактеристик.СерийныйНомерВозр);
		Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Добавить(Перечисления.РежимыАвтоСписанияХарактеристик.СерийныйНомерУбыв);
	ИначеЕсли Объект.ОграничениеДанныхХарактеристик=Перечисления.ОграниченияДанныхХарактеристики.Сроки_Сертификаты Тогда
		Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Добавить(Перечисления.РежимыАвтоСписанияХарактеристик.ДатаИзготовленияВозр);
		Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Добавить(Перечисления.РежимыАвтоСписанияХарактеристик.ДатаИзготовленияУбыв);
		Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Добавить(Перечисления.РежимыАвтоСписанияХарактеристик.СрокГодностиВозр);
		Элементы.АвтоСписаниеХарактеристик.СписокВыбора.Добавить(Перечисления.РежимыАвтоСписанияХарактеристик.СрокГодностиУбыв);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	флЭтоПрочийАктив = (Объект.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.ПрочиеАктивы);
	Элементы.ОсновнаяБазоваяЕдиницаИзмерения.Видимость  = НЕ флЭтоПрочийАктив;
	Элементы.Весовой.Видимость                          = НЕ флЭтоПрочийАктив;
	Элементы.ОсновнойТипЭксплуатации.Видимость          = флЭтоПрочийАктив;
	
	Элементы.НастройкиХарактеристик.Доступность = (Объект.ИспользованиеХарактеристик<3);
	Элементы.НаборСвойствХарактеристик.Доступность = (Объект.ИспользованиеХарактеристик<3);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДатаОбязательнойМаркировки",
		"Доступность",
		Объект.МаркировкаОбязательная И Пользователи.ЭтоПолноправныйПользователь()
	);
	
	Если НЕ ЗначениеЗаполнено(Объект.ОграничениеДанныхХарактеристик) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ИспользованиеХарактеристик=2 И (Объект.ОграничениеДанныхХарактеристик = Перечисления.ОграниченияДанныхХарактеристики.Все
		ИЛИ Объект.ОграничениеДанныхХарактеристик = Перечисления.ОграниченияДанныхХарактеристики.СерийныйНомер_Свойства) Тогда
		Элементы.УникальностьСерийногоНомера.Доступность = Истина;
	Иначе
		Элементы.УникальностьСерийногоНомера.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

