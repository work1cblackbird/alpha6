// Модуль менеджера справочника "Статусы событий"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника Организации.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением.
//                                  Например:
//                                    Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                    ЭлементТЧ = Элемент.Ключи.Добавить();
//                                    ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Ошибочный";
	Элемент.Код                       = "000000001";
	Элемент.Наименование              = НСтр("ru = 'Ошибочный'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.ВходящийЗвонок;
	НовыйТип.ВыборМенеджера = Ложь;
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.Встреча;
	НовыйТип.ВыборМенеджера = Ложь;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Информация";
	Элемент.Код                       = "000000002";
	Элемент.Наименование              = НСтр("ru = 'Информация'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.ВходящийЗвонок;
	НовыйТип.ВыборМенеджера = Ложь;
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.Встреча;
	НовыйТип.ВыборМенеджера = Ложь;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Занято";
	Элемент.Код                       = "000000003";
	Элемент.Наименование              = НСтр("ru = 'Занято'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.ВходящийЗвонок;
	НовыйТип.ВыборМенеджера = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НеБеретТрубку";
	Элемент.Код                       = "000000004";
	Элемент.Наименование              = НСтр("ru = 'Не берет трубку'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.ВходящийЗвонок;
	НовыйТип.ВыборМенеджера = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НеМожетОбщаться";
	Элемент.Код                       = "000000005";
	Элемент.Наименование              = НСтр("ru = 'Не может общаться'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.ВходящийЗвонок;
	НовыйТип.ВыборМенеджера = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Соединен";
	Элемент.Код                       = "000000006";
	Элемент.Наименование              = НСтр("ru = 'Соединен'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.ВходящийЗвонок;
	НовыйТип.ВыборМенеджера = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Ушел";
	Элемент.Код                       = "000000007";
	Элемент.Наименование              = НСтр("ru = 'Ушел'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.Встреча;
	НовыйТип.ВыборМенеджера = Ложь;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПереданМенеджеру";
	Элемент.Код                       = "000000008";
	Элемент.Наименование              = НСтр("ru = 'Передан менеджеру'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.Встреча;
	НовыйТип.ВыборМенеджера = Истина;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Спам";
	Элемент.Код                       = "000000009";
	Элемент.Наименование              = НСтр("ru = 'Спам'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.ЭлектронноеОбращение;
	НовыйТип.ВыборМенеджера = Ложь;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НеТребуетОбработки";
	Элемент.Код                       = "000000010";
	Элемент.Наименование              = НСтр("ru = 'Не требует обработки'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.ЭлектронноеОбращение;
	НовыйТип.ВыборМенеджера = Ложь;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Переадресовано";
	Элемент.Код                       = "000000011";
	Элемент.Наименование              = НСтр("ru = 'Переадресовано", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Элемент.ТипыСобытий = ТабличныеЧасти.ТипыСобытий.Скопировать();
	
	НовыйТип = Элемент.ТипыСобытий.Добавить();
	НовыйТип.ВидСобытия     = Справочники.ВидыСобытий.ЭлектронноеОбращение;
	НовыйТип.ВыборМенеджера = Ложь;

КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	ОбязательныеРеквизиты.Добавить("ТипыСобытий.ВидСобытия");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// 	 Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

#КонецЕсли