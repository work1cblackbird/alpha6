// Модуль объекта справочника "Цеха"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Обработчик события объекта возникает в момент, когда выполняется установка нового номера.
//
// Параметры:
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//  Префикс              - Строка - Префикс, который будет использоваться для генерации номера.
//
Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	
	// Вызываем общий обработчик события
	ПрефиксацияОбъектов.ПриУстановкеНовогоКода(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры // ПриУстановкеНовогоКода()

// Обработчик события заполнения объекта как при создании нового, так и при вводе на основании существующего.
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для формирования наименования/кода нового элемента.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;

	Если ЭтоНовый() Тогда
		Если НЕ ЗначениеЗаполнено(ПодразделениеКомпании) Тогда
			ПодразделениеКомпании=ЭтотОбъект.Родитель.ПодразделениеКомпании;
			Справочники.СкладыКомпании.ПодразделениеКомпанииПриИзменении(ЭтотОбъект);
		КонецЕсли; 
		Если НЕ ЗначениеЗаполнено(ПодразделениеКомпании) Тогда
			ПодразделениеКомпании=ПараметрыСеанса.ПодразделениеКомпании;
			Справочники.СкладыКомпании.ПодразделениеКомпанииПриИзменении(ЭтотОбъект);
		КонецЕсли; 
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация=ПодразделениеКомпании.Организация;
			Справочники.СкладыКомпании.ОрганизацияПриИзменении(ЭтотОбъект);
		КонецЕсли; 
		Если НЕ ЗначениеЗаполнено(СкладКомпании) Тогда
			СкладКомпании=ПраваИНастройкиПользователя.Значение("ОсновнойСкладКомпании");
		КонецЕсли; 
		Если НЕ ЗначениеЗаполнено(ГрафикРаботы) Тогда
			Если НЕ ЗначениеЗаполнено(Родитель) Тогда
				ГрафикРаботы=ПодразделениеКомпании.ГрафикРаботы;
			Иначе
				Если НЕ ЗначениеЗаполнено(Родитель.ГрафикРаботы) Тогда
					ГрафикРаботы=ПодразделениеКомпании.ГрафикРаботы;
				Иначе
					ГрафикРаботы=Родитель.ГрафикРаботы;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры // ОбработкаЗаполнения()

// Обработчик события заполнения объекта копированием.
//
// Параметры:
//  ОбъектКопирования - СправочникОбъект - Исходный объект, который является источником копирования.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

// Обработчик события возникающего при необходимости проверки заполнения реквизитов при записи объекта.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Обработчик события возникающего после начала транзакции записи, но до начала записи объекта.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередЗаписью(Отказ)
	
	Если Не ЗначениеЗаполнено(ТипРесурса)
		И ЗначениеЗаполнено(ВидИспользованияРабочегоМеста)
		И ВидИспользованияРабочегоМеста <> Перечисления.ВидыИспользованияРабочихМест.НеУчаствуетВПланировании Тогда
		ТипРесурса = Справочники.ТипыРесурсов.ПоУмолчанию;
	КонецЕсли;
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПередЗаписью(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Обработчик события возникающего после записи объекта в базу данных, но до окончания транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПриЗаписи(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПриЗаписи(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

// Обработчик события возникающего в транзакции удаления перед непосредственным удалением объекта из базы данных.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередУдалением(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПередУдалением()

#КонецОбласти

#КонецЕсли
