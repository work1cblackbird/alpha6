
#Область ОписаниеПеременных

&НаКлиенте
Перем БылВыборВладельца;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если РаботаСФормой.МожноУстановитьОтборПоВладельцу(Параметры) Тогда
		
		РаботаСФормой.УстановитьОтборПоВладельцуНаДерево(Дерево, Параметры.Отбор);
		
	КонецЕсли;
	
	ДоступенАвтосалон = ЗащищенныеФункцииАльфаАвтоСервер.ПодсистемаДоступна("ЗащитаАвтосалон");
	Если Не ДоступенАвтосалон Тогда
		
		Для Каждого ЭлементУсловногоОформления Из Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы Цикл
			
			Если ЭлементУсловногоОформления.Представление = "АвтомобилиНаСкладе" Тогда
				
				Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Удалить(ЭлементУсловногоОформления);
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Элементы.ОтборСкладИспользование.Видимость = Ложь;
		Элементы.ОтборСклад.Видимость = Ложь;
		
	ИначеЕсли ЗначениеЗаполнено(ПолучитьЗначениеПараметраСтруктуры(Параметры, "УстановитьОтборПоСкладу", Неопределено)) Тогда
		
		ОтборСкладИспользование = 1;
		ОтборСклад = ПолучитьЗначениеПараметраСтруктуры(Параметры, "УстановитьОтборПоСкладу", Неопределено);
		УстановитьОтборПоСкладу(ЭтотОбъект);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПолучитьЗначениеПараметраСтруктуры(Параметры, "УстановитьОтборПоСкладу", Неопределено)) Тогда
		
		ОтборСкладИспользование = 1;
		ОтборСклад = ПолучитьЗначениеПараметраСтруктуры(Параметры, "УстановитьОтборПоСкладу", Неопределено);
		УстановитьОтборПоСкладу(ЭтотОбъект);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Владелец) Тогда
		
		ОтборВладелец = Параметры.Владелец;
		ОтборВладелецПоиск = Строка(Параметры.Владелец);
		УстановитьОтборПоВладельцу(ЭтотОбъект);
		
	КонецЕсли;
	
	Если Параметры.Свойство("Марка") Тогда
		
		Если НЕ Параметры.Марка = Справочники.Марки.МаркаНеУказана И НЕ Параметры.Марка = Справочники.Марки.ПустаяСсылка() Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список,
				"Марка",
				Параметры.Марка,
				,
				,
				Истина,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ
			);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Элементы.Список.РежимВыбора Тогда
		Элементы.СтраницыРасширеннаяИнформация.Видимость = Истина;
		Элементы.ПоказатьРасширеннуюИнформацию.Пометка   = Ложь;
		УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	Иначе
		УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	КонецЕсли;
	
	Если Параметры.Свойство("Ссылка") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Ссылка",
			Параметры.Ссылка,
			,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		
	КонецЕсли;
	
	Если Параметры.Свойство("НазначениеМодели") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Модель.НазначениеМодели",
			Параметры.НазначениеМодели,
			,
			,
			Истина
		);
		
	КонецЕсли;
	
	Элементы.ГодВыпуска.Формат = АвтомобилиСервер.ПолучитьФорматПредставленияГодаВыпускаАвтомобиля(ЭтотОбъект);
	Элементы.ФормаПодборРекомендаций.Видимость = ПравоДоступа("Просмотр", Метаданные.Обработки.ПодборРекомендаций);
	Элементы.СтраницаЦены.Видимость = ДоступенАвтосалон;
	
	РаботаСФормой.СкрытьЭлементыНедоступныеПоКлючу(ЭтотОбъект);
	
	РаботаСФормой.УстановитьРежимВыбора(ЭтотОбъект, Элементы.Список, Параметры);
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
		
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
	УстановитьКартинкуДекорацияПоказатьСкрытьПравуюПанельПоиска();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаСписка(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьОтборОпцийИОборудования();
	ОбновитьОтборЦены();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаСписка(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаСписка(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	РаботаСФормойКлиент.УстановитьТекущуюСтрокуНаНовыйОбъект(Элементы.Список, НовыйОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Элементы.СтраницыРасширеннаяИнформация.Видимость = Элементы.ПоказатьРасширеннуюИнформацию.Пометка;
	// Производим сохранение параметра отображения дерева элементов
	Настройки.Вставить("СтраницыРасширеннаяИнформацияВидимость", Элементы.СтраницыРасширеннаяИнформация.Видимость);

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
	// Восстанавливаем параметры отображения страниц расширенной информации
	ПоказатьРасширеннуюИнформацию = (НЕ Настройки.Получить("СтраницыРасширеннаяИнформацияВидимость") = Ложь);
	// Произведем настройку параметров отображения полей расширенной информации
	Элементы.СтраницыРасширеннаяИнформация.Видимость = Истина;
	Элементы.ПоказатьРасширеннуюИнформацию.Пометка   = ПоказатьРасширеннуюИнформацию;
	
	УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область БыстрыеОтборы

&НаКлиенте
Процедура ОтборВладелецПоискПриИзменении(Элемент)
	
	Если НЕ БылВыборВладельца Тогда
		
		ОтборВладелец = Неопределено;
		
	КонецЕсли;
	
	УстановитьОтборПоВладельцу(ЭтотОбъект);
	БылВыборВладельца = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВладелецПоискОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОтборВладелец = ВыбранноеЗначение;
	БылВыборВладельца = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВладелецПоискАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Текст) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("СтрокаПоиска"        , Текст);
	ПараметрыПодбора.Вставить("ВыборГруппИЭлементов", ПредопределенноеЗначение("ИспользованиеГруппИЭлементов.Элементы"));
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.Контрагенты"), ПараметрыПодбора);
	ДанныеВыбора.Вставить(0, Текст, Текст,, БиблиотекаКартинок.НайтиВСодержании);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВладелецПоискОчистка(Элемент, СтандартнаяОбработка)
	
	ОтборВладелец = Неопределено;
	ОтборВладелецПоиск = "";
	УстановитьОтборПоВладельцу(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборГосНомерПриИзменении(Элемент)
	
	Если ПустаяСтрока(ОтборГосНомер) Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ГосНомер");
		Возврат;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"ГосНомер",
		ОтборГосНомер,
		ВидСравненияКомпоновкиДанных.Содержит,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборVINПриИзменении(Элемент)
	
	Если ПустаяСтрока(ОтборVIN) Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "VIN");
		Возврат;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"VIN",
		СтроковыеФункцииКлиент.СтрокаЛатиницей(ОтборVIN),
		ВидСравненияКомпоновкиДанных.Содержит,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМодельПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ОтборМодель) Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Модель");
		Возврат;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Модель",
		ОтборМодель,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
	ОтборКомплектация = ПредопределенноеЗначение("Справочник.ВариантыКомплектации.ПустаяСсылка");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ВариантКомплектации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКомплектацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ОтборКомплектация) Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ВариантКомплектации");
		Возврат;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"ВариантКомплектации",
		ОтборКомплектация,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЦветПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ОтборЦвет) Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Цвет");
		Возврат;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Цвет",
		ОтборЦвет,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСкладИспользованиеПриИзменении(Элемент)
	
	УстановитьОтборПоСкладу(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСкладПриИзменении(Элемент)
	
	УстановитьОтборПоСкладу(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовПанелиПоиска
	
&НаКлиенте
Процедура ДекорацияПоказатьСкрытьПравуюПанельПоискаНажатие(Элемент)
	
	ПоказатьСкрытьПравуюПанельПоискаНаСервере();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если Поле.Имя = "Резерв" И НЕ ТекущиеДанные = Неопределено И ТекущиеДанные.Резерв <> 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ТипЗнч(ТекущиеДанные.Заказ) = Тип("ДокументСсылка.ЗаказНаАвтомобиль") Тогда
			ТипДокумента = "ЗаказНаАвтомобиль";
		Иначе
			ТипДокумента = "РезервированиеАвтомобилей";
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Заказ);
		ОткрытьФорму("Документ."+ТипДокумента+".ФормаОбъекта", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ОбновитьОтборОпцийИОборудования();
	ОбновитьОтборЦены();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ Группа Тогда
		Если Копирование Тогда
			КлючеваяОперация = "КопированиеСправочникаАвтомобили";
		Иначе
			КлючеваяОперация = "СозданиеФормыСправочникаАвтомобили";
		КонецЕсли;
		ОценкаПроизводительностиКлиент.ЗамерВремени(КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если НЕ ЕстьРеквизитНаКлиенте(Элемент.ТекущиеДанные, "ЭтоГруппа") ИЛИ НЕ Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		КлючеваяОперация = "ОткрытиеФормыСправочникаАвтомобили";
		ОценкаПроизводительностиКлиент.ЗамерВремени(КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	// Сменим родитея в основном списке
	Если Элементы.Список.Видимость Тогда
		Если Элементы.Дерево.ТекущаяСтрока=Элементы.Список.ТекущийРодитель Тогда
			// Пропустим если равны
		ИначеЕсли НЕ ЗначениеЗаполнено(Элементы.Список.ТекущийРодитель) И НЕ ЗначениеЗаполнено(Элементы.Дерево.ТекущаяСтрока) Тогда
			// Пропустим если оба пустые (могут быть Неопределено)
		Иначе
			Элементы.Список.ТекущийРодитель = Элементы.Дерево.ТекущаяСтрока;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриСменеТекущегоРодителя(Элемент)
	
	// Если произвели переход в группу, то необходимо поменять текущий элемент в дереве
	Если НЕ Элементы.Список.ТекущийРодитель=Элементы.Дерево.ТекущаяСтрока Тогда
		Элементы.Дерево.ТекущаяСтрока = Элементы.Список.ТекущийРодитель;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего на сервере при обновлении пользовательских настроек списка.
//
// Параметры:
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	РаботаСФормой.ВывестиПользовательскиеОтборы(ЭтотОбъект, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЦеныАвтомобиля

&НаСервереБезКонтекста
Процедура ЦеныАвтомобиляПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	РасчетНаДату = ТекущаяДатаСеанса();
	СтрокаФормата = СтрШаблон("ЧФ='Ч %1'", ВалютаРегл.Наименование);
	
	Для Каждого Строка Из Строки Цикл
		
		ЦенаВРубляхОформление = Строка.Значение.Оформление.Получить("ЦенаВРублях");
		
		Если ЦенаВРубляхОформление <> Неопределено Тогда
			
			ЦенаВРубляхОформление.УстановитьЗначениеПараметра("Формат", СтрокаФормата);
			Строка.Значение.Данные.ЦенаВРублях = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
				Строка.Значение.Данные.Цена,
				Строка.Значение.Данные.ВалютаЦены,
				РасчетНаДату,
				ВалютаРегл,
				РасчетНаДату
			);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОпцииАвтомобиля

&НаКлиенте
Процедура ОпцииАвтомобиляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ТекущиеДанные.Опция <> Неопределено Тогда
		
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Опция);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОборудованиеАвтомобиля

&НаКлиенте
Процедура ОборудованиеАвтомобиляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ТекущиеДанные.Номенклатура <> Неопределено Тогда
		
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Номенклатура);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

 #Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборРекомендаций(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ПроверкаНаГруппу(Элементы.Список.ТекущиеДанные.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьОбработкуРекомендации(Элементы.Список.ТекущиеДанные.Ссылка);
	
	
	// передадим начальные параметры
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Автомобиль",            Элементы.Список.ТекущиеДанные.Ссылка);
	СтруктураПараметров.Вставить("ТипЦен",                ОбработкаПодборРекомендаций.ТипЦен);
	СтруктураПараметров.Вставить("ТипЦенАвторабот",       ОбработкаПодборРекомендаций.ТипЦенАвторабот);
	СтруктураПараметров.Вставить("Рекомендации",          ОбработкаПодборРекомендаций.Рекомендации); 
	СтруктураПараметров.Вставить("ИмяДокумента",          "Справочник.Автомобили"); 

	
	// установим начальный отбор
	СтруктураПараметров.Вставить("РежимВыбора",                   Ложь);
	СтруктураПараметров.Вставить("ОтборАктуальный",               Истина);
	СтруктураПараметров.Вставить("ОтборВыполняется",              Истина);
	СтруктураПараметров.Вставить("ОтборРекомендацияАвтоработы",   Истина);
	СтруктураПараметров.Вставить("ОтборРекомендацияНоменклатура", Истина);
	СтруктураПараметров.Вставить("ОтборТекстовоеОписание",        Истина);
	
	ОткрытьФорму("Обработка.ПодборРекомендаций.Форма", СтруктураПараметров, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьДерево(Команда)
		
	ВидимостьДерева = Не ВидимостьДерева;	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьРасширеннуюИнформацию(Команда)
	
	Элементы.ПоказатьРасширеннуюИнформацию.Пометка = (НЕ Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	// Взведем признак необходимости выполнить сохранение настроек формы при закрытии
	СохраняемыеВНастройкахДанныеМодифицированы = Истина;

КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УстановитьУсловноеОформлениеВалютаЦен();
	
	Если ЗащищенныеФункцииАльфаАвтоСервер.ПодсистемаДоступна("ЗащитаАвтосалон") Тогда
		
		Попытка
			
			УстановитьУсловноеОформлениеРезерваАвтомобилей();
			УстановитьУсловноеОформлениеВНаличии();
			
		Исключение
			
			Элементы.Заказ.Видимость = Ложь;
			ДоступныЗаказыПоставщикам = ПараметрыДоступа(
				"Чтение",
				Метаданные.Документы.ЗаказПоставщикуНаАвтомобиль,
				,
				ПользователиИнформационнойБазы.ТекущийПользователь()
			).Доступность;
			
			Если НЕ ДоступныЗаказыПоставщикам Тогда
				
				Элементы.ЗаказПоставщику.Видимость = Ложь;
				
			КонецЕсли;
			
		КонецПопытки;
		
	Иначе
		
		Элементы.Заказ.Видимость = Ложь;
		Элементы.ЗаказПоставщику.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеВалютаЦен()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Валюты.Ссылка КАК Валюта,
		|	Валюты.Наименование КАК ПредставлениеВалюты
		|ИЗ
		|	Справочник.Валюты КАК Валюты
		|ГДЕ
		|	НЕ Валюты.ПометкаУдаления"
	);
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления
			.Поля
			.Элементы
			.Добавить()
			.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЦеныАвтомобиляЦена.Имя);
		
		ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЦеныАвтомобиля.ВалютаЦены");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Выборка.Валюта;
		
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра(
			"Формат",
			СтрШаблон("ЧФ='Ч %1'", Выборка.ПредставлениеВалюты)
		);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеРезерваАвтомобилей()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаказыАвтомобилейОстатки.Автомобиль КАК Автомобиль,
		|	ЗаказыАвтомобилейОстатки.Заказ.Представление КАК Заказ,
		|	ЕСТЬNULL(ЗаказыАвтомобилейОстатки.Заказ.Заказчик.Наименование, """") КАК Заказчик
		|ИЗ
		|	РегистрНакопления.ЗаказыАвтомобилей.Остатки(, ) КАК ЗаказыАвтомобилейОстатки"
	);
	ВыборкаРезервов = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаРезервов.Следующий() Цикл
		
		ЭлементУсловногоОформления = ЭтотОбъект.УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Резерв");
		ОформляемоеПоле.Использование = Истина;
		
		ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.Ссылка");
		ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораДанных.ПравоеЗначение = ВыборкаРезервов.Автомобиль;
		
		ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.Резерв");
		ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
		ЭлементОтбораДанных.ПравоеЗначение = 0;
		
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра(
			"Текст",
			ВыборкаРезервов.Заказчик + " по " + ВыборкаРезервов.Заказ
		);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеВНаличии()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СкладКомпании");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.АвтомобильВНаличииЦвет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтборОпцийИОборудования()
	
	ТекущиеДанныеСписок = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанныеСписок = Неопределено
		ИЛИ НЕ ТекущиеДанныеСписок.Свойство("Ссылка") Тогда
		Возврат;	
	КонецЕсли;
	
	ВариантКомплектацииАвтомобиля = ВариантКомплектацииАвтомобиля(ТекущиеДанныеСписок.Ссылка);
	ОпцииВариантаКомплектации
		.Параметры
		.УстановитьЗначениеПараметра("ВариантКомплектации", ВариантКомплектацииАвтомобиля);
	ОпцииАвтомобиля
		.Параметры
		.УстановитьЗначениеПараметра("Автомобиль", ТекущиеДанныеСписок.Ссылка);
	ОборудованиеАвтомобиля
		.Параметры
		.УстановитьЗначениеПараметра("Автомобиль", ТекущиеДанныеСписок.Ссылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВариантКомплектацииАвтомобиля(Автомобиль)
	
	Если ЗначениеЗаполнено(Автомобиль) Тогда
		
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Автомобиль, "ВариантКомплектации");
		
	КонецЕсли;
	
	Возврат Справочники.ВариантыКомплектации.ПустаяСсылка();
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьСтраницРасширеннойИнформации(Значение)
	
	Для Каждого Страница Из Элементы.СтраницыРасширеннаяИнформация.ПодчиненныеЭлементы Цикл
		
		Если Страница.Имя = "СтраницаЦены" Тогда
			Страница.Видимость = ДоступенАвтосалон И Значение;
	        Продолжить;
		КонецЕсли;
		
		Страница.Видимость = Значение;  
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтборЦены()
	
	Если НЕ ДоступенАвтосалон Тогда
		Возврат;
	КонецЕсли;
	
	Автомобиль = Неопределено;
	Модель = Неопределено;
	
	ТекущиеДанныеСписок = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанныеСписок <> Неопределено Тогда
		
		Если НЕ ТекущиеДанныеСписок.Свойство("Ссылка") Тогда
			 Возврат;
		КонецЕсли;
		
		Автомобиль = ТекущиеДанныеСписок.Ссылка;
		
		Если ЗначениеЗаполнено(Автомобиль) Тогда
			
			Модель = ТекущиеДанныеСписок.Модель;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЦеныАвтомобиля
		.Параметры
		.УстановитьЗначениеПараметра("НаДату", ОбщегоНазначенияКлиент.ДатаСеанса());
	ЦеныАвтомобиля
		.Параметры
		.УстановитьЗначениеПараметра("Автомобиль", Автомобиль);
	ЦеныАвтомобиля
		.Параметры
		.УстановитьЗначениеПараметра("Модель", Модель);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоСкладу(Форма)
	
	// Отбор по складу не используется
	Если Форма.ОтборСкладИспользование = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ОтборСклад", "Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Список, "СкладКомпании");
		Возврат;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ОтборСклад", "Видимость", Истина);
	
	// Отбираем автомобили на складах
	Если Форма.ОтборСкладИспользование = 1 Тогда
		
		ВидСравненияСклад = ?(
			ЗначениеЗаполнено(Форма.ОтборСклад),
			ВидСравненияКомпоновкиДанных.Равно,
			ВидСравненияКомпоновкиДанных.Заполнено);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Форма.Список,
			"СкладКомпании",
			Форма.ОтборСклад,
			ВидСравненияСклад,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		Возврат;
		
	КонецЕсли;
	
	// Отбираем отсутствующие автомобили
	ВидСравненияСклад = ?(
		ЗначениеЗаполнено(Форма.ОтборСклад),
		ВидСравненияКомпоновкиДанных.НеРавно,
		ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"СкладКомпании",
		Форма.ОтборСклад,
		ВидСравненияСклад,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоВладельцу(Форма)
	
	Если НЕ ЗначениеЗаполнено(Форма.ОтборВладелец) И ПустаяСтрока(Форма.ОтборВладелецПоиск) Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Список, "Владелец");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Список, "Владелец.Наименование");
		
	ИначеЕсли ЗначениеЗаполнено(Форма.ОтборВладелец) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Форма.Список,
			"Владелец",
			Форма.ОтборВладелец,
			ВидСравненияКомпоновкиДанных.Равно,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Форма.Список,
			"Владелец",
			ВладельцыПоЧастиИмени(Форма.ОтборВладелецПоиск),
			ВидСравненияКомпоновкиДанных.ВСписке,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВладельцыПоЧастиИмени(СтрокаПоиска)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Контрагенты.Ссылка КАК Контрагент
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Наименование ПОДОБНО &Наименование"
	);
	Запрос.УстановитьПараметр("Наименование", "%" + СтрокаПоиска + "%");
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Контрагент");
	
КонецФункции

&НаСервере
Функция ПроверкаНаГруппу(ВыбраннаяСтрока)
	
	Возврат ВыбраннаяСтрока.ЭтоГруппа;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьОбработкуРекомендации(Автомобиль)
	
	ОбработкаПодборРекомендаций.Автомобиль      = Автомобиль;
	ОбработкаПодборРекомендаций.ТипЦен          = ПраваИНастройкиПользователя.Значение("ОсновнойТипЦенПродажи");
	ОбработкаПодборРекомендаций.ТипЦенАвторабот = ПраваИНастройкиПользователя.Значение("ОсновнойТипЦенРабот");
	ОбъектПодборРекомендаций = РеквизитФормыВЗначение("ОбработкаПодборРекомендаций");
	ОбъектПодборРекомендаций.ЗаполнитьРекомендации();
	ОбработкаПодборРекомендаций.Рекомендации.Загрузить(ОбъектПодборРекомендаций.Рекомендации.Выгрузить());
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
    
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
    
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
    
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ПанельПоиска
	
&НаСервере
Процедура ПоказатьСкрытьПравуюПанельПоискаНаСервере()
	
	ВидимостьСписка = Элементы.ПанельПоиска.Видимость; 
	Элементы.ПанельПоиска.Видимость = НЕ ВидимостьСписка;
	УстановитьКартинкуДекорацияПоказатьСкрытьПравуюПанельПоиска()
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКартинкуДекорацияПоказатьСкрытьПравуюПанельПоиска()

	ВидимостьСписка = Элементы.ПанельПоиска.Видимость; 

	Если ВидимостьСписка Тогда
		
		Элементы.ДекорацияПоказатьСкрытьПравуюПанельПоиска.Картинка = БиблиотекаКартинок.СтрелкаВправо;
		
	Иначе
		
		Элементы.ДекорацияПоказатьСкрытьПравуюПанельПоиска.Картинка = БиблиотекаКартинок.СтрелкаВлево;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Инициализация

БылВыборВладельца = Ложь;

#КонецОбласти
