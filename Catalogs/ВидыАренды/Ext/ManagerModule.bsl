// Модуль менеджера справочника "ВидыВременногоИспользования"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура заполнения предопределенных элементов справочника
//
Процедура ВыполнитьНачальноеЗаполнение() Экспорт
		
КонецПроцедуры // ЗагрузитьТребованияИзМакета() Экспорт	

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
		
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	Если Объект.ЭтоГруппа Тогда 
		Возврат ОбязательныеРеквизиты;
	КонецЕсли;
	
	ОбязательныеРеквизиты.Добавить("ТипЦен");
	ОбязательныеРеквизиты.Добавить("Валюта");
	ОбязательныеРеквизиты.Добавить("ТипАренды");
	ОбязательныеРеквизиты.Добавить("ГрафикАренды");
	
	Если Объект.ДепозитИспользование Тогда
		ОбязательныеРеквизиты.Добавить("ДепозитУслуга");
	КонецЕсли;
	
	Если Объект.ТипАренды = Перечисления.ТипыРемонта.Платный Тогда
		ОбязательныеРеквизиты.Добавить("УслугаДляВыставленияАктов");
		ОбязательныеРеквизиты.Добавить("УслугаДляВыставленияСчетов");
	КонецЕсли;
	
	ОбязательныеРеквизиты.Добавить("ДополнительныеУслуги.Номенклатура");

	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности и уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов и вариант проверки его заполнения
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Обработчик события возникающего при изменении данных реквизита "ТипАренды".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Процедура ТипАрендыПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт 
	
	Если Объект.ТипАренды = Перечисления.ТипыРемонта.Бесплатный Тогда
		
		Объект.ТарификацияГод = Ложь;	
		Объект.ТарификацияКвартал = Ложь;	
		Объект.ТарификацияМесяц = Ложь;	
		Объект.ТарификацияМинута = Ложь;	
		Объект.ТарификацияНеделя = Ложь;	
		Объект.ТарификацияСутки = Ложь;	
		Объект.ТарификацияЧас = Ложь;	
		
		Объект.УслугаДляВыставленияАктов = Справочники.Номенклатура.ПустаяСсылка();
		Объект.УслугаДляВыставленияСчетов = Справочники.Номенклатура.ПустаяСсылка();
		
		Объект.ДополнительныеУслуги.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "ТипЦен".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Процедура ТипЦенПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт 
	
	Если Объект.Валюта.Пустая() Тогда
		Объект.Валюта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ТипЦен, "ВалютаЦены");
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "ДепозитИспользование".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Процедура ДепозитИспользованиеПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт 
	
	Если НЕ Объект.ДепозитИспользование Тогда
		Объект.ДепозитУслуга = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "ВыдачаПриемкаКонтролировать".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Процедура ВыдачаПриемкаКонтролироватьПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт 
	
	Если НЕ Объект.ВыдачаПриемкаКонтролировать Тогда
		Объект.ВыдачаАнкета = Справочники.ШаблоныАнкет.ПустаяСсылка();
		Объект.ПриемкаАнкета = Справочники.ШаблоныАнкет.ПустаяСсылка();		
	КонецЕсли;
	
КонецПроцедуры////////////////////////////////////////////////////////////////////////////////

#КонецОбласти

#КонецЕсли