
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	СформироватьНаименованиеПоУмолчанию();
	КэшНаименование = Справочники.ДоговорыВзаиморасчетов.СформироватьНаименованиеПоУмолчанию(Объект);
	
	НастроитьГруппуПроцентПредоплаты();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();  

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("СкладыКомпании");
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	Если НЕ ОсновнойДоговор = ПредопределенноеЗначение("Справочник.ДоговорыВзаиморасчетов.ПустаяСсылка") Тогда
		ДоговорОбъект = ОсновнойДоговор.ПолучитьОбъект();
		ДоговорОбъект.Основной = Ложь;
		ДоговорОбъект.Записать();
	КонецЕсли;
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Справочники.ДоговорыВзаиморасчетов.ОрганизацияПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПодразделениеКомпанииПриИзменении(Элемент)
	

	ПодразделениеКомпанииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПодразделениеКомпанииПриИзмененииНаСервере(ПараметрыДействия = Неопределено)

	Справочники.ДоговорыВзаиморасчетов.ПодразделениеКомпанииПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	ДатаНачалаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДатаНачалаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаВзаиморасчетовПриИзменении(Элемент)
	
	ВалютаВзаиморасчетовПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВалютаВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);

	ВалютаУчета = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(); 
	Элементы.РасчетыВУсловныхЕдиницах.Доступность = Объект.ВалютаВзаиморасчетов <> ВалютаУчета;
	
	Если Объект.ВалютаВзаиморасчетов = 	ВалютаУчета Тогда 
		  Объект.РасчетыВУсловныхЕдиницах = Ложь;
	  КонецЕсли;
	  
КонецПроцедуры 

&НаКлиенте
Процедура НомерДоговораПриИзменении(Элемент)
	
	НомерДоговораПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура НомерДоговораПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ВидДоговораПриИзменении(Элемент)
	
	ВидДоговораПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ВидДоговораПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	НастроитьПараметрыВыбораЭлементовФормы();

КонецПроцедуры

&НаСервере
Процедура ТипДоговораПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ТипДоговораПриИзменении(Элемент)
	
	ТипДоговораПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Функция УстановитьОсновнойДоговорНаСервере(ПараметрыДействия = Неопределено)
	
	Возврат Справочники.ДоговорыВзаиморасчетов.ПроверитьОсновнойДоговор(Объект);
	
КонецФункции 

&НаКлиенте
Процедура ОсновнойПриИзменении(Элемент)
	
	// Обработаем событие в контексте сервера
	Если Объект.Основной Тогда
		ОсновнойДоговор = УстановитьОсновнойДоговорНаСервере();
		Если НЕ ОсновнойДоговор = ПредопределенноеЗначение("Справочник.ДоговорыВзаиморасчетов.ПустаяСсылка") Тогда
			
			// Формируем описание обработчика перехвата закрытия формы
			ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияОсновнойДоговор", ЭтотОбъект);
			
			// Формируем текст вопроса
			ТекстВопроса = НСтр("ru = 'Для выбранных аналитик(организация, подразделение, вид договора) основной договор уже назначен """ + ОсновнойДоговор + """. Продолжить?'");
			
			// Получаем подтверждение операции от пользователя
			ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ТипСуммыКомиссииПриИзменении(Элемент)
	
	ТипСуммыКомиссииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипСуммыКомиссииПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Справочники.ДоговорыВзаиморасчетов.ТипСуммыКомиссииПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	НастроитьПараметрыВыбораЭлементовФормы();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОтменаКонтроляСуммыКредитаПриИзменении(Элемент)
	
	ОтменаКонтроляСуммыКредитаПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ОтменаКонтроляСуммыКредитаПриИзмененииНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	КэшНаименование = ВыбранноеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПредоплатыИзНастроекПриИзменении(Элемент)
	
	ПроцентПредоплатыВручную = НЕ ПроцентПредоплатыИзНастроек;
	Элементы.ПолеПроцентПредоплаты.ТолькоПросмотр = ?(ПроцентПредоплатыИзНастроек, Истина, Ложь);
	Объект.ПроцентПредоплаты = ?(ПроцентПредоплатыИзНастроек, -1, ПолеПроцентПредоплаты);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПроцентПредоплатыВручнуюПриИзменении(Элемент)
	
	ПроцентПредоплатыИзНастроек = НЕ ПроцентПредоплатыВручную;
	Элементы.ПолеПроцентПредоплаты.ТолькоПросмотр = ?(НЕ ПроцентПредоплатыВручную, Истина, Ложь);
	Объект.ПроцентПредоплаты = ?(НЕ ПроцентПредоплатыВручную, -1, ПолеПроцентПредоплаты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПроцентПредоплатыПриИзменении(Элемент)
	
	Объект.ПроцентПредоплаты = ПолеПроцентПредоплаты;
	
КонецПроцедуры 

&НаСервере
Процедура ПризнакАгентаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Элементы.ТелефонПоставщика.СписокВыбора.Очистить();	
	Если ЗначениеЗаполнено(Объект.ПризнакАгента) Тогда
		
		Владелец = Объект.Владелец;
		Объект.ИННПоставщика = Владелец.ИНН;
		Объект.НаименованиеПоставщика = Владелец.Наименование;
		
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(Владелец);
		
		КонтактнаяИнформацияОбъекта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
			МассивОбъектов,
			,
			Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента, ТекущаяДатаСеанса()
		);
		
		Если КонтактнаяИнформацияОбъекта.Количество() > 0 Тогда
			Объект.ТелефонПоставщика = КонтактнаяИнформацияОбъекта[0].Представление;
			Для Каждого Строка Из КонтактнаяИнформацияОбъекта Цикл
				Элементы.ТелефонПоставщика.СписокВыбора.Добавить(Строка.Представление);
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		
		Объект.ИННПоставщика = "";
		Объект.НаименованиеПоставщика = "";
		Объект.ТелефонПоставщика = "";
		
	КонецЕсли;

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПризнакАгентаПриИзменении(Элемент)
	
	ПризнакАгентаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипЦенНачалоВыбораНаСервере(ПараметрыДействия = Неопределено)
	
	НастроитьПараметрыВыбораЭлементовФормы();
	
КонецПроцедуры 

&НаКлиенте
Процедура ТипЦенНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТипЦенНачалоВыбораНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ДляАвтосервисаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДляАвтосервисаПриИзменении(Элемент)
	
	ДляАвтосервисаПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДляАвтосалонаПриИзменении(Элемент)
	
	ДляАвтосалонаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДляАвтосалонаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДляАрендыПриИзменении(Элемент)

	ДляАрендыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДляАрендыПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДляДепозитаАрендыПриИзменении(Элемент)

	ДляДепозитаАрендыПриИзмененииНаСервере();
	
КонецПроцедуры  

&НаСервере
Процедура ДляДепозитаАрендыПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 	

&НаСервере
Процедура СпособВеденияВзаиморасчетовПриИзмененииНаСервере()
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособВеденияВзаиморасчетовПриИзменении(Элемент)
	
	СпособВеденияВзаиморасчетовПриИзмененииНаСервере();
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовУправленияОбщегоНазначения

&НаКлиенте
Процедура НадписьВзаиморасчетыНажатие(Элемент)
	
	УправлениеДиалогомДокументаКлиент.НадписьВзаиморасчетыНажатие(ЭтотОбъект);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)

	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);

КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияОсновнойДоговор(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Нет Тогда
		Объект.Основной = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаименованиеПоУмолчанию(ПараметрыДействия = Неопределено)
	
	УправлениеДиалогомСервер.СформироватьЗначениеПоУмолчанию(ЭтотОбъект, Объект, ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура НастроитьГруппуПроцентПредоплаты()
	
	Элементы.ПроцентПредоплатыИзНастроек.Заголовок = НСтр("ru = 'Использовать % предоплаты из настроек пользователя ('")
		+ ПраваИНастройкиПользователя.Значение("МинимальныйПроцентПредоплаты", Объект) + "%)";	
	Если Объект.ПроцентПредоплаты >= 0 И ЗначениеЗаполнено(Объект.Ссылка) Тогда  
		ПроцентПредоплатыИзНастроек = 0;
		ПроцентПредоплатыВручную = 1;
		ПолеПроцентПредоплаты = Объект.ПроцентПредоплаты;
	Иначе
		ПроцентПредоплатыИзНастроек = 1;
		ПроцентПредоплатыВручную = 0;
		Объект.ПроцентПредоплаты = -1;
	КонецЕсли;
	Элементы.ПолеПроцентПредоплаты.ТолькоПросмотр = ПроцентПредоплатыИзНастроек;
	
КонецПроцедуры

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса
&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	Если Объект.Владелец.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.КонтактноеЛицо") Тогда
		
		ТекстСообщения = НСтр("ru = 'Запрещен ввод договоров для контрагентов с видом отношений ""Контактное лицо""'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Объект.Владелец = Справочники.Контрагенты.ПустаяСсылка();
		Возврат;
		
	КонецЕсли;
	
	// подставим параметр отбора для фильтрации типа цен
	ВидОперации = Справочники.ДоговорыВзаиморасчетов.ПолучитьВидОперации(Объект.ВидДоговора);
	
	Если Не Элементы.Найти("ТипЦен") = Неопределено Тогда
		
		УправлениеДиалогомСервер.УдалитьПараметрВыбора(Элементы.ТипЦен.ПараметрыВыбора,"Отбор.Продажа");
		УправлениеДиалогомСервер.УдалитьПараметрВыбора(Элементы.ТипЦен.ПараметрыВыбора,"Отбор.Закупка");
		
		Если ВидОперации = Перечисления.ВидыОперацийДоговора.Продажа Тогда
			УправлениеДиалогомСервер.ОбновитьПараметрВыбора(Элементы.ТипЦен.ПараметрыВыбора, "Отбор.Продажа", Истина);
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийДоговора.Покупка Тогда
			УправлениеДиалогомСервер.ОбновитьПараметрВыбора(Элементы.ТипЦен.ПараметрыВыбора, "Отбор.Закупка", Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	СписокВыбораСпособаЗачетаАвансов = Элементы.СпособЗачетаАвансов.СписокВыбора;
	СписокВыбораСпособаЗачетаАвансов.Очистить();
	СписокВыбораСпособаЗачетаАвансов.ЗагрузитьЗначения(
		Справочники.ДоговорыВзаиморасчетов.ДоступныеВидыЗачетаАвансаДляУчета(Объект.СпособВеденияВзаиморасчетов));
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	ЭтоКомиссия = (Объект.ВидДоговора=Перечисления.ВидыДоговоров.СКомитентом) ИЛИ (Объект.ВидДоговора=Перечисления.ВидыДоговоров.СКомиссионером);
	Элементы.ТипСуммыКомиссии.Доступность                   = ЭтоКомиссия;
	Элементы.ПроцентКомиссионногоВознаграждения.Доступность = ЭтоКомиссия;
	Элементы.СуммаКомиссионногоВознаграждения.Доступность   = ЭтоКомиссия;
	Элементы.КомиссияОтчетНаОснованииПродаж.Доступность     = ЭтоКомиссия;
	Если Объект.ТипСуммыКомиссии = 0 Тогда
		Элементы.СуммаКомиссионногоВознаграждения.Видимость = Ложь;
		Элементы.ПроцентКомиссионногоВознаграждения.Видимость = Истина;
	ИначеЕсли Объект.ТипСуммыКомиссии = 1 Тогда
		Элементы.СуммаКомиссионногоВознаграждения.Видимость = Истина;
		Элементы.ПроцентКомиссионногоВознаграждения.Видимость = Ложь;
	КонецЕсли;
	
	// Обновляем заголовок индикатора состояния договора с контрагентом
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьПривилегированныйРежим(Истина);
		ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиВзаиморасчеты(ЭтотОбъект);
		УстановитьПривилегированныйРежим(Ложь);
	Иначе
		Элементы.НадписьВзаиморасчеты.Заголовок = "";
	КонецЕсли;
	
	Элементы.СпособЗачетаАвансов.ТолькоПросмотр =
		НЕ ПраваИНастройкиПользователя.Значение("РедактированиеСпособаЗачатаАвансов", Объект);
	Элементы.МаксимальныйКредит.Доступность = (НЕ Объект.ОтменаКонтроляСуммыКредита);
	Элементы.ТипСкидкиНаценкиРабот.Доступность = Объект.ДляАвтосервиса;
	Элементы.ТипЦенРабот.Доступность           = Объект.ДляАвтосервиса;
	Элементы.ДляАвтосалона.Видимость           = ЗащищенныеФункцииАльфаАвтоСервер.ПодсистемаДоступна("ЗащитаАвтосалон");
	
	НеВиртуальныйДоговор = (НЕ Объект.ТипДоговора = Перечисления.ТипыДоговоров.ВиртуальныйДоговор);
	
	Элементы.ДатаНачала.Доступность    = НеВиртуальныйДоговор;
	Элементы.ДатаКонца.Доступность     = НеВиртуальныйДоговор;
	Элементы.НомерДоговора.Доступность = НеВиртуальныйДоговор;
	
	ДостСрокПоставки = Истина;
	
	Если Объект.Владелец.ВидКонтрагента <> Перечисления.ВидыКонтрагентов.Поставщик Тогда
		ДостСрокПоставки = Ложь;
		Если НЕ Объект.СрокПоставки=0 Тогда
			Объект.СрокПоставки = 0;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.РасчетыВУсловныхЕдиницах.Доступность = 
		Объект.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();

	Элементы.СрокПоставки.Видимость = ДостСрокПоставки;
	Элементы.ГруппаДанныеПоставщика.Доступность = ЗначениеЗаполнено(Объект.ПризнакАгента);
	
	Элементы.СпособЗачетаАвансов.Заголовок =
		РасчетыСКонтрагентамиСервер.ПредставлениеСпособаЗачетаАвансов(Объект.СпособВеденияВзаиморасчетов);
	
КонецПроцедуры // УправлениеДиалогомНаСервере()

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
//@skip-warning
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
    
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

#КонецОбласти

#КонецОбласти

