///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка справочника "Модели"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеоформление();
	
	Если РаботаСФормой.МожноУстановитьОтборПоВладельцу(Параметры) Тогда
		РаботаСФормой.УстановитьОтборПоВладельцуНаДерево(Дерево, Параметры.Отбор);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.СкрытьЭлементыНедоступныеПоКлючу(ЭтотОбъект);
	РаботаСФормой.УстановитьРежимВыбора(ЭтотОбъект, Элементы.Список, Параметры);
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);  
	
	ДоступенАвтосалон = ЗащищенныеФункцииАльфаАвтоСервер.ПодсистемаДоступна("ЗащитаАвтосалон");

	Если Элементы.Список.РежимВыбора Тогда
		Элементы.СтраницыРасширеннаяИнформация.Видимость = Истина;
		Элементы.ПоказатьРасширеннуюИнформацию.Пометка   = Ложь;
		УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	Иначе
		УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	КонецЕсли;
	
	Если Параметры.Свойство("Марка") Тогда
		Если НЕ Параметры.Марка = Справочники.Марки.МаркаНеУказана И НЕ Параметры.Марка = Справочники.Марки.ПустаяСсылка() Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтотОбъект.Список, "Марка", Параметры.Марка,,, ИСТИНА, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("НазначениеМодели") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтотОбъект.Список, "НазначениеМодели", Параметры.НазначениеМодели,,, ИСТИНА, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	КонецЕсли;
		
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаСписка(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаСписка(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаСписка(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	РаботаСФормойКлиент.УстановитьТекущуюСтрокуНаНовыйОбъект(Элементы.Список, НовыйОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Элементы.СтраницыРасширеннаяИнформация.Видимость = Элементы.ПоказатьРасширеннуюИнформацию.Пометка;
	// Производим сохранение параметра отображения дерева элементов
	Настройки.Вставить("СтраницыРасширеннаяИнформацияВидимость", Элементы.СтраницыРасширеннаяИнформация.Видимость);

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
	// Восстанавливаем параметры отображения страниц расширенной информации
	ПоказатьРасширеннуюИнформацию = (НЕ Настройки.Получить("СтраницыРасширеннаяИнформацияВидимость") = Ложь);
	// Произведем настройку параметров отображения полей расширенной информации
	Элементы.СтраницыРасширеннаяИнформация.Видимость = Истина;
	Элементы.ПоказатьРасширеннуюИнформацию.Пометка   = ПоказатьРасширеннуюИнформацию;
	
	УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервере
Процедура СписокПриАктивизацииСтрокиНаСервере()
	
	Цены.Очистить();
	
	Если НЕ ДоступенАвтосалон Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		Запрос=Новый Запрос("
		|ВЫБРАТЬ
		|	ЦеныСрезПоследних.ТипЦен КАК ТипЦен,
		|	ВЫБОР КОГДА ЦеныСрезПоследних.ТипЦен.ВВалютеУчета = ИСТИНА
		|   	ТОГДА ЕСТЬNULL(ЦеныСрезПоследних.ВариантКомплектации.ВалютаУчета, ЦеныСрезПоследних.Автомобиль.ВалютаУчета)
		|       ИНАЧЕ ЦеныСрезПоследних.ТипЦен.ВалютаЦены 
		|   КОНЕЦ КАК ВалютаЦены,
		|	ЦеныСрезПоследних.Цена КАК Цена,
		|	ЦеныСрезПоследних.ВариантКомплектации КАК ВариантКомплектации,
		|	0 КАК ЦенаВРублях
		|ИЗ
		|	РегистрСведений.ЦеныАвтомобилей.СрезПоследних(&НаДату, Автомобиль=&Автомобиль) КАК ЦеныСрезПоследних
		|УПОРЯДОЧИТЬ ПО
		|	ЦеныСрезПоследних.ТипЦен,
		|	ЦеныСрезПоследних.ВариантКомплектации");
		
		Запрос.УстановитьПараметр("НаДату", ТекущаяДатаСеанса());
		Запрос.УстановитьПараметр("Автомобиль", Элементы.Список.ТекущаяСтрока);
		ТабличноеПолеЦены=Запрос.Выполнить().Выгрузить();

		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
		Для Каждого ТекСтрока Из ТабличноеПолеЦены Цикл
			ТекСтрока.ЦенаВРублях = ?(ТекСтрока.ВалютаЦены = ВалютаРегламентированногоУчета, ТекСтрока.Цена,
			РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрока.Цена, ТекСтрока.ВалютаЦены, ТекущаяДатаСеанса(), ВалютаРегламентированногоУчета, ТекущаяДатаСеанса()));
			
			НоваяСтрока = Цены.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_СписокПриАктивизацииСтроки()
	
	УправлениеСпискомСправочникаКлиент.СписокПриАктивизацииСтроки(ЭтотОбъект, Элементы.Список, ИСТИНА);
	СписокПриАктивизацииСтрокиНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	Если ЕстьРеквизитНаКлиенте(Элемент.ТекущиеДанные, "Ссылка") Тогда
		ВариантыКомплектации.Параметры.УстановитьЗначениеПараметра("Владелец", Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	СписокПриАктивизацииСтрокиНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокПриАктивизацииЯчейки(Элемент)

	Если ЕстьРеквизитНаКлиенте(Элемент.ТекущиеДанные, "Ссылка") Тогда
		ВариантыКомплектации.Параметры.УстановитьЗначениеПараметра("Владелец", Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Группа Тогда
		Возврат;
	КонецЕсли;
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеСправочникаМодели");
	Иначе
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеФормыСправочникаМодели");
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если
		ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Элемент.ТекущиеДанные, "ЭтоГруппа")
		И Элемент.ТекущиеДанные.ЭтоГруппа
	Тогда
		Возврат;
	КонецЕсли;
	
	// ОценкаПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеФормыСправочникаМодели");
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)

	// Сменим родителя в основном списке
	Если Элементы.Список.Видимость Тогда
		Если Элементы.Дерево.ТекущаяСтрока=Элементы.Список.ТекущийРодитель Тогда
			// Пропустим если равны
		ИначеЕсли НЕ ЗначениеЗаполнено(Элементы.Список.ТекущийРодитель) И НЕ ЗначениеЗаполнено(Элементы.Дерево.ТекущаяСтрока) Тогда
			// Пропустим если оба пустые (могут быть Неопределено)
		Иначе
			Элементы.Список.ТекущийРодитель = Элементы.Дерево.ТекущаяСтрока;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// РасширеннаяИнформация
&НаКлиенте
Процедура ПоказатьРасширеннуюИнформацию(Команда)
	
	Элементы.ПоказатьРасширеннуюИнформацию.Пометка = (НЕ Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	// Взведем признак необходимости выполнить сохранение настроек формы при закрытии
	СохраняемыеВНастройкахДанныеМодифицированы = Истина;
	ПодключитьОбработчикОжидания("Подключаемый_СписокПриАктивизацииСтроки", 0.5, ИСТИНА);
КонецПроцедуры

// Конец РасширеннаяИнформация

&НаКлиенте
Процедура ПоказатьСкрытьДерево(Команда)
	
	ВидимостьДерева = Не ВидимостьДерева;	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовСтраницыВариантыКомплектации

&НаКлиенте
Процедура ВариантыКомплектацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ВариантыКомплектации.ФормаОбъекта",Новый Структура("Ключ", Элементы.ВариантыКомплектации.ТекущиеДанные.Наименование), ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыКомплектацииПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
    
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
    
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
    
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УстановитьУсловноеОформление()
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УстановитьУсловноеОформление(ЭтотОбъект);
		
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НазначениеМодели.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.НазначениеМодели");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.НазначениеМоделиАвтомобиля.ПродаетсяВАвтосалоне;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);
	//
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НазначениеМодели.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.НазначениеМодели");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.НазначениеМоделиАвтомобиля.ПродаетсяВАвтосалоне;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Продается'"));
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьВидимостьСтраницРасширеннойИнформации(Значение)
	
	Элементы.СтраницаЦены.Видимость = ДоступенАвтосалон И Значение;
	Элементы.СтраницаВариантыКомплектации.Видимость = Значение;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

