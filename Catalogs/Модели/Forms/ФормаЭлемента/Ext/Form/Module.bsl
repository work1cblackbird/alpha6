///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Модели"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Элементы.АдресКартинки.РазмерКартинки = РазмерКартинки.АвтоРазмер;
	Элементы.АдресИзображения.РазмерКартинки = РазмерКартинки.АвтоРазмер;
	
	ЗаполнитьПараметрыТестДрайва();
	СкрытьНастройкиТестДрайва();
	ЗаполнитьСписокВариантовКомплектации(); 
	ЗаполнитьСписокПризнаковПредметаРасчета();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекущаяМаркаПоУмолчанию = УчетныеПолитикиСервер.Значение("МаркаПоУмолчанию", ТекущаяДатаСеанса(), ПараметрыСеанса.ПодразделениеКомпании);
		Если НЕ ЗначениеЗаполнено(Объект.Марка) Тогда
			Если ТекущаяМаркаПоУмолчанию = Справочники.Марки.ПустаяСсылка() Тогда
				Объект.Марка = Справочники.Марки.МаркаНеУказана;
			Иначе
				Объект.Марка = ТекущаяМаркаПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
		
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияНаСервере(ИмяСобытия, ПараметрыДействия=Неопределено)
	
	Если ИмяСобытия = "Запись_Файл"  Тогда
		МассивКартинок = ПолучитьМассивИзображений();
		КолВо = МассивКартинок.Количество();
		Если КолВо > 0 Тогда
			Если НЕ ПолучитьПометкуВидаКартинки() Тогда
				ИндикаторКоличестваКартинок = "" + КолВо + " из " + КолВо +"";
			Иначе
				ИндикаторКоличестваИзображений = "" + КолВо + " из " + КолВо +"";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		Возврат;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИмяСобытия = "Запись_Файл"
		И ПолучитьЗначениеПараметраСтруктуры(Параметр, "Владелец") = Объект.Ссылка Тогда
		Если НЕ ПолучитьПометкуВидаКартинки() Тогда
			Объект.ФайлКартинки = Параметр.Файл;
			Объект.ФайлИзображения = Параметр.Файл;
			ТекущаяКартинка = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
			АдресКартинки = НавигационнаяСсылкаКартинки(ТекущаяКартинка, УникальныйИдентификатор);
			Модифицированность = Истина;
		Иначе
			ТекущееИзображение = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
			АдресИзображения = НавигационнаяСсылкаКартинки(ТекущееИзображение, УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
		
	Если НЕ ИмяСобытия = "Запись_Файл" Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыДействия = Новый Структура;
	ОбработкаОповещенияНаСервере(ИмяСобытия, ПараметрыДействия);
	//СделатьОсновнойКартинкой(Неопределено);
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Свойство("Записан") Тогда
		Если НЕ ПолучитьПометкуВидаКартинки() Тогда
			ЗаписатьПометкуВидаКартинки(ТекущаяКартинка,1);
		Иначе
			ЗаписатьПометкуВидаКартинки(ТекущееИзображение,2);
		КонецЕсли;
	КонецЕсли;
	
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("Модели");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	УправлениеДиалогомНаСервере();
	ЗаписатьИзмененияПараметровТестДрайва();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура НаименованиеПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.Модели.НаименованиеПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеПолноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Объект.НаименованиеПолное = Объект.Наименование;
	
КонецПроцедуры 

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.Модели.КонтрагентПриИзменении(Объект);
	
КонецПроцедуры 

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДоговорВзаиморасчетовПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.Модели.ДоговорВзаиморасчетовПриИзменении(Объект);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДоговорВзаиморасчетовПриИзменении(Элемент)
	
	ДоговорВзаиморасчетовПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаблокироватьДанныеФормыДляРедактирования();
	
	Если НЕ ПолучитьПометкуВидаКартинки() Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ФайлКартинки) И НЕ ЗначениеЗаполнено(ТекущаяКартинка) Тогда
			ДобавитьИзображение(Неопределено);
		Иначе
			ПросмотретьИзображение(Неопределено);
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.ФайлИзображения) И НЕ ЗначениеЗаполнено(ТекущееИзображение) Тогда
			ДобавитьИзображение(Неопределено);
		Иначе
			ПросмотретьИзображение(Неопределено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВариантыКомплектацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ВариантыКомплектации.ФормаОбъекта",Новый Структура("Ключ", Элементы.ВариантыКомплектации.ТекущиеДанные.Наименование), ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыКомплектацииПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница.Заголовок = Элементы.СтраницаВариантыКомплектации.Заголовок Тогда
		ЗаполнитьСписокВариантовКомплектации();
	ИначеЕсли ТекущаяСтраница.Заголовок = Элементы.СтраницаСхемаТС.Заголовок Тогда
		ТекущаяКартинка = Объект.ФайлКартинки;
		
		Если НЕ Объект.ФайлКартинки.Пустая() Тогда
			АдресКартинки = НавигационнаяСсылкаКартинки(Объект.ФайлКартинки, УникальныйИдентификатор);
			МассивКартинок = ПолучитьМассивИзображений();
			Если МассивКартинок.Количество()>0 Тогда
				ИндексКартинки = МассивКартинок.Найти(Объект.ФайлКартинки);
				ИндикаторКоличестваКартинок = "" + ?(ИндексКартинки = Неопределено,0, ИндексКартинки + 1) + " из " + МассивКартинок.Количество() +"";
			КонецЕсли;
		Иначе
			ПолучитьСледующееИзображение("Вперед");
		Конецесли;
	ИначеЕсли ТекущаяСтраница.Заголовок = Элементы.СтраницаОписание.Заголовок Тогда
		ТекущееИзображение = Объект.ФайлИзображения;
		
		Если НЕ Объект.ФайлИзображения.Пустая() Тогда
			АдресИзображения = НавигационнаяСсылкаКартинки(Объект.ФайлИзображения, УникальныйИдентификатор);
			МассивКартинок = ПолучитьМассивИзображений();
			Если МассивКартинок.Количество()>0 Тогда
				ИндексКартинки = МассивКартинок.Найти(Объект.ФайлИзображения);
				ИндикаторКоличестваИзображений = "" + ?(ИндексКартинки = Неопределено,0, ИндексКартинки + 1) + " из " + МассивКартинок.Количество() +"";
			КонецЕсли;
		Иначе
			ПолучитьСледующееИзображение("Вперед");
		Конецесли;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияДобавитьИзображение", ЭтотОбъект, Команда);
		ТекстВопроса = НСтр("ru = 'Для выбора изображения необходимо записать объект. Записать?'");
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		Если НЕ ПолучитьПометкуВидаКартинки() Тогда
			Если НЕ ЗначениеЗаполнено(Объект.ФайлКартинки)  Тогда
				РаботаСФайламиАльфаАвтоКлиент.ДобавитьИзображение(ЭтотОбъект, Объект, Команда);
			Иначе
				ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияДобавитьИзображениеСхемыТС", ЭтотОбъект, Команда);
				ТекстВопроса = НСтр("ru = 'Для схемы ТС доступно использование только одного изображения. Удалить уже существующее?'");
				ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			КонецЕсли;
		Иначе
			РаботаСФайламиАльфаАвтоКлиент.ДобавитьИзображение(ЭтотОбъект, Объект, Команда);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура УдалитьИзображениеНаСервере()
	
	Если ПолучитьПометкуВидаКартинки() И Не ЗначениеЗаполнено(ТекущееИзображение) Тогда
		Возврат;
	КонецЕсли;
	Если Не ПолучитьПометкуВидаКартинки() И Не ЗначениеЗаполнено(ТекущаяКартинка) Тогда
		Возврат;
	КонецЕсли;
	// Получаем объект документа
	Если Не ПолучитьПометкуВидаКартинки() Тогда
		СправочникОбъект = ТекущаяКартинка.ПолучитьОбъект();
	Иначе
		СправочникОбъект = ТекущееИзображение.ПолучитьОбъект();
	КонецЕсли;
	// Установим пометку на удаление
	СправочникОбъект.УстановитьПометкуУдаления(Истина);
	Если  НЕ ПолучитьПометкуВидаКартинки() Тогда 
		ТекущаяКартинка = Справочники.НоменклатураПрисоединенныеФайлы.ПустаяСсылка();
	Иначе
	    ТекущееИзображение = Справочники.НоменклатураПрисоединенныеФайлы.ПустаяСсылка();
	КонецЕсли;
	ПолучитьСледующееИзображение("Вперед");
	
КонецПроцедуры 

&НаКлиенте
Процедура УдалитьИзображение(Команда)
	
	Если НЕ ПолучитьПометкуВидаКартинки() Тогда	
		Если ТекущаяКартинка = Объект.ФайлИзображения Тогда  
			ВывестиСообщение(НСтр("ru = 'Картинка установлена основной. Прежде чем удалить ее необходимо снять признак ""Основная"".'"));
			Возврат;
		КонецЕсли;
		Объект.ФайлКартинки = Неопределено;
		Объект.ФайлИзображения = Неопределено;
		Модифицированность = Истина;
	Иначе
	     Если ТекущееИзображение = Объект.ФайлИзображения Тогда
			ВывестиСообщение(НСтр("ru = 'Картинка установлена основной. Прежде чем удалить ее необходимо снять признак ""Основная"".'"));
			Возврат;
		КонецЕсли;
		Объект.ФайлИзображения = Неопределено;
		Модифицированность = Истина;
	КонецЕсли;

	УдалитьИзображениеНаСервере();

КонецПроцедуры 

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	Если НЕ ПолучитьПометкуВидаКартинки() Тогда 
		Если ЗначениеЗаполнено(Объект.ФайлКартинки) ИЛИ ЗначениеЗаполнено(ТекущаяКартинка) Тогда
			КартинкаДляПросмотра = Объект.ФайлКартинки;
			
			Если (ЗначениеЗаполнено(КартинкаДляПросмотра) И ЗначениеЗаполнено(ТекущаяКартинка) И НЕ ТекущаяКартинка = КартинкаДляПросмотра)
				 ИЛИ НЕ ЗначениеЗаполнено(КартинкаДляПросмотра) Тогда
				КартинкаДляПросмотра = ТекущаяКартинка;
			КонецЕсли;
			
			РаботаСФайламиКлиент.ОткрытьФайл(
				РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайла(
					КартинкаДляПросмотра,
					УникальныйИдентификатор));
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю (НСтр("ru='Отсутствует изображение для просмотра'"));
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Объект.ФайлИзображения) ИЛИ ЗначениеЗаполнено(ТекущееИзображение) Тогда
			КартинкаДляПросмотра = Объект.ФайлИзображения;
			
			Если (ЗначениеЗаполнено(КартинкаДляПросмотра) И ЗначениеЗаполнено(ТекущееИзображение) И НЕ ТекущееИзображение = КартинкаДляПросмотра)
				 ИЛИ НЕ ЗначениеЗаполнено(КартинкаДляПросмотра) Тогда
				КартинкаДляПросмотра = ТекущееИзображение;
			КонецЕсли;
			
			РаботаСФайламиКлиент.ОткрытьФайл(
				РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайла(
					КартинкаДляПросмотра,
					УникальныйИдентификатор));
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю (НСтр("ru='Отсутствует изображение для просмотра'"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура ПросмотретьИзображения(Команда)
	
	ДвижениеПросмотра = ?(СтрНайти(Команда.Имя, "Вперед"), "Вперед", "Назад");
	ПолучитьСледующееИзображение(ДвижениеПросмотра);
	
КонецПроцедуры 

&НаСервере
Процедура СделатьОсновнойКартинкойНаСервере()
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьОсновнойКартинкой(Команда)
	
	Если НЕ ПолучитьПометкуВидаКартинки() Тогда
		
		Если Элементы.СделатьОсновнойКартинкой.Пометка И ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
			Объект.ФайлКартинки = ПредопределенноеЗначение("Справочник.МоделиПрисоединенныеФайлы.ПустаяСсылка");
			Модифицированность = Истина;
		Иначе
			Если РаботаСФайламиАльфаАвтоКлиент.ФайлЯвляетсяДопустимойКартинкой(ТекущаяКартинка) Тогда
				Объект.ФайлКартинки = ТекущаяКартинка;
				Модифицированность = Истина;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Если Элементы.СделатьОсновнымИзображением.Пометка И ЗначениеЗаполнено(Объект.ФайлИзображения) Тогда
			Объект.ФайлИзображения = ПредопределенноеЗначение("Справочник.МоделиПрисоединенныеФайлы.ПустаяСсылка");
			Модифицированность = Истина;
		Иначе
			Если РаботаСФайламиАльфаАвтоКлиент.ФайлЯвляетсяДопустимойКартинкой(ТекущееИзображение) Тогда
				Объект.ФайлИзображения = ТекущееИзображение;
				Модифицированность = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	СделатьОсновнойКартинкойНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьПометкуВидаКартинки(Изображение,Пометка)
	
	ОбъекКартинка = Изображение.ПолучитьОбъект();
	ОбъекКартинка.ВидИспользованияИзображений = Пометка;
	ОбъекКартинка.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыТестДрайва()
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.НастройкиТестДрайва) Тогда
		Возврат;
	КонецЕсли;
	
	ИзначальныеЗначенияПараметровТестДрайва =
		Справочники.Модели.ПолучитьНаборПараметровТестДрайва(Объект.Ссылка, ТекущаяДатаСеанса());
	
	// заполняем параметры
	АнкетаПредварительная         = ИзначальныеЗначенияПараметровТестДрайва.АнкетаПредварительная;
	АнкетаИтоговая                = ИзначальныеЗначенияПараметровТестДрайва.АнкетаИтоговая;
	ПродолжительностьЭксплуатации = ИзначальныеЗначенияПараметровТестДрайва.ПродолжительностьЭксплуатации;
	МаксимальныйПробег            = ИзначальныеЗначенияПараметровТестДрайва.МаксимальныйПробег;
	СрокПоставки                  = ИзначальныеЗначенияПараметровТестДрайва.СрокПоставки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияПараметровТестДрайва()
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.НастройкиТестДрайва) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Справочники.Модели.ПолучитьНаборПараметровТестДрайва(Объект.Ссылка);
	
	Если АнкетаПредварительная        = СтруктураПараметров.АнкетаПредварительная И
		АнкетаИтоговая                = СтруктураПараметров.АнкетаИтоговая И
		ПродолжительностьЭксплуатации = СтруктураПараметров.ПродолжительностьЭксплуатации И
		МаксимальныйПробег            = СтруктураПараметров.МаксимальныйПробег И 
		СрокПоставки                  = СтруктураПараметров.СрокПоставки Тогда
		Возврат;
	КонецЕсли;
	// пишем новые данные
	Менеджер = РегистрыСведений.НастройкиТестДрайва.СоздатьМенеджерЗаписи();
	Менеджер.Период                        = НачалоДня(ТекущаяДатаСеанса());
	Менеджер.Модель                        = Объект.Ссылка;
	Менеджер.АнкетаИтоговая                = АнкетаИтоговая;
	Менеджер.АнкетаПредварительная         = АнкетаПредварительная;
	Менеджер.МаксимальныйПробег            = МаксимальныйПробег;
	Менеджер.ПродолжительностьЭксплуатации = ПродолжительностьЭксплуатации;
	Менеджер.СрокПоставки                  = СрокПоставки;
	
	Менеджер.Записать(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСледующееИзображение(ДвижениеПросмотра)
	
	СписокИзображений = ПолучитьМассивИзображений();
	
	Если НЕ ПолучитьПометкуВидаКартинки() Тогда
		// Выведем очередную картинку
		НомерКартинки = 0;
		Если СписокИзображений.Количество() > 1 Тогда
			КоличествоИзображений = СписокИзображений.Количество();
			Для Индекс = 0 По КоличествоИзображений - 1 Цикл
				Если ТекущаяКартинка = СписокИзображений[Индекс].Ссылка Тогда
					Если ДвижениеПросмотра = "Вперед" Тогда
						Если Индекс = КоличествоИзображений - 1 Тогда
							НомерКартинки = 0;
						Иначе
							НомерКартинки = Индекс + 1;
						КонецЕсли;
					ИначеЕсли ДвижениеПросмотра = "Назад" Тогда
						Если Индекс = 0 Тогда
							НомерКартинки = КоличествоИзображений - 1;
						Иначе
							НомерКартинки = Индекс - 1;
						КонецЕсли;
					КонецЕсли;
					ТекущаяКартинка = СписокИзображений[НомерКартинки];
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// Проверим тип выбранного файла картинки
		Если (ТекущаяКартинка.ИндексКартинки < 42 ИЛИ ТекущаяКартинка.ИндексКартинки > 52) И СписокИзображений.Количество() > 0 Тогда
			ТекущаяКартинка = СписокИзображений[0];
			НомерКартинки = 0;
		КонецЕсли;
		
		Если НЕ ТекущаяКартинка.Пустая() Тогда
			ИндикаторКоличестваКартинок = "" + (НомерКартинки + 1) + " из " + СписокИзображений.Количество();
			АдресКартинки = НавигационнаяСсылкаКартинки(ТекущаяКартинка, УникальныйИдентификатор)
		Иначе
			ИндикаторКоличестваКартинок = "";
			АдресКартинки = "";
		Конецесли;
	Иначе
		НомерКартинки = 0;
		Если СписокИзображений.Количество() > 1 Тогда
			КоличествоИзображений = СписокИзображений.Количество();
			Для Индекс = 0 По КоличествоИзображений - 1 Цикл
				Если ТекущееИзображение = СписокИзображений[Индекс].Ссылка Тогда
					Если ДвижениеПросмотра = "Вперед" Тогда
						Если Индекс = КоличествоИзображений - 1 Тогда
							НомерКартинки = 0;
						Иначе
							НомерКартинки = Индекс + 1;
						КонецЕсли;
					ИначеЕсли ДвижениеПросмотра = "Назад" Тогда
						Если Индекс = 0 Тогда
							НомерКартинки = КоличествоИзображений - 1;
						Иначе
							НомерКартинки = Индекс - 1;
						КонецЕсли;
					КонецЕсли;
					ТекущееИзображение = СписокИзображений[НомерКартинки];
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		// Проверим тип выбранного файла картинки
		Если (ТекущееИзображение.ИндексКартинки < 42 ИЛИ ТекущееИзображение.ИндексКартинки > 52) И СписокИзображений.Количество() > 0 Тогда
			ТекущееИзображение = СписокИзображений[0];
			НомерКартинки = 0;
		КонецЕсли;
		
		Если НЕ ТекущееИзображение.Пустая() Тогда
			ИндикаторКоличестваИзображений = "" + (НомерКартинки + 1) + " из " + СписокИзображений.Количество();
			АдресИзображения = НавигационнаяСсылкаКартинки(ТекущееИзображение, УникальныйИдентификатор)
		Иначе
			ИндикаторКоличестваИзображений = "";
			АдресИзображения = "";
		Конецесли;
	КонецЕсли;

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьМассивИзображений()
	
	ПараметрыФильтрации = Новый Структура;
	Если ПолучитьПометкуВидаКартинки() Тогда
		ПараметрыФильтрации.Вставить("ВидИспользованияИзображений",0);
	Иначе
		ПараметрыФильтрации.Вставить("ВидИспользованияИзображений",1);
	КонецЕсли;
	СписокФайлов = РаботаСФайламиАльфаАвтоВызовСервера.ВсеПодчиненныеФайлы(Объект.Ссылка, ПараметрыФильтрации);
	// Сформируем список форматов изображения
	СписокИзображений = Новый Массив;
	Для Каждого Файл Из СписокФайлов Цикл
		Если НЕ Файл.ПометкаУдаления И Файл.ИндексКартинки > 41 И Файл.ИндексКартинки < 51 Тогда
			СписокИзображений.Добавить(Файл);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокИзображений;
	
КонецФункции

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		АдресКартинки = РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	Исключение
		ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		АдресКартинки = "";
	КонецПопытки;
	
	Возврат АдресКартинки;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияДобавитьИзображение(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		Если Записать() Тогда
			РаботаСФайламиАльфаАвтоКлиент.ДобавитьИзображение(ЭтотОбъект, Объект, ДополнительныеПараметры);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВариантовКомплектации()
	
	ВариантыКомплектации.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыКомплектации.Ссылка КАК Наименование,
		|	ВариантыКомплектации.Артикул
		|ИЗ
		|	Справочник.ВариантыКомплектации КАК ВариантыКомплектации
		|ГДЕ
		|	ВариантыКомплектации.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		НоваяСтрока = ВариантыКомплектации.Добавить();
		НоваяСтрока.Наименование = РезультатЗапроса.Наименование;
		НоваяСтрока.Артикул = РезультатЗапроса.Артикул;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПометкуВидаКартинки()
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "СтраницаОписание" Тогда
		Возврат Истина;	
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияДобавитьИзображениеСхемыТС(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		УдалитьИзображение(Неопределено);
		РаботаСФайламиАльфаАвтоКлиент.ДобавитьИзображение(ЭтотОбъект, Объект, ДополнительныеПараметры);
		СделатьОсновнойКартинкой(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СкрытьНастройкиТестДрайва()
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.НастройкиТестДрайва) Тогда
		Элементы.СрокПоставкиГруппа.Видимость 			= Ложь;
		Элементы.Декорация.Видимость 					= Ложь;
		Элементы.АнкетыДляТестДрайва.Видимость 			= Ложь;
		Элементы.ЭксплуатацияПриТестДрайве.Видимость 	= Ложь;
	КонецЕсли;
		
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокПризнаковПредметаРасчета() 
	
	ПараметрыВыбораПредметаРасчета = Новый Массив();
	ПредметыРасчета = Новый Массив();  
	
	ПредметыРасчета.Добавить(Перечисления.ПризнакиПредметаРасчета.Товар);
	ПредметыРасчета.Добавить(Перечисления.ПризнакиПредметаРасчета.ПодакцизныйТовар);	
	
	Параметр = Новый ПараметрВыбора("Отбор.Ссылка",Новый ФиксированныйМассив(ПредметыРасчета)); 
	ПараметрыВыбораПредметаРасчета.Добавить(Параметр);
	ЭтаФорма.Элементы.ПризнакПредметаРасчета.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПредметаРасчета);	
	
КонецПроцедуры
#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	Если НЕ ПолучитьПометкуВидаКартинки() Тогда	
		Элементы.СделатьОсновнойКартинкой.Пометка = 
			?(Объект.ФайлКартинки = ТекущаяКартинка
			И ТекущаяКартинка <> Справочники.МоделиПрисоединенныеФайлы.ПустаяСсылка(),
			Истина, Ложь);		
	Иначе
		Элементы.СделатьОсновнымИзображением.Пометка = 
			?(Объект.ФайлИзображения = ТекущееИзображение
			И ТекущееИзображение <> Справочники.МоделиПрисоединенныеФайлы.ПустаяСсылка(),
			Истина, Ложь);
	КонецЕсли;
	
	РаботаСФайламиАльфаАвто.УстановитьДоступностьКомандДляИзображений(Объект, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	УправлениеДиалогомСправочникаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти