// Модуль менеджера справочника "Виды событий"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника Организации.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением.
//                                  Например:
//                                    Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                    ЭлементТЧ = Элемент.Ключи.Добавить();
//                                    ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗавершениеСделки";
	Элемент.Код                       = "000000001";
	Элемент.Наименование              = НСтр("ru = 'Завершение сделки'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.Встреча;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОтказОтСделки";
	Элемент.Код                       = "000000003";
	Элемент.Наименование              = НСтр("ru = 'Отказ от сделки'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.Встреча;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТестДрайв";
	Элемент.Код                       = "000000005";
	Элемент.Наименование              = НСтр("ru = 'Тест-драйв'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.Встреча;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВходящийЗвонок";
	Элемент.Код                       = "000000006";
	Элемент.Наименование              = НСтр("ru = 'Входящий звонок'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.Звонок;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ИсходящийЗвонок";
	Элемент.Код                       = "000000007";
	Элемент.Наименование              = НСтр("ru = 'Исходящий звонок'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.Звонок;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЭлектронноеОбращение";
	Элемент.Код                       = "000000008";
	Элемент.Наименование              = НСтр("ru = 'Электронное обращение'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.ЭлектронноеОбращение;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЭлектронноеОбращение";
	Элемент.Код                       = "000000008";
	Элемент.Наименование              = НСтр("ru = 'Электронное обращение'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.ЭлектронноеОбращение;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Встреча";
	Элемент.Код                       = "000000009";
	Элемент.Наименование              = НСтр("ru = 'Встреча'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.Встреча;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Прочее";
	Элемент.Код                       = "000000010";
	Элемент.Наименование              = НСтр("ru = 'Прочее'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.Прочее;	

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыдачаАвтомобиля";
	Элемент.Код                       = "000000011";
	Элемент.Наименование              = НСтр("ru = 'Выдача автомобиля'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипСобытия                = Перечисления.ТипыСобытий.Встреча;	
	
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.  
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти
 
#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	ОбязательныеРеквизиты.Добавить("ТипСобытия");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

// Функция, которая возвращает запрещенные виды события для выбора
// 
// Возвращаемое значение:
//  Массив - запрещенные для выбора события
//
Функция ЗапрещенныеВидыСобытий() Экспорт
	
	ВидыСобытий = Новый Массив;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ДоступенАвтосалон") Тогда
		
		ВидыСобытий.Добавить(Справочники.ВидыСобытий.ВыдачаАвтомобиля);
		
	КонецЕсли;
	
	Возврат ВидыСобытий;
	
КонецФункции

#КонецОбласти

#КонецЕсли
