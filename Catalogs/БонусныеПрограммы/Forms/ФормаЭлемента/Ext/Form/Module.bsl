///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Бонусные программы"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	БлокироватьЭлементыФормы();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПереключательАктивации = 1;

		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ПравилаНачисленияБонусов");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ПравилаСписанияБонусов");
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПереключательАктивации = ?(БонусныеПрограммыСервер.БонуснаяПрограммаАктивна(ТекущийОбъект.Ссылка), 0, 1);
	БлокироватьЭлементыФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("БонусныеПрограммы");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПереключательАктивацииПриИзменении(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда
		ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаДеактивации", ЭтотОбъект, Новый Структура("ИмяСобытия", "ЗаписьНовогоЭлемента"));
		ПоказатьВопрос(ОбработчикОповещения, "Элемент еще не записан, ввод связанных с ним данных не возможен. Записать элемент?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	ИначеЕсли ПереключательАктивации = 1 И ОстаткиБалловБонуснойПрограммы() Тогда
		ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаДеактивации", ЭтотОбъект, Новый Структура("ИмяСобытия", "ДеактивацияБонуснойПрограммы"));
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'По данной бонусной программе есть остатки баллов. %1Деактивировать ее?'"),Символы.ПС);
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет, "Деактивация бонусной программы.");
	Иначе
		УстановитьАктивностьБонуснойПрограммы();
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПравилаНачисленияБонусов

#Область ОбработчикиСобытийПолейТаблицыФормыПравилаНачисленияБонусов

&НаКлиенте
Процедура ПравилаНачисленияБонусовГруппаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработчикВыбораГруппыПравилаБонусов", ЭтотОбъект, Новый Структура("Элемент", Элемент));
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("Автоработы", "Автоработы");
	СписокВыбора.Добавить("Номенклатура", "Номенклатура");
	СписокВыбора.Добавить("ТипыНоменклатуры", "Типы номенклатуры");
	СписокВыбора.ПоказатьВыборЭлемента(ОбработчикОповещения,"Выбор типа данных", Элемент);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОстаткиБалловБонуснойПрограммы()
	
	Возврат БонусныеПрограммыСервер.ОстаткиБалловБонуснойПрограммы(Объект.Ссылка);
	
КонецФункции

&НаСервере
Процедура УстановитьАктивностьБонуснойПрограммы()
	
	БонусныеПрограммыСервер.УстановитьАктивностьБонуснойПрограммы(Объект.Ссылка, ?(ПереключательАктивации = 0, Истина, Ложь));
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаДеактивации(РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.ИмяСобытия = "ЗаписьНовогоЭлемента" Тогда
		Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
			Попытка 
				ЭтотОбъект.Записать();
			Исключение
				Возврат;
			КонецПопытки;
		Иначе
			Возврат;
		КонецЕсли;
	ИначеЕсли ДополнительныеПараметры.ИмяСобытия = "ДеактивацияБонуснойПрограммы" И НЕ (РезультатОповещения = КодВозвратаДиалога.Да) И ПереключательАктивации = 1 Тогда
		ПереключательАктивации = 0;
	КонецЕсли;
	
	УстановитьАктивностьБонуснойПрограммы();
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработчикВыбораГруппыПравилаБонусов(РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	Если РезультатОповещения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ИмяФормыВыбора = "Справочник."+РезультатОповещения.Значение+"."+?(РезультатОповещения.Значение = "ТипыНоменклатуры", "ФормаВыбора", "ФормаВыбораГруппы");
	ОткрытьФорму(ИмяФормыВыбора, ПараметрыФормы, ДополнительныеПараметры.Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры 

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
//@skip-warning
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
КонецПроцедуры 

&НаСервере
Процедура БлокироватьЭлементыФормы()
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПереключательАктивации", "ТолькоПросмотр",
																	Не ПравоДоступа("Изменение", Метаданные.Справочники.БонусныеПрограммы));
		
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

