
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриСозданииНаСервере(ЭтотОбъект, Объект.Наименование);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
	// Дальнейшие операции выполняются только для новых объектов
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СформироватьНаименованиеПоУмолчанию();
		КэшНаименование = Справочники.ПодтверждающиеДокументы.СформироватьНаименованиеПоУмолчанию(Объект);
		Возврат;
	КонецЕсли;
	
	// Заполним реквизиты из параметра
	Если Параметры.Свойство("Владелец") Тогда
		Объект.Владелец = Параметры.Владелец;
	КонецЕсли;
				
	Если Параметры.Свойство("ВидПодтверждающегоДокумента") Тогда
		Объект.ВидПодтверждающегоДокумента = Параметры.ВидПодтверждающегоДокумента;
	КонецЕсли;
		
	Если Параметры.Свойство("СуммаДокумента") Тогда
		Объект.СуммаДокумента = Параметры.СуммаДокумента;
	КонецЕсли;  
	
	Если Параметры.Свойство("Контрагент") Тогда
		Объект.Контрагент = Параметры.Контрагент;
	КонецЕсли; 
	
	Если Параметры.Свойство("ДокументДоверенности") Тогда
		Объект.ДокументДоверенности = Параметры.ДокументДоверенности;
	КонецЕсли;
	
	
	СформироватьНаименованиеПоУмолчанию();
	КэшНаименование = Справочники.ПодтверждающиеДокументы.СформироватьНаименованиеПоУмолчанию(Объект);
	
	СформироватьСписокВыбораКодаВидаДокументаУдостоверяющегоЛичность();
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Произведем настройку параметров отображения кнопок командной панели списка Товары.
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "Товары");
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если
		НЕ ЗавершениеРаботы
		И НЕ Объект.Ссылка.Пустая()
		И ОписаниеОповещенияОЗакрытии <> Неопределено
		И ТипЗнч(ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры) = Тип("Структура")
		И ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры.Свойство("Результат")
	Тогда
		
		ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры.Результат = Объект.Ссылка;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	    Возврат;
	    
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	СформироватьСписокВыбораКодаВидаДокументаУдостоверяющегоЛичность();
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ПодтверждающиеДокументы");
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриЗаписиФормыОбъектаСклонения(
		ЭтотОбъект,
		Объект.Наименование,
		ТекущийОбъект.Ссылка
	);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("ПодтверждающиеДокументыПослеЗаписи", Объект.Ссылка);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектовКлиент.ПросклонятьПредставление(ЭтотОбъект, Объект.Наименование);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
КонецПроцедуры 

&НаСервере
Процедура УстаревшийПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ПодтверждающиеДокументы.УстаревшийПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура УстаревшийПриИзменении(Элемент)
	
	УстаревшийПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТекущийПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ПодтверждающиеДокументы.ТекущийПриИзмененииНаСервере(Объект, ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийПриИзменении(Элемент)

	ТекущийПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ВидДокументаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
	Объект.КодВидаДокументаУдостоверяющегоЛичность =
		МенеджерОборудованияАвтосалонКлиентСервер
		.КодВидаДокументаУдостоверяющегоЛичностьПоВидуПодтверждающегоДокумента(Объект.ВидПодтверждающегоДокумента);
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Обработаем событие в контексте сервера
	ВидДокументаПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура СерияПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура СерияПриИзменении(Элемент)
	
	СерияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НомерПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	
	НомерПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ДатаВыдачиПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДатаВыдачиПриИзменении(Элемент)

	ДатаВыдачиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументДоверенностиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НастроитьПараметрыВыбораЭлементовФормы();
	
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	КэшНаименование = ВыбранноеЗначение;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ПодтверждающиеДокументы.ОрганизацияПриИзменении(Объект, ПараметрыДействия);
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

#Область ОбработчикиСобытийПолейТаблицыФормыТовары

&НаСервере
Процедура ТоварыНоменклатураПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Справочники.ПодтверждающиеДокументы.ТоварыНоменклатураПриИзменении(Объект, ТекущиеДанные);
	УправлениеДиалогомДокументаСервер.НоменклатураПриИзменении(ЭтотОбъект, ТекущиеДанные);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)

	ТоварыНоменклатураПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыХарактеристикаНоменклатурыПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Справочники.ПодтверждающиеДокументы.ТоварыХарактеристикаНоменклатурыПриИзменении(Объект, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаНоменклатурыПриИзменении(Элемент)
	
	ТоварыХарактеристикаНоменклатурыПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ТоварыЕдиницаИзмеренияПриИзмененииНаСервере()
	

	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	Справочники.ПодтверждающиеДокументы.ТоварыЕдиницаИзмеренияПриИзменении(Объект, ТекущиеДанные);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	ТоварыЕдиницаИзмеренияПриИзмененииНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)

	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);

КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаКлиенте
Процедура Склонения(Команда)
	
	СклонениеПредставленийОбъектовКлиент.ПоказатьСклонение(ЭтотОбъект, Объект.Наименование);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаКлиенте
Процедура ПодборНоменклатуры(Команда)
	
	ПараметрыДействия = Новый Структура();
	ПараметрыДействия.Вставить("НеУстанавливатьОтборНаОстаток", Истина);
	
	// Вызываем общий обработчик события
	УправлениеДиалогомКлиент.ОткрытьПодборНоменклатуры(ЭтотОбъект,,,,, ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура СформироватьНаименованиеПоУмолчанию(ПараметрыДействия=Неопределено)
	
	УправлениеДиалогомСервер.СформироватьЗначениеПоУмолчанию(ЭтотОбъект, Объект, ПараметрыДействия);
	
КонецПроцедуры // СформироватьНаименованиеПоУмолчанию()

// СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаКлиенте
Процедура Подключаемый_ПросклонятьПредставлениеПоВсемПадежам() 
	
	СклонениеПредставленийОбъектовКлиент.ПросклонятьПредставление(ЭтотОбъект, Объект.Наименование);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	Если Не Элементы.Найти("ДокументДоверенности")=Неопределено Тогда
		Если Объект.ВидПодтверждающегоДокумента=Перечисления.ВидыДокументов.Доверенность Тогда
			УправлениеДиалогомСервер.ОбновитьПараметрВыбора(Элементы.ДокументДоверенности.ПараметрыВыбора, "Отбор.Владелец", Объект.Владелец);
		Иначе
			УправлениеДиалогомСервер.ОбновитьПараметрВыбора(Элементы.ДокументДоверенности.ПараметрыВыбора, "Отбор.Владелец", Объект.Контрагент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);

	Элементы.Номер.Маска 			= "";
	Элементы.ДатаВыдачи.Заголовок 	= "";
	Элементы.ДатаВыдачи.Подсказка 	= НСтр("ru = 'Дата выдачи подтверждающего документа'");
	
	Если Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Сертификат
		ИЛИ Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Свидетельство
		ИЛИ Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Удостоверение
		ИЛИ Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.ВидНаЖительствоИностранногоГражданина
		ИЛИ Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Лицензия Тогда
		Элементы.СтраницаИдентификационныеДанные.Видимость = Ложь;
		Элементы.СтраницаТовары.Видимость                  = Ложь; 
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Ложь;	
		Элементы.ВладелецДокумента.Видимость               = Истина;
		Элементы.КодПодразделения.Видимость                = Ложь;
		Элементы.НомерБланка.Видимость                     = Ложь; 
		Элементы.ДатаОкончания.Видимость                   = Истина;
		Элементы.Товары.ТекущаяСтрока                      = Неопределено;
		Объект.Товары.Очистить();
		Элементы.НомерВРеестреОператоровТО.Видимость       = Ложь;
        Элементы.КемВыдан.Видимость                        = Истина;
		Элементы.Серия.Видимость                           = Истина;
		Элементы.ДокументДоверенности.Видимость			   = Истина;
		Элементы.Лицензия.Видимость                        = Истина;
		Элементы.СуммаДокумента.Видимость                  = Истина;
		Элементы.ВалютаДокумента.Видимость                 = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.СвидетельствоОРегистрацииТС Тогда
		Элементы.КодПодразделения.Видимость                = Истина;
		Элементы.КодПодразделения.Маска                    = "";
		Элементы.КодПодразделения.Заголовок                = НСтр("ru = 'Код подразделения ГИБДД'");	
		Элементы.НомерБланка.Видимость                     = Ложь;
		Элементы.ДатаОкончания.Видимость                   = Ложь;
		Элементы.СтраницаИдентификационныеДанные.Видимость = Ложь;
		Элементы.СтраницаТовары.Видимость                  = Ложь;
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Ложь;
		Элементы.ВладелецДокумента.Видимость               = Истина;
		Элементы.Товары.ТекущаяСтрока                      = Неопределено;
		Объект.Товары.Очистить();
		Элементы.НомерВРеестреОператоровТО.Видимость       = Ложь;
        Элементы.КемВыдан.Видимость                        = Истина;
		Элементы.Серия.Видимость                           = Истина;
		Элементы.ДокументДоверенности.Видимость			   = Истина;
		Элементы.Лицензия.Видимость                        = Истина;
		Элементы.СуммаДокумента.Видимость                  = Истина;
		Элементы.ВалютаДокумента.Видимость                 = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Прочее Тогда
		Элементы.СтраницаИдентификационныеДанные.Видимость = Ложь;
		Элементы.СтраницаТовары.Видимость                  = Ложь; 
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Ложь;
		Элементы.ВладелецДокумента.Видимость               = Истина;
		Элементы.КодПодразделения.Видимость                = Ложь;
		Элементы.Товары.ТекущаяСтрока                      = Неопределено;
		Элементы.НомерБланка.Видимость                     = Истина;
		Элементы.ДатаОкончания.Видимость                   = Истина;
		Объект.Товары.Очистить();
		Элементы.НомерВРеестреОператоровТО.Видимость       = Ложь;
		Элементы.Серия.Видимость                           = Истина;
		Элементы.ДокументДоверенности.Видимость			   = Истина;
		Элементы.Лицензия.Видимость                        = Истина;
		Элементы.СуммаДокумента.Видимость                  = Истина;
		Элементы.ВалютаДокумента.Видимость                 = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Доверенность Тогда
		Элементы.ВладелецДокумента.Видимость               = Ложь;
		Элементы.СтраницаИдентификационныеДанные.Видимость = Истина;
		Элементы.Контрагент.Заголовок					   = НСтр("ru = 'На получение от'");
		Элементы.Контрагент.Подсказка					   = НСтр("ru = 'Поставщик, от которого получают материальные ценности'");
		Элементы.Владелец.Заголовок						   = НСтр("ru = 'Владелец'");
		Элементы.Владелец.Подсказка						   = НСтр("ru = 'Владелец подтверждающего документа'");
		Элементы.СтраницаТовары.Видимость                  = Истина; 
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Ложь;
		Элементы.КодПодразделения.Видимость                = Ложь;
		Элементы.НомерВРеестреОператоровТО.Видимость       = Ложь;
		Элементы.Лицензия.Видимость                        = Ложь;
		Элементы.СуммаДокумента.Видимость                  = Ложь;
		Элементы.ВалютаДокумента.Видимость                 = Ложь;
		Элементы.НомерБланка.Видимость                     = Ложь;
        Элементы.КемВыдан.Видимость                        = Ложь;
		Элементы.ДатаОкончания.Видимость                   = Истина;
		Элементы.Серия.Видимость                           = Истина;
		Элементы.ДокументДоверенности.Видимость			   = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.ПТС Тогда
		Элементы.ВладелецДокумента.Видимость               = Истина;
		Элементы.СтраницаИдентификационныеДанные.Видимость = Истина;
		Элементы.Контрагент.Заголовок					   = НСтр("ru = 'Собственник'");
		Элементы.Контрагент.Подсказка					   = НСтр("ru = 'Наименование (Ф.И.О.) собственника'");
		Элементы.Владелец.Заголовок						   = НСтр("ru = 'Автомобиль'");
		Элементы.Владелец.Подсказка						   = НСтр("ru = 'Транспортное средство'");
		Элементы.СтраницаТовары.Видимость                  = Ложь; 
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Ложь;
		Элементы.НомерВРеестреОператоровТО.Видимость       = Ложь;
		Элементы.Лицензия.Видимость                        = Истина;
		Элементы.СуммаДокумента.Видимость                  = Истина;
		Элементы.ВалютаДокумента.Видимость                 = Истина;
		Элементы.КодПодразделения.Видимость                = Ложь;
		Элементы.ДатаОкончания.Видимость                   = Ложь;
		Элементы.НомерБланка.Видимость                     = Ложь;
		Элементы.Товары.ТекущаяСтрока                      = Неопределено;
		Объект.Товары.Очистить();
        Элементы.КемВыдан.Видимость                        = Истина;
		Элементы.Серия.Видимость                           = Истина;
		Элементы.ДокументДоверенности.Видимость			   = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.ЭлектронныйПТС Тогда
		Элементы.ВладелецДокумента.Видимость               = Истина;
		Элементы.Номер.Маска 							   = "999999999999999"; 
		Элементы.ДатаВыдачи.Заголовок					   = НСтр("ru = 'Дата оформления'");
		Элементы.ДатаВыдачи.Подсказка 					   = НСтр("ru = 'Дата оформления документа'");
        Элементы.КемВыдан.Видимость                        = Ложь;
		Элементы.Серия.Видимость                           = Ложь;
		Элементы.СтраницаИдентификационныеДанные.Видимость = Истина;
		Элементы.Контрагент.Заголовок					   = НСтр("ru = 'Собственник'");
		Элементы.Контрагент.Подсказка					   = НСтр("ru = 'Наименование (Ф.И.О.) собственника'");
		Элементы.Владелец.Заголовок						   = НСтр("ru = 'Автомобиль'");
		Элементы.Владелец.Подсказка						   = НСтр("ru = 'Транспортное средство'");
		Элементы.СтраницаТовары.Видимость                  = Ложь; 
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Ложь;
		Элементы.НомерВРеестреОператоровТО.Видимость       = Ложь;
		Элементы.Лицензия.Видимость                        = Истина;
		Элементы.СуммаДокумента.Видимость                  = Истина;
		Элементы.ВалютаДокумента.Видимость                 = Истина;
		Элементы.КодПодразделения.Видимость                = Ложь;
		Элементы.ДатаОкончания.Видимость                   = Ложь;
		Элементы.НомерБланка.Видимость                     = Ложь;
		Элементы.Товары.ТекущаяСтрока                      = Неопределено;
		Объект.Товары.Очистить();
		Элементы.ДокументДоверенности.Видимость			   = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.АттестатТО Тогда
		Элементы.ВладелецДокумента.Видимость               = Истина;
		Элементы.СтраницаИдентификационныеДанные.Видимость = Ложь;
		Элементы.СтраницаТовары.Видимость                  = Ложь;
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Ложь;
		Элементы.НомерВРеестреОператоровТО.Видимость       = Истина;
		Элементы.КодПодразделения.Видимость                = Ложь;
		Элементы.НомерБланка.Видимость                     = Ложь; 
		Элементы.ДатаОкончания.Видимость                   = Истина;
		Элементы.Товары.ТекущаяСтрока                      = Неопределено;
		Объект.Товары.Очистить();
        Элементы.КемВыдан.Видимость                        = Истина;
		Элементы.Серия.Видимость                           = Истина;
		Элементы.ДокументДоверенности.Видимость			   = Истина;
		Элементы.Лицензия.Видимость                        = Истина;
		Элементы.СуммаДокумента.Видимость                  = Истина;
		Элементы.ВалютаДокумента.Видимость                 = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Паспорт Тогда
		Элементы.КодПодразделения.Видимость                = Истина;
		Элементы.КодПодразделения.Маска                    = "999-999";
		Элементы.КодПодразделения.Заголовок                = НСтр("ru = 'Код подразделения'");
		Элементы.СтраницаИдентификационныеДанные.Видимость = Ложь;
		Элементы.СтраницаТовары.Видимость                  = Ложь;
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Ложь;
		Элементы.ВладелецДокумента.Видимость               = Истина;
		Элементы.Товары.ТекущаяСтрока                      = Неопределено;
		Объект.Товары.Очистить();
		Элементы.НомерВРеестреОператоровТО.Видимость       = Ложь;
		Элементы.НомерБланка.Видимость                     = Ложь; 
		Элементы.ДатаОкончания.Видимость                   = Истина;
        Элементы.КемВыдан.Видимость                        = Истина;
		Элементы.Серия.Видимость                           = Истина;
		Элементы.ДокументДоверенности.Видимость			   = Истина;
		Элементы.Лицензия.Видимость                        = Истина;
		Элементы.СуммаДокумента.Видимость                  = Истина;
		Элементы.ВалютаДокумента.Видимость                 = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.ВодительскоеУдостоверение Тогда
		Элементы.СтраницаИдентификационныеДанные.Видимость = Ложь;
		Элементы.СтраницаТовары.Видимость                  = Ложь;
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Истина;
		Элементы.ВладелецДокумента.Видимость               = Истина;
		Элементы.КодПодразделения.Видимость                = Ложь;
		Элементы.Товары.ТекущаяСтрока                      = Неопределено;
		Элементы.НомерБланка.Видимость                     = Ложь;
		Элементы.ДатаОкончания.Видимость                   = Истина;
		Объект.Товары.Очистить();	                                 
		Элементы.НомерВРеестреОператоровТО.Видимость       = Ложь;
		Элементы.Серия.Видимость                           = Истина;
		Элементы.Лицензия.Видимость                        = Истина;
		Элементы.СуммаДокумента.Видимость                  = Истина;
		Элементы.ВалютаДокумента.Видимость                 = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Приказ Тогда
		Элементы.СтраницаИдентификационныеДанные.Видимость			= Истина; 
		Элементы.КодВидаДокументаУдостоверяющегоЛичность.Видимость  = Ложь;
		Элементы.КемВыдан.Видимость									= Ложь;
        Элементы.Серия.Видимость									= Ложь;
        Элементы.КодПодразделения.Видимость							= Ложь;
		Элементы.Контрагент.Видимость								= Ложь;
		Элементы.ДокументДоверенности.Видимость						= Ложь;  
		Элементы.Лицензия.Видимость									= Ложь;
		Элементы.СуммаДокумента.Видимость							= Ложь;  
		Элементы.ВалютаДокумента.Видимость							= Ложь; 
		Элементы.СтраницаТовары.Видимость							= Ложь;
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость				= Ложь;
		Элементы.ВладелецДокумента.Видимость						= Ложь;
		Элементы.Товары.ТекущаяСтрока								= Неопределено;
		Элементы.НомерБланка.Видимость								= Ложь;
		Элементы.ДатаВыдачи.Видимость								= Истина;
		Элементы.ДатаОкончания.Видимость							= Истина;
		Объект.Товары.Очистить();	                                 
		Элементы.НомерВРеестреОператоровТО.Видимость				= Ложь;  
	ИначеЕсли Объект.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Устав Тогда
		Элементы.СтраницаИдентификационныеДанные.Видимость			= Истина; 
		Элементы.КодВидаДокументаУдостоверяющегоЛичность.Видимость  = Ложь;
		Элементы.КемВыдан.Видимость									= Ложь;
        Элементы.Серия.Видимость									= Ложь;
        Элементы.КодПодразделения.Видимость							= Ложь;
		Элементы.Контрагент.Видимость								= Ложь;
		Элементы.ДокументДоверенности.Видимость						= Ложь;  
		Элементы.Лицензия.Видимость									= Ложь;
		Элементы.СуммаДокумента.Видимость							= Ложь;  
		Элементы.ВалютаДокумента.Видимость							= Ложь; 
		Элементы.СтраницаТовары.Видимость							= Ложь;
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость				= Ложь;
		Элементы.ВладелецДокумента.Видимость						= Ложь;
		Элементы.Товары.ТекущаяСтрока								= Неопределено;
		Элементы.НомерБланка.Видимость								= Ложь;
		Элементы.ДатаВыдачи.Видимость								= Ложь;
		Элементы.ДатаОкончания.Видимость							= Ложь; 
		Элементы.Номер.Видимость									= Ложь;	 
		Объект.Товары.Очистить();	
		Элементы.НомерВРеестреОператоровТО.Видимость				= Ложь;  
	Иначе
		Элементы.СтраницаИдентификационныеДанные.Видимость = Ложь;
		Элементы.СтраницаТовары.Видимость                  = Ложь;  
		Элементы.СтраницаСтажиПоКатегориямТС.Видимость     = Ложь;
		Элементы.ВладелецДокумента.Видимость               = Истина;
		Элементы.КодПодразделения.Видимость                = Ложь;
		Элементы.Товары.ТекущаяСтрока                      = Неопределено;
		Элементы.НомерБланка.Видимость                     = Ложь;
		Элементы.ДатаОкончания.Видимость                   = Ложь;
		Объект.Товары.Очистить();  
		Элементы.НомерВРеестреОператоровТО.Видимость       = Ложь;
        Элементы.КемВыдан.Видимость                        = Истина;
		Элементы.Серия.Видимость                           = Истина;
		Элементы.ДокументДоверенности.Видимость			   = Истина;
		Элементы.Лицензия.Видимость                        = Истина;
		Элементы.СуммаДокумента.Видимость                  = Истина;
		Элементы.ВалютаДокумента.Видимость                 = Истина;
		Элементы.Контрагент.Видимость					   = Истина;
	КонецЕсли;
	
	// Получим данные текущей строки табличной части
	Если НЕ Элементы.Товары.ТекущаяСтрока = Неопределено Тогда
		ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
		Если Не ТекущиеДанные = Неопределено Тогда
			Если ТипЗнч(ТекущиеДанные.Номенклатура)=Тип("СправочникСсылка.Номенклатура") Тогда
				Элементы.Товары.ПодчиненныеЭлементы.ЕдиницаКоэффициент.ПодчиненныеЭлементы.ТоварыЕдиницаИзмерения.Доступность = Истина;
				Элементы.Товары.ПодчиненныеЭлементы.ЕдиницаКоэффициент.ПодчиненныеЭлементы.ТоварыКоэффициент.Доступность      = Истина;
				Элементы.Товары.ПодчиненныеЭлементы.ТоварыХарактеристикаНоменклатуры.Доступность                              = Истина;
			ИначеЕсли ТипЗнч(ТекущиеДанные.Номенклатура)=Тип("Строка") Тогда
				Элементы.Товары.ПодчиненныеЭлементы.ЕдиницаКоэффициент.ПодчиненныеЭлементы.ТоварыЕдиницаИзмерения.Доступность = Ложь;
				Элементы.Товары.ПодчиненныеЭлементы.ЕдиницаКоэффициент.ПодчиненныеЭлементы.ТоварыКоэффициент.Доступность      = Ложь;
				Элементы.Товары.ПодчиненныеЭлементы.ТоварыХарактеристикаНоменклатуры.Доступность                              = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Обновим колонку владельцев характеристик и единиц измерения
	Если ЕстьРеквизит(Объект,, "Товары") Тогда
		ЗащищенныеФункцииСервер.ЗаполнитьСлужебныеРеквизитыТабличнойЧасти(Объект.Товары);
	КонецЕсли;
	
	ТабличнаяЧасть   = Объект.Товары;
	БезХарактеристик = Новый Структура("ВладелецХарактеристики", Неопределено);
	Элементы.ТоварыХарактеристикаНоменклатуры.Видимость = (НЕ ТабличнаяЧасть.Выгрузить(БезХарактеристик, "ХарактеристикаНоменклатуры").Количество()=ТабличнаяЧасть.Количество());
	
КонецПроцедуры // УправлениеДиалогомНаСервере()

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Вызываем общий обработчик действия.
	УправлениеДиалогомСправочникаСервер.УстановитьУсловноеОформление(ЭтотОбъект);
	
	УправлениеДиалогомДокументаСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект);
	
КонецПроцедуры // УстановитьУсловноеОформление()

#КонецОбласти

&НаСервере
Процедура СформироватьСписокВыбораКодаВидаДокументаУдостоверяющегоЛичность()
	
	Элементы.КодВидаДокументаУдостоверяющегоЛичность.СписокВыбора.Очистить();
	СписокВидовДокументов = МенеджерОборудованияАвтосалонКлиентСервер.ВидыДокументовУдостоверяющихЛичность();
	
	Для Каждого КлючЗначение Из СписокВидовДокументов Цикл
		Элементы.КодВидаДокументаУдостоверяющегоЛичность.СписокВыбора.Добавить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти