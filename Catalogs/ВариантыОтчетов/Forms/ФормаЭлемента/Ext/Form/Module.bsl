///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем ВызваноОповещениеФормы;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	ПараметрыОткрытияФормыОтчета = Параметры.ПараметрыОткрытияФормыОтчета;
	Если ПараметрыОткрытияФормыОтчета <> Неопределено Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);

	Доступен = ?(Объект.ТолькоДляАвтора, "Автору", "Всем");

	ПолныеПраваНаВарианты = ВариантыОтчетов.ПолныеПраваНаВарианты();
	// АльфаАвто
	ПравоНаЭтотВариант = ПолныеПраваНаВарианты Или Объект.ОбъектДоступа = Пользователи.АвторизованныйПользователь();
	// Конец АльфаАвто
	Если Не ПравоНаЭтотВариант Тогда
		ТолькоПросмотр = Истина;
		Элементы.ДеревоПодсистем.ТолькоПросмотр = Истина;
	КонецЕсли;

	Если Объект.ПометкаУдаления Тогда
		Элементы.ДеревоПодсистем.ТолькоПросмотр = Истина;
	КонецЕсли;

	// АльфаАвто
	// Изменим вывод формы
	ВариантыОтчетовАльфаАвто.ПриСозданииНаСервереВариантыОтчетов(ЭтотОбъект);

	Если Объект.Пользовательский Тогда
		Элементы.ТипДоступа.ТолькоПросмотр    = Не ПолныеПраваНаВарианты;
		Элементы.ОбъектДоступа.Доступность    = ПолныеПраваНаВарианты;
		Элементы.ОбъектДоступа.АвтоОтметкаНезаполненного = ПолныеПраваНаВарианты;
	Иначе
		Элементы.Наименование.ТолькоПросмотр = Истина;
		Элементы.ОбъектДоступа.Доступность    = Ложь;
		Элементы.ОбъектДоступа.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	// Конец АльфаАвто

	ЭтоВнешний = (Объект.ТипОтчета = Перечисления.ТипыОтчетов.Внешний);
	Если ЭтоВнешний Тогда
		Элементы.ДеревоПодсистем.ТолькоПросмотр = Истина;
	КонецЕсли;

	// АльфаАвто
	// Убрана установка свойств элементов
	// Элементы.Доступен.ТолькоПросмотр = Не ПолныеПраваНаВарианты;
	// Элементы.УведомитьПользователей.Видимость = ПолныеПраваНаВарианты;
	// Элементы.Пользователи.Видимость = ПолныеПраваНаВарианты Или Доступен = "Всем";
	// Элементы.Автор.ТолькоПросмотр = Не ПолныеПраваНаВарианты;
	// Конец АльфаАвто
	Элементы.ТехническаяИнформация.Видимость = ПолныеПраваНаВарианты;
	
	// Заполнение имени отчета для команды "Просмотр".
	Если Объект.ТипОтчета = Перечисления.ТипыОтчетов.Внутренний
		Или Объект.ТипОтчета = Перечисления.ТипыОтчетов.Расширение Тогда
		ИмяОтчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Отчет, "Имя");
	ИначеЕсли Объект.ТипОтчета = Перечисления.ТипыОтчетов.Дополнительный Тогда
		ИмяОтчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Отчет, "ИмяОбъекта");
	Иначе
		ИмяОтчета = Объект.Отчет;
	КонецЕсли;

	// АльфаАвто
	// Стандартные подсистемы - Версионирование объектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец АльфаАвто

	ПерезаполнитьДерево(Ложь);

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	КонецЕсли;

	ВариантыОтчетов.ОпределитьПоведениеСпискаПользователейВариантаОтчета(ЭтотОбъект);
	ВариантыОтчетов.ВывестиПризнакУведомленияПользователейВариантаОтчета(Элементы.УведомитьПользователей);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если ПараметрыОткрытияФормыОтчета <> Неопределено Тогда
		Отказ = Истина;
		ВариантыОтчетовКлиент.ОткрытьФормуОтчета(Неопределено, ПараметрыОткрытияФормыОтчета);
	КонецЕсли;

	ВариантыОтчетовКлиент.ОформитьПользователейВариантаОтчета(ЭтотОбъект, Ложь);

	// АльфаАвто
	Если Не Отказ Тогда
		НастроитьОбъектДоступа();
	КонецЕсли;
	// Конец АльфаАвто

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// АльфаАвто
	Если (ИмяСобытия = ВариантыОтчетовКлиент.ИмяСобытияИзменениеВарианта()
			Или ИмяСобытия = "Запись_НаборКонстант") Тогда
		Если Источник <> ЭтотОбъект Тогда
			ПерезаполнитьДерево(Истина);
		КонецЕсли;
	// Конец АльфаАвто
		Элементы.ДеревоПодсистем.Развернуть(ДеревоПодсистем.ПолучитьЭлементы()[0].ПолучитьИдентификатор(), Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	СпроситьОУведомленииПользователей(Отказ);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Запись свойств, связанных с предопределенным вариантом отчета.
	ОписаниеИзменено = Ложь;
	Если ЭтоПредопределенный Тогда

		ПредопределенныйВариант = ТекущийОбъект.ПредопределенныйВариант.ПолучитьОбъект();

		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
			МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
			МодульМультиязычностьСервер.ПриЧтенииПредставленийНаСервере(ПредопределенныйВариант);
		КонецЕсли;

		ОписаниеИзменено = Не ПустаяСтрока(Объект.Описание) 
			И НРег(СокрЛП(Объект.Описание)) <> НРег(СокрЛП(ПредопределенныйВариант.Описание));
		Если Не ОписаниеИзменено Тогда
			ТекущийОбъект.Описание = "";
			Для Каждого ПредставлениеВарианта Из ТекущийОбъект.Представления Цикл
				ПредставлениеВарианта.Описание = "";
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// Запись дерева подсистем.
	ДеревоПриемник = РеквизитФормыВЗначение("ДеревоПодсистем", Тип("ДеревоЗначений"));
	Если ТекущийОбъект.ЭтоНовый() Тогда
		ИзмененныеРазделы = ДеревоПриемник.Строки.НайтиСтроки(Новый Структура("Использование", 1), Истина);
	Иначе
		ИзмененныеРазделы = ДеревоПриемник.Строки.НайтиСтроки(Новый Структура("Модифицированность", Истина), Истина);
	КонецЕсли;
	ВариантыОтчетов.ДеревоПодсистемЗаписать(ТекущийОбъект, ИзмененныеРазделы);

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
	КонецЕсли;

	Если ЭтоПредопределенный И Не ОписаниеИзменено Тогда
		ТекущийОбъект.Представления.Очистить();
	КонецЕсли;

	ТекущийОбъект.ДополнительныеСвойства.Вставить("ПользователиВарианта", ПользователиВарианта);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("УведомитьПользователей", УведомитьПользователей);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	ПерезаполнитьДерево(Ложь);
	ЗаполнитьИзПредопределенного(ТекущийОбъект);

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ВызваноОповещениеФормы = Истина;
	ВариантыОтчетовКлиент.ОбновитьОткрытыеФормы(, Объект.Ссылка);
	ВызваноОповещениеФормы = Ложь;
	СтандартныеПодсистемыКлиент.РазвернутьУзлыДерева(ЭтотОбъект, "ДеревоПодсистем", "*", Истина);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	ЗаполнитьИзПредопределенного(ТекущийОбъект);

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;

	РегистрыСведений.НастройкиВариантовОтчетов.ПрочитатьНастройкиДоступностиВариантаОтчета(
		ТекущийОбъект.Ссылка, ПользователиВарианта, ИспользоватьГруппыПользователей, ИспользоватьВнешнихПользователей);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Описание",
		НСтр("ru = 'Описание'"));
КонецПроцедуры

&НаКлиенте
Процедура ДоступенПриИзменении(Элемент)

	Объект.ТолькоДляАвтора = (Доступен = "Автору");

	ВариантыОтчетовКлиент.ПроверитьПользователейВариантаОтчета(ЭтотОбъект);
	ВариантыОтчетовКлиент.ОформитьПользователейВариантаОтчета(ЭтотОбъект, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)

	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("МультиязычностьКлиент");
		МодульМультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

// АльфаАвто

&НаКлиенте
Процедура Подключаемый_ТипДоступаПриИзменении(Элемент)
	
	НастроитьОбъектДоступа();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТипДоступаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.БезОграничения"));
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВидПериодаПриИзменении(Элемент)
	
	Произвольный = (Объект.ВидПериода = "Произвольный");
	Элементы.НачалоПериода.Доступность =  Произвольный;
	Элементы.КонецПериода.Доступность =  Произвольный;
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_НачалоПериодаПриИзменении(Элемент)
	
	// Заменим название периода
	Если Объект.ВидПериода = "Произвольный" Тогда
		
		Объект.НачалоПериода = ЭтотОбъект.НачалоПериода;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_КонецПериодаПриИзменении(Элемент)
	
	// Заменим название периода
	Если Объект.ВидПериода = "Произвольный" Тогда
		
		Объект.КонецПериода = ЭтотОбъект.КонецПериода;
		
	КонецЕсли;
	
КонецПроцедуры

// Конец АльфаАвто

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПользователиВарианта

&НаКлиенте
Процедура ПользователиВариантаПриИзменении(Элемент)

	ВариантыОтчетовКлиент.ОформитьПользователейВариантаОтчета(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПользователиВариантаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПользователиВариантаПередУдалением(Элемент, Отказ)

	Если Не ИспользоватьГруппыПользователей И Не ИспользоватьВнешнихПользователей Тогда

		Отказ = Истина;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПользователиВариантаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	ВариантыОтчетовКлиент.ПользователиВариантаОтчетаОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПользователиВариантаПометкаПриИзменении(Элемент)

	ВариантыОтчетовКлиент.ОформитьПользователейВариантаОтчета(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоПодсистем

&НаКлиенте
Процедура ДеревоПодсистемИспользованиеПриИзменении(Элемент)
	ВариантыОтчетовКлиент.ДеревоПодсистемИспользованиеПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодсистемВажностьПриИзменении(Элемент)
	ВариантыОтчетовКлиент.ДеревоПодсистемВажностьПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьПользователей(Команда)

	ВариантыОтчетовКлиент.ПодобратьПользователейВариантаОтчета(ЭтотОбъект, ИспользоватьГруппыПользователей);

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьГруппыВнешнихПользователей(Команда)

	ВариантыОтчетовКлиент.ПодобратьПользователейВариантаОтчета(
		ЭтотОбъект, Элементы.ПользователиВариантаГруппаПодобрать.Видимость, Истина);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	ВариантыОтчетов.УстановитьУсловноеОформлениеСпискаПользователейВариантаОтчета(ЭтотОбъект);
	ВариантыОтчетов.УстановитьУсловноеОформлениеДереваПодсистем(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Функция ПерезаполнитьДерево(Прочитать)
	ВыделенныеСтроки = ОтчетыСервер.ЗапомнитьВыделенныеСтроки(ЭтотОбъект, "ДеревоПодсистем", "Ссылка");
	Если Прочитать Тогда
		Прочитать();
	КонецЕсли;
	ДеревоПриемник = ВариантыОтчетов.ДеревоПодсистемСформировать(ЭтотОбъект, Объект);
	ЗначениеВРеквизитФормы(ДеревоПриемник, "ДеревоПодсистем");
	ОтчетыСервер.ВосстановитьВыделенныеСтроки(ЭтотОбъект, "ДеревоПодсистем", ВыделенныеСтроки);
	Возврат Истина;
КонецФункции

&НаСервере
Процедура ЗаполнитьИзПредопределенного(ВариантОбъект)

	ЭтоПредопределенный = ВариантыОтчетов.ЭтоПредопределенныйВариантОтчета(ВариантОбъект);

	Если Не ЭтоПредопределенный Тогда
		Возврат;
	КонецЕсли;

	ПредопределенныйВариант = ВариантОбъект.ПредопределенныйВариант.ПолучитьОбъект();

	ВариантОбъект.Наименование = ПредопределенныйВариант.Наименование;
	ВариантОбъект.Описание = ПредопределенныйВариант.Описание;

КонецПроцедуры

&НаКлиенте
Процедура СпроситьОУведомленииПользователей(Отказ)

	Если Не УведомитьПользователей Или ВопросОУведомленииПользователейЗадан Тогда

		Возврат;
	КонецЕсли;

	КоличествоПользователей = КоличествоПользователейВариантОтчета(ПользователиВарианта);

	Если КоличествоПользователей < 10 Тогда
		Возврат;
	КонецЕсли;

	Отказ = Истина;
	ВопросОУведомленииПользователейЗадан = Истина;

	Обработчик = Новый ОписаниеОповещения("ПослеВопросаОУведомленииПользователей", ЭтотОбъект);
	ВариантыОтчетовСлужебныйКлиент.СпроситьОУведомленииПользователей(Обработчик, КоличествоПользователей);

КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаОУведомленииПользователей(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Нет Тогда
		УведомитьПользователей = Ложь;
	КонецЕсли;

	Записать();

КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоПользователейВариантОтчета(ПользователиВарианта)

	Возврат РегистрыСведений.НастройкиВариантовОтчетов.КоличествоПользователейВариантОтчета(ПользователиВарианта);

КонецФункции

// АльфаАвто
&НаКлиенте
Процедура НастроитьОбъектДоступа()
	
	Если НЕ Элементы.ТипДоступа.ТолькоПросмотр Тогда
		Элементы.ОбъектДоступа.Доступность        = (НЕ Объект.ТипДоступа = ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.БезОграничения"));
	КонецЕсли;
	
	Если Объект.ТипДоступа = ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.ПоПользователю") Тогда
		Элементы.ОбъектДоступа.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Пользователи");
	ИначеЕсли Объект.ТипДоступа = ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.ПоГруппеПользователей") Тогда
		Элементы.ОбъектДоступа.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ГруппыПользователей");
	ИначеЕсли Объект.ТипДоступа = ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.ПоПодразделениюКомпании") Тогда
		Элементы.ОбъектДоступа.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияКомпании");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти