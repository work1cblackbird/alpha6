// Модуль менеджера справочника "Типы эксплуатации"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// 	 Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты объекта
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	ОбязательныеРеквизиты.Добавить("Консервирование");
	Если НЕ Объект.Консервирование Тогда
		ОбязательныеРеквизиты.Добавить("СпособНачисленияАмортизации");
	КонецЕсли;
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик по способу амортизации и амортизационной группе генерирует наименование.
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Функция СформироватьНаименованиеПоУмолчанию(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	Наименование = "";
	Если Объект.Консервирование Тогда
		Наименование = Наименование + "Консервирование";
	Иначе
		Если НЕ Объект.СпособНачисленияАмортизации.Пустая() Тогда
			Наименование = Строка(Объект.СпособНачисленияАмортизации);
		КонецЕсли;
	КонецЕсли;
	Если НЕ Объект.АмортизационнаяГруппа.Пустая() Тогда
		Если Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПерваяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок от 1 до 2 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВтораяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок от 2 до 3 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ТретьяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок от 3 до 5 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ЧетвертаяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок от 5 до 7 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПятаяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок от 7 до 10 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ШестаяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок от 10 до 15 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.СедьмаяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок от 15 до 20 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок от 20 до 25 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок от 25 до 30 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок свыше 30 лет'");
		ИначеЕсли Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа Тогда
			Наименование = Наименование + " " + НСтр("ru = 'на срок согласно п.1, ст.322 НК РФ'");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Наименование;
	
КонецФункции // СформироватьНаименованиеПоУмолчанию()

// Обработчик события возникающего при изменении данных реквизита "Консервирование".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Процедура КонсервированиеПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	Если Объект.Консервирование Тогда
		Объект.АмортизационнаяГруппа       = Перечисления.АмортизационныеГруппы.ПустаяСсылка();
		Объект.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизации.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры // КонсервированиеПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Способ начисления амортизации".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Процедура СпособНачисленияАмортизацииПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	Если НЕ (Объект.СпособНачисленияАмортизации=Перечисления.СпособыНачисленияАмортизации.Линейный ИЛИ Объект.СпособНачисленияАмортизации=Перечисления.СпособыНачисленияАмортизации.УменьшаемогоОстатка) Тогда
		Объект.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры // СпособНачисленияАмортизацииПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Амортизационная группа".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Процедура АмортизационнаяГруппаПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	Зарезервировано = Истина;
	
КонецПроцедуры // АмортизационнаяГруппаПриИзменении()

#КонецОбласти

#КонецОбласти

#КонецЕсли