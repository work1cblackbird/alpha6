// Модуль менеджера справочника "СтатьиДоходовИРасходов"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника Организации.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением.
//                                  Например:
//                                    Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                    ЭлементТЧ = Элемент.Ключи.Добавить();
//                                    ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Вознаграждение";
	Элемент.Код = "000010001";
	Элемент.Наименование = НСтр("ru = 'Вознаграждение комиссионное'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НачислениеДебиторскойЗадолженностиПоАвтомобилям";
	Элемент.Код = "000010201";
	Элемент.Наименование = НСтр("ru = 'Выручка по реализации автомобилей'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток; 
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НачислениеДебиторскойЗадолженностиПоТовару";
	Элемент.Код = "000010002";
	Элемент.Наименование = НСтр("ru = 'Выручка по реализации товаров'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;
	
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НачислениеДебиторскойЗадолженностиПоУслугам";
	Элемент.Код = "000010003";
	Элемент.Наименование = НСтр("ru = 'Выручка по реализации услуг'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Выручка";
	Элемент.Код = "000010004";
	Элемент.Наименование = НСтр("ru = 'Выручка по чекам'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;	
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РаботыПоЗаказНарядам";
	Элемент.Код = "000010101";
	Элемент.Наименование = НСтр("ru = 'Работы по заказ-нарядам'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТорговаяНаценка";
	Элемент.Код = "000010102";
	Элемент.Наименование = НСтр("ru = 'Торговая наценка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыручкаПоЗаказНарядам";
	Элемент.Код = "000010103";
	Элемент.Наименование = НСтр("ru = 'Выручка по заказ-нарядам'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Себестоимость";
	Элемент.Код = "000020001";
	Элемент.Наименование = НСтр("ru = 'Себестоимость продукции, товаров, услуг'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.СебестоимостьПродаж;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПоступлениеБонусное";
	Элемент.Код = "000030001";
	Элемент.Наименование = НСтр("ru = 'Безвозмездное поступление'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВводОстатковПрочихАктивов";
	Элемент.Код = "000030002";
	Элемент.Наименование = НСтр("ru = 'Ввод остатков прочих активов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВводОстатковТоваров";
	Элемент.Код = "000030003";
	Элемент.Наименование = НСтр("ru = 'Ввод остатков товаров'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВозвратУслугПоставщика";
	Элемент.Код = "000030004";
	Элемент.Наименование = НСтр("ru = 'Возврат услуг поставщика'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;	

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОприходованиеОбнаруженныхИзлишковТМЦ";
	Элемент.Код = "000030005";
	Элемент.Наименование = НСтр("ru = 'Оприходование обнаруженных излишков ТМЦ'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РеализацияОсновныхСредств";
	Элемент.Код = "000030006";
	Элемент.Наименование = НСтр("ru = 'Реализация основных средств'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы; 
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РеализацияПрочегоИмущества";
	Элемент.Код = "000030007";
	Элемент.Наименование = НСтр("ru = 'Реализация прочего имущества (материалов)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "УступкаПраваТребованияПоДоговоруФакторинга";
	Элемент.Код = "000030008";
	Элемент.Наименование = НСтр("ru = 'Уступка права требования по договору факторинга'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВосстановлениеАмортизационнойПремии";
	Элемент.Код = "000030009";
	Элемент.Наименование = НСтр("ru = 'Восстановление амортизационной премии'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КопейкиОтОкругленияПриПересчетах";
	Элемент.Код = "000040001";
	Элемент.Наименование = НСтр("ru = 'Копейки от округления при пересчетах'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокДоНалогообложения;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СебестоимостьНеоприходованныхПартий";
	Элемент.Код = "000040002";
	Элемент.Наименование = НСтр("ru = 'Себестоимость неоприходованных партий'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПеременныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбыток;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Амортизация";
	Элемент.Код = "000050001";
	Элемент.Наименование = НСтр("ru = 'Амортизация ОС и НМА'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ОбщепроизводственныеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.ПрибылиИУбыткиДоВычетов;	

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Амортизация";
	Элемент.Код = "000050001";
	Элемент.Наименование = НСтр("ru = 'Амортизация ОС и НМА'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ОбщепроизводственныеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.ПрибылиИУбыткиДоВычетов;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыНаОплатуТруда";
	Элемент.Код = "000050002";
	Элемент.Наименование = НСтр("ru = 'Зарплата вспомогательных сотрудников'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.ПрибылиИУбыткиДоВычетов;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗарплатаОсновныхСотрудников";
	Элемент.Код = "000050003";
	Элемент.Наименование = НСтр("ru = 'Зарплата основных сотрудников'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.ПрибылиИУбыткиДоВычетов;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеЗатраты";
	Элемент.Код = "000050004";
	Элемент.Наименование = НСтр("ru = 'Прочие затраты'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПеременныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РаботыПоОбслуживаниюАктивов";
	Элемент.Код = "000050005";
	Элемент.Наименование = НСтр("ru = 'Работы по обслуживанию активов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
	.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.ПрибылиИУбыткиДоВычетов;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаТруда";
	Элемент.Код = "000050006";
	Элемент.Наименование = НСтр("ru = 'Оплата труда'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АмортизационнаяПремия";
	Элемент.Код = "000050007";
	Элемент.Наименование = НСтр("ru = 'Амортизационная премия'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ОбщепроизводственныеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СодержаниеСлужебногоАвтотранспорта";
	Элемент.Код = "000050008";
	Элемент.Наименование = НСтр("ru = 'Содержание служебного автотранспорта'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ОбщепроизводственныеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КомандировочныеРасходы";
	Элемент.Код = "000050009";
	Элемент.Наименование = НСтр("ru = 'Командировочные расходы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КомплектацияАвтомобилей";
	Элемент.Код = "000050201";
	Элемент.Наименование = НСтр("ru = 'Комплектация автомобилей'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ОбщепроизводственныеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.ПрибылиИУбыткиДоВычетов;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВводОстатковВзаиморасчетов";
	Элемент.Код = "000060001";
	Элемент.Наименование = НСтр("ru = 'Ввод остатков взаиморасчетов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КопейкиПриОкругленииВалютныхСчетов";
	Элемент.Код = "000060002";
	Элемент.Наименование = НСтр("ru = 'Копейки при округлении валютных счетов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КорректировкаБалансаПоПодразделениям";
	Элемент.Код = "000060003";
	Элемент.Наименование = НСтр("ru = 'Корректировка баланса по подразделениям'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницы";
	Элемент.Код = "000060004";
	Элемент.Наименование = НСтр("ru = 'Курсовые разницы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов; 
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОтклонениеСебестоимостиПриКомплектации";
	Элемент.Код = "000060005";
	Элемент.Наименование = НСтр("ru = 'Отклонение себестоимости при комплектации'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОтклонениеСтоимостиАктиваПриВводеВЭксплуатацию";
	Элемент.Код = "000060006";
	Элемент.Наименование = НСтр("ru = 'Отклонение стоимости актива при вводе в эксплуатацию'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОтклонениеСтоимостиАктиваПриРеализации";
	Элемент.Код = "000060007";
	Элемент.Наименование = НСтр("ru = 'Отклонение стоимости актива при реализации'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОтклонениеСтоимостиВозврата";
	Элемент.Код = "000060008";
	Элемент.Наименование = НСтр("ru = 'Отклонение стоимости возврата'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Пересортица";
	Элемент.Код = "000060009";
	Элемент.Наименование = НСтр("ru = 'Пересортица'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Пересортица";
	Элемент.Код = "000060009";
	Элемент.Наименование = НСтр("ru = 'Пересортица'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СуммовыеРазницы";
	Элемент.Код = "000060010";
	Элемент.Наименование = НСтр("ru = 'Суммовые разницы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПрочихДоходовРасходов;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;   
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗачетДепозитаАренды";
	Элемент.Код = "000060011";
	Элемент.Наименование = НСтр("ru = 'Зачет депозита аренды'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;	
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПроцентныеРасходы";
	Элемент.Код = "000060012";
	Элемент.Наименование = НСтр("ru = 'Процентные расходы'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПеременныеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ИсправительныеЗаписиПоОперациямПрошлыхЛет";
	Элемент.Код = "000060013";
	Элемент.Наименование = НСтр("ru = 'Исправительные записи по операциям прошлых лет'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеВнереализационныеДоходыИРасходы";
	Элемент.Код = "000060014";
	Элемент.Наименование = НСтр("ru = 'Прочие внереализационные доходы и расходы'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СписаниеАктивов";
	Элемент.Код = "000070001";
	Элемент.Наименование = НСтр("ru = 'Списание активов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СписаниеОбнаруженнойНедостачиТМЦ";
	Элемент.Код = "000070002";
	Элемент.Наименование = НСтр("ru = 'Списание обнаруженной недостачи ТМЦ'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "БесплатныйРемонтПоЗаказНарядам";
	Элемент.Код = "000070101";
	Элемент.Наименование = НСтр("ru = 'Бесплатный ремонт по заказ-нарядам'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыНаУслугиБанков";
	Элемент.Код = "000070201";
	Элемент.Наименование = НСтр("ru = 'Расходы на услуги банков'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.МаржинальнаяПрибыльУбытокОтПрочейДеятельности;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЛиквидацияОсновныхСредств";
	Элемент.Код = "000070003";
	Элемент.Наименование = НСтр("ru = 'Ликвидация основных средств'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыНаУслугиФакторинговыхКомпаний";
	Элемент.Код = "000070004";
	Элемент.Наименование = НСтр("ru = 'Расходы на услуги факторинговых компаний'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СписаниеТоваровУКомиссионера";
	Элемент.Код = "000070005";
	Элемент.Наименование = НСтр("ru = 'Списание товаров у комиссионера'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы; 
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СписаниеМатериалов";
	Элемент.Код = "000070006";
	Элемент.Наименование = НСтр("ru = 'Списание материалов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "МалоценноеОборудованиеИЗапасы";
	Элемент.Код = "000070007";
	Элемент.Наименование = НСтр("ru = 'Малоценное оборудование и запасы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "УслугиКомиссионеров";
	Элемент.Код = "000070008";
	Элемент.Наименование = НСтр("ru = 'Услуги комиссионеров'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;

		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "МаржинальнаяПрибыльУбыток";
	Элемент.Код = "000080001";
	Элемент.Наименование = НСтр("ru = 'Маржинальная прибыль/убыток от основной деятельности'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрибылиИУбытки;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПродаж;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.ПрибылиИУбыткиДоВычетов;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "МаржинальнаяПрибыльУбытокОтПрочейДеятельности";
	Элемент.Код = "000080002";
	Элемент.Наименование = НСтр("ru = 'Маржинальная прибыль/убыток от прочей деятельности'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрибылиИУбытки;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокОтПродаж;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.ПрибылиИУбыткиДоВычетов;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрибылиИУбыткиДоВычетов";
	Элемент.Код = "000080003";
	Элемент.Наименование = НСтр("ru = 'Прибыли и убытки до вычетов'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрибылиИУбытки;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльУбытокДоНалогообложения;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
	
	Элемент.СтатьиРаспределения = ТабличныеЧасти.СтатьиРаспределения.Скопировать();
	Элемент.СтатьиРаспределения.Добавить()
		.СтатьяРаспределения = Справочники.СтатьиДоходовИРасходов.ЧистыеПрибыльИлиУбыток;
		
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЧистыеПрибыльИлиУбыток";
	Элемент.Код = "000080004";
	Элемент.Наименование = НСтр("ru = 'Чистые прибыль или убыток'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрибылиИУбытки;
	Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрибыльПодлежащаяРаспределению;
	Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
		

КонецПроцедуры

// Актуализация предопределеннных элементов.
//
Процедура АктуализацияПредопределеннныхЭлементов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДоходовИРасходов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиДоходовИРасходов КАК СтатьиДоходовИРасходов
		|ГДЕ
		|	СтатьиДоходовИРасходов.Предопределенный = ИСТИНА
		|	И СтатьиДоходовИРасходов.ЭтоГруппа = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл	
			Элемент = Выборка.Ссылка.ПолучитьОбъект();
			Элемент.ОбменДанными.Загрузка = Истина;				
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);	
			Если Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.НачислениеДебиторскойЗадолженностиПоАвтомобилям Тогда
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ЗачетДепозитаАренды Тогда
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ОсновныеДоходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.Выручка;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.ВыручкаОтОсновногоВидаДеятельности; 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.КопейкиОтОкругленияПриПересчетах Тогда	
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы; 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.КурсовыеРазницы Тогда	
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ОтклонениеСебестоимостиПриКомплектации Тогда	
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы; 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ОтклонениеСтоимостиАктиваПриВводеВЭксплуатацию Тогда	
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ОтклонениеСтоимостиАктиваПриРеализации Тогда	
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы; 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ОтклонениеСтоимостиВозврата Тогда	
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.СуммовыеРазницы Тогда	
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.РеализацияОсновныхСредств Тогда	
				Элемент.ИмяПредопределенныхДанных = "РеализацияОсновныхСредств";
				Элемент.Код = "000030006";
				Элемент.Наименование = НСтр("ru = 'Реализация основных средств'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;				
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.РеализацияПрочегоИмущества Тогда	
				Элемент.ИмяПредопределенныхДанных = "РеализацияПрочегоИмущества";
				Элемент.Код = "000030007";
				Элемент.Наименование = НСтр("ru = 'Реализация прочего имущества (материалов)'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.УступкаПраваТребованияПоДоговоруФакторинга Тогда
				Элемент.ИмяПредопределенныхДанных = "УступкаПраваТребованияПоДоговоруФакторинга";
				Элемент.Код = "000030008";
				Элемент.Наименование = НСтр("ru = 'Уступка права требования по договору факторинга'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы; 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ВосстановлениеАмортизационнойПремии Тогда	
				Элемент.ИмяПредопределенныхДанных = "ВосстановлениеАмортизационнойПремии";
				Элемент.Код = "000030009";
				Элемент.Наименование = НСтр("ru = 'Восстановление амортизационной премии'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеДоходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеДоходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеДоходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ОплатаТруда Тогда	
				Элемент.ИмяПредопределенныхДанных = "ОплатаТруда";
				Элемент.Код = "000050006";
				Элемент.Наименование = НСтр("ru = 'Оплата труда'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ОбщепроизводственныеРасходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость; 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.АмортизационнаяПремия Тогда		
				Элемент.ИмяПредопределенныхДанных = "АмортизационнаяПремия";
				Элемент.Код = "000050007";
				Элемент.Наименование = НСтр("ru = 'Амортизационная премия'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ОбщепроизводственныеРасходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.СодержаниеСлужебногоАвтотранспорта Тогда	
				Элемент.ИмяПредопределенныхДанных = "СодержаниеСлужебногоАвтотранспорта";
				Элемент.Код = "000050008";
				Элемент.Наименование = НСтр("ru = 'Содержание служебного автотранспорта'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ОбщепроизводственныеРасходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.КомандировочныеРасходы Тогда	
				Элемент.ИмяПредопределенныхДанных = "КомандировочныеРасходы";
				Элемент.Код = "000050009";
				Элемент.Наименование = НСтр("ru = 'Командировочные расходы'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПостоянныеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.Себестоимость; 			
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ПроцентныеРасходы Тогда	
				Элемент.ИмяПредопределенныхДанных = "ПроцентныеРасходы";
				Элемент.Код = "000060012";
				Элемент.Наименование = НСтр("ru = 'Процентные расходы'",
				ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПеременныеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ИсправительныеЗаписиПоОперациямПрошлыхЛет Тогда
				Элемент.ИмяПредопределенныхДанных = "ИсправительныеЗаписиПоОперациямПрошлыхЛет";
				Элемент.Код = "000060013";
				Элемент.Наименование = НСтр("ru = 'Исправительные записи по операциям прошлых лет'",
				ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы; 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ПрочиеВнереализационныеДоходыИРасходы Тогда	
				Элемент.ИмяПредопределенныхДанных = "Прочие внереализационные доходы и расходы";
				Элемент.Код = "000060014";
				Элемент.Наименование = НСтр("ru = 'Прочие внереализационные доходы и расходы'",
				ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.РасходыНаПродажу;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.ЛиквидацияОсновныхСредств Тогда	
				Элемент.ИмяПредопределенныхДанных = "ЛиквидацияОсновныхСредств";
				Элемент.Код = "000070003";
				Элемент.Наименование = НСтр("ru = 'Ликвидация основных средств'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.РасходыНаУслугиФакторинговыхКомпаний Тогда	
				Элемент.ИмяПредопределенныхДанных = "РасходыНаУслугиФакторинговыхКомпаний";
				Элемент.Код = "000070004";
				Элемент.Наименование = НСтр("ru = 'Расходы на услуги факторинговых компаний'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.СписаниеТоваровУКомиссионера Тогда
				Элемент.ИмяПредопределенныхДанных = "СписаниеТоваровУКомиссионера";
				Элемент.Код = "000070005";
				Элемент.Наименование = НСтр("ru = 'Списание товаров у комиссионера'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы; 
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.СписаниеМатериалов Тогда	
				Элемент.ИмяПредопределенныхДанных = "СписаниеМатериалов";
				Элемент.Код = "000070006";
				Элемент.Наименование = НСтр("ru = 'Списание материалов'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.МалоценноеОборудованиеИЗапасы Тогда				
				Элемент.ИмяПредопределенныхДанных = "МалоценноеОборудованиеИЗапасы";
				Элемент.Код = "000070007";
				Элемент.Наименование = НСтр("ru = 'Малоценное оборудование и запасы'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
			ИначеЕсли Выборка.Ссылка = Справочники.СтатьиДоходовИРасходов.УслугиКомиссионеров Тогда
				Элемент.ИмяПредопределенныхДанных = "УслугиКомиссионеров";
				Элемент.Код = "000070008";
				Элемент.Наименование = НСтр("ru = 'Услуги комиссионеров'", ОбщегоНазначения.КодОсновногоЯзыка());
				Элемент.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.ПрочиеРасходы;
				Элемент.КоррСчет = ПланыСчетов.Регламентированный.ПрочиеРасходы;
				Элемент.ВидСтатьи = Перечисления.ВидыСтатейДоходовИРасходов.НакладныеРасходы;
			КонецЕсли;
			Элемент.Записать();
		Исключение
			 ЗаписьЖурналаРегистрации(
			 	НСтр("ru = 'Ошибка обновления справочника Подразделения компании'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
    			УровеньЖурналаРегистрации.Предупреждение,
				,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
					
		КонецПопытки;		
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьПереводыВПути() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДоходовИРасходов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиДоходовИРасходов КАК СтатьиДоходовИРасходов
		|ГДЕ
		|	СтатьиДоходовИРасходов.Предопределенный
		|	И СтатьиДоходовИРасходов.ИмяПредопределенныхДанных = ""ПереводыВПути""";
	
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Если НЕ РезультатЗапроса.Пустой() Тогда 	
	
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();

		НачатьТранзакцию();
		СтатьяОбъект = Выборка.Ссылка.ПолучитьОбъект();	
		СтатьяОбъект.ОбменДанными.Загрузка = Истина;				
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			СтатьяОбъект.ВидДоходаИРасхода = Перечисления.ВидыДоходовИРасходов.Прочее; 
			КоррСчет = ПланыСчетов.Регламентированный.НайтиПоКоду("57");
			Если ЗначениеЗаполнено(КоррСчет) Тогда 
				СтатьяОбъект.КоррСчет = КоррСчет;
			Иначе 
				Попытка
					НовыйСчет = ПланыСчетов.Регламентированный.СоздатьСчет();
					НовыйСчет.Наименование = "Переводы в пути";
					НовыйСчет.Вид = ВидСчета.Активный;
					НовыйСчет.Код = "57";
					НовыйСчет.Порядок = "57"; 
					НовыйСчет.Записать(); 
					СтатьяОбъект.КоррСчет = НовыйСчет.Ссылка;
				Исключение 
					ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Ошибка записи элемента плана счетов ""Регламентированный""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Предупреждение,
					,,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
					);
				КонецПопытки; 
			
			КонецЕсли;
			СтатьяОбъект.Записать(); 
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Ошибка записи элемента справочника ""Статьи доходов и расходов""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Предупреждение,
				,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			); 
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры


#КонецОбласти

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	// Обработаем в зависимости от вида элемента
	Если НЕ Объект.ЭтоГруппа Тогда
		ОбязательныеРеквизиты.Добавить("ВидДоходаИРасхода");
		ОбязательныеРеквизиты.Добавить("КоррСчет");
		ОбязательныеРеквизиты.Добавить("СтатьиРаспределения.СтатьяРаспределения");
	КонецЕсли;
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// 	 Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

#КонецЕсли