
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Справочники.ВидыПлановКомпании.ОбработкаПересчетаТабличнойЧастиОтчетыИОбработки(Объект,Неопределено);
	Справочники.ВидыПлановКомпании.ОбработкаПересчетаТабличнойЧастиБазовыеПланы(Объект,Неопределено);
	
	ВыбраннаяОбработка = Обработки;
	Для Каждого СтрокаОбработки Из Метаданные.Обработки Цикл
		Если СтрНайти(СтрокаОбработки.Имя,"План")<>0 Тогда
			СписокОбработок.Добавить(СтрокаОбработки.Имя, СтрокаОбработки.Синоним);
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		УправлениеДиалогомНаСервере();

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ПараметрыПлана");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "БазовыеПланы");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "Подразделения");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ОтчетыИОбработки");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("СкладыКомпании");
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры 


#КонецОбласти
       
#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметрыПлана

#Область ОбработчикиСобытийПолейТаблицыФормыПараметрыПланирования

&НаСервере
Процедура ПараметрыПланаВидПараметраПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.ПараметрыПлана.НайтиПоИдентификатору(Элементы.ПараметрыПлана.ТекущаяСтрока);
	
	Если Элементы.ПараметрыПланаТипЗначения.Видимость Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.ВидПараметра) Тогда
			ТекущиеДанные.ТипЗначения = ТекущиеДанные.ВидПараметра.ТипЗначения;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПараметрыПланаВидПараметраПриИзмененииНаСервере()

&НаКлиенте
Процедура ПараметрыПланаВидПараметраПриИзменении(Элемент)
	
	ПараметрыПланаВидПараметраПриИзмененииНаСервере();
	
КонецПроцедуры // ПараметрыПланаВидПараметраПриИзменении()

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыБазовыеПланы

#Область ОбработчикиСобытийЭлементовТаблицыБазовыеПланы

&НаСервере
Процедура БазовыеПланыВыборОбъектаПланированияПоАналитикеПриИзмененииНаСервере()
	
	// Получим данные текущей строки табличной части
	ТекущиеДанные = Объект.БазовыеПланы.НайтиПоИдентификатору(Элементы.БазовыеПланы.ТекущаяСтрока);
	
	// Вызываем обработчик изменения данных объекта
	Справочники.ВидыПлановКомпании.БазовыеПланыВыборОбъектаПланированияПоАналитикеПриИзменении(Объект, ТекущиеДанные);
	
КонецПроцедуры // БазовыеПланыПланированияПоАналитикеПриИзмененииНаСервере()

&НаКлиенте
Процедура БазовыеПланыВыборОбъектаПланированияПоАналитикеПриИзменении(Элемент)
	
	// Обработаем событие в контексте сервера
	БазовыеПланыВыборОбъектаПланированияПоАналитикеПриИзмененииНаСервере();
	
КонецПроцедуры // БазовыеПланыВыборОбъектаПланированияПоАналитикеПриИзменении()

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтчетыИОбработки

#Область ОбработчикиСобытийПолейТаблицыОтчетыИОбработки

&НаСервере
Процедура ОтчетыИОбработкиВыборВидаОбъектаПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.ОтчетыИОбработки.НайтиПоИдентификатору(Элементы.ОтчетыИОбработки.ТекущаяСтрока);
	Справочники.ВидыПлановКомпании.ОтчетыИОбработкиВыборВидаОбъектаПриИзменении(Объект, ТекущиеДанные);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОтчетыИОбработкиВыборВидаОбъектаПриИзменении(Элемент)
	
	ОтчетыИОбработкиВыборВидаОбъектаПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ОтчетыИОбработкиФлагЗаполненияФактаПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.ОтчетыИОбработки.НайтиПоИдентификатору(Элементы.ОтчетыИОбработки.ТекущаяСтрока);
	Если Справочники.ВидыПлановКомпании.ОтчетыИОбработкиФлагПриИзменении(Объект, ТекущиеДанные) Тогда
		ТекущиеДанные.ФлагЗаполненияФакта = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОтчетыИОбработкиФлагЗаполненияФактаПриИзменении(Элемент)
	
	ОтчетыИОбработкиФлагЗаполненияФактаПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ОтчетыИОбработкиФлагПроверкиПланаПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.ОтчетыИОбработки.НайтиПоИдентификатору(Элементы.ОтчетыИОбработки.ТекущаяСтрока);

	Если Справочники.ВидыПлановКомпании.ОтчетыИОбработкиФлагПриИзменении(Объект, ТекущиеДанные) Тогда
		ТекущиеДанные.ФлагПроверкиПлана = Ложь;
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ОтчетыИОбработкиФлагПроверкиПланаПриИзменении(Элемент)
	
	ОтчетыИОбработкиФлагПроверкиПланаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОтчетыИОбработкиФлагЗаполненияПланаПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.ОтчетыИОбработки.НайтиПоИдентификатору(Элементы.ОтчетыИОбработки.ТекущаяСтрока);
	
	Если Справочники.ВидыПлановКомпании.ОтчетыИОбработкиФлагПриИзменении(Объект, ТекущиеДанные) Тогда
		ТекущиеДанные.ФлагЗаполненияПлана = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОтчетыИОбработкиФлагЗаполненияПланаПриИзменении(Элемент)
	
	ОтчетыИОбработкиФлагЗаполненияПланаПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОтчетыИОбработкиПутьКОбъектуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	
	// Формируем описание обработчика перехвата закрытия формы
	ОбработчикРезультата = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияПутьКОбъекту", ЭтотОбъект);
	
	Если (Элементы.ОтчетыИОбработки.ТекущиеДанные.ВидОбъекта=2)
		ИЛИ (Элементы.ОтчетыИОбработки.ТекущиеДанные.ВидОбъекта=4) Тогда
		
		СписокДляВыбора = Новый СписокЗначений();
		СписокДляВыбора.Добавить("ВЫБРАТЬ ИЗ диалога");
		ПоказатьВыборИзМеню(ОбработчикРезультата,СписокДляВыбора, Элемент);
		
	ИначеЕсли (Элементы.ОтчетыИОбработки.ТекущиеДанные.ВидОбъекта=3) Тогда
		
		ПоказатьВыборИзМеню(ОбработчикРезультата,СписокОбработок, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияПутьКОбъекту(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	// Проверяем статус закрытия окна параметров
	Если РезультатОповещения=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКОбъекту = РезультатОповещения.Значение;
	Наименование = РезультатОповещения.Представление;
	
	Если ПутьКОбъекту="ВЫБРАТЬ ИЗ диалога" Тогда
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.Каталог = КаталогДокументов();
		Если Элементы.ОтчетыИОбработки.ТекущиеДанные.ВидОбъекта=2 Тогда
			Фильтр = "Текстовый файл(*.txt)|*.txt";
		Иначе
			Фильтр = "Внешняя обработка(*.epf)|*.epf";
		КонецЕсли;
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите файл'");
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДиалогОткрытияФайла", ДиалогОткрытияФайла);
		ДополнительныеПараметры.Вставить("Наименование",        Наименование);
		ДополнительныеПараметры.Вставить("РезультатОповещения", РезультатОповещения);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияПутьКОбъектуЗавершение",
														ЭтотОбъект, ДополнительныеПараметры);
		ДиалогОткрытияФайла.Показать(ОписаниеОповещения);
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияПутьКОбъектуФрагмент(Наименование, ПутьКОбъекту, РезультатОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияПутьКОбъектуЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогОткрытияФайла = ДополнительныеПараметры.ДиалогОткрытияФайла;
	Наименование = ДополнительныеПараметры.Наименование;
	РезультатОповещения = ДополнительныеПараметры.РезультатОповещения;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ПутьКОбъекту=ДиалогОткрытияФайла.ВыбранныеФайлы[0];
	Иначе
		ПутьКОбъекту="";
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияПутьКОбъектуФрагмент(Наименование, ПутьКОбъекту, РезультатОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияПутьКОбъектуФрагмент(Наименование, ПутьКОбъекту, РезультатОповещения)
	
	Если РезультатОповещения<>Неопределено Тогда
		Элементы.ОтчетыИОбработки.ТекущиеДанные.ПутьКОбъекту=ПутьКОбъекту;
		Элементы.ОтчетыИОбработки.ТекущиеДанные.Наименование=Наименование;
	Иначе
		Элементы.ОтчетыИОбработки.ТекущиеДанные.ПутьКОбъекту="";
		Элементы.ОтчетыИОбработки.ТекущиеДанные.Наименование="";
	КонецЕсли;
	Элементы.ОтчетыИОбработки.ЗакончитьРедактированиеСтроки(Ложь);
	
КонецПроцедуры 

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
КонецПроцедуры 

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
//@skip-warning
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов


#КонецОбласти

#КонецОбласти

