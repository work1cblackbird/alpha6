
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет номенклатуру, характеристику, упаковку в номенклатуре поставщика с пустой номенклатурой.
//
// Параметры:
//  Товары - ТаблицаЗначений - таблица, содержащая данные для связывания номенклатуры с номенклатурой поставщика.
//  Отказ - Булево - Истина, если не удалось связать номенклатуру с номенклатурой поставщика.
//
Процедура СвязатьНоменклатуруСНоменклатуройПоставщика(Товары, Отказ) Экспорт
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Товары.НоменклатураПоставщика КАК НоменклатураПоставщика,
			|	Товары.Номенклатура           КАК Номенклатура,
			|	Товары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
			|ПОМЕСТИТЬ
			|	Товары
			|ИЗ
			|	&Товары КАК Товары
			|ГДЕ
			|	Товары.НоменклатураПоставщика <> ЗНАЧЕНИЕ(Справочник.НоменклатураПоставщиков.ПустаяСсылка)
			|	И Товары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|;
			|ВЫБРАТЬ
			|	Товары.НоменклатураПоставщика КАК НоменклатураПоставщика,
			|	Товары.Номенклатура           КАК Номенклатура,
			|	Товары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
			|ПОМЕСТИТЬ
			|	СгруппированныеТовары
			|ИЗ
			|	Товары КАК Товары
			|ГДЕ
			|	Товары.НоменклатураПоставщика.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|СГРУППИРОВАТЬ ПО
			|	Товары.НоменклатураПоставщика,
			|	Товары.Номенклатура,
			|	Товары.ХарактеристикаНоменклатуры
			|;
			|ВЫБРАТЬ
			|	СгруппированныеТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
			|	СгруппированныеТовары.Номенклатура           КАК Номенклатура,
			|	СгруппированныеТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	КОЛИЧЕСТВО(*)                                КАК Количество
			|ИЗ
			|	СгруппированныеТовары КАК СгруппированныеТовары
			|СГРУППИРОВАТЬ ПО
			|	СгруппированныеТовары.НоменклатураПоставщика,
			|	СгруппированныеТовары.Номенклатура,
			|	СгруппированныеТовары.ХарактеристикаНоменклатуры");
		
		ВыгружаемыеСтроки = "НомерСтроки,НоменклатураПоставщика,Номенклатура,ХарактеристикаНоменклатуры";
		Запрос.УстановитьПараметр("Товары", Товары.Выгрузить(, ВыгружаемыеСтроки));
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		Если Не РезультатЗапроса[2].Пустой() Тогда
			
			Выборка = РезультатЗапроса[2].Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Попытка
					
					ЗаблокироватьДанныеДляРедактирования(Выборка.НоменклатураПоставщика);
					НоменклатураПоставщикаОбъект = Выборка.НоменклатураПоставщика.ПолучитьОбъект();
					ЗаполнитьЗначенияСвойств(НоменклатураПоставщикаОбъект, Выборка);
					НоменклатураПоставщикаОбъект.Записать();
					
				Исключение
					
					ТекстОшибки = НСтр("ru='Не удалось заблокировать %Элемент%. %ОписаниеОшибки%'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Элемент%",        Выборка.НоменклатураПоставщика);
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
					
					Отказ = Истина;
					ВызватьИсключение ТекстОшибки;
					
				КонецПопытки;
				
			КонецЦикла;
			
		КонецЕсли;
	
КонецПроцедуры

// Ищет номенклатуру поставщика соответствующую номенклатуре организации
//
// Параметры:
//	Номенклатура - СправочникСсылка.Номенклатура - Номенклатура для поиска;
//  Контрагент   - СправочникСсылка.Контрагенты - Поставщик для поиска;
//  ХарактеристикаНоменклатуры - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика для поиска.
// 
// Возвращаемое значение:
// 	Результат - Таблица с найденными элементами номенклатуры поставщика.
//
Функция ВыполнитьПоискНоменклатурыПоставщиков(
	Контрагент,
	Номенклатура,
	Знач ХарактеристикаНоменклатуры=Неопределено) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	НоменклатураПоставщиков.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
		|ГДЕ
		|	НоменклатураПоставщиков.Номенклатура = &Номенклатура
		|	И НоменклатураПоставщиков.Владелец = &Владелец
		|	И НоменклатураПоставщиков.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры");
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Владелец", Контрагент);
	
	Если ХарактеристикаНоменклатуры = Неопределено Тогда
		
		ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции //ВыполнитьПоискНоменклатурыПоставщиков()

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// АПК:299-выкл
// АПК:581-выкл

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты объекта
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	ОбязательныеРеквизиты.Добавить("Владелец");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты =  Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// АПК:581-вкл
// АПК:299-вкл

// Процедура формирует наименование объекта.
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Функция СформироватьНаименованиеПоУмолчанию(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	
	ЧастиНаименования = Новый Массив();
	
	Если НЕ ПустаяСтрока(СокрЛП(Объект.Артикул)) Тогда
		
		ЧастиНаименования.Добавить(СокрЛП(Объект.Артикул));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		
		ЧастиНаименования.Добавить(Строка(Объект.Номенклатура));
		
	КонецЕсли;
	
	РаботаСНаименованиями.ДополнитьНаименованиеСвойствами(ЧастиНаименования, ПараметрыДействия);	
	НовоеНаименование = СтрСоединить(ЧастиНаименования, " ");
	
	Если ЧастиНаименования.Количество() = 0 Тогда
		
		НовоеНаименование = "<" + НСтр("ru = 'не заполнены реквизиты'") + ">";
		
	КонецЕсли;
	
	
	Возврат НовоеНаименование;
	
КонецФункции // СформироватьНаименованиеПоУмолчанию()

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецЕсли