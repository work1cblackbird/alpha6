// Модуль менеджера справочника "Кассы ККМ"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс 

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы. 
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст = 
		"РазрешитьЧтениеИзменение
		|ГДЕ
		|	ЗначениеРазрешено(Организация)
		|	И ЗначениеРазрешено(ПодразделениеКомпании)";
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает основную кассу ККМ рабочего места пользователя по данным настроек РМК
//
// Параметры:
//  РабочееМесто - СправочникСсылка.РабочиеМеста - Касса будет определена для указанного либо текущего рабочего места.
//
// Возвращаемое значение:
//  СправочникСсылка.КассыККМ - если не заданы настройки РМК или не получилось определить текущее рабочее место.
//
Функция ПолучитьОсновнуюКассуККМ(РабочееМесто=Неопределено) Экспорт
	
	// Произведем уточнение текущего рабочего места
	Если НЕ ЗначениеЗаполнено(РабочееМесто) Тогда
		РабочееМесто = МенеджерОборудованияВызовСервера.РабочееМестоКлиента();
	КонецЕсли;
	
	// Прекращаем обработку, если рабочее место идентифицировать не удалось
	Если НЕ ЗначениеЗаполнено(РабочееМесто) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Формируем запрос к настройкам рабочего места
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	НастройкиРМККассыККМ.КассаККМ КАК КассаККМ,
	|	ВЫБОР
	|		КОГДА НастройкиРМККассыККМ.ПодключаемоеОборудование.ТипОборудования = ЗНАЧЕНИЕ(Перечисление.ТипыПодключаемогоОборудования.ККТ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПодключенФР,
	|	НастройкиРМККассыККМ.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Справочник.НастройкиРМК.КассыККМ КАК НастройкиРМККассыККМ
	|ГДЕ
	|	НастройкиРМККассыККМ.Ссылка.РабочееМесто = &РабочееМесто
	|	И НЕ НастройкиРМККассыККМ.ПодключаемоеОборудование.ПометкаУдаления
	|	И НастройкиРМККассыККМ.ПодключаемоеОборудование.УстройствоИспользуется
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодключенФР УБЫВ,
	|	НомерСтроки";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	
	// Выполняем запрос и получаем ККМ
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.КассаККМ, Неопределено);
	
КонецФункции // ПолучитьОсновнуюКассуККМ()

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	ОбязательныеРеквизиты.Добавить("ПодразделениеКомпании");
	ОбязательныеРеквизиты.Добавить("Организация");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМноговалютныйУчет") Тогда
		ОбязательныеРеквизиты.Добавить("ВалютаДенежныхСредств");
	КонецЕсли;
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьУникальныеРеквизиты()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события возникающего при изменении данных реквизита "Подразделение компании".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ПодразделениеКомпанииПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	// Вызываем общий обработчик события
	ОбработкаСобытийСправочникаСервер.ПодразделениеКомпанииПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // ПодразделениеПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Организация".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОрганизацияПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	// Вызываем общий обработчик события
	ОбработкаСобытийСправочникаСервер.ОрганизацияПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // ОрганизацияПриИзменении()

#КонецОбласти

#КонецОбласти

#КонецЕсли