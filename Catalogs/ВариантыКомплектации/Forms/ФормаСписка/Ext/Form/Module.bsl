///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка справочника "Варианты комплектации"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.СкрытьЭлементыНедоступныеПоКлючу(ЭтотОбъект);
	РаботаСФормой.УстановитьРежимВыбора(ЭтотОбъект, Элементы.Список, Параметры);
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	ДоступенАвтосалон = ЗащищенныеФункцииАльфаАвтоСервер.ПодсистемаДоступна("ЗащитаАвтосалон");
		
	Если Элементы.Список.РежимВыбора Тогда
		Элементы.СтраницыРасширеннаяИнформация.Видимость = Истина;
		Элементы.ПоказатьРасширеннуюИнформацию.Пометка   = Ложь;
		УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	Иначе
		УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	КонецЕсли;

	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаСписка(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаСписка(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаСписка(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	РаботаСФормойКлиент.УстановитьТекущуюСтрокуНаНовыйОбъект(Элементы.Список, НовыйОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Элементы.СтраницыРасширеннаяИнформация.Видимость = Элементы.ПоказатьРасширеннуюИнформацию.Пометка;
	// Производим сохранение параметра отображения дерева элементов
	Настройки.Вставить("СтраницыРасширеннаяИнформацияВидимость", Элементы.СтраницыРасширеннаяИнформация.Видимость);

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
		
	// Восстанавливаем параметры отображения страниц расширенной информации
	ПоказатьРасширеннуюИнформацию = (НЕ Настройки.Получить("СтраницыРасширеннаяИнформацияВидимость") = Ложь);
	// Произведем настройку параметров отображения полей расширенной информации
	Элементы.СтраницыРасширеннаяИнформация.Видимость = Истина;
	Элементы.ПоказатьРасширеннуюИнформацию.Пометка   = ПоказатьРасширеннуюИнформацию;
	
	УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервере
Процедура СписокПриАктивизацииСтрокиНаСервере()
		
	Цены.Очистить();
	
	Если НЕ ДоступенАвтосалон Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.Список.ТекущаяСтрока = Неопределено 
		ИЛИ ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СправочникСсылка.ВариантыКомплектации") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос=Новый Запрос("
	|ВЫБРАТЬ
	|	ЦеныСрезПоследних.ТипЦен КАК ТипЦен,
	|	ВЫБОР КОГДА ЦеныСрезПоследних.ТипЦен.ВВалютеУчета = ИСТИНА
	|   	ТОГДА ЕСТЬNULL(ЦеныСрезПоследних.ВариантКомплектации.ВалютаУчета, ЦеныСрезПоследних.Автомобиль.ВалютаУчета)
	|       ИНАЧЕ ЦеныСрезПоследних.ТипЦен.ВалютаЦены 
	|   КОНЕЦ КАК ВалютаЦены,
	|	ЦеныСрезПоследних.Цена КАК Цена,
	|	ЦеныСрезПоследних.Автомобиль КАК Автомобиль,
	|	0 КАК ЦенаВРублях
	|ИЗ
	|	РегистрСведений.ЦеныАвтомобилей.СрезПоследних(&НаДату, ВариантКомплектации=&ВариантКомплектации) КАК ЦеныСрезПоследних
	|УПОРЯДОЧИТЬ ПО
	|	ЦеныСрезПоследних.ТипЦен,
	|	ЦеныСрезПоследних.Автомобиль");
	
	Запрос.УстановитьПараметр("НаДату", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ВариантКомплектации", Элементы.Список.ТекущаяСтрока);
	ТабличноеПолеЦены = Запрос.Выполнить().Выгрузить();
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	Для Каждого ТекСтрока Из ТабличноеПолеЦены Цикл
		ТекСтрока.ЦенаВРублях = ?(ТекСтрока.ВалютаЦены = ВалютаРегламентированногоУчета, ТекСтрока.Цена,
		РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрока.Цена, ТекСтрока.ВалютаЦены, ТекущаяДатаСеанса(), ВалютаРегламентированногоУчета, ТекущаяДатаСеанса()));
		
		НоваяСтрока = Цены.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_СписокПриАктивизацииСтроки()
	
	УправлениеСпискомСправочникаКлиент.СписокПриАктивизацииСтроки(ЭтотОбъект, Элементы.Список, ИСТИНА);
	СписокПриАктивизацииСтрокиНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды  
	
	СписокПриАктивизацииСтрокиНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Группа Тогда
		Возврат;
	КонецЕсли;
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеСправочникаВариантыКомплектации");
	Иначе
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеФормыСправочникаВариантыКомплектации");
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если
		ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Элемент.ТекущиеДанные, "ЭтоГруппа")
		И Элемент.ТекущиеДанные.ЭтоГруппа
	Тогда
		Возврат;
	КонецЕсли;
	
	// ОценкаПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеФормыСправочникаВариантыКомплектации");
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// РасширеннаяИнформация
&НаКлиенте
Процедура ПоказатьРасширеннуюИнформацию(Команда)
	
	Элементы.ПоказатьРасширеннуюИнформацию.Пометка = (НЕ Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	УстановитьВидимостьСтраницРасширеннойИнформации(Элементы.ПоказатьРасширеннуюИнформацию.Пометка);
	// Взведем признак необходимости выполнить сохранение настроек формы при закрытии
	СохраняемыеВНастройкахДанныеМодифицированы = Истина;

КонецПроцедуры

// Конец РасширеннаяИнформация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьСтраницРасширеннойИнформации(Значение)	
	Элементы.СтраницаЦены.Видимость = ДоступенАвтосалон И Значение;
КонецПроцедуры
	
#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
    
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
    
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
    
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
    
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

