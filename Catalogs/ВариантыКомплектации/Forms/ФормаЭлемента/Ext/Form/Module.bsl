///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Варианты комплектации"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	УстановитьОтборыНаПоляОпций();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "БазовыеОпцииВариантаКомплектации");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ДополнительныеОпцииВариантаКомплектации");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ИнтерьерыСалона");
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	    Возврат;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьОпцииВариантаКомплектации();
	ЗаполнитьИнтерьерыСалона();
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ВариантыКомплектации");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	ЗаписатьОпцииВариантаКомплектации();
	ЗаписатьИнтерьерыСалона();
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ОпцииВариантаКомплектацииНеУникальны() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если ИнтерьерыСалонаНеУникальны() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура НаименованиеПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ВариантыКомплектации.НаименованиеПриИзменении(Объект, ПараметрыДействия);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеПолноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Объект.НаименованиеПолное = Объект.Наименование;
	
КонецПроцедуры 

&НаСервере
Процедура МодельДвигателяПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МодельДвигателяПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	МодельДвигателяПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОпцииОпции

&НаКлиенте
Процедура ОпцииВариантаКомплектацииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		ТекущаяСтрока = ОпцииВариантаКомплектации.НайтиПоИдентификатору(Элемент.ТекущаяСтрока);		
		Если ТекущаяСтрока.Количество = 0 Тогда
			ТекущаяСтрока.Количество = 1;
		КонецЕсли;
		
		Если НоваяСтрока И Элемент.ОтборСтрок <> Неопределено Тогда
			ТекущаяСтрока.ВидОпции = Элемент.ОтборСтрок.ВидОпции;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Опции

&НаСервере
Процедура УстановитьОтборыНаПоляОпций()
	
	ОтборСтрок = Новый Структура("ВидОпции", ПредопределенноеЗначение("Перечисление.ВидыОпцийАвтомобилей.БазоваяОпция"));
	Элементы.БазовыеОпцииВариантаКомплектации.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	
	ОтборСтрок.ВидОпции = ПредопределенноеЗначение("Перечисление.ВидыОпцийАвтомобилей.ДополнительнаяОпция");
	Элементы.ДополнительныеОпцииВариантаКомплектации.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОпцииВариантаКомплектации()
	
	ОпцииВариантаКомплектации.Загрузить(ОпцииАвтомобилей.ОпцииКомплектации(Объект.Ссылка));
	
КонецПроцедуры

&НаСервере
Функция ОпцииВариантаКомплектацииНеУникальны()
	
	ВсеХорошо = Истина;
	
	ОпцииВариантаКомплектацииДляСвертки = ОпцииВариантаКомплектации.Выгрузить();
	ОпцииВариантаКомплектацииДляСвертки.ЗаполнитьЗначения(1, "Количество");
	ОпцииВариантаКомплектацииДляСвертки.Свернуть("Опция", "Количество");
	ОпцииВариантаКомплектацииДляСвертки.Сортировать("Количество УБЫВ");
	
	Для Каждого Дубль Из ОпцииВариантаКомплектацииДляСвертки Цикл
		Если Дубль.Количество < 2 Тогда
			Прервать;
		КонецЕсли;
		
		ВсеХорошо = Ложь;
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Опция <%1> не уникальна.'"), Дубль.Опция);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЦикла;
	
	Возврат НЕ ВсеХорошо;
	
КонецФункции

&НаСервере
Процедура ЗаписатьОпцииВариантаКомплектации()
	
	ОпцииВариантаКомплектацииДляЗаписи = ОпцииВариантаКомплектации.Выгрузить();
	ТипВариантКомплектации = Новый ОписаниеТипов("СправочникСсылка.ВариантыКомплектации");
	ОпцииВариантаКомплектацииДляЗаписи.Колонки.Добавить("ВариантКомплектации", ТипВариантКомплектации);
	ОпцииВариантаКомплектацииДляЗаписи.ЗаполнитьЗначения(Объект.Ссылка, "ВариантКомплектации");
	ЗаписатьОпцииВариантаКомплектацииВБазу(Объект.Ссылка, ОпцииВариантаКомплектацииДляЗаписи);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьОпцииВариантаКомплектацииВБазу(Комплектация, ОпцииВариантаКомплектации)
	
	Набор = РегистрыСведений.ОпцииВариантовКомплектации.СоздатьНаборЗаписей();
	Набор.Отбор.ВариантКомплектации.Установить(Комплектация);
	Набор.Загрузить(ОпцииВариантаКомплектации);
	
	Попытка
		Набор.Записать(Истина);
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Данные.Изменение'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.ОпцииВариантовКомплектации,
			Комплектация,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		ВызватьИсключение НСтр("ru = 'Не удалось записать опции.
			|Попробуйте позже или обратитесь к системному администратору.'");
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ИнтерьерыСалона

&НаСервере
Процедура ЗаполнитьИнтерьерыСалона()
	
	ИнтерьерыСалона.Загрузить(ИнтерьерыСалонаВариантаКомплектации(Объект.Ссылка));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИнтерьерыСалонаВариантаКомплектации(Комплектация)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИнтерьерыСалона.ТипСалона КАК ТипСалона,
		|	ИнтерьерыСалона.Цвет КАК Цвет
		|ИЗ
		|	РегистрСведений.ИнтерьерыСалона КАК ИнтерьерыСалона
		|ГДЕ
		|	ИнтерьерыСалона.ВариантКомплектации = &Комплектация"
	);
	Запрос.УстановитьПараметр("Комплектация", Комплектация);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

&НаСервере
Функция ИнтерьерыСалонаНеУникальны()
	
	ВсеХорошо = Истина;
	
	ИнтерьерыСалонаДляСвертки = ИнтерьерыСалона.Выгрузить();
	ИнтерьерыСалонаДляСвертки.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(2));
	ИнтерьерыСалонаДляСвертки.ЗаполнитьЗначения(1, "Количество");
	ИнтерьерыСалонаДляСвертки.Свернуть("ТипСалона,Цвет", "Количество");
	ИнтерьерыСалонаДляСвертки.Сортировать("Количество УБЫВ");
	
	Для Каждого Дубль Из ИнтерьерыСалонаДляСвертки Цикл
		Если Дубль.Количество < 2 Тогда
			Прервать;
		КонецЕсли;
		
		ВсеХорошо = Ложь;
		
		УсловиеПоиска = Новый Структура("ТипСалона,Цвет", Дубль.ТипСалона, Дубль.Цвет);
		НайденныеСтроки = ИнтерьерыСалона.НайтиСтроки(УсловиеПоиска);
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Интерьеры салона. Тип салона ""%1"" и цвет автомобиля ""%2"" не уникальны.'"),
			Дубль.ТипСалона,
			Дубль.Цвет
		);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЦикла;
	
	Возврат НЕ ВсеХорошо;
	
КонецФункции

&НаСервере
Процедура ЗаписатьИнтерьерыСалона()
	
	ИнтерьерыСалонаДляЗаписи = ИнтерьерыСалона.Выгрузить();
	ТипВариантКомплектации = Новый ОписаниеТипов("СправочникСсылка.ВариантыКомплектации");
	ИнтерьерыСалонаДляЗаписи.Колонки.Добавить("ВариантКомплектации", ТипВариантКомплектации);
	ИнтерьерыСалонаДляЗаписи.ЗаполнитьЗначения(Объект.Ссылка, "ВариантКомплектации");
	
	ЗаписатьИнтерьерыСалонаВБазу(Объект.Ссылка, ИнтерьерыСалонаДляЗаписи);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьИнтерьерыСалонаВБазу(Комплектация, ИнтерьерыСалона)
	
	Набор = РегистрыСведений.ИнтерьерыСалона.СоздатьНаборЗаписей();
	Набор.Отбор.ВариантКомплектации.Установить(Комплектация);
	Набор.Загрузить(ИнтерьерыСалона);
	
	Попытка
		Набор.Записать(Истина);
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Данные.Изменение'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.ИнтерьерыСалона,
			Комплектация,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		ВызватьИсключение НСтр("ru = 'Не удалось записать интерьеры салона.
			|Попробуйте позже или обратитесь к системному администратору.'");
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	ВидимостьТипаДвигателя = Объект.МодельДвигателя.Пустая();
	Элементы.ТипДвигателя.Видимость       = ВидимостьТипаДвигателя;
	Элементы.МодельДвигателяТип.Видимость = НЕ ВидимостьТипаДвигателя;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПодборОпций(Команда)
	
	ДопПараметры = Новый Структура();
	
	Если Команда.Имя = "ПодборОпцийБазовые" Тогда
		ВидОпции = ПредопределенноеЗначение("Перечисление.ВидыОпцийАвтомобилей.БазоваяОпция");
	Иначе
		ВидОпции = ПредопределенноеЗначение("Перечисление.ВидыОпцийАвтомобилей.ДополнительнаяОпция");
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ПодборОпцийЗавершение", ЭтотОбъект);
	
	ДопПараметры.Вставить("ВидОпции", ВидОпции);
	УправлениеДиалогомКлиент.ОткрытьПодборОпций(ЭтотОбъект, , ДопПараметры, ОбработчикОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ПодборОпцийЗавершениеНаСервере(Результат, ДопПараметры)
	
	РезультатПодбора = ПолучитьИзВременногоХранилища(Результат.Опции);
	ВидОпции = ПолучитьЗначениеПараметраСтруктуры(Результат.ПараметрыДействия, "ВидОпции");
	
	ПараметрыОтбора = Новый Структура ("Опция");
	ПараметрыОтбора.Вставить("ВидОпции", ВидОпции);
	
	Для Каждого Строка Из РезультатПодбора Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Строка);
		
		НайденныеСтроки = ОпцииВариантаКомплектации.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = ОпцииВариантаКомплектации.Добавить();
			НоваяСтрока.Опция = Строка.Опция;
			НоваяСтрока.Количество = Строка.Количество;
			НоваяСтрока.ВидОпции = ВидОпции;
		Иначе
			СтрокаТаблицы = НайденныеСтроки[0];
			СтрокаТаблицы.Количество = СтрокаТаблицы.Количество + Строка.Количество;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОпцийЗавершение(Результат, ДопПараметры = Неопределено)Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодборОпцийЗавершениеНаСервере(Результат, ДопПараметры);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

