
#Область ПрограммныйИнтерфейс

 #Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// 	 Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

// Функция получения макета прайс-листа.
//
// Параметры:
//  ХранилищеЗначенияКолонокДляВыгрузки  - ХранилищеЗначения - Хранилище значения колонок для выгрузки.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица значений с колонками для выгрузки.
//
Функция ПолучитьНастройкиКолонокДляВыгрузки(ХранилищеЗначенияКолонокДляВыгрузки) Экспорт
	
	НастройкаКолонокДляВыгрузки = ХранилищеЗначенияКолонокДляВыгрузки.Получить();
	
	КолонкиДляВыгрузки = Новый ТаблицаЗначений;
	КолонкиДляВыгрузки.Колонки.Добавить("Представление"); 
	КолонкиДляВыгрузки.Колонки.Добавить("Пометка");
	КолонкиДляВыгрузки.Колонки.Добавить("Индекс");
	КолонкиДляВыгрузки.Колонки.Добавить("Сортировка");
	
	Если ТипЗнч(НастройкаКолонокДляВыгрузки) = Тип("ТаблицаЗначений") Тогда
		КолонкиДляВыгрузки = НастройкаКолонокДляВыгрузки;
	Иначе
		НастройкаКолонокДляВыгрузки = Неопределено;
	КонецЕсли;
	
	МассивКолонокШаблона = ПолучитьМассивКолонокШаблона();	
	
	Для Каждого КолонкаДляВыгрузки Из КолонкиДляВыгрузки Цикл
		
		Индекс = МассивКолонокШаблона.Найти(КолонкаДляВыгрузки.Представление);
		
		Если Индекс = Неопределено Тогда
			КолонкиДляВыгрузки.Удалить(КолонкаДляВыгрузки);
			Продолжить;			
		КонецЕсли;
		
		КолонкаДляВыгрузки.Индекс = Индекс;
		
	КонецЦикла;
	
	ДобавитьНовыеСтрокиКолонкиДляВыгрузки(НастройкаКолонокДляВыгрузки, МассивКолонокШаблона, КолонкиДляВыгрузки);
	
	Возврат КолонкиДляВыгрузки;
	
КонецФункции // ПолучитьНастройкиКолонокДляВыгрузки() 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьМассивКолонокШаблона()
	
	ТабличныйДокумент = Обработки.ПисательПрайсЛистаВТабличныйДокумент.ПолучитьМакет("Шаблон");
	МассивКолонокШаблона = Новый Массив;
	СтрокаШапки = 2;
	
	Для ИндексГоризонтали = 1 по ТабличныйДокумент.ШиринаСтраницы Цикл
		
		ТекстЯчейки = ТабличныйДокумент.Область(СтрокаШапки, ИндексГоризонтали).Текст;		
		Если ЗначениеЗаполнено(ТекстЯчейки) Тогда
			МассивКолонокШаблона.Добавить(ТекстЯчейки); 
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивКолонокШаблона;
	
КонецФункции

Процедура ДобавитьНовыеСтрокиКолонкиДляВыгрузки(НастройкаКолонокДляВыгрузки, МассивКолонокШаблона, КолонкиДляВыгрузки)
	
	Индекс = 0;
	Для Каждого КолонкаШаблона Из МассивКолонокШаблона Цикл
		
		НайденноеЗначение = НайтиЗначениеВТаблицеЗначений(НастройкаКолонокДляВыгрузки, КолонкаШаблона);
		
		Если НайденноеЗначение = Неопределено Тогда
			НоваяСтрока = КолонкиДляВыгрузки.Добавить();
			НоваяСтрока.Представление = КолонкаШаблона;
			НоваяСтрока.Пометка = Истина;
			НоваяСтрока.Индекс = Индекс;
		КонецЕсли;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиЗначениеВТаблицеЗначений(ТаблицаЗначенийПоиска, ИскомоеЗначение)
	
	Если ТаблицаЗначенийПоиска = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	НайденноеЗначение = Неопределено;	
	
	Для Каждого ЭлементТЗ Из ТаблицаЗначенийПоиска Цикл
		Если ЭлементТЗ.Представление = ИскомоеЗначение Тогда
			НайденноеЗначение = ЭлементТЗ;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НайденноеЗначение;
	
КонецФункции

#КонецОбласти