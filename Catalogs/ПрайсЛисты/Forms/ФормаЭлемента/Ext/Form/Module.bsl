
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	ЗаполнитьКэшПредопределенныхЗначений();
	НастроитьФорму(ЭтотОбъект);
	ИнициализацияНастроекНоменклатуры();
	ЗаполнитьНастройкиКолонокДляВыгрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ОтборНоменклатуры = Новый ХранилищеЗначения(КомпоновщикНастроекКомпоновкиДанных.Настройки);
	ТекущийОбъект.НастройкаКолонокДляВыгрузки = Новый ХранилищеЗначения(КолонкиДляВыгрузки.Выгрузить())
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура КолонкиДляВыгрузкиСортировкаПриИзменении(Элемент)
	
	ТекстВопроса = "";
	Для Каждого КолонкаДляВыгрузки Из КолонкиДляВыгрузки Цикл		
		Если ЗначениеЗаполнено(КолонкаДляВыгрузки.Сортировка) 
			И НЕ КолонкаДляВыгрузки = Элементы.КолонкиДляВыгрузки.ТекущиеДанные Тогда
			ТекстВопроса = НСтр("ru = 'При изменении сортировки, предыдущая сортировка будет очищена. Продолжить?'");
			Прервать;			
		КонецЕсли;		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстВопроса) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриОтветеНаВопросОИзмененииСортировки", ЭтотОбъект);		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсточникПриИзменении(Элемент)
	
	НастроитьФорму(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервере
Процедура ЗаполнитьКэшПредопределенныхЗначений()
	
	Значения = Новый Структура;
	Значения.Вставить("ВсяНоменклатура", ПредопределенноеЗначение("Перечисление.ИсточникиПрайсЛистов.ВсяНоменклатура"));
	Значения.Вставить("ПрайсЛистПоставщика", ПредопределенноеЗначение("Перечисление.ИсточникиПрайсЛистов.ПрайсЛистПоставщика"));
	Значения.Вставить("ОстаткиНаСкладах", ПредопределенноеЗначение("Перечисление.ИсточникиПрайсЛистов.ОстаткиНаСкладах"));
	КэшПредопределенныхЗначений = Новый ФиксированнаяСтруктура(Значения);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьФорму(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ПрайсЛистПоставщика",
		"Видимость",
		Форма.Объект.Источник = Форма.КэшПредопределенныхЗначений.ПрайсЛистПоставщика
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Склады",
		"Видимость",
		Форма.Объект.Источник = Форма.КэшПредопределенныхЗначений.ОстаткиНаСкладах
	);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализацияНастроекНоменклатуры()
	
	СхемаКомпоновкиДанных = Справочники.ПрайсЛисты.ПолучитьМакет("СКД_НоменклатураПрайсЛиста");
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	НастройкаНоменклатуры = ТекущийОбъект.ОтборНоменклатуры.Получить();
	
	Если НЕ ЗначениеЗаполнено(НастройкаНоменклатуры) Тогда
		Возврат;
	КонецЕсли;
	
	КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы.Очистить();
	
	КомпоновкаДанныхКлиентСервер.СкопироватьЭлементы(
		КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор,
		НастройкаНоменклатуры.Отбор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиКолонокДляВыгрузки()
	
	ХранилищеЗначенияКолонокДляВыгрузки = Объект.Ссылка.НастройкаКолонокДляВыгрузки;	
	НастройкаКолонокДляВыгрузки = Справочники.ПрайсЛисты.ПолучитьНастройкиКолонокДляВыгрузки(ХранилищеЗначенияКолонокДляВыгрузки);
	КолонкиДляВыгрузки.Загрузить(НастройкаКолонокДляВыгрузки);	
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОтветеНаВопросОИзмененииСортировки(РезультатВопроса, ДопПараметры) Экспорт

	ТекущиеДанные = Элементы.КолонкиДляВыгрузки.ТекущиеДанные;
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Для Каждого КолонкаДляВыгрузки Из КолонкиДляВыгрузки Цикл		
			Если ЗначениеЗаполнено(КолонкаДляВыгрузки.Сортировка) 
				И НЕ КолонкаДляВыгрузки = Элементы.КолонкиДляВыгрузки.ТекущиеДанные Тогда
				КолонкаДляВыгрузки.Сортировка = "";			
			КонецЕсли;		
		КонецЦикла;
		
	Иначе
		ТекущиеДанные.Сортировка = "";		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти