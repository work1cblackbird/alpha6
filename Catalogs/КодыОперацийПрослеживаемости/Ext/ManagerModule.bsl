// Модуль менеджера справочника "Коды операций прослеживаемости"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список описаний видов операций
//
// Возвращаемое значение:
//  Структура - поддерживаемые товарные группы.
//
Функция ОписаниеВидовОпераций() Экспорт
	
	Результат = Новый Соответствие();
	
	Макет = Справочники.КодыОперацийПрослеживаемости.ПолучитьМакет("ВидыОпераций");
	
	Для НомерСтроки = 2 По Макет.ВысотаТаблицы Цикл
		
		КодОперации = СокрЛП(Макет.Область(НомерСтроки, 1).Текст);
		Если ПустаяСтрока(КодОперации) Тогда
			Продолжить;
		КонецЕсли;
		
		Значение = Новый Структура();
		Значение.Вставить("Описание", СокрЛП(Макет.Область(НомерСтроки, 2).Текст));
		Значение.Вставить("Условие", СокрЛП(Макет.Область(НомерСтроки, 3).Текст));
		Результат.Вставить(СокрЛП(КодОперации), Значение);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Начальное заполнение реквизитов предопределенных элементов справочника
//
Процедура ВыполнитьНачальноеЗаполнение() Экспорт
	
	// Получим описание операций
	ВидыОпераций = ОписаниеВидовОпераций();
	
	// Найдем операции
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КодыОперацийПрослеживаемости.Ссылка КАК Ссылка,
	|	КодыОперацийПрослеживаемости.Код КАК Код
	|ИЗ
	|	Справочник.КодыОперацийПрослеживаемости КАК КодыОперацийПрослеживаемости";
	
	// Заполним операции описанием
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОписаниеОперации = ВидыОпераций.Получить(СокрЛП(Выборка.Код));
		
		Если ОписаниеОперации <> Неопределено Тогда
			
			ОбъектОперации = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектОперации.Описание = ОписаниеОперации.Описание;
			ОбъектОперации.Условие = ОписаниеОперации.Условие;
			ОбъектОперации.ОбменДанными.Загрузка = Истина;
			
			Попытка
				ОбъектОперации.Записать();
			Исключение
				ЗаписьЖурналаРегистрации(
					НСтр(
						"ru = 'Не удалось записать элемент справочника ""Коды операций прослеживаемости""'",
						ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
					+ " " + СокрЛП(ОбъектОперации.Наименование),
					УровеньЖурналаРегистрации.Ошибка,,,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты объекта
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

#КонецОбласти

#КонецЕсли