// Модуль менеджера справочника "Характеристики номенклатуры"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ПараметрыВыбора = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ПараметрыВыбора");
	Владелец = ПолучитьЗначениеПараметраСтруктуры(ПараметрыВыбора, "Владелец");
	Ключ = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Ключ");
	ЗначениеКопирования = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ЗначениеКопирования");
	
	Если ЗначениеЗаполнено(Ключ) Тогда
		
		Владелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ключ, "Владелец");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
		
		Владелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеКопирования, "Владелец");
		
	КонецЕсли;
	
	Если ВидФормы <> "ФормаОбъекта" ИЛИ НЕ ЗначениеЗаполнено(Владелец) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ОграничениеДанныхХарактеристик = ОбщегоНазначения
		.МенеджерОбъектаПоСсылке(Владелец)
		.ОграничениеДанныхХарактеристик(Владелец);
	
	Если ОграничениеДанныхХарактеристик = Перечисления.ОграниченияДанныхХарактеристики.Шины Тогда
		
		ВыбраннаяФорма = "ФормаЭлемента_Шины";
		Возврат;
		
	КонецЕсли;
	
	ВыбраннаяФорма = "ФормаЭлемента";
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура формирует наименование объекта.
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
// Возвращаемое значение:
//  Строка - новое наименование характеристики
//
Функция СформироватьНаименованиеПоУмолчанию(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	ЧастиНаименования = Новый Массив();
	
	Если НЕ ПустаяСтрока(СокрЛП(Объект.СерийныйНомер)) Тогда
		
		ЧастиНаименования.Добавить(СтрШаблон("с/н %1", СокрЛП(Объект.СерийныйНомер)));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Качество) Тогда
		
		ЧастиНаименования.Добавить(Строка(Объект.Качество));
		
	КонецЕсли;
	
	СертификатПредставление = Строка(Объект.Сертификат);
	
	Если ПустаяСтрока(СертификатПредставление) Тогда
		
		СертификатПредставление = ПолучитьЗначениеПараметраСтруктуры(ПараметрыДействия, "СертификатНаименование", "");
		
		Если СокрЛП(СертификатПредставление) = НСтр("ru = 'Сертификат  №  до'") Тогда
			
			СертификатПредставление = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(СертификатПредставление) Тогда
		
		ЧастиНаименования.Добавить(СертификатПредставление);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СрокГодности) Тогда
		
		ЧастиНаименования.Добавить(СтрШаблон(НСтр("ru = 'годен до %1'"), Формат(Объект.СрокГодности,"ДФ=dd.MM.yy")));
		
	КонецЕсли;
	
	РаботаСНаименованиями.ДополнитьНаименованиеСвойствами(ЧастиНаименования, ПараметрыДействия);
	НовоеНаименование = СтрСоединить(ЧастиНаименования, " ");
	
	Если ЧастиНаименования.Количество() = 0 Тогда
		
		НовоеНаименование = "<" + НСтр("ru = 'не заполнены реквизиты'") + ">";
		
	КонецЕсли;
	
	
	Возврат НовоеНаименование;
	
КонецФункции // СформироватьНаименованиеПоУмолчанию()

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// 	 Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты объекта
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");

	ОбязательныеРеквизиты.Добавить("Владелец");
	
	// Получим ограничения
	Ограничение = Неопределено;
	ТипНоменклатуры = Неопределено;
	СерийныеНомераУникальны = 3;
	ТипНоменклатуры = Объект.Владелец;
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		ТипНоменклатуры = Объект.Владелец.ТипНоменклатуры;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда
		
		Ограничение = ТипНоменклатуры.ОграничениеДанныхХарактеристик;
		
		Если ТипНоменклатуры.УникальностьСерийногоНомера Тогда
			
			УникальностьСерНомера = СерийныеНомераУникальны;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ограничение) Тогда
		
		Ограничение = Перечисления.ОграниченияДанныхХарактеристики.Все;
		
	КонецЕсли;
	
	Если
		УникальностьСерНомера <> СерийныеНомераУникальны
		И Ограничение = Перечисления.ОграниченияДанныхХарактеристики.СерийныйНомер_Свойства
	Тогда
	
		УникальностьСерНомера = 1;
		
	КонецЕсли;
	
	// в зависимости от вида ограничения расставляем обязательные реквизиты
	Если(Ограничение=Перечисления.ОграниченияДанныхХарактеристики.Все) Тогда
		
		Если ЗначениеЗаполнено(УникальностьСерНомера) Тогда
			
			ОбязательныеРеквизиты.Добавить("СерийныйНомер");
			
		КонецЕсли;
		
	ИначеЕсли (Ограничение = Перечисления.ОграниченияДанныхХарактеристики.Качество) Тогда
		
		ОбязательныеРеквизиты.Добавить("Качество");
		
	ИначеЕсли (Ограничение = Перечисления.ОграниченияДанныхХарактеристики.СерийныйНомер_Свойства) Тогда
		
		ОбязательныеРеквизиты.Добавить("СерийныйНомер");
		
	ИначеЕсли (Ограничение=Перечисления.ОграниченияДанныхХарактеристики.Сроки_Сертификаты) Тогда
		
		ОбязательныеРеквизиты.Добавить("СрокГодности");
		
	КонецЕсли;
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

Функция ЗаполнитьВладельца(Объект, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Владелец = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "Владелец");
	
	Если ЗначениеЗаполнено(Владелец) Тогда
		
		Объект.Владелец = Владелец;
		Возврат Ложь;
		
	КонецЕсли;
	
	// В структуре указаны возможные имена параметров владельцев в порядке очереди.
	// Ключ имя параметра, значение признак необходимости оповещать о записи нового
	Варианты = Новый Структура("Владелец,ВладелецХарактеристики", Ложь, Истина);
	
	Для Каждого КлючЗначение Из Варианты Цикл
		
		Значение = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, КлючЗначение.Ключ);
		
		Если ЗначениеЗаполнено(Значение) Тогда
			
			Объект.Владелец = Значение;
			Возврат КлючЗначение.Значение;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецЕсли
