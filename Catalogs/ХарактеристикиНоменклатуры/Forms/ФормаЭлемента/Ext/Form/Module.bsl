///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Характеристики номенклатуры"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// ЭлектронноеВзаимодействие.СопоставлениеНоменклатурыКонтрагентов
	СопоставлениеНоменклатурыКонтрагентов.ПриСозданииФормыХарактеристики(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.СопоставлениеНоменклатурыКонтрагентов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Номенклатура = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Номенклатура", Неопределено);
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		Объект.Владелец = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Владелец", Неопределено);
	КонецЕсли;
	
	ВладелецХарактеристики = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ВладелецХарактеристики", Неопределено);
	Если ЗначениеЗаполнено(ВладелецХарактеристики) Тогда
		Объект.Владелец = ВладелецХарактеристики;
		НадоОповеститьОЗаписиНового = Истина;
	КонецЕсли;

	Для Каждого ПодчиненныйЭлемент Из Элементы.ГруппаДополнительныеРеквизиты.ПодчиненныеЭлементы Цикл
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПодчиненныйЭлемент, "ПодчиненныеЭлементы") Тогда
			
			Для Каждого Элемент Из ПодчиненныйЭлемент.ПодчиненныеЭлементы Цикл
				Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ДополнительныйРеквизитЗначениеПриИзменении");
			КонецЦикла;
			
		Иначе
			
			ПодчиненныйЭлемент.УстановитьДействие("ПриИзменении", "Подключаемый_ДополнительныйРеквизитЗначениеПриИзменении");
			
		КонецЕсли;
		
	КонецЦикла;
	
	КопируемаяХарактеристика = ПолучитьЗначениеПараметраСтруктуры(Параметры, "КопируемаяХарактеристика", Неопределено);
	Если ЗначениеЗаполнено(КопируемаяХарактеристика) Тогда
		ЗаполнитьЗначенияСвойств(Объект, КопируемаяХарактеристика,"Владелец, Наименование, ДатаИзготовления, СрокГодности, СерийныйНомер, Сертификат, Качество, Сортировка");
		НадоОповеститьОЗаписиНового = Истина;
	КонецЕсли;
	
	Если НЕ Объект.Владелец = Неопределено Тогда
		Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ТипыНоменклатуры") И ЗначениеЗаполнено(Объект.Владелец.ОграничениеДанныхХарактеристик) Тогда
			ПараметрОграниченияДанных = Объект.Владелец.ОграничениеДанныхХарактеристик;
		ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
			ПараметрОтборНоменклатура = Объект.Владелец;
			СрокХранения = Объект.Владелец.СрокХраненияТовара;
			Если ЗначениеЗаполнено(Объект.Владелец.ТипНоменклатуры.ОграничениеДанныхХарактеристик) Тогда
				ПараметрОграниченияДанных = Объект.Владелец.ТипНоменклатуры.ОграничениеДанныхХарактеристик;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СформироватьНаименованиеПоУмолчанию();
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("Форма", ЭтотОбъект);
	КэшНаименование = Справочники.
						ХарактеристикиНоменклатуры.СформироватьНаименованиеПоУмолчанию(Объект, ПараметрыДействия);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если НЕ ЗначениеЗаполнено(Объект.Сертификат) Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрОтборНоменклатура) Тогда
			Элементы.ФлагНовыйСертификат.Доступность = Ложь;
		КонецЕсли;
	Иначе
		ЗаполнениеПоСертификату();
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	    Возврат;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ХарактеристикиНоменклатуры");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ФлагНовыйСертификат Тогда
		Если НЕ ЗначениеЗаполнено(НомерСертификата)ИЛИ НЕ ЗначениеЗаполнено(Серия) ИЛИ НЕ ЗначениеЗаполнено(ДатаВыдачи)Тогда
			ОбщегоНазначения.СообщитьПользователю (НСтр("ru = 'Не указаны реквизиты нового сертификата.'"),ТекущийОбъект,,,Отказ);
			Возврат;
		КонецЕсли;
		
		Попытка
			НовыйСертификат = Справочники.ПодтверждающиеДокументы.СоздатьЭлемент();
			НовыйСертификат.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Сертификат;
			НовыйСертификат.Владелец = ПараметрОтборНоменклатура;
			НовыйСертификат.Номер = НомерСертификата;
			НовыйСертификат.Серия = Серия;
			НовыйСертификат.ДатаВыдачи = ДатаВыдачи;
			НовыйСертификат.ДатаОкончания = ДатаОкончания;
			НовыйСертификат.КемВыдан = Выдан;
			НовыйСертификат.Наименование = Справочники.ПодтверждающиеДокументы.СформироватьНаименованиеПоУмолчанию(НовыйСертификат);
			НовыйСертификат.Записать();
			ТекущийОбъект.Сертификат = НовыйСертификат.Ссылка;
			ФлагНовыйСертификат = Ложь;
		Исключение
			ТекстОшибки = ОписаниеОшибки();
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Ошибка создания сертификата.%1 %2.'"),Символы.ПС, ТекстОшибки),
				ТекущийОбъект,
				,,Отказ
			);
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
		
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если НадоОповеститьОЗаписиНового Тогда
		ОповеститьОЗаписиНового(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаИзготовленияСрокиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДатаИзготовления) Тогда
		Если ЗначениеЗаполнено(СрокХранения) Тогда
			Объект.СрокГодности=НачалоДня(Объект.ДатаИзготовления+СрокХранения*86400);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура СрокХраненияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДатаИзготовления) Тогда
		Если ЗначениеЗаполнено(СрокХранения) Тогда
			Объект.СрокГодности = НачалоДня(Объект.ДатаИзготовления+СрокХранения*86400);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура СрокГодностиСрокиПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура СрокГодностиСрокиПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("СертификатНаименование","Сертификат " + Серия+ " № " + НомерСертификата + " до " + Формат(ДатаОкончания, "ДФ = дд.ММ.гггг"));
	
	Если ЗначениеЗаполнено(Объект.СрокГодности) Тогда
		Если ЗначениеЗаполнено(Объект.ДатаИзготовления) Тогда
			Если ЗначениеЗаполнено(СрокХранения) Тогда
				Объект.СрокГодности = Цел((Объект.СрокГодности - НачалоДня(Объект.ДатаИзготовления))/86400);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СрокГодностиСрокиПриИзмененииНаСервере(ПараметрыДействия)
	
КонецПроцедуры 

&НаСервере
Процедура СерийныйНомерПриИзмененииНаСервере(Знач ПараметрыДействия=Неопределено)
	
	ПараметрыДействия.Вставить("Форма", ЭтотОбъект);
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура СерийныйНомерПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("СертификатНаименование","Сертификат " + Серия+ " № " + НомерСертификата + " до " + Формат(ДатаОкончания, "ДФ = дд.ММ.гггг"));
	СерийныйНомерПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура КачествоПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура КачествоПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("СертификатНаименование","Сертификат " + Серия+ " № " + НомерСертификата + " до " + Формат(ДатаОкончания, "ДФ = дд.ММ.гггг"));
	КачествоПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура СертификатНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.Номенклатура") ИЛИ ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Владелец", ?(ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура"), Номенклатура, Объект.Владелец));
		ПараметрыОткрытия.Вставить("Отбор", ПараметрыОтбора);
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
		ОткрытьФорму("Справочник.ПодтверждающиеДокументы.ФормаВыбора", ПараметрыОткрытия, Элемент);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура СертификатПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура СертификатПриИзменении(Элемент)
	
	СертификатПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура СрокГодностиПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура СрокГодностиПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("СертификатНаименование","Сертификат " + Серия+ " № " + НомерСертификата + " до " + Формат(ДатаОкончания, "ДФ = дд.ММ.гггг"));
	СрокГодностиПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура ВладелецПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ВладелецПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ФлагНовыйСертификатПриИзменении(Элемент)
	
	Если ФлагНовыйСертификат Тогда
		Объект.Сертификат = Неопределено;
		Модифицированность = Истина;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура НомерСрокиПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСрокиПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("СертификатНаименование","Сертификат " + Серия+ " № " + НомерСертификата + " до " + Формат(ДатаОкончания, "ДФ = дд.ММ.гггг"));
	НомерСрокиПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура СерияПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура СерияПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("СертификатНаименование","Сертификат " + Серия+ " № " + НомерСертификата + " до " + Формат(ДатаОкончания, "ДФ = дд.ММ.гггг"));
	СерияПриИзмененииНаСервере(ПараметрыДействия)
	
КонецПроцедуры

&НаСервере
Процедура ДействуетДоПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ДействуетДоПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("СертификатНаименование","Сертификат " + Серия+ " № " + НомерСертификата + " до " + Формат(ДатаОкончания, "ДФ = дд.ММ.гггг"));
	ДействуетДоПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры 

&НаСервере
Процедура КатегорияКачестваПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура КатегорияКачестваПриИзменении(Элемент)
	
	КатегорияКачестваПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура Подключаемый_ДополнительныйРеквизитЗначениеПриИзмененииНаСервере(Знач ПараметрыДействия=Неопределено)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("Форма", ЭтотОбъект);
	СформироватьНаименованиеПоУмолчанию(ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ДополнительныйРеквизитЗначениеПриИзменении(Элемент)
	
	Подключаемый_ДополнительныйРеквизитЗначениеПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	КэшНаименование = ВыбранноеЗначение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)

	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);

КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнениеПоСертификату()
	
	НомерСертификата = Объект.Сертификат.Номер;
	Серия = Объект.Сертификат.Серия;
	ДатаВыдачи = Объект.Сертификат.ДатаВыдачи;
	ДатаОкончания = Объект.Сертификат.ДатаОкончания;
	Выдан = Объект.Сертификат.КемВыдан;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаименованиеПоУмолчанию(ПараметрыДействия=Неопределено)
	
	Если ПараметрыДействия = Неопределено Тогда
		ПараметрыДействия = Новый Структура;
	КонецЕсли;
	
	ПараметрыВыполнения = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыДействия);
	
	Если НЕ ПараметрыВыполнения.Свойство("Форма") Тогда
		ПараметрыВыполнения.Вставить("Форма", ЭтотОбъект);
	КонецЕсли;
	
	УправлениеДиалогомСервер.СформироватьЗначениеПоУмолчанию(ЭтотОбъект, Объект, ПараметрыВыполнения);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
		
	Если Не Элементы.Найти("Сертификат")=Неопределено Тогда
		Если ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.Номенклатура") Тогда
			УправлениеДиалогомСервер.ОбновитьПараметрВыбора(Элементы.Сертификат.ПараметрыВыбора, "Отбор.Владелец", Объект.Владелец);
		Иначе
			УправлениеДиалогомСервер.УдалитьПараметрВыбора(Элементы.Сертификат.ПараметрыВыбора, "Отбор.Владелец");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(ПараметрОграниченияДанных) Тогда
		Если ПараметрОграниченияДанных = Перечисления.ОграниченияДанныхХарактеристики.Все Тогда
			Элементы.ГруппаВсе.Видимость = Истина;
		ИначеЕсли ПараметрОграниченияДанных = Перечисления.ОграниченияДанныхХарактеристики.Сроки_Сертификаты Тогда
			Элементы.ГруппаСроки_Сертификаты.Видимость = Истина;
			Элементы.ГруппаВсе.Видимость = Ложь;
		ИначеЕсли ПараметрОграниченияДанных = Перечисления.ОграниченияДанныхХарактеристики.СерийныйНомер_Свойства Тогда
			Элементы.ГруппаСерийныйНомер_Свойства.Видимость = Истина;
			Элементы.ГруппаВсе.Видимость = Ложь;
		ИначеЕсли ПараметрОграниченияДанных = Перечисления.ОграниченияДанныхХарактеристики.Свойства Тогда
			Элементы.ГруппаСвойства.Видимость = Истина;
			Элементы.ГруппаВсе.Видимость = Ложь;
		ИначеЕсли ПараметрОграниченияДанных = Перечисления.ОграниченияДанныхХарактеристики.Качество Тогда
			Элементы.ГруппаКачество.Видимость = Истина;
			Элементы.ГруппаВсе.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.НомерСроки.Доступность = ФлагНовыйСертификат;
	Элементы.Серия.Доступность = ФлагНовыйСертификат;
	Элементы.ДатаВыдачи.Доступность = ФлагНовыйСертификат;
	Элементы.ДатаОкончания.Доступность = ФлагНовыйСертификат;
	Элементы.Выдан.Доступность = ФлагНовыйСертификат;
	
	Элементы.Сертификат.Доступность = НЕ ФлагНовыйСертификат;
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

