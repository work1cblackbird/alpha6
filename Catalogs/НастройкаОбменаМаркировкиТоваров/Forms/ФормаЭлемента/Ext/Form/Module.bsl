
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		МаркировкаТоваровСервер.ИнициализироватьСлужебныеРеквизиты(ЭтотОбъект);
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "СписокУстройств");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	МаркировкаТоваровСервер.ИнициализироватьСлужебныеРеквизиты(ЭтотОбъект);
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("НастройкаОбменаМаркировкиТоваров");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокУстройств

&НаКлиенте
Процедура ТестовыйКонтурПриИзменении(Элемент)
	
	ПараметрыАдресаСоединения = МаркировкаТоваровКлиентСервер.АдресаПодключенияКСистемеМаркировки(Объект.ТестовыйКонтур);
	ЗаполнитьЗначенияСвойств(Объект, ПараметрыАдресаСоединения);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокУстройствПодразделениеКомпанииПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокУстройств.ТекущиеДанные;
	Если НЕ ТекущиеДанные.ПодразделениеКомпании.Пустая() Тогда
		Если ПолучитьОрганизацию(ТекущиеДанные.ПодразделениеКомпании) <> Объект.Организация Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru='Подразделение ""%1"" не принадлежит организации ""%2""'"),
					ТекущиеДанные.ПодразделениеКомпании,
					Объект.Организация
				)
			);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьПароль(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Сертификат) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Для записи пароля укажите сертификат'"));
		Возврат;
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ЗавершениеВводаПароля", ЭтотОбъект);
	
	ПоказатьВводСтроки(
		ОбработчикОповещения,
		"",
		НСтр("ru = 'Укажите пароль выбранного сертификата'")
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСУЗ(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка)
		Или Модифицированность Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Данные еще не записаны.
			|Выполните данную операцию после записи настройки.'"));
		Возврат;
	КонецЕсли;
	
	Если Объект.СписокУстройств.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Для проверки связи доступа заполните .'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыВыполнения = Новый Структура();
	ПараметрыВыполнения.Вставить("Действие", "ПроверитьСоединениеСУЗ");
	ПараметрыВыполнения.Вставить("НастройкаСУЗ", Объект.Ссылка);
	ПараметрыВыполнения.Вставить("Организация", Объект.Организация);
	ПараметрыВыполнения.Вставить("КлючСессииСУЗ", Истина);
	ПараметрыВыполнения.Вставить("ОбработкаРезультата",
		Новый ОписаниеОповещения("ПроверкаСоединенияСУЗЗавершение", ЭтотОбъект));
	ОбменССистемойМаркировкиКлиент.ФормированиеЗапросаВФоне(ЭтотОбъект, Объект, ПараметрыВыполнения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ФормаПроверитьСУЗ",
		"Видимость",
		ЭтотОбъект.РежимОбменаСЧестнымЗнаком = Перечисления.СпособыОбменаСЧестнымЗнаком.ЧерезAPI
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеВводаПароля(ВведенныйПароль, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ВведенныйПароль = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьПарольСертификата(ВведенныйПароль, Объект.Сертификат);
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ЗаписатьПарольСертификата(Пароль, Сертификат)
	
	УстановитьПривилегированныйРежим(Истина);
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Сертификат, Пароль, "ПарольСертификата");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОрганизацию(ПодразделениеКомпании)
	
	Возврат ПодразделениеКомпании.Организация;
	
КонецФункции

&НаКлиенте
Процедура ПроверкаСоединенияСУЗЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ПолучитьЗначениеПараметраСтруктуры(Результат, "ПроверкаПодключенияПройдена", Ложь) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Подключение к СУЗ настроено корректно.'"));
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
