///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Транспорт прайс-листов контрагентов"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	НаименованиеПоУмолчанию = Справочники.ТранспортПрайсЛистовКонтрагентов.СформироватьНаименование(Объект);
	Если НаименованиеПоУмолчанию = Объект.Наименование ИЛИ НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		КэшНаименование = НаименованиеПоУмолчанию;
		Объект.Наименование = НаименованиеПоУмолчанию;
	КонецЕсли;
	
	НастройкиСтандартныхПочтовыхСервисов =
		Справочники.ТранспортПрайсЛистовКонтрагентов.ПрочитатьНастройкиСтандартныхПочтовыхСервисов();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УправлениеДиалогомНаСервере();
		
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ТранспортПрайсЛистовКонтрагентов");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ТребуетсяАвторизацияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Справочники.ТранспортПрайсЛистовКонтрагентов.ТребуетсяАвторизацияПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТребуетсяАвторизацияПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ТребуетсяАвторизацияПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ВидТранспортаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Справочники.ТранспортПрайсЛистовКонтрагентов.ВидТранспортаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	ОбновитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидТранспортаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ВидТранспортаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура URLСервераПриИзмененииНаСервере()
	ОбновитьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура URLСервераПриИзменении(Элемент)
	URLСервераПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура URLСервераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Сервисы = Неопределено;
	Если НастройкиСтандартныхПочтовыхСервисов.Свойство(НРег(Строка(Объект.ВидТранспорта)), Сервисы) Тогда
		СписокВыбора = Новый СписокЗначений; СтандартнаяОбработка = Ложь;
		
		Для Каждого Сервис Из Сервисы Цикл
			СписокВыбора.Добавить(Сервис, Сервис.Имя);
		КонецЦикла;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтотОбъект, "ВыборСтандартногоСервиса");
		ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КаталогПриИзмененииНаСервере()
	
	Если Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.FTP ИЛИ
		Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.FTPS Тогда
		Объект.Каталог = СтрЗаменить(Объект.Каталог, "\", "/");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогПриИзменении(Элемент)
	
	КаталогПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ПапкиПочтовогоЯщикаНаСервере()
	
	Почта = Справочники.ТранспортПрайсЛистовКонтрагентов.СоздатьПодключениеКПочте(Объект);
	
	Элементы.Каталог.СписокВыбора.Очистить();
	
	Если Почта = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Элементы.Каталог.СписокВыбора.ЗагрузитьЗначения(Почта.ПолучитьПочтовыеЯщики());
	Исключение
		ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиПочтовогоЯщика(Команда)
	
	ПапкиПочтовогоЯщикаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьПодключениеНаСервере()
	
	Если Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.IMAP ИЛИ
		Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.POP3 Тогда
		
		Почта = Справочники.ТранспортПрайсЛистовКонтрагентов.СоздатьПодключениеКПочте(Объект);
		Если Почта = Неопределено Тогда
			Возврат;
		КонецЕсли;
	ИначеЕсли Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.FTPS ИЛИ
		Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.FTP Тогда
		
		FTPСоединение = Справочники.ТранспортПрайсЛистовКонтрагентов.СоздатьFTPСоединение(Объект);
		Если FTPСоединение = Неопределено Тогда
			Возврат;
		КонецЕсли;
	ИначеЕсли Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.HTTP ИЛИ
		Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.HTTPS Тогда
		
		HTTPСоединение = Справочники.ТранспортПрайсЛистовКонтрагентов.СоздатьHTTPСоединение(Объект);
		Если HTTPСоединение = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Подключение выполнено успешно.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	ПроверитьПодключениеНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьНаименование()
	
	Если КэшНаименование = Объект.Наименование Тогда
		Объект.Наименование = Справочники.ТранспортПрайсЛистовКонтрагентов.СформироватьНаименование(Объект);
		КэшНаименование = Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	ЭтоPOP3 = (Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.POP3);
	ЭтоIMAP = (Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.IMAP);
	ЭтоFTP  = (Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.FTP) ИЛИ
		(Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.FTPS);
	ЭтоHTTP = (Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.HTTP) ИЛИ
		(Объект.ВидТранспорта = Перечисления.ВидыТранспортаПрайсЛистовКонтрагентов.HTTPS);
	
	Элементы.СпособАутентификацииPOP3.Видимость = ЭтоPOP3;
	
	Элементы.URLСервера.КнопкаВыбора = (ЭтоIMAP ИЛИ ЭтоPOP3);
	
	Элементы.SSL.Видимость     = (ЭтоIMAP ИЛИ ЭтоPOP3);
	Элементы.Порт.Видимость    = НЕ ЭтоHTTP;
	Элементы.Таймаут.Видимость = НЕ ЭтоHTTP;
	
	Элементы.Каталог.Видимость           = НЕ(ЭтоHTTP ИЛИ ЭтоPOP3);
	Элементы.Каталог.РежимВыбораИзСписка = ЭтоIMAP;
	Элементы.ПассивныйРежим.Видимость    = ЭтоFTP;
	
	Элементы.ДекорацияОтступ.Видимость = ЭтоHTTP;
	
	Элементы.ПапкиПочтовогоЯщика.Видимость = ЭтоIMAP;
	
	Элементы.ТребуетсяАвторизация.Доступность = НЕ(ЭтоIMAP ИЛИ ЭтоPOP3);
	
	Элементы.Логин.Доступность  = Объект.ТребуетсяАвторизация;
	Элементы.Пароль.Доступность = Объект.ТребуетсяАвторизация;
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если НЕ УправлениеДиалогомСправочникаКлиент.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры = "ВыборСтандартногоСервиса" Тогда
		ЗаполнитьЗначенияСвойств(Объект, РезультатОповещения.Значение);
		ОбновитьНаименование();
		
		Модифицированность = Истина;
	Иначе
		ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	КонецЕсли;
	
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	Если НЕ УправлениеДиалогомСправочникаСервер.ОбработкаРезультатаОповещения(ЭтотОбъект, РезультатОповещения, ДополнительныеПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	УправлениеДиалогомСправочникаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

