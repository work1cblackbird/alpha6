
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если РаботаСФормой.МожноУстановитьОтборПоВладельцу(Параметры) Тогда
		РаботаСФормой.УстановитьОтборПоВладельцуНаДерево(Дерево, Параметры.Отбор);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.СкрытьЭлементыНедоступныеПоКлючу(ЭтотОбъект);
	РаботаСФормой.УстановитьРежимВыбора(ЭтотОбъект, Элементы.Список, Параметры);
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
	РежимПодбораОпций = Элементы.Список.РежимВыбора И Параметры.Свойство("ПодборОпций");
	Элементы.СтраницаПодборОпций.Видимость = РежимПодбораОпций;
	
	Если РежимПодбораОпций Тогда
		КлючОбъекта                 = "Справочник.Опции.РежимПодбора";
		КлючСохраненияПоложенияОкна = КлючОбъекта;
		КлючНазначенияИспользования = КлючОбъекта;
		
		Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
		Заголовок = НСтр("ru = 'Подбор опций'");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПодборОпций;
		АдресПараметрыПодбора = ПоместитьВоВременноеХранилище(Параметры.ПараметрыПодбора, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьОтборы();
	
	Если РежимПодбораОпций Тогда
		Элементы.ФормаВыбрать.Заголовок = НСтр("ru = 'Завершить подбор'");
	КонецЕсли;
	
	Подключаемый_СписокПриАктивизацииСтроки();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	РаботаСФормойКлиент.УстановитьТекущуюСтрокуНаНовыйОбъект(Элементы.Список, НовыйОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.СтраницаПодборОпций.Видимость
		И НЕ (ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		ИЛИ Элементы.Список.ТекущиеДанные.ЭтоГруппа) Тогда
		
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
		ОбработкаПодбораОпций(ВыбраннаяСтрока);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_СписокПриАктивизацииСтроки()
	
	СписокПриАктивизацииСтрокиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодключитьОбработчикОжидания("Подключаемый_СписокПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Группа Тогда
		Возврат;
	КонецЕсли;
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеСправочникаОпции");
	Иначе
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеФормыСправочникаОпции");
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если
		ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Элемент.ТекущиеДанные, "ЭтоГруппа")
		И Элемент.ТекущиеДанные.ЭтоГруппа
	Тогда
		Возврат;
	КонецЕсли;
	
	// ОценкаПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеФормыСправочникаОпции");
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если РежимПодбораОпций Тогда
		СтандартнаяОбработка = Ложь;
		Модифицированность = Ложь;
		Закрыть(ПодготовитьСписокПодобранныхОпций());
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДерево

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Список.Видимость Тогда
		Если Элементы.Дерево.ТекущаяСтрока = Элементы.Список.ТекущийРодитель Тогда
			
			// Пропустим если равны
			
		ИначеЕсли
			Не ЗначениеЗаполнено(Элементы.Список.ТекущийРодитель)
			И Не ЗначениеЗаполнено(Элементы.Дерево.ТекущаяСтрока)
		Тогда
			
			// Пропустим если оба пустые (могут быть Неопределено)
			
		Иначе
			
			Элементы.Список.ТекущийРодитель = Элементы.Дерево.ТекущаяСтрока;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодборОпций

&НаКлиенте
Процедура ПодборОпцийПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОпцийПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если Элементы.СтраницаПодборОпций.Видимость
		И НЕ (ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		ИЛИ Элементы.Список.ТекущиеДанные.ЭтоГруппа) Тогда
		Модифицированность = Истина;
		ОбработкаПодбораОпций(Элементы.Список.ТекущаяСтрока);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодборОпцийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьСкрытьДерево(Команда)
	
	ВидимостьДерева = Не ВидимостьДерева;	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОтборы()
	
	ЭлементОтбора=Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Артикул");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
	ЭлементОтбора.Использование = Ложь;
	
	ЭлементОтбора=Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Код");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
	ЭлементОтбора.Использование = Ложь;
	
	ЭлементОтбора=Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
	ЭлементОтбора.Использование = Ложь;

	ЭлементОтбора=Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НаименованиеПолное");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
	ЭлементОтбора.Использование = Ложь;

	ЭлементОтбора=Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Родитель");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	ЭлементОтбора.Использование = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СписокПриАктивизацииСтрокиНаСервере()
	
	Цены.Очистить();
	
	Если
		Элементы.Список.ТекущаяСтрока = Неопределено
		Или ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
	Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЦеныСрезПоследних.ТипЦен КАК ТипЦен,
		|	ВЫБОР КОГДА ЦеныСрезПоследних.ТипЦен.ВВалютеУчета = ИСТИНА
		|		ТОГДА ЦеныСрезПоследних.Опция.ВалютаУчета
		|		ИНАЧЕ ЦеныСрезПоследних.ТипЦен.ВалютаЦены
		|	КОНЕЦ КАК ВалютаЦены,
		|	ЦеныСрезПоследних.Цена КАК Цена,
		|	ЦеныСрезПоследних.Модель КАК Модель,
		|	ЦеныСрезПоследних.ВариантКомплектации КАК ВариантКомплектации,
		|	0 КАК ЦенаВРублях
		|ИЗ
		|	РегистрСведений.ЦеныОпций.СрезПоследних(&НаДату, Опция=&Опция) КАК ЦеныСрезПоследних
		|УПОРЯДОЧИТЬ ПО
		|	ЦеныСрезПоследних.ТипЦен,
		|	ЦеныСрезПоследних.Модель,
		|	ЦеныСрезПоследних.ВариантКомплектации"
	);
	Запрос.УстановитьПараметр("НаДату", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Опция", Элементы.Список.ТекущаяСтрока);
	ТабличноеПолеЦены = Запрос.Выполнить().Выгрузить();
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	
	Для Каждого ТекСтрока Из ТабличноеПолеЦены Цикл
		
		Если ТекСтрока.ВалютаЦены = ВалютаРегламентированногоУчета Тогда
			
			ТекСтрока.ЦенаВРублях = ТекСтрока.Цена;
			
		Иначе
			
			ТекСтрока.ЦенаВРублях = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
				ТекСтрока.Цена,
				ТекСтрока.ВалютаЦены,
				ТекущаяДатаСеанса(),
				ВалютаРегламентированногоУчета,
				ТекущаяДатаСеанса()
			);
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Цены.Добавить(), ТекСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

#Область ОбработчикиАльфаАвто

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
    
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
    
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
    
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура ОбработкаПодбораОпций(Опция)
	
	// Ищем такую опцию, может уже добавляли.
	Поиск = Новый Структура("Опция", Опция);
	МассивСтрок = ПодборОпций.НайтиСтроки(Поиск);
	Если МассивСтрок.Количество() = 0 Тогда
		НоваяСтрока = ПодборОпций.Добавить();
		НоваяСтрока.Опция = Опция;
		НоваяСтрока.Количество = 1;
	Иначе
		СтрокаТаблицы = МассивСтрок[0];
		СтрокаТаблицы.Количество = СтрокаТаблицы.Количество + 1;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьСписокПодобранныхОпций()
	
	Результат = ПолучитьИзВременногоХранилища(АдресПараметрыПодбора);
	Результат.Вставить("Опции", ПоместитьВоВременноеХранилище(ПодборОпций.Выгрузить(), УникальныйИдентификатор));
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

