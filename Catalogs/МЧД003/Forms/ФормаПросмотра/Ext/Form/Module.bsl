#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СсылкаНаДоверенность = Параметры.Ключ;
	
	ПолномочияОграничены = Истина;
	Если ЗначениеЗаполнено(СсылкаНаДоверенность) Тогда
		ПолномочияОграничены = Не МашиночитаемыеДоверенности.ЭтоМЧДСПолнымиПолномочиями(СсылкаНаДоверенность);
	КонецЕсли;
	
	ЗаполнитьТабличныйДокументМЧД();
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании = ОбменСКонтрагентами.ПараметрыПриСозданииНаСервере_ФормаСправочника();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.СправочникСсылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.КонтроллерСостояниеЭДО = Элементы.ПредставлениеСостоянияЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ПараметрыЭДОПриСоздании.СкрыватьСостояниеНеНачатогоЭДО = Истина;
	ОбменСКонтрагентами.ПриСозданииНаСервере_ФормаСправочника(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	Справочники.ПравилаПроверкиПолномочийМЧД.ПриСозданииНаСервереФормыНастроек(ЭтотОбъект);
	ЗаполнитьДанныеРучнойПроверкиНаФорме();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Справочники.ПравилаПроверкиПолномочийМЧД.ПриЧтенииНастроек(ТекущийОбъект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании = ОбменСКонтрагентами.ПараметрыПриЧтенииНаСервере_ФормаСправочника();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.СправочникСсылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.КонтроллерСостояниеЭДО = Элементы.ПредставлениеСостоянияЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ОбменСКонтрагентами.ПриЧтенииНаСервере_ФормаСправочника(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	ВерсияИзменилась = ВерсияИзменилась ИЛИ (ЗначениеЗаполнено(ТекущаяВерсия) И ТекущаяВерсия <> ТекущийОбъект.ВерсияДанных);
	ТекущаяВерсия = ТекущийОбъект.ВерсияДанных;
	
	Если ТекущийОбъект.ПередовериеРазрешено
		Или ЗначениеЗаполнено(ТекущийОбъект.НомерРодительскойДоверенности) Тогда
		ЗаполнитьЦепочкуПередоверия();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыОповещения = ОбменСКонтрагентамиКлиент.ПараметрыОповещенияЭДО_ФормаСправочника();
	ПараметрыОповещения.Форма = ЭтотОбъект;
	ПараметрыОповещения.СправочникСсылка = Объект.Ссылка;
	ПараметрыОповещения.КонтроллерСостояниеЭДО = Элементы.ПредставлениеСостоянияЭДО;
	ПараметрыОповещения.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ОбменСКонтрагентамиКлиент.ОбработкаОповещения_ФормаСправочника(ИмяСобытия, Параметр, Источник, ПараметрыОповещения);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	РегистрацияПередоверия = МашиночитаемыеДоверенностиКлиент.ИмяСобытияРегистрацииПередоверия();
	
	Если ИмяСобытия = РегистрацияПередоверия Тогда
		ЗаполнитьЦепочкуПередоверия();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УправлениеФормой();
	СкриптТекст = Скрипт;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы И ВерсияИзменилась Тогда
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ЖурналМашиночитаемыхДоверенностей"))
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Скрипт = СкриптТекст;
	Справочники.ПравилаПроверкиПолномочийМЧД.ЗаписатьПравило(ТекущийОбъект.Ссылка, ЭтотОбъект);
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СкриптИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Модифицированность = Истина;
	СкриптТекст = Текст;
	ПравилоНастроено = ЗначениеЗаполнено(Текст);
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект, ПравилоНастроено);
КонецПроцедуры

&НаКлиенте
Процедура ВариантПроверкиПриИзменении(Элемент)
	МашиночитаемыеДоверенностиКлиент.ОтобразитьВариантПроверки(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЭДОНажатие(Элемент, СтандартнаяОбработка)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ОбменСКонтрагентамиКлиент.СостояниеЭДОНажатие_ФормаСправочника(ЭтотОбъект, СтандартнаяОбработка);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоОтбора

&НаКлиенте
Процедура ДеревоОтбораПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередНачаломДобавления(Элемент, Отказ, Элементы.ДеревоОтбораДанные);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередОкончаниемРедактирования(
		Элемент, ОтменаРедактирования, ДеревоОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Элементы.ДеревоОтбора.ТекущиеДанные.Картинка = МашиночитаемыеДоверенностиКлиентСервер.НаборКартинок().Реквизит;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПередНачаломИзменения(Элемент, Отказ)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	ДополнительныеПараметры = Новый Структура("ДанныеСтроки", ДанныеСтроки);
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтотОбъект, ДополнительныеПараметры);
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередНачаломИзменения(
		ДанныеСтроки, Отказ, Элементы.ДеревоОтбораДанные, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПередУдалением(Элемент, Отказ)
	
	ДанныеСтроки = Элементы.ДеревоОтбора.ТекущиеДанные;
	ИдентификаторСтроки = 0;
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередУдалением(
		ДанныеСтроки, Отказ, ИдентификаторСтроки, Модифицированность);
	СформироватьПредставлениеДанныхПоСтрокеДерева(ИдентификаторСтроки);
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораДанныеПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ДанныеСтроки = Элементы.ДеревоОтбора.ТекущиеДанные;
	
	Если ДанныеСтроки.ИдСтроки > 0 Тогда
		ДанныеСтроки.ИдСтроки = 0;
		Элементы.ДеревоОтбора.ЗакончитьРедактированиеСтроки(Ложь);
	КонецЕсли;
	
	СформироватьПредставлениеДанныхПоСтрокеДерева(ДанныеСтроки.ПолучитьРодителя().ПолучитьИдентификатор());
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПослеУдаления(Элемент)
	
	Модифицированность = Истина;
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПриАктивизацииСтроки(Элемент)
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПриАктивизацииСтроки(Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоЦепочкиПередоверия

&НаКлиенте
Процедура ДеревоЦепочкиПередоверияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Доверенность);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Передоверить(Команда)
	
	ПередовериеРазрешено = Объект.ПередовериеРазрешено
		И Объект.СрокДействия > ОбщегоНазначенияКлиент.ДатаСеанса();
	
	ОткрытьФорму("Справочник.МЧД003.Форма.ЧерновикПередоверияМЧД",
		Новый Структура("ИсходнаяМЧД, ПередовериеРазрешено", Объект.Ссылка, ПередовериеРазрешено),
		ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Посмотреть(Команда)
	
	Содержимое = МашиночитаемыеДоверенностиВызовСервера.ВыгрузитьXML(Объект.Ссылка);
	Текст = Новый ТекстовыйДокумент();
	Текст.УстановитьТекст(Содержимое);
	Текст.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура Отозвать(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтозватьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ОтменитьМЧД(ОписаниеОповещения, , ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭДО(Команда)
	
	МашиночитаемыеДоверенностиКлиент.ОтправитьПоЭДО(СсылкаНаДоверенность);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлектронныеДокументы(Команда)
	
	ИнтерфейсДокументовЭДОКлиент.ОткрытьДеревоЭлектронныхДокументов(СсылкаНаДоверенность);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзРеестраФНС(Команда)
	
	ДлительнаяОперация = НачатьОбновлениеСтатусаИзРеестраФНС();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииОбновленияСтатусаВРеестреФНС", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ПометитьВерной(Команда)
	
	Если Объект.Верна Тогда
		
		Оповещение = Новый ОписаниеОповещения("УбратьПометкуВернаЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Убрать пометку ""Верна"" у доверенности?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
	Иначе
		
		Модифицированность = Истина;
		ПроверенаВручную = Истина;
		
		Объект.Верна = Истина;
		Объект.ТекстОшибкиПроверкиМЧД = СтрШаблон(НСтр("ru='Проверена вручную: %1, %2'"), 
			ПользователиКлиент.ТекущийПользователь(), ОбщегоНазначенияКлиент.ДатаСеанса());
		
		УправлениеФормой();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПодписьЗаявленияНаОтмену(Команда)
	
	ЗначенияРеквизитов = ЗначенияРеквизитов("ИмяФайлаЗаявленияНаОтзыв");
	
	ЭлектронныеПодписиЗаявленияНаОтзыв=ЭлектронныеПодписиЗаявленияНаОтзыв(Объект.Ссылка);
	
	Если Не ЭлектронныеПодписиЗаявленияНаОтзыв.Количество() Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Заявление на отмену не отправлялось'"));
		Возврат;
	КонецЕсли;
	
	Подпись = ЭлектронныеПодписиЗаявленияНаОтзыв[0];
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", Подпись); 
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаЗаявленияНаОтзыв + ".sig");
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗаявлениеНаОтмену(Команда)
		
	ЗначенияРеквизитов = ЗначенияРеквизитов("ИмяФайлаЗаявленияНаОтзыв, ФайлЗаявленияНаОтзыв");
	
	Если ЗначенияРеквизитов.ФайлЗаявленияНаОтзыв = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Заявление на отмену не отправлялось'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ФайлЗаявленияНаОтзыв);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаЗаявленияНаОтзыв);
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьЦепочкуПередоверия()
	
	Доверенности = Справочники.МЧД003.ЦепочкаПередоверия(
		Объект.НомерРодительскойДоверенности, Объект.НомерДоверенности);
	
	ЕстьЦепочкаПередоверия = Доверенности.Количество() > 1;
	
	Если Не ЕстьЦепочкаПередоверия Тогда
		Возврат;
	КонецЕсли;

	НомерРодительскойДоверенности = ""; 
	Для Каждого Строка Из Доверенности Цикл
		Если Строка.НомерРодительскойДоверенности = "" Тогда
			НомерРодительскойДоверенности = Строка.НомерДоверенности;	
		КонецЕсли;
	КонецЦикла;
	
	Дерево = РеквизитФормыВЗначение("ДеревоЦепочкиПередоверия");
	
	Счетчик = 0;
	Пока Счетчик <= Доверенности.Количество() - 1 Цикл
		
		ЗапуститьЦиклСНачала = Ложь;	
		
		Если Доверенности[Счетчик].НомерДоверенности = НомерРодительскойДоверенности
			И Дерево.Строки.Найти(НомерРодительскойДоверенности, "НомерДоверенности") = Неопределено Тогда
			
			НоваяСтрока = Дерево.Строки.Добавить();
			НоваяСтрока.НомерДоверенности = НомерРодительскойДоверенности;
			НоваяСтрока.РодительскаяДоверенность = Доверенности[Счетчик].РодительскаяДоверенность;
			НоваяСтрока.Доверенность = Доверенности[Счетчик].Доверенность;
			ЗаполнитьДанныеСтрокиЦепочкиПередоверия(Доверенности[Счетчик].ФайлМЧД, НоваяСтрока);
			
			ЗапуститьЦиклСНачала = Истина;
			
		КонецЕсли;
		
		НайденнаяСтрока = Дерево.Строки.Найти(Доверенности[Счетчик].НомерРодительскойДоверенности , "НомерДоверенности", Истина);
		Если Дерево.Строки.Найти(Доверенности[Счетчик].НомерДоверенности , "НомерДоверенности", Истина) = Неопределено
			И НайденнаяСтрока <> Неопределено Тогда
			
			НоваяСтрока = НайденнаяСтрока.Строки.Добавить();
			НоваяСтрока.НомерДоверенности = Доверенности[Счетчик].НомерДоверенности;
			НоваяСтрока.РодительскаяДоверенность = Доверенности[Счетчик].РодительскаяДоверенность;
			НоваяСтрока.Доверенность = Доверенности[Счетчик].Доверенность;
			ЗаполнитьДанныеСтрокиЦепочкиПередоверия(Доверенности[Счетчик].ФайлМЧД, НоваяСтрока);
			
			ЗапуститьЦиклСНачала = Истина;
			
		КонецЕсли;
		
		Если ЗапуститьЦиклСНачала Тогда
			Счетчик = 0;
			Продолжить;
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоЦепочкиПередоверия");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСтрокиЦепочкиПередоверия(ФайлМЧД, СтрокаДерева)

	РезультатЧтения = МашиночитаемыеДоверенности.ОбъектXDTOМЧД(ФайлМЧД.Получить());
	
	Если ЗначениеЗаполнено(РезультатЧтения.ТекстОшибки) Тогда
		ВызватьИсключение РезультатЧтения.ТекстОшибки;
	КонецЕсли;
	
	СрокДействия = "";
	Представление = "";
	
	ОбъектXDTO = РезультатЧтения.ОбъектМЧД;
	ДоверXDTO = РаботаСФайламиБЭД.ЗначениеСвойстваXDTO(ОбъектXDTO.Документ, "Довер", Неопределено);
	Если ДоверXDTO <> Неопределено Тогда
		
		СвДовXDTO = РаботаСФайламиБЭД.ЗначениеСвойстваXDTO(ДоверXDTO, "СвДов", , , Истина)[0];
		
		ДатаВыдачиБезВремени = Лев(СвДовXDTO.ДатаВыдДовер, СтрНайти(СвДовXDTO.СрокДейст, " ") - 1);
		ДатаОкончанияБезВремени = Лев(СвДовXDTO.СрокДейст, СтрНайти(СвДовXDTO.СрокДейст, " ") - 1);

		СрокДействия = ДатаВыдачиБезВремени + " - " + ДатаОкончанияБезВремени;
		
		Доверит = ДоверXDTO.СвДоверит[0].Доверит;
		
		Если Доверит.РосОргДовер <> Неопределено Тогда
			Представление = 
				Доверит.РосОргДовер.СвРосОрг.НаимОрг 
				+ Символы.ПС 
				+  "ИНН: " + Доверит.РосОргДовер.СвРосОрг.ИННЮЛ + " "
				+  "КПП: " + Доверит.РосОргДовер.СвРосОрг.КПП;
		КонецЕсли;
		Если Доверит.ИнОргДовер <> Неопределено Тогда
			Представление =
				Доверит.ИнОргДовер.СвИнОрг.НаимОрг
				+ Символы.ПС
				+ "ИНН: " + Доверит.ИнОргДовер.СвИнОрг.ИННЮЛ + " "
				+ "КПП: " + Доверит.ИнОргДовер.СвИнОрг.КПП;
		КонецЕсли;
		Если Доверит.ИПДовер <> Неопределено Тогда
			ФИО = Доверит.ИПДовер.СведФЛ.ФИО;
			Представитель = ФИО.Фамилия + " " + ФИО.Имя + " " + ФИО.Отчество; 
			
			Представление = Представитель
				+ Символы.ПС
				+ "ИНН: " + Доверит.ИПДовер.ИННФЛ + " "
				+ "СНИЛС: " + Доверит.ИПДовер.СНИЛС + " "
				+ "ОГРНИП: " + Доверит.ИПДовер.ОГРНИП;
		КонецЕсли;
		Если Доверит.ФЛДовер <> Неопределено Тогда
			ФИО = Доверит.ФЛДовер.СведФЛ.ФИО;
			Представитель = ФИО.Фамилия + " " + ФИО.Имя + " " + ФИО.Отчество; 
			
			Представление = Представитель
				+ Символы.ПС
				+ "ИНН: " + Доверит.ФЛДовер.ИННФЛ + " "
				+ "СНИЛС: " + Доверит.ФЛДовер.СНИЛС;
		КонецЕсли;
	КонецЕсли;
	
	ПередовXDTO = РаботаСФайламиБЭД.ЗначениеСвойстваXDTO(ОбъектXDTO.Документ, "Передов", Неопределено);
	Если ПередовXDTO <> Неопределено Тогда
		
		СвПереДоверXDTO = РаботаСФайламиБЭД.ЗначениеСвойстваXDTO(ПередовXDTO, "СвПереДовер", , , Истина)[0];
		
		ДатаВыдачиБезВремени = Лев(СвПереДоверXDTO.ДатаВыдДовер, СтрНайти(СвПереДоверXDTO.СрокДейст, " ") - 1);
		ДатаОкончанияБезВремени = Лев(СвПереДоверXDTO.СрокДейст, СтрНайти(СвПереДоверXDTO.СрокДейст, " ") - 1);

		СрокДействия = ДатаВыдачиБезВремени + " - " + ДатаОкончанияБезВремени;
		
		ПередПолн = ПередовXDTO.СвПередПолн[0].ПередПолн;
		
		Если ПередПолн.РосОргПерПолн <> Неопределено Тогда
			Представление = 
				ПередПолн.РосОргПерПолн.СвРосОрг.НаимОрг 
				+ Символы.ПС 
				+  "ИНН: " + ПередПолн.РосОргПерПолн.СвРосОрг.ИННЮЛ + " "
				+  "КПП: " + ПередПолн.РосОргПерПолн.СвРосОрг.КПП;
		КонецЕсли;
		Если ПередПолн.ИнПерПолн <> Неопределено Тогда
			Представление =
				ПередПолн.ИнПерПолн.СвИнОрг.НаимОрг
				+ Символы.ПС
				+ "ИНН: " + ПередПолн.ИнПерПолн.СвИнОрг.ИННЮЛ + " "
				+ "КПП: " + ПередПолн.ИнПерПолн.СвИнОрг.КПП;
		КонецЕсли;
		Если ПередПолн.ФилПерПолн <> Неопределено Тогда
			Представление =
				ПередПолн.ФилПерПолн.СвФил.НаимОрг
				+ Символы.ПС
				+ "ИНН: " + ПередПолн.ФилПерПолн.СвФил.ИННЮЛ + " "
				+ "КПП: " + ПередПолн.ФилПерПолн.СвФил.КПП;
		КонецЕсли;
		Если ПередПолн.ИППерПолн <> Неопределено Тогда
			ФИО = ПередПолн.ИППерПолн.СведФЛ.ФИО;
			Представитель = ФИО.Фамилия + " " + ФИО.Имя + " " + ФИО.Отчество; 
			
			Представление = Представитель
				+ Символы.ПС
				+ "ИНН: " + ПередПолн.ИППерПолн.ИННФЛ + " "
				+ "СНИЛС: " + ПередПолн.ИППерПолн.СНИЛС + " "
				+ "ОГРНИП: " + ПередПолн.ИППерПолн.ОГРНИП;
		КонецЕсли;
		Если ПередПолн.ФЛПерПолн <> Неопределено Тогда
			ФИО = ПередПолн.ФЛПерПолн.СведФЛ.ФИО;
			Представитель = ФИО.Фамилия + " " + ФИО.Имя + " " + ФИО.Отчество; 
			
			Представление = Представитель
				+ Символы.ПС
				+ "ИНН: " + ПередПолн.ФЛПерПолн.ИННФЛ + " "
				+ "СНИЛС: " + ПередПолн.ФЛПерПолн.СНИЛС;
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокаДерева.СрокДействия = СтрШаблон(НСтр("ru='%1'"), СрокДействия);
	СтрокаДерева.Представление = СтрШаблон(НСтр("ru = '%1'"), Представление);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначения(Значение, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Значение) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	ДополнительныеПараметры.ДанныеСтроки.НачальноеЗначение = Значение.НачальноеЗначение;
	ДополнительныеПараметры.ДанныеСтроки.КонечноеЗначение = Значение.КонечноеЗначение;
	СформироватьПредставлениеДанныхПоСтрокеДерева(ДополнительныеПараметры.ДанныеСтроки.ПолучитьИдентификатор());
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтозватьЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат.СтатусТранзакции) Тогда
		ТекстСообщения = НСтр("ru='Доверенность отозвана.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);		
		УправлениеФормой();
	КонецЕсли;
	Прочитать();

КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеДанныхПоСтрокеДерева(ИдентификаторЭлемента)
	
	СтрокаДерева = ДеревоОтбора.НайтиПоИдентификатору(ИдентификаторЭлемента);
	СтрокаДерева.Данные = Справочники.ПравилаПроверкиПолномочийМЧД.ПредставлениеДанных(СтрокаДерева);
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()
	
	Элементы.ДеревоЦепочкиПередоверия.Видимость = ЕстьЦепочкаПередоверия;
	Элементы.ДекорацияПередоверияНет.Видимость = Не ЕстьЦепочкаПередоверия;
	
	Элементы.ГруппаПроверкаПолномочий.Видимость = 
		МашиночитаемыеДоверенностиКлиентСервер.ДоступнаИнтерактивнаяНастройкаПравилПроверки(
			Объект, ПолномочияОграничены);

	Элементы.ФормаОтозвать.Видимость = ЗначениеЗаполнено(Объект.СтатусВРеестреФНС) И (Объект.СтатусВРеестреФНС
		= ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Зарегистрировано")
		Или Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ДатаНачалаДействияНеНаступила")
		Или Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаОтзыва"));
	
	ВидимостьКомандВыгрузки = Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОтправленоЗаявлениеНаОтзыв")
		Или Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отозвано");
	Элементы.ФормаВыгрузитьЗаявлениеНаОтмену.Видимость = ВидимостьКомандВыгрузки;
	Элементы.ФормаВыгрузитьПодписьЗаявленияНаОтмену.Видимость = ВидимостьКомандВыгрузки;

	Элементы.ФормаОбновитьСтатусИзРеестраФНС.Видимость = ЗначениеЗаполнено(Объект.СтатусВРеестреФНС);
	Элементы.ГруппаПроверенаВручную.Видимость = ПроверенаВручную;
	Если ПроверенаВручную Тогда
		Элементы.ДекорацияПроверенаВручную.Заголовок = Объект.ТекстОшибкиПроверкиМЧД;
	КонецЕсли;
	
	ДатаОтзыва = Объект.ДатаПрекращения;
	Отозвана = МашиночитаемыеДоверенностиКлиентСервер.ДоверенностьОтозвана(Объект);
	
	ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, 
		Объект.Подписана, Объект.Верна, Отозвана, ДатаОтзыва, Объект.СтатусВРеестреФНС);
	
	Элементы.ФормаПометитьВерной.Видимость = Не Объект.Верна Или ПроверенаВручную;
	
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ОтобразитьВариантПроверки(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличныйДокументМЧД()
	
	XMLфайлМЧД = МашиночитаемыеДоверенности.ПолныеДанныеДоверенностиНаСервереМЧД(Объект.Ссылка);
	РезультатФормирования = МашиночитаемыеДоверенности.ТабличныйДокументМЧД(XMLфайлМЧД);
	
	ПолеПросмотра = РезультатФормирования.ПредставлениеДокумента;
		
КонецПроцедуры

// Возвращает сведения о статусе МЧД в реестре ФНС.
// См. МашиночитаемыеДоверенностиКлиентСервер.РезультатПроверкиВРеестреФНС
//
// Возвращаемое значение:
//  См. ДлительныеОперации.ВыполнитьФункцию.
//
&НаСервере
Функция НачатьОбновлениеСтатусаИзРеестраФНС()
	
	ДанныеДоверенности = МашиночитаемыеДоверенностиКлиентСервер.ДанныеДляПроверкиВРеестреФНС();
	ДанныеДоверенности.НомерДоверенности = Объект.НомерДоверенности;
	ДанныеДоверенности.СтатусВРеестреФНС = Объект.СтатусВРеестреФНС;
	ДанныеДоверенности.ИдентификаторТранзакции = Объект.ИдентификаторТранзакции;
	ДанныеДоверенности.ДоверительЮЛ_ИНН = Объект.Доверители[0].ИНН;
	ДанныеДоверенности.ДатаОтзыва = Объект.ДатаПрекращения;
		
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию
		(ПараметрыВыполнения, "МашиночитаемыеДоверенности.ОбновитьСтатусМЧДИзРеестраФНС", ДанныеДоверенности);
	
КонецФункции

// Вызывается после выполнения процедуры, получающей статус МЧД в реестре ФНС.
//
// Параметры:
//  Результат - См. ДлительныеОперации.ВыполнитьФункцию.
//  ДополнительныеПараметры - Произвольный
//
&НаКлиенте
Процедура ПриЗавершенииОбновленияСтатусаВРеестреФНС(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ЗаписатьСтатусИзРеестраФНС(Результат) Тогда
		УправлениеФормой();
	КонецЕсли;
	УправлениеФормой();
	УстановитьДоступностьЭлементов();

КонецПроцедуры

&НаСервере
Функция ЗаписатьСтатусИзРеестраФНС(Результат)
	Если Результат.Статус = "Ошибка" Тогда
		Операция = НСтр("ru = 'Обновление статуса МЧД из реестра ФНС.'");
		Подсистема = ОбщегоНазначенияБЭДКлиентСервер.ПодсистемыБЭД().ОбменСКонтрагентами;
		ПодробныйТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ТекстОшибкиДляПользователя = НСтр("ru = 'Ошибка при обновлении статуса МЧД из реестра ФНС.'") + Символы.ПС
			+ НСтр("ru ='Подробности см. в журнале регистрации.'");
		ОбработкаНеисправностейБЭДВызовСервера.ОбработатьОшибку(
			Операция, Подсистема, ПодробныйТекстОшибки, ТекстОшибкиДляПользователя, Объект.Ссылка);
		Возврат Ложь;
	КонецЕсли;

	Настройки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата); // См. МашиночитаемыеДоверенностиКлиентСервер.РезультатПроверкиВРеестреФНС
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);

	Если Настройки.СтраницаНеНайдена Тогда
		ТекстСообщения = НСтр("ru='Не удалось установить связь с сервером ФНС. Повторите попытку позже.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект.Ссылка);
		Возврат Ложь;
	КонецЕсли;

	Если ЗначениеЗаполнено(Настройки.СтатусВРеестреФНС) Тогда
		Объект.СтатусВРеестреФНС = Настройки.СтатусВРеестреФНС;
		Объект.ДатаОбновленияСтатуса = ТекущаяДатаСеанса();
		Если Настройки.СтатусВРеестреФНС = 
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отозвано") Тогда
				Объект.ДатаПрекращения = Настройки.ДатаОтзыва;
		КонецЕсли;
	КонецЕсли;

	Если Не Записать() Тогда
		ТекстСообщения = НСтр("ru='Не удалось записать элемент справочника.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект.Ссылка);
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура УбратьПометкуВернаЗавершение(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда

		Объект.Верна = Ложь;
		Объект.ТекстОшибкиПроверкиМЧД = "";
		Модифицированность = Истина;
		ПроверенаВручную = Ложь;
		
		УправлениеФормой();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеРучнойПроверкиНаФорме()
	Если Объект.Верна И СтрНайти(Объект.ТекстОшибкиПроверкиМЧД, НСтр("ru='Проверена вручную:'")) Тогда
		ПроверенаВручную = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЗначенияРеквизитов(ИменаРеквизитов)
	
	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	Возврат ЗначенияРеквизитовОбъекта(Объект.Ссылка, ИменаРеквизитов);
	
КонецФункции  

&НаСервереБезКонтекста
Функция ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитов)
	
	Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитов);
	
	Для каждого КлючИЗначение Из Результат Цикл
		Если ТипЗнч(КлючИЗначение.Значение) = Тип("ХранилищеЗначения") Тогда 
			Результат[КлючИЗначение.Ключ] = АдресВоВременномХранилище(КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЭлектронныеПодписиЗаявленияНаОтзыв(СсылкаНаОбъект) 
	
	ЭлектронныеПодписиЗаявленияНаОтзыв = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	МЧД003ПодписиЗаявленияНаОтзыв.Подпись КАК Подпись
		|ИЗ
		|	Справочник.МЧД003.ПодписиЗаявленияНаОтзыв КАК МЧД003ПодписиЗаявленияНаОтзыв
		|ГДЕ
		|	МЧД003ПодписиЗаявленияНаОтзыв.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ЭлектронныеПодписиЗаявленияНаОтзыв.Добавить(АдресВоВременномХранилище(ВыборкаДетальныеЗаписи.Подпись));
		
	КонецЦикла;
	
	Возврат ЭлектронныеПодписиЗаявленияНаОтзыв;
	
КонецФункции

&НаСервереБезКонтекста
Функция АдресВоВременномХранилище(Значение)
	
	ДанныеЗначения = Значение.Получить();
	Если ДанныеЗначения = Неопределено Тогда
		АдресЗначения = Неопределено;
	Иначе
		АдресЗначения = ПоместитьВоВременноеХранилище(ДанныеЗначения, Новый УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат АдресЗначения; 
КонецФункции

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	Элементы.ФормаПередоверить.Видимость = МашиночитаемыеДоверенности.ПередовериеРазрешено(Объект);

КонецПроцедуры

#КонецОбласти