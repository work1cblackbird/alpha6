///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Скидки и маркетинговые программы"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	ОбновитьИнформациюОбАктивности();

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		УправлениеДиалогомНаСервере();
		
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ПакетДокументов");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ИспользуютсяВместе");
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ПараметрыДействия = Новый Структура;

	Если ИмяСобытия = "Обновить_ИнформацияОбАктивности" И Параметр = Объект.Ссылка ТОгда
		ОбновитьИнформациюОбАктивности();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// установим наименование в заголовок, так как с типом объекта слишком длинное
	Заголовок = Объект.Наименование;
	
	ОбновитьГруппуСовместногоИспользования();
	
	ОбновитьИнформациюОбАвторе();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("СкидкиАвтомобилей");
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ИспользуютсяВместе", ИспользуютсяВместе.Выгрузить());
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// установим наименование в заголовок, так как с типом объекта слишком длинное
	Заголовок = Объект.Наименование;
	
	ОбновитьГруппуСовместногоИспользования();
	ОбновитьИнформациюОбАвторе();
		
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// оповестим об изменении списки
	Для Каждого Строка Из ИспользуютсяВместе Цикл
		ОповеститьОбИзменении(Строка.Скидка);
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
		
	Для Каждого Строка Из ИспользуютсяВместе Цикл
		
		Если НЕ Строка.Скидка.Пустая() И Строка.Скидка = Объект.Ссылка Тогда
			
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"ИспользуютсяВместе", 
				ИспользуютсяВместе.Индекс(Строка) + 1,
				"Скидка"
			);
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Элемент <%1> ссылается сам на себя.'"),Строка.Скидка),
				,
				ПутьКТабличнойЧасти,
				,
				Отказ
			);
			
		КонецЕсли;
		
	КонецЦикла;
	
	КопияИспользуютсяВместе = ИспользуютсяВместе.Выгрузить();
	КопияИспользуютсяВместе.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	КопияИспользуютсяВместе.ЗаполнитьЗначения(1, "Количество");
	КопияИспользуютсяВместе.Свернуть("Скидка", "Количество");
	КопияИспользуютсяВместе.Сортировать("Количество УБЫВ");
	
	НеУникальныеСкидки = Новый Массив;
	Для Каждого Строка Из КопияИспользуютсяВместе Цикл
		Если Строка.Количество > 1 Тогда
			НеУникальныеСкидки.Добавить(Строка.Скидка);
		КонецЕсли;
		
		Прервать;
	КонецЦикла;
	
	Если НеУникальныеСкидки.Количество() > 0 Тогда
		
		Для Каждого Элемент Из НеУникальныеСкидки Цикл
			
			// попробуем получить номер строки
			НомерСтроки = 0;
			РезультатПоска = ИспользуютсяВместе.НайтиСтроки(Новый Структура("Скидка", Элемент));
			Если РезультатПоска.Количество() > 0 Тогда
				НомерСтроки = ИспользуютсяВместе.Индекс(РезультатПоска[0]) + 1;
			КонецЕсли;
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ИспользуютсяВместе", НомерСтроки, "Скидка");
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Элемент <%1> не уникален.'"), Элемент),
				,
				ПутьКТабличнойЧасти,
				,
				Отказ	
			);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПоМоделиИКомплектацииПриИзменении(Элемент)
	
	ОбновитьНаименование();
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоМаркетинговаяПрограммаПриИзменении(Элемент)
	
	ОбновитьНаименование();
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ОбновитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерВыгодыПриИзменении(Элемент)
	
	ОбновитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	ОбновитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	
	ОбновитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура КомплектацияПриИзменении(Элемент)
	
	ОбновитьНаименование();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИспользуютсяВместе

&НаКлиенте
Процедура ИспользуютсяВместеСкидкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму(
		"Справочник.СкидкиАвтомобилей.ФормаВыбора",
		Новый Структура("РежимВыбора,НеОтображать", Истина, Объект.Ссылка),
		Элемент,
		УникальныйИдентификатор,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияОбАктивностиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "установить" ИЛИ НавигационнаяСсылка = "изменить" Тогда
		Если Объект.Ссылка.Пустая() Тогда
			Кнопки = Новый СписокЗначений();
			Кнопки.Добавить("Записать", НСтр("ru = 'Записать'"));
			Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
			
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"Подключаемый_ОбработкаРезультатаОповещения",
				ЭтотОбъект,
				"Статус:" + НавигационнаяСсылка
			);
			
			ПоказатьВопрос(
				ОписаниеОповещения,
				СтрШаблон(
					НСтр("ru = 'Для %1 статуса действия скидка\маркетинговая программа должна быть записана.'"),
					?(НавигационнаяСсылка = "установить", "установки", "изменения")
				),
				Кнопки,
				,
				"Записать",
				НСтр("ru = 'Скидка\маркетинговая программа не записана'")
			);
		Иначе
			ОткрытьФормуДействияСкидки(НавигационнаяСсылка = "установить");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПредставлениеРеквизитовОбъекта(Знач Объект, Реквизиты)
	Представления = Новый Структура;
	
	Для Каждого Реквизит Из Реквизиты Цикл
		Представления.Вставить(Реквизит, Строка(Объект[Реквизит]));
	КонецЦикла;
	
	Возврат Представления;
КонецФункции

&НаКлиенте
Процедура ОбновитьНаименование()
	
	// получим необхлдимые данные с сервера
	РеквизитыДляПредставления = Новый Массив;
	РеквизитыДляПредставления.Добавить("Валюта");
	
	Если Объект.ЭтоМаркетинговаяПрограмма Тогда
		РеквизитыДляПредставления.Добавить("Контрагент");
	КонецЕсли;
	
	Если Объект.ОтборПоМоделиИКомплектации > 0 Тогда
		РеквизитыДляПредставления.Добавить("Модель");
	КонецЕсли;
	
	Если Объект.ОтборПоМоделиИКомплектации > 1 Тогда
		РеквизитыДляПредставления.Добавить("Комплектация");
	КонецЕсли;
	
	ПредставленияРеквизитов = ПредставлениеРеквизитовОбъекта(Объект, РеквизитыДляПредставления);
	
	// составляем наименование
	ЭлементыНаименования = Новый Массив;
	ЭлементыНаименования.Добавить(?(Объект.ЭтоМаркетинговаяПрограмма, "Маркетинговая программа", "Скидка") + ":");
	ЭлементыНаименования.Добавить(СтрШаблон("%1 %2", Объект.Значение, ПредставленияРеквизитов.Валюта));
	
	Если Объект.ОтборПоМоделиИКомплектации = 0 Тогда
		ЭлементыНаименования.Добавить("на любую модель");
	ИначеЕсли Объект.ОтборПоМоделиИКомплектации = 1 Тогда
		ЭлементыНаименования.Добавить(СтрШаблон("на модель <%1>", ПредставленияРеквизитов.Модель));
	ИначеЕсли Объект.ОтборПоМоделиИКомплектации = 2 Тогда
		ЭлементыНаименования.Добавить(
			СтрШаблон("на комплектацию <%2> модели <%1>", ПредставленияРеквизитов.Модель, ПредставленияРеквизитов.Комплектация)
		);
	КонецЕсли;
	
	Если Объект.ЭтоМаркетинговаяПрограмма И НЕ Объект.Контрагент.Пустая() Тогда
		ЭлементыНаименования.Добавить("от " + ПредставленияРеквизитов.Контрагент);
	КонецЕсли;
	
	Объект.Наименование = СтрСоединить(ЭлементыНаименования, " ");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьГруппуСовместногоИспользования()
	
	ИспользуютсяВместе.Очистить();
	
	Группа = СкидкиИМаркетинговыеПрограммы.ГруппаСовместногоИспользованияСкидки(Объект.Ссылка);
	Если Группа <> Неопределено Тогда
		Для Каждого Элемент Из Группа Цикл
			Строка = ИспользуютсяВместе.Добавить();
			Строка.Скидка = Элемент;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюОбАктивности()
	
	Если Объект.Ссылка.Пустая() Тогда
		РазмерОблости = 0;
	Иначе
		РазмерОблости = СкидкиИМаркетинговыеПрограммы.ОбластьДействияСкидки(Объект.Ссылка).Количество();
	КонецЕсли;
	
	Если РазмерОблости = 0 Тогда
		ТекстПредставления  = Новый ФорматированнаяСтрока("Не действует.",, ЦветаСтиля.ЗапрещенноеПравоДоступаЦвет);
		НавигационнаяСсылка = "Установить";
	Иначе
		НавигационнаяСсылка = "Изменить";
		
		ТекстПредставления = "Действует в %1 подразделени%2.";
		ОстатокОтДеления = РазмерОблости%10;
		ЦелаяЧасть = Цел(РазмерОблости/10);
		
		Если ОстатокОтДеления = 1 И ЦелаяЧасть <> 10 Тогда
			ТекстПредставления = СтрШаблон(ТекстПредставления, РазмерОблости, "и");
		Иначе
			ТекстПредставления = СтрШаблон(ТекстПредставления, РазмерОблости, "ях");
		КонецЕсли;
	КонецЕсли;

	Ссылка = "";
	Если ПравоДоступа("Редактирование", Метаданные.Справочники.СкидкиАвтомобилей) Тогда
		
		Ссылка = Новый ФорматированнаяСтрока(
		НавигационнаяСсылка,
		,
		ЦветаСтиля.ТекстИнформационнойНадписи,
		,
		НРег(НавигационнаяСсылка)
		);
		
	КонецЕсли;
	
	ИнформацияОбАктивности = Новый ФорматированнаяСтрока(ТекстПредставления, " ", Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуДействияСкидки(ОтобразитьВсе=Истина)
	
	ОткрытьФорму(
		"Справочник.СкидкиАвтомобилей.Форма.ФормаДействияСкидки",
		Новый Структура("Скидка,ОтобразитьВсе", Объект.Ссылка, ОтобразитьВсе),
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтотОбъект, "ИзменениеСтатусаДействия"),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюОбАвторе()
	
	Ссылка = ПолучитьНавигационнуюСсылку(Объект.Автор);
	ИнформацияОбАвторе = Новый ФорматированнаяСтрока(
		"Автор: ",
		Новый ФорматированнаяСтрока(Строка(Объект.Автор),, ЦветаСтиля.ТекстИнформационнойНадписи,, Ссылка),
		", создано: ",
		Формат(Объект.ДатаСоздания, "ДФ=dd.MM.yyyy")
	);
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Элементы.Модель.Видимость = (Объект.ОтборПоМоделиИКомплектации > 0);
	Элементы.Комплектация.Видимость = (Объект.ОтборПоМоделиИКомплектации > 1);
	
	Элементы.Контрагент.Видимость = Объект.ЭтоМаркетинговаяПрограмма;
	Элементы.ИнформацияОбОбеспечении.Видимость = НЕ Объект.ЭтоМаркетинговаяПрограмма;
	Элементы.Документы.Видимость = Объект.ЭтоМаркетинговаяПрограмма;
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = "Записать" И СтрНачинаетсяС(ДополнительныеПараметры, "Статус:") Тогда
		Если Записать() Тогда
			ОткрытьФормуДействияСкидки(СтрЗаканчиваетсяНа(ДополнительныеПараметры, "установить"));
		КонецЕсли;
	
	КонецЕсли;
		
КонецПроцедуры

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
//@skip-warning
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

#КонецОбласти

#КонецОбласти

