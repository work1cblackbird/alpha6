
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Статус", Статус) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не указан устанавливаемый статус.'"),,,, Отказ);
	КонецЕсли;
	
	Если Параметры.Свойство("Начало") Тогда
		Начало = Параметры.Начало;
	КонецЕсли;
	
	Если Начало = Дата(1, 1, 1) Тогда
		Начало = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Параметры.Свойство("Источник") Тогда
		Если ТипЗнч(Параметры.Источник) = Тип("Массив") Тогда
			Для Каждого Элемент Из Параметры.Источник Цикл
				НовыйИсточник = Источники.Добавить();
				НовыйИсточник.Источник = Элемент;
			КонецЦикла;
		Иначе
			НовыйИсточник = Источники.Добавить();
			НовыйИсточник.Источник = Параметры.Источник;
		КонецЕсли;
	Иначе
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не указаны подразделения компании для которых требуется установить статус.'"),
			,
			,
			,
			Отказ
		);
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("Скидка", Скидка) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не указана скидка (маркетинговая программа) для которой требуется установить статус.'"),
			,
			,
			,
			Отказ
		);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		НачальноеЗаполнениеФормы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантВыбораДатыОкончанияВручнуюПриИзменении(Элемент)
	
	ВариантВыбораДатыОкончанияПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	Ошибки = Новый Массив;
	
	ОчиститьСообщения();
	
	Если НЕ ЗначениеЗаполнено(Начало) Тогда
		Ошибки.Добавить(НСтр("ru = 'Не указана дата начала'"));
	КонецЕсли;
	
	Если Статус И ВариантВыбораДатыОкончания = 0 Тогда
		Если НЕ ЗначениеЗаполнено(Конец) Тогда
			Ошибки.Добавить(НСтр("ru = 'Не указана дата окончания'"));
		ИначеЕсли Конец < Начало Тогда
			Ошибки.Добавить(НСтр("ru = 'Дата окончания меньше даты начала'"));
		ИначеЕсли ЗначениеЗаполнено(МаксимальнаяДатаНовогоСтатуса) И Конец > МаксимальнаяДатаНовогоСтатуса Тогда
			Ошибки.Добавить(
				СтрШаблон(
					НСтр("ru = 'Дата окончания действия статуса не может быть позже %1'"),
					Формат(МаксимальнаяДатаНовогоСтатуса, "ДЛФ=DD")
				)
			);
		КонецЕсли;
	КонецЕсли;
	
	Если Ошибки.Количество() > 0 Тогда
		Сообщение = СтрШаблон(
			"Не удалось выполнить назначение статуса:
			|    %1",
			СтрСоединить(Ошибки, Символы.ПС + "    ")
		);
		ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение);
		
		Возврат;
	КонецЕсли;
	
	ЗаписатьИзмененияСтатусаНаСервере();
	
	Для Каждого Источник Из Источники Цикл
		ОповеститьОбИзменении(Источник.Источник);
	КонецЦикла;
	
	ОповеститьОбИзменении(Скидка);
	
	Оповестить("Обновить_ИнформацияОбАктивности", Скидка, ЭтотОбъект);
	
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НачальноеЗаполнениеФормы()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ДействиеСкидокАвтомобилей.Период) КАК Период
	|ИЗ
	|	РегистрСведений.ДействиеСкидокАвтомобилей КАК ДействиеСкидокАвтомобилей
	|ГДЕ
	|	ДействиеСкидокАвтомобилей.Скидка = &Скидка
	|	И ДействиеСкидокАвтомобилей.Источник В(&Источники)
	|	И ДействиеСкидокАвтомобилей.Период > &Начало");
	Запрос.УстановитьПараметр("Скидка", Скидка);
	Запрос.УстановитьПараметр("Источники", Источники.Выгрузить().ВыгрузитьКолонку("Источник"));
	Запрос.УстановитьПараметр("Начало", Начало);
	
	ВыборкаПериодов = Запрос.Выполнить().Выбрать();
	Если ВыборкаПериодов.Следующий() И ЗначениеЗаполнено(ВыборкаПериодов.Период) Тогда
		МаксимальнаяДатаНовогоСтатуса = ВыборкаПериодов.Период;
	КонецЕсли;
	
	ВариантВыбораДатыОкончания = 1;
	ВариантВыбораДатыОкончанияПриИзменении(ЭтотОбъект);
	
	Элементы.КонецПериода.Видимость = Статус;
	
	Если Статус И НЕ ЗначениеЗаполнено(МаксимальнаяДатаНовогоСтатуса) Тогда
		Элементы.МаксимальнаяДатаНовогоСтатуса.Видимость = Ложь;
		Элементы.ВариантВыбораДатыОкончанияАвтоматически.СписокВыбора[0].Представление = "Бессрочно";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВариантВыбораДатыОкончанияПриИзменении(Форма)
	
	Форма.Элементы.Конец.Доступность = НЕ Форма.ВариантВыбораДатыОкончания;
	Форма.Элементы.Конец.АвтоОтметкаНезаполненного = НЕ Форма.ВариантВыбораДатыОкончания;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияСтатусаНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка 	
		ДатаОкончанияДействия = Неопределено;
		Если НЕ ВариантВыбораДатыОкончания И ЗначениеЗаполнено(Конец) Тогда
			ДатаОкончанияДействия = Конец;
		ИначеЕсли ВариантВыбораДатыОкончания И ЗначениеЗаполнено(МаксимальнаяДатаНовогоСтатуса) Тогда
			ДатаОкончанияДействия = МаксимальнаяДатаНовогоСтатуса;
		КонецЕсли;
		
		Для Каждого Источник Из Источники Цикл
			Менеджер = РегистрыСведений.ДействиеСкидокАвтомобилей.СоздатьМенеджерЗаписи();
			Менеджер.Период = Начало;
			Менеджер.Источник = Источник.Источник;
			Менеджер.Скидка = Скидка;
			Менеджер.Действует = Статус;
			Менеджер.Автор = Пользователи.ТекущийПользователь();
			Менеджер.ПричинаОтмены = Комментарий;
			Менеджер.Записать(Истина);
			
			Если Статус И ДатаОкончанияДействия <> Неопределено Тогда
				Менеджер = РегистрыСведений.ДействиеСкидокАвтомобилей.СоздатьМенеджерЗаписи();
				Менеджер.Период = ДатаОкончанияДействия;
				Менеджер.Источник = Источник.Источник;
				Менеджер.Скидка = Скидка;
				Менеджер.Действует = Ложь;
				Менеджер.Автор = Пользователи.ТекущийПользователь();
				Менеджер.ПричинаОтмены = Комментарий;
				Менеджер.Записать(Истина);
			КонецЕсли;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();      
	КонецПопытки;

КонецПроцедуры

#КонецОбласти