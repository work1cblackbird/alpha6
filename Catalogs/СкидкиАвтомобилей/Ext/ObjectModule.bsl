// Модуль объекта справочника "Скидки автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбработчикиСобытий

// Обработчик события объекта возникает в момент, когда выполняется установка нового номера.
//
// Параметры:
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//  Префикс              - Строка - Префикс, который будет использоваться для генерации номера.
//
Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	
	// Вызываем общий обработчик события
	ПрефиксацияОбъектов.ПриУстановкеНовогоКода(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	
КонецПроцедуры // ПриУстановкеНовогоКода()

// Обработчик события заполнения объекта как при создании нового, так и при вводе на основании существующего.
//
// Параметры:
//  ДанныеЗаполнения     - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения      - Строка       - Текст, используемый для формирования наименования/кода нового элемента.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		Валюта = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

// Обработчик события заполнения объекта копированием.
//
// Параметры:
//  ОбъектКопирования - СправочникОбъект - Исходный объект, который является источником копирования.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

// Обработчик события возникающего при необходимости проверки заполнения реквизитов при записи объекта.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Обработчик события возникающего после начала транзакции записи, но до начала записи объекта.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередЗаписью(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПередЗаписью(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	Если Автор.Пустая() Тогда
		Автор = Пользователи.ТекущийПользователь();
		ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Обработчик события возникающего после записи объекта в базу данных, но до окончания транзакции записи.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПриЗаписи(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПриЗаписи(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ИспользуютсяВместе") Тогда
		Отказ = Отказ ИЛИ ОбновитьГруппыСовместногоИспользования(ДополнительныеСвойства.ИспользуютсяВместе);
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

// Обработчик события возникающего в транзакции удаления перед непосредственным удалением объекта из базы данных.
//
// Параметры:
//  Отказ - Булево - Признак отказа от совершения операции.
//
Процедура ПередУдалением(Отказ)
	
	// Вызываем общий обработчик события
	Если НЕ ОбработкаСобытийСправочникаСервер.ПередУдалением(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПередУдалением()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбновитьГруппыСовместногоИспользования(ИспользуютсяВместе)
	Отказ = Ложь;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Источник.Скидка КАК Скидка
	|ПОМЕСТИТЬ Т
	|ИЗ
	|	&Источник КАК Источник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ТекущаяСкидка КАК Скидка,
	|	Т.Скидка КАК СкидкаСовместная
	|ПОМЕСТИТЬ ДобавляемыеПозиции
	|ИЗ
	|	Т КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Скидка КАК Скидка,
	|	&ТекущаяСкидка КАК СкидкаСовместная
	|ПОМЕСТИТЬ ДобавляемыеПозицииСопутствующие
	|ИЗ
	|	Т КАК Т
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм.СкидкаСовместная,
	|	ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм.Скидка
	|ИЗ
	|	РегистрСведений.ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм КАК ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм
	|ГДЕ
	|	ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм.Скидка = &ТекущаяСкидка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм.Скидка КАК Скидка,
	|	ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм.СкидкаСовместная КАК СкидкаСовместная,
	|	ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм.Автор КАК Автор,
	|	ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм.ДатаИзменения КАК ДатаИзменения
	|ПОМЕСТИТЬ АктуальныеДанные
	|ИЗ
	|	РегистрСведений.ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм КАК ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм
	|ГДЕ
	|	(ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм.Скидка = &ТекущаяСкидка
	|			ИЛИ ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм.Скидка В
	|				(ВЫБРАТЬ
	|					ДобавляемыеПозицииСопутствующие.Скидка КАК Скидка
	|				ИЗ
	|					ДобавляемыеПозицииСопутствующие КАК ДобавляемыеПозицииСопутствующие))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДобавляемыеПозиции.Скидка КАК Скидка,
	|	ДобавляемыеПозиции.СкидкаСовместная КАК СкидкаСовместная,
	|	ЕСТЬNULL(АктуальныеДанные.Автор, &Автор) КАК Автор,
	|	ЕСТЬNULL(АктуальныеДанные.ДатаИзменения, &ДатаИзменения) КАК ДатаИзменения
	|ИЗ
	|	ДобавляемыеПозиции КАК ДобавляемыеПозиции
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктуальныеДанные КАК АктуальныеДанные
	|		ПО ДобавляемыеПозиции.Скидка = АктуальныеДанные.Скидка
	|			И ДобавляемыеПозиции.СкидкаСовместная = АктуальныеДанные.СкидкаСовместная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДобавляемыеПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДобавляемыеПозицииСопутствующие.Скидка КАК Скидка,
	|	ДобавляемыеПозицииСопутствующие.СкидкаСовместная КАК СкидкаСовместная
	|ПОМЕСТИТЬ ДанныеОбновленияЗаписей
	|ИЗ
	|	ДобавляемыеПозицииСопутствующие КАК ДобавляемыеПозицииСопутствующие
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	АктуальныеДанные.Скидка,
	|	АктуальныеДанные.СкидкаСовместная
	|ИЗ
	|	АктуальныеДанные КАК АктуальныеДанные
	|ГДЕ
	|	АктуальныеДанные.Скидка В
	|			(ВЫБРАТЬ
	|				ДобавляемыеПозицииСопутствующие.Скидка КАК Скидка
	|			ИЗ
	|				ДобавляемыеПозицииСопутствующие КАК ДобавляемыеПозицииСопутствующие)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДобавляемыеПозицииСопутствующие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОбновленияЗаписей.Скидка КАК Скидка,
	|	ДанныеОбновленияЗаписей.СкидкаСовместная КАК СкидкаСовместная,
	|	ЕСТЬNULL(АктуальныеДанные.Автор, &Автор) КАК Автор,
	|	ЕСТЬNULL(АктуальныеДанные.ДатаИзменения, &ДатаИзменения) КАК ДатаИзменения
	|ИЗ
	|	ДанныеОбновленияЗаписей КАК ДанныеОбновленияЗаписей
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктуальныеДанные КАК АктуальныеДанные
	|		ПО ДанныеОбновленияЗаписей.Скидка = АктуальныеДанные.Скидка
	|			И ДанныеОбновленияЗаписей.СкидкаСовместная = АктуальныеДанные.СкидкаСовместная
	|ИТОГИ ПО
	|	Скидка");
	
	Запрос.УстановитьПараметр("Источник", ИспользуютсяВместе);
	Запрос.УстановитьПараметр("ТекущаяСкидка", Ссылка);
	Запрос.УстановитьПараметр("Автор", Автор);
	Запрос.УстановитьПараметр("ДатаИзменения", ТекущаяДатаСеанса());
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ЗапросКТекущейСсылке = 5;
	ЗапросКСопутствующимДанным = РезультатыЗапроса.ВГраница();
	
	// запищем изменения текущей ссылки
	Если НЕ РезультатыЗапроса[ЗапросКТекущейСсылке].Пустой() Тогда
		ТаблицаДанных = РезультатыЗапроса[ЗапросКТекущейСсылке].Выгрузить();
		Отказ = РегистрыСведений.ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм
				.ЗаписатьГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм(Ссылка, ТаблицаДанных);
	КонецЕсли;
	
	ТаблицаГруппИспользованияСкидок = Новый ТаблицаЗначений;
	ТаблицаГруппИспользованияСкидок.Колонки.Добавить("Скидка",           Новый ОписаниеТипов("СправочникСсылка.СкидкиАвтомобилей"));
	ТаблицаГруппИспользованияСкидок.Колонки.Добавить("СкидкаСовместная", Новый ОписаниеТипов("СправочникСсылка.СкидкиАвтомобилей"));
	ТаблицаГруппИспользованияСкидок.Колонки.Добавить("Автор",            Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	ТаблицаГруппИспользованияСкидок.Колонки.Добавить("ДатаИзменения",    Новый ОписаниеТипов("Дата"));
	
	// запищем данные сопутствующийх ссылок
	Если НЕ РезультатыЗапроса[ЗапросКСопутствующимДанным].Пустой() Тогда
		Выборка = РезультатыЗапроса[ЗапросКСопутствующимДанным].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			
			Детали = Выборка.Выбрать();
			Пока Детали.Следующий() Цикл
				Если Детали.СкидкаСовместная = Ссылка
					И ИспользуютсяВместе.НайтиСтроки(Новый Структура("Скидка", Детали.Скидка)).Количество() = 0 Тогда
					
					Продолжить;
					
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(ТаблицаГруппИспользованияСкидок.Добавить(), Детали);
			КонецЦикла;
			
			Отказ = Отказ
				ИЛИ РегистрыСведений
					.ГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм
					.ЗаписатьГруппыСовместногоИспользованияСкидокИМаркетинговыхПрограмм(Выборка.Скидка, ТаблицаГруппИспользованияСкидок);
			ТаблицаГруппИспользованияСкидок.Очистить();
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

#КонецЕсли
