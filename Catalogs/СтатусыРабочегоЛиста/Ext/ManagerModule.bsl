// Модуль менеджера справочника "Статусы рабочего листа"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника Организации.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением.
//                                  Например:
//                                    Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                    ЭлементТЧ = Элемент.Ключи.Добавить();
//                                    ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных                  = "Создан";
	Элемент.Код                                        = "00000001";
	Элемент.Наименование                               = НСтр("ru = 'Создан'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ИспользоватьВРабочемЛисте                  = Истина;
	Элемент.ИспользоватьВРабочемЛистеОтделаСтрахования = Истина;
	Элемент.ИспользоватьВРабочемЛистеКредитногоОтдела  = Истина;
	Элемент.ВероятностьПродажи                         = 50;
	Элемент.ПорядокВОтчете                             = 1;
	Элемент.Цвет                                       = Новый ХранилищеЗначения(WebЦвета.Белый);
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных                  = "Отказ";
	Элемент.Код                                        = "00000005";
	Элемент.Наименование                               = НСтр("ru = 'Отказ'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ИспользоватьВРабочемЛисте                  = Истина;
	Элемент.ИспользоватьВРабочемЛистеОтделаСтрахования = Истина;
	Элемент.ИспользоватьВРабочемЛистеКредитногоОтдела  = Истина;
	Элемент.ВероятностьПродажи                         = 50;
	Элемент.ПорядокВОтчете                             = 0;
	Элемент.Цвет                                       = Новый ХранилищеЗначения(WebЦвета.БледноМиндальный);
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных                  = "Интерес";
	Элемент.Код                                        = "00000002";
	Элемент.Наименование                               = НСтр("ru = 'Интерес'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ИспользоватьВРабочемЛисте                  = Истина;
	Элемент.ИспользоватьВРабочемЛистеОтделаСтрахования = Ложь;
	Элемент.ИспользоватьВРабочемЛистеКредитногоОтдела  = Ложь;
	Элемент.ВероятностьПродажи                         = 50;
	Элемент.ПорядокВОтчете                             = 2;
	Элемент.Цвет                                       = Новый ХранилищеЗначения(WebЦвета.БледноМиндальный);
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных                  = "Продажа";
	Элемент.Код                                        = "00000003";
	Элемент.Наименование                               = НСтр("ru = 'Продажа'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ИспользоватьВРабочемЛисте                  = Истина;
	Элемент.ИспользоватьВРабочемЛистеОтделаСтрахования = Ложь;
	Элемент.ИспользоватьВРабочемЛистеКредитногоОтдела  = Ложь;
	Элемент.ВероятностьПродажи                         = 50;
	Элемент.ПорядокВОтчете                             = 3;
	Элемент.Цвет                                       = Новый ХранилищеЗначения(WebЦвета.ГолубойСоСтальнымОттенком);
 
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных                  = "Сделка";
	Элемент.Код                                        = "00000004";
	Элемент.Наименование                               = НСтр("ru = 'Сделка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ИспользоватьВРабочемЛисте                  = Истина;
	Элемент.ИспользоватьВРабочемЛистеОтделаСтрахования = Истина;
	Элемент.ИспользоватьВРабочемЛистеКредитногоОтдела  = Ложь;
	Элемент.ВероятностьПродажи                         = 50;
	Элемент.ПорядокВОтчете                             = 4;
	Элемент.Цвет                                       = Новый ХранилищеЗначения(WebЦвета.Розовый);
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных                  = "Подготовка";
	Элемент.Код                                        = "00000006";
	Элемент.Наименование                               = НСтр("ru = 'Подготовка'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ИспользоватьВРабочемЛисте                  = Ложь;
	Элемент.ИспользоватьВРабочемЛистеОтделаСтрахования = Истина;
	Элемент.ИспользоватьВРабочемЛистеКредитногоОтдела  = Истина;
	Элемент.ВероятностьПродажи                         = 50;
	Элемент.ПорядокВОтчете                             = 5;
	Элемент.Цвет                                       = Новый ХранилищеЗначения(WebЦвета.Древесный);
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных                  = "Рассмотрение";
	Элемент.Код                                        = "00000007";
	Элемент.Наименование                               = НСтр("ru = 'Рассмотрение'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ИспользоватьВРабочемЛисте                  = Ложь;
	Элемент.ИспользоватьВРабочемЛистеОтделаСтрахования = Ложь;
	Элемент.ИспользоватьВРабочемЛистеКредитногоОтдела  = Истина;
	Элемент.ВероятностьПродажи                         = 50;
	Элемент.ПорядокВОтчете                             = 6;
	Элемент.Цвет                                       = Новый ХранилищеЗначения(WebЦвета.Белый);
 
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных                  = "Одобрена";
	Элемент.Код                                        = "00000008";
	Элемент.Наименование                               = НСтр("ru = 'Одобрена'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ИспользоватьВРабочемЛисте                  = Ложь;
	Элемент.ИспользоватьВРабочемЛистеОтделаСтрахования = Ложь;
	Элемент.ИспользоватьВРабочемЛистеКредитногоОтдела  = Истина;
	Элемент.ВероятностьПродажи                         = 50;
	Элемент.ПорядокВОтчете                             = 7;
	Элемент.Цвет                                       = Новый ХранилищеЗначения(WebЦвета.ГолубойСоСтальнымОттенком); 

КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	ОбязательныеРеквизиты.Добавить("ВероятностьПродажи");
	ОбязательныеРеквизиты.Добавить("ШаблоныСобытий.ШаблонСобытия");

	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// 	 Настройки - Структура - настройки подсистемы. 
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

#КонецЕсли