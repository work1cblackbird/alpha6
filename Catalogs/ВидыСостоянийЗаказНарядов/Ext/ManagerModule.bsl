// Модуль менеджера справочника "Виды состояний заказ нарядов"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника Организации.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением.
//                                  Например:
//                                    Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                    ЭлементТЧ = Элемент.Ключи.Добавить();
//                                    ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "Заявка";
	Элемент.Код                           = "0000000001";
	Элемент.Наименование                  = НСтр("ru = 'Заявка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 200));
	Элемент.ИспользоватьВЗаказНаряде      = Истина;
	Элемент.ИспользоватьВЗаказеПокупателя = Истина;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 1;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "НачатьРаботу";
	Элемент.Код                           = "0000000002";
	Элемент.Наименование                  = НСтр("ru = 'Начать работу'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 200));
	Элемент.ИспользоватьВЗаказНаряде      = Истина;
	Элемент.ИспользоватьВЗаказеПокупателя = Ложь;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 2;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "ВРаботе";
	Элемент.Код                           = "0000000003";
	Элемент.Наименование                  = НСтр("ru = 'В работе'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(150, 255, 150));
	Элемент.ИспользоватьВЗаказНаряде      = Истина;
	Элемент.ИспользоватьВЗаказеПокупателя = Ложь;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 3;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "Выполнен";
	Элемент.Код                           = "0000000004";
	Элемент.Наименование                  = НСтр("ru = 'Выполнен'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(200, 200, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Истина;
	Элемент.ИспользоватьВЗаказеПокупателя = Ложь;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 4;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "Закрыт";
	Элемент.Код                           = "0000000005";
	Элемент.Наименование                  = НСтр("ru = 'Закрыт'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Истина;
	Элемент.ИспользоватьВЗаказеПокупателя = Ложь;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 5;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "ОпозданиеКлиента";
	Элемент.Код                           = "0000000006";
	Элемент.Наименование                  = НСтр("ru = 'Опоздание клиента'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 220, 220));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Ложь;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 6;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "ОпозданиеНачалаРабот";
	Элемент.Код                           = "0000000007";
	Элемент.Наименование                  = НСтр("ru = 'Опоздание начала работ'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 220, 220));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Ложь;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 7;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "ОпозданиеОкончанияРабот";
	Элемент.Код                           = "0000000008";
	Элемент.Наименование                  = НСтр("ru = 'Опоздание окончания работ'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 180, 180));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Ложь;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 8;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "Новый";
	Элемент.Код                           = "0000000009";
	Элемент.Наименование                  = НСтр("ru = 'Новый'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Истина;
	Элемент.ИспользоватьВЗаказеПоставщика = Истина;
	Элемент.РеквизитДопУпорядочивания     = 9;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "НеРазмещен";
	Элемент.Код                           = "0000000010";
	Элемент.Наименование                  = НСтр("ru = 'Не размещен'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Истина;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 10;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "Размещен";
	Элемент.Код                           = "0000000011";
	Элемент.Наименование                  = НСтр("ru = 'Размещен'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Истина;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 11;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "ГотовКОтгрузкеЧастично";
	Элемент.Код                           = "0000000012";
	Элемент.Наименование                  = НСтр("ru = 'Готов к отгрузке частично'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Истина;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 12;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "ГотовКОтгрузке";
	Элемент.Код                           = "0000000013";
	Элемент.Наименование                  = НСтр("ru = 'Готов к отгрузке'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Истина;
	Элемент.ИспользоватьВЗаказеПоставщика = Ложь;
	Элемент.РеквизитДопУпорядочивания     = 13;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "ОжидаетПоставки";
	Элемент.Код                           = "0000000014";
	Элемент.Наименование                  = НСтр("ru = 'Ожидает поставки'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Ложь;
	Элемент.ИспользоватьВЗаказеПоставщика = Истина;
	Элемент.РеквизитДопУпорядочивания     = 14;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "ЧастичноПолучен";
	Элемент.Код                           = "0000000015";
	Элемент.Наименование                  = НСтр("ru = 'Частично получен'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Ложь;
	Элемент.ИспользоватьВЗаказеПоставщика = Истина;
	Элемент.РеквизитДопУпорядочивания     = 15;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных     = "Закрыт";
	Элемент.Код                           = "0000000016";
	Элемент.Наименование                  = НСтр("ru = 'Закрыт'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.Цвет                          = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
	Элемент.ИспользоватьВЗаказНаряде      = Ложь;
	Элемент.ИспользоватьВЗаказеПокупателя = Истина;
	Элемент.ИспользоватьВЗаказеПоставщика = Истина;
	Элемент.РеквизитДопУпорядочивания     = 16;

КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности и уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции

#КонецОбласти

// Получает соответствие состояния заказ-наряда и цвета
//
// Возвращаемое значение:
//  Соответствие - соответствие состояния заказ-наряда и цвета 
//
Функция ЦветаСостоянийЗаказНаряда() Экспорт
	
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыСостоянийЗаказНарядов.Ссылка КАК Состояние,
	|	ВидыСостоянийЗаказНарядов.Цвет
	|ИЗ
	|	Справочник.ВидыСостоянийЗаказНарядов КАК ВидыСостоянийЗаказНарядов";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(Выборка.Состояние, Выборка.Цвет.Получить());
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти	

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИспользоватьВЗаказНаряде = ПолучитьЗначениеПараметраСтруктуры(Параметры.Отбор, "ИспользоватьВЗаказНаряде");
	ИспользоватьВЗаказеПокупателя = ПолучитьЗначениеПараметраСтруктуры(Параметры.Отбор, "ИспользоватьВЗаказеПокупателя");
	
	Отборы = Новый Массив;
	Если ИспользоватьВЗаказНаряде <> Неопределено Тогда
		Отборы.Добавить("И ВидыСостоянийЗаказНарядов.ИспользоватьВЗаказНаряде = &ИспользоватьВЗаказНаряде");
	КонецЕсли;
	
	Если ИспользоватьВЗаказеПокупателя <> Неопределено Тогда
		Отборы.Добавить("И ВидыСостоянийЗаказНарядов.ИспользоватьВЗаказеПокупателя = &ИспользоватьВЗаказеПокупателя");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ЗапросТекст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидыСостоянийЗаказНарядов.Ссылка,
	|	ВидыСостоянийЗаказНарядов.Наименование
	|ИЗ
	|	Справочник.ВидыСостоянийЗаказНарядов КАК ВидыСостоянийЗаказНарядов
	|ГДЕ
	|	ВидыСостоянийЗаказНарядов.ПометкаУдаления = ЛОЖЬ
	|	%1
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыСостоянийЗаказНарядов.РеквизитДопУпорядочивания";
	
	Запрос.Текст = СтрШаблон(ЗапросТекст, СтрСоединить(Отборы, " "));
	Запрос.УстановитьПараметр("ИспользоватьВЗаказНаряде", ИспользоватьВЗаказНаряде);
	Запрос.УстановитьПараметр("ИспользоватьВЗаказеПокупателя", ИспользоватьВЗаказеПокупателя);
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.Наименование);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
