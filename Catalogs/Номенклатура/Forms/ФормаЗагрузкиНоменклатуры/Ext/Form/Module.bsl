///////////////////////////////////////////////////////////////////////////////
// Модуль формы справочника "Номенклатура" "ФормаЗагрузкиНоменклатуры"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Получим номенклатуру 
	ПараметрыНоменклатуры = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Номенклатура");
	СозданиеНоменклатурыИзСписка = ПолучитьЗначениеПараметраСтруктуры(Параметры, "СозданиеНоменклатурыИзСписка", Ложь);
	
	СтруктураНоменклатуры = Новый Структура;
	
	Если ПараметрыНоменклатуры = Неопределено Тогда
		// Параметры номенклатуры не переданы - нет данных для создания/обновления номеклатуры
		ОбщегоНазначения.СообщитьПользователю(
			Нстр("ru = 'Не указаны параметры создания/обновления номенклатуры.'"), , , , Отказ
		);
		УправлениеДиалогомСервер.ПроверитьВозможностьОткрытияФормыОбъекта(ЭтотОбъект, Отказ);
		Возврат;
	ИначеЕсли ТипЗнч(ПараметрыНоменклатуры) = Тип("Структура") И НЕ ПараметрыНоменклатуры.Свойство("Ссылка") Тогда
		Артикул       = ПолучитьЗначениеПараметраСтруктуры(ПараметрыНоменклатуры, "Артикул");
		Производитель = ПолучитьЗначениеПараметраСтруктуры(ПараметрыНоменклатуры, "Производитель");
		Наименование  = ПолучитьЗначениеПараметраСтруктуры(ПараметрыНоменклатуры, "Наименование");
		
		// Установим визуализацию на форме
		Элементы.СоздатьНоменклатуру.АктивизироватьПоУмолчанию     = Истина;
		Элементы.ОбновитьНоменклатуру.Видимость                    = Ложь;
		Элементы.ТаблицаРеквизитовЗначениепоНоменклатуре.Видимость = Ложь;
		РежимЗагрузки = 1;
		
	Иначе
		
		Если ТипЗнч(ПараметрыНоменклатуры) = Тип("СправочникСсылка.Номенклатура") Тогда
			Номенклатура  = ПараметрыНоменклатуры;
			Артикул       = ПараметрыНоменклатуры.Артикул;
			Производитель = ПараметрыНоменклатуры.Производитель;
		ИначеЕсли ТипЗнч(ПараметрыНоменклатуры) = Тип("Структура") Тогда
			СтруктураНоменклатуры =ПараметрыНоменклатуры;
			Номенклатура  = СтруктураНоменклатуры.Ссылка;
			Артикул       = СтруктураНоменклатуры.Артикул;
			Производитель = СтруктураНоменклатуры.Производитель;
		КонецЕсли;
		
		// Установим визуализацию на форме
		Элементы.СоздатьНоменклатуру.Видимость                  = Ложь;
		Элементы.ОбновитьНоменклатуру.АктивизироватьПоУмолчанию = Истина;
		ЭтотОбъект.Заголовок                                    = НСтр("ru = 'Обновление номенклатуры из базового каталога'");
		УстановитьУсловноеОформление();
		РежимЗагрузки = 0;
		
	КонецЕсли;
	
	ЗагружаемыеРеквизиты = Новый ТаблицаЗначений;
	ЗагружаемыеРеквизиты.Колонки.Добавить("ПредставлениеРеквизита", Новый ОписаниеТипов("Строка"));
	ЗагружаемыеРеквизиты.Колонки.Добавить("ИмяРеквизита", Новый ОписаниеТипов("Строка"));
	
	ПрайсЛист = ПрайсЛистыКонтрагентов.ПолучитьБазовыйКаталогПроизводителя(Производитель);
	
	ДанныеРеквизитов = ПрайсЛистыКонтрагентов.СоздатьОбновитьНоменклатуру(Артикул, Производитель, ПрайсЛист);
	
	// Проверим наличие настройки загрузки
	Если ДанныеРеквизитов = Неопределено Тогда
		
		Если РежимЗагрузки = 0 И НЕ СозданиеНоменклатурыИзСписка Тогда
			// нечего обновлять
			ОбщегоНазначения.СообщитьПользователю(
				Нстр("ru = 'Не задана настройка загрузки номенклатуры из базового каталога.'"), , , , Отказ
			);
			УправлениеДиалогомСервер.ПроверитьВозможностьОткрытияФормыОбъекта(ЭтотОбъект, Отказ);
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	Сообщения = ПолучитьСообщенияПользователю();
	
	Для Каждого ТекущееСообщение Из Сообщения Цикл
		ТекстСообщения = ТекущееСообщение.Текст;
		СообщениеНовое = СтрЗаменить(ТекстСообщения, "Ячейка[R", "");
		ПодстрокаПоиска = СтрНайти(СообщениеНовое, "]");
		Если СтрНайти(ТекстСообщения, "Не найден") <> 0 Тогда
			СообщениеНовое = СтрЗаменить(СообщениеНовое, "Не найден", "Значение не найдено");
		КонецЕсли;
		ТекущееСообщение.Текст = "Реквизит " + Прав(СообщениеНовое, СтрДлина(СообщениеНовое) - ПодстрокаПоиска - 1);
	КонецЦикла;
	
	Для Каждого ТекущийРеквизит Из Метаданные.Справочники.Номенклатура.Реквизиты Цикл
		НоваяСтрока = ЗагружаемыеРеквизиты.Добавить();
		НоваяСтрока.ИмяРеквизита           = ТекущийРеквизит.Имя;
		НоваяСтрока.ПредставлениеРеквизита = ТекущийРеквизит.Представление();
	КонецЦикла;
	
	Для Каждого ТекущийРеквизит Из Метаданные.Справочники.Номенклатура.СтандартныеРеквизиты Цикл
		НоваяСтрока = ЗагружаемыеРеквизиты.Добавить();
		НоваяСтрока.ИмяРеквизита           = ТекущийРеквизит.Имя;
		НоваяСтрока.ПредставлениеРеквизита = ТекущийРеквизит.Представление();
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ДанныеОбъекта = Номенклатура;
	Иначе
		ДанныеОбъекта = СтруктураНоменклатуры; 	
	КонецЕсли;
	
	ОбязательныеРеквизиты = Справочники.Номенклатура.ПолучитьОбязательныеРеквизиты(ДанныеОбъекта);
	
	// Сформируем общие реквизиты номенклатуры
	МетаданныеИсточника = Метаданные.Справочники.Номенклатура;
	Для Каждого ТекущийРеквизит Из Метаданные.ОбщиеРеквизиты Цикл
		ЗначениеСостава = ТекущийРеквизит.Состав.Найти(МетаданныеИсточника);
		Если ЗначениеСостава=Неопределено ИЛИ (НЕ ЗначениеСостава.Использование=Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ЗагружаемыеРеквизиты.Добавить();
		НоваяСтрока.ИмяРеквизита           = ТекущийРеквизит.Имя;
		НоваяСтрока.ПредставлениеРеквизита = ТекущийРеквизит.Представление();
	КонецЦикла;
	
	СтруктураРеквизитовНоменклатуры = Новый Структура;
	
	// Заполним таблицу 
	Для Каждого ТекущаяСтрока Из ДанныеРеквизитов Цикл
		
		НайденныйРеквизит = ЗагружаемыеРеквизиты.Найти(ТекущаяСтрока.Ключ, "ИмяРеквизита");
		
		Если НайденныйРеквизит = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизитов.Добавить();
		НоваяСтрока.ИмяРеквизита         = ТекущаяСтрока.Ключ;
		Если НоваяСтрока.ИмяРеквизита = "Вес" Тогда
			НоваяСтрока.ЗначениеПоПрайсЛисту = ?(ПрайсЛист.КоэффициентПересчетаВеса = 1000, ТекущаяСтрока.Значение, Формат(Число( ТекущаяСтрока.Значение) / 1000, "ЧЦ=15; ЧДЦ=3"));
		Иначе
			НоваяСтрока.ЗначениеПоПрайсЛисту = ТекущаяСтрока.Значение;
		КонецЕсли;
		НоваяСтрока.Использование        = НЕ (ОбязательныеРеквизиты.Найти(НоваяСтрока.ИмяРеквизита) <> 0 И НЕ ЗначениеЗаполнено(НоваяСтрока.ЗначениеПоПрайсЛисту));
		НоваяСтрока.ПредставлениеРеквизита = НайденныйРеквизит.ПредставлениеРеквизита;
		
		СтруктураРеквизитовНоменклатуры.Вставить(НоваяСтрока.ИмяРеквизита);
	КонецЦикла;
	
	// Заполним данными текущей номенклатуры
	НоменклатураЗаполнения = ?(СтруктураНоменклатуры.Количество() > 0, СтруктураНоменклатуры, Номенклатура);
	
	Если ЗначениеЗаполнено(НоменклатураЗаполнения) Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитовНоменклатуры, НоменклатураЗаполнения);
		Для Каждого ТекущаяСтрока Из СтруктураРеквизитовНоменклатуры Цикл
			НайденнаяСтрока = ТаблицаРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита", ТекущаяСтрока.Ключ));
			
			Если НайденнаяСтрока.Количество() > 0 Тогда
				НайденнаяСтрока[0].ЗначениеПоНоменклатуре = ТекущаяСтрока.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьСнятьВсеПометки(Команда)
	
	УстановитьПометки = (Команда.Имя = "УстановитьВсеПометки");
	
	Для Каждого ТекущаяСтрока Из ТаблицаРеквизитов Цикл
		ТекущаяСтрока.Использование = УстановитьПометки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНоменклатуру(Команда)
	
	СформироватьРезультат();
	
КонецПроцедуры // ОбновитьНоменклатуру()

&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)
	
	СформироватьРезультат();
	
КонецПроцедуры // СоздатьНоменклатуру()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементОформления = ЭтотОбъект.УсловноеОформление.Элементы.Добавить();
	
	// Создаем условие отбора
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаРеквизитов.ЗначениеПоПрайсЛисту");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	// Значение для отбора
	ЭлементОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаРеквизитов.ЗначениеПоНоменклатуре");
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноМиндальный);
	ЭлементОформления.Использование = Истина;
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаРеквизитов.Имя);
	
КонецПроцедуры // УстановитьУсловноеОформление()

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаВыбораРеквизитовЗаполнения(РезультатОповещения, ДополнительныеПаарметры = Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		Закрыть(Новый Структура);
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_ОбработкаРезультатаВыбораРеквизитовЗаполнения()

&НаКлиенте
Процедура СформироватьРезультат()
	
	НайденныеСтрокиВыбора = ТаблицаРеквизитов.НайтиСтроки(Новый Структура("Использование", Истина));
	
	// Проверим выбраны ли данные реквизиты номенклатуры по прайс-листу
	Если НайденныеСтрокиВыбора.Количество() = 0 Тогда
		ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаВыбораРеквизитовЗаполнения", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОповещения, НСтр("ru = 'Не выбран реквизит для заполнения. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	
	Для Каждого ТекущаяСтрока Из НайденныеСтрокиВыбора Цикл
		Результат.Вставить(ТекущаяСтрока.ИмяРеквизита, ТекущаяСтрока.ЗначениеПоПрайсЛисту);
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры // СформироватьРезультат()

#КонецОбласти

