// Модуль менеджера справочника "Действия на значимые события"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ОбработчикиОбновления

// Выполняем замену справочника КлассификаторБанков
//
// Параметры: 
//  Ссылка - СправочникСсылка.ДействияНаЗначимыеСобытия - ссылка на справочник, в которм необходимо произвести замену
//
// Возвращаемое значение:
//  Булево - результат выполнения запроса
//
Функция ЗаменитьКлассификаторБанков(Ссылка = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Ссылка = Неопределено Тогда 
		Запрос.Текст = ПолучитьТекстЗапроса();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапроса(Истина);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Результат = Запрос.Выполнить();
		Возврат Результат.Пустой();	
	КонецЕсли;
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекущийОбъект 	= Выборка.Ссылка.ПолучитьОбъект();
						
		Если Выборка.ТЧ <> "" Тогда
			Для Каждого Строка Из ТекущийОбъект[Выборка.ТЧ] Цикл
				Если ТипЗнч(Строка[Выборка.Реквизит]) = Тип("СправочникСсылка.КлассификаторБанковРФ") Тогда
					Строка[Выборка.Реквизит] = Выборка.Банк;
				КонецЕсли;
			КонецЦикла;
		Иначе				
			ТекущийОбъект[Выборка.Реквизит] = Выборка.Банк;
		КонецЕсли;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ТекущийОбъект);
	КонецЦикла;
				
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы. 
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий 

// Обработчик события вызывается на сервере при получении стандартной управляемой формы.
//
// Параметры:
//  ВидФормы - Строка - Имя стандартной формы.
//  Параметры - Структура - Параметры формы.
//  ВыбраннаяФорма - Содержит имя открываемой формы или объект метаданных Форма.
//  ДополнительнаяИнформация - Структура - Дополнительная информация открытия формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной)
//                                  обработки события.
//
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" И Параметры.Свойство("Ключ") ИЛИ ВидФормы = "ФормаОбъекта" И Параметры.Свойство("ЗначениеКопирования") И ТипЗнч(Параметры.ЗначениеКопирования) = Тип("СправочникСсылка.ДействияНаЗначимыеСобытия") Тогда
		
		Если Параметры.Свойство("Ключ") Тогда
			ВидДействия = Параметры.Ключ.ВидДействия;
		Иначе
			ВидДействия = Параметры.ЗначениеКопирования.ВидДействия;
			ДополнительнаяИнформация.Вставить("ЗначениеКопирования", Параметры.ЗначениеКопирования);
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		Если ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.НаписатьЭлектронноеПисьмо Тогда
			ВыбраннаяФорма = "ФормаЭлектронногоПисьма";
		ИначеЕсли ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.СоздатьИЗаписатьОбъект Тогда
			ВыбраннаяФорма = "ФормаСозданияОбъекта";
		ИначеЕсли ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.СоздатьЗаписьЖурналаРегистрации Тогда
			ВыбраннаяФорма = "ФормаСозданияЗаписиВЖурналРегистрации";
		ИначеЕсли ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.СоздатьНапоминание Тогда
			ВыбраннаяФорма = "ФормаСоздатьНапоминание";
		ИначеЕсли ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.НаписатьSMS Тогда
			ВыбраннаяФорма = "ФормаСоздатьSMS";
		ИначеЕсли ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.Прочее Тогда
			ВыбраннаяФорма = "ФормаПроизвольноеВыражение";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПолученияФормы()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполнения предопределенных элементов справочника
//
Процедура ВыполнитьНачальноеЗаполнение() Экспорт
	
	// Дозаполним события после переноса данных
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДействияНаЗначимыеСобытия.Ссылка,
	               |	ДействияНаЗначимыеСобытия.ПредставлениеТипаОбъекта,
	               |	ДействияНаЗначимыеСобытия.жрОбъектМетаданныхИмяОбъекта,
	               |	ДействияНаЗначимыеСобытия.ТипОбъекта,
	               |	ДействияНаЗначимыеСобытия.жрОбъектМетаданных
	               |ИЗ
	               |	Справочник.ДействияНаЗначимыеСобытия КАК ДействияНаЗначимыеСобытия
	               |ГДЕ
	               |	(ДействияНаЗначимыеСобытия.ТипОбъекта = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
	               |				И НЕ ДействияНаЗначимыеСобытия.ПредставлениеТипаОбъекта = """"
	               |			ИЛИ ДействияНаЗначимыеСобытия.жрОбъектМетаданных = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
	               |				И НЕ ДействияНаЗначимыеСобытия.жрОбъектМетаданныхИмяОбъекта = """")";
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Сохранение справочника
	Пока Выборка.Следующий() Цикл
		
		ИдентификаторОбъектаМетаданных = Неопределено;
		ДействияНаЗначимыеСобытияОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если НЕ ЗначениеЗаполнено(Выборка.ТипОбъекта) И НЕ Метаданные.НайтиПоПолномуИмени(Выборка.ПредставлениеТипаОбъекта) = Неопределено Тогда
			ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Выборка.ПредставлениеТипаОбъекта);
			ДействияНаЗначимыеСобытияОбъект.ТипОбъекта = ИдентификаторОбъектаМетаданных;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Выборка.жрОбъектМетаданных) И НЕ Метаданные.НайтиПоПолномуИмени(Выборка.жрОбъектМетаданныхИмяОбъекта) = Неопределено Тогда
			ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Выборка.жрОбъектМетаданныхИмяОбъекта);
			ДействияНаЗначимыеСобытияОбъект.жрОбъектМетаданных = ИдентификаторОбъектаМетаданных;
			ДействияНаЗначимыеСобытияОбъект.жрОбъектМетаданныхИмяОбъекта = ИдентификаторОбъектаМетаданных;
		КонецЕсли;
		
		Попытка
			ДействияНаЗначимыеСобытияОбъект.Записать();
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru='Справочник ""Действия на значимые события"". %1 элемент ""%2""'"),"Обновлен",Выборка.Ссылка)
			);
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при записи элемента справочника ""Действия на значимые события""'", 
				ОбщегоНазначения.КодОсновногоЯзыка()),УровеньЖурналаРегистрации.Ошибка,,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));	
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры // ВыполнитьНачальноеЗаполнение()

// Формирует стандартное наименование и представление карточки.
//
// Параметры:
//  Объект   - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура - Набор параметров, использующихся при выполнения операции.
//
Процедура СформироватьНаименованиеПоУмолчанию(Объект,ПараметрыДействия=Неопределено) Экспорт
	
	Автонаименование = ПолучитьНаименованиеПоУмолчанию(Объект);
	
	Объект.Наименование = Автонаименование;
	
КонецПроцедуры // СформироватьНаименованиеПоУмолчанию()

Функция ПолучитьНаименованиеПоУмолчанию(Объект) Экспорт
	
	Если Объект.ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.СоздатьИЗаписатьОбъект Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.ТипОбъекта) Тогда
			Возврат "";
		КонецЕсли;
		Если Объект.ТипОбъекта.ПорядокКоллекции = 0 Тогда
			Автонаименование = НСтр("ru = 'Установить значение константы'");
			
		ИначеЕсли Объект.ТипОбъекта.ПорядокКоллекции = 12 Тогда
			Автонаименование = НСтр("ru = 'Создать запись регистра сведений'");
			
		Иначе
			Автонаименование = НСтр("ru = 'Создать объект'") + " <" + Объект.ТипОбъекта + ">";
		КонецЕсли;
		
	ИначеЕсли Объект.ВидДействия=Перечисления.ВидДействияНаЗначимоеСобытие.СоздатьНапоминание Тогда
		
		Автонаименование = НСтр("ru = 'Создать напоминание'");
		
	ИначеЕсли Объект.ВидДействия=Перечисления.ВидДействияНаЗначимоеСобытие.СоздатьЗаписьЖурналаРегистрации Тогда
		
		Автонаименование = НСтр("ru = 'Создать запись в журнале регистрации'");
		
	ИначеЕсли Объект.ВидДействия=Перечисления.ВидДействияНаЗначимоеСобытие.НаписатьЭлектронноеПисьмо Тогда
		
		Автонаименование = НСтр("ru = 'Написать электронное письмо'");
		
	ИначеЕсли Объект.ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.НаписатьSMS Тогда
		
		Автонаименование = НСтр("ru = 'Написать сообщение SMS'");  
				
	ИначеЕсли Объект.ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.Прочее Тогда
		
		Автонаименование = НСтр("ru = 'Произвольное выражение'");	
		
	КонецЕсли;
	
	Возврат Автонаименование;
	
КонецФункции // ПолучитьНаименованиеПоУмолчанию()

// Формирует стандартный текст в зависимости от выбранного поля.
//
// Параметры:
//  ПереданныйТекст   - Строка - Первоначальный текст.
//
Функция ОчиститьСодержимоеРедактора(Текст) Экспорт
	
	ПроизвольныйКод = "";
	Если Текст="Соответствия" Тогда
		
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ЗначениеРеквизита> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Значение это переменной будет присвоено соответствующему реквизиту создаваемого объекта.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "ЗначениеРеквизита = """";"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС;
		
	ИначеЕсли Текст="Получатели" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Пользователь> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать ссылку на элемент справочника ""Пользователи"",";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// либо массив элементов справочника ""Пользователи"".";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Пользователь = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС;  
		
	ИначеЕсли Текст="ДатаНапоминания" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ДатаНапоминания> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать значение даты.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "ДатаНапоминания = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="Содержание" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Содержание> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать текст напоминания.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Содержание = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="Событие" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Событие> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать текст события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Событие = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст ="ОбъектМетаданных" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектМетаданных> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать объект метаданных.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "ОбъектМетаданных = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="жрКомментарий" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Комментарий> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать текст комментария.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Комментарий = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="Данные" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Данные> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать ссылку на объект (любой).";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Данные = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="Автор" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Автор> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать ссылку на элемент справочника ""Пользователи"".";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Автор = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС;
		
	ИначеЕсли Текст="Тема" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Тема> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать текст темы электронного письма.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Тема = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="УчетнаяЗапись" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <УчетнаяЗапись> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать ссылку на элемент справочника ""Учетные записи электронной почты"".";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "УчетнаяЗапись = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="Комментарий" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Комментарий> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать текст комментария.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Комментарий = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="Важность" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Важность> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, по значению этой переменной будет определятся важность электронного письма.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Важность = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС;
	
	ИначеЕсли Текст="ТекстПисьма" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекстПисьма> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать текст электронного письма.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "ТекстПисьма = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="ТекстСообщения" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекстСообщения> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать текст электронного письма.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "ТекстСообщения = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
	ИначеЕсли Текст="АдресЭлектроннойПочты" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <АдресЭлектроннойПочты> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать адрес получателя электронного письма.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "АдресЭлектроннойПочты = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС;
		
	ИначеЕсли Текст="Телефон" Тогда
		ПроизвольныйКод = "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// Предусмотрены несколько предопределенных переменных:";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <Телефон> - обязательная переменная.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// После выполнения кода, эта переменная должна содержать телефон получателя сообщения SMS.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "//";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ОбъектИсточник> - предназначена для доступа к объекту-источнику события.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <ТекущийОбъект>  - предназначена для доступа к создаваемому объекту.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "// <СозданныеОбъекты> - массив уже созданных объектов в предшествующих действиях.";
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС + "/////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС; 
		
		ПроизвольныйКод = ПроизвольныйКод + "Телефон = Неопределено;"; 
		ПроизвольныйКод = ПроизвольныйКод + Символы.ПС;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ПроизвольныйКод) Тогда
		Возврат Текст;
	Иначе
		Возврат ПроизвольныйКод;
	КонецЕсли;
КонецФункции // ОчиститьСодержимоеРедактора()

Процедура ЗаполнитьSMSТекстСообщенияПроизвольныйКод(Параметры) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДействияНаЗначимыеСобытия.Ссылка КАК Ссылка,
		|	ДействияНаЗначимыеСобытия.SMSТекстСообщения КАК SMSТекстСообщения
		|ИЗ
		|	Справочник.ДействияНаЗначимыеСобытия КАК ДействияНаЗначимыеСобытия
		|ГДЕ
		|	НЕ ДействияНаЗначимыеСобытия.ПометкаУдаления
		|	И (ВЫРАЗИТЬ(ДействияНаЗначимыеСобытия.SMSТекстСообщенияПроизвольныйКод КАК СТРОКА(100))) <> """"
		|	И (ВЫРАЗИТЬ(ДействияНаЗначимыеСобытия.SMSТекстСообщения КАК СТРОКА(100))) <> """"";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл	
			Элемент = Выборка.Ссылка.ПолучитьОбъект();
			Элемент.ОбменДанными.Загрузка = Истина;				
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка); 
			Элемент.SMSТекстСообщенияПроизвольныйКод = Выборка.SMSТекстСообщения;
			Элемент.Записать();
		Исключение
			 ЗаписьЖурналаРегистрации(
			 	НСтр("ru = 'Ошибка обновления справочника Действия на значимые события'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
    			УровеньЖурналаРегистрации.Предупреждение,
				,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
					
		КонецПопытки;		
		
	КонецЦикла;

КонецПроцедуры

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	ОбязательныеРеквизиты.Добавить("ВидДействия");
	
	Если Объект.ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.НаписатьSMS Тогда
		ОбязательныеРеквизиты.Добавить("ПолучателиSMS");
		ОбязательныеРеквизиты.Добавить("ПолучателиSMS.ПредставлениеКонтакта");
	КонецЕсли;
	Если Объект.ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.СоздатьИЗаписатьОбъект Тогда
		ОбязательныеРеквизиты.Добавить("ТипОбъекта");
	КонецЕсли;
	
	Если Объект.ВидДействия = Перечисления.ВидДействияНаЗначимоеСобытие.СоздатьЗаписьЖурналаРегистрации Тогда
		ОбязательныеРеквизиты.Добавить("жрСобытие");
	КонецЕсли;


		
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события возникающего при изменении данных реквизита "Заполнить реквизиты по умолчанию".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ЗаполнитьРеквизитыПоУмолчаниюПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	Если Объект.ЗаполнитьРеквизитыПоУмолчанию Тогда
		Объект.ЗадействоватьВводНаОсновании = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьРеквизитыПоУмолчаниюПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Задействовать ввод на основании".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ЗадействоватьВводНаОснованииПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	Если Объект.ЗадействоватьВводНаОсновании Тогда
		Объект.ЗаполнитьРеквизитыПоУмолчанию = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ЗадействоватьВводНаОснованииПриИзменении()

#КонецОбласти

Функция ПолучитьТекстЗапроса(Проверка = Ложь)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДействияНаЗначимыеСобытия.Ссылка КАК Ссылка,
		|	"""" КАК ТЧ,
		|	""жрДанные"" КАК Реквизит,
		|	ДействияНаЗначимыеСобытия.жрДанные КАК Банк
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Справочник.ДействияНаЗначимыеСобытия КАК ДействияНаЗначимыеСобытия
		|ГДЕ
		|	ДействияНаЗначимыеСобытия.жрДанные ССЫЛКА Справочник.КлассификаторБанковРФ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДействияНаЗначимыеСобытияСоответствия.Ссылка,
		|	""Соответствия"",
		|	""Правило"",
		|	ДействияНаЗначимыеСобытияСоответствия.Правило
		|ИЗ
		|	Справочник.ДействияНаЗначимыеСобытия.Соответствия КАК ДействияНаЗначимыеСобытияСоответствия
		|ГДЕ
		|	ДействияНаЗначимыеСобытияСоответствия.Правило ССЫЛКА Справочник.КлассификаторБанковРФ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДействияНаЗначимыеСобытияСоответствия.Ссылка,
		|	""Соответствия"",
		|	""ТипРеквизита"",
		|	ДействияНаЗначимыеСобытияСоответствия.ТипРеквизита
		|ИЗ
		|	Справочник.ДействияНаЗначимыеСобытия.Соответствия КАК ДействияНаЗначимыеСобытияСоответствия
		|ГДЕ
		|	ДействияНаЗначимыеСобытияСоответствия.ТипРеквизита ССЫЛКА Справочник.КлассификаторБанковРФ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Ссылка КАК Ссылка,
		|	ВТ.ТЧ КАК ТЧ,
		|	ВТ.Реквизит КАК Реквизит,
		|	ЕСТЬNULL(КлассификаторБанков.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)) КАК Банк
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
		|		ПО ВТ.Банк.Код = КлассификаторБанков.Код
		|			И ЕСТЬNULL(ВТ.Банк.КоррСчет, """") = ЕСТЬNULL(КлассификаторБанков.КоррСчет, """")
		|			И ЕСТЬNULL(ВТ.Банк.СВИФТБИК, """") = ЕСТЬNULL(КлассификаторБанков.СВИФТБИК, """")
		|ГДЕ
		|	ВТ.Ссылка = &Ссылка";

	Если Не Проверка Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ.Ссылка = &Ссылка", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
