
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	
	Если Параметры.ДополнительныеПараметры.Свойство("Источник") Тогда
		Источник = Параметры.ДополнительныеПараметры.Источник;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
	
		 УправлениеДиалогомНаСервере();

	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)	
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ДействияНаЗначимыеСобытия");
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьДействие(Команда)
	
	ОткрытьНужнуюПоВидуФорму();
	
КонецПроцедуры //ВыбратьДействие()

&НаКлиенте
Процедура ВидДействийВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ОткрытьНужнуюПоВидуФорму();
	
КонецПроцедуры //ВидДействийВыборЗначения()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

// Настраивает и открывает форму действий в соответствии с выбранным видом действия.
//
&НаКлиенте
Процедура ОткрытьНужнуюПоВидуФорму()
	
	ТекущиеДанные = Элементы.ВидДействий.ТекущиеДанные;
	ВидДействия = ТекущиеДанные.Ссылка;
	
	// Сформируем параметры открытия
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВидДействия", ВидДействия);
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Источник",Источник);
	ПараметрыОткрытия.Вставить("ДополнительныеПараметры",ДополнительныеПараметры);
	
	// В зависимости от вида действия откроем нужную форму
	Если ВидДействия = ПредопределенноеЗначение("Перечисление.ВидДействияНаЗначимоеСобытие.НаписатьЭлектронноеПисьмо") Тогда
		ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.ФормаЭлектронногоПисьма", ПараметрыОткрытия,ВладелецФормы,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ВидДействия = ПредопределенноеЗначение("Перечисление.ВидДействияНаЗначимоеСобытие.СоздатьИЗаписатьОбъект") Тогда
		ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.ФормаСозданияОбъекта", ПараметрыОткрытия,ВладелецФормы,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ВидДействия = ПредопределенноеЗначение("Перечисление.ВидДействияНаЗначимоеСобытие.СоздатьЗаписьЖурналаРегистрации") Тогда
		ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.ФормаСозданияЗаписиВЖурналРегистрации", ПараметрыОткрытия,ВладелецФормы,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ВидДействия = ПредопределенноеЗначение("Перечисление.ВидДействияНаЗначимоеСобытие.СоздатьНапоминание") Тогда
		ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.ФормаСоздатьНапоминание", ПараметрыОткрытия,ВладелецФормы,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ВидДействия = ПредопределенноеЗначение("Перечисление.ВидДействияНаЗначимоеСобытие.Прочее") Тогда
		ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.ФормаПроизвольноеВыражение", ПараметрыОткрытия,ВладелецФормы,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ВидДействия = ПредопределенноеЗначение("Перечисление.ВидДействияНаЗначимоеСобытие.НаписатьSMS") Тогда
		ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.ФормаСоздатьSMS", ПараметрыОткрытия,ВладелецФормы,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	Закрыть();
	
КонецПроцедуры //ОткрытьНужнуюПоВидуФорму()

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
КонецПроцедуры // УправлениеДиалогомНаСервере()

#КонецОбласти

#КонецОбласти

