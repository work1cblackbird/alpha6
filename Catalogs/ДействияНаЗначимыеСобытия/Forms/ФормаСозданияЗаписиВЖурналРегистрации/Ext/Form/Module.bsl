///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Действия на значимые события"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.ДополнительныеПараметры.Свойство("Источник") Тогда
		Источник = Параметры.ДополнительныеПараметры.Источник;
		СсылочныйТипИсточника = НЕ (Источник.ЗначениеПустойСсылки = Неопределено);
	КонецЕсли;
	
	Если Параметры.Свойство("ВидДействия") Тогда
		Объект.ВидДействия = Параметры.ВидДействия;
		Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
			Справочники.ДействияНаЗначимыеСобытия.СформироватьНаименованиеПоУмолчанию(Объект);
		КонецЕсли;
	КонецЕсли;
	
	ТипОбъектаУст = Объект.ТипОбъекта;
	
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УправлениеДиалогомНаСервере();
	КонецЕсли;
		
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Настроим командную панель формы
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект,"Соответствия");
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура НаименованиеНачалоВыбораНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ДействияНаЗначимыеСобытия.СформироватьНаименованиеПоУмолчанию(Объект,ПараметрыДействия);
	
КонецПроцедуры 


&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ПустаяСтрока(Объект.Наименование) Тогда
		
		// Формируем описание обработчика перехвата закрытия формы
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияСформироватьНаименование", ЭтотОбъект, "СформироватьНаименование");
		
		// Формируем текст вопроса
		ТекстВопроса = НСтр("ru = 'Сформировать новое наименование?'");
		
		// Получаем подтверждение операции от пользователя
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		// Обработаем событие в контексте сервера
		НаименованиеНачалоВыбораНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВидовПравил = Новый СписокЗначений;
	Элементы.Комментарий.СписокВыбора.Очистить();
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение"));
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод"));
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ПродолжитьВыборРеквизита",Элементы.Комментарий);
	ПараметрыОбработки.Вставить("ИмяТипа","СтрокаКомментарий");
	ПараметрыОбработки.Вставить(
		"ИмяРеквизита",
		?(ЗначениеЗаполнено(Объект.КомментарийПроизвольныйКод),Объект.КомментарийПроизвольныйКод,"жрКомментарий")
	);
	
	ОписаниеПродолжениеВыбора = Новый ОписаниеОповещения(
		"ОбработкаРезультатаОповещенияВыборРеквизита",
		ЭтотОбъект, 
		ПараметрыОбработки
	);
	
	ПоказатьВыборИзСписка(ОписаниеПродолжениеВыбора,СписокВидовПравил, Элемент);
	
КонецПроцедуры 

&НаКлиенте
Процедура КомментарийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		Объект.КомментарийПроизвольныйКод = ВыбранноеЗначение;
		Объект.Комментарий = "<" + НСтр("ru = 'Произвольное выражение'") + ">";
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура жрСобытиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВидовПравил = Новый СписокЗначений;
	Элементы.жрСобытие.СписокВыбора.Очистить();
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение"));
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод"));
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ПродолжитьВыборРеквизита",Элементы.жрСобытие);
	ПараметрыОбработки.Вставить("ИмяТипа","СтрокаСобытие");
	ПараметрыОбработки.Вставить(
		"ИмяРеквизита",
		?(ЗначениеЗаполнено(Объект.жрСобытиеПроизвольныйКод),Объект.жрСобытиеПроизвольныйКод,"Событие")
	);
	
	ОписаниеПродолжениеВыбора = Новый ОписаниеОповещения(
		"ОбработкаРезультатаОповещенияВыборРеквизита", ЭтотОбъект, ПараметрыОбработки
	);
	
	ПоказатьВыборИзСписка(ОписаниеПродолжениеВыбора,СписокВидовПравил, Элемент);
	
КонецПроцедуры 

&НаКлиенте
Процедура жрСобытиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		Объект.жрСобытиеПроизвольныйКод = ВыбранноеЗначение;
		Объект.жрСобытие = "<" + НСтр("ru = 'Произвольное выражение'") + ">";
		
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура жрОбъектМетаданныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВидовПравил = Новый СписокЗначений;
	Элементы.жрОбъектМетаданных.СписокВыбора.Очистить();
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение"));
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод"));
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ПродолжитьВыборРеквизита",Элементы.жрОбъектМетаданных);
	ПараметрыОбработки.Вставить("ИмяФормы","Справочник.ИдентификаторыОбъектовМетаданных");
	ПараметрыОбработки.Вставить("ИмяРеквизита",
		?(ЗначениеЗаполнено(Объект.жрОбъектМетаданныхПроизвольныйКод),Объект.жрОбъектМетаданныхПроизвольныйКод,"ОбъектМетаданных")
	);
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("БезДанных",Ложь);
	ПараметрыОтбора.Вставить("ВыбиратьГруппыОбъектовМетаданных",Ложь);
	МассивПорядков = Новый Массив;
	МассивПорядков.Добавить(0);
	МассивПорядков.Добавить(3);
	МассивПорядков.Добавить(4);
	МассивПорядков.Добавить(5);
	МассивПорядков.Добавить(9);
	МассивПорядков.Добавить(10);
	МассивПорядков.Добавить(12);
	МассивПорядков.Добавить(13);
	ПараметрыОтбора.Вставить("ПорядокКоллекции",Новый ФиксированныйМассив(МассивПорядков));
	ПараметрыОбработки.Вставить("Отбор",ПараметрыОтбора);
	
	ОписаниеПродолжениеВыбора = Новый ОписаниеОповещения(
		"ОбработкаРезультатаОповещенияВыборРеквизита", 
		ЭтотОбъект,
		ПараметрыОбработки
	);
	
	ПоказатьВыборИзСписка(ОписаниеПродолжениеВыбора,СписокВидовПравил, Элемент);
	
КонецПроцедуры 

&НаКлиенте
Процедура жрОбъектМетаданныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		Объект.жрОбъектМетаданныхПроизвольныйКод = ВыбранноеЗначение;
		Объект.жрОбъектМетаданныхИмяОбъекта = "<" + НСтр("ru = 'Произвольное выражение'") + ">";
		Объект.жрОбъектМетаданных = ПредопределенноеЗначение("Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка");
		
	Иначе
		
		Объект.жрОбъектМетаданных = ВыбранноеЗначение;
		Объект.жрОбъектМетаданныхПроизвольныйКод = "";
		Объект.жрОбъектМетаданныхИмяОбъекта = ВыбранноеЗначение;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура жрДанныеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВидовПравил = Новый СписокЗначений;
	Элементы.жрДанные.СписокВыбора.Очистить();
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение"));
	Если СсылочныйТипИсточника Тогда
		СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.РеквизитОбъектаИсточника"));
	КонецЕсли;
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод"));
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ПродолжитьВыборРеквизита",Элементы.жрДанные);
	ПараметрыОбработки.Вставить("ИмяФормы","Справочник.ИдентификаторыОбъектовМетаданных");
	ПараметрыОбработки.Вставить("ИмяРеквизита",?(ЗначениеЗаполнено(Объект.жрДанныеПроизвольныйКод),Объект.жрДанныеПроизвольныйКод,"Данные"));
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("БезДанных",Ложь);
	ПараметрыОтбора.Вставить("ВыбиратьГруппыОбъектовМетаданных",Ложь);
	МассивПорядков = Новый Массив;
	МассивПорядков.Добавить(3);
	МассивПорядков.Добавить(4);
	МассивПорядков.Добавить(5);
	МассивПорядков.Добавить(9);
	МассивПорядков.Добавить(10);
	ПараметрыОтбора.Вставить("ПорядокКоллекции",Новый ФиксированныйМассив(МассивПорядков));
	ПараметрыОбработки.Вставить("Отбор",ПараметрыОтбора);
	ОписаниеПродолжениеВыбора = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыборРеквизита", ЭтотОбъект, ПараметрыОбработки);
	
	ПоказатьВыборИзСписка(ОписаниеПродолжениеВыбора,СписокВидовПравил, Элемент);
	
КонецПроцедуры 

&НаСервере
Функция жрДанныеОбработкаВыбораНаСервере(ВыбранноеЗначение,ПолноеИмя = "")
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ОписаниеТипов") Тогда
		
		ВсеСсылки = ОбщегоНазначения.ОписаниеТипаВсеСсылки();
		Если НЕ ВсеСсылки.СодержитТип(ВыбранноеЗначение.ОписаниеТипа.Типы()[0]) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Реквизит не является ссылкой на объект.'"));
			Возврат Ложь;
		КонецЕсли;
		
	Иначе
		
		ПолноеИмя = ВыбранноеЗначение.ПолноеИмя;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции 

&НаКлиенте
Процедура жрДанныеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		Объект.жрДанныеПроизвольныйКод = ВыбранноеЗначение;
		Объект.жрДанные = "<" + НСтр("ru = 'Произвольное выражение'") + ">";
		Объект.жрДанныеПутьКДанным = "";
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ДанныеФормыЭлементДерева") Тогда
		
		// Проверим соответствие типов
		Если жрДанныеОбработкаВыбораНаСервере(ВыбранноеЗначение.ТипМетаданного) Тогда
		
			Объект.жрДанные = ВыбранноеЗначение.Поле + " (Владелец)";
			Объект.жрДанныеПутьКДанным = ВыбранноеЗначение.ИмяМетаданного;
			Объект.жрДанныеПроизвольныйКод = "";
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных")  Тогда
		
		// Получим полное имя объекта
		Имя = "";
		жрДанныеОбработкаВыбораНаСервере(ВыбранноеЗначение,Имя);
		
		// Сформируем параметры открытия
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
		
		// Получаем форму, производим ее настройку и открытие.
		ОткрытьФорму(""+Имя +".ФормаСписка", ПараметрыОткрытия, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		
		Объект.жрДанные = ВыбранноеЗначение;
		Объект.жрДанныеПутьКДанным = "";
		Объект.жрДанныеПроизвольныйКод = "";
		
	КонецЕсли;
	
КонецПроцедуры 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияСформироватьНаименование(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		
		НаименованиеНачалоВыбораНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияВыборРеквизита(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	// Проверяем статус закрытия окна параметров
	Если РезультатОповещения=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Обработаем в зависимости от выбранного варианта
	Если РезультатОповещения.Значение=ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение") Тогда
		
		Если ДополнительныеПараметры.Свойство("ИмяТипа") И ДополнительныеПараметры.ИмяТипа = "СтрокаКомментарий" Тогда
			
			Объект.Комментарий = "";
			Объект.КомментарийПроизвольныйКод = "";
			
		ИначеЕсли ДополнительныеПараметры.Свойство("ИмяТипа") И ДополнительныеПараметры.ИмяТипа = "СтрокаСобытие" Тогда
			
			Объект.жрСобытие = "";
			Объект.жрСобытиеПроизвольныйКод = "";
			
		ИначеЕсли ДополнительныеПараметры.Свойство("ИмяФормы")Тогда
			
			// Сформируем параметры открытия
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("РежимВыбора",Истина);
			ПараметрыОткрытия.Вставить("Отбор",ДополнительныеПараметры.Отбор);
			
			ОткрытьФорму(""+ДополнительныеПараметры.ИмяФормы+".ФормаВыбора",ПараметрыОткрытия,ДополнительныеПараметры.ПродолжитьВыборРеквизита,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		КонецЕсли;
		
	ИначеЕсли РезультатОповещения.Значение=ПредопределенноеЗначение("Перечисление.ВидыПравил.РеквизитОбъектаИсточника") Тогда
		
		// Сформируем параметры открытия
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Источник", Источник);
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
		
		// Получаем форму, производим ее настройку и открытие
		ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.ВыборРеквизитаОбъекта", ПараметрыОткрытия,ДополнительныеПараметры.ПродолжитьВыборРеквизита,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли РезультатОповещения.Значение=ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод") Тогда
		
		// Сформируем параметры открытия
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
		ПараметрыОткрытия.Вставить("Текст", ДополнительныеПараметры.ИмяРеквизита);
		Если ДополнительныеПараметры.Свойство("Отбор") Тогда
			ПараметрыОткрытия.Вставить("Отбор", ДополнительныеПараметры.Отбор);
		КонецЕсли;
		
		// Получаем форму, производим ее настройку и открытие
		ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.РедакторВыражений", ПараметрыОткрытия, ДополнительныеПараметры.ПродолжитьВыборРеквизита,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры 
  
#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()

	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Элементы.Наименование.СписокВыбора.Очистить();
	Элементы.Наименование.СписокВыбора.Добавить(
		Справочники.ДействияНаЗначимыеСобытия.ПолучитьНаименованиеПоУмолчанию(Объект)
		, "Автоматическое наименование");
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

