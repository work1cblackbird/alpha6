///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Действия на значимые события"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.ДополнительныеПараметры.Свойство("Источник") Тогда
		Источник = Параметры.ДополнительныеПараметры.Источник;
		СсылочныйТипИсточника = НЕ (Источник.ЗначениеПустойСсылки = Неопределено);
	КонецЕсли;
	
	Если Параметры.Свойство("ВидДействия") Тогда
		Объект.ВидДействия = Параметры.ВидДействия;
		Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
			Справочники.ДействияНаЗначимыеСобытия.СформироватьНаименованиеПоУмолчанию(Объект);
		КонецЕсли;
	КонецЕсли;
	
	ВидДействияУст = Объект.ВидДействия;
	
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		УправлениеДиалогомНаСервере();
		
	КонецЕсли;
			
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// Настроим командную панель формы
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект,"ПолучателиSMS");
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
		
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.АдреснаяКнига") Тогда
		
		Если ТипЗнч(ВыбранноеЗначение) <> Тип("Массив") И ТипЗнч(ВыбранноеЗначение) <> Тип("Соответствие") Тогда
			Возврат;
		КонецЕсли;
		
		ЗаполнитьПодобранныхПолучателей(ВыбранноеЗначение);
		Возврат; 
		
	КонецЕсли;
		
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если ПроизвольныйКод Тогда  
		Объект.SMSТекстСообщенияПроизвольныйКод = ТекстСообщения;
		Объект.SMSТекстСообщения 				= "";	
	Иначе		
		Объект.SMSТекстСообщенияПроизвольныйКод = "";
		Объект.SMSТекстСообщения 				= ТекстСообщения;	
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура НаименованиеНачалоВыбораНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ДействияНаЗначимыеСобытия.СформироватьНаименованиеПоУмолчанию(Объект,ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ПустаяСтрока(Объект.Наименование) Тогда
		
		// Формируем описание обработчика перехвата закрытия формы
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияСформироватьНаименование", ЭтотОбъект);
		
		// Формируем текст вопроса
		ТекстВопроса = НСтр("ru = 'Сформировать новое наименование?'");
		
		// Получаем подтверждение операции от пользователя
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		// Обработаем событие в контексте сервера
		НаименованиеНачалоВыбораНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура АвторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВидовПравил = Новый СписокЗначений;
	Элементы.Автор.СписокВыбора.Очистить();
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение"));
	Если СсылочныйТипИсточника Тогда
		СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.РеквизитОбъектаИсточника"));
	КонецЕсли;
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод"));
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ПродолжитьВыборРеквизита",Элементы.Автор);
	ПараметрыОбработки.Вставить("ИмяФормы","Справочник.Пользователи");
	ПараметрыОбработки.Вставить("ИмяРеквизита",?(ЗначениеЗаполнено(Объект.АвторПроизвольныйКод),Объект.АвторПроизвольныйКод,"Автор"));
	ОписаниеПродолжениеВыбора = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыборРеквизита", ЭтотОбъект, ПараметрыОбработки);
	
	ПоказатьВыборИзСписка(ОписаниеПродолжениеВыбора,СписокВидовПравил, Элемент);
	
КонецПроцедуры 

&НаКлиенте
Процедура АвторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		Объект.АвторПроизвольныйКод = ВыбранноеЗначение;
		Объект.Автор = "<" + НСтр("ru = 'Произвольное выражение'") + ">";
		Объект.АвторПутьКДанным = "";
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Объект.Автор = ВыбранноеЗначение;
		Объект.АвторПутьКДанным = "";
		Объект.АвторПроизвольныйКод = "";
		
	Иначе
		
		// проверим соответствие типов
		Если НЕ ВыбранноеЗначение.ТипМетаданного.СодержитТип(Тип("СправочникСсылка.Пользователи")) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru='Выбранный реквизит не является ссылкой на элемент справочника ""Пользователи"".'")
			);
			Возврат;
		КонецЕсли;
				
		Объект.Автор = ВыбранноеЗначение.Поле + " (Владелец)";
		Объект.АвторПутьКДанным = ВыбранноеЗначение.ИмяМетаданного;
		Объект.АвторПроизвольныйКод = "";
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВажностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВидовПравил = Новый СписокЗначений;
	Элементы.Важность.СписокВыбора.Очистить();
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение"));
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод"));
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ПродолжитьВыборРеквизита",Элементы.Важность);
	ПараметрыОбработки.Вставить("ИмяТипа","ВариантыВажностиВзаимодействия");
	ПараметрыОбработки.Вставить("ИмяРеквизита",?(ЗначениеЗаполнено(Объект.ВажностьПроизвольныйКод),Объект.ВажностьПроизвольныйКод,"Важность"));
	ОписаниеПродолжениеВыбора = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыборРеквизита", ЭтотОбъект, ПараметрыОбработки);
	
	ПоказатьВыборИзСписка(ОписаниеПродолжениеВыбора,СписокВидовПравил, Элемент);
	
КонецПроцедуры 

&НаКлиенте
Процедура ВажностьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		СтандартнаяОбработка = Ложь;
		Объект.ВажностьПроизвольныйКод = ВыбранноеЗначение;
		Объект.Важность = "<" + НСтр("ru = 'Произвольное выражение'") + ">";
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ТемаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВидовПравил = Новый СписокЗначений;
	Элементы.Тема.СписокВыбора.Очистить();
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение"));
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод"));
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ПродолжитьВыборРеквизита",Элементы.Тема);
	ПараметрыОбработки.Вставить("ИмяТипа","СтрокаТема");
	ПараметрыОбработки.Вставить("ИмяРеквизита",?(ЗначениеЗаполнено(Объект.ТемаПроизвольныйКод),Объект.ТемаПроизвольныйКод,"Тема"));
	ОписаниеПродолжениеВыбора = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыборРеквизита", ЭтотОбъект, ПараметрыОбработки);
	
	ПоказатьВыборИзСписка(ОписаниеПродолжениеВыбора,СписокВидовПравил, Элемент);
	
КонецПроцедуры 

&НаКлиенте
Процедура ТемаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		СтандартнаяОбработка = Ложь;
		Объект.ТемаПроизвольныйКод = ВыбранноеЗначение;
		Объект.Тема = "<" + НСтр("ru = 'Произвольное выражение'") + ">";
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВидовПравил = Новый СписокЗначений;
	Элементы.Комментарий.СписокВыбора.Очистить();
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение"));
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод"));
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ПродолжитьВыборРеквизита",Элементы.Комментарий);
	ПараметрыОбработки.Вставить("ИмяТипа","СтрокаКомментарий");
	ПараметрыОбработки.Вставить("ИмяРеквизита",?(ЗначениеЗаполнено(Объект.КомментарийПроизвольныйКод),Объект.КомментарийПроизвольныйКод,"Комментарий"));
	ОписаниеПродолжениеВыбора = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыборРеквизита", ЭтотОбъект, ПараметрыОбработки);
	
	ПоказатьВыборИзСписка(ОписаниеПродолжениеВыбора,СписокВидовПравил, Элемент);
	
КонецПроцедуры //КомментарийНачалоВыбора()

&НаКлиенте
Процедура КомментарийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		СтандартнаяОбработка = Ложь;
		Объект.КомментарийПроизвольныйКод = ВыбранноеЗначение;
		Объект.Комментарий = "<" + НСтр("ru = 'Произвольное выражение'") + ">";
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПолучателиSMSПредставлениеКонтактаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.ПолучателиSMS.ТекущиеДанные;
	
	СписокВидовПравил = Новый СписокЗначений;
	Элементы.ПолучателиSMSПредставлениеКонтакта.СписокВыбора.Очистить();
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение"));
	СписокВидовПравил.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод"));
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ПродолжитьВыборРеквизита",Элементы.ПолучателиSMSПредставлениеКонтакта);
	ПараметрыОбработки.Вставить("ИмяТипа","Контакт");
	ПараметрыОбработки.Вставить("ИмяРеквизита",?(ЗначениеЗаполнено(ТекущиеДанные.ПроизвольныйКод),ТекущиеДанные.ПроизвольныйКод,"Телефон"));
	ОписаниеПродолжениеВыбора = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыборРеквизита", ЭтотОбъект, ПараметрыОбработки);
	
	ПоказатьВыборИзСписка(ОписаниеПродолжениеВыбора,СписокВидовПравил, Элемент);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПолучателиSMSПредставлениеКонтактаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		ТекущиеДанные = Элементы.ПолучателиSMS.ТекущиеДанные;
		ТекущиеДанные.ПроизвольныйКод = ВыбранноеЗначение;
		ТекущиеДанные.КакСвязаться = "<" + НСтр("ru = 'Произвольное выражение'") + ">";
		
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ПроизвольнаяТемаПисьмаНаСервере()
	
	ТекстСообщения = Справочники.ДействияНаЗначимыеСобытия.ОчиститьСодержимоеРедактора("ТекстСообщения");
	
КонецПроцедуры 

&НаКлиенте
Процедура ПроизвольнаяТемаПисьма(Команда)
	
	Если ПустаяСтрока(ТекстСообщения) Тогда
		ПроизвольнаяТемаПисьмаНаСервере();
	КонецЕсли; 
	
	Элементы.РедакторВыражений.Видимость = Истина;
	Элементы.ГруппаВидТекста.Заголовок = НСтр("ru = 'Произвольный код'");
	Элементы.ПроизвольнаяТемаПисьма.Пометка = Истина;
	Элементы.ТочнаяТемаПисьма.Пометка = Ложь;
	
	ПроизвольныйКод = Истина;
	
КонецПроцедуры 

&НаКлиенте
Процедура ТочнаяТемаПисьма(Команда)
	
	Элементы.РедакторВыражений.Видимость = Ложь;
	Элементы.ГруппаВидТекста.Заголовок = НСтр("ru = 'Точное значение'");
	Элементы.ПроизвольнаяТемаПисьма.Пометка = Ложь;
	Элементы.ТочнаяТемаПисьма.Пометка = Истина;
	
	ПроизвольныйКод = Ложь;
	
КонецПроцедуры 

&НаКлиенте
Процедура РедакторВыражений(Команда)
	
	// Сформируем параметры открытия
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("Текст", ?(ЗначениеЗаполнено(Объект.СодержаниеПроизвольныйКод),Объект.СодержаниеПроизвольныйКод,"ТекстСообщения"));
	
	// Получаем форму, производим ее настройку и открытие
	ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.РедакторВыражений", ПараметрыОткрытия,Элементы.SMSТекстСообщения,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры //РедакторВыражений()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполнение табличной части получателями электронного письма, подобранными пользователями.
//
&НаКлиенте
Процедура ЗаполнитьПодобранныхПолучателей(Результат)

	ТекущиеДанные = Элементы.ПолучателиSMS.ТекущиеДанные;
	ПерваяСтрока = Истина;
	
	Для Каждого Элемент Из Результат Цикл
		
		Если ПерваяСтрока Тогда
			ТекущиеДанные.НомерДляОтправки = СтрЗаменить(Элемент.Адрес," ","");
			ТекущиеДанные.ПредставлениеКонтакта = Элемент.Представление + " <" +Элемент.Адрес + ">";
			ТекущиеДанные.КакСвязаться = Элемент.Адрес;
			ТекущиеДанные.Контакт = Элемент.Контакт;
			ПерваяСтрока = Ложь;
		Иначе
			НоваяСтрока = объект.ПолучателиПисьма.Добавить();
			НоваяСтрока.НомерДляОтправки = СтрЗаменить(Элемент.Адрес," ","");
			НоваяСтрока.КакСвязаться = Элемент.Адрес;
			НоваяСтрока.ПредставлениеКонтакта = Элемент.Представление + " <" +Элемент.Адрес + ">";
			НоваяСтрока.Контакт = Элемент.Контакт;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ЗаполнитьПодобранныхПолучателей()

// Обработчик события возникающего при выполнении оповещения данной формы о прекращении работы подчиненной.
//
// Параметры:
//  РезультатОповещения     - Произвольный - Результат выполнения операции в подчиненной форме.
//  ДополнительныеПараметры - Произвольный - Значение, которое было указано при создании объекта описания оповещения.
//
&НаКлиенте
Процедура ОбработкаРезультатаОповещенияСформироватьНаименование(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		
		// Обработаем событие в контексте сервера
		НаименованиеНачалоВыбораНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаРезультатаОповещенияСформироватьНаименование()

// Обработчик события возникающего при выполнении оповещения данной формы о прекращении работы подчиненной.
//
// Параметры:
//  РезультатОповещения     - Произвольный - Результат выполнения операции в подчиненной форме.
//  ДополнительныеПараметры - Произвольный - Значение, которое было указано при создании объекта описания оповещения.
//
&НаКлиенте
Процедура ОбработкаРезультатаОповещенияВыборРеквизита(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	// Проверяем статус закрытия окна параметров
	Если РезультатОповещения=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры = "СформироватьНаименование" Тогда
		
		Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
			
			// Обработаем событие в контексте сервера
			НаименованиеНачалоВыбораНаСервере();
			
		КонецЕсли;
		
	ИначеЕсли ДополнительныеПараметры = "ПродолжитьВыборВажности" Тогда
		
		Объект.Важность = РезультатОповещения.Значение;
		Объект.ВажностьПроизвольныйКод = "";
		
	ИначеЕсли ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("ПродолжитьВыборРеквизита") Тогда
		
		// Обработаем в зависимости от выбранного варианта
		Если РезультатОповещения.Значение=ПредопределенноеЗначение("Перечисление.ВидыПравил.ТочноеЗначение") Тогда
			
			Если ДополнительныеПараметры.Свойство("ИмяТипа") И ДополнительныеПараметры.ИмяТипа = "ВариантыВажностиВзаимодействия" Тогда
				
				СписокВажностей = Новый СписокЗначений;
				Элементы.Важность.СписокВыбора.Очистить();
				СписокВажностей.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыВажностиВзаимодействия.Низкая"));
				СписокВажностей.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыВажностиВзаимодействия.Обычная"));
				СписокВажностей.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыВажностиВзаимодействия.Высокая"));
				ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыборРеквизита", ЭтотОбъект, "ПродолжитьВыборВажности"),СписокВажностей,ДополнительныеПараметры.ПродолжитьВыборРеквизита);
				
			ИначеЕсли ДополнительныеПараметры.Свойство("ИмяТипа") И ДополнительныеПараметры.ИмяТипа = "СтрокаТема" Тогда
				
				Объект.Тема = "";
				Объект.ТемаПроизвольныйКод = "";
				
			ИначеЕсли ДополнительныеПараметры.Свойство("ИмяТипа") И ДополнительныеПараметры.ИмяТипа = "СтрокаКомментарий" Тогда
				
				Объект.Комментарий = "";
				Объект.КомментарийПроизвольныйКод = "";
				
			ИначеЕсли ДополнительныеПараметры.Свойство("ИмяТипа") И ДополнительныеПараметры.ИмяТипа = "Контакт" Тогда
				
				ПараметрыОткрытия = Новый Структура;
				ПараметрыОткрытия.Вставить("УчетнаяЗапись", Объект.эпУчетнаяЗапись);
				ПараметрыОткрытия.Вставить("ГруппаПоУмолчанию",НСтр("ru = 'Кому'"));
				ПараметрыОткрытия.Вставить("ТипКИ", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"));
				
				// Откроем форму для редактирования списка адресатов
				ИмяОбщейФормы = "ОбщаяФорма.АдреснаяКнига";
				
				ОткрытьФорму(ИмяОбщейФормы, ПараметрыОткрытия, ЭтотОбъект);
				
			ИначеЕсли ДополнительныеПараметры.Свойство("ИмяФормы")Тогда
				
				// Сформируем параметры открытия
				ПараметрыОткрытия = Новый Структура;
				ПараметрыОткрытия.Вставить("РежимВыбора",Истина);
				ОткрытьФорму(""+ДополнительныеПараметры.ИмяФормы+".ФормаВыбора",ПараметрыОткрытия,ДополнительныеПараметры.ПродолжитьВыборРеквизита,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				
			КонецЕсли;
		
		ИначеЕсли РезультатОповещения.Значение=ПредопределенноеЗначение("Перечисление.ВидыПравил.РеквизитОбъектаИсточника") Тогда
			
			// Сформируем параметры открытия
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("Источник", Источник);
			ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
			
			// Получаем форму, производим ее настройку и открытие
			ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.ВыборРеквизитаОбъекта", ПараметрыОткрытия,ДополнительныеПараметры.ПродолжитьВыборРеквизита,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		ИначеЕсли РезультатОповещения.Значение=ПредопределенноеЗначение("Перечисление.ВидыПравил.ПроизвольныйКод") Тогда
			
			// Сформируем параметры открытия
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
			ПараметрыОткрытия.Вставить("Текст", ДополнительныеПараметры.ИмяРеквизита);
			
			// Получаем форму, производим ее настройку и открытие
			ОткрытьФорму("Справочник.ДействияНаЗначимыеСобытия.Форма.РедакторВыражений", ПараметрыОткрытия, ДополнительныеПараметры.ПродолжитьВыборРеквизита,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаРезультатаОповещенияВыборРеквизита()

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	ПроизвольныйКод = ЗначениеЗаполнено(Объект.SMSТекстСообщенияПроизвольныйКод);
	
	Если ПроизвольныйКод Тогда
		Элементы.РедакторВыражений.Видимость = Истина;
		Элементы.ГруппаВидТекста.Заголовок = НСтр("ru = 'Произвольный код'");
		Элементы.ПроизвольнаяТемаПисьма.Пометка = Истина;
		Элементы.ТочнаяТемаПисьма.Пометка = Ложь;  
		ТекстСообщения = Объект.SMSТекстСообщенияПроизвольныйКод;
	Иначе
		Элементы.РедакторВыражений.Видимость = Ложь;
		Элементы.ГруппаВидТекста.Заголовок = НСтр("ru = 'Точное значение'");
		Элементы.ПроизвольнаяТемаПисьма.Пометка = Ложь;
		Элементы.ТочнаяТемаПисьма.Пометка = Истина;
		ТекстСообщения = Объект.SMSТекстСообщения;
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Очистить();
	Элементы.Наименование.СписокВыбора.Добавить(
		Справочники.ДействияНаЗначимыеСобытия.ПолучитьНаименованиеПоУмолчанию(Объект)
		, "Автоматическое наименование");

КонецПроцедуры 

#КонецОбласти

#КонецОбласти

