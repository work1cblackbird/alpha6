
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
		
	КонецЕсли;
		
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ОграниченияЗаполненияГруппы");
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ГруппыТоваровОборудования");
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимЗаполненияПриИзменении(Элемент)

	РежимЗаполненияПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура РежимЗаполненияПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	Если НеобходимаОчистка = Истина Тогда
		Справочники.ГруппыТоваровОборудования.РежимЗаполненияПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимЗаполненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	// чистим ТЧ при смене параметра
	НеобходимаОчистка = Ложь;
	Если Объект.РежимЗаполнения <> ВыбранноеЗначение И (Объект.РежимЗаполнения = 3 ИЛИ Объект.РежимЗаполнения = 4) Тогда
		Если Объект.ОграниченияЗаполненияГруппы.Количество() > 0 Тогда
			
			СтандартнаяОбработка = Ложь;
			ПараметрыОбработки = Новый Структура;
			ПараметрыОбработки.Вставить("ВыбранноеЗначение", ВыбранноеЗначение);
			ПараметрыОбработки.Вставить("текущееЗначение", Объект.РежимЗаполнения);
			
			// Формируем описание обработчика перехвата закрытия формы.
			ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыбораЗначенияРежимаЗаполнения", ЭтотОбъект, ПараметрыОбработки);
			
			// Формируем текст вопроса
			ТекстВопроса = НСтр("ru = 'При смене параметра заполнения группы будет очищен список'") + " " + Символы.ПС 
				+ ?(Объект.РежимЗаполнения=3, НСтр("ru = 'типов номенклатуры.'"), НСтр("ru = 'групп номенклатуры.'")) + " " 
				+ "Продолжить?";
			
			// Получаем подтверждение операции от пользователя.
			ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияВыбораЗначенияРежимаЗаполнения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	// Проверяем статус закрытия окна параметров
	Если РезультатОповещения=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		Объект.РежимЗаполнения = ДополнительныеПараметры.ВыбранноеЗначение;
		НеобходимаОчистка = Истина;
		РежимЗаполненияПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаРезультатаОповещенияВыбораЗначенияРежимаЗаполнения()

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	ТипОбъекта = "СправочникСсылка.Номенклатура";
	
	Если Объект.РежимЗаполнения = 3 Тогда
		ТипОбъекта = "СправочникСсылка.ТипыНоменклатуры";
		Элементы.ОграниченияЗаполненияГруппыТипГруппаНоменклатуры.ВыборГруппИЭлементов = ГруппыИЭлементы.Элементы;
	ИначеЕсли Объект.РежимЗаполнения = 4 Тогда
		Элементы.ОграниченияЗаполненияГруппыТипГруппаНоменклатуры.ВыборГруппИЭлементов = ГруппыИЭлементы.Группы;
	КонецЕсли;
		
	// Назначим тип
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип(ТипОбъекта));
	Типы = Новый ОписаниеТипов(МассивТипов);
	Элементы.ОграниченияЗаполненияГруппыТипГруппаНоменклатуры.ОграничениеТипа = Типы;
	
КонецПроцедуры // НастроитьПараметрыВыбораЭлементовФормы()

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	

	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Если Объект.РежимЗаполнения = 4 Тогда
		Элементы.ОграниченияЗаполненияГруппы.Доступность = Истина;
		Элементы.ГруппаОграниченияЗаполненияГруппы.Доступность = Истина;
		Элементы.ГруппаОграниченияЗаполненияГруппы.Заголовок   = НСтр("ru = 'Группы номенклатуры'");
		Элементы.ОграниченияЗаполненияГруппы.ПодчиненныеЭлементы.ОграниченияЗаполненияГруппыТипГруппаНоменклатуры.Заголовок=
			НСтр("ru = 'Группы номенклатуры'");
	ИначеЕсли Объект.РежимЗаполнения = 3 Тогда
		Элементы.ОграниченияЗаполненияГруппы.Доступность = Истина;
		Элементы.ГруппаОграниченияЗаполненияГруппы.Доступность = Истина;
		Элементы.ГруппаОграниченияЗаполненияГруппы.Заголовок   = НСтр("ru = 'Типы номенклатуры'");
		Элементы.ОграниченияЗаполненияГруппы.ПодчиненныеЭлементы.ОграниченияЗаполненияГруппыТипГруппаНоменклатуры.Заголовок=
			НСтр("ru = 'Типы номенклатуры'");
	Иначе
		Элементы.ГруппаОграниченияЗаполненияГруппы.Доступность = Ложь;
		Элементы.ОграниченияЗаполненияГруппы.Доступность       = Ложь;
	КонецЕсли;
	
	// Установим текущее заполнение ячеек.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТоварыВОборудовании.ГруппаТоваров,
	|	КОЛИЧЕСТВО(ТоварыВОборудовании.Номенклатура) КАК Всего
	|ИЗ
	|	РегистрСведений.ТоварыВОборудовании КАК ТоварыВОборудовании
	|ГДЕ
	|	ТоварыВОборудовании.ГруппаТоваров = &ГруппаТоваров
	|СГРУППИРОВАТЬ ПО ТоварыВОборудовании.ГруппаТоваров";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ГруппаТоваров", Объект.Ссылка);
	
	Выборка=Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Элементы.ДекорацияЗаполнениеКоличествоЯчеек  .Заголовок = СокрЛП(Выборка.Всего);
	Иначе
		Элементы.ДекорацияЗаполнениеКоличествоЯчеек  .Заголовок = "0";
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

