// Модуль менеджера справочника "Значимые события"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	Если НЕ Объект.ЭтоГруппа Тогда
		ОбязательныеРеквизиты.Добавить("Источник");
		ОбязательныеРеквизиты.Добавить("Событие");
		ОбязательныеРеквизиты.Добавить("РежимВыполнения");
	КонецЕсли;
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Код");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

#Область ОбработчикиОбновления

// Выполняем замену справочника КлассификаторБанков
//
// Параметры: 
//  Ссылка - СправочникСсылка.ЗначимыеСобытия - ссылка на справочник, в котором необходимо произвести замену
//
// Возвращаемое значение:
//  Булево - результат выполнения запроса
//
Функция ЗаменитьКлассификаторБанков(Ссылка = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Ссылка = Неопределено Тогда 
		Запрос.Текст = ПолучитьТекстЗапроса();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапроса(Истина);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Результат = Запрос.Выполнить();
		Возврат Результат.Пустой();	
	КонецЕсли;
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекущийОбъект 	= Выборка.Ссылка.ПолучитьОбъект();
		
		Для Каждого Строка Из ТекущийОбъект[Выборка.ТЧ] Цикл
			Если ТипЗнч(Строка[Выборка.Реквизит]) = Тип("СправочникСсылка.КлассификаторБанковРФ") Тогда
				Строка[Выборка.Реквизит] = Выборка.Банк;
			КонецЕсли;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ТекущийОбъект);
	КонецЦикла;
				
КонецФункции

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы. 
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует стандартное наименование.
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнении операции.
//
Функция СформироватьНаименованиеПоУмолчанию(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	Наименование = "";
	
	Если ЗначениеЗаполнено(Объект.Источник) И ЗначениеЗаполнено(Объект.Событие) Тогда
		
		ИмяМетаданных = "";
		ИндексТочки = СтрНайти(Объект.Источник.ПолноеИмя, ".");
		Если ИндексТочки > 0 Тогда
			ИмяМетаданных = "" + Лев(Объект.Источник.ПолноеИмя, ИндексТочки-1) + " ";
		КонецЕсли;
		
		Наименование = ""+ ИмяМетаданных + """"+ Объект.Источник.Синоним + """" + " (" + Объект.Событие + ")";
	КонецЕсли;
	
	Возврат Наименование;
	
КонецФункции // СформироватьНаименованиеПоУмолчанию()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапроса(Проверка = Ложь)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗначимыеСобытияУсловия.Ссылка КАК Ссылка,
		|	""Условия"" КАК ТЧ,
		|	""ЗначениеСравнения"" КАК Реквизит,
		|	ЗначимыеСобытияУсловия.ЗначениеСравнения КАК Банк
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Справочник.ЗначимыеСобытия.Условия КАК ЗначимыеСобытияУсловия
		|ГДЕ
		|	ЗначимыеСобытияУсловия.ЗначениеСравнения ССЫЛКА Справочник.КлассификаторБанковРФ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗначимыеСобытияЗначенияСписков.Ссылка,
		|	""ЗначенияСписков"",
		|	""Значение"",
		|	ЗначимыеСобытияЗначенияСписков.Значение
		|ИЗ
		|	Справочник.ЗначимыеСобытия.ЗначенияСписков КАК ЗначимыеСобытияЗначенияСписков
		|ГДЕ
		|	ЗначимыеСобытияЗначенияСписков.Значение ССЫЛКА Справочник.КлассификаторБанковРФ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Ссылка КАК Ссылка,
		|	ВТ.ТЧ КАК ТЧ,
		|	ВТ.Реквизит КАК Реквизит,
		|	ЕСТЬNULL(КлассификаторБанков.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)) КАК Банк
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
		|		ПО ВТ.Банк.Код = КлассификаторБанков.Код
		|			И ЕСТЬNULL(ВТ.Банк.КоррСчет, """") = ЕСТЬNULL(КлассификаторБанков.КоррСчет, """")
		|			И ЕСТЬNULL(ВТ.Банк.СВИФТБИК, """") = ЕСТЬNULL(КлассификаторБанков.СВИФТБИК, """")
		|ГДЕ
		|	ВТ.Ссылка = &Ссылка";

	Если Не Проверка Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ.Ссылка = &Ссылка", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли