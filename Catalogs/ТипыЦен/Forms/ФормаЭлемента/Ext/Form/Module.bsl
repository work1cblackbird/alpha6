///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента справочника "Типы цен"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", "ГлобальныеКоманды");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПроцентыСкидкиНаценкиИндикация();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	    Возврат;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("ТипыЦен");
	
	Для Каждого СтрокаТч Из Объект.ПроцентыСкидкиНаценки Цикл
		СтрокаТч.БазовыйТипЦен = ?(ЗначениеЗаполнено(СтрокаТч.БазовыйТипЦен), СтрокаТч.БазовыйТипЦен, Объект.БазовыйТипЦен);
	КонецЦикла;
	
	ПроцентыСкидкиНаценкиИндикация();
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// для нового документа отменить проверку
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(Объект.БазовыйТипЦен);
		
		Для Каждого СтрокаТЧ Из Объект.ПроцентыСкидкиНаценки Цикл
			МассивПроверки.Добавить(СтрокаТЧ.БазовыйТипЦен);
		КонецЦикла;
		
		МассивПроверки = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивПроверки);
		Для Каждого ЭлементМассива Из МассивПроверки Цикл
			Если ПроверитьКольцевыеСсылки(ЭлементМассива, Объект.Ссылка) Тогда
				ВывестиСообщение(НСтр("ru = 'Ошибка. Тип цен не может зависеть от самого себя.'"));
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура РасчетЦенПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ТипыЦен.РасчетЦенПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура РасчетЦенПриИзменении(Элемент)
	
	РасчетЦенПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура БазовыйТипЦенПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ТипыЦен.БазовыйТипЦенПриИзменении(Объект, ПараметрыДействия);

КонецПроцедуры 

&НаКлиенте
Процедура БазовыйТипЦенПриИзменении(Элемент)
	
	БазовыйТипЦенПриИзмененииНаСервере();

КонецПроцедуры 

&НаКлиенте
Процедура СписокПроцентыСкидкиНаценкиПриИзменении(РезультатЗакрытия, ПараметрОповещения=Неопределено) Экспорт
	
	Если РезультатЗакрытия<> Неопределено Тогда
		Если РезультатЗакрытия.Свойство("ПроцентыСкидкиНаценки") Тогда
			Объект.ПроцентыСкидкиНаценки.Очистить();
			Для Каждого СтрокаТч Из РезультатЗакрытия.ПроцентыСкидкиНаценки Цикл
				НоваяСтрока = Объект.ПроцентыСкидкиНаценки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТч);
			КонецЦикла;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ПроцентыСкидкиНаценкиИндикация();
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокПроцентыСкидкиНаценкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Владелец",Объект);
	ОткрытьФорму("Справочник.ТипыЦен.Форма.ФормаПроцентыСкидкиНаценки",ПараметрыОткрытия,ЭтотОбъект,,,,Новый ОписаниеОповещения("СписокПроцентыСкидкиНаценкиПриИзменении", ЭтотОбъект));	
	
КонецПроцедуры 

&НаСервере
Процедура ВВалютеУчетаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ТипыЦен.ВВалютеУчетаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ВВалютеУчетаПриИзменении(Элемент)
	
	ВВалютеУчетаПриИзмененииНаСервере();

КонецПроцедуры 

&НаСервере
Процедура ЗакупкаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.ТипыЦен.ЗакупкаПриИзменении(Объект, ПараметрыДействия);

КонецПроцедуры 

&НаКлиенте
Процедура ЗакупкаПриИзменении(Элемент)
	
	ЗакупкаПриИзмененииНаСервере();

КонецПроцедуры 

&НаКлиенте
Процедура ДляТоваровПриИзменении(Элемент)
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДляАвтомобилейПриИзменении(Элемент)
	
	Объект.Рассчитывается = НЕ Объект.ДляАвтомобилей;
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
                                                НавигационнаяСсылка = Неопределено,
                                                СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроцентыСкидкиНаценкиИндикация()
	
	СписокПроцентыСкидкиНаценки.Очистить();
	Для Каждого СкидкаНаценка Из Объект.ПроцентыСкидкиНаценки Цикл
			СписокПроцентыСкидкиНаценки.Добавить(,СокрЛП(СкидкаНаценка.ЦеноваяГруппа)
				+" / "+СокрЛП(СкидкаНаценка.БазовыйТипЦен)+" "+Формат(СкидкаНаценка.ПроцентСкидкиНаценки,"ЧДЦ=2; ЧН=0,00"));
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Функция ПроверитьКольцевыеСсылки(Объект, Оригинал)
	
	Если Объект = Оригинал Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого Строка Из Объект.ПроцентыСкидкиНаценки Цикл
		Если Строка.БазовыйТипЦен = Оригинал Тогда
			Возврат Истина;
		ИначеЕсли Строка.БазовыйТипЦен.Рассчитывается Тогда
			Если ПроверитьКольцевыеСсылки(Строка.БазовыйТипЦен, Оригинал) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	// Установим видимость элементов управления
	Элементы.БазовыйТипЦен.Доступность  = Объект.Рассчитывается;
	Элементы.ПроцентСкидкиНаценки.Доступность  = Объект.Рассчитывается;
	Элементы.СписокПроцентыСкидкиНаценки.Доступность  = Объект.Рассчитывается И Объект.ДляТоваров;
	Элементы.Рассчитывается.Доступность = НЕ Объект.ДляАвтомобилей;
	
	Элементы.РегистрироватьЦеныПоПриходу.Доступность  = (НЕ Объект.Рассчитывается) И (Объект.ДляТоваров ИЛИ Объект.ДляАвтомобилей);
	Элементы.ВключатьВПрайсЛист.Доступность           = Объект.ДляТоваров;
	
	Элементы.ВалютаЦены.Доступность = НЕ Объект.ВВалютеУчета;
	Элементы.ВалютаЦены.АвтоОтметкаНезаполненного = НЕ Объект.ВВалютеУчета;
	Элементы.ВалютаЦены.ОтметкаНезаполненного = НЕ Объект.ВВалютеУчета И НЕ ЗначениеЗаполнено(Объект.ВалютаЦены);
	Если НЕ Объект.ВВалютеУчета И НЕ ЗначениеЗаполнено(Объект.ВалютаЦены) И НЕ Элементы.ВалютаЦены.ОтметкаНезаполненного Тогда
		Элементы.ВалютаЦены.ОтметкаНезаполненного = Истина;
	КонецЕсли;
	Если Объект.Рассчитывается И Объект.РегистрироватьЦеныПоПриходу Тогда
		Объект.РегистрироватьЦеныПоПриходу = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
//@skip-warning
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

#КонецОбласти

#КонецОбласти

