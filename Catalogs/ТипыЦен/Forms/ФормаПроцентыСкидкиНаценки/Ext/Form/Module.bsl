///////////////////////////////////////////////////////////////////////////////
// Модуль формы "Проценты скидки/наценки" справочника "Типы цен"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Владелец = Неопределено Тогда
		Отказ = Истина; 
		Возврат;
	КонецЕсли;
	ПроцентСкидкиНаценки = Параметры.Владелец.ПроцентСкидкиНаценки;
	Заголовок = ?(Параметры.Владелец.Ссылка.Наименование = "","",Параметры.Владелец.Ссылка.Наименование +":")
		+ " " + НСтр("ru = 'Проценты скидок/наценок по ценовым групам'");

	Для Каждого СтрокаТч Из Параметры.Владелец.ПроцентыСкидкиНаценки Цикл
		НоваяСтрока = ПроцентыСкидкиНаценки.Добавить();
		НоваяСтрока.НомерСтроки          = СтрокаТч.НомерСтроки;
		НоваяСтрока.ЦеноваяГруппа = СтрокаТч.ЦеноваяГруппа;
		НоваяСтрока.БазовыйТипЦен = СтрокаТч.БазовыйТипЦен;
		НоваяСтрока.ПроцентСкидкиНаценки = СтрокаТч.ПроцентСкидкиНаценки;
	КонецЦикла;
	
КонецПроцедуры  // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте при открытии формы, до показа окна пользователю.
//
// Параметры:
//  Отказ - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ПроцентыСкидкиНаценки");

КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПроцентыСкидкинаценки

// Обработчик события возникающего на клиенте перед началом интерактивного добавления строки.
//
// Параметры:
//  Элемент     - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//  НоваяСтрока          - Булево - Истина, если строка была добавлена или скопирована.
//  Копирование - Булево       - Определяет режим копирования.
//
&НаКлиенте
Процедура ПроцентыСкидкиНаценкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И (НЕ Копирование) Тогда
		ТекСтрока = ПроцентыСкидкиНаценки.НайтиПоИдентификатору(Элемент.ТекущаяСтрока);
		Если ТекСтрока <> Неопределено Тогда 
			ТекСтрока.НомерСтроки = ПроцентыСкидкиНаценки.Количество();
			ТекСтрока.ПроцентСкидкиНаценки = ПроцентСкидкиНаценки;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры // ПроцентыСкидкиНаценкиПриНачалеРедактирования()

// Обработчик события возникающего на клиенте после удаления строки.
//
// Параметры:
//  Элемент - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ПроцентыСкидкиНаценкиПослеУдаления(Элемент)
	
	Для Каждого СтрокаТЧ Из ПроцентыСкидкиНаценки Цикл
		СтрокаТЧ.НомерСтроки = ПроцентыСкидкиНаценки.Индекс(СтрокаТЧ)+1;
	КонецЦикла;
	
КонецПроцедуры // ПроцентыСкидкиНаценкиПослеУдаления()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события возникающего на клиенте при нажатии кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ПроцентыСкидкиНаценки",ПроцентыСкидкиНаценки);
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Производит настройку условного оформления формы.
//
&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Вызываем общий обработчик действия.
	УправлениеДиалогомСправочникаСервер.УстановитьУсловноеОформление(ЭтотОбъект);
	
	// Текст
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПроцентыСкидкиНаценкиЦеноваяГруппа.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПроцентыСкидкиНаценки.ЦеноваяГруппа");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.ЦеновыеГруппы.ПустаяСсылка();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Все'"));
	
КонецПроцедуры // УстановитьУсловноеОформление()

#КонецОбласти

