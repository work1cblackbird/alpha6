
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();	
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	РаботаСФормой.УстановитьДоступностьПоляКодНаФормеСправочника(ЭтотОбъект, Объект);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
		
		ТаблицаВидовРемонта = Документы.ЗаказНаряд.ПолучитьТаблицуВидовРемонтовЗаказНарядов();
		Элементы.ВидРемонта.СписокВыбора.ЗагрузитьЗначения(ТаблицаВидовРемонта.ВыгрузитьКолонку("ВидРемонта"));

	КонецЕсли;
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ВыполнениеСервисныхКампаний");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "Работы");
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "ДиапазоныVIN");
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ПриОткрытии_ФормаДокумента(ЭтотОбъект, Отказ);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормыКлиент.ОбработкаОповещения_ФормаДокумента(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец АльфаАвто.СобытияОбъектов

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	СвязанныеРаботы.ЗаполнитьДоступностьРеквизитаВспомогательнойРаботы(Объект.Автоработы);
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПриЧтенииНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФормойКлиент.ЗамерВремениЗапись("СервисныеКампании");
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПередЗаписьюНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды  
	
	// Обновляем отображение элементов формы
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// АльфаАвто.СобытияОбъектов
	СобытияОбъектовФормы.ПослеЗаписиНаСервере_ФормаДокумента(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец АльфаАвто.СобытияОбъектов
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	
	МодельПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура МодельПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	Справочники.СервисныеКампании.МодельПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантКомплектацииПриИзменении(Элемент)
	
	ВариантКомплектацииПриИзмененииНаСервере();
	
КонецПроцедуры // ВариантКомплектацииПриИзменении()

&НаСервере
Процедура ВариантКомплектацииПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	// Вызываем обработчик изменения данных объекта
	Справочники.СервисныеКампании.ВариантКомплектацииПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // ВариантКомплектацииПриИзмененииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРаботы

&НаКлиенте
Процедура РаботыАвтоработаПриИзменении(Элемент)
	
	СвязанныеРаботыКлиент.ОбработатьИзменениеСвязаннойРаботы(Элементы.Работы.ТекущиеДанные, "Авторабота");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьСписокVIN(Команда)
	
	// Форма загрузки списка VIN из внешних источников
	Если Объект.Ссылка.Пустая() Тогда
			
		// Формируем описание обработчика перехвата закрытия формы
		ОбработчикВопроса = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтотОбъект, "ЗагрузитьСписокVIN");
		
		// Формируем текст вопроса
		ТекстВопроса = НСтр("ru = 'Элемент не записан, записать?'");
		
		// Получаем подтверждение операции от пользователя
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		// Форма загрузки списка VIN из внешних источников
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("СсылкаСервиснаяКампания", Объект.Ссылка);
		ПараметрыФормы.Вставить("БлокироватьОтИзменений", Ложь);
		
		ОбработчикОповещения = Новый ОписаниеОповещения("РезультатОповещенияЗагрузкиVIN", ЭтотОбъект);
		
		ОткрытьФорму("Обработка.ЗагрузкаДанныхСервиснойКампании.Форма.ФормаЗагрузки", ПараметрыФормы, ЭтотОбъект,,,, ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РезультатОповещенияЗагрузкиVIN(Результат, ДополниьельныеПараметры = Неопределено) Экспорт 
	
	Элементы.ВыполнениеСервисныхКампаний.Обновить();
	
КонецПроцедуры 

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Обновим отбор
	ВыполнениеСервисныхКампаний.Отбор.Элементы.Очистить();
	ПолеОтбораВыполнениеСервисныхКампаний = ВыполнениеСервисныхКампаний.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ПолеОтбораВыполнениеСервисныхКампаний.ЛевоеЗначение  = ВыполнениеСервисныхКампаний.Отбор.ДоступныеПоляОтбора.Элементы.Найти("СервиснаяКампания").Поле;
	ПолеОтбораВыполнениеСервисныхКампаний.ПравоеЗначение = Объект.Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	// Вызываем общий обработчик действия
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Модель) ИЛИ Объект.Модель.ЭтоГруппа Тогда
		Элементы.ВариантКомплектации.Доступность=Ложь;
	Иначе
		Элементы.ВариантКомплектации.Доступность=Истина;
	КонецЕсли; 
	Если Объект.Ссылка = Справочники.СервисныеКампании.ПустаяСсылка() Тогда
		Элементы.ВыполнениеСервисныхКампаний.Доступность = Ложь;
	Иначе
		Элементы.ВыполнениеСервисныхКампаний.Доступность = Истина;
	КонецЕсли;
	
	// Если объект не записан убираем доступность для вкладок
	НовыйОбъект = ЗначениеЗаполнено(Объект.Ссылка);
	Элементы.СтраницаАвтомобили.Доступность = НовыйОбъект;
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// ВспомогательнаяАвторабота - доступность 
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РаботыВспомогательнаяАвторабота.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Автоработы.ДоступностьРеквизитаВспомогательнойРаботы");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Ложь);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РаботыВспомогательнаяАвторабота.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Автоработы.ДоступностьРеквизитаВспомогательнойРаботы");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры // УстановитьУсловноеОформление()

&НаСервере
Процедура ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры=Неопределено)
	
	
	Если ДополнительныеПараметры = "ЗагрузитьСписокVIN" Тогда
		
		Попытка
			Записать();
		Исключение
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru= 'Ошибка записи. Возможно имя (идентификатор) не уникально.'"));
			Возврат;
		КонецПопытки;
		Если Объект.Ссылка.Пустая() Тогда
			Возврат;
		КонецЕсли;
		
		РезультатОповещения = "ЗагрузитьСписокVIN";
		
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	
	Если ДополнительныеПараметры = "ЗагрузитьСписокVIN" Тогда
		
		Если РезультатОповещения = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		РезультатОповещения = Неопределено;
		
	КонецЕсли;
	
	ОбработкаРезультатаОповещенияНаСервере(РезультатОповещения, ДополнительныеПараметры);
	ОбработкаРезультатаВыполненияДействия(РезультатОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
		
	Если ПараметрыДействия = "ЗагрузитьСписокVIN" Тогда
		ПараметрыОткрытия = Новый Структура;
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("СсылкаСервиснаяКампания",Объект.Ссылка);
		ПараметрыОткрытия.Вставить("ЗначениеЗаполнения", ПараметрыЗаполнения);
		ОткрытьФорму("Обработка.ЗагрузкаДанныхСервиснойКампании.Форма.ФормаЗагрузки",ПараметрыОткрытия,ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти