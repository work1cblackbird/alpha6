
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если РаботаСФормой.МожноУстановитьОтборПоВладельцу(Параметры) Тогда
		
		РаботаСФормой.УстановитьОтборПоВладельцуНаДерево(Дерево, Параметры.Отбор);
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	СкладКомпании = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры.Отбор, "Владелец", Неопределено);
	Номенклатура  = Параметры.Номенклатура;
	МоментВремени = МоментВремениОстатков(Параметры);
	
	РаботаСФормой.СкрытьЭлементыНедоступныеПоКлючу(ЭтотОбъект);
	
	РаботаСФормой.УстановитьРежимВыбора(ЭтотОбъект, Элементы.Список, Параметры);
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
	ИспользоватьОрдерныйСклад = ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныйСклад");
	НастроитьФорму(Параметры);
	
	Если ИспользоватьОрдерныйСклад Тогда
		
		НастроитьСписок();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	РаботаСФормойКлиент.УстановитьТекущуюСтрокуНаНовыйОбъект(Элементы.Список, НовыйОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантПодбораПриИзменении(Элемент)

	НастроитьСписок();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Группа Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеСправочникаЯчейкиХранения");
		
	Иначе
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеФормыСправочникаЯчейкиХранения");
		
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если
		ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Элемент.ТекущиеДанные, "ЭтоГруппа")
		И Элемент.ТекущиеДанные.ЭтоГруппа
	Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// ОценкаПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеФормыСправочникаЯчейкиХранения");
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьСкрытьДерево(Команда)
	
	ВидимостьДерева = Не ВидимостьДерева;	
	РаботаСФормойКлиентСервер.УстановитьВидимостьДереваИерархии(
		РаботаСФормойКлиентСервер.НовоеОписаниеДереваИерархии(Элементы),
		ВидимостьДерева
	);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ВыделитьУдаленныеЯчейки();
	
КонецПроцедуры

&НаСервере
Процедура ВыделитьУдаленныеЯчейки()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.ПометкаУдаления");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	
КонецПроцедуры

&НаСервере
Функция МоментВремениОстатков(Параметры)
	
	Если Параметры.Ссылка = Неопределено Или Не ОбщегоНазначения.ЭтоДокумент(Параметры.Ссылка.Метаданные()) Тогда
		
		Возврат Новый Граница(Новый МоментВремени(КонецДня(ТекущаяДатаСеанса())), ВидГраницы.Исключая);
		
	Иначе
		
		Если Параметры.Ссылка.Пустая() Тогда
			
			ДатаДокумента = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры.Отбор, "Дата", ТекущаяДатаСеанса());
			Возврат Новый Граница(Новый МоментВремени(КонецДня(ДатаДокумента)), ВидГраницы.Исключая);
			
		Иначе
			
			Возврат Новый Граница(Параметры.Ссылка.МоментВремени(), ВидГраницы.Исключая);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура НастроитьФорму(ПараметрыФормы)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВариантПодбора", "Видимость",
		ИспользоватьОрдерныйСклад);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Остаток", "Видимость",
		ИспользоватьОрдерныйСклад);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаИспользования", "Видимость",
		ИспользоватьОрдерныйСклад);

	Элементы.ВариантПодбора.СписокВыбора.Очистить();
	
	Если ЗначениеЗаполнено(СкладКомпании) Тогда
		
		Элементы.ВариантПодбора.СписокВыбора.Добавить("ВсеЯчейки", НСтр("ru = 'Все ячейки'"));
		Элементы.ВариантПодбора.СписокВыбора.Добавить("СвободныеЯчейки", НСтр("ru = 'Свободные'"));
		
		Если ЗначениеЗаполнено(Номенклатура) И Параметры.ФильтрПоОстатку Тогда
			
			Элементы.ВариантПодбора.СписокВыбора.Добавить("ИмеетсяОстаток", НСтр("ru = 'С остатком'"));
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Номенклатура) И Параметры.ФильтрПоИспользуемымЯчейкам Тогда
			
			Элементы.ВариантПодбора.СписокВыбора.Добавить("РанееИспользуемые", НСтр("ru = 'Уже использовались'"));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСписок()
	
	Если Не ЗначениеЗаполнено(СкладКомпании) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ВариантПодбора = "" Тогда
		
		ВариантПодбора = "ВсеЯчейки";
		
	КонецЕсли;
	
	Элементы.Список.Отображение          = ОтображениеТаблицы.ИерархическийСписок;
	Элементы.Остаток.Видимость           = Ложь;
	Элементы.ДатаИспользования.Видимость = Ложь;
	
	Если ВариантПодбора = "ВсеЯчейки" Тогда
		
		Список.ТекстЗапроса = ТекстЗапросаВсеЯчейки();
		
	ИначеЕсли ВариантПодбора = "СвободныеЯчейки" Тогда
		
		Список.ТекстЗапроса = ТекстЗапросаСвободныеЯчейки();
		Список.Параметры.УстановитьЗначениеПараметра("СкладКомпании", СкладКомпании);
		Список.Параметры.УстановитьЗначениеПараметра("МоментВремени", МоментВремени.Значение);
		
	ИначеЕсли ВариантПодбора = "РанееИспользуемые" Тогда
		
		Элементы.ДатаИспользования.Видимость = Истина;
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
		
		Список.ТекстЗапроса = ТекстЗапросаРанееИспользуемые();
		Список.Параметры.УстановитьЗначениеПараметра("Номенклатура",  Номенклатура);
		Список.Параметры.УстановитьЗначениеПараметра("СкладКомпании", СкладКомпании);
		Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", МоментВремени.Значение);
		Список.Параметры.УстановитьЗначениеПараметра("ВидДвижения",   ВидДвиженияНакопления.Приход);
		
	ИначеЕсли ВариантПодбора = "ИмеетсяОстаток" Тогда
		
		Элементы.Остаток.Видимость  = Истина;
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
		
		Список.ТекстЗапроса = ТекстЗапросаИмеетсяОстаток();
		Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);
		Список.Параметры.УстановитьЗначениеПараметра("СкладКомпании", СкладКомпании);
		Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", МоментВремени.Значение);
		
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаВсеЯчейки()
	
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ЯчейкиХранения.Ссылка,
					|	ЯчейкиХранения.ПометкаУдаления,
					|	ЯчейкиХранения.Владелец,
					|	ЯчейкиХранения.Родитель,
					|	ЯчейкиХранения.ЭтоГруппа,
					|	ЯчейкиХранения.Код,
					|	ЯчейкиХранения.ДлинаЯчейки,
					|	ЯчейкиХранения.ШиринаЯчейки,
					|	ЯчейкиХранения.КоординатаX,
					|	ЯчейкиХранения.КоординатаY,
					|	ЯчейкиХранения.Уровень,
					|	ЯчейкиХранения.ЦветГруппы,
					|	ЯчейкиХранения.Недоступна,
					|	ЯчейкиХранения.ДополнительныеРеквизиты,
					|	ЯчейкиХранения.Предопределенный,
					|	ЯчейкиХранения.ИмяПредопределенныхДанных,
					|	"""" КАК ДатаИспользования,
					|	0 КАК Остаток
					|ИЗ
					|	Справочник.ЯчейкиХранения КАК ЯчейкиХранения";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаСвободныеЯчейки()
	
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ЯчейкиХранения.Ссылка,
					|	ЯчейкиХранения.ПометкаУдаления,
					|	ЯчейкиХранения.Владелец,
					|	ЯчейкиХранения.Родитель,
					|	ЯчейкиХранения.ЭтоГруппа,
					|	ЯчейкиХранения.Код,
					|	ЯчейкиХранения.ДлинаЯчейки,
					|	ЯчейкиХранения.ШиринаЯчейки,
					|	ЯчейкиХранения.КоординатаX,
					|	ЯчейкиХранения.КоординатаY,
					|	ЯчейкиХранения.Уровень,
					|	ЯчейкиХранения.ЦветГруппы,
					|	ЯчейкиХранения.Недоступна,
					|	ЯчейкиХранения.ДополнительныеРеквизиты,
					|	ЯчейкиХранения.Предопределенный,
					|	ЯчейкиХранения.ИмяПредопределенныхДанных,
					|	"""" КАК ДатаИспользования,
					|	0 КАК Остаток
					|ИЗ
					|	Справочник.ЯчейкиХранения КАК ЯчейкиХранения
					|ГДЕ
					|	НЕ ЯчейкиХранения.Ссылка В
					|				(ВЫБРАТЬ
					|					ОстаткиТоваровОрдерныйСкладОстатки.Ячейка
					|				ИЗ
					|					РегистрНакопления.ОстаткиТоваровОрдерныйСклад.Остатки(&МоментВремени, Ячейка.Владелец = &СкладКомпании) КАК ОстаткиТоваровОрдерныйСкладОстатки)";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаРанееИспользуемые()
	
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ЯчейкиХранения.Ссылка,
					|	ЯчейкиХранения.ПометкаУдаления,
					|	ЯчейкиХранения.Владелец,
					|	ЯчейкиХранения.Родитель,
					|	ЯчейкиХранения.ЭтоГруппа,
					|	ЯчейкиХранения.Код,
					|	ЯчейкиХранения.ДлинаЯчейки,
					|	ЯчейкиХранения.ШиринаЯчейки,
					|	ЯчейкиХранения.КоординатаX,
					|	ЯчейкиХранения.КоординатаY,
					|	ЯчейкиХранения.Уровень,
					|	ЯчейкиХранения.ЦветГруппы,
					|	ЯчейкиХранения.Недоступна,
					|	ЯчейкиХранения.ДополнительныеРеквизиты,
					|	ЯчейкиХранения.Предопределенный,
					|	ЯчейкиХранения.ИмяПредопределенныхДанных,
					|	ВложенныйЗапрос.Период КАК ДатаИспользования,
					|	0 КАК Остаток
					|ИЗ
					|	(ВЫБРАТЬ
					|		ЯчейкиХранения.Ссылка КАК Ссылка,
					|		МАКСИМУМ(ОстаткиТоваровОрдерныйСклад.Период) КАК Период
					|	ИЗ
					|		РегистрНакопления.ОстаткиТоваровОрдерныйСклад КАК ОстаткиТоваровОрдерныйСклад
					|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЯчейкиХранения КАК ЯчейкиХранения
					|			ПО ОстаткиТоваровОрдерныйСклад.Ячейка = ЯчейкиХранения.Ссылка
					|ГДЕ
					|	ОстаткиТоваровОрдерныйСклад.СкладКомпании = &СкладКомпании
					|	И ОстаткиТоваровОрдерныйСклад.Номенклатура = &Номенклатура
					|	И ОстаткиТоваровОрдерныйСклад.ВидДвижения = &ВидДвижения
					|	И ОстаткиТоваровОрдерныйСклад.МоментВремени < &ДатаОкончания
					|	
					|	СГРУППИРОВАТЬ ПО
					|		ЯчейкиХранения.Ссылка) КАК ВложенныйЗапрос
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЯчейкиХранения КАК ЯчейкиХранения
					|		ПО ВложенныйЗапрос.Ссылка = ЯчейкиХранения.Ссылка";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаИмеетсяОстаток()
	
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ЯчейкиХранения.Ссылка,
					|	ЯчейкиХранения.ПометкаУдаления,
					|	ЯчейкиХранения.Владелец,
					|	ЯчейкиХранения.Родитель,
					|	ЯчейкиХранения.ЭтоГруппа,
					|	ЯчейкиХранения.Код,
					|	ЯчейкиХранения.ДлинаЯчейки,
					|	ЯчейкиХранения.ШиринаЯчейки,
					|	ЯчейкиХранения.КоординатаX,
					|	ЯчейкиХранения.КоординатаY,
					|	ЯчейкиХранения.Уровень,
					|	ЯчейкиХранения.ЦветГруппы,
					|	ЯчейкиХранения.Недоступна,
					|	ЯчейкиХранения.ДополнительныеРеквизиты,
					|	ЯчейкиХранения.Предопределенный,
					|	ЯчейкиХранения.ИмяПредопределенныхДанных,
					|	"""" КАК ДатаИспользования,
					|	ОстаткиТоваровОрдерныйСкладОстатки.КоличествоОстаток КАК Остаток
					|ИЗ
					|	РегистрНакопления.ОстаткиТоваровОрдерныйСклад.Остатки(
					|			&ДатаОкончания,
					|			Номенклатура = &Номенклатура
					|				И Ячейка.Владелец = &СкладКомпании) КАК ОстаткиТоваровОрдерныйСкладОстатки
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЯчейкиХранения КАК ЯчейкиХранения
					|		ПО ОстаткиТоваровОрдерныйСкладОстатки.СкладКомпании = ЯчейкиХранения.Владелец
					|			И ОстаткиТоваровОрдерныйСкладОстатки.Ячейка = ЯчейкиХранения.Ссылка";
	
КонецФункции

#КонецОбласти
