

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормой.СкрытьЭлементыНедоступныеПоКлючу(ЭтотОбъект);
	РаботаСФормой.УстановитьРежимВыбора(ЭтотОбъект, Элементы.Список, Параметры);
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	РаботаСФормой.УстановитьВидимостьКомандСоздатьПоПараметру(ЭтотОбъект);
	
	// РасширеннаяИнформация
	ОписаниеЭлементов = Новый Структура(
		"Поле,КомандаПереключатель",
		Элементы.РасширеннаяИнформация,
		Элементы.ПоказатьРасширеннуюИнформацию
	);
	РасширеннаяИнформацияВызовСервера.ПриСозданииНаСервере(ОписаниеЭлементов);
	// Конец РасширеннаяИнформация
	
	УправлениеДиалогомНаСервере();
	
	ЗаполнитьВидыДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	РаботаСФормойКлиент.УстановитьТекущуюСтрокуНаНовыйОбъект(Элементы.Список, НовыйОбъект);

КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)

	РасширеннаяИнформацияВызовСервера.ПриСохраненииДанныхВНастройкахНаСервере(ЭтотОбъект, Настройки);
		
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	РасширеннаяИнформацияВызовСервера.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФильтрПоВидуДокументаПриИзменении(Элемент)
	
	Использование = Истина;
	
	Если НЕ ЗначениеЗаполнено(ФильтрПоВидуДокумента) Тогда
		
		Использование = Ложь;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"ХозОперация",
		ХозОперацииПоВидуДокумента(ФильтрПоВидуДокумента),
		ВидСравненияКомпоновкиДанных.ВСписке,
		,
		Использование,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрПоДатеДокументаПриИзменении(Элемент)
	
	Использование = Истина;
	
	Если НЕ ЗначениеЗаполнено(ФильтрПоДатеДокумента) Тогда
		
		Использование = Ложь;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"ДатаОтбор",
		НачалоДня(ФильтрПоДатеДокумента),
		ВидСравненияКомпоновкиДанных.Равно,
		"Дата",
		Использование,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрПоСостояниюПриИзменении(Элемент)
	
	Использование = Истина;
	
	Если НЕ ЗначениеЗаполнено(ФильтрПоСостоянию) Тогда
		
		Использование = Ложь;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Статус",
		ФильтрПоСостоянию,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Использование,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрЕстьОшибкиПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"ОписаниеОшибки",
		,
		ВидСравненияКомпоновкиДанных.Заполнено,
		,
		ФильтрЕстьОшибки,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
    // РасширеннаяИнформация
    РасширеннаяИнформацияКлиент.НачатьОбновление(ЭтотОбъект);
    // Конец РасширеннаяИнформация

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИсторияИзменений(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		"Обработка.ЖурналВерсийОбъектов.Форма",
		Новый Структура("Ссылка", ТекущиеДанные.Ссылка),
		ЭтотОбъект,
		ТекущиеДанные.Ссылка
	);
	
КонецПроцедуры

// РасширеннаяИнформация
&НаКлиенте
Процедура ПоказатьРасширеннуюИнформацию(Команда)
	
	РасширеннаяИнформацияКлиент.ПоказатьРасширеннуюИнформацию(ЭтотОбъект);

КонецПроцедуры
// Конец РасширеннаяИнформация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИдентификаторДокумента",
		"Видимость",
		Константы.РежимОбменаСЧестнымЗнаком.Получить()
			= ПредопределенноеЗначение("Перечисление.СпособыОбменаСЧестнымЗнаком.ЧерезAPI")
	);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыДокументов()
	
	СписокВыбора = Элементы.ФильтрПоВидуДокумента.СписокВыбора;
	СписокВыбора.Очистить();
	
	СписокВыбора.Добавить("", НСтр("ru = 'Все'"));
	СписокВыбора.Добавить(
		Метаданные.Документы.ВводВОборотКодовМаркировки.Имя,
		Метаданные.Документы.ВводВОборотКодовМаркировки.Синоним
		);
	СписокВыбора.Добавить(
		Метаданные.Документы.ВозвратВОборотКодовМаркировки.Имя,
		Метаданные.Документы.ВозвратВОборотКодовМаркировки.Синоним
	);
	СписокВыбора.Добавить(
		Метаданные.Документы.ВыводИзОборотаКодовМаркировки.Имя,
		Метаданные.Документы.ВыводИзОборотаКодовМаркировки.Синоним
	);
	СписокВыбора.Добавить(
		Метаданные.Документы.ЗаказКодовМаркировки.Имя,
		Метаданные.Документы.ЗаказКодовМаркировки.Синоним
	);
	СписокВыбора.Добавить(
		Метаданные.Документы.ОтгрузкаТоваровКодовМаркировки.Имя,
		Метаданные.Документы.ОтгрузкаТоваровКодовМаркировки.Синоним
	);
	СписокВыбора.Добавить(
		Метаданные.Документы.Перемаркировка.Имя,
		Метаданные.Документы.Перемаркировка.Синоним
	);
	СписокВыбора.Добавить(
		Метаданные.Документы.СписаниеКодовМаркировки.Имя,
		Метаданные.Документы.СписаниеКодовМаркировки.Синоним
	);
	СписокВыбора.Добавить(
		Метаданные.Документы.ОтчетОНанесенииКодовМаркировки.Имя,
		Метаданные.Документы.ОтчетОНанесенииКодовМаркировки.Синоним
	);
	
	СписокВыбора = Элементы.ФильтрПоСостоянию.СписокВыбора;
	СписокВыбора.Добавить(Перечисления.СтатусыДокументовМаркировки.ПустаяСсылка(), "Все");
	Для Каждого Статус Из Перечисления.СтатусыДокументовМаркировки Цикл
		СписокВыбора.Добавить(Статус);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ХозОперацииПоВидуДокумента(ВидДокумента)
	
	Если НЕ ЗначениеЗаполнено(ВидДокумента) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозОперации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ХозОперации КАК ХозОперации
	|ГДЕ
	|	ХозОперации.Родитель = &Родитель
	|	И ХозОперации.ПометкаУдаления = ЛОЖЬ
	|	И ХозОперации.ЭтоГруппа = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Родитель", Справочники.ХозОперации["Документ_" + ВидДокумента]);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
    
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
    
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
    
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
    
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиАльфаАвто

// РасширеннаяИнформация
&НаКлиенте
Процедура РасширеннаяИнформацияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
		
	КонтекстНажатия = РасширеннаяИнформацияКлиент.НовыйКонтекстНажатия(ЭтотОбъект, Элементы.Список);
	КонтекстНажатия.ЭтоЖурнал = Истина;
	РасширеннаяИнформацияКлиент.Нажатие(КонтекстНажатия, ДанныеСобытия, СтандартнаяОбработка);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьРасширеннуюИнформацию()
	
	Контекст = РасширеннаяИнформацияКлиент.НовыйКонтекстОбновления();
	Контекст.ПолеОтображаетсяНаФорме = Элементы.РасширеннаяИнформация.Видимость;
	Контекст.ОбъектДляОбновления = Элементы.Список.ТекущаяСтрока;
    РасширеннаяИнформация = РасширеннаяИнформацияКлиент.СформироватьРасширеннуюИнформациюОбОбъекте(Контекст);
    
КонецПроцедуры
// Конец РасширеннаяИнформация

#Область ПечатьРеестра

&НаКлиенте
Процедура Подключаемый_ОбработкаКомандыПечатиРеестра(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ОбработкаКомандыПечатиРеестраНаСервере(ПараметрыВыполнения, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаКомандыПечатиРеестраНаСервере(ПараметрыВыполнения, ДополнительныеПараметры)
	
	ПечатьРеестраДокументов.ПолучитьНастройкиСКД(ЭтотОбъект.Элементы.Список, ПараметрыВыполнения);	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти
