
#Область ПрограммныйИнтерфейс

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Возврат вариантов отчетов автора
//
// Параметры:
//  КлючОтчета - СправочникСсылка.ИдентификаторыОбъектовМетаданных
//             - СправочникСсылка.ИдентификаторыОбъектовРасширений
//             - СправочникСсылка.ДополнительныеОтчетыИОбработки
//             - Строка
//  Автор - СправочникСсылка.Пользователи
//        - СправочникСсылка.ВнешниеПользователи
//        - УникальныйИдентификатор
//
// Возвращаемое значение:
//  - Неопределено
//  - ТаблицаЗначений:
//      * КлючВарианта - Строка
//      * Наименование - Строка
//
Функция ВариантыОтчетовАвтора(КлючОтчета, Автор) Экспорт
	
	Если ТипЗнч(КлючОтчета) = Тип("Строка") Тогда
		ОтчетИнформация = ВариантыОтчетов.ИнформацияОбОтчете(КлючОтчета, Истина);
		Отчет = ОтчетИнформация.Отчет;
	Иначе
		Отчет = КлючОтчета;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Варианты.КлючВарианта,
	|	Варианты.Наименование
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК Варианты
	|ГДЕ
	|	Варианты.Отчет = &Отчет
	|	И Варианты.ПометкаУдаления = ЛОЖЬ
	|	И Варианты.Пользовательский = ИСТИНА
	|	И (
	|		Варианты.Автор = &Автор
	|		Варианты.Автор.ИдентификаторПользователяИБ = &GUID
	|		ИЛИ Варианты.ТипДоступа = ЗНАЧЕНИЕ(Перечисление.ТипыДоступаКВариантуОтчета.БезОграничения)
	|		ИЛИ (Варианты.ТипДоступа = ЗНАЧЕНИЕ(Перечисление.ТипыДоступаКВариантуОтчета.ПоПользователю) И Варианты.ОбъектДоступа = &Автор Варианты.ОбъектДоступа.ИдентификаторПользователяИБ = &GUID) ИЛИ 
	|			(Варианты.ТипДоступа = ЗНАЧЕНИЕ(Перечисление.ТипыДоступаКВариантуОтчета.ПоПодразделениюКомпании) И Варианты.ОбъектДоступа = &ПодразделениеКомпании) ИЛИ 
	|			(Варианты.ТипДоступа = ЗНАЧЕНИЕ(Перечисление.ТипыДоступаКВариантуОтчета.ПоГруппеПользователей) И Варианты.ОбъектДоступа В 
	|		(ВЫБРАТЬ
	|			ГруппыПользователейСостав.Ссылка
	|		ИЗ
	|			Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|		ГДЕ
	|			ГруппыПользователейСостав.Пользователь = &Автор
	|			ГруппыПользователейСостав.Пользователь.ИдентификаторПользователяИБ = &GUID)))
	|УПОРЯДОЧИТЬ ПО
	|	Варианты.Наименование");
	Запрос.УстановитьПараметр("Отчет", Отчет);
	Запрос.УстановитьПараметр("ПодразделениеКомпании", ПараметрыСеанса.ПодразделениеКомпании);
	
	Если Автор = "" Тогда
		Автор = Пользователи.СсылкаНеуказанногоПользователя();
	ИначеЕсли Автор = Неопределено Тогда
		Автор = Пользователи.АвторизованныйПользователь();
	КонецЕсли;
	
	Если ТипЗнч(Автор) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Запрос.УстановитьПараметр("Автор", Автор);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Варианты.Автор.ИдентификаторПользователяИБ = &GUID", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГруппыПользователейСостав.Пользователь.ИдентификаторПользователяИБ = &GUID", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Варианты.ОбъектДоступа.ИдентификаторПользователяИБ = &GUID", "");
	Иначе
		Если ТипЗнч(Автор) = Тип("УникальныйИдентификатор") Тогда
			ИдентификаторПользователя = Автор;
		Иначе
			Если ТипЗнч(Автор) = Тип("Строка") Тогда
				
				УстановитьПривилегированныйРежим(Истина);
				ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(Автор);
				УстановитьПривилегированныйРежим(Ложь);
				
				Если ПользовательИБ = Неопределено Тогда
					Возврат Неопределено;
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(Автор) = Тип("ПользовательИнформационнойБазы") Тогда
				
				ПользовательИБ = Автор;
			Иначе
				Возврат Неопределено;
			КонецЕсли;
			
			ИдентификаторПользователя = ПользовательИБ.УникальныйИдентификатор;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("GUID", ИдентификаторПользователя);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Варианты.Автор = &Автор", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГруппыПользователейСостав.Пользователь = &Автор", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Варианты.ОбъектДоступа = &Автор", "");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Получаем настройки отчета
// 
// Параметры:
//  КлючОтчета - СправочникСсылка.ИдентификаторыОбъектовМетаданных
//             - СправочникСсылка.ИдентификаторыОбъектовРасширений
//             - СправочникСсылка.ДополнительныеОтчетыИОбработки
//             - Строка
//  КлючВарианта - Неопределено, Строка - Ключ удаляемых настроек.
//      	   - Неопределено - Удаляются все варианты отчета.
//      	   - Строка       - Ключ варианта отчета.
// 
// Возвращаемое значение:
//   НастройкиОтчета - возвращает настройки отчета.
//
Функция ПолучитьНастройки(КлючОтчета, КлючВарианта) Экспорт
	
	Результат = Неопределено;
	
	Если Не ВариантыОтчетовПовтИсп.ПравоЧтения() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ТипЗнч(КлючОтчета) = Тип("Строка") Тогда
		ОтчетИнформация = ВариантыОтчетов.ИнформацияОбОтчете(КлючОтчета);
		Если ЗначениеЗаполнено(ОтчетИнформация.ТекстОшибки) Тогда
			ВызватьИсключение ОтчетИнформация.ТекстОшибки;
		КонецЕсли;
		ОтчетСсылка = ОтчетИнформация.Отчет;
	Иначе
		ОтчетСсылка = КлючОтчета;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВариантыОтчетов.Настройки
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.Отчет = &Отчет
	|	И ВариантыОтчетов.КлючВарианта = &КлючВарианта";
	Запрос.УстановитьПараметр("Отчет",        ОтчетСсылка);
	Запрос.УстановитьПараметр("КлючВарианта", КлючВарианта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Настройки.Получить();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Получаем вид периода 
//
// Параметры:
//   КлючОтчета - Неопределено, Строка - Ключ объекта настройки.
//       - Неопределено - Удаляются настройки всех отчетов.
//       - Строка       - Полное имя отчета с точкой.
//   КлючВарианта - Неопределено, Строка - Ключ удаляемых настроек.
//       - Неопределено - Удаляются все варианты отчета.
//       - Строка       - Ключ варианта отчета.
//
// Возвращаемое значение:
//  Строка, Неопределено - вид периода.
//
Функция ПолучитьВидПериода(КлючОтчета, КлючВарианта) Экспорт
	
	Результат = Неопределено;
	
	Если Не ВариантыОтчетовПовтИсп.ПравоЧтения() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ТипЗнч(КлючОтчета) = Тип("Строка") Тогда
		ОтчетИнформация = ВариантыОтчетов.ИнформацияОбОтчете(КлючОтчета);
		Если ТипЗнч(ОтчетИнформация.ТекстОшибки) = Тип("Строка")
			И НЕ ПустаяСтрока(ОтчетИнформация.ТекстОшибки) Тогда
			ВызватьИсключение ОтчетИнформация.ТекстОшибки;
		КонецЕсли;
		ОтчетСсылка = ОтчетИнформация.Отчет;
	Иначе
		ОтчетСсылка = КлючОтчета;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВариантыОтчетов.ВидПериода
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.Отчет = &Отчет
	|	И ВариантыОтчетов.КлючВарианта = &КлючВарианта";
	Запрос.УстановитьПараметр("Отчет",        ОтчетСсылка);
	Запрос.УстановитьПараметр("КлючВарианта", КлючВарианта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.ВидПериода;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Результат = "Произвольный";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Получаем период
//
// Параметры:
//   КлючОтчета - Неопределено, Строка - Ключ объекта настройки.
//       - Неопределено - Удаляются настройки всех отчетов.
//       - Строка       - Полное имя отчета с точкой.
//   КлючВарианта - Неопределено, Строка - Ключ удаляемых настроек.
//       - Неопределено - Удаляются все варианты отчета.
//       - Строка       - Ключ варианта отчета.
//
// Возвращаемое значение:
//  Структура:
//   * НачалоПериода - Дата - дата начала периода
//   * КонецПериода  - Дата - дата окончания периода.
//
Функция ПолучитьПериод(КлючОтчета, КлючВарианта) Экспорт
	
	Результат = Новый Структура("НачалоПериода,КонецПериода");
	
	Если Не ВариантыОтчетовПовтИсп.ПравоЧтения() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ТипЗнч(КлючОтчета) = Тип("Строка") Тогда
		ОтчетИнформация = ВариантыОтчетов.ИнформацияОбОтчете(КлючОтчета);
		Если ЗначениеЗаполнено(ОтчетИнформация.ТекстОшибки) Тогда
			ВызватьИсключение ОтчетИнформация.ТекстОшибки;
		КонецЕсли;
		ОтчетСсылка = ОтчетИнформация.Отчет;
	Иначе
		ОтчетСсылка = КлючОтчета;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВариантыОтчетов.НачалоПериода КАК НачалоПериода,
	|	ВариантыОтчетов.КонецПериода КАК КонецПериода
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.Отчет = &Отчет
	|	И ВариантыОтчетов.КлючВарианта = &КлючВарианта";
	Запрос.УстановитьПараметр("Отчет",        ОтчетСсылка);
	Запрос.УстановитьПараметр("КлючВарианта", КлючВарианта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат,Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Пытаемся найти среди доступных вариантов помеченный как "Основной"
// - Не нашли, вспоминаем какой вариант использовался при последнем использовании отчета
// - В противном случае выбираем 1й из предопределенных
// Параметры:
//   КлючОтчета - Неопределено, Строка - Ключ объекта настройки. 
//       - Неопределено - Удаляются настройки всех отчетов.
//       - Строка       - Полное имя отчета с точкой.
//   Пользователь - Неопределено, Строка, УникальныйИдентификатор, ПользовательИнформационнойБазы,
//					СправочникСсылка.Пользователи - Пользователь, настройки которого удаляются.
//       - Неопределено                   - Удаляются настройки всех пользователей.
//       - Строка                         - Имя пользователя ИБ.
//       - УникальныйИдентификатор        - Идентификатор пользователя ИБ.
//       - ПользовательИнформационнойБазы - Пользователь ИБ.
//       - СправочникСсылка.Пользователи  - Пользователь.
//
// Возвращаемое значение:
//  Строка - ключ варианта отчета.
//
Функция ПолучитьКлючВариантаОтчета(КлючОтчета, Пользователь = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Если ТипЗнч(Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		ТекущийПользователь = Пользователь;
	Иначе
		ТекущийПользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Результат = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ФормаОтчета" + КлючОтчета, "КлючВарианта");
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ОтчетИнформация = ВариантыОтчетов.ИнформацияОбОтчете(КлючОтчета);
	Если ЗначениеЗаполнено(ОтчетИнформация.ТекстОшибки) Тогда
		ВызватьИсключение ОтчетИнформация.ТекстОшибки;
	КонецЕсли;
	ОтчетСсылка = ОтчетИнформация.Отчет;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	Варианты.КлючВарианта
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК Варианты
	|ГДЕ
	|	Варианты.Отчет = &Отчет
	|	И Варианты.ПометкаУдаления = ЛОЖЬ
	|	И Варианты.Пользовательский = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Отчет",         ОтчетСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.КлючВарианта;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Сохраняем ключ варианта отчета
//
// Параметры:
//   КлючОтчета - Неопределено, Строка - Ключ объекта настройки. 
//       - Неопределено - Удаляются настройки всех отчетов.
//       - Строка       - Полное имя отчета с точкой.
//   КлючВарианта - Неопределено, Строка - Ключ удаляемых настроек.
//       - Неопределено - Удаляются все варианты отчета.
//       - Строка       - Ключ варианта отчета.
//   Пользователь - Неопределено, Строка, УникальныйИдентификатор, ПользовательИнформационнойБазы,
//					СправочникСсылка.Пользователи - Пользователь, настройки которого удаляются.
//       - Неопределено                   - Удаляются настройки всех пользователей.
//       - Строка                         - Имя пользователя ИБ.
//       - УникальныйИдентификатор        - Идентификатор пользователя ИБ.
//       - ПользовательИнформационнойБазы - Пользователь ИБ.
//       - СправочникСсылка.Пользователи  - Пользователь.
//
Процедура СохранитьКлючВариантаОтчета(КлючОтчета, КлючВарианта, Пользователь = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Если ТипЗнч(Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		ТекущийПользователь = Пользователь;
	Иначе
		ТекущийПользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ФормаОтчета" + КлючОтчета, "КлючВарианта", КлючВарианта);
	
КонецПроцедуры

#КонецЕсли

#КонецОбласти
