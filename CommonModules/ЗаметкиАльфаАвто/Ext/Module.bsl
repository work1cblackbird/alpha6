#Область ПрограммныйИнтерфейс

#Область ОбработчикиОбновления

// Выполняем замену справочника КлассификаторБанков
//
// Параметры: 
//  Ссылка - СправочникСсылка.Заметки - ссылка на элемент справочника, в которм необходимо произвести замену
//
// Возвращаемое значение:
//  Булево - результат выполнения запроса
//
Функция ЗаменитьКлассификаторБанков(Ссылка = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если Ссылка = Неопределено Тогда 
		Запрос.Текст = ПолучитьТекстЗапроса();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапроса(Истина);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Результат = Запрос.Выполнить();
		Возврат Результат.Пустой();	
	КонецЕсли;
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекущийОбъект 			= Выборка.Ссылка.ПолучитьОбъект();
		ТекущийОбъект.Предмет 	= Выборка.Банк;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ТекущийОбъект);
	КонецЦикла;
				
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

 Функция ПолучитьТекстЗапроса(Проверка = Ложь)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Заметки.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(КлассификаторБанков.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)) КАК Банк
		|ИЗ
		|	Справочник.Заметки КАК Заметки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
		|		ПО Заметки.Предмет.Код = КлассификаторБанков.Код
		|ГДЕ
		|	ТипЗначения(Заметки.Предмет) = Тип(Справочник.КлассификаторБанковРФ)
		|	И Заметки.Ссылка = &Ссылка";

	Если Не Проверка Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Заметки.Ссылка = &Ссылка", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
