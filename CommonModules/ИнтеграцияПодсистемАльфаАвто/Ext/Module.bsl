
#Область СлужебныйПрограммныйИнтерфейс

// См. ОбщегоНазначенияПереопределяемый.ПриДобавленииОбработчиковУстановкиПараметровСеанса
//
Процедура ОбработчикиУстановкаПараметровСеанса(Обработчики) Экспорт
	
	// Параметры сеанса системы лицензирования
	Обработчики.Вставить("ТекущийАдресСервераЛицензирования", "ЛицензированиеСлужебный.УстановкаПараметровСеанса");
	Обработчики.Вставить("АдресСервераЛицензирования", "ЛицензированиеСлужебный.УстановкаПараметровСеанса");
	Обработчики.Вставить("СписокСертификатов", "ЛицензированиеСлужебный.УстановкаПараметровСеанса");
	Обработчики.Вставить("МестоХраненияКомпоненты", "ЛицензированиеСлужебный.УстановкаПараметровСеанса");
	Обработчики.Вставить("ВключенаЗащитаОтОпасныхДействий", "ЛицензированиеСлужебный.УстановкаПараметровСеанса");
	
	// Параметры сеанса контекста текущего пользователя
	Обработчики.Вставить("ТекущийПользователь", "ПользователиСлужебный.УстановкаПараметровСеанса");
	Обработчики.Вставить("ТекущийВнешнийПользователь", "ПользователиСлужебный.УстановкаПараметровСеанса");
	Обработчики.Вставить("ПодразделениеКомпании", "ТехнологическаяПлатформаВызовСервера.УстановкаПараметровСеанса");
	Обработчики.Вставить("Организация", "ТехнологическаяПлатформаВызовСервера.УстановкаПараметровСеанса");
	Обработчики.Вставить("ОбщиеЗначения", "ТехнологическаяПлатформаВызовСервера.УстановкаПараметровСеанса");
	
	// Параметры сеанса маркировки товаров
	Обработчики.Вставить("НомерСессииМаркировки", "ОбменССистемойМаркировкиСервер.УстановкаПараметровСеанса");
		
КонецПроцедуры

#Область БазоваяФункциональность

// См. ПодсистемыКонфигурацииПереопределяемый.ПриДобавленииПодсистем
Процедура ПриДобавленииПодсистем(МодулиПодсистем) Экспорт
	
	МодулиПодсистем.Добавить("ЛицензированиеСлужебный");
	МодулиПодсистем.Добавить("ОбновлениеИнформационнойБазыАвтосалон");
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииВидовДоступа
Процедура ПриЗаполненииВидовДоступа(ВидыДоступа) Экспорт
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя           = "ПодразделенияКомпании";
	ВидДоступа.Представление = НСтр("ru = 'Подразделения компании'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.ПодразделенияКомпании");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя           = "Организации";
	ВидДоступа.Представление = НСтр("ru = 'Организации'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.Организации");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя           = "Склады";
	ВидДоступа.Представление = НСтр("ru = 'Склады компании'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.СкладыКомпании");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя           = "Кассы";
	ВидДоступа.Представление = НСтр("ru = 'Кассы компании'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.КассыКомпании");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя           = "Контрагенты";
	ВидДоступа.Представление = НСтр("ru = 'Контрагенты и контакты'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.Контрагенты");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя           = "Сотрудники";
	ВидДоступа.Представление = НСтр("ru = 'Сотрудники'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.Сотрудники");
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииИспользованияВидаДоступа
Процедура ПриЗаполненииИспользованияВидаДоступа(ВидДоступа, Использование) Экспорт
	
	ИспользующиесяВидыДоступа = Новый Структура("ПодразделенияКомпании,Склады,Кассы,Контрагенты");
	
	Если ИспользующиесяВидыДоступа.Свойство(ВидДоступа) Тогда
		
		Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеВерсииИБ

// См. ОбновлениеИнформационнойБазыПереопределяемый.ПриОпределенииНастроек
Процедура ПриОпределенииНастроек(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыАвтосалон.ПриОпределенииНастроекОбновленияИнформационнойБазы(Параметры);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти