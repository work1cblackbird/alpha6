#Область ПрограммныйИнтерфейс

// См. ЗаявлениеНаСертификатПереопределяемый.ПриЗаполненииРеквизитовОрганизацииВЗаявленииНаСертификат
Процедура ПриЗаполненииРеквизитовОрганизацииВЗаявленииНаСертификат(Параметры) Экспорт

	Если Не ЗначениеЗаполнено(Параметры.Организация) Тогда
		
		Параметры.Организация = ПараметрыСеанса.Организация;
		
	КонецЕсли;
	
	СведенияОбОрганизации = ОрганизацииСервер.СведенияОбОрганизации(Параметры.Организация);
	
	Параметры.ЭтоИндивидуальныйПредприниматель = СведенияОбОрганизации.ЭтоФизическоеЛицо;
	Параметры.НаименованиеСокращенное = СведенияОбОрганизации.НаименованиеСокращенное;
	Параметры.НаименованиеПолное = СведенияОбОрганизации.НаименованиеПолное;
	Параметры.ИНН = СведенияОбОрганизации.ИНН;
	Параметры.КПП = СведенияОбОрганизации.КПП;
	Параметры.ОГРН = СведенияОбОрганизации.ОГРН;
	 
	Параметры.РасчетныйСчет         = СведенияОбОрганизации.БанковскийСчетНомерСчета;
	Параметры.БИК                   = СведенияОбОрганизации.БанковскийСчетБИК;
	Параметры.КорреспондентскийСчет = СведенияОбОрганизации.БанковскийСчетКоррСчет;
	
	// В СведенияОбОрганизации контактная информация союержится только строкой, а нам нужено в формате JSON.
	// И в СведенияОбОрганизации нет телефона
	ВидыКИ = Новый Массив;
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
	
	КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Параметры.Организация),
		,
		ВидыКИ,
		ТекущаяДатаСеанса()
	);
	
	НайденныеСтроки = КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид",
		Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		Параметры.Телефон = НайденныеСтроки[0].Значение;
		
	КонецЕсли;
	
	НайденныеСтроки = КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид",
		Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		Параметры.ЮридическийАдрес = НайденныеСтроки[0].Значение;
		
	КонецЕсли;
	
	НайденныеСтроки = КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид",
		Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		Параметры.ФактическийАдрес = НайденныеСтроки[0].Значение;
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в форме добавления заявления на новый сертификат для заполнении реквизитов владельца и при его выборе.
//
// Параметры:
//  Параметры - Структура:
//    * Организация  - ОпределяемыйТип.Организация - выбранная организация, на которую оформляется сертификат.
//                   - Неопределено - если ОпределяемыйТип.Организация не настроен.
//
//    * ТипВладельца  - ОписаниеТипов - (возвращаемое значение) содержит ссылочные типы, из которых можно сделать выбор.
//                    - Неопределено  - (возвращаемое значение) выбор владельца не поддерживается.
//
//    * Сотрудник    - ТипВладельца - (возвращаемое значение) - это владелец сертификата, которого нужно заполнить.
//                     Если уже заполнен (выбран пользователем), его не следует изменять.
//                   - Неопределено - если ТипВладельца не определен, тогда реквизит не доступен пользователю.
//
//    * Директор     - ТипВладельца - (возвращаемое значение) - это директор, который может быть выбран,
//                     как владелец сертификата.
//                   - Неопределено - начальное значение - скрыть директора из списка выбора.
//
//    * ГлавныйБухгалтер - ТипВладельца - (возвращаемое значение) это главный бухгалтер, который может быть выбран
//                     как владелец сертификата.
//                   - Неопределено - начальное значение - скрыть главного бухгалтера из списка выбора.
//
//    * Пользователь - СправочникСсылка.Пользователи - (возвращаемое значение) пользователь - владелец сертификата.
//                     В общем случае может быть не заполнено. Рекомендуется заполнить, если есть возможность.
//                     Записывается в сертификат в поле Пользователь, может быть изменено в дальнейшем.
//
//    * Фамилия            - Строка - (возвращаемое значение) фамилия сотрудника.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//    * Имя                - Строка - (возвращаемое значение) имя сотрудника.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//    * Отчество           - Строка - (возвращаемое значение) отчество сотрудника.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//    * ДатаРождения       - Дата   - (возвращаемое значение) дата рождения сотрудника.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//    * Пол                - Строка - (возвращаемое значение) пол сотрудника "Мужской" или "Женский".
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//    * МестоРождения      - Строка - (возвращаемое значение) описание места рождения сотрудника.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//    * Гражданство        - СправочникСсылка.СтраныМира - (возвращаемое значение) гражданство сотрудника.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//    * СтраховойНомерПФР  - Строка - (возвращаемое значение) СНИЛС сотрудника.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//    * Должность          - Строка - (возвращаемое значение) должность сотрудника в организации.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//    * Подразделение      - Строка - (возвращаемое значение) обособленное подразделение организации,
//                           в котором работает сотрудник.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//
//    * ДокументВид        - Строка - (возвращаемое значение) строки "21" или "91". 21 - паспорт гражданина РФ,
//                           91 - иной документ, предусмотренный законодательством РФ (по СПДУЛ).
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//
//    * ДокументНомер      - Строка - (возвращаемое значение) номер документа сотрудника (серия и
//                           номер для паспорта гражданина РФ).
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//
//    * ДокументКемВыдан   - Строка - (возвращаемое значение) кем выдан документ сотрудника.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//
//    * ДокументКодПодразделения - Строка - (возвращаемое значение) - код подразделения, если вид документа 21.
//                               - Неопределено - значение не указано, не изменять имеющееся значение.
//
//
//    * ДокументДатаВыдачи - Дата   - (возвращаемое значение) дата выдачи документа сотрудника.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//
//    * ЭлектроннаяПочта   - Строка - (возвращаемое значение) адрес электронной почты сотрудника в формате XML, как его
//                           возвращает функция КонтактнаяИнформацияВXML общего модуля УправлениеКонтактнойИнформацией.
//                         - Неопределено - значение не указано, не изменять имеющееся значение.
//
//
Процедура ПриЗаполненииРеквизитовВладельцаВЗаявленииНаСертификат(Параметры) Экспорт
	
	ЗаполнитьДоступныхКВыборуВладельцев(Параметры);
	
	Если Не ЗначениеЗаполнено(Параметры.Сотрудник) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьДанныеВладельца(Параметры);
	ЗаполнитьДанныеДокументаВладельца(Параметры);
	ЗаполнитьКонтактнуюИнформациюВладельца(Параметры);
	
КонецПроцедуры

// См. ЗаявлениеНаСертификатПереопределяемый.ПриЗаполненииРеквизитовРуководителяВЗаявленииНаСертификат
Процедура ПриЗаполненииРеквизитовРуководителяВЗаявленииНаСертификат(Параметры) Экспорт
	
	Руководитель = ОрганизацииАльфаАвто.Руководитель(Параметры.Организация);
	
	Если ЗначениеЗаполнено(Руководитель) Тогда
		
		Параметры.ТипРуководителя = Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
		Параметры.Руководитель    = Руководитель;
		
		РеквизитыРуководителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Руководитель, "Наименование,Должность");
		
		Параметры.Представление = РеквизитыРуководителя.Наименование;
		Параметры.Должность     = Строка(РеквизитыРуководителя.Должность);
		Параметры.Основание     = НСтр("ru = 'Устав'");
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДоступныхКВыборуВладельцев(Параметры)
	
	Параметры.ТипВладельца = Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
	
	Если Не ЗначениеЗаполнено(Параметры.Директор) Тогда
		
		Параметры.Директор = ОрганизацииАльфаАвто.Руководитель(Параметры.Организация);
		
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(Параметры.ГлавныйБухгалтер) Тогда
		
		Параметры.ГлавныйБухгалтер = ОрганизацииАльфаАвто.ГлавныйБухгалтер(Параметры.Организация);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Сотрудник) Тогда
		
		Параметры.Сотрудник = Параметры.Директор;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеВладельца(Параметры)
	
	РеквизитыСотрудника = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Сотрудник,
		"Наименование,ДатаРождения,Пол,Должность");
	
	ЗаполнитьЗначенияСвойств(Параметры, ПолучитьФИО(РеквизитыСотрудника.Наименование));
	
	Параметры.ДатаРождения  = РеквизитыСотрудника.ДатаРождения;
	Параметры.Должность     = Строка(РеквизитыСотрудника.Должность);
	Параметры.МестоРождения = "Россия";
	Параметры.Гражданство   = Справочники.СтраныМира.Россия;
	
	Если РеквизитыСотрудника.Пол = Перечисления.ПолФизическихЛиц.Мужской Тогда
		
		Параметры.Пол = "Мужской";
		
	ИначеЕсли РеквизитыСотрудника.Пол = Перечисления.ПолФизическихЛиц.Женский Тогда
		
		Параметры.Пол = "Женский";
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьФИО(Текст)
	
	Текст = СокрЛП(Текст);
	Пока СтрЧислоВхождений(Текст, "  ") > 0 Цикл
		Текст = СтрЗаменить(Текст, "  ", " ");
	КонецЦикла;
	
	ФИО = Новый Структура;
	
	ЧислоСимволов      = СтрДлина(Текст);
	КоличествоПробелов = СтрЧислоВхождений(Текст, " "); 
	
	Если КоличествоПробелов = 0 Тогда
		ПервыйПробел    = ЧислоСимволов;
		ПоследнийПробел = ЧислоСимволов;
	ИначеЕсли КоличествоПробелов = 1 Тогда
		ПервыйПробел = СтрНайти(Текст, " ", НаправлениеПоиска.СНачала);
		ПоследнийПробел = ЧислоСимволов;
	Иначе
		ПервыйПробел = СтрНайти(Текст, " ", НаправлениеПоиска.СНачала);
		ПоследнийПробел = СтрНайти(Текст, " ", НаправлениеПоиска.СКонца);
	КонецЕсли;
	
	Фамилия  = ТРег(СокрЛП(Сред(Текст, 0, ПервыйПробел)));
	Имя      = ТРег(СокрЛП(Сред(Текст, ПервыйПробел    + 1, ПоследнийПробел  - ПервыйПробел    ))); 
	Отчество = ТРег(СокрЛП(Сред(Текст, ПоследнийПробел + 1, ЧислоСимволов    - ПоследнийПробел )));
	
	ФИО.Вставить("Фамилия", Фамилия);
	ФИО.Вставить("Имя", Имя);
	ФИО.Вставить("Отчество", Отчество);
	
	Возврат ФИО;
	
КонецФункции

Процедура ЗаполнитьДанныеДокументаВладельца(Параметры)
	
	ПаспортСотрудника = ПаспортСотрудника(Параметры.Сотрудник);
	
	Если ПаспортСотрудника <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(Параметры, ПаспортСотрудника);
		
	КонецЕсли;

КонецПроцедуры

Функция ПаспортСотрудника(Сотрудник)

	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПодтверждающиеДокументы.Ссылка КАК Паспорт,
		|	""21"" КАК ДокументВид,
		|	ПодтверждающиеДокументы.Серия + "" "" + ПодтверждающиеДокументы.Номер КАК ДокументНомер,
		|	ПодтверждающиеДокументы.КемВыдан КАК ДокументКемВыдан,
		|	ПодтверждающиеДокументы.КодПодразделения КАК ДокументКодПодразделения,
		|	ПодтверждающиеДокументы.ДатаВыдачи КАК ДокументДатаВыдачи
		|ИЗ
		|	Справочник.ПодтверждающиеДокументы КАК ПодтверждающиеДокументы
		|ГДЕ
		|	ПодтверждающиеДокументы.Владелец = &Владелец
		|	И ПодтверждающиеДокументы.ВидПодтверждающегоДокумента = &ВидПодтверждающегоДокумента"
	);
	Запрос.УстановитьПараметр("Владелец", Сотрудник);
	Запрос.УстановитьПараметр("ВидПодтверждающегоДокумента", Перечисления.ВидыДокументов.Паспорт);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатЗапроса.Выгрузить()[0]);

КонецФункции

Процедура ЗаполнитьКонтактнуюИнформациюВладельца(Параметры)
	
	КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Параметры.Сотрудник,
		Справочники.ВидыКонтактнойИнформации.EmailСотрудника,
		ТекущаяДатаСеанса(),
		Ложь
	);
	
	Если КонтактнаяИнформация.Количество() > 0 Тогда
		
		Параметры.ЭлектроннаяПочта = КонтактнаяИнформация[0].Значение;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти