#Область ПрограммныйИнтерфейс

// См. ОбменСБанкамиПереопределяемый.ПолучитьАктуальныеВидыЭД
Процедура ПолучитьАктуальныеВидыЭД(Массив) Экспорт
	
	Массив.Добавить(Перечисления.ВидыЭДОбменСБанками.ПлатежноеПоручение);
	Массив.Добавить(Перечисления.ВидыЭДОбменСБанками.ЗапросВыписки);
	Массив.Добавить(Перечисления.ВидыЭДОбменСБанками.Письмо);
	
КонецПроцедуры

// См. ОбменСБанкамиПереопределяемый.ПолучитьНомераБанковскихСчетов
Процедура ПолучитьНомераБанковскихСчетов(Организация, Банк, МассивНомеровБанковскихСчетов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БанковскиеСчета.НомерСчета
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Банк = &Банк
	|	И БанковскиеСчета.Владелец = &Организация
	|	И НЕ БанковскиеСчета.ПометкаУдаления
	|	И БанковскиеСчета.ВалютаДенежныхСредств = &ВалютаРегл";
	
	Запрос.УстановитьПараметр("Банк", Банк);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВалютаРегл", Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить());
	ТабРез = Запрос.Выполнить().Выгрузить();
	МассивНомеровБанковскихСчетов = ТабРез.ВыгрузитьКолонку("НомерСчета");
	
КонецПроцедуры

// См. ОбменСБанкамиПереопределяемый.ЗаполнитьПараметрыЭДПоИсточнику
Процедура ЗаполнитьПараметрыЭДПоИсточнику(Источник, ПараметрыЭД) Экспорт
	
	ТипИсточника = ТипЗнч(Источник);
	
	Если ТипИсточника = Тип("ДокументСсылка.ПлатежноеПоручение")
		ИЛИ ТипИсточника = Тип("ДокументОбъект.ПлатежноеПоручение") Тогда
		ПараметрыЭД.ВидЭД = Перечисления.ВидыЭДОбменСБанками.ПлатежноеПоручение;
		ПараметрыЭД.Организация = Источник.Организация;
		ПараметрыЭД.Банк = Источник.СчетОрганизации.Банк;
	КонецЕсли;
	
КонецПроцедуры

// См. ОбменСБанкамиПереопределяемый.ЗаполнитьДанныеПлатежныхПоручений
Процедура ЗаполнитьДанныеПлатежныхПоручений(МассивСсылок, ДанныеДляЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПлатежноеПоручение.Ссылка КАК Документ,
	|	ПлатежноеПоручение.Дата КАК Дата,
	|	ПлатежноеПоручение.Номер КАК Номер,
	|	ПлатежноеПоручение.СуммаДокумента КАК Сумма,
	|	ПлатежноеПоручение.ВидПлатежа КАК ВидПлатежа,
	|	ПлатежноеПоручение.ОчередностьПлатежа КАК ОчередностьПлатежа,
	|	ПлатежноеПоручение.КодУИН КАК Код,
	|	ПлатежноеПоручение.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ПлатежноеПоручение.КодВидаДохода КАК КодВидаДохода,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ПлатежноеПоручение.ТекстПлательщика КАК СТРОКА(100))) = """"
	|			ТОГДА ПлатежноеПоручение.Организация.НаименованиеПолное
	|		ИНАЧЕ ПлатежноеПоручение.ТекстПлательщика
	|	КОНЕЦ КАК ТекстПлательщика,
	|	ВЫБОР
	|		КОГДА ПлатежноеПоручение.ИННПлательщика = """"
	|			ТОГДА ПлатежноеПоручение.Организация.ИНН
	|		ИНАЧЕ ПлатежноеПоручение.ИННПлательщика
	|	КОНЕЦ КАК ИННПлательщика,
	|	ВЫБОР
	|		КОГДА ПлатежноеПоручение.КПППлательщика = """"
	|			ТОГДА ПлатежноеПоручение.Организация.КПП
	|		ИНАЧЕ ПлатежноеПоручение.КПППлательщика
	|	КОНЕЦ КАК КПППлательщика,
	|	ПлатежноеПоручение.СчетОрганизации.НомерСчета КАК НомерСчетаОрганизации,
	|	ПлатежноеПоручение.СчетОрганизации.Банк.Код КАК БИКБанкаОрганизации,
	|	ПлатежноеПоручение.СчетОрганизации.Банк.Наименование КАК НаименованиеБанкаОрганизации,
	|	ПлатежноеПоручение.СчетОрганизации.Банк.Город КАК ГородБанкаОрганизации,
	|	ПлатежноеПоручение.СчетОрганизации.Банк.КоррСчет КАК ОрганизацияРасчСчет,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ПлатежноеПоручение.ТекстПолучателя КАК СТРОКА(100))) = """"
	|			ТОГДА ПлатежноеПоручение.Контрагент.НаименованиеПолное
	|		ИНАЧЕ ПлатежноеПоручение.ТекстПолучателя
	|	КОНЕЦ КАК ТекстПолучателя,
	|	ВЫБОР
	|		КОГДА ПлатежноеПоручение.ИННПолучателя = """"
	|			ТОГДА ПлатежноеПоручение.Контрагент.ИНН
	|		ИНАЧЕ ПлатежноеПоручение.ИННПолучателя
	|	КОНЕЦ КАК ИННПолучателя,
	|	ВЫБОР
	|		КОГДА ПлатежноеПоручение.КПППолучателя = """"
	|			ТОГДА ПлатежноеПоручение.Контрагент.КПП
	|		ИНАЧЕ ПлатежноеПоручение.КПППолучателя
	|	КОНЕЦ КАК КПППолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.НомерСчета КАК НомерСчетаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.Код КАК БИКБанкаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.Наименование КАК БанкПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.Город КАК ГородБанкаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.КоррСчет КАК ПолучателяРасчСчет,
	|	ПлатежноеПоручение.ПеречислениеНалога КАК ПеречислениеНалога,
	|	ПлатежноеПоручение.СтатусСоставителя КАК СтатусСоставителя,
	|	ПлатежноеПоручение.КодБК КАК КодБК,
	|	ПлатежноеПоручение.КодОКТМО КАК КодОКТМО,
	|	ПлатежноеПоручение.ПоказательОснования КАК ПоказательОснования,
	|	ПлатежноеПоручение.ПоказательПериода КАК ПоказательПериода,
	|	ПлатежноеПоручение.ПоказательНомера КАК ПоказательНомера,
	|	ПлатежноеПоручение.ПоказательДаты КАК ПоказательДаты,
	|	ПлатежноеПоручение.КодВыплат КАК КодВыплат
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|ГДЕ
	|	ПлатежноеПоручение.Ссылка В(&ПлатежныеПоручения)";
	Запрос.УстановитьПараметр("ПлатежныеПоручения", МассивСсылок);
	
	ВыборкаПоручений = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаПоручений.Следующий() Цикл
		
		ДеревоДокумента = ДанныеДляЗаполнения[МассивСсылок.Найти(ВыборкаПоручений.Документ)];
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "Дата",
			ВыборкаПоручений.Дата);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "Номер",
			УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(ВыборкаПоручений, Истина));
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "Сумма",
			ВыборкаПоручений.Сумма);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлатежа.ВидПлатежа",
			ВыборкаПоручений.ВидПлатежа);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлатежа.Очередность",
			ВыборкаПоручений.ОчередностьПлатежа);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлатежа.Код",
			ВыборкаПоручений.Код);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлатежа.НазначениеПлатежа",
			ВыборкаПоручений.НазначениеПлатежа);
			
		Если НЕ ПустаяСтрока(ВыборкаПоручений.КодВидаДохода) И ВыборкаПоручений.КодВидаДохода <> "0" Тогда
			ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлатежа.КодВидаДохода",
				ВыборкаПоручений.КодВидаДохода);
		КонецЕсли;
		
		// Плательщик
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлательщика.Наименование",
			ВыборкаПоручений.ТекстПлательщика);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлательщика.ИНН",
			ВыборкаПоручений.ИННПлательщика);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлательщика.КПП",
			ВыборкаПоручений.КПППлательщика);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлательщика.РасчСчет",
			ВыборкаПоручений.НомерСчетаОрганизации);
		
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлательщика.Банк.БИК",
			ВыборкаПоручений.БИКБанкаОрганизации);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлательщика.Банк.Наименование",
			ВыборкаПоручений.НаименованиеБанкаОрганизации);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлательщика.Банк.Город",
			ВыборкаПоручений.ГородБанкаОрганизации);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПлательщика.Банк.КоррСчет",
			ВыборкаПоручений.ОрганизацияРасчСчет);
		
		// Получатель
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПолучателя.Наименование",
			ВыборкаПоручений.ТекстПолучателя);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПолучателя.ИНН",
			ВыборкаПоручений.ИННПолучателя);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПолучателя.КПП",
			ВыборкаПоручений.КПППолучателя);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПолучателя.РасчСчет",
			ВыборкаПоручений.НомерСчетаПолучателя);
		
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПолучателя.Банк.БИК",
			ВыборкаПоручений.БИКБанкаПолучателя);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПолучателя.Банк.Наименование",
			ВыборкаПоручений.БанкПолучателя);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПолучателя.Банк.Город",
			ВыборкаПоручений.ГородБанкаПолучателя);
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "РеквизитыПолучателя.Банк.КоррСчет",
			ВыборкаПоручений.ПолучателяРасчСчет);
			
		ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "ПлатежиВБюджет",
			ВыборкаПоручений.ПеречислениеНалога);
			
		// Платежи в бюджет
		Если ВыборкаПоручений.ПеречислениеНалога Тогда
			ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "ПлатежиВБюджет.СтатусСоставителя",
				ВыборкаПоручений.СтатусСоставителя);
			ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "ПлатежиВБюджет.ПоказательКБК",
				ВыборкаПоручений.КодБК);
			ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "ПлатежиВБюджет.ОКТМО",
				ВыборкаПоручений.КодОКТМО);
			ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "ПлатежиВБюджет.ПоказательОснования",
				ВыборкаПоручений.ПоказательОснования);
			ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "ПлатежиВБюджет.ПоказательПериода",
				ВыборкаПоручений.ПоказательПериода);
			ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "ПлатежиВБюджет.ПоказательНомера",
				ВыборкаПоручений.ПоказательНомера);
			ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "ПлатежиВБюджет.ПоказательДаты",
				Формат(ВыборкаПоручений.ПоказательДаты, "ДФ=dd.MM.yyyy"));
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ВыборкаПоручений.КодВыплат) И ВыборкаПоручений.КодВыплат <> "0" Тогда
			ЭлектронноеВзаимодействие.ЗаполнитьЗначениеРеквизитаВДереве(ДеревоДокумента, "ПлатежиВБюджет.КодВыплат",
				ВыборкаПоручений.КодВыплат);
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

// См. ОбменСБанкамиПереопределяемый.ПроверитьИспользованиеТестовогоРежима
Процедура ПроверитьИспользованиеТестовогоРежима(ИспользуетсяТестовыйРежим) Экспорт
	
	Если Найти(ВРег(Константы.ЗаголовокСистемы.Получить()), ВРег("DirectBank")) > 0 Тогда
		ИспользуетсяТестовыйРежим = Истина;
	КонецЕсли;
	
КонецПроцедуры

// См. ОбменСБанкамиПереопределяемый.ПриПолученииВыписки
Процедура ПриПолученииВыписки(СообщениеОбмена) Экспорт
	
	Выписки = Новый Массив;
	Выписки.Добавить(СообщениеОбмена);
	
	АдресВыписки = ОбменСБанкамиАльфаАвтоВызовСервера.ДанныеВыпискиБанкаВТекстовомФормате(Выписки);
	
	Если Не ЗначениеЗаполнено(АдресВыписки) Тогда
		Возврат;
	КонецЕсли;
	
	ДокументыВыписки = Новый ТекстовыйДокумент();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВыписки);
	ДанныеВыписки = ДвоичныеДанные.ОткрытьПотокДляЧтения();
	ДокументыВыписки.Прочитать(ДанныеВыписки, "windows-1251");
	
	Импорт_ТекстДляРазбора = ДокументыВыписки.ПолучитьТекст();
	
	СтруктураРазбора = ЭлектронныеДокументыВнутренний.СтруктураРазбораВыпискиБанка(Импорт_ТекстДляРазбора);
	
	Если СтруктураРазбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРазбора.Вставить("СообщениеОбмена", СообщениеОбмена);
	
	Обработки.КлиентБанк.ЗагрузкаБанковскойВыпискиИзСообщенияОбмена(СтруктураРазбора);
	
КонецПроцедуры

#КонецОбласти
