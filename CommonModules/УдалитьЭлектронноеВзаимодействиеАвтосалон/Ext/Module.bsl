////////////////////////////////////////////////////////////////////////////////////////
// ЭлектронноеВзаимодействиеАвтосалон: расширение работы с обменом
//   электронными документами
//
////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Получает данные о физическом (юридическом) лице по ссылке.
//
// Параметры:
//  ЮрФизЛицо - Ссылка - ссылка на элемент справочника, по которому надо получить данные.
//
// Возвращаемое значение:
//  Структура - данные юридического (физического лица).
//
Функция ПолучитьДанныеЮрФизЛица(ЮрФизЛицо) Экспорт
	
	ДоступныеТипыЮрФизЛица = Новый Массив();
	ДоступныеТипыЮрФизЛица.Добавить(Тип("СправочникСсылка.Организации"));
	ДоступныеТипыЮрФизЛица.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ДоступныеТипыЮрФизЛица.Добавить(Тип("СправочникСсылка.ПодразделенияКомпании"));
	
	Если ДоступныеТипыЮрФизЛица.Найти(ТипЗнч(ЮрФизЛицо)) = Неопределено Тогда
		
		// Исключение, так как разработчик должен видить ошибку
		ВызватьИсключение НСтр(
			"ru = 'Для получения сведений о юр./физ. лице выбран неверный тип данных'",
			ОбщегоНазначения.КодОсновногоЯзыка()
		);
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ЮрФизЛицо).ДанныеЮрФизЛицаДляЭДО(ЮрФизЛицо);
	УстановитьПривилегированныйРежим(Ложь);
	
	Результат.Вставить("Ссылка", ЮрФизЛицо);
	
	Возврат Результат;
	
КонецФункции

// Готовит контейнер для хранения информации о юр./физ. лица
//
// Возвращаемое значение:
//  Структура - данные юр./физ. лица с пустыми полями
//
Функция НовыеСведенияОЮрФизЛице() Экспорт
	
	Возврат Новый Структура(
		"ЮрФизЛицо,
		|Представление,
		|ПолноеНаименование,
		|КодПоОКПО,
		|КодОКВЭД,
		|ИНН,
		|КПП,
		|Телефоны,
		|ЮридическийАдрес,
		|Банк,
		|БИК,
		|КоррСчет,
		|НомерСчета,
		|Фамилия,
		|Имя,
		|Отчество,
		|СвидетельствоСерияНомер,
		|СвидетельствоДатаВыдачи"
	);
	
КонецФункции

// Формирует объект с информацией о банковском счете
//
// Параметры:
//  ВладелецСчета - СправочникСсылка - владелец счета
// 
// Возвращаемое значение:
//  Структура - структура с полями:
//  * Банк       - Строка
//  * БИК        - Строка
//  * НомерСчета - Строка
//  * КоррСчет   - Строка
//
Функция СведенияОБанковскомСчете(ВладелецСчета) Экспорт
	
	Результат = Новый Структура("НомерСчета,Банк,БИК,КоррСчет");
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	БанковскиеСчета.НомерСчета КАК НомерСчета,
		|	БанковскиеСчета.Банк.Наименование КАК Банк,
		|	БанковскиеСчета.Банк.КоррСчет КАК КоррСчет,
		|	БанковскиеСчета.Банк.Код КАК БИК
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Владелец
		|	И НЕ БанковскиеСчета.ПометкаУдаления"
	);
	Запрос.УстановитьПараметр("Владелец", ВладелецСчета);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		
		МаксимальноДопустимаяДлиннаСчета = 20;
		СимволовДополнить = МаксимальноДопустимаяДлиннаСчета - СтрДлина(Выборка.НомерСчета);
		Добавок = "";
		
		Для Н = 1 По СимволовДополнить Цикл
			
			Добавок = Добавок + " ";
			
		КонецЦикла;
	
		Результат.НомерСчета = Выборка.НомерСчета + Добавок;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
