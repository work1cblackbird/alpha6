
#Область ПрограммныйИнтерфейс

// Программное создание номенклатуры из прайс-листа.
//
// Параметры:
//  ДанныеЗаполнения - Структура - Данные заполнения добавляемой номенклатуры.
// 
// Возвращаемое значение:
//  Структура - Результат создания номенклатуры. В структуру добавляются поля:
//		* Номенклатура - СправочникСсылка.Номенклатура - Созданная номенклатура.
//		* ПрайсЛист - СправочникСсылка.ПрайсЛистыКонтрагентов - Основание создание номенклатуры.
//
Функция СоздатьНоменклатуру(ДанныеЗаполнения, Интерактивно = Ложь) Экспорт
	
	Если Интерактивно Тогда  
		
		РезультатСоздания = ДанныеЗаполнения;		
	Иначе	
		
		РезультатСоздания = Справочники.Номенклатура.СоздатьНоменклатуруПоПрайсЛисту(ДанныеЗаполнения);
				
	КонецЕсли; 
	
	ПрайсЛист = ПолучитьЗначениеПараметраСтруктуры(РезультатСоздания, "ПрайсЛист");
	Номенклатура = ПолучитьЗначениеПараметраСтруктуры(РезультатСоздания, "Номенклатура"); 

	Если НЕ ЗначениеЗаполнено(ПрайсЛист) ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		
		Возврат РезультатСоздания;
		
	КонецЕсли; 
	
	РезультатСоздания.Вставить("ФормироватьЦеныНоменклатуры", 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПрайсЛист, "ФормироватьЦеныНоменклатуры"));
		
	ИзменениеЦен = ПрайсЛистыКонтрагентов.УстановитьЦеныНоменклатурыПоПрайсЛисту(ПрайсЛист, Номенклатура, Новый Структура);
	
	Если ЗначениеЗаполнено(ИзменениеЦен) Тогда
		
		РезультатСоздания.Вставить("ДокументУстановкаЦен", ИзменениеЦен);
		
	КонецЕсли;
	
	Возврат РезультатСоздания;
	
КонецФункции  

Функция ЗагрузитьЦеныПрайсЛистов(Параметры, Результат) Экспорт
	
	Справочники.Номенклатура.ЗагрузитьЦеныПрайсЛистовКонтрагентов(Параметры, Результат, Новый Массив);
	ТаблицаЦен = ПолучитьИзВременногоХранилища(Результат);
	
	Если ТаблицаЦен.Количество() = 1 Тогда
		Возврат ТаблицаЦен[0].ПрайсЛист;
	ИначеЕсли ТаблицаЦен.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
