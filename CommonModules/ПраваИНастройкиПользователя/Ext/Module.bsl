
#Область ПрограммныйИнтерфейс

// Устанавливает новое значение права в кэше.
// 
// Параметры:
//  Право - ПланВидовХарактеристик.ПраваИнастройки, Строка - Ссылка или имя предопределенного элемента
//  																												 ПВХ ПраваИНастройки;
//  НовоеЗначение - Произвольный - Новое значение права;
//  ОбъектРасширения - ДокументОбъект, ДокументСсылка - Объект, для которого получается расширение прав доступа;
//  								 - СправочникОбъект, СправочникСсылка - Объект, для которого получается расширение прав доступа; 
//  								 - Строка - Имя объекта, для которого получается расширение прав доступа.
//
Процедура ОбновитьВКэше(Знач Право, НовоеЗначение, ОбъектРасширения = Неопределено) Экспорт
	
	ВсеПрава = ПраваИНастройкиПользователяПовтИсп.ПолучитьЗначенияВсехПравПользователя();
	
	Если ВсеПрава = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Право = ДанныеПрава(Право);
	Расширение = Расширение(ОбъектРасширения);
	ПравоНаименование = Право.ИмяПредопределенныхДанных;
	
	Если ЗначениеЗаполнено(Расширение) Тогда
		
		ПравоНаименование = ПравоНаименование + "_" + Расширение;
		
	КонецЕсли;
	
	Если МожноИспользоватьДляКлючаСтруктуры(ПравоНаименование) Тогда
		
		ВсеПрава.Вставить(ПравоНаименование, НовоеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

// Получает значение права по имени или ссылке.
// 
// Параметры:
//  Право - ПланВидовХарактеристик.ПраваИнастройки, Строка - Ссылка или имя предопределенного элемента
//  																												 ПВХ ПраваИНастройки;
//  ОбъектРасширения - ДокументОбъект, ДокументСсылка - Объект, для которого получается расширение прав доступа;
//  								 - СправочникОбъект, СправочникСсылка - Объект, для которого получается расширение прав доступа; 
//  								 - Строка - Имя объекта, для которого получается расширение прав доступа.
// 
// Возвращаемое значение:
//  Произвольный - значение права
//
Функция Значение(Знач Право, ОбъектРасширения = Неопределено) Экспорт
	
	ВсеПрава = ПраваИНастройкиПользователяПовтИсп.ПолучитьЗначенияВсехПравПользователя();
	Право = ДанныеПрава(Право);
	Расширение = Расширение(ОбъектРасширения);
	
	Если ЗначениеЗаполнено(Расширение) И ВсеПрава.Свойство(Право.ИмяПредопределенныхДанных + "_" + Расширение) Тогда
		
		Возврат ВсеПрава[Право.ИмяПредопределенныхДанных + "_" + Расширение];
		
	КонецЕсли;
	
	// При первом запуске права могут быть не заполнены по умолчанию
	Если ВсеПрава[Право.ИмяПредопределенныхДанных] = Неопределено Тогда
		
		ВсеПрава[Право.ИмяПредопределенныхДанных] =
			?(Право.ЗначениеПоУмолчанию = Неопределено, Ложь, Право.ЗначениеПоУмолчанию);
		
	КонецЕсли;
	
	Возврат ВсеПрава[Право.ИмяПредопределенныхДанных];
	
КонецФункции

// Проверяет доступность у пользователя роли по имени
//
// Параметры:
//  ИмяРоли - Строка - Имя роли как она задана в конфигураторе или объект описания метаданного роли. 
//
// Возвращаемое значение:
//  Булево - Доступность указанной роли для текущего пользователя.
//
Функция ЕстьРоль(ИмяРоли) Экспорт
	
	Возврат ПраваИНастройкиПользователяПовтИсп.ПроверитьРольПользователя(ИмяРоли);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДанныеПрава(Право) Экспорт
	
	Если ТипЗнч(Право) = Тип("ПланВидовХарактеристикСсылка.ПраваИНастройки") Тогда
		
		СсылкаНаЭлемент = Право;
		
	ИначеЕсли ТипЗнч(Право) = Тип("Строка") Тогда
		
		СсылкаНаЭлемент = ПланыВидовХарактеристик.ПраваИНастройки[СокрЛП(Право)];
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Неверный тип права. Доступные типы Строка и ПланВидовХарактеристикСсылка.ПраваИНастройки'");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СсылкаНаЭлемент) Тогда
		
		Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаЭлемент,
			"Ссылка,ИмяПредопределенныхДанных,ЗначениеПоУмолчанию");
		
	КонецЕсли;
	
	Возврат Новый Структура("Ссылка, ИмяПредопределенныхДанных, ЗначениеПоУмолчанию", СсылкаНаЭлемент, "", Ложь);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Расширение(ОбъектРасширения)
	
	Если ОбъектРасширения = Неопределено Или ОбъектРасширения = "" Тогда
		
		Возврат "";
		
	КонецЕсли;
	
	Если ТипЗнч(ОбъектРасширения) = Тип("Строка") Тогда
		
		Возврат СокрЛП(ОбъектРасширения);
		
	КонецЕсли;
		
	Попытка
		
		Возврат ОбъектРасширения.Ссылка.Метаданные().Имя;
		
	Исключение
		
		Возврат "";
		
	КонецПопытки;
	
КонецФункции

Функция МожноИспользоватьДляКлючаСтруктуры(Значение)
	
	Возврат Значение <> "" И СтрНайти(Значение, " ") = 0;
	
КонецФункции

#КонецОбласти