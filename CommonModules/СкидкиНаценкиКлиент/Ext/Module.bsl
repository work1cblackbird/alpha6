
#Область ПрограммныйИнтерфейс

// Выполняет запрос на пересчет скидок без использования контекстного серверного вызова.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма документа из которой вызывается обработчик пересчета
//  ТабличнаяЧасть - Строка - ТЧ для которой происходит пересчет
//  ПараметрыДействия - Структура - Параметры выполнения расчета
//  Объект - ДанныеФормыСтруктура - Объект который необходимо использовать при расчете, если он не 
//                                  соответствует объекту по умолчанию.
//
Процедура ПересчитатьСкидки(Форма, ТабличнаяЧасть="Товары", ПараметрыДействия=Неопределено, Объект=Неопределено) Экспорт
	
	ПолучитьОсновнойОбъектФормы(Форма, Объект);
	
	// Выполним изменения на объекта, так как менять напрямую данные формы на сервере нельзя.
	ИзмененныйОбъект = СкидкиНаценкиВызовСервера.ПересчитатьСкидки(Объект, ТабличнаяЧасть, ПараметрыДействия);
	
	КопироватьДанныеФормы(ИзмененныйОбъект, Объект);
	
КонецПроцедуры // ПересчитатьСкидки()

// Выполняет контроль редактирования показателей скидки в табличных частях документов.
// Если скидка не выбрана, то выдается соответствующее предупреждение.
//
// Параметры:
//  Форма                       - ФормаКлиенсткогоПриложения - Форма, в которой произошло событие.
//  Поле                        - ПолеФормы  - Активное поле формы, в котором произошло событие
//  ВыбраннаяСтрока             - Число      - идентификатор строки табличной части, в которой произошло событие
//  БлокироватьПерерасчетСкидок - Булево     - признак перерасчета скидок
//  ИмяТабличнойЧасти           - Строка     - (необязательное). Табличная часть, в которой произошло событие.
//
Процедура ОбработкаВыбора(
		Форма,
		Поле,
		ВыбраннаяСтрока,
		БлокироватьПерерасчетСкидок = Ложь,
		ИмяТабличнойЧасти = "Товары",
		СтандартнаяОбработка = Истина
	) Экспорт
	
	Строка = Форма.Объект[ИмяТабличнойЧасти].НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Строка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не
		ПраваИНастройкиПользователяКлиент.Значение("СпособВыбораСкидки")
			= ПредопределенноеЗначение("Перечисление.СкидкиСпособыВыбора.РучныеСкидкиИРедактированиеПроцентов")
		Или БлокироватьПерерасчетСкидок
		Или Форма.Элементы[ИмяТабличнойЧасти].ТолькоПросмотр
	Тогда
		Возврат;
	КонецЕсли;
	
	КонтролируемыеРеквизиты = СкидкиНаценкиКлиентСервер.КонтролируемыеРеквизиты();
	Результат = КонтролируемыеРеквизиты.Получить(Поле.Имя);
	Если Результат <> Неопределено Тогда
		ПутьКРеквизиту = СтрРазделить(Результат, ".");
		Если СтрНайти(Результат, ИмяТабличнойЧасти) Тогда
			ИмяРеквизита = ПутьКРеквизиту[2];
			Значение = Строка[ИмяРеквизита];
		Иначе
			ИмяРеквизита = ПутьКРеквизиту[1];
			Значение = Форма.Объект[ИмяРеквизита];
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Значение) Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьПредупреждение(, НСтр("ru = 'Для редактирования суммы или процента необходимо выбрать скидку.'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти