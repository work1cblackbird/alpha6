///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// См. ОбменДаннымиПереопределяемый.ПриОпределенииПрефиксаИнформационнойБазыПоУмолчанию
Процедура ПриОпределенииПрефиксаИнформационнойБазыПоУмолчанию(Префикс) Экспорт
	
	Префикс = НСтр("ru = 'ЦБ'");
	
КонецПроцедуры

// См. ОбменДаннымиПереопределяемый.ПолучитьПланыОбмена
Процедура ПолучитьПланыОбмена(ПланыОбменаПодсистемы) Экспорт
	
	ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.УдаленныеПодразделения);
	ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат);
	
КонецПроцедуры

// См. ОбменДаннымиПереопределяемый.ПриПолученииДоступныхВерсийФормата
Процедура ПриПолученииДоступныхВерсийФормата(ВерсииФормата) Экспорт
	
	ВерсииФормата.Вставить("1.6", МенеджерОбменаЧерезУниверсальныйФормат);
	ВерсииФормата.Вставить("1.10", МенеджерОбменаЧерезУниверсальныйФормат); 
	ВерсииФормата.Вставить("1.11", МенеджерОбменаЧерезУниверсальныйФормат); 
	ВерсииФормата.Вставить("1.12", МенеджерОбменаЧерезУниверсальныйФормат); 
	ВерсииФормата.Вставить("1.15", МенеджерОбменаЧерезУниверсальныйФормат);
	ВерсииФормата.Вставить("1.16", МенеджерОбменаЧерезУниверсальныйФормат);
	ВерсииФормата.Вставить("1.17", МенеджерОбменаЧерезУниверсальныйФормат);
КонецПроцедуры

// См. ОбменДаннымиПереопределяемый.РегистрацияИзмененийНачальнойВыгрузкиДанных.
// 
Процедура РегистрацияИзмененийНачальнойВыгрузкиДанных(Получатель, СтандартнаяОбработка, Отбор) Экспорт

	Если ТипЗнч(Получатель) <> Тип("ПланОбменаСсылка.СинхронизацияДанныхЧерезУниверсальныйФормат") Тогда
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьНачальнуюВыгрузкуПоУмолчанию(Получатель, СтандартнаяОбработка, Отбор);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 
Процедура ЗарегистрироватьНачальнуюВыгрузкуПоУмолчанию(Получатель, СтандартнаяОбработка, Отбор) 
	
	СтандартнаяОбработка = Ложь;

	Отбор = Новый Массив;

	РеквизитыПолучателя = Новый Массив;
	РеквизитыПолучателя.Добавить("ИспользоватьОтборПоВидамДокументов");
	РеквизитыПолучателя.Добавить("РучнойОбмен");
	РеквизитыПолучателя.Добавить("ВидыДокументов");
	РеквизитыПолучателя.Добавить("ИспользоватьОтборПоОрганизациям");
	РеквизитыПолучателя.Добавить("ДатаНачалаВыгрузкиДокументов");
	РеквизитыПолучателя.Добавить("Организации");

	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Получатель, РеквизитыПолучателя);

	Если ЗначенияРеквизитов.РучнойОбмен Или ЗначенияРеквизитов.ИспользоватьОтборПоВидамДокументов Тогда

		Для Каждого ЭлементСостава Из Получатель.Метаданные().Состав Цикл
			Если Метаданные.Справочники.Содержит(ЭлементСостава.Метаданные) Тогда
				Отбор.Добавить(ЭлементСостава.Метаданные);
			КонецЕсли;
		КонецЦикла;

		Если ЗначенияРеквизитов.ИспользоватьОтборПоВидамДокументов Тогда

			Для Каждого СтрокаТабличнойЧасти Из Получатель.ВидыДокументов Цикл
				ОбъектМетаданных = Метаданные.Документы.Найти(СтрокаТабличнойЧасти.ИмяОбъектаМетаданных);
				Если ОбъектМетаданных <> Неопределено Тогда
					Отбор.Добавить(ОбъектМетаданных);
				КонецЕсли;
			КонецЦикла;

		КонецЕсли;

	Иначе

		Для Каждого ЭлементСостава Из Получатель.Метаданные().Состав Цикл
			Отбор.Добавить(ЭлементСостава.Метаданные);
		КонецЦикла;

	КонецЕсли;

	ВыгружатьПриНеобходимости = Новый Массив;
	ВыгружатьПриНеобходимости.Добавить(Метаданные.Справочники.КлассификаторБанков);
	ВыгружатьПриНеобходимости.Добавить(Метаданные.Справочники.Валюты);
	ВыгружатьПриНеобходимости.Добавить(Метаданные.Справочники.КлассификаторЕдиницИзмерения);
	ВыгружатьПриНеобходимости.Добавить(Метаданные.Справочники.СтраныМира);  
	ВыгружатьПриНеобходимости.Добавить(Метаданные.Справочники.КлассификаторТНВЭД);
	ВыгружатьПриНеобходимости.Добавить(Метаданные.Справочники.Пользователи);
	ВыгружатьПриНеобходимости.Добавить(Метаданные.Справочники.Производители);
	
	Для Каждого ЭлементМассива Из ВыгружатьПриНеобходимости Цикл
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(Отбор, ЭлементМассива);
	КонецЦикла;

	Если ЗначенияРеквизитов.ИспользоватьОтборПоОрганизациям Тогда
		ОтборПоОрганизации = ЗначенияРеквизитов.Организации.Выгрузить().ВыгрузитьКолонку("Организация");
	Иначе
		ОтборПоОрганизации = Неопределено;
	КонецЕсли;
	
	РегистрироватьСОтбором = Новый Массив;
	
	Если ОтборПоОрганизации <> Неопределено Тогда
		Для каждого ЭлементСостава Из Отбор Цикл
			
			Если ЭлементСостава = Метаданные.Справочники.Организации
				ИЛИ ЭлементСостава = Метаданные.Справочники.БанковскиеСчета
				ИЛИ ЭлементСостава = Метаданные.Справочники.ПодразделенияКомпании
				ИЛИ ЭлементСостава = Метаданные.Справочники.ДоговорыВзаиморасчетов
				ИЛИ ЭлементСостава = Метаданные.Справочники.СкладыКомпании 
				ИЛИ ЭлементСостава = Метаданные.Справочники.Патенты Тогда
					
				РегистрироватьСОтбором.Добавить(ЭлементСостава);
			КонецЕсли;
	
		КонецЦикла;
	КонецЕсли;
	Для Каждого ЭлементМассива Из РегистрироватьСОтбором Цикл
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(Отбор, ЭлементМассива);
	КонецЦикла;

	ОбменДаннымиСервер.ЗарегистрироватьДанныеПоДатеНачалаВыгрузкиИОрганизациям(Получатель,
		ЗначенияРеквизитов.ДатаНачалаВыгрузкиДокументов, ОтборПоОрганизации, Отбор
	);
		
	Для каждого ЭлементСостава Из РегистрироватьСОтбором Цикл
		
		ИмяОбъекта = ЭлементСостава.ПолноеИмя();
					
		Если ЭлементСостава = Метаданные.Справочники.Организации Тогда
				
			Для каждого ОрганизацияСсылка Из ОтборПоОрганизации Цикл
					
				ПланыОбмена.ЗарегистрироватьИзменения(Получатель, ОрганизацияСсылка);
					
			КонецЦикла;
				
		ИначеЕсли ЭлементСостава = Метаданные.Справочники.БанковскиеСчета Тогда
				
			Выборка = ВыбратьБанковскиеСчета(ОтборПоОрганизации);
			Пока Выборка.Следующий() Цикл
				
				ПланыОбмена.ЗарегистрироватьИзменения(Получатель, Выборка.Ссылка);
								
			КонецЦикла;
		
		ИначеЕсли ЭлементСостава = Метаданные.Справочники.Патенты Тогда 
			Выборка = ВыбратьПатенты(ОтборПоОрганизации);
			
			Пока Выборка.Следующий() Цикл
				
				ПланыОбмена.ЗарегистрироватьИзменения(Получатель, Выборка.Ссылка);
								
			КонецЦикла;
		
		ИначеЕсли ЭлементСостава = Метаданные.Справочники.ПодразделенияКомпании
				ИЛИ ЭлементСостава = Метаданные.Справочники.ДоговорыВзаиморасчетов
				ИЛИ ЭлементСостава = Метаданные.Справочники.СкладыКомпании Тогда 					
			
			Выборка = ВыбратьСправочники(ИмяОбъекта, ОтборПоОрганизации);
					
			Пока Выборка.Следующий() Цикл
						
				ПланыОбмена.ЗарегистрироватьИзменения(Получатель, Выборка.Ссылка);
						
			КонецЦикла;				
				
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры 


Функция ВыбратьБанковскиеСчета(ОтборПоОрганизации)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	БанковскиеСчета.Владелец КАК Владелец,
		|	БанковскиеСчета.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_БСОрганизации
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец ССЫЛКА Справочник.Организации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БанковскиеСчета.Владелец.Организация,
		|	БанковскиеСчета.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец ССЫЛКА Справочник.ПодразделенияКомпании
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_БанковскиеСчета.Владелец КАК Владелец,
		|	ВТ_БанковскиеСчета.Ссылка КАК Ссылка
		|ИЗ
		|	ВТ_БСОрганизации КАК ВТ_БанковскиеСчета
		|ГДЕ
		|	ВТ_БанковскиеСчета.Владелец В(&ОтборПоОрганизации)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БанковскиеСчета.Владелец,
		|	БанковскиеСчета.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец ССЫЛКА Справочник.Контрагенты";
	
	Запрос.УстановитьПараметр("ОтборПоОрганизации", ОтборПоОрганизации);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции 

Функция ВыбратьСправочники(ИмяОбъекта, ОтборПоОрганизации)
	
	Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	&ИмяОбъекта КАК Таблица
	|ГДЕ
	|	Таблица.Организация В(&ОтборПоОрганизации)";
	
	Текст = СтрЗаменить(Текст, "&ИмяОбъекта", ИмяОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтборПоОрганизации", ОтборПоОрганизации);
	Запрос.Текст = Текст;
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ВыбратьПатенты(ОтборПоОрганизации)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	 |	Патенты.Ссылка КАК Ссылка
	 |ИЗ
	 |	Справочник.Патенты КАК Патенты
	 |ГДЕ
	 |	Патенты.Владелец В (&ОтборПоОрганизации)";
	 
	Запрос.УстановитьПараметр("ОтборПоОрганизации", ОтборПоОрганизации); 
	 
	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

#КонецОбласти





