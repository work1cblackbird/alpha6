#Область ПрограммныйИнтерфейс

// см. СПАРКРискиПереопределяемый.ПриОпределенииСвойствСправочниковКонтрагентов 
Процедура ПриОпределенииСвойствСправочниковКонтрагентов(СвойстваСправочников) Экспорт
	
	ОписаниеСправочника = СвойстваСправочников.Добавить();
    ОписаниеСправочника.Иерархический = Истина;
    ОписаниеСправочника.Имя           = "Контрагенты";
    ОписаниеСправочника.РеквизитИНН   = "ИНН";
    
    ОписаниеСправочника = СвойстваСправочников.Добавить();
    ОписаниеСправочника.Имя         = "Организации";
    ОписаниеСправочника.РеквизитИНН = "ИНН";
	
КонецПроцедуры

// см. СПАРКРискиПереопределяемый.КонтрагентыДляМониторинга
Процедура КонтрагентыДляМониторинга(ПоставитьНаМониторинг, СнятьСМониторинга) Экспорт
	
    Запрос = Новый Запрос(
	    "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	    |	Контрагенты.Ссылка КАК КонтрагентСсылка
	    |ИЗ
	    |	Справочник.Контрагенты КАК Контрагенты
	    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтрагентыНаМониторингеСПАРКРиски КАК КонтрагентыНаМониторингеСПАРКРиски
	    |		ПО Контрагенты.Ссылка = КонтрагентыНаМониторингеСПАРКРиски.Контрагент
	    |ГДЕ
	    |	НЕ Контрагенты.ЭтоГруппа
	    |	И КонтрагентыНаМониторингеСПАРКРиски.Контрагент ЕСТЬ NULL
	    |
	    |ОБЪЕДИНИТЬ ВСЕ
	    |
	    |ВЫБРАТЬ
	    |	Организации.Ссылка
	    |ИЗ
	    |	Справочник.Организации КАК Организации
	    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтрагентыНаМониторингеСПАРКРиски КАК КонтрагентыНаМониторингеСПАРКРиски
	    |		ПО Организации.Ссылка = КонтрагентыНаМониторингеСПАРКРиски.Контрагент
	    |ГДЕ
	    |	КонтрагентыНаМониторингеСПАРКРиски.Контрагент ЕСТЬ NULL"
	);
    
    Выборка = Запрос.Выполнить().Выбрать();
    
    Пока Выборка.Следующий() Цикл
    	
        ПоставитьНаМониторинг.Добавить(Выборка.КонтрагентСсылка);
        
    КонецЦикла;
	
КонецПроцедуры

// см. СПАРКРискиПереопределяемый.ПараметрыОтображенияОтчетов
Процедура ПараметрыОтображенияОтчетов(ПараметрыОтображения) Экспорт
	
	ПараметрыОтображения.ИмяМакетаОформления = "Зеленый";
	
КонецПроцедуры

#Область ОбновлениеИБ

// Вызывается при переходе на версию конфигурации с внедренной подсистемой СПАРКРиски.
// Возвращает параметры, необходимые для начального заполнения данных
// в объектах метаданных подсистемы.
//
// Параметры:
//	ПараметрыЗаполнения - Структура - в параметре возвращаются значения для
//		начального заполнения данных подсистемы.
//		Поля структуры:
//		* ЗапросСвойствКонтрагентов - Строка - текст запроса для получения свойств
//			контрагентов, подлежащих проверке в сервисе 1СПАРК Риски: только
//			юридические лица, не являющиеся иностранными.
//			В запросе должны быть определены колонки:
//			** Контрагент - ОпределяемыйТип.КонтрагентБИП - ссылка на элемент
//				справочника контрагентов;
//			** ИНН - Строка - ИНН контрагента;
//			** СвояОрганизация - Булево - признак того, что контрагент является собственным -
//				дочерним по отношению к организации, в которой ведется учет.
//				Свойство может быть использовано для отбора данных в отчетах;
//			Значение по умолчанию: Неопределено.
//			Если значение свойства Неопределено, будет вызвано исключение.
//			Если значение - пустая строка - получение свойств контрагентов
//			не будет выполнено;
//		* ЗаполнитьКонтрагентовНаМониторинге - Булево - провести заполнение
//			списка контрагентов на мониторинге в соответствии с алгоритмом,
//			определенным в методе КонтрагентыДляМониторинга() текущего модуля.
//			Значение по умолчанию: Ложь;
//		* ЗаполнитьИндексыКонтрагентов - Булево - заполнить значения индексов
//			контрагентов. Истина - заполнить, Ложь - не заполнять.
//			Для заполненных индексов значения будут обновлены при следующем
//			обновлении значений индексов по расписанию (в регламентов).
//			Если индексы не заполнены, тогда контрагенты будут добавляться в
//			список индексов "По требованию";
//			Правило заполнения определяется значением поля
//			ЗапросКонтрагентовДляЗаполненияИндексов.
//		* ЗапросКонтрагентовДляЗаполненияИндексов - Строка - текст запроса для
//			получения контрагентов для заполнения индексов. Используется только
//			при ЗаполнитьИндексыКонтрагентов = Истина.
//			Если значение <Пустая строка>, список индексов будет заполнен
//			всеми контрагентами, полученными при выполнении запроса
//			ЗапросСвойствКонтрагентов, иначе - в соответствии с текстом запроса.
//			Значение по умолчанию: <Пустая строка>.
//			В запросе должна быть определена колонка:
//			** Контрагент - ОпределяемыйТип.КонтрагентБИП - ссылка на элемент
//				справочника контрагентов;
//
//@skip-warning
Процедура ПараметрыНачальногоЗаполненияДанных1СПАРКРискиЮридическихЛиц(ПараметрыЗаполнения) Экспорт
	
	ПараметрыЗаполнения.ЗапросСвойствКонтрагентов =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.ИНН КАК ИНН,
	|	ЛОЖЬ КАК СвояОрганизация
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	НЕ Контрагенты.ЭтоГруппа
	|	И Контрагенты.ФормаСобственности = ЗНАЧЕНИЕ(Перечисление.ФормыСобственности.ЮридическоеЛицо)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка,
	|	Организации.ИНН,
	|	ИСТИНА
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ФормаСобственности = ЗНАЧЕНИЕ(Перечисление.ФормыСобственности.ЮридическоеЛицо)";
	
	ПараметрыЗаполнения.ЗаполнитьКонтрагентовНаМониторинге = Истина;
	ПараметрыЗаполнения.ЗаполнитьИндексыКонтрагентов       = Истина;
	
КонецПроцедуры

// Вызывается при переходе на версию конфигурации с внедренной подсистемой СПАРКРиски.
// Возвращает параметры, необходимые для начального заполнения данных
// в объектах метаданных подсистемы.
//
// Параметры:
//	ПараметрыЗаполнения - Структура - в параметре возвращаются значения для
//		начального заполнения данных подсистемы.
//		Поля структуры:
//		* ЗапросСвойствКонтрагентов - Строка - текст запроса для получения свойств
//			контрагентов, подлежащих проверке в сервисе 1СПАРК Риски: только
//			индивидуальных предпринимателей, не являющиеся иностранными.
//			В запросе должны быть определены колонки:
//			** Контрагент - ОпределяемыйТип.КонтрагентБИП - ссылка на элемент
//				справочника контрагентов;
//			** ИНН - Строка - ИНН контрагента;
//			** СвояОрганизация - Булево - признак того, что контрагент является собственным -
//				дочерним по отношению к организации, в которой ведется учет.
//				Свойство может быть использовано для отбора данных в отчетах;
//			Значение по умолчанию: Неопределено.
//			Если значение свойства Неопределено, будет вызвано исключение.
//			Если значение - пустая строка - получение свойств контрагентов
//			не будет выполнено;
//		* ЗаполнитьКонтрагентовНаМониторинге - Булево - провести заполнение
//			списка контрагентов на мониторинге в соответствии с алгоритмом,
//			определенным в методе КонтрагентыДляМониторинга() текущего модуля.
//			Значение по умолчанию: Ложь;
//		* ЗаполнитьИндексыКонтрагентов - Булево - заполнить значения индексов
//			контрагентов. Истина - заполнить, Ложь - не заполнять.
//			Для заполненных индексов значения будут обновлены при следующем
//			обновлении значений индексов по расписанию (в регламентов).
//			Если индексы не заполнены, тогда контрагенты будут добавляться в
//			список индексов "По требованию";
//			Правило заполнения определяется значением поля
//			ЗапросКонтрагентовДляЗаполненияИндексов.
//		* ЗапросКонтрагентовДляЗаполненияИндексов - Строка - текст запроса для
//			получения контрагентов для заполнения индексов. Используется только
//			при ЗаполнитьИндексыКонтрагентов = Истина.
//			Если значение <Пустая строка>, список индексов будет заполнен
//			всеми контрагентами, полученными при выполнении запроса
//			ЗапросСвойствКонтрагентов, иначе - в соответствии с текстом запроса.
//			Значение по умолчанию: <Пустая строка>.
//			В запросе должна быть определена колонка:
//			** Контрагент - ОпределяемыйТип.КонтрагентБИП - ссылка на элемент
//				справочника контрагентов;
//
//@skip-warning
Процедура ПараметрыНачальногоЗаполненияДанных1СПАРКРискиИндивидуальныхПредпринимателей(ПараметрыЗаполнения) Экспорт
	
	ПараметрыЗаполнения.ЗапросСвойствКонтрагентов =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.ИНН КАК ИНН,
	|	ЛОЖЬ КАК СвояОрганизация
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	НЕ Контрагенты.ЭтоГруппа
	|	И Контрагенты.ФормаСобственности = ЗНАЧЕНИЕ(Перечисление.ФормыСобственности.ИндивидуальныйПредприниматель)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка,
	|	Организации.ИНН,
	|	ИСТИНА
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ФормаСобственности = ЗНАЧЕНИЕ(Перечисление.ФормыСобственности.ИндивидуальныйПредприниматель)";
	
	ПараметрыЗаполнения.ЗаполнитьКонтрагентовНаМониторинге = Истина;
	ПараметрыЗаполнения.ЗаполнитьИндексыКонтрагентов       = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОтчетыСПАКРРиски

// См. СПАРКРискиПереопределяемый.ПриФормированииОтчетаНадежностьВходящегоНДС
//
Процедура ПриФормированииОтчетаНадежностьВходящегоНДС(МенеджерВременныхТаблиц, ПараметрыОтбора, Использование) Экспорт
	
	ОтборОрганизация   = ПолучитьЗначениеПараметраСтруктуры(ПараметрыОтбора, "Организация");
	ОтборКонтрагенты   = ПолучитьЗначениеПараметраСтруктуры(ПараметрыОтбора, "Контрагенты");
	ОтборДатаНачала    = ПолучитьЗначениеПараметраСтруктуры(ПараметрыОтбора, "ДатаНачала");
	ОтборДатаОкончания = ПолучитьЗначениеПараметраСтруктуры(ПараметрыОтбора, "ДатаОкончания");
	
	ДополнительноеУсловие = Новый Массив;
	
	Если ОтборОрганизация <> Неопределено Тогда
		ДополнительноеУсловие.Добавить("И СчетФактураПолученный.Организация = &Организация");
	КонецЕсли;
	
	Если ОтборКонтрагенты <> Неопределено Тогда
		ДополнительноеУсловие.Добавить("И СчетФактураПолученный.Контрагент В(&Контрагенты)");
	КонецЕсли;
	
	Если ОтборДатаНачала <> Неопределено И ОтборДатаНачала <> Дата(1, 1, 1) Тогда
		ДополнительноеУсловие.Добавить("И СчетФактураПолученный.Дата >= &ДатаНачала");
	КонецЕсли;
	
	Если ОтборДатаОкончания <> Неопределено И ОтборДатаОкончания <> Дата(1, 1, 1) Тогда
		ДополнительноеУсловие.Добавить("И СчетФактураПолученный.Дата <= &ДатаОкончания");
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетФактураПолученный.Контрагент КАК Контрагент,
	|	СУММА(СчетФактураПолученный.СуммаДокумента) КАК Сумма,
	|	СУММА(СчетФактураПолученный.СуммаНДСДокумента) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТ_ДанныеНДС
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Проведен
	|	%ДополнительноеУсловие%
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураПолученный.Контрагент";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ДополнительноеУсловие%", СтрСоединить(ДополнительноеУсловие, " "));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Контрагенты",   ОтборКонтрагенты);
	Запрос.УстановитьПараметр("Организация",   ОтборОрганизация);
	Запрос.УстановитьПараметр("ДатаНачала",    ОтборДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ОтборДатаОкончания);
	Запрос.Выполнить();
	
КонецПроцедуры

// См. СПАРКРискиПереопределяемый.ПриФормированииНадежностьДебиторов
//
Процедура ПриФормированииНадежностьДебиторов(МенеджерВременныхТаблиц, ПараметрыОтбора, Использование) Экспорт
	
	ОтборОрганизация = ПолучитьЗначениеПараметраСтруктуры(ПараметрыОтбора, "Организация");
	ОтборКонтрагенты = ПолучитьЗначениеПараметраСтруктуры(ПараметрыОтбора, "Контрагенты");
	
	ДополнительноеУсловие = Новый Массив;
	
	Если ОтборОрганизация <> Неопределено Тогда
		ДополнительноеУсловие.Добавить("ДоговорВзаиморасчетов.Организация = &Организация");
	КонецЕсли;
	
	Если ОтборКонтрагенты <> Неопределено Тогда
		ДополнительноеУсловие.Добавить("Контрагент В (&Контрагенты)");
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&Раздел КАК Раздел,
	|	РасчетыСКонтрагентамиОстаткиИОбороты.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА РасчетыСКонтрагентамиОстаткиИОбороты.СуммаОстаток > 0
	|			ТОГДА РасчетыСКонтрагентамиОстаткиИОбороты.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Задолженность
	|ПОМЕСТИТЬ ВТ_Взаиморасчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(&ДатаОкончания, %ДополнительноеУсловие%) КАК РасчетыСКонтрагентамиОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Раздел,
	|	ВзаиморасчетыКомпанииОстатки.Контрагент,
	|	ВЫБОР
	|		КОГДА ВзаиморасчетыКомпанииОстатки.СуммаОстаток > 0
	|			ТОГДА ВзаиморасчетыКомпанииОстатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыКомпании.Остатки(&ДатаОкончания, %ДополнительноеУсловие%) КАК ВзаиморасчетыКомпанииОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Взаиморасчеты.Раздел КАК Раздел,
	|	ВТ_Взаиморасчеты.Контрагент КАК Контрагент,
	|	СУММА(ВТ_Взаиморасчеты.Задолженность) КАК Задолженность
	|ПОМЕСТИТЬ ВТ_Долги
	|ИЗ
	|	ВТ_Взаиморасчеты КАК ВТ_Взаиморасчеты
	|ГДЕ
	|	ВТ_Взаиморасчеты.Задолженность <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Взаиморасчеты.Раздел,
	|	ВТ_Взаиморасчеты.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Взаиморасчеты";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ДополнительноеУсловие%", СтрСоединить(ДополнительноеУсловие, " И "));

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр(
		"ДатаОкончания",
		ПолучитьЗначениеПараметраСтруктуры(ПараметрыОтбора, "Дата", Дата(1, 1, 1)));
	Запрос.УстановитьПараметр("Организация", ОтборОрганизация);
	Запрос.УстановитьПараметр("Контрагенты", ОтборКонтрагенты);
	Запрос.УстановитьПараметр("Раздел", НСтр("ru='Дебиторы'"));
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти