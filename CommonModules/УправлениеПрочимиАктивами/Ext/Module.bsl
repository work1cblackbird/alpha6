// Общий модуль "Управление прочими активами"


#Область СлужебныеПроцедурыИФункции

// Получить остатки актива
// 	Параметры:
// 		ПараметрыЗапроса - Структура - структура параметров:
//			 * Актив         - СправочникСсылка.ПрочиеАктивы или массив Активов отбора,
// 			 * Подразделение - СправочникСсылка.ПодразделенияКомпании,
// 			 * МОЛ           - СправочникСсылка.Сотрудники,
// 			 * Момент        - Момент, на какой необходимо производить расчет
// 	Возвращаемое значение:
//		ТаблицаЗначений - [Актив, МОЛ, Тип эксплуатации, Балансовая стоимость, Амортизация, СуммаОбслуживания].
//
Функция ПолучитьОстаткиАктивов(ПараметрыЗапроса = Неопределено) Экспорт
	
	Если ПараметрыЗапроса = Неопределено Тогда
		ПараметрыЗапроса = Новый Структура;
	КонецЕсли;
	Если НЕ ПараметрыЗапроса.Свойство("Подразделение") Тогда
		ПараметрыЗапроса.Вставить("Подразделение", Неопределено);
	КонецЕсли;
	Если НЕ ПараметрыЗапроса.Свойство("МОЛ") Тогда
		ПараметрыЗапроса.Вставить("МОЛ", Неопределено);
	КонецЕсли;
	Если НЕ ПараметрыЗапроса.Свойство("Актив") Тогда
		ПараметрыЗапроса.Вставить("Актив", Неопределено);
	КонецЕсли;
	Если НЕ ПараметрыЗапроса.Свойство("Момент") Тогда
		ПараметрыЗапроса.Вставить("Момент", Новый МоментВремени(КонецДня(ТекущаяДатаСеанса())));
	КонецЕсли;
	Если НЕ ПараметрыЗапроса.Свойство("ИмяКолонкиАктив") Тогда
		ПараметрыЗапроса.Вставить("ИмяКолонкиАктив", "Актив");
	КонецЕсли;
	
	// сформируем запрос на получение остатков по активу
	ТекстПараметрыВиртуальнойТаблицы = "&Момент, ";
	ТекстПараметрыВиртуальнойТаблицы = ТекстПараметрыВиртуальнойТаблицы 
		+ ?(НЕ ЗначениеЗаполнено(ПараметрыЗапроса.Подразделение), "", "ПодразделениеКомпании В Иерархии (&Подразделение) И ");
	ТекстПараметрыВиртуальнойТаблицы = ТекстПараметрыВиртуальнойТаблицы + 
		?(НЕ ЗначениеЗаполнено(ПараметрыЗапроса.МОЛ), "", "МОЛ = &МОЛ И ");
	ПараметрыЗапросаАктивТекст = ?(ТипЗнч(ПараметрыЗапроса.Актив) = Тип("Массив"), "В", " = ");	
	ТекстПараметрыВиртуальнойТаблицы = ТекстПараметрыВиртуальнойТаблицы + 
		?(НЕ ЗначениеЗаполнено(ПараметрыЗапроса.Актив), "", "(ПрочийАктив " + ПараметрыЗапросаАктивТекст + " (&Актив)) И ");
	ТекстПараметрыВиртуальнойТаблицы = ?(ТекстПараметрыВиртуальнойТаблицы = "&Момент, ", 
					ТекстПараметрыВиртуальнойТаблицы, Лев(ТекстПараметрыВиртуальнойТаблицы, СтрДлина(ТекстПараметрыВиртуальнойТаблицы) - 3));
	
	Запрос = Новый Запрос();
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АктивыПодразделенияОстатки.ПрочийАктив КАК " + ПараметрыЗапроса.ИмяКолонкиАктив + ",
	|	АктивыПодразделенияОстатки.ТипЭксплуатации КАК ТипЭксплуатации,
	|	АктивыПодразделенияОстатки.МОЛ КАК МОЛ,
	|	АктивыПодразделенияОстатки.Автомобиль КАК Автомобиль,
	|	ЕСТЬNULL(АктивыПодразделенияОстатки.БалансоваяСтоимостьУпрОстаток, 0) КАК БалансоваяСтоимость,
	|	ЕСТЬNULL(АктивыПодразделенияОстатки.СуммаАмортизацииУпрОстаток, 0) КАК Амортизация,
	|	ЕСТЬNULL(АктивыПодразделенияОстатки.СуммаОбслуживанияУпрОстаток, 0) КАК СуммаОбслуживания,
	|	ЕСТЬNULL(АктивыПодразделенияОстатки.БалансоваяСтоимостьОстаток, 0) КАК БалансоваяСтоимостьРегл,
	|	ЕСТЬNULL(АктивыПодразделенияОстатки.СуммаАмортизацииОстаток, 0) КАК АмортизацияРегл,
	|	ЕСТЬNULL(АктивыПодразделенияОстатки.СуммаОбслуживанияОстаток, 0) КАК СуммаОбслуживанияРегл,
	|	ЕСТЬNULL(АктивыПодразделенияОстатки.КоличествоОстаток, 0) КАК Количество
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыВЭксплуатации.Остатки(" 
				+ ТекстПараметрыВиртуальнойТаблицы + ") КАК АктивыПодразделенияОстатки
	|ГДЕ
	|	АктивыПодразделенияОстатки.КоличествоОстаток > 0";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Момент"        , ПараметрыЗапроса.Момент);
	Запрос.УстановитьПараметр("Подразделение" , ПараметрыЗапроса.Подразделение);
	Запрос.УстановитьПараметр("МОЛ"           , ПараметрыЗапроса.МОЛ);
	Запрос.УстановитьПараметр("Актив"         , ПараметрыЗапроса.Актив);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Получить остатки актива, который нужно амортизировать на тек. период
// 	Параметры:
//		ДатаКонца     - конец периода амортизации,
//		Актив         - СправочникСсылка.ПрочиеАктивы или массив Активов отбора,
// 		Подразделение - СправочникСсылка.ПодразделенияКомпании,
// 		МОЛ           - СправочникСсылка.Сотрудники
// 	Возвращаемое значение:
//		ТаблицаЗначений - [Актив, МОЛ, Тип эксплуатации, Балансовая стоимость, Амортизация, СуммаОбслуживания].
//
Функция ПолучитьОстаткиАктивовНеАмортизированных(ДатаКонца, Подразделение = Неопределено, МОЛ = Неопределено, Актив = Неопределено) Экспорт
	
	// сформируем запрос на получение остатков по активу
	ТекстПараметрыВиртуальнойТаблицы = "&Момент, ";
	ТекстПараметрыВиртуальнойТаблицы = ТекстПараметрыВиртуальнойТаблицы + 
			?(НЕ ЗначениеЗаполнено(Подразделение), "", "ПодразделениеКомпании = &Подразделение И ");
	ТекстПараметрыВиртуальнойТаблицы = ТекстПараметрыВиртуальнойТаблицы + ?(НЕ ЗначениеЗаполнено(МОЛ), "", "МОЛ = &МОЛ И ");
	АктивТекст = ?(ТипЗнч(Актив) = Тип("Массив"), "В", " = ");	
	ТекстПараметрыВиртуальнойТаблицы = ТекстПараметрыВиртуальнойТаблицы + 
			?(НЕ ЗначениеЗаполнено(Актив), "", "(ПрочийАктив " + АктивТекст + " (&Актив)) И ");
	ТекстПараметрыВиртуальнойТаблицы = Лев(ТекстПараметрыВиртуальнойТаблицы, СтрДлина(ТекстПараметрыВиртуальнойТаблицы) - 3);
	
	Запрос = Новый Запрос();
	ТекстЗапроса = "ВЫБРАТЬ ПромежуточнаяТаблица.*
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		АктивыПодразделенияОстатки.ПрочийАктив КАК Актив,
	               |		АктивыПодразделенияОстатки.ТипЭксплуатации КАК ТипЭксплуатации,
	               |		АктивыПодразделенияОстатки.МОЛ КАК МОЛ,
	               |		ЕСТЬNULL(АктивыПодразделенияОстатки.БалансоваяСтоимостьОстаток, 0) КАК БалансоваяСтоимостьРегл,
	               |		ЕСТЬNULL(АктивыПодразделенияОстатки.БалансоваяСтоимостьУпрОстаток, 0) КАК БалансоваяСтоимость,
	               |		ЕСТЬNULL(АктивыПодразделенияОстатки.СуммаАмортизацииОстаток, 0) КАК АмортизацияРегл,
	               |		ЕСТЬNULL(АктивыПодразделенияОстатки.СуммаАмортизацииУпрОстаток, 0) КАК Амортизация,
	               |		ЕСТЬNULL(АктивыПодразделенияОстатки.СуммаОбслуживанияОстаток, 0) КАК СуммаОбслуживанияРегл,
	               |		ЕСТЬNULL(АктивыПодразделенияОстатки.СуммаОбслуживанияУпрОстаток, 0) КАК СуммаОбслуживания,
	               |		ЕСТЬNULL(АктивыПодразделенияОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
	               |	ИЗ
	               |		РегистрНакопления.ПрочиеАктивыВЭксплуатации.Остатки(" + ТекстПараметрыВиртуальнойТаблицы + ") КАК АктивыПодразделенияОстатки) КАК ПромежуточнаяТаблица
	               |ГДЕ
	               |	ПромежуточнаяТаблица.БалансоваяСтоимость > ПромежуточнаяТаблица.Амортизация
	               |	И ПромежуточнаяТаблица.КоличествоОстаток > 0";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Момент"        , ДатаКонца);
	Запрос.УстановитьПараметр("Подразделение" , Подразделение);
	Запрос.УстановитьПараметр("МОЛ"           , МОЛ);
	Запрос.УстановитьПараметр("Актив"         , Актив);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "ТОВАРЫ"

// Общий обработчик события возникающего после удаления строки.
//
// Параметры:
//  Форма   - УправляемаяФорма - Форма, в которой возникло событие.
//  Элемент - ТаблицаФормы     - Элемент управления, в котором возникло данное событие.
//
Процедура АктивыПослеУдаления(Форма, Элемент, ПараметрыДействия = Неопределено) Экспорт
	
	// Обновляем заголовок надписи итоговой суммы по документу
	ЗащищенныеФункцииСервер.УстановитьЗаголовокНадписиСуммаДокумента(Форма);
	
КонецПроцедуры // АктивыПослеУдаления()

#КонецОбласти