
#Область ПрограммныйИнтерфейс

// Общий обработчик события возникающего при изменении данных объекта из формы "Параметры документа".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ПараметрыДокументаПриИзмененииРеквизитов(Объект, ПараметрыДействия) Экспорт
	
	Если ПараметрыДействия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзмененныеРеквизиты = ПараметрыДействия.ИзмененныеРеквизиты;

	Если ИзмененныеРеквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Флаг, который может быть установлен в Истину при изменении ряда реквизитов
	НужноОбновитьПодписантов = Ложь;

	ЗаполнитьЗначенияСвойств(Объект, ИзмененныеРеквизиты);

	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	
	Если ИзмененныеРеквизиты.Свойство("Дата") Тогда 
		МенеджерОбъекта.ДатаПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("ПодразделениеКомпании") Тогда 
		МенеджерОбъекта.ПодразделениеКомпанииПриИзменении(Объект, ПараметрыДействия);
		НужноОбновитьПодписантов = Истина;
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("Организация") Тогда
		МенеджерОбъекта.ОрганизацияПриИзменении(Объект, ПараметрыДействия);
		НужноОбновитьПодписантов = Истина;
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("Автор") Тогда
		МенеджерОбъекта.АвторПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("Проект") Тогда
		МенеджерОбъекта.ПроектПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("ТипЦен") Тогда
		ПараметрыДействия.Вставить("ИзменятьВалютуИзТипаЦен", Ложь);
		МенеджерОбъекта.ТипЦенПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("ТипЦенРабот") Тогда
		ПараметрыДействия.Вставить("ИзменятьВалютуИзТипаЦен", Ложь);
		МенеджерОбъекта.ТипЦенРаботПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("КурсДокумента") Тогда
		МенеджерОбъекта.КурсДокументаПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("ДокументОснование") Тогда
		МенеджерОбъекта.ДокументОснованиеПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("КурсВалютыВзаиморасчетов") Тогда
		МенеджерОбъекта.КурсВалютыВзаиморасчетовПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("СкидкаНаценка") Тогда
		МенеджерОбъекта.СкидкаНаценкаПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("СкидкаНаценкаРаботы") Тогда
		МенеджерОбъекта.СкидкаНаценкаРаботыПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.Свойство("Карточка") Тогда
		МенеджерОбъекта.КарточкаПриИзменении(Объект, ПараметрыДействия);
	КонецЕсли;
	
	Если НужноОбновитьПодписантов Тогда
		ДокументыОрганизации = УправлениеПечатьюПлатформа.ПолучитьДокументыОрганизации();
		ИмяОбъекта = Объект.Ссылка.Метаданные().Имя;
	
		Если ДокументыОрганизации.Найти(ИмяОбъекта)<> Неопределено Тогда
			ОбработкаСобытийДокументаСервер.ЗаполнитьПодписантовИзОрганизации(Объект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Общий обработчик события возникающего при изменении данных объекта из формы "Параметры документа".
//
// Параметры:
//  Форма		 - УправляемаяФорма		 - Форма, в которой возникло событие.
//  Параметры	 - Структура			 - Содержит значения измененных реквизитов.
//  Объект		 - ДанныеФормыСтруктура	 - Объект, для которого выполняется формирование текста подвала.
//
Процедура ПараметрыДокументаПриИзменении(Форма, Параметры, Объект = Неопределено) Экспорт
	
	Если Параметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьОсновнойОбъектФормы(Форма, Объект);

	ПоказыватьПараметрыДокумента = (Параметры.Свойство("ПоказыватьПараметрыДокумента") И Параметры.ПоказыватьПараметрыДокумента);

	Если НЕ Форма.Элементы.Найти("ПараметрыДокумента") = Неопределено И НЕ Форма.Элементы.ПараметрыДокумента.Видимость=ПоказыватьПараметрыДокумента И НЕ Форма.Элементы.НомерДата.Видимость=ПоказыватьПараметрыДокумента Тогда
		Форма.Элементы.ПараметрыДокумента.Видимость = ПоказыватьПараметрыДокумента;
		Форма.Элементы.НомерДата         .Видимость = ПоказыватьПараметрыДокумента;
		// Взведем признак необходимости выполнить сохранение настроек формы при закрытии
		Форма.СохраняемыеВНастройкахДанныеМодифицированы = ИСТИНА;
	КонецЕсли;

	Если Параметры.ИзмененныеРеквизиты.Свойство("ПодразделениеКомпании") Тогда
		ЗащищенныеФункцииСервер.РасставитьСвязиПараметровВыбораПоОрганизации(Форма, Объект);
	КонецЕсли;
	
	Если Параметры.Свойство("Штрихкод") И ЕстьРеквизит(Форма,"Штрихкод") Тогда
		Если ЕстьРеквизит(Форма,"Штрихкод") Тогда
			Форма.Штрихкод = Параметры.Штрихкод;
		Иначе
			СлужебныеРеквизиты = Новый Структура();
			СлужебныеРеквизиты.Вставить("Штрихкод",Параметры.Штрихкод);
			УправлениеДиалогомСервер.ДобавитьРеквизитыФормы(Форма, СлужебныеРеквизиты);
		КонецЕсли;
		Форма.Модифицированность = Истина;
	КонецЕсли;

	Если НЕ Форма.Элементы.Найти("ПараметрыДокумента") = Неопределено Тогда
		Форма.ПараметрыДокумента = "" + ?(ЗначениеЗаполнено(Объект.Организация), Строка(Объект.Организация)+"; ", "") + ?(ЗначениеЗаполнено(Объект.ПодразделениеКомпании), Строка(Объект.ПодразделениеКомпании)+"; ", "") + Строка(Объект.Автор);
	КонецЕсли;
	Если ЕстьРеквизит(Объект,"Патент") Тогда 
		ОрганизацияДокумента   = ?(ЕстьРеквизит(Объект, "Организация"), Объект.Организация, ПараметрыСеанса.Организация);
		НаДату = ?(ЕстьРеквизит(Объект, "Дата"), Объект.Дата, ТекущаяДатаСеанса());	
		ВидНалога = УчетныеПолитикиСервер.Значение("ВидНалога",	НаДату, ОрганизацияДокумента, Ложь);
        Если ВидНалога = Перечисления.ВидыНалогов.ПСН Тогда
			Форма.Элементы.ИспользуетсяПСН.Видимость = Истина; 
			Форма.Элементы.Патент.Видимость = Истина;
		Иначе
			Форма.Элементы.ИспользуетсяПСН.Видимость = Ложь; 
			Форма.Элементы.Патент.Видимость = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.Патент) Тогда
	    	Форма.ИспользуетсяПСН = Истина; 
			Форма.Элементы.Патент.Доступность = Истина;
		Иначе
			Форма.ИспользуетсяПСН = Ложь; 
			Форма.Элементы.Патент.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	Форма.Модифицированность = Форма.Модифицированность ИЛИ (НЕ Параметры.ИзмененныеРеквизиты.Количество()=0);
	
КонецПроцедуры

// Функция формирует строку представления реквизита формы "ПараметрыДокумента"
//
// Параметры: 
//  Объект		 - ДанныеФормыСтруктура	 - Объект, для которого выполняется формирование представления параметров.
// 
// Возвращаемое значение:
//  Строка - строковое представление параметров документа
//  
Функция СформироватьПредставлениеПараметровДокумента(Объект) Экспорт
	
	ПредставлениеПараметровДокумента = Новый Массив();
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ПредставлениеПараметровДокумента.Добавить(Объект.Организация);
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.ПодразделениеКомпании) Тогда
		ПредставлениеПараметровДокумента.Добавить(Объект.ПодразделениеКомпании);
	КонецЕсли;
	
	ПредставлениеПараметровДокумента.Добавить(Объект.Автор);
	
	Возврат СтрСоединить(ПредставлениеПараметровДокумента, "; ");
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьКомандуПараметровДокумента(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	ЭтоДокумент 	= Ложь;
	СтрокиИсточники = НастройкиФормы.Источники.Строки;
	Если СтрокиИсточники.Количество() Тогда
		ЭтоДокумент 	= ОбщегоНазначения.ЭтоДокумент(СтрокиИсточники[0].Метаданные);
		ОбъектМенеджер	= СтрокиИсточники[0].Менеджер;
	КонецЕсли;
		
	Если ЭтоДокумент И НастройкиФормы.ЭтоФормаОбъекта Тогда
		СписокОбъектов = Новый СписокЗначений;
		УправлениеПечатьюАльфаАвто.ПриОпределенииОбъектовСПараметрамиДокумента(СписокОбъектов);
		Если СписокОбъектов.НайтиПоЗначению(ОбъектМенеджер) = Неопределено Тогда
			Возврат;	
		КонецЕсли;
		
		Команда = Команды.Добавить();
		Команда.Представление      	= НСтр("ru = 'Параметры'");
		Команда.Вид                	= "Параметры";
		Команда.МножественныйВыбор	= Ложь;
		Команда.РежимЗаписи			= "НеЗаписывать";
		Команда.Обработчик			= "ОбщиеПараметрыДокументовКлиент.НастроитьПараметрыДокумента";
		Команда.ИмяФормы           	= "ОбщаяФорма.ПараметрыДокумента";
		Команда.Картинка           	= БиблиотекаКартинок.ПараметрыДокумента;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОпределенииВидовПодключаемыхКоманд(ВидыПодключаемыхКоманд) Экспорт
	
	Вид 			= ВидыПодключаемыхКоманд.Добавить();
	Вид.Имя         = "Параметры";
	Вид.ИмяПодменю  = "ДействияФормы";
	Вид.Заголовок   = НСтр("ru = 'Параметры'");
	
КонецПроцедуры

#КонецОбласти

