#Область ПрограммныйИнтерфейс

// Перечисление видов оснований для расчета
// 
// Возвращаемое значение:
// 	Структура - с полями:
// 		* СебестоимостьПартии - число 
// 		* ЕдиницаИзмерения    - число
// 		* Подразделение		  - число
// 		* СебестоимостьУпр	  - число
// 		* ПрайсЛистПоставщика - число
// 		* СебестоимостьРег 	  - число
// 		* ЦенаПоставщика	  - число
// 		* ДокументОснование	  - число
// 		* БазовыйТипЦен 	  - число
//
Функция ВидыОснованийДляРасчетаЦен() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("БазовыйТипЦен",       	 0);
	Результат.Вставить("ДокументОснование",  	 1);
	Результат.Вставить("ЦенаПоставщика",     	 2);
	Результат.Вставить("СебестоимостьРег",    	 3);
	Результат.Вставить("ПрайсЛистПоставщика", 	 4);
	Результат.Вставить("СебестоимостьУпр",	     5);
	Результат.Вставить("Подразделение",       	 6);
	Результат.Вставить("ЕдиницаИзмерения",    	 7);
	Результат.Вставить("СебестоимостьПартии", 	 8);
	Результат.Вставить("СебестоимостьРегБезНДС", 9);
	Результат.Вставить("СебестоимостьУпрБезНДС", 10);
	Возврат Результат;
	
КонецФункции

// Определяем являяется ли базой для базовой цены себестоимость товара или услуги
// 
// Параметры:
// 	ВидРасчета - Число - вид базы расчета
// Возвращаемое значение:
// 	Булево
//
Функция ЭтоВидРасчетаОтСебестоимости(ВидРасчета) Экспорт
	
	ВидыОснованийДляРасчетаЦен = ВидыОснованийДляРасчетаЦен();
	
	Возврат ВидРасчета = ВидыОснованийДляРасчетаЦен.СебестоимостьРег
		ИЛИ ВидРасчета = ВидыОснованийДляРасчетаЦен.СебестоимостьУпр
		ИЛИ ВидРасчета = ВидыОснованийДляРасчетаЦен.СебестоимостьРегБезНДС
		ИЛИ ВидРасчета = ВидыОснованийДляРасчетаЦен.СебестоимостьУпрБезНДС;
	
КонецФункции

// Выполняет округление цены товара или услуги
// 
// Параметры:
// 	Цена        - Число - цена товара до округления
// 	ОкруглятьДо - Число - число с которому должно быть кратна цена после округления
// Возвращаемое значение:
// 	Число - округленная цена
//
Функция ОкруглитьЦену(Цена, ОкруглятьДо) Экспорт
	
	ДельтаОкругления    = ?(ОкруглятьДо = 0, 0, Цена / ОкруглятьДо);
	ДельтаОкругленияЦел = Цел(ДельтаОкругления);
	
	Если ДельтаОкругления <> ДельтаОкругленияЦел Тогда
		
		Возврат (ДельтаОкругленияЦел + 1) * ОкруглятьДо;
		
	КонецЕсли;
	
	Возврат Цена;
	
КонецФункции

#КонецОбласти