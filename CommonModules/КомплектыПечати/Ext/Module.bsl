
#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьКомандуКомплектовПечати(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	ТипыОбъектовКомплекта 	= Новый Массив;
	СтрокиИсточники 		= НастройкиФормы.Источники.Строки;
	Если СтрокиИсточники.Количество() Тогда
		ОбъектМетаданных = СтрокиИсточники[0].Метаданные;
		ОбъектМенеджер	 = СтрокиИсточники[0].Менеджер;
	КонецЕсли;
	
	МассивФО = Новый Массив;
	Для Каждого ФункциональнаяОпция Из Метаданные.ФункциональныеОпции Цикл
		Если ФункциональнаяОпция.Состав.Содержит(ОбъектМетаданных) Тогда
			МассивФО.Добавить(ФункциональнаяОпция.Имя);	
		КонецЕсли;
	КонецЦикла;
	
	СписокОбъектов = Новый СписокЗначений;
	УправлениеПечатьюАльфаАвто.ПриОпределенииОбъектовСПечатьюКомплектов(СписокОбъектов);
	Если СписокОбъектов.НайтиПоЗначению(ОбъектМенеджер) = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если ОбщегоНазначения.ЭтоЖурналДокументов(ОбъектМетаданных) Тогда
		Для Каждого Документ Из ОбъектМетаданных.РегистрируемыеДокументы Цикл
			ТипыОбъектовКомплекта.Добавить("Документ." + Документ.Имя);
		КонецЦикла;
	ИначеЕсли Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда
		ТипыОбъектовКомплекта.Добавить(ОбъектМетаданных.ПолноеИмя());
	КонецЕсли;
	
	Если ТипыОбъектовКомплекта.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НастройкаПечатиКомплекта.Ссылка КАК Ссылка,
		|	НастройкаПечатиКомплекта.Код КАК Код,
		|	НастройкаПечатиКомплекта.Наименование КАК Наименование
		|ПОМЕСТИТЬ ВозможныеКомплекты
		|ИЗ
		|	Справочник.НастройкаПечатиКомплекта КАК НастройкаПечатиКомплекта
		|ГДЕ
		|	НастройкаПечатиКомплекта.СписокПечатныхФорм.ТипДокумента В(&ТипДокумента)
		|	И НастройкаПечатиКомплекта.ПометкаУдаления = ЛОЖЬ
		|	И (НастройкаПечатиКомплекта.ТипДоступа = ЗНАЧЕНИЕ(Перечисление.ТипыДоступаКВариантуОтчета.БезОграничения)
		|			ИЛИ НастройкаПечатиКомплекта.ТипДоступа = ЗНАЧЕНИЕ(Перечисление.ТипыДоступаКВариантуОтчета.ПоПользователю)
		|				И НастройкаПечатиКомплекта.ОбъектДоступа = &Администратор
		|			ИЛИ НастройкаПечатиКомплекта.ТипДоступа = ЗНАЧЕНИЕ(Перечисление.ТипыДоступаКВариантуОтчета.ПоПодразделениюКомпании)
		|				И НастройкаПечатиКомплекта.ОбъектДоступа = &ПодразделениеКомпании
		|			ИЛИ НастройкаПечатиКомплекта.ТипДоступа = ЗНАЧЕНИЕ(Перечисление.ТипыДоступаКВариантуОтчета.ПоГруппеПользователей)
		|				И НастройкаПечатиКомплекта.ОбъектДоступа В
		|					(ВЫБРАТЬ
		|						ГруппыПользователейСостав.Ссылка
		|					ИЗ
		|						Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
		|					ГДЕ
		|						ГруппыПользователейСостав.Пользователь = &Администратор))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкаПечатиКомплектаСписокПечатныхФорм.ТипДокумента КАК ТипДокумента,
		|	ВозможныеКомплекты.Код КАК Код,
		|	ВозможныеКомплекты.Наименование КАК Наименование
		|ИЗ
		|	ВозможныеКомплекты КАК ВозможныеКомплекты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкаПечатиКомплекта.СписокПечатныхФорм КАК НастройкаПечатиКомплектаСписокПечатныхФорм
		|		ПО ВозможныеКомплекты.Ссылка = НастройкаПечатиКомплектаСписокПечатныхФорм.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	НастройкаПечатиКомплектаСписокПечатныхФорм.ТипДокумента,
		|	ВозможныеКомплекты.Код,
		|	ВозможныеКомплекты.Наименование
		|ИТОГИ ПО
		|	Код";
		
		Запрос.УстановитьПараметр("ТипДокумента",			ТипыОбъектовКомплекта);
		Запрос.УстановитьПараметр("ПодразделениеКомпании",	ПараметрыСеанса.ПодразделениеКомпании);
		Запрос.УстановитьПараметр("Администратор",			Пользователи.ТекущийПользователь());
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Для Каждого Команда Из Команды Цикл
			Команда.Важность = ?(ПустаяСтрока(Команда.Важность), "Важное", Команда.Важность);
		КонецЦикла;
				
		Команда 					= Команды.Добавить();
		Команда.Идентификатор 		= "НастройкаКомплекта";
		Команда.Представление 		= НСтр("ru = 'Настройки комплекта'");
		Команда.Вид 				= "Печать";
		Команда.Подменю 			= "ПодменюКомплектыПечати";
		Команда.МножественныйВыбор 	= Истина;
		Команда.Обработчик 			= "КомплектыПечатиКлиент.НастроитьКомплектыПечати";
		Команда.РежимЗаписи 		= "НеЗаписывать";
		Команда.Порядок		 		= 51;
		Команда.ФункциональныеОпции = СтрСоединить(МассивФО, ",");
		
		Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			ИмяКоманды = "ПечатьКомплекта" + Выборка.Код;
			ВыборкаТипов = Выборка.Выбрать();
			Пока ВыборкаТипов.Следующий() Цикл
				ПредставлениеКоманды = ВыборкаТипов.Наименование;
			КонецЦикла;
			
			Команда 					= Команды.Добавить();
			Команда.Идентификатор 		= ИмяКоманды;
			Команда.Представление 		= ПредставлениеКоманды;
			Команда.Вид 				= "Печать";
			Команда.Подменю 			= "ПодменюКомплектыПечати";
			Команда.МножественныйВыбор 	= Истина;
			Команда.РежимЗаписи 		= "Записывать";
			Команда.Обработчик			= "КомплектыПечатиКлиент.ОтправитьКомплектыНаПечать";
			Команда.ФункциональныеОпции = СтрСоединить(МассивФО, ",");
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьПечатныеФормы(Знач ИмяМенеджераПечати, Знач ИменаМакетов, Знач МассивОбъектов, Знач ПараметрыПечати, 
	ДопустимыеТипыОбъектовПечати = Неопределено, Знач КодЯзыка = Неопределено) Экспорт
	
	КоллекцияПечатныхФорм = УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм(Новый Массив);
	ОбъектыПечати = Новый СписокЗначений;
	
	ПараметрыВывода = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();
	Если ЗначениеЗаполнено(КодЯзыка) Тогда
		ПараметрыВывода.КодЯзыка = КодЯзыка;
	КонецЕсли;
	
	Если ТипЗнч(ИменаМакетов) = Тип("Строка") Тогда
		ИменаМакетов = СтрРазделить(ИменаМакетов, ",");
	Иначе // Тип("Массив")
		ИменаМакетов = ОбщегоНазначения.СкопироватьРекурсивно(ИменаМакетов);
	КонецЕсли;
	
	ПрефиксВнешнихПечатныхФорм = "ВнешняяПечатнаяФорма.";
	
	ИсточникВнешнихПечатныхФорм = ИмяМенеджераПечати;
	Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(МассивОбъектов)) Тогда
		ИсточникВнешнихПечатныхФорм = МассивОбъектов.Метаданные().ПолноеИмя();
	Иначе
		Если МассивОбъектов.Количество() > 0 Тогда
			ИсточникВнешнихПечатныхФорм = МассивОбъектов[0].Метаданные().ПолноеИмя();
		КонецЕсли;
	КонецЕсли;
	ВнешниеПечатныеФормы = УправлениеПечатью.СписокПечатныхФормИзВнешнихИсточников(ИсточникВнешнихПечатныхФорм);
	
	// Добавление внешних печатных форм в комплект.
	ДобавленныеВнешниеПечатныеФормы = Новый Массив;
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") 
		И ПараметрыПечати.Свойство("ДополнитьКомплектВнешнимиПечатнымиФормами") 
		И ПараметрыПечати.ДополнитьКомплектВнешнимиПечатнымиФормами Тогда 
		
		ИдентификаторыВнешнихПечатныхФорм = ВнешниеПечатныеФормы.ВыгрузитьЗначения();
		Для Каждого Идентификатор Из ИдентификаторыВнешнихПечатныхФорм Цикл
			ДобавленныеВнешниеПечатныеФормы.Добавить(ПрефиксВнешнихПечатныхФорм + Идентификатор);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ИмяМакета Из ИменаМакетов Цикл
		// Проверка наличия уже напечатанной формы.
		НайденнаяПечатнаяФорма = КоллекцияПечатныхФорм.Найти(ИмяМакета, "ИмяМакета");
		Если НайденнаяПечатнаяФорма <> Неопределено Тогда
			ПоследняяДобавленнаяПечатнаяФорма = КоллекцияПечатныхФорм[КоллекцияПечатныхФорм.Количество() - 1];
			Если ПоследняяДобавленнаяПечатнаяФорма.ИмяМакета = НайденнаяПечатнаяФорма.ИмяМакета Тогда
				ПоследняяДобавленнаяПечатнаяФорма.Экземпляров = ПоследняяДобавленнаяПечатнаяФорма.Экземпляров + 1;
			Иначе
				КопияПечатнойФормы = КоллекцияПечатныхФорм.Добавить();
				ЗаполнитьЗначенияСвойств(КопияПечатнойФормы, НайденнаяПечатнаяФорма);
				КопияПечатнойФормы.Экземпляров = 1;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		// Поиск указания дополнительного менеджера печати в имени печатной формы.
		ИмяДополнительногоМенеджераПечати = "";
		Идентификатор = ИмяМакета;
		ВнешняяПечатнаяФорма = Неопределено;
		// +РАРУС Доработка для корректного получения макетов для пакетной печати
		ИндексНачала = СтрНайти(Идентификатор, ПрефиксВнешнихПечатныхФорм);
		Если ИндексНачала > 0 Тогда // это внешняя печатная форма
			ТекИдентификатор = Сред(Идентификатор, ИндексНачала + СтрДлина(ПрефиксВнешнихПечатныхФорм));
			Если ПараметрыПечати.Свойство("Комплект") Тогда
				НастройкиПечати = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Идентификатор,".");
				ИдентификаторСсылки = НастройкиПечати[0];
				ИмяДополнительногоМенеджераПечати = НастройкиПечати[1] + "." + НастройкиПечати[2];
				ИсточникВнешнихПечатныхФорм = ИмяДополнительногоМенеджераПечати;
				Идентификатор = ПрефиксВнешнихПечатныхФорм+НастройкиПечати[4];
				ВнешниеПечатныеФормы = УправлениеПечатью.СписокПечатныхФормИзВнешнихИсточников(ИсточникВнешнихПечатныхФорм);
			КонецЕсли;
			ВнешняяПечатнаяФорма = ВнешниеПечатныеФормы.НайтиПоЗначению(ТекИдентификатор);	
		ИначеЕсли ПараметрыПечати.Свойство("ФиксированныйКомплект") И СтрНайти(Идентификатор, ".") > 0 Тогда
			НастройкиПечати = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Идентификатор,".");
			ИдентификаторСсылки = НастройкиПечати[0];
			ИмяДополнительногоМенеджераПечати = НастройкиПечати[1] + "." + НастройкиПечати[2];
			Идентификатор = НастройкиПечати[3];
		// -РАРУС
		ИначеЕсли СтрНайти(Идентификатор, ".") > 0 Тогда // Указан дополнительный менеджер печати.
			Позиция = СтрНайти(Идентификатор, ".", НаправлениеПоиска.СКонца);
			ИмяДополнительногоМенеджераПечати = Лев(Идентификатор, Позиция - 1);
			Идентификатор = Сред(Идентификатор, Позиция + 1);
		КонецЕсли;
		
		// Определение внутреннего менеджера печати.
		ИспользуемыйМенеджерПечати = ИмяДополнительногоМенеджераПечати;
		Если ПустаяСтрока(ИспользуемыйМенеджерПечати) Тогда
			ИспользуемыйМенеджерПечати = ИмяМенеджераПечати;
		КонецЕсли;
		
		// Проверка соответствия печатаемых объектов выбранной печатной форме.
		ОжидаемыйТипОбъекта = Неопределено;
		
		ОбъектыСоответствующиеПечатнойФорме = МассивОбъектов;
		// +Рарус Получим нужный объект для печати комплекта
		
		Если Идентификатор = "ОписьКомплектаДокументов" Тогда
			ОбъектыСоответствующиеПечатнойФорме =  НастройкиПечати[4];
		ИначеЕсли ПараметрыПечати.Свойство("ФиксированныйКомплект") И НЕ НастройкиПечати = Неопределено Тогда
			СоответствиеТипаМакету = ПараметрыПечати.СоответствиеТипаМакету.НайтиПоЗначению(Идентификатор+ИдентификаторСсылки);
			МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("Документ." + СоответствиеТипаМакету.Представление);
			СсылкаНаДокументПечати = МенеджерДокумента.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторСсылки));
			ОбъектыСоответствующиеПечатнойФорме = Новый Массив;
			ОбъектыСоответствующиеПечатнойФорме.Добавить(СсылкаНаДокументПечати);
		ИначеЕсли ДопустимыеТипыОбъектовПечати <> Неопределено И ДопустимыеТипыОбъектовПечати.Количество() > 0 Тогда
		// -Рарус
			Если ДопустимыеТипыОбъектовПечати <> Неопределено И ДопустимыеТипыОбъектовПечати.Количество() > 0 Тогда
				Если ТипЗнч(МассивОбъектов) = Тип("Массив") Тогда
					ОбъектыСоответствующиеПечатнойФорме = Новый Массив;
					Для Каждого Объект Из МассивОбъектов Цикл
						Если ДопустимыеТипыОбъектовПечати.Найти(ТипЗнч(Объект)) = Неопределено Тогда
							СообщитьПечатнаяФормаНедоступна(Объект);
						Иначе
							ОбъектыСоответствующиеПечатнойФорме.Добавить(Объект);
						КонецЕсли;
					КонецЦикла;
					Если ОбъектыСоответствующиеПечатнойФорме.Количество() = 0 Тогда
						ОбъектыСоответствующиеПечатнойФорме = Неопределено;
					КонецЕсли;
				ИначеЕсли ОбщегоНазначения.ЗначениеСсылочногоТипа(МассивОбъектов) Тогда // передан не массив
					Если ДопустимыеТипыОбъектовПечати.Найти(ТипЗнч(МассивОбъектов)) = Неопределено Тогда
						СообщитьПечатнаяФормаНедоступна(МассивОбъектов);
						ОбъектыСоответствующиеПечатнойФорме = Неопределено;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ВременнаяКоллекцияДляОднойПечатнойФормы = УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм(Идентификатор);
		
		// Вызов процедуры Печать из менеджера печати.
		Если ВнешняяПечатнаяФорма <> Неопределено Тогда
			// Менеджер печати во внешней печатной форме.
			УправлениеПечатью.ПечатьПоВнешнемуИсточнику(
				СсылкаДополнительнойПечатнойФормы(ВнешняяПечатнаяФорма.Значение, ИсточникВнешнихПечатныхФорм),
				Новый Структура("ИдентификаторКоманды, ОбъектыНазначения", ВнешняяПечатнаяФорма.Значение, ОбъектыСоответствующиеПечатнойФорме),
				ВременнаяКоллекцияДляОднойПечатнойФормы,
				ОбъектыПечати,
				ПараметрыВывода);
		Иначе
			Если Не ПустаяСтрока(ИспользуемыйМенеджерПечати) Тогда
				МенеджерПечати = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИспользуемыйМенеджерПечати);
				// Печать внутренней печатной формы.
				Если ОбъектыСоответствующиеПечатнойФорме <> Неопределено Тогда
					МенеджерПечати.Печать(ОбъектыСоответствующиеПечатнойФорме, ПараметрыПечати, ВременнаяКоллекцияДляОднойПечатнойФормы, 
						ОбъектыПечати, ПараметрыВывода);
				Иначе
					ВременнаяКоллекцияДляОднойПечатнойФормы[0].ТабличныйДокумент = Новый ТабличныйДокумент;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Проверка корректности заполнения коллекции печатных форм, полученной из менеджера печати.
		Для Каждого ОписаниеПечатнойФормы Из ВременнаяКоллекцияДляОднойПечатнойФормы Цикл
			ОбщегоНазначенияКлиентСервер.Проверить(
				ТипЗнч(ОписаниеПечатнойФормы.Экземпляров) = Тип("Число") И ОписаниеПечатнойФормы.Экземпляров > 0,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не задано количество экземпляров для печатной формы ""%1"".'"),
				?(ПустаяСтрока(ОписаниеПечатнойФормы.СинонимМакета), ОписаниеПечатнойФормы.ИмяМакета, ОписаниеПечатнойФормы.СинонимМакета)));
		КонецЦикла;
				
		// обновление коллекции
		Отказ = ВременнаяКоллекцияДляОднойПечатнойФормы.Количество() = 0;
		// Предполагается одна печатная форма, но для обратной совместимости принимается вся коллекция.
		Для Каждого ВременнаяПечатнаяФорма Из ВременнаяКоллекцияДляОднойПечатнойФормы Цикл 
			
			Если НЕ ВременнаяПечатнаяФорма.ОфисныеДокументы = Неопределено Тогда
				ВременнаяПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
			КонецЕсли;
			
			Если ВременнаяПечатнаяФорма.ТабличныйДокумент <> Неопределено Тогда
				ПечатнаяФорма = КоллекцияПечатныхФорм.Добавить();
				ЗаполнитьЗначенияСвойств(ПечатнаяФорма, ВременнаяПечатнаяФорма);
				Если ВременнаяКоллекцияДляОднойПечатнойФормы.Количество() = 1 Тогда
					ПечатнаяФорма.ИмяМакета = ИмяМакета;
					ПечатнаяФорма.ИмяВРЕГ = ВРег(ИмяМакета);
				КонецЕсли;
			Иначе
				// Возникла ошибка при формировании печатной формы.
				Отказ = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		// Вызов исключения при возникновении ошибки.
		Если Отказ Тогда
			ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru = 'При формировании печатной формы ""%1"" возникла ошибка. Обратитесь к администратору.'"), ИмяМакета);
			ВызватьИсключение ТекстСообщенияОбОшибке;
		КонецЕсли;
		
	КонецЦикла;
	
	ИнтеграцияПодсистемБСП.ПриПечати(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	УправлениеПечатьюПереопределяемый.ПриПечати(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	
	// Установка количества экземпляров табличным документам, проверка областей.
	Для Каждого ПечатнаяФорма Из КоллекцияПечатныхФорм Цикл
		ПроверитьРазметкуТабличногоДокументаПоОбъектамПечати(ПечатнаяФорма.ТабличныйДокумент, 
			ОбъектыПечати, ИмяМенеджераПечати, ПечатнаяФорма.ИмяМакета);
		Если ДобавленныеВнешниеПечатныеФормы.Найти(ПечатнаяФорма.ИмяМакета) <> Неопределено Тогда
			ПечатнаяФорма.Экземпляров = 0; // Для автоматически добавленных форм.
		КонецЕсли;
		Если ПечатнаяФорма.ТабличныйДокумент <> Неопределено Тогда
			ПечатнаяФорма.ТабличныйДокумент.КоличествоЭкземпляров = ПечатнаяФорма.Экземпляров;
			УправлениеПечатью.УбратьПодписьИПечать(ПечатнаяФорма.ТабличныйДокумент);
		КонецЕсли;
	КонецЦикла; 
	
	КоллекцияПечатныхФорм = ОбщегоНазначения.ТаблицаЗначенийВМассив(КоллекцияПечатныхФорм);
	
	Результат = Новый Структура;
	Результат.Вставить("КоллекцияПечатныхФорм", КоллекцияПечатныхФорм);
	Результат.Вставить("ОбъектыПечати", ОбъектыПечати);
	Результат.Вставить("ПараметрыВывода", ПараметрыВывода);
	Возврат Результат;
	
КонецФункции

Процедура ПроверитьРазметкуТабличногоДокументаПоОбъектамПечати(ТабличныйДокумент, ОбъектыПечати, Знач МенеджерПечати, Знач Идентификатор)
	
	Если ТабличныйДокумент.ВысотаТаблицы = 0 Или ОбъектыПечати.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьРазметкаПоОбъектамПечати = Ложь;
	Для Каждого ОбъектПечати Из ОбъектыПечати Цикл
		Для Каждого Область Из ТабличныйДокумент.Области Цикл
			Если Область.Имя = ОбъектПечати.Представление Тогда
				ЕстьРазметкаПоОбъектамПечати = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если СтрНайти(Идентификатор, ".") > 0 Тогда
		Позиция = СтрНайти(Идентификатор, ".", НаправлениеПоиска.СКонца);
		МенеджерПечати = Лев(Идентификатор, Позиция - 1);
		Идентификатор = Сред(Идентификатор, Позиция + 1);
	КонецЕсли;
	
	ТекстОшибкиРазметки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
		"ru = 'Отсутствует разметка табличного документа ""%1"" по объектам печати.
		|Необходимо использовать процедуру УправлениеПечатью.ЗадатьОбластьПечатиДокумента()
		|при формировании табличного документа'"), Идентификатор);
	ОбщегоНазначенияКлиентСервер.Проверить(ЕстьРазметкаПоОбъектамПечати, ТекстОшибкиРазметки, МенеджерПечати + "." + "Печать()");
	
КонецПроцедуры

Функция СсылкаДополнительнойПечатнойФормы(Идентификатор, ПолноеИмяОбъектаМетаданных)
	
	ВнешняяПечатнаяФормаСсылка = Неопределено;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки") Тогда
		МодульДополнительныеОтчетыИОбработки = ОбщегоНазначения.ОбщийМодуль("ДополнительныеОтчетыИОбработки");
		МодульДополнительныеОтчетыИОбработки.ПриПолученииВнешнейПечатнойФормы(Идентификатор, ПолноеИмяОбъектаМетаданных, ВнешняяПечатнаяФормаСсылка);
	КонецЕсли;
	
	Возврат ВнешняяПечатнаяФормаСсылка;
	
КонецФункции

Процедура СообщитьПечатнаяФормаНедоступна(Объект)
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Печать %1 не выполнена: выбранная печатная форма недоступна.'"), Объект);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти