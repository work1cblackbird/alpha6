#Область ПрограммныйИнтерфейс

// См. ДатыЗапретаИзмененияПереопределяемый.ПриЗаполненииРазделовДатЗапретаИзменения
Процедура ПриЗаполненииРазделовДатЗапретаИзменения(Разделы) Экспорт
	
	НовыйРаздел = Разделы.Добавить();
	НовыйРаздел.Имя = "ВсеОперацииПоОрганизации";
	НовыйРаздел.Представление = НСтр("ru = 'Все операции по организации'");
	НовыйРаздел.ТипыОбъектов  = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Тип("СправочникСсылка.Организации"));
	НовыйРаздел.Идентификатор = Новый УникальныйИдентификатор("0c6262a9-71d6-11eb-bbd6-0025909718a3");
	
	НовыйРаздел = Разделы.Добавить();
	НовыйРаздел.Имя = "ПоХозяйственнымОперациям";
	НовыйРаздел.Представление = НСтр("ru = 'По хозяйственным операциям'");
	НовыйРаздел.ТипыОбъектов  = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Тип("СправочникСсылка.ХозОперации"));
	НовыйРаздел.Идентификатор = Новый УникальныйИдентификатор("0c6262ab-71d6-11eb-bbd6-0025909718a3");
	
КонецПроцедуры

// См. ДатыЗапретаИзмененияПереопределяемый.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ЗаполнитьДокументыДляПроверкиЗапретаИзменения(ИсточникиДанных);
	ЗаполнитьРегистрыСведенийДляПроверкиЗапретаИзменения(ИсточникиДанных);
	
КонецПроцедуры

// См. ДатыЗапретаИзмененияПереопределяемый.ПередПроверкойЗапретаИзменения
Процедура ПередПроверкойЗапретаИзменения(Объект,
                                         ПроверкаЗапретаИзменения,
                                         УзелПроверкиЗапретаЗагрузки,
                                         ВерсияОбъекта) Экспорт
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Объект));
	Если ОбщегоНазначения.ЭтоРегистр(ОбъектМетаданных) Тогда
		ПроверкаЗапретаИзменения =
			ПолучитьЗначениеПараметраСтруктуры(Объект.ДополнительныеСвойства, "ПроверкаЗапретаИзменения", Истина)
			И Метаданные.ОпределяемыеТипы.КонтрольДатыЗапретаИзменения.Тип.СодержитТип(ТипЗнч(Объект));
		Возврат;
	КонецЕсли;
	
	ПроверкаЗапретаИзменения = Метаданные.ОпределяемыеТипы.КонтрольДатыЗапретаИзменения.Тип.СодержитТип(ТипЗнч(Объект.Ссылка));
	
	Если ПроверкаЗапретаИзменения И ТипЗнч(Объект.Ссылка)=Тип("ДокументСсылка.ЗаказНаряд") Тогда
		
		// Если заказ-наряд еще не закрыт, то он НЕ блокируется не зависимо от даты запрета редактирования. 
		ПроверкаЗапретаИзменения = Объект.Ссылка.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Закрыт
			ИЛИ Объект.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Закрыт; 
			                   		
	ИначеЕсли ТипЗнч(Объект.Ссылка)=Тип("ДокументСсылка.ЗаказНаАвтомобиль") Тогда
		
		// Если заказ еще не обслужен, то он НЕ блокируется не зависимо от даты запрета редактирования.
		ОстаткиЗаказаНаАвтомобиль=РегистрыНакопления.ЗаказыАвтомобилей.Остатки(,Новый Структура("Заказ",Объект.Ссылка));
		Если ОстаткиЗаказаНаАвтомобиль.Итог("Количество")<>0 ИЛИ ОстаткиЗаказаНаАвтомобиль.Итог("Резерв")<>0 Тогда
			ПроверкаЗапретаИзменения = Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.СчетНаОплату")
		И ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ЗаказНаряд")
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "Состояние") <> Справочники.ВидыСостоянийЗаказНарядов.Закрыт Тогда
		
		ПроверкаЗапретаИзменения = Ложь;
		
	Иначе
		Если ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных) Тогда
			Попытка
				РежимЗаписи=Объект.ДополнительныеСвойства.РежимЗаписи;
			Исключение
				РежимЗаписи=Неопределено;
			КонецПопытки;
			Если Объект.Проведен=Ложь Тогда
				Если РежимЗаписи=Неопределено ИЛИ РежимЗаписи=РежимЗаписиДокумента.Запись Тогда
					ПроверкаЗапретаИзменения = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Переназначаем идентификаторы разделов дат запрета изменения
//
// Параметры:
//  Разделы - ТаблицаЗначений:
//   * Имя - Строка - имя, используемое в описании источников данных в
//       процедуре ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения.
//
//   * Идентификатор - УникальныйИдентификатор - идентификатор ссылки элемента плана видов характеристик.
//       Чтобы получить идентификатор, нужно в режиме 1С:Предприятие выполнить метод платформы:
//       "ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.ПолучитьСсылку().УникальныйИдентификатор()".
//       Не следует указывать идентификаторы, полученные любым другим способом,
//       так как это может нарушить их уникальность.
//
//   * Представление - Строка - представляет раздел в форме настройки дат запрета.
//
//   * ТипыОбъектов  - Массив - типы ссылок объектов, в разрезе которых можно настроить даты запрета,
//       например Тип("СправочникСсылка.Организации"); если не указано ни одного типа,
//       то даты запрета будут настраиваться только с точностью до раздела.
//
Процедура ПереназначитьИдентификаторыРазделовДатЗапретаИзменения(Разделы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РазделыДатЗапретаИзменения.Ссылка КАК Ссылка,
	|	РазделыДатЗапретаИзменения.Наименование КАК Наименование
	|ИЗ
	|	ПланВидовХарактеристик.РазделыДатЗапретаИзменения КАК РазделыДатЗапретаИзменения";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НаименованиеРазделаДатЗапретаИзменения = СтрЗаменить(
			ВыборкаДетальныеЗаписи.Наименование,
			"(не используется) ",
			""
		);
		
		СтруктураПоиска = Новый Структура("Представление", НаименованиеРазделаДатЗапретаИзменения);
		НайденныеСтроки = Разделы.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Идентификатор = ВыборкаДетальныеЗаписи.Ссылка.УникальныйИдентификатор();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// См. ДатыЗапретаИзмененияПереопределяемый.ПередПроверкойЗапретаИзменения
Процедура ПередПроверкойСтаройВерсииДанных(ОбъектМетаданных, ИдентификаторДанных, УзелПроверкиЗапретаЗагрузки, ДанныеДляПроверки) Экспорт
	
	Если ТипЗнч(ИдентификаторДанных) = Тип("ДокументСсылка.ЗаказНаряд") Тогда
		
		Данные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИдентификаторДанных, "Организация, ДатаЗакрытия");
		ДатаПроверки = ?(ЗначениеЗаполнено(Данные.ДатаЗакрытия), Данные.ДатаЗакрытия, ТекущаяДатаСеанса());
		
		Проверка = ДанныеДляПроверки.Добавить();
	  	Проверка.Раздел = "ВсеОперацииПоОрганизации";
	  	Проверка.Объект =  Данные.Организация;
	  	Проверка.Дата   = ДатаПроверки;
		
		ДатаПроверки = ?(ЗначениеЗаполнено(Данные.ДатаЗакрытия), Данные.ДатаЗакрытия, ТекущаяДатаСеанса());
		Проверка = ДанныеДляПроверки.Добавить();
		Проверка.Раздел = "ПоХозяйственнымОперациям";
		Проверка.Объект = Справочники.ХозОперации.ЗаказНаряд;
		Проверка.Дата   = ДатаПроверки; 

	КонецЕсли;
		
КонецПроцедуры  

// См. ДатыЗапретаИзмененияПереопределяемый.ПередПроверкойЗапретаИзменения
Процедура ПередПроверкойНовойВерсииДанных(ОбъектМетаданных, Данные, УзелПроверкиЗапретаЗагрузки, ДанныеДляПроверки) Экспорт
	
	Если ТипЗнч(Данные) = Тип("ДокументОбъект.ЗаказНаряд") Тогда
		
		ДатаПроверки = ?(ЗначениеЗаполнено(Данные.ДатаЗакрытия), Данные.ДатаЗакрытия, ТекущаяДатаСеанса());
		Проверка = ДанныеДляПроверки.Добавить();
	  	Проверка.Раздел = "ВсеОперацииПоОрганизации";
	  	Проверка.Объект =  Данные.Организация;
	  	Проверка.Дата   = ДатаПроверки; 
		
		ДатаПроверки = ?(ЗначениеЗаполнено(Данные.ДатаЗакрытия), Данные.ДатаЗакрытия, ТекущаяДатаСеанса());
		Проверка = ДанныеДляПроверки.Добавить();
		Проверка.Раздел = "ПоХозяйственнымОперациям";
		Проверка.Объект = Справочники.ХозОперации.ЗаказНаряд;
		Проверка.Дата   = ДатаПроверки; 

	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

Процедура ЗаполнитьДокументыДляПроверкиЗапретаИзменения(ИсточникиДанных)

	Для Каждого Документ Из Метаданные.ОпределяемыеТипы.КонтрольДатыЗапретаИзменения.Тип.Типы() Цикл
		
		ОбъектМетаданных = Метаданные.НайтиПоТипу(Документ);
		
		Если ОбъектМетаданных = Неопределено Или Не ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если ОбъектМетаданных = Метаданные.Документы.ЗаказНаряд Тогда

			ДатыЗапретаИзменения.ДобавитьСтроку(
				ИсточникиДанных,
				ОбъектМетаданных.ПолноеИмя(),
				"ДатаЗакрытия",
				"ВсеОперацииПоОрганизации",
				"Организация"
			);

			ДатыЗапретаИзменения.ДобавитьСтроку(
				ИсточникиДанных,
				ОбъектМетаданных.ПолноеИмя(),
				"ДатаЗакрытия",
				"ПоХозяйственнымОперациям",
				"ХозОперация"
			);

		ИначеЕсли ЕстьРеквизит(ОбъектМетаданных, "Организация") Тогда

			ДатыЗапретаИзменения.ДобавитьСтроку(
				ИсточникиДанных,
				ОбъектМетаданных.ПолноеИмя(),
				"Дата",
				"ВсеОперацииПоОрганизации",
				"Организация"
			);
				
			Если ЕстьРеквизит(ОбъектМетаданных, "ХозОперация") Тогда
				
				ДатыЗапретаИзменения.ДобавитьСтроку(
					ИсточникиДанных,
					ОбъектМетаданных.ПолноеИмя(),
					"Дата",
					"ПоХозяйственнымОперациям",
					"ХозОперация"
				);
				
			КонецЕсли;

		Иначе

			ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, ОбъектМетаданных.ПолноеИмя(), "Дата");

		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//@skip-warning
Процедура ЗаполнитьРегистрыСведенийДляПроверкиЗапретаИзменения(ИсточникиДанных)
	
	Для Каждого Регистр Из Метаданные.ОпределяемыеТипы.КонтрольДатыЗапретаИзменения.Тип.Типы() Цикл
		
		ОбъектМетаданных = Метаданные.НайтиПоТипу(Регистр);
		
		Если ОбъектМетаданных = Неопределено Или Не ОбщегоНазначения.ЭтоРегистр(ОбъектМетаданных) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, ОбъектМетаданных.ПолноеИмя(), "Период");
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти