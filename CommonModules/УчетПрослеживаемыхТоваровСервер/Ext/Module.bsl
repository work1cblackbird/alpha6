
#Область ПрограммныйИнтерфейс

// Возвращает Истина, если в документе идет учет прослеживаемых товаров.
//
// Параметры:
//  Объект - ДокументСсылка - проверяемый объект.
//
// Возвращаемое значение:
//  Булево - Истина, если в документе идет учет прослеживаемых товаров.
//
Функция ЭтоДокументСПрослеживаемымиТоварами(Объект) Экспорт
	
	СписокДокументов = ДокументыСПрослеживаемымиТоварами();
	Возврат СписокДокументов.Найти(Объект.Метаданные()) <> Неопределено;
	
КонецФункции

// Возвращает структуру имен реквизитов для вызова ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара()
//
// Возвращаемое значение:
//  Структура - Структура имен реквизитов:
//   * ИмяТаблицы - Строка - Имя таблицы, содержащей заполняемые реквизиты.
//   * ИмяРеквизита - Строка - Имя реквизита, содержащего признак, по которому заполняются служебные реквизиты.
//   * ИмяПризнака - Строка - Имя реквизита признак прослеживаемого товара.
//   * ИмяКартинки - Строка - Имя реквизита картинки прослеживаемого товара.
//
Функция ИменаРеквизитовДляЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяТаблицы", "Товары");
	Результат.Вставить("ИмяРеквизита", "Номенклатура");
	Результат.Вставить("ИмяПризнака", "ПрослеживаемыйТовар");
	Результат.Вставить("ИмяКартинки", "КартинкаПрослеживаемогоТовара");
	
	Возврат Результат;
	
КонецФункции

// Заполняет служебные реквизиты для отображения прослеживаемых товаров
//
// Параметры:
//  Объект - ДанныеФормыСтруктура, ФормаКлиентскогоПриложения - Объект, в котором произошло событие.
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции - (необязательный). Обрабатываемая строка ТЧ.
//  ИменаРеквизитов - Строка - (необязательный). Имя реквизита, содержащего признак,
//                 по которому заполняются служебные реквизиты.
//
Процедура ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара(
		Объект,
		ТекущаяСтрока = Неопределено,
		ИменаРеквизитов = Неопределено) Экспорт
	
	Если ТипЗнч(Объект) <> Тип("ФормаКлиентскогоПриложения") Тогда
		Если НЕ ЭтоДокументСПрослеживаемымиТоварами(Объект.Ссылка) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ИменаРеквизитов = Неопределено Тогда
		ИменаРеквизитов = ИменаРеквизитовДляЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара();
	КонецЕсли;
	
	Если НЕ ЕстьРеквизит(Объект, ИменаРеквизитов.ИмяКартинки, ИменаРеквизитов.ИмяТаблицы) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ТаблицаТоваров = Объект[ИменаРеквизитов.ИмяТаблицы];
	Иначе
		ТаблицаТоваров = Новый Массив;
		ТаблицаТоваров.Добавить(ТекущаяСтрока);
	КонецЕсли;
	
	Для Каждого Строка Из ТаблицаТоваров Цикл
		
		Если НЕ ЕстьРеквизит(Строка[ИменаРеквизитов.ИмяРеквизита], "Прослеживаемый") Тогда
			Строка[ИменаРеквизитов.ИмяКартинки] = Неопределено;
			Строка[ИменаРеквизитов.ИмяПризнака] = Ложь;
			Продолжить;
		КонецЕсли;
		
		Если Строка[ИменаРеквизитов.ИмяРеквизита].Прослеживаемый Тогда
			Строка[ИменаРеквизитов.ИмяКартинки] = БиблиотекаКартинок.НоменклатураПодменюПараметров;
			Строка[ИменаРеквизитов.ИмяПризнака] = Истина;
		Иначе
			Строка[ИменаРеквизитов.ИмяКартинки] = Неопределено;
			Строка[ИменаРеквизитов.ИмяПризнака] = Ложь;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

// Выполняет проверку заполнения реквизита ГТД / РНПТ для документов.
// Проверка выполняется с 1.07.2021. Для прослеживаемых товаров должно быть указано РНПТ.
// Выводит информационное сообщение, если для прослеживаемого товара указан ГТД, или
// для не прослеживаемого товара указан РНПТ.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура, ФормаКлиентскогоПриложения - Объект, в котором произошло событие.
//  ИмяТаблицыТоваров - Строка - (необязательный). Имя таблицы, содержащей проверяемые реквизиты.
//  ИмяРеквизита - Строка - (необязательный). Имя проверяемого реквизита.
//  ИмяРеквизитаГТД - Строка - (необязательный). Имя проверяемого реквизита
//
Процедура ПроверитьЗаполнениеРНПТПрослеживаемогоТовара(
		Объект,
		ИмяТаблицыТоваров = "Товары",
		ИмяРеквизита = "Номенклатура",
		ИмяРеквизитаГТД = "ГТД") Экспорт
	
	Если НЕ ЕстьРеквизит(Объект, ИмяРеквизитаГТД, ИмяТаблицыТоваров) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Дата < Дата("20210701000000") Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка права для дальнейшего выполнения
	Если Не ПраваИНастройкиПользователя.Значение("ПроверкаЗаполненияСправочниковИДокументов") Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим, что нет признака восстановления последовательностей.
	ЭтоВосстановлениеПоследовательностей = ПолучитьЗначениеПараметраСтруктуры(
		Объект.ДополнительныеСвойства,
		"ЭтоВосстановлениеПоследовательностей",
		Ложь
	);
	Если ЭтоВосстановлениеПоследовательностей Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из Объект[ИмяТаблицыТоваров] Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока[ИмяРеквизитаГТД]) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЕстьРеквизит(ТекущаяСтрока[ИмяРеквизита], "Прослеживаемый") Тогда
			Продолжить;
		КонецЕсли;
		
		ПрослеживаемыйТовар = ТекущаяСтрока[ИмяРеквизита].Прослеживаемый;
		ЭтоРНПТ = ТекущаяСтрока[ИмяРеквизитаГТД].РНПТ;
		ТекстСообщения = "";
		
		Если ПрослеживаемыйТовар И НЕ ЭтоРНПТ Тогда
			
			ТекстСообщения = НСтр("ru = 'В строке %1 табличной части ""%2"" у прослеживаемого товара указан номер ГТД вместо РНПТ'");
			
		ИначеЕсли НЕ ПрослеживаемыйТовар И ЭтоРНПТ Тогда
			
			ТекстСообщения = НСтр("ru = 'В строке %1 табличной части ""%2"" у товара указан номер РНПТ вместо номера ГТД'");
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекстСообщения) Тогда
			
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТаблицыТоваров,ТекущаяСтрока.НомерСтроки, "ГТД");			
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(ТекстСообщения, ТекущаяСтрока.НомерСтроки, ИмяТаблицыТоваров),

				,
				ПутьКТабличнойЧасти
				,
				"Объект"
			);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Выполняет проверку заполнения реквизита ГТД / РНПТ для автомобиля.
// Для прослеживаемых товаров должно быть указано РНПТ.
// Выводит информационное сообщение, если для прослеживаемого товара указан ГТД, или
// для не прослеживаемого товара указан РНПТ.
//
// Параметры:
//  АвтомобильОбъект - СправочникОбъект.Автомобили
//
Процедура ПроверитьЗаполнениеРНПТПрослеживаемогоАвтомобиля(АвтомобильОбъект) Экспорт

	Если НЕ ЗначениеЗаполнено(АвтомобильОбъект.ГТД) Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка права для дальнейшего выполнения
	Если Не ПраваИНастройкиПользователя.Значение("ПроверкаЗаполненияСправочниковИДокументов") Тогда
		Возврат;
	КонецЕсли;
		
	ПрослеживаемыйТовар = АвтомобильОбъект.Прослеживаемый;
	ЭтоРНПТ = АвтомобильОбъект.ГТД.РНПТ;
	ТекстСообщения = "";
		
	Если ПрослеживаемыйТовар И НЕ ЭтоРНПТ Тогда
			
		ТекстСообщения = НСтр("ru = 'У прослеживаемого товара указан номер ГТД вместо РНПТ'");
			
	ИначеЕсли НЕ ПрослеживаемыйТовар И ЭтоРНПТ Тогда
			
		ТекстСообщения = НСтр("ru = 'У товара указан номер РНПТ вместо номера ГТД'");
			
	КонецЕсли;
		
	Если Не ПустаяСтрока(ТекстСообщения) Тогда
			
		ОбщегоНазначения.СообщитьПользователю(
			ТекстСообщения,
			,				
			,
			"Объект"
		);
			
	КонецЕсли;
	
КонецПроцедуры

// Возвращает Истина, если хозоперация комиссионная.
//
// Параметры:
//  ХозОперация - СправочникСсылка.ХозОперации - проверяемый объект.
//
// Возвращаемое значение:
//  Булево - Истина, если в хозоперация комиссионная.
//
Функция ЭтоХозОперацияКомиссии(ХозОперация) Экспорт
	
	ХозОперации = ХозОперацииКомиссии();
	Возврат НЕ ХозОперации.Найти(ХозОперация) = Неопределено;
	
КонецФункции

// Получение таблицы для заполнения данными об операции
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Структура таблицы для заполнения
//
Функция ИнициализацияТаблицыОпераций() Экспорт
	
	ТаблицаОперации = Новый ТаблицаЗначений;
	ТаблицаОперации.Колонки.Добавить("Организация");
	ТаблицаОперации.Колонки.Добавить("ПериодОтчета");
	ТаблицаОперации.Колонки.Добавить("ОтчетностьОперации");
	ТаблицаОперации.Колонки.Добавить("КодОперации");
	ТаблицаОперации.Колонки.Добавить("Документ");
	ТаблицаОперации.Колонки.Добавить("Номенклатура");
	ТаблицаОперации.Колонки.Добавить("РНПТ");
	ТаблицаОперации.Колонки.Добавить("КоличествоПрослеживаемости");
	ТаблицаОперации.Колонки.Добавить("СуммаБезНДС");
	ТаблицаОперации.Колонки.Добавить("ВидДокумента");
	ТаблицаОперации.Колонки.Добавить("НомерДокумента");
	ТаблицаОперации.Колонки.Добавить("ДатаДокумента");
	ТаблицаОперации.Колонки.Добавить("Контрагент");
	
	Возврат ТаблицаОперации;
	
КонецФункции

// Перечень РНПТ в документе.
// Формирует по движениям документа в регистрах ГТДПартийТоваровКомпании, ТоварыВПроизводстве и ОстаткиАвтомобилей
// 
// Параметры:
//  Документ - ДокументСсылка - документ для которого формируем перечень РНПТ
//
// Возвращаемое значение:
//  ТаблицаЗначений - с колонками:
//  	* Номенклатура  - СправочникСсылка.Номенклатура, СправочникСсылка.Автомобили
//  	* ХарактеристикаНоменклатуры  - СправочникСсылка.ХарактеристикиНоменклатуры
//  	* ГТД  -  СправочникСсылка.ГТД
//  	* Партия  - Характеристика.ТипыПартий
//  	* НомерТовара - Строка - номер ГТД
//  	* ЕдиницаПрослеживаемости - СправочникСсылка.КлассификаторЕдиницИзмерения
//  	* КодЕдиницыПрослеживаемости - Строка - код единицы прослеживаемости
//
Функция РНПТВДокументе(Документ) Экспорт
	
	Запрос = Новый Запрос(ТекстЗапросаКРегистрамДляРНПТ());
	Запрос.УстановитьПараметр("Регистраторы", ДополнитьОснованиямиКорректировки(Документ));	
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДокументыСПрослеживаемымиТоварами()
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить(Метаданные.Документы.ПоступлениеТоваров);
	СписокДокументов.Добавить(Метаданные.Документы.РеализацияТоваров);
	СписокДокументов.Добавить(Метаданные.Документы.СчетФактураВыданный);
	СписокДокументов.Добавить(Метаданные.Документы.СчетФактураПолученный);
	СписокДокументов.Добавить(Метаданные.Документы.ИзвлечениеТоваровИзПроизводства);
	СписокДокументов.Добавить(Метаданные.Документы.ПеремещениеТоваровВПроизводство);
	СписокДокументов.Добавить(Метаданные.Документы.ПеремещениеНезавершенногоПроизводства);
	СписокДокументов.Добавить(Метаданные.Документы.ПоступлениеАвтомобилей);
	СписокДокументов.Добавить(Метаданные.Документы.РеализацияАвтомобилей);
	СписокДокументов.Добавить(Метаданные.Документы.ЗаказНаряд);
	СписокДокументов.Добавить(Метаданные.Документы.КорректировкаПоступления);
	СписокДокументов.Добавить(Метаданные.Документы.КорректировкаПоступленияАвтомобилей);
	СписокДокументов.Добавить(Метаданные.Документы.КорректировкаРеализации);
	СписокДокументов.Добавить(Метаданные.Документы.КорректировкаРеализацииАвтомобилей);
	СписокДокументов.Добавить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт);
	СписокДокументов.Добавить(Метаданные.Документы.ПеремещениеТоваров);
	СписокДокументов.Добавить(Метаданные.Документы.АвансовыйОтчет);
	СписокДокументов.Добавить(Метаданные.Документы.ВводОстатковАвтомобилей);
	СписокДокументов.Добавить(Метаданные.Документы.ВводОстатковТоваров);
	СписокДокументов.Добавить(Метаданные.Документы.ВводОстатковТоваровВПроизводстве);
	СписокДокументов.Добавить(Метаданные.Документы.ВозвратОтПокупателя);
	СписокДокументов.Добавить(Метаданные.Документы.ВозвратПоставщику);
	СписокДокументов.Добавить(Метаданные.Документы.Инвентаризация);
	СписокДокументов.Добавить(Метаданные.Документы.ИнвентаризацияАвтомобилей);
	СписокДокументов.Добавить(Метаданные.Документы.ОбслуживаниеАктива);
	СписокДокументов.Добавить(Метаданные.Документы.ПеремещениеАвтомобилей);
	СписокДокументов.Добавить(Метаданные.Документы.ПересортицаТоваров);
	СписокДокументов.Добавить(Метаданные.Документы.СписаниеТоваров);
	СписокДокументов.Добавить(Метаданные.Документы.ВводВЭксплуатацию);
	СписокДокументов.Добавить(Метаданные.Документы.УведомлениеОВвозеПрослеживаемыхТоваров);
	СписокДокументов.Добавить(Метаданные.Документы.УведомлениеОПеремещенииПрослеживаемыхТоваров);
	СписокДокументов.Добавить(Метаданные.Документы.ОтчетПрослеживаемыеТоварыОтчетОбОперациях);
	СписокДокументов.Добавить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
	
	Возврат СписокДокументов;
	
КонецФункции

Функция ХозОперацииКомиссии()
	
	ХозОперации = Новый Массив;
	
	ХозОперации.Добавить(Справочники.ХозОперации.ВводОстатковАвтомобилейПереданныхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ВводОстатковАвтомобилейПринятыхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ВводОстатковТоваровПереданныхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ВводОстатковТоваровПринятыхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ВводОстатковТоваровПринятыхИПроданных);
	ХозОперации.Добавить(Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия);
	ХозОперации.Добавить(Справочники.ХозОперации.ВозвратАвтомобилейПоставщикуКомиссия);
	ХозОперации.Добавить(Справочники.ХозОперации.ВозвратТоваровОтПокупателяКомиссия);
	ХозОперации.Добавить(Справочники.ХозОперации.ВозвратТоваровПоставщикуКомиссия);
	ХозОперации.Добавить(Справочники.ХозОперации.ИнвентаризацияАвтомобилейОтданныхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ИнвентаризацияТоваровОтданныхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ОтчетАгента);
	ХозОперации.Добавить(Справочники.ХозОперации.ОтчетКомиссионера);
	ХозОперации.Добавить(Справочники.ХозОперации.ОтчетКомиссионераЗаАвтомобили);
	ХозОперации.Добавить(Справочники.ХозОперации.ОтчетКомитенту);
	ХозОперации.Добавить(Справочники.ХозОперации.ОтчетКомитентуЗаАвтомобили);
	ХозОперации.Добавить(Справочники.ХозОперации.ПереоценкаАвтомобилейОтданныхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ПереоценкаАвтомобилейПринятыхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ПереоценкаТоваровОтданныхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ПереоценкаТоваровПринятыхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.ПоступлениеАвтомобилейКомиссия);
	ХозОперации.Добавить(Справочники.ХозОперации.ПоступлениеТоваровКомиссия);
	ХозОперации.Добавить(Справочники.ХозОперации.РеализацияАвтомобилейКомиссия);
	ХозОперации.Добавить(Справочники.ХозОперации.РеализацияТоваровКомиссия);
	ХозОперации.Добавить(Справочники.ХозОперации.СписаниеАвтомобилейОтданныхНаКомиссию);
	ХозОперации.Добавить(Справочники.ХозОперации.СписаниеТоваровОтданныхНаКомиссию);
	
	Возврат ХозОперации;
	
КонецФункции

Функция ТекстЗапросаКРегистрамДляРНПТ()
	
	ЧастиТекстаЗапроса = Новый Массив;
	ЧастиТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ГТДПартийТоваровКомпании.Номенклатура КАК Номенклатура,
		|	ГТДПартийТоваровКомпании.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ГТДПартийТоваровКомпании.Партия КАК Партия,
		|	ГТДПартийТоваровКомпании.ГТД КАК ГТД,
		|	ГТДПартийТоваровКомпании.ГТД.Наименование КАК НомерТовара,
		|	ГТДПартийТоваровКомпании.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдиницаПрослеживаемости,
		|	ГТДПартийТоваровКомпании.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыПрослеживаемости,
		|	ГТДПартийТоваровКомпании.Количество КАК Количество
		|ПОМЕСТИТЬ РНПТВРегистрах
		|ИЗ
		|	РегистрНакопления.ГТДПартийТоваровКомпании КАК ГТДПартийТоваровКомпании
		|ГДЕ
		|	ГТДПартийТоваровКомпании.Регистратор В(&Регистраторы)
		|	И ГТДПартийТоваровКомпании.ГТД.РНПТ"
	);
	ЧастиТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
       |	ТоварыВПроизводстве.Номенклатура,
       |	ТоварыВПроизводстве.ХарактеристикаНоменклатуры,
       |	ТоварыВПроизводстве.Партия,
       |	ТоварыВПроизводстве.ГТД,
       |	ТоварыВПроизводстве.ГТД.Наименование,
       |	ТоварыВПроизводстве.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
       |	ТоварыВПроизводстве.Номенклатура.БазоваяЕдиницаИзмерения.Код,
       |	ТоварыВПроизводстве.Количество
       |ИЗ
       |	РегистрНакопления.ТоварыВПроизводстве КАК ТоварыВПроизводстве
       |ГДЕ
       |	ТоварыВПроизводстве.Регистратор В(&Регистраторы)
       |	И ТоварыВПроизводстве.ГТД <> ЗНАЧЕНИЕ(Справочник.ГТД.ПустаяСсылка)
       |	И ТоварыВПроизводстве.ГТД.РНПТ"
	);
	ЧастиТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
       |	ОстаткиАвтомобилей.Автомобиль,
       |	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
       |	ОстаткиАвтомобилей.Партия,
       |	ОстаткиАвтомобилей.Автомобиль.ГТД,
       |	ОстаткиАвтомобилей.Автомобиль.ГТД.Наименование,
       |	""шт"",
       |	""796"",
       |	ОстаткиАвтомобилей.Количество
       |ИЗ
       |	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
       |ГДЕ
       |	ОстаткиАвтомобилей.Регистратор В (&Регистраторы)
       |	И ОстаткиАвтомобилей.Автомобиль.ГТД <> ЗНАЧЕНИЕ(Справочник.ГТД.ПустаяСсылка)
       |	И ОстаткиАвтомобилей.Автомобиль.ГТД.РНПТ"
	);
	ЭпилогЗапроса =
	";
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РНПТВРегистрах.Номенклатура КАК Номенклатура,
	|	РНПТВРегистрах.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	РНПТВРегистрах.Партия КАК Партия,
	|	РНПТВРегистрах.ГТД КАК ГТД,
	|	РНПТВРегистрах.НомерТовара КАК НомерТовара,
	|	РНПТВРегистрах.ЕдиницаПрослеживаемости КАК ЕдиницаПрослеживаемости,
	|	РНПТВРегистрах.КодЕдиницыПрослеживаемости КАК КодЕдиницыПрослеживаемости,
	|	СУММА(РНПТВРегистрах.Количество) КАК Количество
	|ИЗ
	|	РНПТВРегистрах КАК РНПТВРегистрах
	|
	|СГРУППИРОВАТЬ ПО
	|	РНПТВРегистрах.Номенклатура,
	|	РНПТВРегистрах.НомерТовара,
	|	РНПТВРегистрах.ХарактеристикаНоменклатуры,
	|	РНПТВРегистрах.ГТД,
	|	РНПТВРегистрах.КодЕдиницыПрослеживаемости,
	|	РНПТВРегистрах.ЕдиницаПрослеживаемости,
	|	РНПТВРегистрах.Партия";
	
	Разделитель = "
	|ОБЪЕДИНИТЬ ВСЕ
	|";
	
	Возврат СтрСоединить(ЧастиТекстаЗапроса, Разделитель) + ЭпилогЗапроса;
	
КонецФункции

Функция ДополнитьОснованиямиКорректировки(Знач Документ)
	
	Результат = Новый Массив;
	
	Пока ЭтоКорректировка(Документ) Цикл
		
		Результат.Добавить(Документ);
		Документ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "ДокументОснование");
		
	КонецЦикла;
		
	Результат.Добавить(Документ);
	Возврат Результат;
	
КонецФункции

Функция ЭтоКорректировка(Документ)
	
	Возврат ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаРеализации")
		Или ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаРеализацииАвтомобилей");
	
КонецФункции

#КонецОбласти