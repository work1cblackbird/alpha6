////////////////////////////////////////////////////////////
// Общий модуль Прайс-листы контрагентов клиент

#Область ПрограммныйИнтерфейс

// Процедура - Выбор файла завершение контроля расширения работы с файлами
//
// Параметры:
//  УстановитьРасширениеРаботыСФайлами	 - Булево	 - Разрешение на работу с файлами
//  Описание							 - Строка	 - Описание
//
Процедура ВыборФайлаЗавершениеКонтроляРасширенияРаботыСФайлами(
	УстановитьРасширениеРаботыСФайлами, Описание) Экспорт
	
	Если УстановитьРасширениеРаботыСФайлами <> Истина Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Расширение для работы с файлами не подключено.'"));
		Возврат;
	КонецЕсли;
	
	УстановитьФильт = ПолучитьЗначениеПараметраСтруктуры(Описание, "УстановитьФильт", Ложь);
	ДиалогВыбораФайла = ПодготовитьДиалогВыбораФайла(Описание.ПутьПоУмолчанию, УстановитьФильт);
	
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработатьВыборФайла", ПрайсЛистыКонтрагентовКлиент, Описание);
	
	НачатьПомещениеФайлов(ОбработчикОповещенияОЗакрытии,, ДиалогВыбораФайла, Истина, Описание.УникальныйИдентификатор);
	
КонецПроцедуры

// Процедура - Выбор каталога завершение контроля расширения работы с файлами
//
// Параметры:
//  УстановитьРасширениеРаботыСФайлами	 - Булево	 - Разрешение на работу с файлами
//  Описание							 - Строка	 - Описание
//
Процедура ВыборКаталогаЗавершениеКонтроляРасширенияРаботыСФайлами(
	УстановитьРасширениеРаботыСФайлами, Описание) Экспорт
	
	Если УстановитьРасширениеРаботыСФайлами <> Истина Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Расширение для работы с файлами не подключено.'"));
		Возврат;
	КонецЕсли;
		
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработатьВыборФайла", ПрайсЛистыКонтрагентовКлиент, Описание);
	
	ДиалогВыбораКаталога.Показать(ОбработчикОповещенияОЗакрытии);
	
КонецПроцедуры

// Процедура - Заполнить маску файла автообновления
//
// Параметры:
//  ПолноеИмяФайла			 - Строка	 - Имя файла
//  КаталогФайлаПрайсЛиста	 - Строка	 - Путь к файлу
//  МаскаФайлаПрайсЛиста	 - Строка	 - Содержит расширение имени файла.
//
Процедура ЗаполнитьМаскуФайлаАвтообновления(ПолноеИмяФайла, КаталогФайлаПрайсЛиста, МаскаФайлаПрайсЛиста) Экспорт
	
	ФайлЗагрузки = Новый Файл(ПолноеИмяФайла);
	
	КаталогФайлаПрайсЛиста = ФайлЗагрузки.Путь;
	ФорматМаскиФайла       = ФайлЗагрузки.Расширение;
	
	Если Не ЗначениеЗаполнено(МаскаФайлаПрайсЛиста) ИЛИ (Найти(МаскаФайлаПрайсЛиста, "*") = 0 И Найти(МаскаФайлаПрайсЛиста, "?") = 0) Тогда
		МаскаФайлаПрайсЛиста = ФайлЗагрузки.ИмяБезРасширения;
	КонецЕсли;
	
КонецПроцедуры

// Функция - Упаковать файл
//
// Параметры:
//  ПутьКФайлу					 - Строка		 - Путь к файлу
//  УникальныйИдентификаторФормы - Идентификатор - Значение идентифицирующее форму.
// 
// Возвращаемое значение:
//  Строка - адрес файла.
//
Функция УпаковатьФайл(ПутьКФайлу, УникальныйИдентификаторФормы) Экспорт
	
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу), УникальныйИдентификаторФормы);
	//НачатьПомещениеФайла(, Адрес, ПутьКФайлу, Ложь, УникальныйИдентификаторФормы);
	Возврат Адрес;
	
КонецФункции

// Проверка выбора ключа записи прайс-листа.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - Номенклатура.
//  Поставщик	 - СправочникСсылка.Контрагенты - Поставщик.
//  Форма		 - УправляемаяФорма - Форма, в которой возникло событие.
// 
// Возвращаемое значение:
//  Булево - Необходимость выбора записи.
//
Функция ТребуетсяВыборКлючаЗаписиПрайсЛиста(Номенклатура, Поставщик, Форма) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Номенклатура) ИЛИ
		НЕ ЗначениеЗаполнено(Поставщик) ИЛИ
		ТипЗнч(Поставщик) = Тип("СправочникСсылка.СкладыКомпании") Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьДиалогВыбораФайла(ПутьПоУмолчанию = "", УстановитьФильт = Ложь)
	
	Фильтры = Новый Массив;
	Если ПустаяСтрока(ПутьПоУмолчанию) ИЛИ НЕ УстановитьФильт Тогда
		Фильтры.Добавить("Доступные файлы (*.xls,*.xlsx,*.xlsm,*.ods,*.ots,*.txt,.*csv)");
		Фильтры.Добавить("*.xls;*.xlsx;*.xlsm;*.ods;*.ots;*.txt;*.csv");
		
		Фильтры.Добавить("MS Excel (*.xls,*.xlsx,*.xlsm)");
		Фильтры.Добавить("*.xls;*.xlsx;*.xlsm");
		
		Фильтры.Добавить("OpenOffice.org.Calc (*.ods, *.ots)");
		Фильтры.Добавить("*.ods;*.ots");
		
		Фильтры.Добавить("Текстовый файл (*.txt,.*csv)");
		Фильтры.Добавить("*.txt;*.csv");
	Иначе
		Файл = Новый Файл(ПутьПоУмолчанию);
		Фильтры.Добавить(СтрШаблон("Файл прайс-листа (%1)", Файл.Расширение));
		Фильтры.Добавить("*"+Файл.Расширение);
	КонецЕсли;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                      =  СтрСоединить(Фильтры, "|");
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбораФайла.ПолноеИмяФайла              = ПутьПоУмолчанию;
	
	Возврат ДиалогВыбораФайла;
	
КонецФункции

Процедура ОбработатьВыборФайла(ПомещенныеФайлы, Описание) Экспорт
	
	Если ПомещенныеФайлы <> Неопределено И ПомещенныеФайлы.Количество() > 0 Тогда
		ВыполнитьОбработкуОповещения(Описание.Оповещение, ПомещенныеФайлы[0]);
	Иначе
		ВыполнитьОбработкуОповещения(Описание.Оповещение, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
