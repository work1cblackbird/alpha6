
#Область СлужебныйПрограммныйИнтерфейс

// Процедура возвращает таблицу со скидками согласно текущему отбору
//
// Параметры:
//  Дата                  - Дата - Дата получения скидок.
//  ПодразделениеКомпании - СправочникСсылка.ПодразделенияКомпании - Подразделение компании поиска скидки.
//  Карточка              - СправочникСсылка.Карточки - Карточка клиента.
//  Склад                 - СправочникСсылка.СкладыКомпании - Отбор по складу компании.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица скидок с учетом отбора.
//
Функция ОбщиеСкидки(Дата, ПодразделениеКомпании, Карточка, Склад) Экспорт
	
	// создание запроса
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Дата"       , Дата);
	Запрос.УстановитьПараметр("Время"      , '00010101' + (Дата - НачалоДня(Дата)));
	Запрос.УстановитьПараметр("ДеньНедели" , ДеньНедели(Дата));
	
	Запрос.УстановитьПараметр("ПодразделенияКомпании" , ПолучитьИерархию(ПодразделениеКомпании));
	Запрос.УстановитьПараметр("Карточки"              , ПолучитьИерархию(Карточка, Истина));
	Запрос.УстановитьПараметр("Склады"                , ПолучитьИерархию(Склад, Истина));
	
	// Сформируем текст запроса
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СкидкиШапкиСрезПоследних.Скидка,
	|	СкидкиШапкиСрезПоследних.СпособВычисления,
	|	СкидкиШапкиСрезПоследних.Скидка.ВидСвойства КАК ВидСвойства,
	|	СкидкиШапкиСрезПоследних.Свойство,
	|	СкидкиШапкиСрезПоследних.ЗначениеСкидки,
	|	СкидкиШапкиСрезПоследних.ОтСуммыЧека,
	|	СкидкиШапкиСрезПоследних.ФлагВытеснения,
	|	СкидкиШапкиСрезПоследних.ОтСуммыНакопленияНаКарте,
	|	СкидкиШапкиСрезПоследних.СкидкаНаТовары,
	|	СкидкиШапкиСрезПоследних.СкидкаНаРаботы,
	|	СкидкиШапкиСрезПоследних.РучнаяСкидка
	|ИЗ
	|	РегистрСведений.СкидкиШапки.СрезПоследних(
	|			&Дата,
	|			&Время МЕЖДУ НачВремя И КонВремя
	|				И ПОДСТРОКА(ДниНедели, &ДеньНедели, 1) = ""1""
	|				И ПодразделениеКомпании В (&ПодразделенияКомпании)
	|				И ДисконтнаяКарта В (&Карточки)
	|				И ЗалОбслуживания В (&Склады)) КАК СкидкиШапкиСрезПоследних
	|ГДЕ
	|	СкидкиШапкиСрезПоследних.Действует";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Активные строчные скидки подходящие под парамтры.
//
// Параметры:
//  Дата - Дата - Дата назначения скидки.
//  ПодразделениеКомпании - СправочникСсылка.ПодразделениеКомпании - Подразделение компании.
//  Карточка - СправочникСсылка.Карточки - Дисконтная карточка пользователя.
//  Склад - СправочникСсылка.СкладыКомпании - Склад компании.
// 
// Возвращаемое значение:
//  ТаблицаЗначений
//
Функция СтрочныеСкидки(Дата, ПодразделениеКомпании, Карточка, Склад) Экспорт
	
	// создание запроса
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Дата"       , Дата);
	Запрос.УстановитьПараметр("Время"      , '00010101' + (Дата - НачалоДня(Дата)));
	Запрос.УстановитьПараметр("ДеньНедели" , ДеньНедели(Дата));
	
	Запрос.УстановитьПараметр("ПодразделенияКомпании" , ПолучитьИерархию(ПодразделениеКомпании));
	Запрос.УстановитьПараметр("Карточки"              , ПолучитьИерархию(Карточка, Истина));
	Запрос.УстановитьПараметр("Склады"                , ПолучитьИерархию(Склад, Истина));
	
	// Сформируем текст запроса
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СкидкиСтрокиСрезПоследних.РучнаяСкидка,
	|	СкидкиСтрокиСрезПоследних.Объект,
	|	СкидкиСтрокиСрезПоследних.Скидка,
	|	СкидкиСтрокиСрезПоследних.Скидка.ВидСвойства КАК ВидСвойства,
	|	СкидкиСтрокиСрезПоследних.Свойство,
	|	СкидкиСтрокиСрезПоследних.СпособВычисления,
	|	СкидкиСтрокиСрезПоследних.ЗначениеСкидки,
	|	СкидкиСтрокиСрезПоследних.ОтСуммыСтроки,
	|	СкидкиСтрокиСрезПоследних.ОтКоличества,
	|	СкидкиСтрокиСрезПоследних.Правило,
	|	СкидкиСтрокиСрезПоследних.ФлагВытеснения,
	|	СкидкиСтрокиСрезПоследних.СкидкаНаТовары,
	|	СкидкиСтрокиСрезПоследних.СкидкаНаРаботы,
	|	СкидкиСтрокиСрезПоследних.ОтСуммыНакопленияНаКарте
	|ИЗ
	|	РегистрСведений.СкидкиСтроки.СрезПоследних(
	|			&Дата,
	|			&Время МЕЖДУ НачВремя И КонВремя
	|				И ПОДСТРОКА(ДниНедели, &ДеньНедели, 1) = ""1""
	|				И ПодразделениеКомпании В (&ПодразделенияКомпании)
	|				И ДисконтнаяКарта В (&Карточки)
	|				И ЗалОбслуживания В (&Склады)) КАК СкидкиСтрокиСрезПоследних
	|ГДЕ
	|	СкидкиСтрокиСрезПоследних.Действует";
	
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

// Расчет суммы накопления на карте
//
// Параметры:
//  Карта         - СправочникСсылка.Карточки - Дебиторская карта
//  Подразделение - СправочникСсылка.ПодразделенияКомпании - Подразделение для которого нужно получить накопления.
// 
// Возвращаемое значение:
//  Число - Сумма накопления на карте.
//
Функция СуммуНакопленияНаКарте(Карта, Подразделение) Экспорт
	Сумма = 0;
	
	Если ЗначениеЗаполнено(Карта) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(НакопленияПоКарточкамКонтрагентовОбороты.СуммаОборот) КАК Сумма
		|ИЗ
		|	РегистрНакопления.НакопленияПоКарточкамКонтрагентов.Обороты(
		|			,
		|			,
		|			,
		|			Карточка = &Карта
		|			И Контрагент = &Контрагент
		|			И ПодразделениеКомпании = &ПодразделениеКомпании) КАК НакопленияПоКарточкамКонтрагентовОбороты";
		
		Запрос.УстановитьПараметр("Карта"                , Карта);
		Запрос.УстановитьПараметр("Контрагент"           , Карта.Объект);
		Запрос.УстановитьПараметр("ПодразделениеКомпании", Подразделение);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Сумма = РезультатЗапроса.Выгрузить()[0].Сумма;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Сумма;
КонецФункции

// Получение валюты регламентированного учета организаций.
// 
// Возвращаемое значение:
//  СправочникСсылка.Валюты - Валюта.
//
Функция ВалютаРегламентированногоУчетаОрганизаций() Экспорт
	
	Возврат Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	
КонецФункции

// Получение валюты накопительных сумм.
// 
// Возвращаемое значение:
//  СправочникСсылка.Валюты - Валюта.
//
Функция ВалютаНакопительныхСумм() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Константы.ВалютаНакопительныхСумм.Получить();
	
КонецФункции

// Функция построения цепочки иерархии элемента
//
// Параметры:
//  Ссылка                - СправочникСсылка - Элемент справочника проверки.
//  ДобавлятьПустуюСсылку - Булево - Добавление пустой ссылки в результат.
//  Родители              - Массив - Список родителей элемента справочника.
// 
// Возвращаемое значение:
//  Массив - Список элементов иерархии.
//
Функция ПолучитьИерархию(Знач Ссылка, ДобавлятьПустуюСсылку = Ложь, Знач Родители = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Родители = Неопределено ИЛИ ТипЗнч(Родители) <> Тип("Массив") Тогда
		Родители = Новый Массив;
	КонецЕсли;
	
	Если ДобавлятьПустуюСсылку Тогда
		Родители.Добавить(ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка).ПустаяСсылка());
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Родители;
	КонецЕсли;
	
	Пока НЕ Ссылка.Пустая() Цикл
		Родители.Добавить(Ссылка);
		Ссылка = Ссылка.Родитель;
	КонецЦикла;
	
	Возврат Родители;
КонецФункции

#КонецОбласти