
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// В данном модуле располагаются обработчики расширений событий форм в серверном контексте.
//
// Правила внедрения методов расширений в объекты:
// 
// Вызов методов расширений следует завернуть в комментарий с именем подсистемы.
// 
// Пример:
// 	// АльфаАвто.СобытияОбъектов
//	СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
//	// Конец АльфаАвто.СобытияОбъектов
// 
// Все методы расширений следует располагать как можно ближе к концу метода, но анализируя возвраты.
// Вызов процедуры должен происходить все зависимости от логики работы формы.
// 
// Пример:
//	В форме документа заказ-наряд располагаем перед проверкой на заполненость ссылки.
//		// АльфаАвто.СобытияОбъектов
//		СобытияОбъектовФормы.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект, Отказ, СтандартнаяОбработка);
//		// Конец АльфаАвто.СобытияОбъектов
//		
//		// Дальнейшие операции выпольняются только для новых документов
//		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
//			
//			РегистрыСведений.ЗапланированныеТО.ЧтениеЗначенияРегистраСведения(Автомобиль, ЭтотОбъект);
//			
//			// ПрослеживаемыеТовары
//			УчетПрослеживаемыхТоваровСервер.ЗаполнитьСлужебныйРеквизитПрослеживаемогоТовара(Объект);
//			// Конец ПрослеживаемыеТовары
//			
//			// Настроим парамтеры выбора сервисной кампании автомобиля
//			НастройкаПараметровВыбораСервиснойКампании();
//			Возврат;
//			
//		КонецЕсли;
//
// Исключением является метод обработка оповещения, в нем обработчик следует располагать как можно ближе к началу метода
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// При создании на сервере форма списка.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -
//  Отказ - Булево -
//  СтандартнаяОбработка - Булево -
//
Процедура ПриСозданииНаСервере_ФормаСписка(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	МодулиДляОбработки = СобытияОбъектовСлужебныйКлиентСервер.МодулиДляОбработки(Форма.ИмяФормы,
		СобытияОбъектовФормыПереопределяемый);
	
	Для Каждого Модуль Из МодулиДляОбработки Цикл
		
		Модуль.ПриСозданииНаСервере_ФормаСписка(Форма, Отказ, СтандартнаяОбработка);
		
	КонецЦикла;
	
КонецПроцедуры

// При создании на сервере форма документа.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -
//  Отказ - Булево -
//  СтандартнаяОбработка - Булево -
//
Процедура ПриСозданииНаСервере_ФормаДокумента(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	МодулиДляОбработки = СобытияОбъектовСлужебныйКлиентСервер.МодулиДляОбработки(Форма.ИмяФормы,
		СобытияОбъектовФормыПереопределяемый);
	
	Для Каждого Модуль Из МодулиДляОбработки Цикл
		
		Модуль.ПриСозданииНаСервере_ФормаДокумента(Форма, Отказ, СтандартнаяОбработка);
		
	КонецЦикла;
	
КонецПроцедуры
	
// При чтении на сервере форма документа.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -
//  ТекущийОбъект - Произвольный
//
Процедура ПриЧтенииНаСервере_ФормаДокумента(Форма, ТекущийОбъект) Экспорт
	
	МодулиДляОбработки = СобытияОбъектовСлужебныйКлиентСервер.МодулиДляОбработки(Форма.ИмяФормы,
		СобытияОбъектовФормыПереопределяемый);
	
	Для Каждого Модуль Из МодулиДляОбработки Цикл
		
		Модуль.ПриЧтенииНаСервере_ФормаДокумента(Форма, ТекущийОбъект);
		
	КонецЦикла;
	
КонецПроцедуры
	
// Перед записью на сервере форма документа.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -
//  Отказ - Булево -
//  ТекущийОбъект - Произвольный -
//  ПараметрыЗаписи - Структура -
//
Процедура ПередЗаписьюНаСервере_ФормаДокумента(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	МодулиДляОбработки = СобытияОбъектовСлужебныйКлиентСервер.МодулиДляОбработки(Форма.ИмяФормы,
		СобытияОбъектовФормыПереопределяемый);
	
	Для Каждого Модуль Из МодулиДляОбработки Цикл
		
		Модуль.ПередЗаписьюНаСервере_ФормаДокумента(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
	КонецЦикла;
	
КонецПроцедуры

// После записи на сервере форма документа.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//  ТекущийОбъект - Произвольный
//  ПараметрыЗаписи - Структура
//
Процедура ПослеЗаписиНаСервере_ФормаДокумента(Форма, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	МодулиДляОбработки = СобытияОбъектовСлужебныйКлиентСервер.МодулиДляОбработки(Форма.ИмяФормы,
		СобытияОбъектовФормыПереопределяемый);
	
	Для Каждого Модуль Из МодулиДляОбработки Цикл
		
		Модуль.ПослеЗаписиНаСервере_ФормаДокумента(Форма, ТекущийОбъект, ПараметрыЗаписи);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти