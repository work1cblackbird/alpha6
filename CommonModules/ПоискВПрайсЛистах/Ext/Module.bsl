
#Область Программныйинтерфейс

// Формирует список уникальных позиций Артикул+Производитель
//  в ИБ и прайс-листах
//
// Параметры:
//  Артикул                           - Строка - Искомый артикул
//  АртикулДляПоиска                  - Строка - Артикул без спец символов  
//  Наименование					  - Строка - Наименование параметра поиска
//  ИспользованиеФильтраПроизводитель - Булево - Признак использования отбора по производителю
//  Производитель                     - СправоникСсылка.Производители - Значение отбора по производителю
//  НастройкиРасширенногоПоиска       - Структура - Настройки поиска
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Результат поиска.
//
Функция ВыполнитьПоискУникальныхПозиций(
	Артикул,
	АртикулДляПоиска,
	Наименование,
	ИспользованиеФильтраПроизводитель,
	Производитель,
	НастройкиРасширенногоПоиска) Экспорт
	
	РезультатПоиска = НовыйРезультатПоискаНоменклатуры();
	
	Если ПустаяСтрока(АртикулДляПоиска) И ПустаяСтрока(Артикул) И ПустаяСтрока(Наименование) Тогда
		
		Возврат РезультатПоиска;
		
	КонецЕсли;
	
	УникальныеПроизводителиВРезультате = Новый Массив;
	
	Запрос = Новый Запрос(ЗапросДляПоскаУникальныхПозиций(
		Артикул,
		АртикулДляПоиска,
		ИспользованиеФильтраПроизводитель,
		Производитель,
		НастройкиРасширенногоПоиска));
	
	СтрокаПоиска = ?(НастройкиРасширенногоПоиска.ТочныйПоиск, АртикулДляПоиска, "%" + АртикулДляПоиска + "%");
	Запрос.УстановитьПараметр("Артикул", СтрокаПоиска); 
	СтрокаПоискаНаименование = ?(НастройкиРасширенногоПоиска.ТочныйПоиск, Наименование, "%" + Наименование + "%");
	Запрос.УстановитьПараметр("Наименование", СтрокаПоискаНаименование);
	Запрос.УстановитьПараметр("Производитель", Производитель);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ПроизводителиИАртикулы = 2;
	РазвернутаяИнформация = 3;
	
	Если НЕ РезультатыЗапроса[ПроизводителиИАртикулы].Пустой() Тогда
		
		ВыборкаАртикулы = РезультатыЗапроса[ПроизводителиИАртикулы].Выбрать();
		ВыборкаИнформация = РезультатыЗапроса[РазвернутаяИнформация].Выбрать();
		ПоискСтрокиИнформации = Новый Структура("АртикулДляПоиска,Производитель");
		
		Пока ВыборкаАртикулы.Следующий() Цикл
			
			НоваяСтрока = РезультатПоиска.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаАртикулы, "АртикулДляПоиска,Производитель");
			ЗаполнитьЗначенияСвойств(ПоискСтрокиИнформации, ВыборкаАртикулы, "АртикулДляПоиска,Производитель");
			ВыборкаИнформация.Сбросить();
			
			Если ВыборкаИнформация.НайтиСледующий(ПоискСтрокиИнформации) Тогда
				
				ПоляКПереносу = Новый Массив;
				ПоляКПереносу.Добавить("Артикул");
				ПоляКПереносу.Добавить("Источник");
				ПоляКПереносу.Добавить("ИмяИсточника");
				ПоляКПереносу.Добавить("ВладелецХарактеристики");
				
				Если ВыборкаИнформация.Источник = 0 Тогда
					
					ПоляКПереносу.Добавить("Номенклатура");
					
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИнформация, СтрСоединить(ПоляКПереносу, ","));
				НоваяСтрока.Наименование = ВыборкаИнформация.Номенклатура;
				
			КонецЕсли;
			
			Если УникальныеПроизводителиВРезультате.Найти(НоваяСтрока.Производитель) = Неопределено Тогда
				
				УникальныеПроизводителиВРезультате.Добавить(НоваяСтрока.Производитель);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ НастройкиРасширенногоПоиска.ИскатьВоВнешнихПрайсЛистахКонтрагентов Тогда
		
		Возврат РезультатПоиска;
		
	КонецЕсли;
	
	ДополнитьРезультатамиПоискаВоВнешнихПрайсЛистахКонтрагентов(
		Артикул,
		АртикулДляПоиска,
		Наименование,
		ИспользованиеФильтраПроизводитель,
		Производитель,
		НастройкиРасширенногоПоиска,
		РезультатПоиска,
		УникальныеПроизводителиВРезультате);
	
	Возврат РезультатПоиска;
	
КонецФункции

// Формирует набор уникальных производителей из таблицы результата поиска
//
// Параметры:
//  РезультатПоиска - ТаблицаЗначений - Результат расширенного поиска номенклатуры
// 
// Возвращаемое значение:
//  Структура - Список производителей по результату поиска.
//
Функция ВыбратьПроизводителейИзРезультатаПоиска(РезультатПоиска) Экспорт
	Производители = Новый Массив; ЕстьПустойПроизводитель = Ложь;
	
	Для Каждого Строка Из РезультатПоиска Цикл
		Если ЗначениеЗаполнено(Строка.Производитель) Тогда
			Если Производители.Найти(Строка.Производитель) = Неопределено Тогда
				Производители.Добавить(Строка.Производитель);
			КонецЕсли;
		Иначе
			ЕстьПустойПроизводитель = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ПроизводителиДляПоиска = Новый Структура;
	ПроизводителиДляПоиска.Вставить("Производители"          , Производители);
	ПроизводителиДляПоиска.Вставить("ЕстьПустойПроизводитель", ЕстьПустойПроизводитель);
	
	Возврат ПроизводителиДляПоиска;
КонецФункции

// Заполнение дерева источников обеспечения по номенклатуре
//
// Параметры:
//  Номенклатура         - СправочникСсылка.Номенклатура - Номенклатура для которой будет сформированы источники обеспечения
//  Параметры            - Структура      - Параметры формирования цены отстатков и т.д.
//  ИсточникиОбеспечения - ДеревоЗначений - Результат заполнения
//
Процедура СписокИсточниковОбеспеченияПоНоменклатуре(Номенклатура, Параметры, ИсточникиОбеспечения) Экспорт
	Перем ДоступныеИсточникиОбеспечения;
	
	ИсточникиОбеспечения.ПолучитьЭлементы().Очистить();
	
	Параметры.Вставить("ДоступенПропускВыбораИсточника", Истина);
	
	ДоступныеИсточникиОбеспечения = СформироватьТаблицуПоискаПоОписанию(
		Номенклатура.Артикул,
		Номенклатура.АртикулДляПоиска,
		Номенклатура.Производитель,
		Параметры,
		Номенклатура);
	
	СформироватьДеревоИсточников(ДоступныеИсточникиОбеспечения, Параметры, ИсточникиОбеспечения);
	
КонецПроцедуры

// Заполнение дерева источников обеспечения по артикулу и производителю
//
// Параметры:
//  Артикул              - Строка         - Артикул для которого будет сформированы источники обеспечения
//  АртикулДляПоиска     - Строка         - Артикул без нечитаемых символов
//  Производитель        - СправочникСсылка.Производители - Производитель артикула
//  Параметры            - Структура      - Параметры формирования цены отстатков и т.д.
//  ИсточникиОбеспечения - ДеревоЗначений - Результат заполнения
//
Процедура СписокИсточниковОбеспеченияПоАртикулуИПроизводителю(
	Артикул,
	АртикулДляПоиска,
	Производитель,
	Параметры,
	ИсточникиОбеспечения) Экспорт
	
	ИсточникиОбеспечения.ПолучитьЭлементы().Очистить();
	
	ДоступныеИсточникиОбеспечения = СформироватьТаблицуПоискаПоОписанию(
		Артикул,
		АртикулДляПоиска,
		Производитель,
		Параметры);
	
	СформироватьДеревоИсточников(ДоступныеИсточникиОбеспечения, Параметры, ИсточникиОбеспечения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйРезультатПоискаНоменклатуры()
	
	РезультатПоиска = Новый ТаблицаЗначений;
	РезультатПоиска.Колонки.Добавить("Артикул", ОбщегоНазначения.ОписаниеТипаСтрока(50));
	РезультатПоиска.Колонки.Добавить("АртикулДляПоиска", ОбщегоНазначения.ОписаниеТипаСтрока(50));
	РезультатПоиска.Колонки.Добавить("Производитель", Новый ОписаниеТипов("СправочникСсылка.Производители"));
	РезультатПоиска.Колонки.Добавить("Наименование", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	РезультатПоиска.Колонки.Добавить("Источник", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	РезультатПоиска.Колонки.Добавить("ИмяИсточника", ОбщегоНазначения.ОписаниеТипаСтрока(50));
	РезультатПоиска.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Типы = Новый Массив();
	Типы.Добавить("Строка");
	Типы.Добавить("СправочникСсылка.Номенклатура");
	Типы.Добавить("СправочникСсылка.ТипыНоменклатуры");
	РезультатПоиска.Колонки.Добавить("ВладелецХарактеристики", Новый ОписаниеТипов(Типы));
	Возврат РезультатПоиска;
	
КонецФункции

Функция ЗапросДляПоскаУникальныхПозиций(
	Артикул,
	АртикулДляПоиска,
	ИспользованиеФильтраПроизводитель,
	Производитель,
	НастройкиРасширенногоПоиска)
	
	ЗапросТекст =
	"ВЫБРАТЬ //0
	|	Номенклатура.Артикул                КАК Артикул,
	|	Номенклатура.АртикулДляПоиска       КАК АртикулДляПоиска,
	|	Номенклатура.Производитель          КАК Производитель,
	|	Номенклатура.Производитель.Родитель КАК ПроизводительРодитель,
	|	Номенклатура.Ссылка                 КАК Номенклатура,
	|	0 КАК Источник,
	|	""Справочник"" КАК ИмяИсточника
	|ПОМЕСТИТЬ ТабАртикуловИПроизводителейНеСвернутая
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.АртикулДляПоиска %1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Артикул                КАК Артикул,
	|	Номенклатура.АртикулДляПоиска       КАК АртикулДляПоиска,
	|	Номенклатура.Производитель          КАК Производитель,
	|	Номенклатура.Производитель.Родитель КАК ПроизводительРодитель,
	|	Номенклатура.Ссылка                 КАК Номенклатура,
	|	0 КАК Источник,
	|	""Справочник"" КАК ИмяИсточника
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Наименование %2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Артикул                КАК Артикул,
	|	Номенклатура.АртикулДляПоиска       КАК АртикулДляПоиска,
	|	Номенклатура.Производитель          КАК Производитель,
	|	Номенклатура.Производитель.Родитель КАК ПроизводительРодитель,
	|	Номенклатура.Ссылка                 КАК Номенклатура,
	|	0 КАК Источник,
	|	""Справочник"" КАК ИмяИсточника
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.НаименованиеПолное %3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГруппыАналогов.Артикул,
	|	ГруппыАналогов.АртикулДляПоиска,
	|	ГруппыАналогов.Производитель,
	|	ГруппыАналогов.Производитель.Родитель,
	|	ГруппыАналогов.Наименование,
	|	1,
	|	""Аналог""
	|ИЗ
	|	РегистрСведений.ГруппыАналогов КАК ГруппыАналогов
	|ГДЕ
	|	ГруппыАналогов.АртикулДляПоиска %1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГруппыАналогов.Артикул,
	|	ГруппыАналогов.АртикулДляПоиска,
	|	ГруппыАналогов.Производитель,
	|	ГруппыАналогов.Производитель.Родитель,
	|	ГруппыАналогов.Наименование,
	|	1,
	|	""Аналог""
	|ИЗ
	|	РегистрСведений.ГруппыАналогов КАК ГруппыАналогов
	|ГДЕ
	|	ГруппыАналогов.Наименование %2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Замены.АртикулЗамены,
	|	Замены.АртикулДляПоиска,
	|	Замены.Производитель,
	|	Замены.Производитель.Родитель,
	|	Замены.Описание,
	|	2,
	|	""Замена по артикулу для поиска""
	|ИЗ
	|	РегистрСведений.Замены КАК Замены
	|ГДЕ
	|	Замены.АртикулДляПоиска %1 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Замены.АртикулЗамены,
	|	Замены.АртикулДляПоиска,
	|	Замены.Производитель,
	|	Замены.Производитель.Родитель,
	|	Замены.Описание,
	|	2,
	|	""Замена по артикулу для поиска""
	|ИЗ
	|	РегистрСведений.Замены КАК Замены
	|ГДЕ
	|	Замены.Описание %2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Замены.Артикул,
	|	Замены.АртикулЗаменыДляПоиска,
	|	Замены.Производитель,
	|	Замены.Производитель.Родитель,
	|	Замены.Описание,
	|	2,
	|	""Замена по артикулу замены для поиска""
	|ИЗ
	|	РегистрСведений.Замены КАК Замены
	|ГДЕ
	|	Замены.АртикулЗаменыДляПоиска %1 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентов.Артикул,
	|	ПрайсЛистыКонтрагентов.АртикулДляПоиска,
	|	ПрайсЛистыКонтрагентов.Производитель,
	|	ПрайсЛистыКонтрагентов.Производитель.Родитель,
	|	ПрайсЛистыКонтрагентов.Наименование,
	|	3,
	|	""Прайс-лист контрагента""
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
	|ГДЕ
	|	ПрайсЛистыКонтрагентов.АртикулДляПоиска %1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентов.Артикул,
	|	ПрайсЛистыКонтрагентов.АртикулДляПоиска,
	|	ПрайсЛистыКонтрагентов.Производитель,
	|	ПрайсЛистыКонтрагентов.Производитель.Родитель,
	|	ПрайсЛистыКонтрагентов.Наименование,
	|	3,
	|	""Прайс-лист контрагента""
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
	|ГДЕ
	|	ПрайсЛистыКонтрагентов.Наименование %2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентовВременный.Артикул,
	|	ПрайсЛистыКонтрагентовВременный.АртикулДляПоиска,
	|	ПрайсЛистыКонтрагентовВременный.Производитель,
	|	ПрайсЛистыКонтрагентовВременный.Производитель.Родитель,
	|	ПрайсЛистыКонтрагентовВременный.Наименование,
	|	3,
	|	""Прайс-лист контрагента временный""
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентовВременный КАК ПрайсЛистыКонтрагентовВременный
	|ГДЕ
	|	ПрайсЛистыКонтрагентовВременный.АртикулДляПоиска %1
	|	И НЕ ПрайсЛистыКонтрагентовВременный.ЗапретЗагрузки
	|	И (ПрайсЛистыКонтрагентовВременный.ПроизводительВПрайсЛисте = """"
	|		ИЛИ ПрайсЛистыКонтрагентовВременный.Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентовВременный.Артикул,
	|	ПрайсЛистыКонтрагентовВременный.АртикулДляПоиска,
	|	ПрайсЛистыКонтрагентовВременный.Производитель,
	|	ПрайсЛистыКонтрагентовВременный.Производитель.Родитель,
	|	ПрайсЛистыКонтрагентовВременный.Наименование,
	|	3,
	|	""Прайс-лист контрагента временный""
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентовВременный КАК ПрайсЛистыКонтрагентовВременный
	|ГДЕ
	|	ПрайсЛистыКонтрагентовВременный.Наименование %2
	|	И НЕ ПрайсЛистыКонтрагентовВременный.ЗапретЗагрузки
	|	И (ПрайсЛистыКонтрагентовВременный.ПроизводительВПрайсЛисте = """"
	|		ИЛИ ПрайсЛистыКонтрагентовВременный.Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка))
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ //1
	|	ТабАртикуловИПроизводителейНеСвернутая.Артикул,
	|	ТабАртикуловИПроизводителейНеСвернутая.АртикулДляПоиска,
	|	ТабАртикуловИПроизводителейНеСвернутая.Источник,
	|	ТабАртикуловИПроизводителейНеСвернутая.ИмяИсточника,
	|	ТабАртикуловИПроизводителейНеСвернутая.Производитель,
	|	ТабАртикуловИПроизводителейНеСвернутая.Номенклатура
	|ПОМЕСТИТЬ ТабПроизводителей
	|ИЗ
	|	ТабАртикуловИПроизводителейНеСвернутая КАК ТабАртикуловИПроизводителейНеСвернутая
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ //2
	|	ТабПроизводителей.АртикулДляПоиска КАК АртикулДляПоиска,
	|	ТабПроизводителей.Производитель    КАК Производитель,
	|	-1 КАК Источник
	|ИЗ
	|	ТабПроизводителей КАК ТабПроизводителей
	|// Отбор по производителю
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ //3
	|	ТабПроизводителей.Артикул,
	|	ТабПроизводителей.АртикулДляПоиска,
	|	ТабПроизводителей.Источник,
	|	ТабПроизводителей.ИмяИсточника,
	|	ТабПроизводителей.Производитель КАК Производитель,
	|	ТабПроизводителей.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТабПроизводителей.Источник <> 0 ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		КОГДА ТабПроизводителей.Номенклатура.ТипНоменклатуры.ИспользованиеХарактеристик = 1 ТОГДА
	|			ТабПроизводителей.Номенклатура.ТипНоменклатуры
	|		КОГДА ТабПроизводителей.Номенклатура.ТипНоменклатуры.ИспользованиеХарактеристик = 2 ТОГДА
	|			ТабПроизводителей.Номенклатура
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВладелецХарактеристики
	|ИЗ
	|	ТабПроизводителей КАК ТабПроизводителей
	|// Отбор по производителю
	|УПОРЯДОЧИТЬ ПО
	|	ТабПроизводителей.Источник";
	
	Если НастройкиРасширенногоПоиска.ТочныйПоиск Тогда
		ЗапросТекст = СтрШаблон(ЗапросТекст, "= &Артикул", "= &Наименование", "ПОДОБНО &Наименование");
	Иначе
		ЗапросТекст = СтрШаблон(ЗапросТекст, "ПОДОБНО &Артикул", "ПОДОБНО &Наименование", "ПОДОБНО &Наименование");
	КонецЕсли;
	
	Если ИспользованиеФильтраПроизводитель Тогда
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "// Отбор по производителю", "ГДЕ ТабПроизводителей.Производитель = &Производитель");
	КонецЕсли;
	
	Возврат ЗапросТекст;
	
КонецФункции

Процедура ДополнитьРезультатамиПоискаВоВнешнихПрайсЛистахКонтрагентов(
	Артикул,
	АртикулДляПоиска,
	Наименование,
	ИспользованиеФильтраПроизводитель,
	Производитель,
	НастройкиРасширенногоПоиска,
	РезультатПоиска,
	УникальныеПроизводителиВРезультате)
	
	ТекстОтбораПоПроизводителю = ""; ТекстОтбораПоУникальнымПроизводителм = "";
	
	// Получим прайс-листы для поиска
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентов.Ссылка КАК ПрайсЛист
	|ИЗ
	|	Справочник.ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
	|ГДЕ
	|	НЕ ПрайсЛистыКонтрагентов.ФайлИсточникДанных
	|	И НЕ ПрайсЛистыКонтрагентов.ХранитьДанныеЛокально
	|	%1
	|	%2";
	
	Если НастройкиРасширенногоПоиска.ТочныйПоиск Тогда
		ТекстОтбораПоУникальнымПроизводителм = "И НЕ ПрайсЛистыКонтрагентов.Производитель В (&УникальныеПроизводителиВРезультате)";
		Запрос.УстановитьПараметр("УникальныеПроизводителиВРезультате", УникальныеПроизводителиВРезультате);
	КонецЕсли;
	
	Если ИспользованиеФильтраПроизводитель Тогда
		ТекстОтбораПоПроизводителю = 
			"И (ПрайсЛистыКонтрагентов.Производитель  = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
			|ИЛИ ПрайсЛистыКонтрагентов.Производитель = &Производитель)";
		Запрос.УстановитьПараметр("Производитель", Производитель);
	КонецЕсли;
	
	Запрос.Текст = СтрШаблон(Запрос.Текст, ТекстОтбораПоПроизводителю,ТекстОтбораПоУникальнымПроизводителм);
	
	РезультатЗапросаПоПрайсЛистам = Запрос.Выполнить();
	
	Если НЕ РезультатЗапросаПоПрайсЛистам.Пустой() Тогда
		Выборка = РезультатЗапросаПоПрайсЛистам.Выбрать();
		Пока Выборка.Следующий() Цикл
			НайденныеПозиции = Справочники.ПрайсЛистыКонтрагентов.ВыполнитьЗапросПоАртикулуКПрайсЛистуИсточникуДанных(
				Выборка.ПрайсЛист,
				Артикул,
				АртикулДляПоиска,
				Наименование,
				Производитель,
				ИспользованиеФильтраПроизводитель,
				НастройкиРасширенногоПоиска.ТочныйПоиск
			);
			
			Для Каждого НайденнаяСтрока Из НайденныеПозиции Цикл
				Условие = Новый Структура();
				Условие.Вставить("Артикул", НайденнаяСтрока.Артикул);
				Условие.Вставить("АртикулДляПоиска", НайденнаяСтрока.АртикулДляПоиска);
				Условие.Вставить("Наименование", НайденнаяСтрока.Наименование);
				Условие.Вставить("Производитель", НайденнаяСтрока.Производитель);
				
				Если РезультатПоиска.НайтиСтроки(Условие).Количество() = 0 Тогда
					НоваяСтрокаРезультата = РезультатПоиска.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрокаРезультата, НайденнаяСтрока);
					НоваяСтрокаРезультата.Источник = 4;
					НоваяСтрокаРезультата.ИмяИсточника = "Прайс-лист внешний";
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура АналогиНоменклатуры(
	АртикулДляПоиска,
	Производитель,
	ПроизводительРодитель,
	АртикулыДляПоиска,
	МенеджерДоступностиПоПодразделениям,
	Параметры)
	
	ПодразделениеКомпании = ПолучитьЗначениеПараметраСтруктуры(
		Параметры,
		"ПодразделениеКомпании",
		ПараметрыСеанса.ПодразделениеКомпании);
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерДоступностиПоПодразделениям;
	
	Запрос.УстановитьПараметр("АртикулДляПоиска"     , АртикулДляПоиска);
	Запрос.УстановитьПараметр("ПроизводительГруппа"  , ПроизводительРодитель);
	Запрос.УстановитьПараметр("Производитель"        , Производитель);
	Запрос.УстановитьПараметр("ТаблицаЗамен"         , АртикулыДляПоиска);
	Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗамен.Артикул,
	|	ТаблицаЗамен.АртикулДляПоиска,
	|	ТаблицаЗамен.Производитель,
	|	ТаблицаЗамен.Номенклатура,
	|	ТаблицаЗамен.ГруппаИсточник
	|ПОМЕСТИТЬ Замены
	|ИЗ
	|	&ТаблицаЗамен КАК ТаблицаЗамен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаЗамен.АртикулДляПоиска,
	|	ТаблицаЗамен.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыАналогов.ИдентификаторГруппы
	|ПОМЕСТИТЬ ГруппыАналогов
	|ИЗ
	|	РегистрСведений.ГруппыАналогов КАК ГруппыАналогов
	|ГДЕ
	|	ГруппыАналогов.АртикулДляПоиска = &АртикулДляПоиска
	|	И (ГруппыАналогов.Производитель = &Производитель
	|			ИЛИ ГруппыАналогов.Производитель.Родитель = &ПроизводительГруппа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Артикул,
	|	Номенклатура.АртикулДляПоиска,
	|	Номенклатура.Производитель,
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	0 КАК ГруппаИсточник
	|ПОМЕСТИТЬ Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.АртикулДляПоиска = &АртикулДляПоиска
	|	И (Номенклатура.Производитель = &Производитель
	|			ИЛИ Номенклатура.Производитель.Родитель = &ПроизводительГруппа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыАналогов.Артикул,
	|	ГруппыАналогов.АртикулДляПоиска,
	|	ГруппыАналогов.Производитель,
	|	ВЫБОР
	|		КОГДА ГруппыАналогов.АртикулДляПоиска = &АртикулДляПоиска
	|				И (ГруппыАналогов.Производитель = &Производитель
	|					ИЛИ ГруппыАналогов.Производитель.Родитель = &ПроизводительГруппа)
	|			ТОГДА 0
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК ГруппаИсточник
	|ПОМЕСТИТЬ АналогиБезНоменклатуры
	|ИЗ
	|	РегистрСведений.ГруппыАналогов КАК ГруппыАналогов
	|ГДЕ
	|	ГруппыАналогов.ИдентификаторГруппы В
	|			(ВЫБРАТЬ
	|				ГруппыАналогов.ИдентификаторГруппы
	|			ИЗ
	|				ГруппыАналогов КАК ГруппыАналогов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГруппыАналогов.АртикулДляПоиска,
	|	ГруппыАналогов.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступностьПрайсЛистовПоПодразделениямКомпании.ПрайсЛист
	|ПОМЕСТИТЬ НедоступныеПрайсЛисты
	|ИЗ
	|	ДоступностьПрайсЛистовПоПодразделениямКомпании КАК ДоступностьПрайсЛистовПоПодразделениямКомпании
	|ГДЕ
	|	ДоступностьПрайсЛистовПоПодразделениямКомпании.ПодразделениеКомпании = &ПодразделениеКомпании
	|	И ДоступностьПрайсЛистовПоПодразделениямКомпании.Уровень = ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.Запрещено)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентовНедоступныеЗаписи.ПрайсЛист
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентовНедоступныеЗаписи КАК ПрайсЛистыКонтрагентовНедоступныеЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентов.Артикул,
	|	ПрайсЛистыКонтрагентов.АртикулДляПоиска,
	|	ПрайсЛистыКонтрагентов.Производитель,
	|	0 КАК ГруппаИсточник
	|ПОМЕСТИТЬ ПрайсЛистыБезНоменклатуры
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
	|ГДЕ
	|	НЕ ПрайсЛистыКонтрагентов.ПрайсЛист В
	|				(ВЫБРАТЬ
	|					НедоступныеПрайсЛисты.ПрайсЛист
	|				ИЗ
	|					НедоступныеПрайсЛисты КАК НедоступныеПрайсЛисты)
	|	И ПрайсЛистыКонтрагентов.АртикулДляПоиска = &АртикулДляПоиска
	|	И (ПрайсЛистыКонтрагентов.Производитель = &Производитель
	|			ИЛИ ПрайсЛистыКонтрагентов.Производитель.Родитель = &ПроизводительГруппа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.АртикулДляПоиска,
	|	Номенклатура.Производитель
	|ПОМЕСТИТЬ ПодходящаяНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	(Номенклатура.АртикулДляПоиска, Номенклатура.Производитель) В
	|			(ВЫБРАТЬ
	|				АналогиБезНоменклатуры.АртикулДляПоиска,
	|				АналогиБезНоменклатуры.Производитель
	|			ИЗ
	|				АналогиБезНоменклатуры КАК АналогиБезНоменклатуры
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ПрайсЛистыБезНоменклатуры.АртикулДляПоиска,
	|				ПрайсЛистыБезНоменклатуры.Производитель
	|			ИЗ
	|				ПрайсЛистыБезНоменклатуры КАК ПрайсЛистыБезНоменклатуры)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура.АртикулДляПоиска,
	|	Номенклатура.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналогиБезНоменклатуры.Артикул,
	|	АналогиБезНоменклатуры.АртикулДляПоиска,
	|	АналогиБезНоменклатуры.Производитель,
	|	АналогиБезНоменклатуры.ГруппаИсточник,
	|	ЕСТЬNULL(ПодходящаяНоменклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура
	|ПОМЕСТИТЬ Аналоги
	|ИЗ
	|	АналогиБезНоменклатуры КАК АналогиБезНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодходящаяНоменклатура КАК ПодходящаяНоменклатура
	|		ПО АналогиБезНоменклатуры.АртикулДляПоиска = ПодходящаяНоменклатура.АртикулДляПоиска
	|			И АналогиБезНоменклатуры.Производитель = ПодходящаяНоменклатура.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрайсЛистыБезНоменклатуры.Артикул,
	|	ПрайсЛистыБезНоменклатуры.АртикулДляПоиска,
	|	ПрайсЛистыБезНоменклатуры.Производитель,
	|	ПрайсЛистыБезНоменклатуры.ГруппаИсточник,
	|	ЕСТЬNULL(ПодходящаяНоменклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура
	|ПОМЕСТИТЬ ПрайсЛисты
	|ИЗ
	|	ПрайсЛистыБезНоменклатуры КАК ПрайсЛистыБезНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодходящаяНоменклатура КАК ПодходящаяНоменклатура
	|		ПО ПрайсЛистыБезНоменклатуры.АртикулДляПоиска = ПодходящаяНоменклатура.АртикулДляПоиска
	|			И ПрайсЛистыБезНоменклатуры.Производитель = ПодходящаяНоменклатура.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ГруппыАналогов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АналогиБезНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПрайсЛистыБезНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПодходящаяНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураРез.Артикул,
	|	НоменклатураРез.АртикулДляПоиска,
	|	НоменклатураРез.Производитель,
	|	НоменклатураРез.Номенклатура,
	|	НоменклатураРез.ГруппаИсточник
	|ПОМЕСТИТЬ АртикулыДляПоискаНеСвернутые
	|ИЗ
	|	Номенклатура КАК НоменклатураРез
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Замены.Артикул,
	|	Замены.АртикулДляПоиска,
	|	Замены.Производитель,
	|	Замены.Номенклатура,
	|	Замены.ГруппаИсточник
	|ИЗ
	|	Замены КАК Замены
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Аналоги.Артикул,
	|	Аналоги.АртикулДляПоиска,
	|	Аналоги.Производитель,
	|	Аналоги.Номенклатура,
	|	Аналоги.ГруппаИсточник
	|ИЗ
	|	Аналоги КАК Аналоги
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛисты.Артикул,
	|	ПрайсЛисты.АртикулДляПоиска,
	|	ПрайсЛисты.Производитель,
	|	ПрайсЛисты.Номенклатура,
	|	МИНИМУМ(ПрайсЛисты.ГруппаИсточник)
	|ИЗ
	|	ПрайсЛисты КАК ПрайсЛисты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрайсЛисты.Артикул,
	|	ПрайсЛисты.АртикулДляПоиска,
	|	ПрайсЛисты.Производитель,
	|	ПрайсЛисты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Замены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Аналоги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПрайсЛисты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АртикулыДляПоискаНеСвернутые.Артикул,
	|	АртикулыДляПоискаНеСвернутые.АртикулДляПоиска КАК АртикулДляПоиска,
	|	АртикулыДляПоискаНеСвернутые.Производитель КАК Производитель,
	|	АртикулыДляПоискаНеСвернутые.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(АртикулыДляПоискаНеСвернутые.ГруппаИсточник) КАК ГруппаИсточник
	|ПОМЕСТИТЬ АртикулыДляПоиска
	|ИЗ
	|	АртикулыДляПоискаНеСвернутые КАК АртикулыДляПоискаНеСвернутые
	|
	|СГРУППИРОВАТЬ ПО
	|	АртикулыДляПоискаНеСвернутые.Номенклатура,
	|	АртикулыДляПоискаНеСвернутые.Производитель,
	|	АртикулыДляПоискаНеСвернутые.АртикулДляПоиска,
	|	АртикулыДляПоискаНеСвернутые.Артикул
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АртикулДляПоиска,
	|	Производитель,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АртикулыДляПоискаНеСвернутые";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция СформироватьТаблицуПоискаПоОписанию(
	Артикул, АртикулДляПоиска, Производитель, Параметры, Номенклатура = Неопределено)
	
	ТипСтрока = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50));
	ТипЧисло  = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1));
	
	АртикулыДляПоиска = Новый ТаблицаЗначений;
	АртикулыДляПоиска.Колонки.Добавить("Артикул"         , ТипСтрока);
	АртикулыДляПоиска.Колонки.Добавить("АртикулДляПоиска", ТипСтрока);
	АртикулыДляПоиска.Колонки.Добавить("Производитель"   , Новый ОписаниеТипов("СправочникСсылка.Производители"));
	АртикулыДляПоиска.Колонки.Добавить("Номенклатура"    , Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	АртикулыДляПоиска.Колонки.Добавить("ГруппаИсточник"  , ТипЧисло);
	
	МенеджерДоступностиПоПодразделениям = РегистрыСведений.
		ПрайсЛистыКонтрагентовДоступностьПодразделенийКомпании.ДоступностьПрайсЛистовПоПодразделениямКомпании();
	
	Если ПолучитьЗначениеПараметраСтруктуры(Параметры, "ВыводитьАналоги", Истина) Тогда
		
		ПроизводительРодитель = Производитель.Родитель;
		Если ПроизводительРодитель.Пустая() Тогда
			ПроизводительРодитель = Неопределено;
		КонецЕсли;
		
		Параметры.Вставить("ПроизводительРодитель", ПроизводительРодитель);
		
		Если Номенклатура = Неопределено Тогда
			НоваяСтрока = АртикулыДляПоиска.Добавить();
			
			НоваяСтрока.Артикул          = Артикул;
			НоваяСтрока.АртикулДляПоиска = АртикулДляПоиска;
			НоваяСтрока.Производитель    = Производитель;
			НоваяСтрока.ГруппаИсточник   = 0;
			НоваяСтрока.Номенклатура     = Неопределено;
		КонецЕсли;
		
		// Замены
		ДанныеЗамен       = Справочники.Номенклатура.ПолучитьТаблицуЗамен(Номенклатура, АртикулДляПоиска, Производитель);
		ДанныеНовыхЗамен  = Справочники.Номенклатура.ПолучитьЗаменыНоменклатуры(Истина, ДанныеЗамен);
		ДанныеСтарыхЗамен = Справочники.Номенклатура.ПолучитьЗаменыНоменклатуры(Ложь  , ДанныеЗамен);
		
		Для Каждого Строка Из ДанныеНовыхЗамен Цикл
			НоваяСтрока = АртикулыДляПоиска.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.ГруппаИсточник   = 1;
			НоваяСтрока.АртикулДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(НоваяСтрока.Артикул);
		КонецЦикла;
		
		Для Каждого Строка Из ДанныеСтарыхЗамен Цикл
			НоваяСтрока = АртикулыДляПоиска.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.ГруппаИсточник   = 1;
			НоваяСтрока.АртикулДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(НоваяСтрока.Артикул);
		КонецЦикла;
		
		// Остальные аналоги
		АналогиНоменклатуры(
			АртикулДляПоиска,
			Производитель,
			ПроизводительРодитель,
			АртикулыДляПоиска,
			МенеджерДоступностиПоПодразделениям,
			Параметры);
		
		ДоступныеИсточникиОбеспечения = ДоступныеИсточникиОбеспечения(
			Неопределено, Параметры, МенеджерДоступностиПоПодразделениям);
	Иначе
		// Текущая номенклатура
		СтрокаТекущиейНоменклатуры = АртикулыДляПоиска.Добавить();
		СтрокаТекущиейНоменклатуры.Артикул          = Артикул;
		СтрокаТекущиейНоменклатуры.АртикулДляПоиска = АртикулДляПоиска;
		СтрокаТекущиейНоменклатуры.Производитель    = Производитель;
		СтрокаТекущиейНоменклатуры.ГруппаИсточник   = 0;
		СтрокаТекущиейНоменклатуры.Номенклатура     = Номенклатура;
		
		ДоступныеИсточникиОбеспечения = ДоступныеИсточникиОбеспечения(
			АртикулыДляПоиска, Параметры, МенеджерДоступностиПоПодразделениям);
	КонецЕсли;
	
	Возврат ДоступныеИсточникиОбеспечения;
	
КонецФункции

Процедура СформироватьПредставлениеСтрокиИсточникаОбеспечения(Строка)
	
	Если НЕ Строка.Номенклатура.Пустая() Тогда // И ПустаяСтрока(Строка.Представление) Тогда
		Строка.Представление = Строка(Строка.Номенклатура);
	ИначеЕсли ПустаяСтрока(Строка.Представление) Тогда
		Строка.Представление = "<Не указано наименование>"
	КонецЕсли;
	
	Строка.Представление = Строка.Представление + СтрШаблон(" , %1, %2", Строка.Артикул, Строка.Производитель);
	
КонецПроцедуры

Функция ДоступныеИсточникиОбеспечения(АртикулыДляПоиска, Параметры, МенеджерДоступностиПоПодразделениям)
	
	ПодразделениеКомпании = ПолучитьЗначениеПараметраСтруктуры(
		Параметры,
		"ПодразделениеКомпании",
		ПараметрыСеанса.ПодразделениеКомпании);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерДоступностиПоПодразделениям;
	
	Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
	
	ТекстЗапроса = "";
	
	// Артикулы в таблице поместим их во временную таблицу
	Если АртикулыДляПоиска <> Неопределено Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	АртикулыДляПоиска.Артикул,
		|	АртикулыДляПоиска.АртикулДляПоиска,
		|	АртикулыДляПоиска.Производитель,
		|	АртикулыДляПоиска.ГруппаИсточник,
		|	АртикулыДляПоиска.Номенклатура
		|ПОМЕСТИТЬ АртикулыДляПоиска
		|ИЗ
		|	&АртикулыДляПоиска КАК АртикулыДляПоиска
		|;
		|ВЫБРАТЬ
		|	ДоступностьПрайсЛистовПоПодразделениямКомпании.ПрайсЛист
		|ПОМЕСТИТЬ НедоступныеПрайсЛисты
		|ИЗ
		|	ДоступностьПрайсЛистовПоПодразделениямКомпании КАК ДоступностьПрайсЛистовПоПодразделениямКомпании
		|ГДЕ
		|	ДоступностьПрайсЛистовПоПодразделениямКомпании.ПодразделениеКомпании = &ПодразделениеКомпании
		|	И ДоступностьПрайсЛистовПоПодразделениямКомпании.Уровень = ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.Запрещено)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ПрайсЛистыКонтрагентовНедоступныеЗаписи.ПрайсЛист
		|ИЗ
		|	РегистрСведений.ПрайсЛистыКонтрагентовНедоступныеЗаписи КАК ПрайсЛистыКонтрагентовНедоступныеЗаписи
		|;";
		
		Запрос.УстановитьПараметр("АртикулыДляПоиска", АртикулыДляПоиска);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	АртикулыДляПоиска.Артикул,
	|	АртикулыДляПоиска.АртикулДляПоиска,
	|	АртикулыДляПоиска.Производитель,
	|	АртикулыДляПоиска.Номенклатура,
	|	АртикулыДляПоиска.ГруппаИсточник,
	|	ПартииТоваровКомпанииОстатки.СкладКомпании КАК Источник,
	|	ЕСТЬNULL(ПартииТоваровКомпанииОстатки.КоличествоОстаток, 0) КАК Остаток,
	|	0 КАК Цена,
	|	""0 дн.(наличие)"" КАК СрокПоставки,
	|	"""" КАК КлючСтрокиПоставщика
	|ПОМЕСТИТЬ ИсточникиНаСкладах
	|ИЗ
	|	АртикулыДляПоиска КАК АртикулыДляПоиска
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваровКомпании.Остатки(
	|				,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						АртикулыДляПоиска.Номенклатура
	|					ИЗ
	|						АртикулыДляПоиска КАК АртикулыДляПоиска)) КАК ПартииТоваровКомпанииОстатки
	|		ПО АртикулыДляПоиска.Номенклатура = ПартииТоваровКомпанииОстатки.Номенклатура
	|ГДЕ
	|	ЕСТЬNULL(ПартииТоваровКомпанииОстатки.КоличествоОстаток, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ЗаказыПоставщикамОстатки.ЗаказаноОстаток - ЕСТЬNULL(ЗаказыРаспределениеОстатки.КоличествоОстаток, 0)) КАК Остаток,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СрокПоставки
	|ПОМЕСТИТЬ ОтстаткиЗаказовПоставщикам
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|		,
	|		Номенклатура В
	|			(ВЫБРАТЬ
	|				АртикулыДляПоиска.Номенклатура
	|			ИЗ
	|				АртикулыДляПоиска КАК АртикулыДляПоиска)) КАК ЗаказыПоставщикамОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыРаспределение.Остатки(
	|		,
	|		Номенклатура В
	|			(ВЫБРАТЬ
	|				АртикулыДляПоиска.Номенклатура
	|			ИЗ
	|				АртикулыДляПоиска КАК АртикулыДляПоиска)) КАК ЗаказыРаспределениеОстатки
	|		ПО ЗаказыПоставщикамОстатки.ЗаказПоставщику = ЗаказыРаспределениеОстатки.ЗаказПоставщика
	|			И ЗаказыПоставщикамОстатки.Номенклатура = ЗаказыРаспределениеОстатки.Номенклатура
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.ЗаказаноОстаток - ЕСТЬNULL(ЗаказыРаспределениеОстатки.КоличествоОстаток, 0) > 0
	|	И ЗаказыПоставщикамОстатки.ЗаказПоставщику.ПодразделениеКомпании = &ПодразделениеКомпании
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.Номенклатура,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СрокПоставки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АртикулыДляПоиска.Артикул,
	|	АртикулыДляПоиска.АртикулДляПоиска,
	|	АртикулыДляПоиска.Производитель,
	|	АртикулыДляПоиска.Номенклатура,
	|	АртикулыДляПоиска.ГруппаИсточник,
	|	ОтстаткиЗаказовПоставщикам.Остаток,
	|	ОтстаткиЗаказовПоставщикам.ЗаказПоставщику КАК Источник,
	|	ОтстаткиЗаказовПоставщикам.ЗаказПоставщикуСрокПоставки КАК СрокПоставки,
	|	0 КАК Цена,
	|	"""" КАК КлючСтрокиПоставщика
	|ПОМЕСТИТЬ ИсточникиВЗаказахПоставщикам
	|ИЗ
	|	АртикулыДляПоиска КАК АртикулыДляПоиска
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтстаткиЗаказовПоставщикам КАК ОтстаткиЗаказовПоставщикам
	|		ПО АртикулыДляПоиска.Номенклатура = ОтстаткиЗаказовПоставщикам.Номенклатура
	|ГДЕ
	|	НЕ ОтстаткиЗаказовПоставщикам.Остаток ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтстаткиЗаказовПоставщикам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ПрайсЛистыКонтрагентовПравилаЗагрузки.Значение КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ПрайсЛистыКонтрагентовПравилаЗагрузки.ОбъектПравила КАК СТРОКА(100)) КАК КлючСтроки
	|ПОМЕСТИТЬ ПравилаЗагрузки
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентовПравилаЗагрузки КАК ПрайсЛистыКонтрагентовПравилаЗагрузки
	|ГДЕ
	|	ПрайсЛистыКонтрагентовПравилаЗагрузки.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилЗагрузки.КлючСтроки)
	|	И ПрайсЛистыКонтрагентовПравилаЗагрузки.ВидПравила = ЗНАЧЕНИЕ(Перечисление.ВидыПравилЗагрузки.ПрисвоитьЗначение)
	|	И ПрайсЛистыКонтрагентовПравилаЗагрузки.ИмяРеквизитаПрайсЛиста = ""Номенклатура""
	|	И ВЫРАЗИТЬ(ПрайсЛистыКонтрагентовПравилаЗагрузки.Значение КАК Справочник.Номенклатура) В
	|			(ВЫБРАТЬ
	|				АртикулыДляПоиска.Номенклатура
	|			ИЗ
	|				АртикулыДляПоиска КАК АртикулыДляПоиска)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентов.АртикулДляПоиска КАК АртикулДляПоиска,
	|	ПрайсЛистыКонтрагентов.Производитель КАК Производитель,
	|	ПрайсЛистыКонтрагентов.ПрайсЛист,
	|	ПрайсЛистыКонтрагентов.Количество КАК Количество,
	|	ПрайсЛистыКонтрагентов.Цена КАК Цена,
	|	ПрайсЛистыКонтрагентов.СрокПоставки,
	|	ПрайсЛистыКонтрагентов.КлючСтрокиПоставщика,
	|	ПрайсЛистыКонтрагентов.Наименование,
	|	ПрайсЛистыКонтрагентов.ТегПозиции,
	|	ПрайсЛистыКонтрагентов.СрокПоставкиМинимальный КАК СрокПоставкиМинимальный,
	|	NULL КАК Номенклатура
	|ПОМЕСТИТЬ ПрайсЛистыКонтрагентовПодходящие
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
	|ГДЕ
	|	НЕ ПрайсЛистыКонтрагентов.ПрайсЛист В
	|		(ВЫБРАТЬ
	|			НедоступныеПрайсЛисты.ПрайсЛист
	|		ИЗ
	|			НедоступныеПрайсЛисты КАК НедоступныеПрайсЛисты)
	|	И ПрайсЛистыКонтрагентов.АртикулДляПоиска В
	|		(ВЫБРАТЬ
	|			АртикулыДляПоиска.АртикулДляПоиска
	|		ИЗ
	|			АртикулыДляПоиска КАК АртикулыДляПоиска)
	|	И ПрайсЛистыКонтрагентов.Производитель В
	|		(ВЫБРАТЬ
	|			АртикулыДляПоиска.Производитель
	|		ИЗ
	|			АртикулыДляПоиска КАК АртикулыДляПоиска)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентов.АртикулДляПоиска,
	|	ПрайсЛистыКонтрагентов.Производитель,
	|	ПрайсЛистыКонтрагентов.ПрайсЛист,
	|	ПрайсЛистыКонтрагентов.Количество,
	|	ПрайсЛистыКонтрагентов.Цена,
	|	ПрайсЛистыКонтрагентов.СрокПоставки,
	|	ПрайсЛистыКонтрагентов.КлючСтрокиПоставщика,
	|	ПрайсЛистыКонтрагентов.Наименование,
	|	ПрайсЛистыКонтрагентов.ТегПозиции,
	|	ПрайсЛистыКонтрагентов.СрокПоставкиМинимальный,
	|	ПравилаЗагрузки.Номенклатура
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПравилаЗагрузки КАК ПравилаЗагрузки
	|		ПО ПрайсЛистыКонтрагентов.КлючСтрокиПоставщика = ПравилаЗагрузки.КлючСтроки
	|ГДЕ
	|	НЕ ПрайсЛистыКонтрагентов.ПрайсЛист В
	|				(ВЫБРАТЬ
	|					НедоступныеПрайсЛисты.ПрайсЛист
	|				ИЗ
	|					НедоступныеПрайсЛисты КАК НедоступныеПрайсЛисты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АртикулыДляПоиска.Артикул,
	|	АртикулыДляПоиска.АртикулДляПоиска,
	|	АртикулыДляПоиска.Производитель,
	|	АртикулыДляПоиска.Номенклатура,
	|	АртикулыДляПоиска.ГруппаИсточник,
	|	ПрайсЛистыКонтрагентовПодходящие.ПрайсЛист,
	|	ПрайсЛистыКонтрагентовПодходящие.Количество КАК Количество,
	|	ПрайсЛистыКонтрагентовПодходящие.Цена КАК Цена,
	|	ПрайсЛистыКонтрагентовПодходящие.СрокПоставки,
	|	ПрайсЛистыКонтрагентовПодходящие.КлючСтрокиПоставщика,
	|	ПрайсЛистыКонтрагентовПодходящие.Наименование,
	|	ПрайсЛистыКонтрагентовПодходящие.ТегПозиции,
	|	ПрайсЛистыКонтрагентовПодходящие.СрокПоставкиМинимальный
	|ПОМЕСТИТЬ ПрайсЛистыКонтрагентов
	|ИЗ
	|	АртикулыДляПоиска КАК АртикулыДляПоиска
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПрайсЛистыКонтрагентовПодходящие КАК ПрайсЛистыКонтрагентовПодходящие
	|		ПО (АртикулыДляПоиска.АртикулДляПоиска = ПрайсЛистыКонтрагентовПодходящие.АртикулДляПоиска
	|					И АртикулыДляПоиска.Производитель = ПрайсЛистыКонтрагентовПодходящие.Производитель
	|				ИЛИ АртикулыДляПоиска.Номенклатура = ПрайсЛистыКонтрагентовПодходящие.Номенклатура)
	|ГДЕ
	|	НЕ ПрайсЛистыКонтрагентовПодходящие.ПрайсЛист ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПрайсЛистыКонтрагентовПодходящие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсточникиНаСкладах.Артикул,
	|	ИсточникиНаСкладах.АртикулДляПоиска,
	|	ИсточникиНаСкладах.Производитель,
	|	ИсточникиНаСкладах.Номенклатура,
	|	ИсточникиНаСкладах.ГруппаИсточник,
	|	ИсточникиНаСкладах.Источник,
	|	ИсточникиНаСкладах.Остаток,
	|	ИсточникиНаСкладах.Цена,
	|	ИсточникиНаСкладах.СрокПоставки,
	|	ИсточникиНаСкладах.КлючСтрокиПоставщика,
	|	"""" КАК Представление,
	|	NULL КАК ТегПозиции,
	|	0 КАК МинимальныйСрокПоставки
	|ИЗ
	|	ИсточникиНаСкладах КАК ИсточникиНаСкладах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсточникиВЗаказахПоставщикам.Артикул,
	|	ИсточникиВЗаказахПоставщикам.АртикулДляПоиска,
	|	ИсточникиВЗаказахПоставщикам.Производитель,
	|	ИсточникиВЗаказахПоставщикам.Номенклатура,
	|	ИсточникиВЗаказахПоставщикам.ГруппаИсточник,
	|	ИсточникиВЗаказахПоставщикам.Источник,
	|	ИсточникиВЗаказахПоставщикам.Остаток,
	|	ИсточникиВЗаказахПоставщикам.Цена,
	|	ИсточникиВЗаказахПоставщикам.СрокПоставки,
	|	ИсточникиВЗаказахПоставщикам.КлючСтрокиПоставщика,
	|	"""",
	|	NULL,
	|	РАЗНОСТЬДАТ(ИсточникиВЗаказахПоставщикам.СрокПоставки, &ТекущаяДата, СЕКУНДА)
	|ИЗ
	|	ИсточникиВЗаказахПоставщикам КАК ИсточникиВЗаказахПоставщикам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентов.Артикул,
	|	ПрайсЛистыКонтрагентов.АртикулДляПоиска,
	|	ПрайсЛистыКонтрагентов.Производитель,
	|	ПрайсЛистыКонтрагентов.Номенклатура,
	|	ПрайсЛистыКонтрагентов.ГруппаИсточник,
	|	ПрайсЛистыКонтрагентов.ПрайсЛист,
	|	ПрайсЛистыКонтрагентов.Количество,
	|	ПрайсЛистыКонтрагентов.Цена,
	|	ПрайсЛистыКонтрагентов.СрокПоставки,
	|	ПрайсЛистыКонтрагентов.КлючСтрокиПоставщика,
	|	ПрайсЛистыКонтрагентов.Наименование,
	|	ПрайсЛистыКонтрагентов.ТегПозиции,
	|	ВЫБОР
	|		КОГДА ПрайсЛистыКонтрагентов.СрокПоставкиМинимальный = НЕОПРЕДЕЛЕНО
	|			ТОГДА ПрайсЛистыКонтрагентов.ПрайсЛист.СрокПоставкиМинимальный
	|		ИНАЧЕ ПрайсЛистыКонтрагентов.СрокПоставкиМинимальный
	|	КОНЕЦ
	|ИЗ
	|	ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсточникиНаСкладах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПравилаЗагрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПрайсЛистыКонтрагентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсточникиВЗаказахПоставщикам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АртикулыДляПоиска.Артикул,
	|	АртикулыДляПоиска.АртикулДляПоиска,
	|	АртикулыДляПоиска.Производитель,
	|	АртикулыДляПоиска.ГруппаИсточник,
	|	АртикулыДляПоиска.Номенклатура
	|ИЗ
	|	АртикулыДляПоиска КАК АртикулыДляПоиска";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ИсточникиОбеспечения = РезультатыЗапроса[РезультатыЗапроса.ВГраница() - 5].Выгрузить();
	Если АртикулыДляПоиска = Неопределено Тогда
		АртикулыДляПоиска = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выгрузить();
	КонецЕсли;
	
	// дополним Источники из внешних прайс-листов
	ДополнитьВнешнимиИсточникамиОбеспечения(АртикулыДляПоиска, Параметры, ИсточникиОбеспечения, МенеджерДоступностиПоПодразделениям);
	
	// получим цены
	ЗаполнитьЦеныИсточниковОбеспечения(ИсточникиОбеспечения, Параметры);
	
	// получим поставщиков
	ЗаполнитьПоставщиковПрайсЛистовИсточниковОбеспечения(ИсточникиОбеспечения, Параметры, МенеджерДоступностиПоПодразделениям);
	
	МенеджерДоступностиПоПодразделениям.Закрыть();
	
	ЗаполнитьРеквизитыУсловногоОформления(ИсточникиОбеспечения);
	
	Возврат ИсточникиОбеспечения;
	
КонецФункции

Процедура ДополнитьВнешнимиИсточникамиОбеспечения(АртикулыДляПоиска, Параметры, ИсточникиОбеспечения, МенеджерДоступностиПоПодразделениям)
	
	ПроизводительРодитель = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ПроизводительРодитель", Неопределено);
	
	// Получим прайс-листы для поиска
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерДоступностиПоПодразделениям;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентов.Ссылка КАК ПрайсЛист,
	|	ПрайсЛистыКонтрагентов.СтрокаПодключения,
	|	ПрайсЛистыКонтрагентов.ИмяТаблицы,
	|	ПрайсЛистыКонтрагентов.Производитель,
	|	ПрайсЛистыКонтрагентов.СрокПоставкиМинимальный,
	|	ПрайсЛистыКонтрагентов.СрокПоставкиМаксимальный,
	|	ПрайсЛистыКонтрагентов.Валюта
	|ИЗ
	|	Справочник.ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
	|ГДЕ
	|	НЕ ПрайсЛистыКонтрагентов.ФайлИсточникДанных
	|	И НЕ ПрайсЛистыКонтрагентов.ХранитьДанныеЛокально
	|	И НЕ ПрайсЛистыКонтрагентов.Ссылка В (ВЫБРАТЬ НедоступныеПрайсЛисты.ПрайсЛист ИЗ НедоступныеПрайсЛисты КАК НедоступныеПрайсЛисты)
	|	И (ПрайсЛистыКонтрагентов.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
	|		ИЛИ ПрайсЛистыКонтрагентов.Производитель В (&Производители)
	|		ИЛИ ПрайсЛистыКонтрагентов.Производитель.Родитель = &ПроизводительРодитель)";
	
	Запрос.УстановитьПараметр("Производители"        , АртикулыДляПоиска.ВыгрузитьКолонку("Производитель"));
	Запрос.УстановитьПараметр("ПроизводительРодитель", ПроизводительРодитель);;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// параметры
		ПараметрыЗагрузки = Новый Структура("ПрайсЛист,КоличествоСтрок", Выборка.ПрайсЛист, 0);
		ЖурналЗагрузки    = РегистрыСведений.ПрайсЛистыКонтрагентовЖурналЗагрузки.СформироватьСтруктуруЖурналаЗагрузки();
		РезультатЧтения   = Новый Соответствие;
		
		РеквизитыПрайсЛиста = Новый Структура("Производитель,Валюта");
		ЗаполнитьЗначенияСвойств(РеквизитыПрайсЛиста, Выборка);
		ПараметрыЗагрузки.Вставить("РеквизитыПрайсЛиста", РеквизитыПрайсЛиста);
		
		// подготовим производителей
		СопоставленныеПроизводители = РегистрыСведений.
			ПрайсЛистыКонтрагентовПравилаЗагрузки.ПолучитьТаблицуСопоставленныхПроизводителей(Выборка.ПрайсЛист);
		
		ПараметрыЗагрузки.Вставить("СопоставленныеПроизводители", СопоставленныеПроизводители);
		
		// Условие
		СтруктураФайлаПрайсЛиста = Выборка.ПрайсЛист.СтруктураФайлаПрайсЛиста;
		ИмяТаблицы               = Выборка.ИмяТаблицы;
		
		ИмяПоляАртикул = Неопределено;
		ИмяПоляКлюч    = Неопределено;
		
		// Поищем сначала КлючСтрокиПоставщика (так как там предполагается быть артикул для поиска??), затем Артикул.
		СтрокаПоляКлюч = СтруктураФайлаПрайсЛиста.Найти("КлючСтрокиПоставщика", "ИмяРеквизитаПрайсЛиста");
		Если СтрокаПоляКлюч <> Неопределено Тогда
			ИмяПоляКлюч = СтрокаПоляКлюч.ИмяПоляФайла;
		КонецЕсли;
		
		СтрокаПоляАртикул = СтруктураФайлаПрайсЛиста.Найти("Артикул", "ИмяРеквизитаПрайсЛиста");
		Если СтрокаПоляАртикул <> Неопределено Тогда
			ИмяПоляАртикул = СтрокаПоляАртикул.ИмяПоляФайла;
		КонецЕсли;
		
		Если НЕ(ЗначениеЗаполнено(ИмяПоляКлюч) ИЛИ ЗначениеЗаполнено(ИмяПоляАртикул)) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИмяПоляАртикул = ИмяПоляКлюч Тогда
			ИмяПоляАртикул = Неопределено;
		КонецЕсли;
		
		ШаблонУсловие = " WHERE(%1)";
		ТекстУсловия = "";
		
		АртикулыДляПоискаКопия = АртикулыДляПоиска.Скопировать();
		АртикулыДляПоискаКопия.Свернуть("Артикул,АртикулДляПоиска");
		Для Каждого Строка Из АртикулыДляПоискаКопия Цикл
			Если ЗначениеЗаполнено(ИмяПоляКлюч) Тогда
				ТекстУсловия = ТекстУсловия + СтрШаблон(" OR (%1.[%2]) = '#ОтборАртикулДляПоиска#'", ИмяТаблицы, ИмяПоляКлюч);
				
				Если Строка.Артикул <> Строка.АртикулДляПоиска Тогда
					ТекстУсловия = ТекстУсловия + СтрШаблон(" OR (%1.[%2]) = '#ОтборАртикул#'", ИмяТаблицы, ИмяПоляКлюч);
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ИмяПоляАртикул) Тогда
				ТекстУсловия = ТекстУсловия + СтрШаблон(" OR (%1.[%2]) = '#ОтборАртикулДляПоиска#'", ИмяТаблицы, ИмяПоляАртикул);
				
				Если Строка.Артикул <> Строка.АртикулДляПоиска Тогда
					ТекстУсловия = ТекстУсловия + СтрШаблон(" OR (%1.[%2]) = '#ОтборАртикул#'", ИмяТаблицы, ИмяПоляАртикул);
				КонецЕсли;
			КонецЕсли;
			
			ТекстУсловия = СтрЗаменить(ТекстУсловия, "#ОтборАртикул#"         , Строка.Артикул);
			ТекстУсловия = СтрЗаменить(ТекстУсловия, "#ОтборАртикулДляПоиска#", Строка.АртикулДляПоиска);
		КонецЦикла;
		
		Если ПустаяСтрока(ТекстУсловия) Тогда
			Продолжить;
		КонецЕсли;
		
		// Уберем лишнее OR.
		ТекстУсловия = Прав(ТекстУсловия, СтрДлина(ТекстУсловия) - 3);
		
		ПараметрыЗагрузки.Вставить("Условие"                      , СтрШаблон(ШаблонУсловие, ТекстУсловия));
		ПараметрыЗагрузки.Вставить("ВыводитьСообщенияПользователю", Ложь);
		
		ЧтениеУспешно = ПрайсЛистыКонтрагентовСлужебный.ПрочитатьДанныеADO(
			Выборка.СтрокаПодключения,
			Ложь,
			ПараметрыЗагрузки,
			ЖурналЗагрузки,
			РезультатЧтения);
		
		Если НЕ ЧтениеУспешно Тогда
			Возврат;
		КонецЕсли;
		
		// почистим сообщения
		Сообщения = ПолучитьСообщенияПользователю();
		
		ТаблицаПрайсЛиста = РегистрыСведений.ПрайсЛистыКонтрагентовВременный.СоздатьНаборЗаписей().Выгрузить();
		ПараметрыЗагрузки.Вставить("ТаблицаПрайсЛиста", ТаблицаПрайсЛиста);
		ПараметрыЗагрузки.Вставить("ЖурналЗагрузки", ЖурналЗагрузки);
		
		Для Каждого ЭлементСоответствия Из РезультатЧтения Цикл
			Условие = Новый Структура("ИмяЛиста", ЭлементСоответствия.Ключ);
			СтрокиТекущегоЛиста = Выборка.ПрайсЛист.СтруктураСтраницПрайсЛиста.НайтиСтроки(Условие);
			Если СтрокиТекущегоЛиста.Количество() > 0 Тогда
				ПараметрыЗагрузки.Вставить("СтрокаЗагружаемойСтраницы", СтрокиТекущегоЛиста[0]);
			Иначе
				Условие = Новый Структура("Использовать", Истина);
				ИспользуемыеСтраницы = Выборка.ПрайсЛист.СтруктураСтраницПрайсЛиста.НайтиСтроки(Условие);
				Если ИспользуемыеСтраницы.Количество() > 0 Тогда
					ПараметрыЗагрузки.Вставить("СтрокаЗагружаемойСтраницы", ИспользуемыеСтраницы[0]);
				Иначе
					ПараметрыЗагрузки.Вставить("СтрокаЗагружаемойСтраницы", Выборка.ПрайсЛист.СтруктураСтраницПрайсЛиста[0]);
				КонецЕсли;
			КонецЕсли;
			
			// На первом заходе надо проверить строку заголовков и удалить лишние строки
			Результат = ПрайсЛистыКонтрагентовСлужебный.РазобратьМассивДанных(ЭлементСоответствия.Значение, ПараметрыЗагрузки, Ложь);
			Если Результат Тогда
				ТаблицаПрайсЛиста = ПараметрыЗагрузки.ТаблицаПрайсЛиста;
				Для Каждого СтрокаПрайсЛиста Из ТаблицаПрайсЛиста Цикл
					// получим производителя
					Если СтрокаПрайсЛиста.Производитель.Пустая() Тогда
						СтрокаПрайсЛиста.Производитель = Выборка.Производитель;
					КонецЕсли;
					
					Условие = Новый Структура("АртикулДляПоиска,Производитель");
					Условие.АртикулДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(СтрокаПрайсЛиста.Артикул);
					Условие.Производитель    = СтрокаПрайсЛиста.Производитель;
					
					СтрокиВАртикулахДляПоиска = АртикулыДляПоиска.НайтиСтроки(Условие);
					
					Если СтрокиВАртикулахДляПоиска.Количество() = 0
						И (АртикулыДляПоиска.Найти(Условие.АртикулДляПоиска, "АртикулДляПоиска") = Неопределено
						ИЛИ СтрокаПрайсЛиста.Производитель.Родитель <> ПроизводительРодитель) Тогда
						
						Продолжить;
						
					КонецЕсли;
					
					НовыйИсточникОбеспечения = ИсточникиОбеспечения.Добавить();
					//ЗаполнитьЗначенияСвойств(НовыйИсточникОбеспечения, СтрокиВАртикулахДляПоиска[0]);
					НовыйИсточникОбеспечения.Артикул              = СтрокаПрайсЛиста.Артикул;
					НовыйИсточникОбеспечения.АртикулДляПоиска     = Условие.АртикулДляПоиска;
					НовыйИсточникОбеспечения.Производитель        = СтрокаПрайсЛиста.Производитель;
					НовыйИсточникОбеспечения.Источник             = СтрокаПрайсЛиста.ПрайсЛист;
					НовыйИсточникОбеспечения.Остаток              = СтрокаПрайсЛиста.Количество;
					НовыйИсточникОбеспечения.Цена                 = СтрокаПрайсЛиста.Цена;
					НовыйИсточникОбеспечения.СрокПоставки         = СтрокаПрайсЛиста.СрокПоставки;
					НовыйИсточникОбеспечения.КлючСтрокиПоставщика = СтрокаПрайсЛиста.КлючСтрокиПоставщика;
					НовыйИсточникОбеспечения.Представление        = СтрокаПрайсЛиста.Наименование;
					НовыйИсточникОбеспечения.ТегПозиции           = СтрокаПрайсЛиста.ТегПозиции;
					
					Если СтрокиВАртикулахДляПоиска.Количество() > 0 Тогда
						НовыйИсточникОбеспечения.ГруппаИсточник = СтрокиВАртикулахДляПоиска[0].ГруппаИсточник;
						НовыйИсточникОбеспечения.Номенклатура   = СтрокиВАртикулахДляПоиска[0].Номенклатура;
					Иначе
						НовыйИсточникОбеспечения.ГруппаИсточник = 0;;
					КонецЕсли;
					
					
					НовыйИсточникОбеспечения.МинимальныйСрокПоставки = ?(
						ЗначениеЗаполнено(СтрокаПрайсЛиста.СрокПоставкиМинимальный),
						СтрокаПрайсЛиста.СрокПоставкиМинимальный,
						Выборка.СрокПоставкиМинимальный);
					
					Если НЕ ЗначениеЗаполнено(НовыйИсточникОбеспечения.СрокПоставки) Тогда
						НовыйИсточникОбеспечения.СрокПоставки = ПрайсЛистыКонтрагентовКлиентСервер.ПредставлениеСрокаПоставкиИнтервал(
							Выборка.СрокПоставкиМинимальный,
							Выборка.СрокПоставкиМаксимальный);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЦеныИсточниковОбеспечения(ИсточникиОбеспечения, Параметры)
	
	МоментЦены = ТекущаяДатаСеанса();
	
	Для Каждого ИсточникОбеспечения Из ИсточникиОбеспечения Цикл
		Если ТипЗнч(ИсточникОбеспечения.Источник) <> Тип("СправочникСсылка.ПрайсЛистыКонтрагентов") Тогда
			НоваяЦена = ЦенообразованиеСервер.ПолучитьЦену(
				Параметры.ТипЦен,
				ИсточникОбеспечения.Номенклатура,
				МоментЦены,
				Параметры.Контрагент,
				Параметры.Валюта,
				,
				,
				,
				Параметры.ПодразделениеКомпании);
			
			ИсточникОбеспечения.Цена = НоваяЦена;
		Иначе
			
			ДанныеРасчетаЦены = Новый Массив;
			СтруктураДанных = Новый Структура;
			
			СтруктураДанных.Вставить("ПрайсЛист",     ИсточникОбеспечения.Источник);
			СтруктураДанных.Вставить("Номенклатура",  ИсточникОбеспечения.Номенклатура);
			СтруктураДанных.Вставить("Цена",          ИсточникОбеспечения.Цена);
			СтруктураДанных.Вставить("ТегПозиции",    ИсточникОбеспечения.ТегПозиции);
			СтруктураДанных.Вставить("Производитель", ИсточникОбеспечения.Производитель);
			ДанныеРасчетаЦены.Добавить(СтруктураДанных);
			
			СтруктураЦены = ЦенообразованиеСервер.РассчитатьЦеныПрайсЛиста(
				ДанныеРасчетаЦены,
				Параметры.ТипЦен,
				Параметры.ПодразделениеКомпании,
				Неопределено,
				МоментЦены
			);
			
			Если Параметры.Контрагент.Пустая() Тогда
				ИсточникОбеспечения.Цена = СтруктураЦены[0].ЦенаПродажи;
			Иначе
				ИсточникОбеспечения.Цена = СтруктураЦены[0].ЦенаПокупки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоставщиковПрайсЛистовИсточниковОбеспечения(ИсточникиОбеспечения, Параметры, МенеджерДоступностиПоПодразделениям)
	
	ТипыНаправления = Новый Массив;
	ТипыНаправления.Добавить(Тип("СправочникСсылка.ПрайсЛистыКонтрагентов"));
	ТипыНаправления.Добавить(Тип("СправочникСсылка.СкладыКомпании"));
	
	ТипыПоставщика = Новый Массив;
	ТипыПоставщика.Добавить(Тип("СправочникСсылка.СкладыКомпании"));
	ТипыПоставщика.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТипыПоставщика.Добавить(Тип("СправочникСсылка.ПодразделенияКомпании"));
	ТипыПоставщика.Добавить(Тип("СправочникСсылка.ПрайсЛистыКонтрагентов"));
	ТипыПоставщика.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
	
	ИсточникиОбеспечения.Колонки.Добавить("НаправлениеПоставки", Новый ОписаниеТипов(ТипыНаправления));
	ИсточникиОбеспечения.Колонки.Добавить("Поставщик", Новый ОписаниеТипов(ТипыПоставщика));
	
	ПодразделениеПараметр = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ПодразделениеКомпании", ПараметрыСеанса.ПодразделениеКомпании);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерДоступностиПоПодразделениям;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоступностьПрайсЛистовПоПодразделениямКомпании.ПрайсЛист КАК ПрайсЛист,
	|	ДоступностьПрайсЛистовПоПодразделениямКомпании.ПрайсЛист.Владелец КАК Поставщик,
	|	ДоступностьПрайсЛистовПоПодразделениямКомпании.ПрайсЛист.ОтветственноеПодразделение КАК ОтветственноеПодразделение,
	|	ПодразделенияКомпании.Ссылка КАК ПодразделениеКомпании
	|ИЗ
	|	Справочник.ПодразделенияКомпании КАК ПодразделенияКомпании
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступностьПрайсЛистовПоПодразделениямКомпании КАК ДоступностьПрайсЛистовПоПодразделениямКомпании
	|		ПО ПодразделенияКомпании.Ссылка = ДоступностьПрайсЛистовПоПодразделениямКомпании.ПодразделениеКомпании
	|ГДЕ
	|	(ДоступностьПрайсЛистовПоПодразделениямКомпании.ПодразделениеКомпании = &ПодразделениеКомпании
	|			ИЛИ НЕ ДоступностьПрайсЛистовПоПодразделениямКомпании.ПодразделениеКомпании В ИЕРАРХИИ (&ПодразделениеКомпании))
	|	И (ДоступностьПрайсЛистовПоПодразделениямКомпании.Уровень = ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.Редактирование)
	|			ИЛИ ДоступностьПрайсЛистовПоПодразделениямКомпании.Уровень = ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.ПрямыеЗаказы))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодразделениеКомпании ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеПараметр);
	
	ВыборкаПодразделений = Запрос.Выполнить().Выбрать();
	
	УсловиеПоиска = Новый Структура("ПрайсЛист");
	Для Каждого Строка Из ИсточникиОбеспечения Цикл
		Если ТипЗнч(Строка.Источник) = Тип("СправочникСсылка.ПрайсЛистыКонтрагентов") Тогда
			ВыборкаПодразделений.Сбросить();
			
			УсловиеПоиска.ПрайсЛист = Строка.Источник;
			Если ВыборкаПодразделений.НайтиСледующий(УсловиеПоиска) И ВыборкаПодразделений.ПодразделениеКомпании <> ПодразделениеПараметр Тогда
				Строка.НаправлениеПоставки = Строка.Источник;
				Строка.Поставщик           = ВыборкаПодразделений.ПодразделениеКомпании;
			Иначе
				Строка.Поставщик = Строка.Источник;
			КонецЕсли;
		ИначеЕсли ТипЗнч(Строка.Источник) = Тип("СправочникСсылка.СкладыКомпании") Тогда
			Если Строка.Источник.ПодразделениеКомпании <> ПодразделениеПараметр Тогда
				Строка.НаправлениеПоставки = Строка.Источник;
				Строка.Поставщик           = Строка.Источник.ПодразделениеКомпании;
			Иначе
				Строка.Поставщик = Строка.Источник;
			КонецЕсли;
		Иначе
			Строка.Поставщик = Строка.Источник;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыУсловногоОформления(ИсточникиОбеспечения)
	
	ИсточникиОбеспечения.Колонки.Добавить("ЦветТекста");
	
	Для Каждого Строка Из ИсточникиОбеспечения Цикл
		ТипПоставщика = ТипЗнч(Строка.Поставщик);
		
		Если НЕ ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			
			Строка.ЦветТекста = 1;
			
		ИначеЕсли ТипПоставщика = Тип("СправочникСсылка.СкладыКомпании") Тогда
			
			Строка.ЦветТекста = 2;
			
		ИначеЕсли ТипПоставщика = Тип("ДокументСсылка.ЗаказПоставщику")
			ИЛИ ТипПоставщика = Тип("СправочникСсылка.ПодразделенияКомпании")
			ИЛИ ТипПоставщика = Тип("СправочникСсылка.Контрагенты") Тогда
			
			Строка.ЦветТекста = 3;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДеревоИсточников(ДоступныеИсточникиОбеспечения, Параметры, ИсточникиОбеспечения)
	
	ЭлементыИсточника = ИсточникиОбеспечения.ПолучитьЭлементы();
	
	Если ПолучитьЗначениеПараметраСтруктуры(Параметры, "ДобавлятьСлужебныеСтроки", Ложь) Тогда
		
		// добавим служебные строки
		НоваяСтрока = ЭлементыИсточника.Добавить();
		НоваяСтрока.Представление   = "<ВЕРНУТЬСЯ К ВЫБОРУ ПОЗИЦИИ НОМЕНКЛАТУРЫ>";
		НоваяСтрока.СлужебнаяСтрока = Истина;
		НоваяСтрока.ЭтоГруппа       = Истина;
		
		Если ПолучитьЗначениеПараметраСтруктуры(Параметры, "ДоступенПропускВыбораИсточника", Ложь) Тогда
			НоваяСтрока = ЭлементыИсточника.Добавить();
			НоваяСтрока.Представление   = "<НЕ УКАЗЫВАТЬ ИСТОЧНИК ОБЕСПЕЧЕНИЯ>";
			НоваяСтрока.СлужебнаяСтрока = Истина;
			НоваяСтрока.ЭтоГруппа       = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДоступныеИсточникиОбеспечения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МинимальныйСрокПоставки = Неопределено; МинимальнаяЦена = Неопределено;
	
	// добавим основную номенклатуру
	СтрокиНоменклатуры = ДоступныеИсточникиОбеспечения.НайтиСтроки(Новый Структура("ГруппаИсточник", 0));
	Если СтрокиНоменклатуры.Количество() > 0 Тогда
		Если ПолучитьЗначениеПараметраСтруктуры(Параметры, "РежимДерева", Ложь) Тогда
			ГруппаДляНоменклатуры = ЭлементыИсточника.Добавить();
			ГруппаДляНоменклатуры.Представление = "ВЫБРАННЫЙ АРТИКУЛ";
			ГруппаДляНоменклатуры.ЭтоГруппа     = Истина;
		
			ГруппаДляНоменклатурыЭлементы = ГруппаДляНоменклатуры.ПолучитьЭлементы();
		Иначе
			ГруппаДляНоменклатурыЭлементы =  ЭлементыИсточника;
		КонецЕсли;
		
		Для Каждого Строка Из СтрокиНоменклатуры Цикл
			НоваяСтрока = ГруппаДляНоменклатурыЭлементы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			СформироватьПредставлениеСтрокиИсточникаОбеспечения(НоваяСтрока);
			
			Если Строка.МинимальныйСрокПоставки >= 0
				И (МинимальныйСрокПоставки = Неопределено ИЛИ МинимальныйСрокПоставки > Строка.МинимальныйСрокПоставки) Тогда
				
				МинимальныйСрокПоставки = Строка.МинимальныйСрокПоставки;
				
			КонецЕсли;
			
			Если МинимальнаяЦена = Неопределено ИЛИ Строка.Цена < МинимальнаяЦена Тогда
				МинимальнаяЦена = Строка.Цена;
			КонецЕсли;
		КонецЦикла;
		
		Если ПолучитьЗначениеПараметраСтруктуры(Параметры, "РежимДерева", Ложь) Тогда
			Если МинимальныйСрокПоставки <> Неопределено Тогда
				ГруппаДляНоменклатуры.СрокПоставки = ПрайсЛистыКонтрагентовКлиентСервер.
				ПредставлениеСрокаПоставкиИнтервал(МинимальныйСрокПоставки, МинимальныйСрокПоставки);
			КонецЕсли;
			
			Если МинимальнаяЦена <> Неопределено Тогда
				ГруппаДляНоменклатуры.Цена = МинимальнаяЦена;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	МинимальныйСрокПоставки = Неопределено; МинимальнаяЦена = Неопределено;
	
	// добавим замены
	СтрокиЗамены = ДоступныеИсточникиОбеспечения.НайтиСтроки(Новый Структура("ГруппаИсточник", 1));
	Если СтрокиЗамены.Количество() > 0 Тогда
		ГруппаДляЗамен = ЭлементыИсточника.Добавить();
		ГруппаДляЗамен.Представление = "ЗАМЕНЫ";
		ГруппаДляЗамен.ЭтоГруппа     = Истина;
		
		ГруппаДляЗаменЭлементы = ГруппаДляЗамен.ПолучитьЭлементы();
		
		Для Каждого Строка Из СтрокиЗамены Цикл
			НоваяСтрока = ГруппаДляЗаменЭлементы.Добавить();
			ЗаполнитьЗначенияСвойств(новаяСтрока, Строка);
			
			СформироватьПредставлениеСтрокиИсточникаОбеспечения(НоваяСтрока);
			
			Если Строка.МинимальныйСрокПоставки >= 0
				И (МинимальныйСрокПоставки = Неопределено ИЛИ МинимальныйСрокПоставки > Строка.МинимальныйСрокПоставки) Тогда
				
				МинимальныйСрокПоставки = Строка.МинимальныйСрокПоставки;
				
			КонецЕсли;
			
			Если МинимальнаяЦена = Неопределено ИЛИ Строка.Цена < МинимальнаяЦена Тогда
				МинимальнаяЦена = Строка.Цена;
			КонецЕсли;
		КонецЦикла;
		
		Если МинимальныйСрокПоставки <> Неопределено Тогда
			ГруппаДляЗамен.СрокПоставки = ПрайсЛистыКонтрагентовКлиентСервер.
				ПредставлениеСрокаПоставкиИнтервал(МинимальныйСрокПоставки, МинимальныйСрокПоставки);
		КонецЕсли;
		
		Если МинимальнаяЦена <> Неопределено Тогда
			ГруппаДляЗамен.Цена = МинимальнаяЦена;
		КонецЕсли;
	КонецЕсли;
	
	МинимальныйСрокПоставки = Неопределено; МинимальнаяЦена = Неопределено;
	
	// добавим анлоги
	СтрокиАналоги = ДоступныеИсточникиОбеспечения.НайтиСтроки(Новый Структура("ГруппаИсточник", 2));
	Если СтрокиАналоги.Количество() > 0 Тогда
		ГруппаДляАналогов = ЭлементыИсточника.Добавить();
		ГруппаДляАналогов.Представление = "АНАЛОГИ";
		ГруппаДляАналогов.ЭтоГруппа     = Истина;
		
		ГруппаДляАналоговЭлементы = ГруппаДляАналогов.ПолучитьЭлементы();
		
		Для Каждого Строка Из СтрокиАналоги Цикл
			НоваяСтрока = ГруппаДляАналоговЭлементы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			СформироватьПредставлениеСтрокиИсточникаОбеспечения(НоваяСтрока);
			
			Если Строка.МинимальныйСрокПоставки >= 0
				И (МинимальныйСрокПоставки = Неопределено ИЛИ МинимальныйСрокПоставки > Строка.МинимальныйСрокПоставки) Тогда
				
				МинимальныйСрокПоставки = Строка.МинимальныйСрокПоставки;
				
			КонецЕсли;
			
			Если МинимальнаяЦена = Неопределено ИЛИ Строка.Цена < МинимальнаяЦена Тогда
				МинимальнаяЦена = Строка.Цена;
			КонецЕсли;
		КонецЦикла;
		
		Если МинимальныйСрокПоставки <> Неопределено Тогда
			ГруппаДляАналогов.СрокПоставки = ПрайсЛистыКонтрагентовКлиентСервер.
				ПредставлениеСрокаПоставкиИнтервал(МинимальныйСрокПоставки, МинимальныйСрокПоставки);
		КонецЕсли;
		
		Если МинимальнаяЦена <> Неопределено Тогда
			ГруппаДляАналогов.Цена = МинимальнаяЦена;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
