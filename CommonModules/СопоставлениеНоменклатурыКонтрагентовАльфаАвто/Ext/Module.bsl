
#Область ПрограммныйИнтерфейс

#Область ОбновлениеИБ

// см. ОбновлениеИнформационнойБазыАвтосалон.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик 						= Обработчики.Добавить();
	Обработчик.Версия 				= "6.1.01.05";
	Обработчик.НачальноеЗаполнение  = Ложь; 
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.Процедура 			= "СопоставлениеНоменклатурыКонтрагентовАльфаАвто.ПеренестиНоменклатуруПоставщиковВРегистрБЭД";
	Обработчик.РежимВыполнения 		= "Отложенно";
	Обработчик.Идентификатор        = Новый УникальныйИдентификатор("25d5c5dd-1262-2d62-ab48-f8f5daa0664d");
	Обработчик.Комментарий          = НСтр("ru = 'Выполняем перенос сопоставленной номенклатуры поставщиков в регистр ""Номенклатура контрагентов"".'");
	
	Обработчик 						= Обработчики.Добавить();
	Обработчик.Версия 				= "6.1.01.05";
	Обработчик.НачальноеЗаполнение  = Ложь;
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.Процедура 			= "СопоставлениеНоменклатурыКонтрагентовАльфаАвто.ПеренестиНоменклатуруКонтрагентовБЭДВСправочникНоменклатураКонтрагентов";
	Обработчик.РежимВыполнения 		= "Отложенно";
	Обработчик.Идентификатор        = Новый УникальныйИдентификатор("25d5c5dd-1262-2d62-ab48-f8f5daa0667d");
	Обработчик.Комментарий          = НСтр("ru = 'Выполняем перенос сопоставленной номенклатуры поставщиков из регистра ""Номенклатура контрагентов"" в справочник ""Номенклатура контрагентов"".'");
	
КонецПроцедуры

// Процедура для перехода на новый механизм сопоставления номенклатуры БЭД, 
// переносит данные из Справочник.Номенклатура поставщика в РегистрыСведений.НоменклатураКонтрагентовБЭД.
//
// Параметры:
//  Параметры - параметры выполнения переноса
//
Процедура ПеренестиНоменклатуруПоставщиковВРегистрБЭД(Параметры) Экспорт
	
	Пока Истина Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	НоменклатураПоставщиков.Владелец КАК Владелец,
		|	МАКСИМУМ(НоменклатураПоставщиков.Номенклатура) КАК Номенклатура,
		|	МАКСИМУМ(НоменклатураПоставщиков.ХарактеристикаНоменклатуры) КАК Характеристика,
		|	МАКСИМУМ(НоменклатураПоставщиков.Артикул) КАК Артикул,
		|	НоменклатураПоставщиков.Идентификатор КАК Идентификатор,
		|	МАКСИМУМ(НоменклатураКонтрагентовБЭД.Номенклатура) КАК СопоставленнаяНоменклатура,
		|	МАКСИМУМ(НоменклатураПоставщиков.Наименование) КАК Наименование
		|ИЗ
		|	Справочник.УдалитьНоменклатураПоставщиков КАК НоменклатураПоставщиков
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагентовБЭД КАК НоменклатураКонтрагентовБЭД
		|		ПО НоменклатураПоставщиков.Владелец = НоменклатураКонтрагентовБЭД.Владелец
		|			И НоменклатураПоставщиков.Идентификатор = НоменклатураКонтрагентовБЭД.Идентификатор
		|ГДЕ
		|	НоменклатураПоставщиков.Владелец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	И НоменклатураПоставщиков.Идентификатор <> """"
		|	И НоменклатураКонтрагентовБЭД.Номенклатура ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	НоменклатураПоставщиков.Идентификатор,
		|	НоменклатураПоставщиков.Владелец
		|ИТОГИ ПО
		|	Владелец";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Прервать;
		КонецЕсли;
		
		ВыборкаПоВладельцу = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоВладельцу.Следующий() Цикл
			
			Набор = РегистрыСведений.НоменклатураКонтрагентовБЭД.СоздатьНаборЗаписей();
			Набор.Отбор.Владелец.Установить(ВыборкаПоВладельцу.Владелец);
			Набор.Прочитать();
			Выборка = ВыборкаПоВладельцу.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

// Процедура для перехода на новый механизм сопоставления номенклатуры БЭД, 
// переносит данные из РегистрСведений.НоменклатураКонтрагентовБЭД в Справочник.НоменклатураКонтрагентов.
// 
// Параметры:
//  Параметры - параметры выполнения переноса
//
Процедура ПеренестиНоменклатуруКонтрагентовБЭДВСправочникНоменклатураКонтрагентов(Параметры) Экспорт
	
	ПроизошлаОшибка = Ложь;
	
	Пока Истина Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	НоменклатураКонтрагентовБЭД.Владелец КАК Владелец,
		|	НоменклатураКонтрагентовБЭД.Идентификатор КАК Идентификатор
		|ИЗ
		|	РегистрСведений.НоменклатураКонтрагентовБЭД КАК НоменклатураКонтрагентовБЭД
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
		|		ПО НоменклатураКонтрагентовБЭД.Владелец = НоменклатураКонтрагентов.ВладелецНоменклатуры
		|			И НоменклатураКонтрагентовБЭД.Идентификатор = НоменклатураКонтрагентов.Идентификатор
		|ГДЕ
		|	НоменклатураКонтрагентовБЭД.Владелец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	И НоменклатураКонтрагентовБЭД.Идентификатор <> """"
		|	И НоменклатураКонтрагентов.Номенклатура ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	НоменклатураКонтрагентовБЭД.Идентификатор,
		|	НоменклатураКонтрагентовБЭД.Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	Идентификатор
		|ИТОГИ ПО
		|	Владелец";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Прервать;
		КонецЕсли;
		
		ВыборкаПоВладельцу = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ДополнительныеПараметры = СопоставлениеНоменклатурыКонтрагентов.НовыеДополнительныеПараметрыПриЗаписиНоменклатурыКонтрагентов();
		ДополнительныеПараметры.ТребуетсяЗаписьВРегистр = Ложь;
		ДополнительныеПараметры.ТребуетсяПоискСсылки    = Ложь;
		
		Пока ВыборкаПоВладельцу.Следующий() Цикл  
			
			ВыборкаПоИдентификатору = ВыборкаПоВладельцу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПоИдентификатору.Следующий() Цикл
				
				Отказ = Ложь;
				ТекстОшибки = ""; 
				
				НачатьТранзакцию();
				Попытка  
					
					НаборЗаписей = РегистрыСведений.НоменклатураКонтрагентовБЭД.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Владелец.Установить(ВыборкаПоВладельцу.Владелец);
					НаборЗаписей.Отбор.Идентификатор.Установить(ВыборкаПоИдентификатору.Идентификатор);
					НаборЗаписей.Прочитать();
					
					Если НаборЗаписей.Количество() Тогда
						ТекущаяЗапись = НаборЗаписей[0];
						
						НоменклатураКонтрагента = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента();
						ЗаполнитьЗначенияСвойств(НоменклатураКонтрагента, ТекущаяЗапись);
						НоменклатураИБ = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураИнформационнойБазы();
						ЗаполнитьЗначенияСвойств(НоменклатураИБ, ТекущаяЗапись);
						
						СопоставлениеНоменклатурыКонтрагентов.СоздатьОбновитьНоменклатуруКонтрагента(
						НоменклатураКонтрагента, НоменклатураИБ, Отказ, ТекстОшибки, ДополнительныеПараметры);
						
						ТекущаяЗапись.НаименованиеУпаковки = НоменклатураКонтрагента.НаименованиеУпаковки;
						ТекущаяЗапись.ЕдиницаИзмерения     = НоменклатураКонтрагента.ЕдиницаИзмерения;
						
						ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);  
						
						Если Отказ Тогда
							ВызватьИсключение ТекстОшибки;
						КонецЕсли;
					КонецЕсли;				  
					
					ЗафиксироватьТранзакцию();
					
				Исключение
					
					ОтменитьТранзакцию();
					ШаблонСообщения = НСтр("ru = 'Не удалось обработать запись по идентификатору: %1 по причине:'");
					ТекстСообщения = СтрШаблон(ШаблонСообщения, ВыборкаПоИдентификатору.Идентификатор) + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
					Метаданные.РегистрыСведений.НоменклатураКонтрагентовБЭД, ВыборкаПоИдентификатору.Идентификатор, ТекстСообщения);
					
					ПроизошлаОшибка = Истина;
					
				КонецПопытки;
			КонецЦикла; 
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ПроизошлаОшибка Тогда
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Истина;   
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСЕдиницамиИзмерения

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОпределенииСвойствУпаковкиЕдиницыИзмеренияНоменклатуры
Процедура ПриОпределенииСвойствУпаковкиЕдиницыИзмеренияНоменклатуры(Знач Упаковка, Знач Номенклатура, СвойстваУпаковки) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕдиницыИзмерения.ЕдиницаПоКлассификатору.Наименование КАК НаименованиеБазовойЕдиницыИзмерения,
	|	ЕдиницыИзмерения.ЕдиницаПоКлассификатору.Код КАК КодОКЕИБазовойЕдиницыИзмерения,
	|	ЕдиницыИзмерения.Наименование КАК НаименованиеУпаковки,
	|	ЕдиницыИзмерения.Коэффициент КАК КоличествоБазовойЕдиницыИзмерения
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Ссылка = &Упаковка"
	);
	Запрос.УстановитьПараметр("Упаковка", Упаковка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Упаковки = РезультатЗапроса.Выбрать();
	Упаковки.Следующий();
	ЗаполнитьЗначенияСвойств(СвойстваУпаковки, Упаковки);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.НайтиНаименованиеЕдиницыИзмеренияПоКодуОКЕИ
Процедура НайтиНаименованиеЕдиницыИзмеренияПоКодуОКЕИ(КодОКЕИЕдиницыИзмерения, НаименованиеЕдиницыИзмерения) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КлассификаторЕдиницИзмерения.Наименование КАК Наименование
	|ИЗ
	|	Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
	|ГДЕ
	|	КлассификаторЕдиницИзмерения.Код = &Код
	|	И НЕ КлассификаторЕдиницИзмерения.ПометкаУдаления"
	);
	Запрос.УстановитьПараметр("Код", КодОКЕИЕдиницыИзмерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		НаименованиеЕдиницыИзмерения = "";
		Возврат;
		
	КонецЕсли;
	
	КлассификаторыЕдиницИзмерения = РезультатЗапроса.Выбрать();
	КлассификаторыЕдиницИзмерения.Следующий();
	НаименованиеЕдиницыИзмерения = КлассификаторыЕдиницИзмерения.Наименование;
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ВладелецУпаковкиЕдиницыИзмеренияНоменклатура
Процедура ВладелецУпаковкиЕдиницыИзмеренияНоменклатура(Знач Упаковка, ВладелецУпаковкиНоменклатура) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕдиницыИзмерения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Владелец ССЫЛКА Справочник.Номенклатура
	|	И ЕдиницыИзмерения.Ссылка = &Упаковка"
	);
	Запрос.УстановитьПараметр("Упаковка", Упаковка);
	
	ВладелецУпаковкиНоменклатура = Не Запрос.Выполнить().Пустой();
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.БазоваяЕдиницаИзмеренияНоменклатуры
Процедура БазоваяЕдиницаИзмеренияНоменклатуры(Знач Номенклатура, ЕдиницаИзмерения) Экспорт
	
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ОсновнаяЕдиницаИзмерения");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область РаботаСДаннымиИБ

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОпределенииСвойствНоменклатурыИнформационнойБазы
Процедура ПриОпределенииСвойствНоменклатурыИнформационнойБазы(Знач НаборНоменклатуры, СвойстваНоменклатурИБ) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.ТипНоменклатуры.ИспользованиеХарактеристик < 3 КАК ИспользоватьХарактеристики,
	|	ИСТИНА КАК ИспользоватьУпаковки,
	|	ЛОЖЬ КАК ОбязательноеЗаполнениеХарактеристики,
	|	Номенклатура.ОсновнаяЕдиницаИзмерения КАК ЕдиницаИзмеренияПоУмолчанию
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&НаборНоменклатуры)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Автомобили.Ссылка,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|ИЗ
	|	Справочник.Автомобили КАК Автомобили
	|ГДЕ
	|	Автомобили.Ссылка В(&НаборНоменклатуры)"
	);
	Запрос.УстановитьПараметр("НаборНоменклатуры", НаборНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию("шт", Истина);
	СвойстваНоменклатуры = РезультатЗапроса.Выбрать();
	
	Пока СвойстваНоменклатуры.Следующий() Цикл
		
		НовыеСвойстваНоменклатуры = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НовыеСвойстваНоменклатурыИБ();
		ЗаполнитьЗначенияСвойств(НовыеСвойстваНоменклатуры, СвойстваНоменклатуры);
		Если ТипЗнч(СвойстваНоменклатуры.Номенклатура) = Тип("СправочникСсылка.Автомобили") Тогда
			НовыеСвойстваНоменклатуры.ЕдиницаИзмеренияПоУмолчанию = ЕдиницаИзмерения;
		КонецЕсли;
		СвойстваНоменклатурИБ.Вставить(СвойстваНоменклатуры.Номенклатура, НовыеСвойстваНоменклатуры);
		
	КонецЦикла;
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриОпределенииСтруктурыНоменклатурыИнформационнойБазы
Процедура ПриОпределенииСтруктурыНоменклатурыИнформационнойБазы(СтруктураНоменклатуры) Экспорт
	
	Если СтруктураНоменклатуры.Свойство("ИмяПараметраСвязиУпаковки") Тогда
		
		СтруктураНоменклатуры.ИмяПараметраСвязиУпаковки = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПоискСопоставленияНоменклатурыСНоменклатуройИБ

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаПоискаВариантовСопоставленияПоШтрихкодамКомбинаций
Процедура ТекстЗапросаПоискаВариантовСопоставленияПоШтрихкодамКомбинаций(ТекстЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Штрихкоды.Штрихкод КАК ШтрихкодКомбинации,
	|	Штрихкоды.Объект КАК Номенклатура,
	|	Штрихкоды.ХарактеристикаНоменклатуры КАК Характеристика,
	|	Штрихкоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ НайденныеКомбинации
	|ИЗ
	|	ТаблицаШтрихкодовКомбинации КАК ТаблицаШтрихкодовКомбинации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТаблицаШтрихкодовКомбинации.ШтрихкодКомбинации = Штрихкоды.Штрихкод
	|ГДЕ
	|	Штрихкоды.Объект ССЫЛКА Справочник.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ШтрихкодКомбинации,
	|	Номенклатура,
	|	Характеристика,
	|	ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НайденныеКомбинации.ШтрихкодКомбинации КАК ШтрихкодКомбинации
	|ПОМЕСТИТЬ СписокУникальныхШтрихкодовКомбинаций
	|ИЗ
	|	НайденныеКомбинации КАК НайденныеКомбинации
	|
	|СГРУППИРОВАТЬ ПО
	|	НайденныеКомбинации.ШтрихкодКомбинации
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(НайденныеКомбинации.Номенклатура) = 1
	|	И КОЛИЧЕСТВО(НайденныеКомбинации.Характеристика) = 1
	|	И КОЛИЧЕСТВО(НайденныеКомбинации.ЕдиницаИзмерения) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ШтрихкодКомбинации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НайденныеКомбинации.ШтрихкодКомбинации КАК ШтрихкодКомбинации,
	|	НайденныеКомбинации.Номенклатура КАК НоменклатураИБ,
	|	НайденныеКомбинации.Характеристика КАК ХарактеристикаИБ,
	|	НайденныеКомбинации.ЕдиницаИзмерения КАК УпаковкаИБ
	|ИЗ
	|	НайденныеКомбинации КАК НайденныеКомбинации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокУникальныхШтрихкодовКомбинаций КАК СписокУникальныхШтрихкодовКомбинаций
	|		ПО НайденныеКомбинации.ШтрихкодКомбинации = СписокУникальныхШтрихкодовКомбинаций.ШтрихкодКомбинации";
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ИнициализацияТекстаЗапросаПоискаСопоставленияПоНатуральнымКлючам
Процедура ИнициализацияТекстаЗапросаПоискаСопоставленияПоНатуральнымКлючам(ТекстЗапроса) Экспорт
	
	ВариантПоиска = ВариантПоискаНоменклатуры();
	
	Если ВариантПоиска = 1 Тогда
		
		ТекстаЗапросаПоШтрихКоду =
		"ВЫБРАТЬ
		|	ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
		|	ТаблицаНатуральныхКлючей.Штрихкод КАК Штрихкод,
		|	ТаблицаНатуральныхКлючей.ЭтоВнутреннийШтрихкод КАК ЭтоВнутреннийШтрихкод,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	ЛОЖЬ КАК ШтрихкодСопоставлен,
		|	ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура
		|ПОМЕСТИТЬ ТаблицаСопоставленныхПоШтрихкодам
		|ИЗ
		|	ТаблицаНатуральныхКлючей КАК ТаблицаНатуральныхКлючей
		|
		|ГДЕ
		|	ТаблицаНатуральныхКлючей.Штрихкод <> """"";
		
	Иначе
		
		ТекстаЗапросаПоШтрихКоду =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
		|	ТаблицаНатуральныхКлючей.Штрихкод КАК Штрихкод,
		|	ТаблицаНатуральныхКлючей.ЭтоВнутреннийШтрихкод КАК ЭтоВнутреннийШтрихкод,
		|	Штрихкоды.Объект КАК Номенклатура,
		|	ИСТИНА КАК ШтрихкодСопоставлен,
		|	ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура КАК ЭтоНашаНоменклатура
		|ПОМЕСТИТЬ ТаблицаСопоставленныхПоШтрихкодам
		|ИЗ
		|	РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНатуральныхКлючей КАК ТаблицаНатуральныхКлючей
		|		ПО Штрихкоды.Штрихкод = ТаблицаНатуральныхКлючей.Штрихкод
		|ГДЕ
		|	ТаблицаНатуральныхКлючей.Штрихкод <> """"
		|	И НЕ Штрихкоды.Объект.ПометкаУдаления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторНоменклатуры,
		|	Номенклатура";
		
	КонецЕсли;
	
	ШаблонЗапросаПоискаПоАртикулу = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНатуральныхКлючей.Артикул КАК Артикул,
	|	ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	|	НоменклатураКонтрагента.Ссылка КАК Номенклатура,
	|	ИСТИНА КАК АртикулСопоставлен,
	|	ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура КАК ЭтоНашаНоменклатура
	|ПОМЕСТИТЬ ТаблицаСопоставленныхПоАртикулам
	|ИЗ
	|	ТаблицаНатуральныхКлючей КАК ТаблицаНатуральныхКлючей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.%1 КАК НоменклатураКонтрагента
	|		ПО ТаблицаНатуральныхКлючей.Артикул = НоменклатураКонтрагента.%2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставленныхПоШтрихкодам КАК ТаблицаСопоставленныхПоШтрихкодам
	|		ПО ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры = ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры
	|			И (НЕ ТаблицаСопоставленныхПоШтрихкодам.ЭтоВнутреннийШтрихкод)
	|ГДЕ
	|	ТаблицаНатуральныхКлючей.Артикул <> """"
	|	И ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры ЕСТЬ NULL
	|	И НЕ НоменклатураКонтрагента.ПометкаУдаления";
	
	ЧастиТекстаЗапросаПоАртикулу = Новый Массив;
	
	ШаблонЗапросаПоискаПоНаименованию = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ИСТИНА КАК НаименованиеСопоставлено,
	|	ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура КАК ЭтоНашаНоменклатура
	|ПОМЕСТИТЬ ТаблицаСопоставленныхПоНаименованию
	|ИЗ
	|	ТаблицаНатуральныхКлючей КАК ТаблицаНатуральныхКлючей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.%1 КАК СправочникНоменклатура
	|		ПО ТаблицаНатуральныхКлючей.Наименование = СправочникНоменклатура.Наименование
	|ГДЕ
	|	НЕ ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					ТаблицаСопоставленныхПоШтрихкодам КАК ТаблицаСопоставленныхПоШтрихкодам
	|				ГДЕ
	|					ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры = ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры
	|					И НЕ ТаблицаСопоставленныхПоШтрихкодам.ЭтоВнутреннийШтрихкод)
	|	И ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура
	|	И НЕ СправочникНоменклатура.ЭтоГруппа
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры,
	|	СправочникНоменклатура.Ссылка,
	|	ИСТИНА,
	|	ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура
	|ИЗ
	|	ТаблицаНатуральныхКлючей КАК ТаблицаНатуральныхКлючей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.%1 КАК СправочникНоменклатура
	|		ПО (ТаблицаНатуральныхКлючей.Наименование = ПОДСТРОКА(СправочникНоменклатура.НаименованиеПолное, 1, 250))
	|ГДЕ
	|	НЕ ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					ТаблицаСопоставленныхПоШтрихкодам КАК ТаблицаСопоставленныхПоШтрихкодам
	|				ГДЕ
	|					ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры = ТаблицаНатуральныхКлючей.ИдентификаторНоменклатуры
	|					И НЕ ТаблицаСопоставленныхПоШтрихкодам.ЭтоВнутреннийШтрихкод)
	|	И ТаблицаНатуральныхКлючей.ЭтоНашаНоменклатура
	|	И НЕ СправочникНоменклатура.ЭтоГруппа
	|	И НЕ СправочникНоменклатура.ПометкаУдаления";
	
	ЧастиТекстаЗапросаПоНаименованию = Новый Массив;
	
	Если ВариантПоиска <> 2 Тогда
		
		ЧастиТекстаЗапросаПоАртикулу.Добавить(
			СтрШаблон(ШаблонЗапросаПоискаПоАртикулу, "Номенклатура", "Артикул"));
		ШаблонЗапросаПоискаПоАртикулу = СтрЗаменить(
			ШаблонЗапросаПоискаПоАртикулу,
			"ПОМЕСТИТЬ ТаблицаСопоставленныхПоАртикулам",
			"");
		ШаблонЗапросаПоискаПоАртикулу = СтрЗаменить(
			ШаблонЗапросаПоискаПоАртикулу,
			"РАЗРЕШЕННЫЕ",
			"");
		ЧастиТекстаЗапросаПоАртикулу.Добавить(
			СтрШаблон(ШаблонЗапросаПоискаПоАртикулу, "Номенклатура", "АртикулДляПоиска"));
		ЧастиТекстаЗапросаПоНаименованию.Добавить(
			СтрШаблон(ШаблонЗапросаПоискаПоНаименованию, "Номенклатура"));
		ШаблонЗапросаПоискаПоНаименованию = СтрЗаменить(
			ШаблонЗапросаПоискаПоНаименованию,
			"ПОМЕСТИТЬ ТаблицаСопоставленныхПоНаименованию",
			"");
		ШаблонЗапросаПоискаПоНаименованию = СтрЗаменить(
			ШаблонЗапросаПоискаПоНаименованию,
			"РАЗРЕШЕННЫЕ",
			"");
		
	КонецЕсли;
	
	Если ВариантПоиска <> 1 Тогда
		
		ЧастиТекстаЗапросаПоАртикулу.Добавить(
			СтрШаблон(ШаблонЗапросаПоискаПоАртикулу, "Автомобили", "VIN"));
		ЧастиТекстаЗапросаПоНаименованию.Добавить(
			СтрШаблон(ШаблонЗапросаПоискаПоНаименованию, "Автомобили"));
		
	КонецЕсли;
	
	КонецТекстаЗапроса = "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторНоменклатуры,
		|	Номенклатура";
	
	Разделитель = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	
	ТекстЗапросаПоАртикулу = СтрШаблон(
		"%1%2",
		СтрСоединить(ЧастиТекстаЗапросаПоАртикулу, Разделитель),
		КонецТекстаЗапроса);
	
	ТекстЗапросаПоНаименованию = СтрШаблон(
		"%1%2",
		СтрСоединить(ЧастиТекстаЗапросаПоНаименованию, Разделитель),
		КонецТекстаЗапроса);
	
	РазделительЗапросов = "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
	ТекстЗапроса = СтрШаблон(
		"%1%2%3%2%4",
		ТекстаЗапросаПоШтрихКоду,
		РазделительЗапросов,
		ТекстЗапросаПоАртикулу,
		ТекстЗапросаПоНаименованию);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаПоискаВариантовСопоставленияУпаковкиНоменклатурыБЭД
Процедура ТекстЗапросаПоискаВариантовСопоставленияУпаковкиНоменклатурыБЭД(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.НоменклатураИБ КАК НоменклатураИБ,
	               |	ТаблицаНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ТаблицаНоменклатуры.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	               |	ТаблицаНоменклатуры.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	               |	ТаблицаНоменклатуры.ИспользоватьУпаковки КАК ИспользоватьУпаковки,
	               |	ТаблицаНоменклатуры.НаименованиеУпаковки КАК НаименованиеУпаковки,
	               |	ТаблицаНоменклатуры.УпаковкаЗадана КАК УпаковкаЗадана,
	               |	ТаблицаНоменклатуры.КоличествоБазовойЕдиницыИзмерения КАК КоличествоБазовойЕдиницыИзмерения,
	               |	ТаблицаНоменклатуры.КоличествоУпаковок КАК КоличествоУпаковок,
	               |	ЕдиницыИзмерения.Ссылка КАК УпаковкаИБ
	               |ИЗ
	               |	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	               |		ПО (ВЫБОР
	               |				КОГДА ТаблицаНоменклатуры.НоменклатураИБ.ТипНоменклатуры.ИспользованиеЕдиницИзмерения = 1
	               |					ТОГДА ТаблицаНоменклатуры.НоменклатураИБ.ТипНоменклатуры = ЕдиницыИзмерения.Владелец
	               |				ИНАЧЕ ТаблицаНоменклатуры.НоменклатураИБ = ЕдиницыИзмерения.Владелец
	               |			КОНЕЦ)";
		
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПодобратьВариантыСопоставленияПоНатуральнымКлючам
Процедура ПодобратьВариантыСопоставленияПоНатуральнымКлючам(ТаблицаНоменклатурыКонтрагентов, ДополнительныеПараметры) Экспорт
	
	КодыНоменклатур = ТаблицаНоменклатурыКонтрагентов.Скопировать(, "Идентификатор,КодНоменклатуры");
	
	// Модифицируем коды номенклатуры для поиска по артикулу поиска
	КодыНоменклатур.Колонки.Добавить(
		"КодНоменклатурыДляПоиска",
		Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	
	Для Каждого СтрокаНоменклатуры Из КодыНоменклатур Цикл
		
		СтрокаНоменклатуры.КодНоменклатурыДляПоиска =
			ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(СтрокаНоменклатуры.КодНоменклатуры);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПоискаПоКодуНоменклатуры();
	Запрос.УстановитьПараметр("КодыНоменклатурыКонтаргента", КодыНоменклатур);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		// Заполним вариант сопоставления
		ВариантСопоставления = СопоставлениеНоменклатурыКонтрагентовСлужебный.НовыйВариантСопоставленияНоменклатурыБЭД();
		ВариантСопоставления.НоменклатураИБ = Выборка.НоменклатураИБ;
		ВариантСопоставления.АртикулСопоставлен = Истина;
		
		// Найдем строку номенклатуры контрагента и внесем в нее результат
		СтрокаНоменклатуры = ТаблицаНоменклатурыКонтрагентов.Найти(Выборка.Идентификатор, "Идентификатор");
		
		// Проверим, что ранее не записали эту номенклатуру базы в результат
		НоменклатураИБДобавлена = Ложь;
		
		Для Каждого ВариантПоискаНоменклатуры Из СтрокаНоменклатуры.ВариантыСопоставленияНоменклатурыБЭД Цикл
			
			Если ВариантПоискаНоменклатуры.НоменклатураИБ = ВариантСопоставления.НоменклатураИБ Тогда
				
				НоменклатураИБДобавлена = Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		СтрокаНоменклатуры.ВариантыСопоставленияНоменклатурыБЭД.Добавить(ВариантСопоставления);
		
	КонецЦикла;
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаОтбораСтрокСопоставленияДляЗаполненияХарактеристик
Процедура ТекстЗапросаОтбораСтрокСопоставленияДляЗаполненияХарактеристик(ТекстЗапроса) Экспорт
	
	ТекстЗапроса =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	ТаблицаСопоставления.Идентификатор КАК Идентификатор
	                |ИЗ
	                |	ТаблицаСопоставления КАК ТаблицаСопоставления
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	                |		ПО ТаблицаСопоставления.НоменклатураИБ = ХарактеристикиНоменклатуры.Владелец
	                |			И (ХарактеристикиНоменклатуры.Владелец ССЫЛКА Справочник.Номенклатура)
	                |ГДЕ
	                |	ХарактеристикиНоменклатуры.Ссылка = &Характеристика
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	ТаблицаСопоставления.Идентификатор
	                |ИЗ
	                |	ТаблицаСопоставления КАК ТаблицаСопоставления
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	                |		ПО ТаблицаСопоставления.НоменклатураИБ.ТипНоменклатуры = ХарактеристикиНоменклатуры.Владелец
	                |			И (ХарактеристикиНоменклатуры.Владелец ССЫЛКА Справочник.ТипыНоменклатуры)
	                |ГДЕ
	                |	ХарактеристикиНоменклатуры.Ссылка = &Характеристика";
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСоСловарем

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ОпределитьНаименованиеТипаОбъектаСопоставленияНоменклатурыБЭД
Процедура ОпределитьНаименованиеТипаОбъектаСопоставленияНоменклатурыБЭД(Знач СсылкаНаОбъект, НаименованиеТипаОбъекта) Экспорт
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Номенклатура") 
		ИЛИ ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Автомобили") Тогда
		НаименованиеТипаОбъекта = "Номенклатура";	
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.ХарактеристикиНоменклатуры") Тогда
		НаименованиеТипаОбъекта = "Характеристика";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеФормНаОснованииНоменклатурыКонтрагентов

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриЗаполненииФормыНоменклатурыПоДаннымКонтрагента
Процедура ПриЗаполненииФормыНоменклатурыПоДаннымКонтрагента(НоменклатураКонтрагента, Форма) Экспорт
	
	Если ТипЗнч(Форма.Объект.Ссылка) = Тип("СправочникСсылка.Автомобили") Тогда
		ЗаполнениеФормыАвтомобиляПоДаннымКонтрагента(НоменклатураКонтрагента, Форма);
	Иначе  
		ЗаполнениеФормыНоменклатурыПоДаннымКонтрагента(НоменклатураКонтрагента, Форма);
	КонецЕсли;
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПриЗаполненииФормыХарактеристикиПоДаннымКонтрагента
Процедура ПриЗаполненииФормыХарактеристикиПоДаннымКонтрагента(НоменклатураКонтрагента, Форма) Экспорт
	
	НаименованиеХарактеристики = НоменклатураКонтрагента.Характеристика;
	НаименованиеНоменклатуры = СокрЛП(НоменклатураКонтрагента.Наименование);
	
	Если ПустаяСтрока(НаименованиеХарактеристики)
		И СтрЗаканчиваетсяНа(НаименованиеНоменклатуры, ")") Тогда
		
		// Получим наименование характеристки из параметров номенклатуры
		НомерВложения = 1;
		НомерСимвола = 1;
		КоличествоСимволовВНаименовании = СтрДлина(НоменклатураКонтрагента.Наименование);
		
		Пока НомерСимвола < КоличествоСимволовВНаименовании Цикл
			
			СимволНаименования = Сред(
				НаименованиеНоменклатуры,
				КоличествоСимволовВНаименовании - НомерСимвола,
				1);
			
			Если СимволНаименования = ")" Тогда
				НомерВложения = НомерВложения + 1;
			ИначеЕсли СимволНаименования = "(" Тогда
				НомерВложения = НомерВложения - 1;
				Если НомерВложения = 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			НаименованиеХарактеристики = СимволНаименования + НаименованиеХарактеристики;
			НомерСимвола = НомерСимвола + 1;
			
		КонецЦикла;
		
		Если НомерСимвола = КоличествоСимволовВНаименовании - 1 Тогда
			НаименованиеХарактеристики = "";
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.Объект.Наименование = НаименованиеХарактеристики;
	
КонецПроцедуры

// Заполняет форму номенклатуру по данным контрагента.
//
// Параметры:
//  НоменклатураКонтрагента - Структура - данные контрагента для заполнения формы номенклатуры.
//                                        См. СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента.
//  Форма - ФормаКлиентскогоПриложения, Форма - форма номенклатуры, которую нужно заполнить.
//
Процедура ЗаполнениеФормыНоменклатурыПоДаннымКонтрагента(НоменклатураКонтрагента, Форма) Экспорт
	
	Форма.Объект.Наименование       = НоменклатураКонтрагента.Наименование;
	Форма.Объект.НаименованиеПолное = НоменклатураКонтрагента.Наименование;
	
	Если ЗначениеЗаполнено(НоменклатураКонтрагента.Характеристика) Тогда
		
		Форма.Объект.Наименование = Форма.Объект.Наименование 
		+ " (" + НоменклатураКонтрагента.Характеристика + ")";
		
	КонецЕсли;
	
	Форма.Объект.Артикул = ?(
		ПустаяСтрока(НоменклатураКонтрагента.Артикул),
		НоменклатураКонтрагента.КодНоменклатуры,
		НоменклатураКонтрагента.Артикул);
	Форма.Объект.АртикулДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер
	.ВАртикулДляПоиска(Форма.Объект.Артикул);
	
	Если ЗначениеЗаполнено(НоменклатураКонтрагента.ЕдиницаИзмеренияКод) Тогда
		
		Форма.Объект.БазоваяЕдиницаИзмерения = Справочники
		.КлассификаторЕдиницИзмерения
		.НайтиПоКоду(НоменклатураКонтрагента.ЕдиницаИзмеренияКод);
		
	ИначеЕсли ЗначениеЗаполнено(НоменклатураКонтрагента.ЕдиницаИзмерения) Тогда
		
		Форма.Объект.БазоваяЕдиницаИзмерения = Справочники
		.КлассификаторЕдиницИзмерения
		.НайтиПоНаименованию(НоменклатураКонтрагента.ЕдиницаИзмерения, Истина);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НоменклатураКонтрагента.СтавкаНДС) Тогда
		
		СтавкиНДСПоКлючу = Новый Соответствие;
		ОбменСКонтрагентамиПереопределяемый.ЗаполнитьСоответствиеСтавокНДС(СтавкиНДСПоКлючу);
		Форма.Объект.СтавкаНДС = СтавкиНДСПоКлючу.Получить(НоменклатураКонтрагента.СтавкаНДС);
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет форму номенклатуру по данным контрагента.
//
// Параметры:
//  НоменклатураКонтрагента - Структура - данные контрагента для заполнения формы номенклатуры.
//                                        См. СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента.
//  Форма - ФормаКлиентскогоПриложения, Форма - форма номенклатуры, которую нужно заполнить.
//
Процедура ЗаполнениеФормыАвтомобиляПоДаннымКонтрагента(НоменклатураКонтрагента, Форма) Экспорт
	
	Форма.Объект.Наименование       = НоменклатураКонтрагента.Наименование;
	Форма.Объект.НаименованиеПолное = НоменклатураКонтрагента.Наименование;
	Форма.Объект.VIN = ?(
		ПустаяСтрока(НоменклатураКонтрагента.Артикул),
		НоменклатураКонтрагента.КодНоменклатуры,
		НоменклатураКонтрагента.Артикул);
	Форма.Хозяин = НоменклатураКонтрагента.Владелец;  
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаСопоставлениеНоменклатурыБЭД

// Обработчик события при создании на сервере на форме "Форма" обработки "Сопоставление номенклатуры (БЭД)"
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, для которой обрабатывается событие.
//
Процедура ФормаСопоставленияНоменклатурыБЭДПриСозданииНаСервере(Форма) Экспорт
	
	// Добавим вывод номера по каталогу номенклатуры контрагента
	НовыйЭлемент = Форма.Элементы.Вставить(
		"КодНоменклатуры",
		Тип("ПолеФормы"),
		Форма.Элементы["СопоставлениеГруппаНоменклатураКонтрагентаОсновное"],
		Форма.Элементы["СопоставлениеСтавкаНДС"]
	);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.Сопоставление.КодНоменклатуры";
	НовыйЭлемент.ТолькоПросмотр = Истина;
	
	// Добавим вывод артикулов и производителя номенклатуры
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавитьРеквизитыНоменклатурыБазы(ДобавляемыеРеквизиты, "Объект.Сопоставление");
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ГруппаИнформацияНоменклатуры = Форма.Элементы.Вставить(
		"ГруппаИнформацияНоменклатуры",
		Тип("ГруппаФормы"),
		Форма.Элементы["СопоставлениеДанныеИБОсновное"],
		Форма.Элементы["ГруппаНоменклатура"]
	);
	ГруппаИнформацияНоменклатуры.Группировка = ГруппировкаКолонок.Горизонтальная;
	
	Форма.Элементы.Переместить(
		Форма.Элементы["ГруппаНоменклатура"],
		ГруппаИнформацияНоменклатуры);
	
	ГруппаДополнительнаяИнформацияНоменклатуры = Форма.Элементы.Вставить(
		"ГруппаДополнительнаяИнформацияНоменклатуры",
		Тип("ГруппаФормы"),
		ГруппаИнформацияНоменклатуры
	);
	ГруппаДополнительнаяИнформацияНоменклатуры.Группировка = ГруппировкаКолонок.ВЯчейке;
	
	ЗаполнитьЭлементыНоменклатурыБазы(
		Форма,
		ГруппаДополнительнаяИнформацияНоменклатуры,
		"Объект.Сопоставление.АртикулНоменклатурыБазы",
		"Объект.Сопоставление.Производитель");
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыНоменклатурыБазы(СтрокаНоменклатуры) Экспорт
	
	АртикулНоменклатурыБазы = "";
	Производитель = Справочники.Производители.ПустаяСсылка();
	
	Номенклатура = Новый Массив;
	Номенклатура.Добавить(СтрокаНоменклатуры.Номенклатура);
	ДанныеНоменклатуры = ДанныеЗаполненияПараметровНоменклатуры(Номенклатура);
	
	Если ДанныеНоменклатуры.Количество() > 0 Тогда
		
		ПараметрыЗаполнения = ДанныеНоменклатуры.Получить(СтрокаНоменклатуры.Номенклатура);
		АртикулНоменклатурыБазы = ПараметрыЗаполнения.Артикул;
		Производитель = ПараметрыЗаполнения.Производитель;
		
	КонецЕсли;
	
	СтрокаНоменклатуры.АртикулНоменклатурыБазы = АртикулНоменклатурыБазы;
	СтрокаНоменклатуры.Производитель = Производитель;
	
	Если Не ЗначениеЗаполнено(СтрокаНоменклатуры.Упаковка) Тогда
		
		СтрокаНоменклатуры.Упаковка = СтрокаНоменклатуры.ЕдиницаИзмеренияПоУмолчанию
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события при создании на сервере на форме "Форма вариантов" обработки "Сопоставление номенклатуры (БЭД)"
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, для которой обрабатывается событие.
//
Процедура ФормаВариантовСопоставленияНоменклатурыБЭДПриСозданииНаСервере(Форма) Экспорт
	
	// Добавим реквизит "Код номенклатуры"
	ДобавляемыеРеквизиты = Новый Массив;
	РеквизитАртикулНоменклатуры = Новый РеквизитФормы(
		"КодНоменклатуры",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)),,
		НСтр("ru = 'Код номенклатуры'")
	);
	ДобавляемыеРеквизиты.Добавить(РеквизитАртикулНоменклатуры);
	ДобавитьРеквизитыНоменклатурыБазы(ДобавляемыеРеквизиты, "Варианты");
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	// Значения новых реквизитов
	Если Форма.ЭлементСопоставления <> Неопределено Тогда
		
		Форма.КодНоменклатуры = Форма.ЭлементСопоставления.НоменклатураКонтрагента.КодНоменклатуры;
		
	КонецЕсли;
	
	// Заполним параметры номенклатуры из базы
	Номенклатура = Форма.Варианты.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	ЗаполнитьДанныеНоменклатурыБазы(Номенклатура, Форма.Варианты);
	
	// Добавим вывод номера по каталогу номенклатуры контрагента
	НовыйЭлемент = Форма.Элементы.Вставить(
		"КодНоменклатуры",
		Тип("ПолеФормы"),
		Форма.Элементы["ГруппаАртикулСтавкаНДС"],
		Форма.Элементы["СтавкаНДС"]
	);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи;
	НовыйЭлемент.ПутьКДанным = "КодНоменклатуры";
	НовыйЭлемент.ЦветФона = ЦветаСтиля.ФонВыделенияНадписиБЭД;
	НовыйЭлемент.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
	НовыйЭлемент.Ширина = 11;
	НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
	
	Форма.Элементы["ГруппаРезультатыПоиска"].Группировка = ГруппировкаКолонок.ВЯчейке;
	
	ЗаполнитьЭлементыНоменклатурыБазы(
		Форма,
		Форма.Элементы["ГруппаРезультатыПоиска"],
		"Варианты.АртикулНоменклатурыБазы",
		"Варианты.Производитель");
	
	Форма.Элементы["ВариантыНоменклатура"].Заголовок = НСтр("ru = 'Номенклатура / Автомобиль'");
	
КонецПроцедуры

// Получение и вывод информации о номенклатуре базы
//
// Параметры:
//  Номенклатура	 - Массив - Список наменклатуры.
//  Сопоставление	 - ТаблицаЗначений - Реквизит списка сопоставления.
//
Процедура ЗаполнитьДанныеНоменклатурыБазы(Номенклатура, Сопоставление) Экспорт
	
	ДанныеНоменклатуры = ДанныеЗаполненияПараметровНоменклатуры(Номенклатура);
	Для Каждого СтрокаВарианта Из Сопоставление Цикл
		
		ПараметрыНоменклатуры = ДанныеНоменклатуры.Получить(СтрокаВарианта.Номенклатура);
		
		Если ПараметрыНоменклатуры = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаВарианта.АртикулНоменклатурыБазы = ПараметрыНоменклатуры.Артикул;
		СтрокаВарианта.Производитель = ПараметрыНоменклатуры.Производитель;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает вараинт поиска номенклатуры в справочниках базы
//
Функция ВариантПоискаНоменклатуры() Экспорт
	
	ПодразделениеПоискаВарианта = ПараметрыСеанса.ПодразделениеКомпании;
	ВариантыПоиска = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПодразделениеПоискаВарианта,
		"СопоставлениеЧерезНоменклатуру,СопоставлениеЧерезАвтомобили");
	
	Если Не ВариантыПоиска.СопоставлениеЧерезАвтомобили Тогда
		// Доступен только вариант поиска в справочнике "Номенклатура"
		Возврат 1;
	ИначеЕсли Не ВариантыПоиска.СопоставлениеЧерезНоменклатуру Тогда
		// Доступен только вариант поиска в справочнике "Автомобили"
		Возврат 2;
	КонецЕсли;
	
	// Доступно для сопосотавления оба справочника
	Возврат 0;
	
КонецФункции

Функция ЕдиницыИзмеренияНоменклатуры(Номенклатура) Экспорт
	
	ДоступныеЕдиницыИзмерения = Новый СписокЗначений();
	
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Автомобили") Тогда
		
		ДоступныеЕдиницыИзмерения.Добавить(Справочники.ЕдиницыИзмерения.НайтиПоНаименованию("шт", Истина));
		
	Иначе
		
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА Номенклатура.ТипНоменклатуры.ИспользованиеЕдиницИзмерения = 1
		               |			ТОГДА Номенклатура.ТипНоменклатуры
		               |		ИНАЧЕ Номенклатура.Ссылка
		               |	КОНЕЦ КАК ВладелейЕсдиницыИзмерения
		               |ПОМЕСТИТЬ ВладелецЕдиницыИзмерения
		               |ИЗ
		               |	Справочник.Номенклатура КАК Номенклатура
		               |ГДЕ
		               |	Номенклатура.Ссылка = &Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕдиницыИзмерения.Ссылка КАК Ссылка,
		               |	ЕдиницыИзмерения.Представление КАК Представление
		               |ИЗ
		               |	ВладелецЕдиницыИзмерения КАК ВладелецЕдиницыИзмерения
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		               |		ПО ВладелецЕдиницыИзмерения.ВладелейЕсдиницыИзмерения = ЕдиницыИзмерения.Владелец
		               |ГДЕ
		               |	НЕ ЕдиницыИзмерения.Ссылка ЕСТЬ NULL";
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ДоступныеЕдиницыИзмерения.Добавить(Выборка.Ссылка, Выборка.Представление);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДоступныеЕдиницыИзмерения;
	
КонецФункции

Функция ОграничениеТипаНоменклатуры() Экспорт
	
	ВариантПоиска = ВариантПоискаНоменклатуры();
	
	Если ВариантПоиска = 1 Тогда
		
		Возврат Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
		
	ИначеЕсли ВариантПоиска = 2 Тогда
		
		Возврат Новый ОписаниеТипов("СправочникСсылка.Автомобили");
		
	КонецЕсли;
	
	Возврат Метаданные.ОпределяемыеТипы.НоменклатураБЭД.Тип;
	
КонецФункции

Процедура ДобавитьРеквизитыНоменклатурыБазы(ДобавляемыеРеквизиты, ИмяТаблицы)
	
	РеквизитАртикулНоменклатуры = Новый РеквизитФормы(
		"АртикулНоменклатурыБазы",
		Метаданные.ОпределяемыеТипы.Артикул.Тип,
		ИмяТаблицы,
		НСтр("ru = 'Артикул / VIN'")
	);
	ДобавляемыеРеквизиты.Добавить(РеквизитАртикулНоменклатуры);
	
	РеквизитПроизволитель = Новый РеквизитФормы(
		"Производитель",
		Новый ОписаниеТипов("СправочникСсылка.Производители"),
		ИмяТаблицы,
		НСтр("ru = 'Производитель'")
	);
	ДобавляемыеРеквизиты.Добавить(РеквизитПроизволитель);
	
КонецПроцедуры

Функция ДанныеЗаполненияПараметровНоменклатуры(Номенклатура)
	
	ТолькоНоменклатура = Новый Массив;
	ТолькоАвтомобили = Новый Массив;
	
	Для Каждого ТекущаяНоменклатура Из Номенклатура Цикл
		
		Если ЗначениеЗаполнено(ТекущаяНоменклатура) Тогда
			
			Если ТипЗнч(ТекущаяНоменклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
				
				ТолькоНоменклатура.Добавить(ТекущаяНоменклатура);
				
			ИначеЕсли ТипЗнч(ТекущаяНоменклатура) = Тип("СправочникСсылка.Автомобили") Тогда
				
				ТолькоАвтомобили.Добавить(ТекущаяНоменклатура);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Результат = Новый Соответствие;
	
	Если ТолькоНоменклатура.Количество() > 0 Тогда
		
		Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
			ТолькоНоменклатура,
			"Артикул,Производитель");
		
	КонецЕсли;
	
	Если ТолькоАвтомобили.Количество() > 0 Тогда
		
		Автомобили = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
			ТолькоАвтомобили,
			"VIN");
		
		Для Каждого Автомобиль Из Автомобили Цикл
			
			Результат.Вставить(
				Автомобиль.Ключ,
				Новый Структура("Артикул,Производитель", Автомобиль.Значение.VIN, Справочники.Производители.ПустаяСсылка()));
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьЭлементыНоменклатурыБазы(
		Форма,
		Группа,
		ДанныеАртикула,
		ДанныеПроизводителя)
	
	НовыйЭлемент = Форма.Элементы.Вставить(
		"АртикулНоменклатурыБазы",
		Тип("ПолеФормы"),
		Группа
	);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = ДанныеАртикула;
	НовыйЭлемент.ТолькоПросмотр = Истина;
	НовыйЭлемент.Ширина = 10;
	
	НовыйЭлемент = Форма.Элементы.Вставить(
		"Производитель",
		Тип("ПолеФормы"),
		Группа
	);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = ДанныеПроизводителя;
	НовыйЭлемент.ТолькоПросмотр = Истина;
	НовыйЭлемент.Ширина = 20;
	
КонецПроцедуры

Функция ТекстЗапросаПоискаПоКодуНоменклатуры()
	
	ВариантПоиска = ВариантПоискаНоменклатуры();
	ЧастиТестаЗапроса = Новый Массив;
	НачалоЗапроса = "ВЫБРАТЬ
	|	КодыНоменклатурыКонтаргента.Идентификатор КАК Идентификатор,
	|	КодыНоменклатурыКонтаргента.КодНоменклатуры КАК КодНоменклатуры,
	|	КодыНоменклатурыКонтаргента.КодНоменклатурыДляПоиска КАК КодНоменклатурыДляПоиска
	|ПОМЕСТИТЬ КодыНоменклатурыКонтрагента
	|ИЗ
	|	&КодыНоменклатурыКонтаргента КАК КодыНоменклатурыКонтаргента
	|ГДЕ
	|	КодыНоменклатурыКонтаргента.КодНоменклатуры <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Если ВариантПоиска <> 2 Тогда
		
		ЧастиТестаЗапроса.Добавить("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	КодыНоменклатурыКонтрагента.Идентификатор КАК Идентификатор,
		|	Номенклатура.Ссылка КАК НоменклатураИБ
		|ИЗ
		|	КодыНоменклатурыКонтрагента КАК КодыНоменклатурыКонтрагента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО КодыНоменклатурыКонтрагента.КодНоменклатуры = Номенклатура.Артикул
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КодыНоменклатурыКонтрагента.Идентификатор,
		|	Номенклатура.Ссылка
		|ИЗ
		|	КодыНоменклатурыКонтрагента КАК КодыНоменклатурыКонтрагента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО КодыНоменклатурыКонтрагента.КодНоменклатурыДляПоиска = Номенклатура.АртикулДляПоиска
		|ГДЕ
		|	КодыНоменклатурыКонтрагента.КодНоменклатурыДляПоиска <> """"");
		
	КонецЕсли;
	
	Если ВариантПоиска <> 1 Тогда
		
		ЧастиТестаЗапроса.Добавить("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КодыНоменклатурыКонтрагента.Идентификатор КАК Идентификатор,
		|	Автомобили.Ссылка КАК НоменклатураИБ
		|ИЗ
		|	КодыНоменклатурыКонтрагента КАК КодыНоменклатурыКонтрагента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Автомобили КАК Автомобили
		|		ПО КодыНоменклатурыКонтрагента.КодНоменклатуры = Автомобили.VIN");
		
	КонецЕсли;
	
	ТекстЗапроса = СтрШаблон("%1%2%3",
		НачалоЗапроса,
		Символы.ПС,
		СтрСоединить(ЧастиТестаЗапроса, "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|"));
		
	Возврат ТекстЗапроса;
	
КонецФункции

// см. СопоставлениеНоменклатурыКонтрагентовСлужебный.ТекстЗапросаВариантовСопоставленияПоНоменклатуреКонтрагентов
Процедура ТекстЗапросаВариантовСопоставленияПоНоменклатуреКонтрагентов(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.АртикулСопоставлен, ЛОЖЬ)) КАК АртикулСопоставлен,
	|	МАКСИМУМ(ЕСТЬNULL(ТаблицаСопоставленныхПоШтрихкодам.ЭтоВнутреннийШтрихкод, ЛОЖЬ)) КАК ЭтоВнутреннийШтрихкод,
	|	МАКСИМУМ(ЕСТЬNULL(ТаблицаСопоставленныхПоШтрихкодам.ШтрихкодСопоставлен, ЛОЖЬ)) КАК ШтрихкодСопоставлен,
	|	ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.ИдентификаторНоменклатуры, ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры) КАК ИдентификаторНоменклатуры,
	|	ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.Номенклатура, ТаблицаСопоставленныхПоШтрихкодам.Номенклатура) КАК Номенклатура
	|ПОМЕСТИТЬ ВариантыСопоставленияПоАртикуламШтрихкодам
	|ИЗ
	|	ТаблицаСопоставленныхПоШтрихкодам КАК ТаблицаСопоставленныхПоШтрихкодам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставленныхПоАртикулам КАК ТаблицаСопоставленныхПоАртикулам
	|		ПО ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры = ТаблицаСопоставленныхПоАртикулам.ИдентификаторНоменклатуры
	|			И ТаблицаСопоставленныхПоШтрихкодам.Номенклатура = ТаблицаСопоставленныхПоАртикулам.Номенклатура
	|ГДЕ
	|	НЕ ТаблицаСопоставленныхПоШтрихкодам.ЭтоНашаНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.ИдентификаторНоменклатуры, ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры),
	|	ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.Номенклатура, ТаблицаСопоставленныхПоШтрихкодам.Номенклатура)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.АртикулСопоставлен, ЛОЖЬ)),
	|	МАКСИМУМ(ЕСТЬNULL(ТаблицаСопоставленныхПоШтрихкодам.ЭтоВнутреннийШтрихкод, ЛОЖЬ)),
	|	МАКСИМУМ(ЕСТЬNULL(ТаблицаСопоставленныхПоШтрихкодам.ШтрихкодСопоставлен, ЛОЖЬ)),
	|	ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.ИдентификаторНоменклатуры, ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры),
	|	ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.Номенклатура, ТаблицаСопоставленныхПоШтрихкодам.Номенклатура)
	|ИЗ
	|	ТаблицаСопоставленныхПоАртикулам КАК ТаблицаСопоставленныхПоАртикулам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставленныхПоШтрихкодам КАК ТаблицаСопоставленныхПоШтрихкодам
	|		ПО ТаблицаСопоставленныхПоАртикулам.ИдентификаторНоменклатуры = ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры
	|			И ТаблицаСопоставленныхПоАртикулам.Номенклатура = ТаблицаСопоставленныхПоШтрихкодам.Номенклатура
	|ГДЕ
	|	НЕ ТаблицаСопоставленныхПоАртикулам.ЭтоНашаНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.ИдентификаторНоменклатуры, ТаблицаСопоставленныхПоШтрихкодам.ИдентификаторНоменклатуры),
	|	ЕСТЬNULL(ТаблицаСопоставленныхПоАртикулам.Номенклатура, ТаблицаСопоставленныхПоШтрихкодам.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторНоменклатуры,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСопоставленныхПоАртикулам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСопоставленныхПоШтрихкодам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСловКаталога.ХешСлова КАК ХешСлова,
	|	ТаблицаСловКаталога.Позиция КАК Позиция,
	|	ТаблицаСловКаталога.ВсегоСлов КАК ВсегоСлов,
	|	ТаблицаСловКаталога.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ТаблицаСловКаталога
	|ИЗ
	|	&ТаблицаНаименованийПоСловам КАК ТаблицаСловКаталога
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект КАК СсылкаНаОбъект,
	|	ТаблицаСловКаталога.Идентификатор КАК Идентификатор,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СловарьСопоставленияНоменклатурыБЭД.Позиция = 0
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ) КАК Приоритет
	|ПОМЕСТИТЬ ВариантыСопоставленияПоПолномуСовпадению
	|ИЗ
	|	ТаблицаСловКаталога КАК ТаблицаСловКаталога
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СловарьСопоставленияНоменклатурыБЭД КАК СловарьСопоставленияНоменклатурыБЭД
	|		ПО ТаблицаСловКаталога.ХешСлова = СловарьСопоставленияНоменклатурыБЭД.ХешСлова
	|			И (СловарьСопоставленияНоменклатурыБЭД.Позиция < 1)
	// АльфаАвто
	|			И (СловарьСопоставленияНоменклатурыБЭД.ТипОбъекта = &ТипОбъектаСопоставления) #УсловиеПоТипуНоменклатуры
	// Конец АльфаАвто
	|			И (ТаблицаСловКаталога.Позиция < 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект,
	|	ТаблицаСловКаталога.Идентификатор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Идентификатор,
	|	СсылкаНаОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВариантыСопоставленияПоПолномуСовпадению.Идентификатор КАК ИдентификаторНоменклатуры,
	|	ВариантыСопоставленияПоПолномуСовпадению.СсылкаНаОбъект КАК Номенклатура,
	|	ЕСТЬNULL(ВариантыСопоставленияПоАртикуламШтрихкодам.АртикулСопоставлен, ЛОЖЬ) КАК АртикулСопоставлен,
	|	ЕСТЬNULL(ВариантыСопоставленияПоАртикуламШтрихкодам.ШтрихкодСопоставлен, ЛОЖЬ) КАК ШтрихкодСопоставлен,
	|	ВариантыСопоставленияПоПолномуСовпадению.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ВариантыПоНатуральнымКлючам
	|ИЗ
	|	ВариантыСопоставленияПоПолномуСовпадению КАК ВариантыСопоставленияПоПолномуСовпадению
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВариантыСопоставленияПоАртикуламШтрихкодам КАК ВариантыСопоставленияПоАртикуламШтрихкодам
	|		ПО ВариантыСопоставленияПоПолномуСовпадению.Идентификатор = ВариантыСопоставленияПоАртикуламШтрихкодам.ИдентификаторНоменклатуры
	|			И ВариантыСопоставленияПоПолномуСовпадению.СсылкаНаОбъект = ВариантыСопоставленияПоАртикуламШтрихкодам.Номенклатура
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВариантыСопоставленияПоАртикуламШтрихкодам.ИдентификаторНоменклатуры,
	|	ВариантыСопоставленияПоАртикуламШтрихкодам.Номенклатура,
	|	ВариантыСопоставленияПоАртикуламШтрихкодам.АртикулСопоставлен,
	|	ВариантыСопоставленияПоАртикуламШтрихкодам.ШтрихкодСопоставлен,
	|	ВЫБОР
	|		КОГДА НЕ ВариантыСопоставленияПоПолномуСовпадению.Идентификатор ЕСТЬ NULL
	|			ТОГДА ВариантыСопоставленияПоПолномуСовпадению.Приоритет
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ ВариантыСопоставленияПоАртикуламШтрихкодам.ЭтоВнутреннийШтрихкод
	|						И ВариантыСопоставленияПоАртикуламШтрихкодам.ШтрихкодСопоставлен
	|					ТОГДА 3
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ВариантыСопоставленияПоАртикуламШтрихкодам.АртикулСопоставлен
	|								И ВариантыСопоставленияПоАртикуламШтрихкодам.ШтрихкодСопоставлен
	|							ТОГДА 4
	|						ИНАЧЕ 5
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ
	|ИЗ
	|	ВариантыСопоставленияПоАртикуламШтрихкодам КАК ВариантыСопоставленияПоАртикуламШтрихкодам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВариантыСопоставленияПоПолномуСовпадению КАК ВариантыСопоставленияПоПолномуСовпадению
	|		ПО ВариантыСопоставленияПоАртикуламШтрихкодам.ИдентификаторНоменклатуры = ВариантыСопоставленияПоПолномуСовпадению.Идентификатор
	|			И ВариантыСопоставленияПоАртикуламШтрихкодам.Номенклатура = ВариантыСопоставленияПоПолномуСовпадению.СсылкаНаОбъект
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВариантыСопоставленияПоАртикуламШтрихкодам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВариантыПоНатуральнымКлючам.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры
	|ПОМЕСТИТЬ СопоставленныеИдентификаторы
	|ИЗ
	|	ВариантыПоНатуральнымКлючам КАК ВариантыПоНатуральнымКлючам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВариантыПоНатуральнымКлючам.ИдентификаторНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ВариантыПоНатуральнымКлючам.Номенклатура) >= 20
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВариантыСопоставленияПоПолномуСовпадению.Идентификатор
	|ИЗ
	|	ВариантыСопоставленияПоПолномуСовпадению КАК ВариантыСопоставленияПоПолномуСовпадению
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВариантыСопоставленияПоПолномуСовпадению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСловКаталога.ХешСлова КАК ХешСлова,
	|	ТаблицаСловКаталога.Позиция КАК Позиция,
	|	ТаблицаСловКаталога.ВсегоСлов КАК ВсегоСлов,
	|	ТаблицаСловКаталога.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ТаблицаСловСопоставления
	|ИЗ
	|	ТаблицаСловКаталога КАК ТаблицаСловКаталога
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеИдентификаторы КАК СопоставленныеИдентификаторы
	|		ПО ТаблицаСловКаталога.Идентификатор = СопоставленныеИдентификаторы.ИдентификаторНоменклатуры
	|ГДЕ
	|	СопоставленныеИдентификаторы.ИдентификаторНоменклатуры ЕСТЬ NULL
	|	И ТаблицаСловКаталога.Позиция > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХешСлова,
	|	Позиция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СопоставленныеИдентификаторы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСловКаталога";
	
	ВариантПоиска = ВариантПоискаНоменклатуры();
	
	УсловиеОтбора = "";
	Если ВариантПоиска = 1 Тогда
		УсловиеОтбора = "И СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект Ссылка Справочник.Номенклатура";
	ИначеЕсли ВариантПоиска = 2 Тогда
		УсловиеОтбора = "И СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект Ссылка Справочник.Автомобили";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УсловиеПоТипуНоменклатуры", УсловиеОтбора);
	
КонецПроцедуры

// см. СопоставлениеНоменклатурыКонтрагентовСлужебный.ТекстЗапросаПоискаВариантовСопоставленияВСловареПоНаименованию
Функция ТекстЗапросаПоискаВариантовСопоставленияВСловареПоНаименованию(ПараметрыСопоставления) Экспорт

	Если ПараметрыСопоставления.ОтключитьПоискПоСловарю Тогда
		Возврат "ВЫБРАТЬ
			|	1 КАК Коэффициент,
			|	"""" КАК Идентификатор,
			|	NULL КАК СсылкаНаОбъект,
			|	0 КАК ВсегоСлов,
			|	50 КАК ПроцентТочности
			|ПОМЕСТИТЬ ГруппировкаРасчетаПоследовательныхСлов
			|ГДЕ
			|	ЛОЖЬ";
	Иначе	
		ТекстЗапроса = "ВЫБРАТЬ
	        |	СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект КАК СсылкаНаОбъект,
	        |	КОЛИЧЕСТВО(ТаблицаСловСопоставления.ХешСлова) КАК КоличествоСлов,
	        |	ВЫБОР
	        |		КОГДА СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов > ТаблицаСловСопоставления.ВсегоСлов
	        |			ТОГДА СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов
	        |		ИНАЧЕ ТаблицаСловСопоставления.ВсегоСлов
	        |	КОНЕЦ КАК ВсегоСлов,
	        |	ТаблицаСловСопоставления.Идентификатор КАК Идентификатор
	        |ПОМЕСТИТЬ ГруппировкаНайденныхВариантов
	        |ИЗ
	        |	ТаблицаСловСопоставления КАК ТаблицаСловСопоставления
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СловарьСопоставленияНоменклатурыБЭД КАК СловарьСопоставленияНоменклатурыБЭД
	        |		ПО ТаблицаСловСопоставления.ХешСлова = СловарьСопоставленияНоменклатурыБЭД.ХешСлова
	        // АльфаАвто
	        |			И (СловарьСопоставленияНоменклатурыБЭД.ТипОбъекта = &ТипОбъектаСопоставления) #УсловиеПоТипуНоменклатуры
	        // Конец АльфаАвто
	        |			И (СловарьСопоставленияНоменклатурыБЭД.Позиция > 0)
	        |			И (ТаблицаСловСопоставления.Идентификатор = &Идентификатор)
	        |			И (&УсловиеПоИсключениюНоменклатуры)
	        |			И (ИСТИНА В
	        |				(ВЫБРАТЬ ПЕРВЫЕ 1
	        |					ИСТИНА
	        |				ИЗ
	        |					РегистрСведений.СтатистикаСловСловаряСопоставленияНоменклатурыБЭД КАК СтатистикаСловСловаряСопоставленияНоменклатурыБЭД
	        |				ГДЕ
	        // АльфаАвто
	        |					СтатистикаСловСловаряСопоставленияНоменклатурыБЭД.ТипОбъекта = СловарьСопоставленияНоменклатурыБЭД.ТипОбъекта #УсловиеПоТипуНоменклатуры 
	        // Конец АльфаАвто
			|					И СтатистикаСловСловаряСопоставленияНоменклатурыБЭД.ХешСлова = СловарьСопоставленияНоменклатурыБЭД.ХешСлова
	        |					И СтатистикаСловСловаряСопоставленияНоменклатурыБЭД.Количество < 100001))
	        |ГДЕ
	        |	(ВЫРАЗИТЬ(ВЫБОР
	        |				КОГДА СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов > ТаблицаСловСопоставления.ВсегоСлов
	        |					ТОГДА ТаблицаСловСопоставления.ВсегоСлов / СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов
	        |				ИНАЧЕ СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов / ТаблицаСловСопоставления.ВсегоСлов
	        |			КОНЕЦ * 100 КАК ЧИСЛО(3, 0))) >= &ПроцентТочностиПоиска
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект,
	        |	ВЫБОР
	        |		КОГДА СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов > ТаблицаСловСопоставления.ВсегоСлов
	        |			ТОГДА СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов
	        |		ИНАЧЕ ТаблицаСловСопоставления.ВсегоСлов
	        |	КОНЕЦ,
	        |	ТаблицаСловСопоставления.Идентификатор
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ ПЕРВЫЕ 100
	        |	ГруппировкаНайденныхВариантов.СсылкаНаОбъект КАК СсылкаНаОбъект,
	        |	ГруппировкаНайденныхВариантов.Идентификатор КАК Идентификатор,
	        |	ВЫРАЗИТЬ(ГруппировкаНайденныхВариантов.КоличествоСлов / ГруппировкаНайденныхВариантов.ВсегоСлов * 100 КАК ЧИСЛО(3, 0)) КАК ПроцентТочности,
	        |	ГруппировкаНайденныхВариантов.ВсегоСлов КАК ВсегоСлов
	        |ПОМЕСТИТЬ ОтобранныеВарианты
	        |ИЗ
	        |	ГруппировкаНайденныхВариантов КАК ГруппировкаНайденныхВариантов
			|ГДЕ
			|	(ВЫРАЗИТЬ(ГруппировкаНайденныхВариантов.КоличествоСлов / ГруппировкаНайденныхВариантов.ВсегоСлов * 100 КАК ЧИСЛО(3, 0))) >= &ПроцентТочностиПоиска
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	ПроцентТочности УБЫВ
			|
	        |ИНДЕКСИРОВАТЬ ПО
	        |	СсылкаНаОбъект
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |УНИЧТОЖИТЬ ГруппировкаНайденныхВариантов
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ОтобранныеВарианты.СсылкаНаОбъект КАК СсылкаНаОбъект,
	        |	ОтобранныеВарианты.Идентификатор КАК Идентификатор,
	        |	ОтобранныеВарианты.ПроцентТочности КАК ПроцентТочности,
	        |	ОтобранныеВарианты.ВсегоСлов КАК ВсегоСлов,
	        |	ВЫБОР
	        |		КОГДА ОтобранныеВарианты.ВсегоСлов = СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов
	        |			ТОГДА СловарьСопоставленияНоменклатурыБЭД.Позиция
	        |		ИНАЧЕ ТаблицаСловСопоставления.Позиция
	        |	КОНЕЦ КАК Позиция,
	        |	МАКСИМУМ(ВЫБОР
	        |			КОГДА ТаблицаСловСопоставления.ХешСлова = СловарьСопоставленияНоменклатурыБЭД.ХешСлова
	        |				ТОГДА ВЫБОР
	        |						КОГДА ТаблицаСловСопоставления.Позиция - СловарьСопоставленияНоменклатурыБЭД.Позиция < 0
	        |							ТОГДА (ТаблицаСловСопоставления.Позиция - СловарьСопоставленияНоменклатурыБЭД.Позиция) * -1
	        |						ИНАЧЕ ТаблицаСловСопоставления.Позиция - СловарьСопоставленияНоменклатурыБЭД.Позиция
	        |					КОНЕЦ
	        |			ИНАЧЕ 0
	        |		КОНЕЦ) КАК РазностьОтклоненияПозиций,
	        |	МАКСИМУМ(ВЫБОР
	        |			КОГДА ТаблицаСловСопоставления.ХешСлова = СловарьСопоставленияНоменклатурыБЭД.ХешСлова
	        |				ТОГДА ВЫБОР
	        |						КОГДА СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов < ТаблицаСловСопоставления.ВсегоСлов
	        |							ТОГДА ТаблицаСловСопоставления.Позиция
	        |						ИНАЧЕ СловарьСопоставленияНоменклатурыБЭД.Позиция
	        |					КОНЕЦ
	        |			ИНАЧЕ 0
	        |		КОНЕЦ) КАК ПозицияРасчетаОтклонения
	        |ПОМЕСТИТЬ СопоставлениеПоПозиции
	        |ИЗ
	        |	ОтобранныеВарианты КАК ОтобранныеВарианты
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСловСопоставления КАК ТаблицаСловСопоставления
	        |		ПО ОтобранныеВарианты.Идентификатор = ТаблицаСловСопоставления.Идентификатор
	        |			И (ТаблицаСловСопоставления.Позиция > 0)
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СловарьСопоставленияНоменклатурыБЭД КАК СловарьСопоставленияНоменклатурыБЭД
	        |		ПО ОтобранныеВарианты.СсылкаНаОбъект = СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект
	        |			И (СловарьСопоставленияНоменклатурыБЭД.Позиция > 0)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ОтобранныеВарианты.СсылкаНаОбъект,
	        |	ОтобранныеВарианты.Идентификатор,
	        |	ОтобранныеВарианты.ПроцентТочности,
	        |	ОтобранныеВарианты.ВсегоСлов,
	        |	ВЫБОР
	        |		КОГДА ОтобранныеВарианты.ВсегоСлов = СловарьСопоставленияНоменклатурыБЭД.ВсегоСлов
	        |			ТОГДА СловарьСопоставленияНоменклатурыБЭД.Позиция
	        |		ИНАЧЕ ТаблицаСловСопоставления.Позиция
	        |	КОНЕЦ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	СУММА(ВЫБОР
	        |			КОГДА СопоставлениеПоПозицииНачало.ПозицияРасчетаОтклонения = 0
	        |				ТОГДА 0
	        |			ИНАЧЕ ВЫБОР
	        |					КОГДА СопоставлениеПоПозицииНачало.РазностьОтклоненияПозиций = 0
	        |						ТОГДА 1
	        |					ИНАЧЕ ВЫБОР
	        |							КОГДА СопоставлениеПоПозицииНачало.РазностьОтклоненияПозиций - СопоставлениеПоПозицииНачалоКонец.РазностьОтклоненияПозиций = 0
	        |								ТОГДА 1
	        |							ИНАЧЕ 0
	        |						КОНЕЦ
	        |				КОНЕЦ
	        |		КОНЕЦ) КАК Коэффициент,
	        |	СопоставлениеПоПозицииНачало.Идентификатор КАК Идентификатор,
	        |	СопоставлениеПоПозицииНачало.СсылкаНаОбъект КАК СсылкаНаОбъект,
	        |	СопоставлениеПоПозицииНачало.ВсегоСлов КАК ВсегоСлов,
	        |	СопоставлениеПоПозицииНачало.ПроцентТочности КАК ПроцентТочности
	        |ПОМЕСТИТЬ ГруппировкаРасчетаПоследовательныхСлов
	        |ИЗ
	        |	СопоставлениеПоПозиции КАК СопоставлениеПоПозицииНачало
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СопоставлениеПоПозиции КАК СопоставлениеПоПозицииНачалоКонец
	        |		ПО СопоставлениеПоПозицииНачало.Идентификатор = СопоставлениеПоПозицииНачалоКонец.Идентификатор
	        |			И СопоставлениеПоПозицииНачало.СсылкаНаОбъект = СопоставлениеПоПозицииНачалоКонец.СсылкаНаОбъект
	        |			И (ВЫБОР
	        |				КОГДА СопоставлениеПоПозицииНачало.ВсегоСлов = СопоставлениеПоПозицииНачало.Позиция
	        |					ТОГДА СопоставлениеПоПозицииНачало.Позиция - 1 = СопоставлениеПоПозицииНачалоКонец.Позиция
	        |				ИНАЧЕ СопоставлениеПоПозицииНачало.Позиция + 1 = СопоставлениеПоПозицииНачалоКонец.Позиция
	        |			КОНЕЦ)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	СопоставлениеПоПозицииНачало.Идентификатор,
	        |	СопоставлениеПоПозицииНачало.СсылкаНаОбъект,
	        |	СопоставлениеПоПозицииНачало.ВсегоСлов,
	        |	СопоставлениеПоПозицииНачало.ПроцентТочности
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |УНИЧТОЖИТЬ СопоставлениеПоПозиции
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |УНИЧТОЖИТЬ ОтобранныеВарианты";

		ВариантПоиска = ВариантПоискаНоменклатуры();

		УсловиеОтбора = "";
		УсловиеОтбораСтатистика = "";
		Если ВариантПоиска = 1 Тогда
			УсловиеОтбора = "И СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект Ссылка Справочник.Номенклатура";
		ИначеЕсли ВариантПоиска = 2 Тогда
			УсловиеОтбора = "И СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект Ссылка Справочник.Автомобили";
		КонецЕсли;

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УсловиеПоТипуНоменклатуры", УсловиеОтбора);

		Возврат ТекстЗапроса;

	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ПравилоПоискаПоЧастиНаименования

// Обработчик события при создании на сервере на форме "Правило поиска по части наименования"
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, для которой обрабатывается событие.
//
Процедура ПравилоПоискаПоЧастиНаименованияПриСозданииНаСервере(Форма) Экспорт
	
	// Добавим реквизит "Владелец единицы измерения"
	ТипыВладельца = Новый Массив;
	ТипыВладельца.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ТипыВладельца.Добавить(Тип("СправочникСсылка.ТипыНоменклатуры"));
	ДобавляемыеРеквизиты = Новый Массив;
	РеквизитВладелецЕдиницыИзмерения = Новый РеквизитФормы(
		"ВладелецЕдиницыИзмерения",
		Новый ОписаниеТипов(ТипыВладельца),,
		НСтр("ru = 'Владелец единицы измерения'")
	);
	ДобавляемыеРеквизиты.Добавить(РеквизитВладелецЕдиницыИзмерения);
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	СвязиПараметровВыбора = Новый Массив;
	СвязиПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "ВладелецЕдиницыИзмерения"));
	Форма.Элементы.Упаковка.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
	
	// Добавим связь параметра выбора единицы измерения с владельцем
	УстановитьВладелецаЕдиницыИзмерения(Форма, Ложь);
	
КонецПроцедуры

// Установка отбора для поля "Упаковка"
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - Форма, для которой обрабатывается событие.
//  УстановитьЕдиницуИзмерения	- Булево - Признак установки основной единицы измерения.
//
Процедура УстановитьВладелецаЕдиницыИзмерения(Форма, УстановитьЕдиницуИзмерения = Истина) Экспорт
	
	// Найдем владельца единицы измерения
	Если Форма.Запись.Номенклатура = Неопределено Тогда
		Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	ИначеЕсли ТипЗнч(Форма.Запись.Номенклатура) = Тип("СправочникСсылка.Автомобили") Тогда
		Номенклатура = Справочники.Номенклатура.Автомобиль;
	Иначе
		Номенклатура = Форма.Запись.Номенклатура;
	КонецЕсли;
	
	ПараметрыВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Номенклатура,
		"ТипНоменклатуры,ОсновнаяЕдиницаИзмерения,ТипНоменклатуры.ИспользованиеЕдиницИзмерения");
	
	Если ПараметрыВладельца.ТипНоменклатурыИспользованиеЕдиницИзмерения = 1 Тогда
		Форма.ВладелецЕдиницыИзмерения = ПараметрыВладельца.ТипНоменклатуры;
	ИначеЕсли ПараметрыВладельца.ТипНоменклатурыИспользованиеЕдиницИзмерения = 2 Тогда
		Форма.ВладелецЕдиницыИзмерения = Номенклатура;
	Иначе
		Форма.ВладелецЕдиницыИзмерения = Неопределено;
	КонецЕсли;
	
	Если УстановитьЕдиницуИзмерения Тогда
		Форма.Запись.Упаковка = ПараметрыВладельца.ОсновнаяЕдиницаИзмерения;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти