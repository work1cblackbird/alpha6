
#Область ПрограммныйИнтерфейс

// Получение состава работ пакета.
//
// Параметры:
//  Пакет      - Строка                    - Идентификатор пакета работ.
//  ЗаказНаряд - ДокументСсылка.ЗаказНаряд - Документ пакета работ.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица значений, которая содержит информацию о работах пакета.
//
Функция АвтоработыПакета(Пакет, ЗаказНаряд) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПакетРабот", Пакет);
	Запрос.УстановитьПараметр("ЗаказНаряд", ЗаказНаряд);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоставПакетовРабот.ЗаказНаряд КАК ЗаказНаряд,
	|	СоставПакетовРабот.Авторабота КАК Авторабота
	|ПОМЕСТИТЬ АвтоработыПакета
	|ИЗ
	|	РегистрСведений.СоставПакетовРабот КАК СоставПакетовРабот
	|ГДЕ
	|	СоставПакетовРабот.ЗаказНаряд = &ЗаказНаряд
	|	И СоставПакетовРабот.ПакетРабот = &ПакетРабот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНарядАвтоработы.Авторабота КАК Авторабота,
	|	ЗаказНарядАвтоработы.Количество * ЗаказНарядАвтоработы.Коэффициент КАК НормаВремени,
	|	ЗаказНарядАвтоработы.Ссылка КАК ЗаказНаряд,
	|	ЗаказНарядАвтоработы.ИдентификаторРаботы КАК ИдентификаторРаботы
	|ИЗ
	|	Документ.ЗаказНаряд.Автоработы КАК ЗаказНарядАвтоработы
	|ГДЕ
	|	(ЗаказНарядАвтоработы.Ссылка, ЗаказНарядАвтоработы.ИдентификаторРаботы) В
	|			(ВЫБРАТЬ
	|				АвтоработыПакета.ЗаказНаряд,
	|				АвтоработыПакета.Авторабота
	|			ИЗ
	|				АвтоработыПакета КАК АвтоработыПакета)
	|	И ЗаказНарядАвтоработы.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Запись пакета работ в регистр сведений "Состав пакетов работ"
//
// Параметры:
//  ЗаказНаряд  - ДокументСсылка.ЗаказНаряд   - Документ с автоработами.
//  Автоработы  - Массив                      - Список авторабот.
//  Исполнитель - СправочникСсылка.Сотрудники - Исполнитель автоработы.
// 
// Возвращаемое значение:
//  УникальныйИдентификатор - Идентификатор пакета работ.
//
Функция СформироватьПакетРаботИзАвторабот(ЗаказНаряд, Автоработы, Исполнитель) Экспорт
	
	НовыйПакет = Новый УникальныйИдентификатор;
	
	НаборСоставПакетовРабот = РегистрыСведений.СоставПакетовРабот.СоздатьНаборЗаписей();
	НаборСоставПакетовРабот.Отбор.ЗаказНаряд.Установить(ЗаказНаряд);
	НаборСоставПакетовРабот.Прочитать();
	
	Для Каждого Запись Из НаборСоставПакетовРабот Цикл
		Если Автоработы.Найти(Запись.Авторабота) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Запись.ПакетРабот = НовыйПакет;
	КонецЦикла;
	
	НаборСоставПакетовРабот.Записать(Истина);
	
	// найдем номерпакета
	НомерПакета = ПолучитьНомерПоследнегоПакета(ЗаказНаряд) + 1;
	
	МенеджерИнформацияОПакетахАвторабот = РегистрыСведений.ИнформацияОПакетахАвторабот.СоздатьМенеджерЗаписи();
	МенеджерИнформацияОПакетахАвторабот.ПакетРабот    = НовыйПакет;
	МенеджерИнформацияОПакетахАвторабот.Представление = "Пакет исполнителя: " + Строка(Исполнитель);
	МенеджерИнформацияОПакетахАвторабот.НомерПакета   = НомерПакета;
	
	МенеджерИнформацияОПакетахАвторабот.Записать(Истина);
	
	Возврат НовыйПакет;
	
КонецФункции

// Формирует представление пакета с перечнем фаторабот для отчетов
//
// Параметры:
//  ЗаказНаряд          - ДокументСсылка.ЗаказНаряд  - заказ-наряд с пакетами работ
//  ПакетРабот          - Строка                     - идентификатор пакета
//  ПредставлениеПакета - Строка                     - представление из отчета
// 
// Возвращаемое значение:
//  Строка - представление дополненное списком авторабот
//
Функция ПредставлениеПакетаРабот(ЗаказНаряд, ПакетРабот, ПредставлениеПакета) Экспорт
	
	АвтоработыВПакете = АвтоработыПакета(ПакетРабот, ЗаказНаряд).ВыгрузитьКолонку("Авторабота");
	ШаблонПредставления = НСтр(
		"ru = '%1
		|Состав:
		|  %2'"
	);
	
	Если Не ЗначениеЗаполнено(АвтоработыВПакете) Тогда
		
		Возврат СтрШаблон(
			ШаблонПредставления,
			ПредставлениеПакета,
			Символы.НПП + Символы.НПП + НСтр("ru = 'Нет данных'")
		);
		
	КонецЕсли;
	
	РеквизитыАвторабот = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(АвтоработыВПакете, "Артикул,Наименование");
	ПредставленияАвторабот = Новый Массив();
	
	Для Каждого Авторабота Из АвтоработыВПакете Цикл
		
		РеквизитыАвтоработы = РеквизитыАвторабот.Получить(Авторабота);
		СоставПредставления = Новый Массив();
		СоставПредставления.Добавить("-");
		
		Если ЗначениеЗаполнено(РеквизитыАвтоработы.Артикул) Тогда
			
			СоставПредставления.Добавить(РеквизитыАвтоработы.Артикул);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыАвтоработы.Наименование) Тогда
			
			СоставПредставления.Добавить(РеквизитыАвтоработы.Наименование);
			
		КонецЕсли;
		
		ПредставленияАвторабот.Добавить(СтрСоединить(СоставПредставления, Символы.НПП));
		
	КонецЦикла; 
	
	Возврат СтрШаблон(
		ШаблонПредставления,
		ПредставлениеПакета,
		СтрСоединить(ПредставленияАвторабот, Символы.ПС + Символы.НПП + Символы.НПП)
	);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьНомерПоследнегоПакета(ЗаказНаряд)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказНаряд", ЗаказНаряд);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИнформацияОПакетахАвторабот.НомерПакета КАК НомерПакета
	|ИЗ
	|	РегистрСведений.ИнформацияОПакетахАвторабот КАК ИнформацияОПакетахАвторабот
	|ГДЕ
	|	ИнформацияОПакетахАвторабот.ПакетРабот В
	|			(ВЫБРАТЬ
	|				СоставПакетовРабот.ПакетРабот
	|			ИЗ
	|				РегистрСведений.СоставПакетовРабот КАК СоставПакетовРабот
	|			ГДЕ
	|				СоставПакетовРабот.ЗаказНаряд = &ЗаказНаряд)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПакета УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0].НомерПакета;
	КонецЕсли;
	
КонецФункции

#КонецОбласти


