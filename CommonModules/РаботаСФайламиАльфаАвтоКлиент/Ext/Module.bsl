// Общий модуль "Присоединенные файлы платформа (клиент)"

#Область ПрограммныйИнтерфейс

// Обработчик события возникающего на клиенте при выполнении команды "Добавить изображение".
//
// Параметры:
//  Форма - УправляемаяФорма - форма, из которой вызвана процедура.
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  Команда - КомандаФормы - Команда, которая была вызвана.
//
Процедура ДобавитьИзображение(Форма, Объект, Команда) Экспорт
	
	ПолучитьОсновнойОбъектФормы(Форма, Объект);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыЗаписиНового = ЗащищенныеФункцииКлиент.СоздатьПараметрыЗаписиНовогоОбъектаНаКлиенте();
		ПараметрыЗаписиНового.ОбновитьИзмененный = Истина;
		ПараметрыЗаписиНового.РезультатСобытия   = Форма;
		ПараметрыЗаписиНового.ОбработчикСобытия = Новый ОписаниеОповещения(
			"ДобавитьИзображениеПослеЗаписи",
			ЭтотОбъект
		);
		
		// Общие команды списка и объекта могут быть обработаны только в случае существования ссылки в базе на объект.
		Если ЗащищенныеФункцииКлиент.ЗаписатьНовыйОбъектНаКлиенте(Форма, ПараметрыЗаписиНового) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДобавитьИзображениеПослеЗаписи(Форма);
	
КонецПроцедуры

// Выполняет добавление картинки к существующему в базе объекту
// 
// Параметры:
//  Форма - УправляемаяФорма - форма, из которой вызвана процедура.
//  ДополнительныеПараметры - Неопределено - Параметр не используется, нужен для работоспособности оповещения.
Процедура ДобавитьИзображениеПослеЗаписи(Форма, ДополнительныеПараметры = Неопределено) Экспорт
	
	Фильтр = НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.tif;*.tiff;*.jpg;*.jp2;*.jpe)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.tif;*.tiff;*.jpg;*.jp2;*.jpe"
		+ "|Формат bmp(*.bmp*;*.dib)|*.bmp;*.dib"
		+ "|Формат GIF(*.gif*)|*.gif"
		+ "|Формат JPEG(*.jpeg;*.jpg;*.jp2;*.jpe)|*.jpeg;*.jpg;*.jp2;*.jpe"
		+ "|Формат PNG(*.png*)|*.png"
		+ "|Формат TIFF(*.tif;*.tiff)|*.tif;*.tiff'");
	
	Параметры = Новый Структура;
	Параметры.Вставить("ВладелецФайла", Форма.Объект.Ссылка);
	Параметры.Вставить("ИдентификаторФормы", Форма.УникальныйИдентификатор);
	Параметры.Вставить("Фильтр", Фильтр);
	Параметры.Вставить("ТипОперации", "ДобавлениеКартинки");
	Параметры.Вставить("ГруппаФайлов", Неопределено);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыРасширениеПредложено", РаботаСФайламиСлужебныйКлиент,
		Параметры);
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

// Обработчик события возникающего на клиенте при выполнении команды "Просмотреть изображение".
//
// Параметры:
//  Форма - УправляемаяФорма - форма, из которой вызвана процедура.
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//
Процедура ПросмотретьИзображение(Форма, Объект = Неопределено) Экспорт
	
	ПолучитьОсновнойОбъектФормы(Форма, Объект);
	
	Если ЗначениеЗаполнено(Объект.ФайлКартинки) ИЛИ ЗначениеЗаполнено(Форма.ТекущаяКартинка) Тогда
		
		КартинкаДляПросмотра = Объект.ФайлКартинки;
		
		Если (ЗначениеЗаполнено(КартинкаДляПросмотра) И ЗначениеЗаполнено(Форма.ТекущаяКартинка)
			И НЕ Форма.ТекущаяКартинка = КартинкаДляПросмотра) ИЛИ НЕ ЗначениеЗаполнено(КартинкаДляПросмотра) Тогда
			КартинкаДляПросмотра = Форма.ТекущаяКартинка;
		КонецЕсли;
		
		РаботаСФайламиКлиент.ОткрытьФайл(
			РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайла(
				КартинкаДляПросмотра,
				Форма.УникальныйИдентификатор));
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Отсутствует изображение для просмотра'"));
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего на клиенте при нажатии реквизита "АдресКартинки".
//
// Параметры:
//  Форма - УправляемаяФорма - форма, из которой вызвана процедура.
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  СтандартнаяОбработка - Булево - Стандартная обработка процедуры.
//
Процедура АдресКартинкиНажатие(Форма, СтандартнаяОбработка, Объект = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПолучитьОсновнойОбъектФормы(Форма, Объект);
	
	Форма.ЗаблокироватьДанныеФормыДляРедактирования();
	Если НЕ ЗначениеЗаполнено(Объект.ФайлКартинки) И НЕ ЗначениеЗаполнено(Форма.ТекущаяКартинка) Тогда
		ДобавитьИзображение(Форма, Объект, Форма.Команды.Найти("ДобавитьИзображение"));
	Иначе
		ПросмотретьИзображение(Форма);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего на клиенте во всех формах при вызове метода Оповестить в контексте сервера.
//
// Параметры:
//  Форма				- УправляемаяФорма - Форма, в которой возникло событие.
//  ИмяСобытия			- Строка           - Имя, идентифицирующее событие.
//  Параметр			- Структура        - Набор параметров, использующихся при выполнения операции.
//  Источник			- ДанныеФормыСтруктура	- Объект, для которого выполняется обработка события.
//
Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если
		ИмяСобытия = "Запись_Файл"
		И Параметр.Свойство("ДополнительныеПараметры")
		И ПолучитьЗначениеПараметраСтруктуры(Параметр.ДополнительныеПараметры, "ВладелецФайла") = Форма.Объект.Ссылка
	Тогда
		
		Если
			Параметр.Свойство("ДополнительныеПараметры")
			И ПолучитьЗначениеПараметраСтруктуры(Параметр.ДополнительныеПараметры, "ТипОперации") = "ДобавлениеКартинки"
			И Источник <> Неопределено
		Тогда
			
			ПараметрыДействия = Новый Структура;
			ПараметрыДействия.Вставить("НоваяКартинкаОписания", ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник));
			Обработчик = Новый ОписаниеОповещения("Подключаемый_РаботаСФайламиАльфаАвтоОбработкаОповещения", Форма);
			ВыполнитьОбработкуОповещения(Обработчик, ПараметрыДействия);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает признак принадлежности файла к допустимым изображениям
//
// Параметры:
//  Файл - ОпределяемыйТип.ПрисоединенныйФайл - ссылка на элемент справочника с файлом.
//  ВыводитьСообщение - Булево - признак необходимости вывода сообщения, если файл не является допустимой картинкой
//
// Возвращаемое значение:
//  Булево - Истина, если файл является допустимым изображением
//           Ложь, в ином случае
//           Список допустимых изображений см. РаботаСФайламиАльфаАвтоВызовСервера.ЭтоФайлДопустимогоИзображения
//
Функция ФайлЯвляетсяДопустимойКартинкой(Файл, ВыводитьСообщение = Истина) Экспорт

	ЯвляетсяДопустимойКартинкой = РаботаСФайламиАльфаАвтоВызовСервера.ЭтоФайлДопустимогоИзображения(Файл);
	
	Если НЕ ЯвляетсяДопустимойКартинкой И ВыводитьСообщение Тогда
		
		ТекстСообщения = НСтр("ru = 'Выбранный файл не является картинкой, выберите другой файл.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
	Возврат ЯвляетсяДопустимойКартинкой;

КонецФункции

#КонецОбласти
