
#Область ПрограммныйИнтерфейс

// См. СозданиеНаОснованииПереопределяемый.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт
	
	// Справочники
	Объекты.Добавить(Метаданные.Справочники.Автомобили);
	Объекты.Добавить(Метаданные.Справочники.ПрочиеАктивы);
	Объекты.Добавить(Метаданные.Справочники.Марки);
	Объекты.Добавить(Метаданные.Справочники.ВидыПлановКомпании);
	Объекты.Добавить(Метаданные.Справочники.Контрагенты);

	// Документы
	Объекты.Добавить(Метаданные.Документы.ПоступлениеТоваров);
	Объекты.Добавить(Метаданные.Документы.АвансовыйОтчет);
	Объекты.Добавить(Метаданные.Документы.АктОценкиАвтомобиля);
	Объекты.Добавить(Метаданные.Документы.АктПриемаПередачиЦенныхБумаг);
	Объекты.Добавить(Метаданные.Документы.АктРазногласий);
	Объекты.Добавить(Метаданные.Документы.АктСверкиВзаиморасчетов);
	Объекты.Добавить(Метаданные.Документы.Амортизация);
	Объекты.Добавить(Метаданные.Документы.БюджетДДС);
	Объекты.Добавить(Метаданные.Документы.БюджетДоходовИРасходов);
	Объекты.Добавить(Метаданные.Документы.БюджетЗакупок);
	Объекты.Добавить(Метаданные.Документы.БюджетЗакупокАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.БюджетОказанияУслугПоАвтоработам);
	Объекты.Добавить(Метаданные.Документы.БюджетПродаж);
	Объекты.Добавить(Метаданные.Документы.БюджетПродажАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.ВводВОборотКодовМаркировки);
	Объекты.Добавить(Метаданные.Документы.ВводВЭксплуатацию);
	Объекты.Добавить(Метаданные.Документы.ВводВЭксплуатациюАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковВзаиморасчетов);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковНакопительныхСумм);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковПрочихАктивов);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковТоваров);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковТоваровВПроизводстве);
	Объекты.Добавить(Метаданные.Документы.Взаимозачет);
	Объекты.Добавить(Метаданные.Документы.ВозвратОтПокупателя);
	Объекты.Добавить(Метаданные.Документы.ВозвратОтПокупателяАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.ВозвратПоставщику);
	Объекты.Добавить(Метаданные.Документы.ВозвратПоставщикуАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.ВыводИзЭксплуатацииАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.Выписка);
	Объекты.Добавить(Метаданные.Документы.ВыплатаЗарплаты);
	Объекты.Добавить(Метаданные.Документы.ДефектовочнаяВедомость);
	Объекты.Добавить(Метаданные.Документы.ДоговорАренды);
	Объекты.Добавить(Метаданные.Документы.ЖалобаКлиента);
	Объекты.Добавить(Метаданные.Документы.ЗаказВнутренний);
	Объекты.Добавить(Метаданные.Документы.ЗаказКодовМаркировки);
	Объекты.Добавить(Метаданные.Документы.ЗаказНаАвтомобиль);
	Объекты.Добавить(Метаданные.Документы.ЗаказНаряд);
	Объекты.Добавить(Метаданные.Документы.ЗаказПокупателя);
	Объекты.Добавить(Метаданные.Документы.ЗаказПоставщику);
	Объекты.Добавить(Метаданные.Документы.ЗаказПоставщикуНаАвтомобиль);
	Объекты.Добавить(Метаданные.Документы.ЗакрытиеПериода);
	Объекты.Добавить(Метаданные.Документы.ЗакрытиеСмены);
	Объекты.Добавить(Метаданные.Документы.ЗаменаВЗаказеПокупателя);
	Объекты.Добавить(Метаданные.Документы.ЗаменаВЗаказеПоставщику);
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаАренду);
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаКомпенсациюПоМаркетинговойПрограмме);
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаРасходДС);
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаРемонт);
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаХранениеШин);
	Объекты.Добавить(Метаданные.Документы.ИзвлечениеТоваровИзПроизводства);
	Объекты.Добавить(Метаданные.Документы.ЧекКоррекции);
	Объекты.Добавить(Метаданные.Документы.ЧекНаОплату);
	Объекты.Добавить(Метаданные.Документы.Чек);
	Объекты.Добавить(Метаданные.Документы.ТестДрайв);
	Объекты.Добавить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт);
	Объекты.Добавить(Метаданные.Документы.Табель);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданный);
	Объекты.Добавить(Метаданные.Документы.СчетОтПоставщикаЗаАвтомобили);
	Объекты.Добавить(Метаданные.Документы.СчетОтПоставщика);
	Объекты.Добавить(Метаданные.Документы.СчетНаОплатуЗаАвтомобили);
	Объекты.Добавить(Метаданные.Документы.СчетНаОплату);
	Объекты.Добавить(Метаданные.Документы.СтраховойПолис);
	Объекты.Добавить(Метаданные.Документы.СписаниеТоваров);
	Объекты.Добавить(Метаданные.Документы.СписаниеКодовМаркировки);
	Объекты.Добавить(Метаданные.Документы.СписаниеАктивов);
	Объекты.Добавить(Метаданные.Документы.СписаниеАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.СнятиеРезервовЗаказовПокупателя);
	Объекты.Добавить(Метаданные.Документы.СнятиеРезервовАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.СнятиеРаспределенияЗаказовПокупателя);
	Объекты.Добавить(Метаданные.Документы.СводныйРемонтныйЗаказ);
	Объекты.Добавить(Метаданные.Документы.РезервированиеЗаказовПокупателя);
	Объекты.Добавить(Метаданные.Документы.РезервированиеАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.РеестрДокументов);
	Объекты.Добавить(Метаданные.Документы.РеализацияТоваров);
	Объекты.Добавить(Метаданные.Документы.РеализацияАктивов);
	Объекты.Добавить(Метаданные.Документы.РеализацияАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.РасходныйСкладскойОрдерНаАвтомобили);
	Объекты.Добавить(Метаданные.Документы.РасходныйСкладскойОрдер);
	Объекты.Добавить(Метаданные.Документы.РасходныйКассовыйОрдер);
	Объекты.Добавить(Метаданные.Документы.Событие);
	Объекты.Добавить(Метаданные.Документы.Рассылка);
	Объекты.Добавить(Метаданные.Документы.РаспределениеЗаказаПокупателя);
	Объекты.Добавить(Метаданные.Документы.РазукомплектацияАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.РабочийЛистОтделаСтрахования);
	Объекты.Добавить(Метаданные.Документы.Разукомплектация);
	Объекты.Добавить(Метаданные.Документы.РабочийЛистКредитногоОтдела);
	Объекты.Добавить(Метаданные.Документы.РабочийЛистВыкупаАвтомобиля);
	Объекты.Добавить(Метаданные.Документы.РабочийЛист);
	Объекты.Добавить(Метаданные.Документы.ПриходныйСкладскойОрдерНаАвтомобили);
	Объекты.Добавить(Метаданные.Документы.ПриходныйСкладскойОрдер);
	Объекты.Добавить(Метаданные.Документы.ПриходныйКассовыйОрдер);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеДопРасходов);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.ПлатежноеПоручение);
	Объекты.Добавить(Метаданные.Документы.ПланФакт);
	Объекты.Добавить(Метаданные.Документы.ПланПоступленияДС);
	Объекты.Добавить(Метаданные.Документы.ПересортицаТоваров);
	Объекты.Добавить(Метаданные.Документы.ПереразмещениеТоваров);
	Объекты.Добавить(Метаданные.Документы.ПереразмещениеАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаВалютныхСредств);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.Переоценка);
	Объекты.Добавить(Метаданные.Документы.ПереносИстории);
	Объекты.Добавить(Метаданные.Документы.ОбслуживаниеАктива);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеАктивов);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеТоваровВПроизводство);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеТоваров);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеНезавершенногоПроизводства);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеРезервов);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.Перемаркировка);
	Объекты.Добавить(Метаданные.Документы.ОтчетКомитентуЗаАвтомобили);
	Объекты.Добавить(Метаданные.Документы.ОтчетКомитенту);
	Объекты.Добавить(Метаданные.Документы.ОтчетКомиссионераЗаАвтомобили);
	Объекты.Добавить(Метаданные.Документы.ОтчетКомиссионера);
	Объекты.Добавить(Метаданные.Документы.ОптовыйЗаказКлиентаНаАвтомобили);
	Объекты.Добавить(Метаданные.Документы.ОптовыйЗаказПоставщикуНаАвтомобили);
	Объекты.Добавить(Метаданные.Документы.НачислениеЗарплаты);
	Объекты.Добавить(Метаданные.Документы.НазначениеСкидокШапки);
	Объекты.Добавить(Метаданные.Документы.НазначениеСкидокСтроки);
	Объекты.Добавить(Метаданные.Документы.НазначениеСкидокНаценокПоПрайсЛисту);
	Объекты.Добавить(Метаданные.Документы.КорректировкаСтатусовКодовМаркировки);
	Объекты.Добавить(Метаданные.Документы.КорректировкаРеализацииАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.КорректировкаРеализации);
	Объекты.Добавить(Метаданные.Документы.КорректировкаПоступленияАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.КорректировкаПоступления);
	Объекты.Добавить(Метаданные.Документы.КорректировкаОпцийАвтомобиля);
	Объекты.Добавить(Метаданные.Документы.КорректировкаКомпенсацииПоМаркетинговойПрограмме);
	Объекты.Добавить(Метаданные.Документы.КорректировкаЗаказаПоставщику);
	Объекты.Добавить(Метаданные.Документы.КорректировкаЗаказаПокупателя);
	Объекты.Добавить(Метаданные.Документы.КорректировкаДолга);
	Объекты.Добавить(Метаданные.Документы.КорректировкаДвижений);
	Объекты.Добавить(Метаданные.Документы.КорректировкаБонусов);
	Объекты.Добавить(Метаданные.Документы.Комплектация);
	Объекты.Добавить(Метаданные.Документы.Инкассация);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияОрдерногоСклада);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.Инвентаризация);
	Объекты.Добавить(Метаданные.Документы.ИзменениеЦенОпций);
	Объекты.Добавить(Метаданные.Документы.ИзменениеЦенАренды);
	Объекты.Добавить(Метаданные.Документы.ИзменениеЦенАвторабот);
	Объекты.Добавить(Метаданные.Документы.ИзменениеЦенАвтомобилей);
	Объекты.Добавить(Метаданные.Документы.ИзменениеЦен);
	Объекты.Добавить(Метаданные.Документы.ИзменениеДоговораАренды);
	Объекты.Добавить(Метаданные.Документы.ИзменениеАссортиментаПодразделения);
	Объекты.Добавить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
	
КонецПроцедуры

// Добавляет в список команд создания на основании команду создания указанного объекта.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  ОбъектМетаданных - ОбъектМетаданных - объект, для которого добавляется команда.
// 
// Возвращаемое значение:
//  СтрокаТаблицыЗначений, Неопределено - описание добавленной команды.
//
Функция ДобавитьКомандуСозданияНаОсновании(КомандыСозданияНаОсновании, ОбъектМетаданных) Экспорт
	
	Если ПравоДоступа("Добавление", ОбъектМетаданных) Тогда
		
		Результат = КомандыСозданияНаОсновании.Добавить();
		Результат.Менеджер = ОбъектМетаданных.ПолноеИмя();
		Результат.Представление = ОбщегоНазначения.ПредставлениеОбъекта(ОбъектМетаданных);
		
		Если ПраваИНастройкиПользователя.Значение("ВводНаОснованииПроведенныхДокументов", ОбъектМетаданных.Имя) Тогда
		
			Результат.РежимЗаписи = "Проводить";
			
		КонецЕсли;
		
		Возврат Результат;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает последнюю корректировку, введенную на основании переданного документа.
// Если корретировок не было  - возвращает ссылку на сам документ.
//
// Параметры:
//  Документ - ДокументСсылка - документ, для которого выполняется действие.
//
// Возвращаемое значение:
//  ДокументСсылка
//
Функция ПоследняяКорректировка(Документ) Экспорт
	
	// Получим корректировки, созданные на основании исходного документа.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", Документ);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КорректировкаРеализации.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.ДокументОснование = &ДокументОснование
	|	И КорректировкаРеализации.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	КорректировкаРеализации.ДатаОперации УБЫВ";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Документ;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат ПоследняяКорректировка(Выборка.Ссылка);
	
КонецФункции

// Возвращает данные о складах переданного документа.закрытия смены.
//
// Параметры:
//  ЗакрытиеСмены - ДокументСсылка.ЗакрытиеСмены - документ, из которого будут получены данные о складах.
//  Операция - Строка - Может принимать два значения:
//                    "Приход", применяется при получении складов для создания документов "Приходный складской ордер".
//                    "Расход", применяется при получении складов для создания документов "Расходный складской ордер".
//
// Возвращаемое значение:
//  Структура
//   * Склады - Массив - Массив из складов, полученных из документа закрытия кассовой смены,
//     переданного параметром ЗакрытиеСмены.
//        Склады выбираются по следующему алгоритму:
//          1 Если Хоз.операция в документе из параметра ЗакрытиеСмены, равна АктОРеализации, тогда выбирается один
//            склад из шапки закрытия кассовой смены, переданного параметром ЗакрытиеСмены.
//          2 Если Хоз.операция в документе из параметра ЗакрытиеСмены равна ЗакрытиеСмены, тогда:
//            2.1 Если передан параметр Операция = "Приход", тогда склады выбираются из табличной части "Возвраты"
//                из документа закрытия кассовой смены, переданного параметром ЗакрытиеСмены.
//            2.2 Если передан параметр Операция = "Расход", тогда склады выбираются из табличной части "Товары"
//                из документа закрытия кассовой смены, переданного параметром ЗакрытиеСмены.
//   * ЕстьОперации - Булево - Флаг заполненности необходимой табличной части в документе,
//     переданного параметром ЗакрытиеСмены:
//        Если передан параметр Операция = "Приход", тогда анализируется табличная часть "Возвраты"
//        Если передан параметр Операция = "Расход", тогда анализируется табличная часть "Товары"
//
Функция ДанныеОСкладахЗакрытияСмены(ЗакрытиеСмены, Операция) Экспорт

	СкладыЗакрытияСмены = Новый Массив;
	ХозОперацияОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗакрытиеСмены, "ХозОперация");

	Результат = Новый Структура();
	Результат.Вставить("Склады"      , СкладыЗакрытияСмены);
	Результат.Вставить("ЕстьОперации", Истина);
	
	Таблица = "Товары";
	
	Если Операция = "Приход" Тогда
		
		Таблица = "Возвраты";
		
	КонецЕсли;
	
	Если ЗакрытиеСмены[Таблица].Количество() = 0 Тогда
		
		Результат.ЕстьОперации = Ложь;
		Возврат Результат;
			
	КонецЕсли;
	
	Если ХозОперацияОснования = Справочники.ХозОперации.АктОРеализации Тогда
		
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗакрытиеСмены, "СкладКомпании");
		
		Если НЕ ЭтоОбычныйСклад(Склад) Тогда
			
			СкладыЗакрытияСмены.Добавить(Склад);
			
		КонецЕсли;
		
	ИначеЕсли ХозОперацияОснования = Справочники.ХозОперации.ЗакрытиеСмены Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ЗакрытиеСмены", ЗакрытиеСмены);
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗакрытиеСмены" + Таблица + ".МестоРазмещения КАК МестоРазмещения
			|ИЗ
			|	Документ.ЗакрытиеСмены." + Таблица + " КАК ЗакрытиеСмены" + Таблица + "
			|ГДЕ
			|	ЗакрытиеСмены" + Таблица + ".Ссылка = &ЗакрытиеСмены";
		
		УстановитьПривилегированныйРежим(Истина);
		РезультатЗапроса = Запрос.Выполнить();
		
		Склады = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("МестоРазмещения");
		
		Для Каждого Склад Из Склады Цикл
		
			Если НЕ ЭтоОбычныйСклад(Склад) Тогда
				
				СкладыЗакрытияСмены.Добавить(Склад);
				
			КонецЕсли;

		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Возвращает данные о страховщиках переданного документа.РабочийЛистОтделаСтрахования.
//
// Параметры:
//  РабочийЛистОтделаСтрахования - ДокументСсылка.РабочийЛистОтделаСтрахования - документ, из которого будут получены данные о страховщиках.
//
// Возвращаемое значение:
//   Страховщики - Массив - Массив из страховщиков, полученных из документа РабочийЛистОтделаСтрахования.
//
Функция ДанныеОСтраховщикахРабочийЛистОтделаСтрахования(РабочийЛистОтделаСтрахования) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РабочийЛистОтделаСтрахованияВариантыСтрахования.Страховщик КАК Страховщик
		|ИЗ
		|	Документ.РабочийЛистОтделаСтрахования.ВариантыСтрахования КАК РабочийЛистОтделаСтрахованияВариантыСтрахования
		|ГДЕ
		|	РабочийЛистОтделаСтрахованияВариантыСтрахования.Ссылка = &РабочийЛистОтделаСтрахования";
	Запрос.УстановитьПараметр("РабочийЛистОтделаСтрахования", РабочийЛистОтделаСтрахования);
		
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
		
	СтраховщикиРабочийЛистОтделаСтрахования = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Страховщик");
	
	Возврат СтраховщикиРабочийЛистОтделаСтрахования;

КонецФункции

// Возвращает данные о номерах строк вариантов страхования переданного документа.РабочийЛистОтделаСтрахования.
//
// Параметры:
//  РабочийЛистОтделаСтрахования - ДокументСсылка.РабочийЛистОтделаСтрахования - документ, из которого будут получены данные о вариантах страхования.
//
// Возвращаемое значение:
//   ВариантыСтрахования - Массив - Массив из номеров строк вариантов страхования, полученных из документа РабочийЛистОтделаСтрахования.
//
Функция ДанныеОВариантахСтрахованияРабочийЛистОтделаСтрахования(РабочийЛистОтделаСтрахования) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РабочийЛистОтделаСтрахованияВариантыСтрахования.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Документ.РабочийЛистОтделаСтрахования.ВариантыСтрахования КАК РабочийЛистОтделаСтрахованияВариантыСтрахования
		|ГДЕ
		|	РабочийЛистОтделаСтрахованияВариантыСтрахования.Ссылка = &РабочийЛистОтделаСтрахования
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Запрос.УстановитьПараметр("РабочийЛистОтделаСтрахования", РабочийЛистОтделаСтрахования);
		
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
		
	ВариантыСтрахованияРабочийЛистОтделаСтрахования = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("НомерСтроки");
	
	Возврат ВариантыСтрахованияРабочийЛистОтделаСтрахования;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоОбычныйСклад(СкладКомпании)
	
	ОбычныйСклад = Ложь;
	
	Если ТипЗнч(СкладКомпании) <> Тип("СправочникСсылка.ПодразделенияКомпании")
		И (СкладКомпании.ВидСклада <> Перечисления.ВидыСкладов.Ордерный)
		И (СкладКомпании.ВидСклада <> Перечисления.ВидыСкладов.ОрдерныйЯчеистый) Тогда
		
		ОбычныйСклад = Истина;
		
	КонецЕсли;
	
	Возврат ОбычныйСклад;
	
КонецФункции

#КонецОбласти

