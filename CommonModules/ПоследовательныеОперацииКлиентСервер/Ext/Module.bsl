// Общий модуль "Последовательные операции (клиент/сервер)"


#Область ПрограммныйИнтерфейс

// Новый объект описывающий выбор ссылки для последовательных операций.
// Содержит поля ожидаемые обработчиком ПоследовательныеОперацииКлиент.ВыполнитьПоследовательно.
// Заполненный объект можно добавлять в коллекцию последовательных операций.
//
// Например:
// ВыборКонтрагента = ПоследовательныеОперацииКлиентСервер.НовыйВыборСсылки();
// ВыборКонтрагента.ВыборСсылки = "Справочник.Контрагенты.ФормаСписка";
// ВыборКонтрагента.Обязательный = Истина;
// ВыборКонтрагента.ТекстОтменыВвода = НСтр("ru = 'Необходимо выбрать контрагента.'");
// 
// Команда = ЗаполнениеОбъектовАльфаАвто.ДобавитьКоманду(КомандыЗаполнения);
// Команда.Представление	= НСтр("ru = 'Заполнить заказами контрагента'");
// Команда.Идентификатор	= "ТоварыЗаполнитьЗаказамиКонтрагента";
// Команда.ДополнительныеПараметры.ПоследовательныеОперации.Вставить("Контрагент", ВыборКонтрагента);
//
// Возвращаемое значение:
//  Структура - с полями:
//   * ВыборСсылки 			- Строка
//   * Параметры 			- Булево
//   * Владелец          	- Неопределено
//   * Обязательный         - Булево
//   * ТекстОтменыВвода     - Строка
//   * Результат            - Неопределено
//   * Пропустить           - Булево
//   * ОбработчикСобытия    - Неопределено
//
Функция НовыйВыборСсылки() Экспорт

	Результат = Новый Структура();
	Результат.Вставить("ВыборСсылки", "");
	Результат.Вставить("Параметры", Новый Структура("РежимВыбора", Истина));
	Результат.Вставить("Владелец", Неопределено);
	Результат.Вставить("Обязательный", Ложь);
	Результат.Вставить("ТекстОтменыВвода", "");
	Результат.Вставить("Результат", Неопределено);
	Результат.Вставить("Пропустить", Ложь);
	Результат.Вставить("ОбработчикСобытия", Неопределено);
	Возврат Результат;
	
КонецФункции

// Добавление вопроса в коллекцию операций.
//
// Параметры:
//  КоллекцияОпераций - Структура          - Список последовательных операций.
//  ИмяОперации       - Строка             - Имя текущей операции.
//  Текст             - Строка             - Текст вопроса.
//  Кнопки            - СписокЗначений     - Список доступных ответов на вопрос.
//  Обязательный      - Булево             - Признак обязательного ответа на вопрос.
//  ТекстОтменыВвода  - Строка             - Текст отмены ввода.
//  ОбработчикСобытия - ОписаниеОповещения - Обработчик результата ответа пользователя на вопрос.
//
Процедура ДобавитьВопрос(КоллекцияОпераций, ИмяОперации, Текст, Кнопки, Обязательный = Ложь, ТекстОтменыВвода = "", 
					ОбработчикСобытия = Неопределено) Экспорт
	
	ПараметрыОперации = Новый Структура();
	ПараметрыОперации.Вставить("Вопрос",            Текст);
	ПараметрыОперации.Вставить("Кнопки",            Кнопки);
	
	ПараметрыОперации.Вставить("Обязательный",      Обязательный);
	ПараметрыОперации.Вставить("ТекстОтменыВвода",  ТекстОтменыВвода);
	ПараметрыОперации.Вставить("Результат",         Неопределено);
	ПараметрыОперации.Вставить("Пропустить",        ЛОЖЬ);
	ПараметрыОперации.Вставить("ОбработчикСобытия", ОбработчикСобытия);
	
	КоллекцияОпераций.Вставить(ИмяОперации, ПараметрыОперации);
	
КонецПроцедуры // ДобавитьВопрос()

// Добавление вопроса вида "ДА-НЕТ" в коллекцию операций.
//
// Параметры:
//  КоллекцияОпераций - Структура          - Список последовательных операций.
//  ИмяОперации       - Строка             - Имя текущей операции.
//  Текст             - Строка             - Текст вопроса.
//  Обязательный      - Булево             - Признак обязательного ответа на вопрос.
//  ТекстОтменыВвода  - Строка             - Текст отмены ввода.
//  ОбработчикСобытия - ОписаниеОповещения - Обработчик результата ответа пользователя на вопрос.
//
Процедура ДобавитьВопросДаНет(КоллекцияОпераций, ИмяОперации, Текст, Обязательный = Ложь, ТекстОтменыВвода = "", 
					ОбработчикСобытия = Неопределено) Экспорт
	
	ПараметрыОперации = Новый Структура();
	ПараметрыОперации.Вставить("ВопросДаНет",       Текст);
	
	ПараметрыОперации.Вставить("Обязательный",      Обязательный);
	ПараметрыОперации.Вставить("ТекстОтменыВвода",  ТекстОтменыВвода);
	ПараметрыОперации.Вставить("Результат",         Неопределено);
	ПараметрыОперации.Вставить("Пропустить",        ЛОЖЬ);
	ПараметрыОперации.Вставить("ОбработчикСобытия", ОбработчикСобытия);
	
	КоллекцияОпераций.Вставить(ИмяОперации, ПараметрыОперации);
	
КонецПроцедуры // ДобавитьВопросДаНет()

// Возвращает структуру параметров последовательной операции "Ввод даты" по умолчанию.
// 
// Возвращаемое значение:
//  Структура - структура параметров по умолчанию:
//    * ВводДаты - Строка - заголовок,
//    * Дата - Дата - начальное значение,
//    * ЧастьДаты - ЧастиДаты, Неопределено - определяет набор вариантов использования
//                                            значений типа Дата,
//    * Обязательный - Булево - признак выполнения операции,
//    * ТекстОтменыВвода - Строка - текст сообщения, выдаваемого при отмене,
//    * Результат - Дата - результат выполнения операции,
//    * Пропустить - Булево - по умолчанию ЛОЖЬ,
//    * ОбработчикСобытия - ОписаниеОповещения - обработчик события ввода.
//
Функция СоздатьПараметрыОперацииВводДаты() Экспорт
	
	ПараметрыОперации = Новый Структура();
	ПараметрыОперации.Вставить("ВводДаты",          "");
	ПараметрыОперации.Вставить("Дата",              '00010101');
	ПараметрыОперации.Вставить("ЧастьДаты",         ЧастиДаты.Дата);
	ПараметрыОперации.Вставить("Обязательный",      Ложь);
	ПараметрыОперации.Вставить("ТекстОтменыВвода",  "");
	ПараметрыОперации.Вставить("Результат",         Неопределено);
	ПараметрыОперации.Вставить("Пропустить",        ЛОЖЬ);
	ПараметрыОперации.Вставить("ОбработчикСобытия", Неопределено);
	
	Возврат ПараметрыОперации;
	
КонецФункции // СоздатьПараметрыОперацииВводДаты()

// Возвращает структуру параметров последовательной операции "Ввод числа" по умолчанию.
// 
// Возвращаемое значение:
//  Структура - структура параметров по умолчанию:
//    * ВводЧисла - Строка - заголовок,
//    * Длина - Число - разрядность числа,
//    * Точность - Число - количество знаков после запятой,
//    * Обязательный - Булево - признак выполнения операции,
//    * ТекстОтменыВвода - Строка - текст сообщения, выдаваемого при отмене,
//    * Результат - Число - результат выполнения операции,
//    * Пропустить - Булево - по умолчанию ЛОЖЬ,
//    * ОбработчикСобытия - ОписаниеОповещения - обработчик события ввода.
//
Функция СоздатьПараметрыОперацииВводЧисла() Экспорт
	
	ПараметрыОперации = Новый Структура();
	ПараметрыОперации.Вставить("ВводЧисла",         "");
	ПараметрыОперации.Вставить("Длина",             15);
	ПараметрыОперации.Вставить("Точность",          2);
	ПараметрыОперации.Вставить("Обязательный",      Ложь);
	ПараметрыОперации.Вставить("ТекстОтменыВвода",  "");
	ПараметрыОперации.Вставить("Результат",         Неопределено);
	ПараметрыОперации.Вставить("Пропустить",        ЛОЖЬ);
	ПараметрыОперации.Вставить("ОбработчикСобытия", Неопределено);
	
	Возврат ПараметрыОперации;
	
КонецФункции // СоздатьПараметрыОперацииВводЧисла()

// Добавление операции в коллекцию операций.
//
// Параметры:
//  КоллекцияОпераций - Структура          - Список последовательных операций.
//  ИмяОперации       - Строка             - Имя текущей операции.
//  ИмяОбработчика    - Строка             - Имя обработчика операции.
//  Обязательный      - Булево             - Признак обязательного ответа на вопрос.
//  Параметры         - Структура          - Дополнительные параметры.
//  ТекстОтменыВвода  - Строка             - Текст отмены ввода.
//  ОбработчикСобытия - ОписаниеОповещения - Обработчик результата операции
//
Процедура ДобавитьОперацию(
	КоллекцияОпераций,
	ИмяОперации,
	ИмяОбработчика,
	Обязательный,
	Параметры=Неопределено,
	ТекстОтменыВвода="",
	ОбработчикСобытия=Неопределено) Экспорт
	
	ПараметрыОперации = Новый Структура();
	ПараметрыОперации.Вставить("Обработчик",        ИмяОбработчика);
	ПараметрыОперации.Вставить("Параметры",         Параметры);
	
	ПараметрыОперации.Вставить("Обязательный",      Обязательный);
	ПараметрыОперации.Вставить("ТекстОтменыВвода",  ТекстОтменыВвода);
	ПараметрыОперации.Вставить("Результат",         Неопределено);
	ПараметрыОперации.Вставить("Пропустить",        Ложь);
	ПараметрыОперации.Вставить("ОбработчикСобытия", ОбработчикСобытия);
	
	КоллекцияОпераций.Вставить(ИмяОперации, ПараметрыОперации);
	
КонецПроцедуры // ДобавитьОперацию()

// Добавить выбор из списка в коллекцию операций.
//
// Параметры:
//  КоллекцияОпераций - Структура          - Список последовательных операций.
//  ИмяОперации       - Строка             - Имя текущей операции.
//  Список            - СписокЗначений     - Список для выбора.
//  Обязательный      - Булево             - Признак обязательного ответа на вопрос.
//  Заголовок         - Строка             - Заголовок формы выбора.
//  ТекстОтменыВвода  - Строка             - Текст отмены ввода.
//  ОбработчикСобытия - ОписаниеОповещения - Обработчик результата выбора из списка.
//
Процедура ДобавитьВыборИзСписка(
	КоллекцияОпераций,
	ИмяОперации, Список,
	Обязательный, Заголовок="",
	ТекстОтменыВвода="",
	ОбработчикСобытия=Неопределено) Экспорт
	
	ПараметрыОперации = Новый Структура();
	
	ПараметрыОперации.Вставить("ВыборИзСписка",     Список);
	ПараметрыОперации.Вставить("Заголовок",         Заголовок);
	
	ПараметрыОперации.Вставить("Обязательный",      Обязательный);
	ПараметрыОперации.Вставить("ТекстОтменыВвода",  ТекстОтменыВвода);
	ПараметрыОперации.Вставить("Результат",         Неопределено);
	ПараметрыОперации.Вставить("Пропустить",        Ложь);
	ПараметрыОперации.Вставить("ОбработчикСобытия", ОбработчикСобытия);
	
	КоллекцияОпераций.Вставить(ИмяОперации, ПараметрыОперации);
	
КонецПроцедуры // ДобавитьВыборИзСписка()

#Область ПрограммныйИнтерфейс

// Устарела. см. ПоследовательныеОперацииКлиентСервер.НовыйВыборСсылки
// Добавление выбора ссылки в коллекцию операций.
//
// Параметры:
//  КоллекцияОпераций - Структура          - Список последовательных операций.
//  ИмяОперации       - Строка             - Имя текущей операции.
//  ИмяФормы          - Строка             - Имя формы выбора ссылки.
//  Параметры         - Структура          - Дополнительные параметры открытия формы выбора ссылки.
//  Владелец          - УправляемаяФорма   - Установка формы владельцем.
//  Обязательный      - Булево             - Признак обязательного ответа на вопрос.
//  ТекстОтменыВвода  - Строка             - Текст отмены ввода.
//  ОбработчикСобытия - ОписаниеОповещения - Обработчик результата выбора ссылки.
//
Процедура ДобавитьВыборСсылки(
	КоллекцияОпераций,
	ИмяОперации, ИмяФормы,
	Параметры=Неопределено,
	Владелец=Неопределено, Обязательный=Ложь,
	ТекстОтменыВвода="",
	ОбработчикСобытия=Неопределено) Экспорт
	
	ПараметрыОперации = Новый Структура();
	ПараметрыОперации.Вставить("ВыборСсылки",       ИмяФормы);
	ПараметрыОперации.Вставить("Параметры",         ?(Параметры=Неопределено, Новый Структура("РежимВыбора", Истина), Параметры));
	ПараметрыОперации.Вставить("Владелец",          Владелец);
	
	ПараметрыОперации.Вставить("Обязательный",      Обязательный);
	ПараметрыОперации.Вставить("ТекстОтменыВвода",  ТекстОтменыВвода);
	ПараметрыОперации.Вставить("Результат",         Неопределено);
	ПараметрыОперации.Вставить("Пропустить",        Ложь);
	ПараметрыОперации.Вставить("ОбработчикСобытия", ОбработчикСобытия);
	
	КоллекцияОпераций.Вставить(ИмяОперации, ПараметрыОперации);
	
КонецПроцедуры // ДобавитьВыборСсылки()

#КонецОбласти

#КонецОбласти