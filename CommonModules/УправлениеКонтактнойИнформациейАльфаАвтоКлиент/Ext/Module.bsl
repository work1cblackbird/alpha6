#Область ПрограммныйИнтерфейс

// Возвращает параметры редактирования
//
//  Возвращаемое значение:
//   Структура - параметры редактирования 
// 
Функция НовыеПараметрыРедактирования() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ЭтоНовый", Ложь);
	Результат.Вставить("ТолькоПросмотр", Ложь);
	Результат.Вставить("ПоказыватьКомментарий", Ложь);
	Результат.Вставить("ПутьКДанным", "Объект.ПредставлениеТелефона");
	Результат.Вставить("Обработчик", Неопределено);
	Результат.Вставить("ВидКонтактнойИнформации",
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента"));
	Возврат Результат;
	
КонецФункции

// Начало редактирования контактной информации
//
// Параметры:
//  Форма - ФормаКлиенскогоПриложения - 
//  ПредставлениеТелефона - Строка -
//  ПараметрыРедактирования - Структура -
//
Процедура НачатьРедактированиеКонтактнойИнформации(Форма, ПредставлениеТелефона, ПараметрыРедактирования) Экспорт
	
	ПараметрыОткрытияФормы = Новый Структура(
		"ВидКонтактнойИнформации,
		|Представление,
		|ЗначенияПолей,
		|ЭтоНовый,
		|ТолькоПросмотр,
		|ПоказыватьКомментарий"
	);
	ЗаполнитьЗначенияСвойств(ПараметрыОткрытияФормы, ПараметрыРедактирования);
	ПараметрыОткрытияФормы.Представление = ПредставлениеТелефона;
	ПараметрыОткрытияФормы.ЗначенияПолей =
		УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияПоПредставлению(
			ПараметрыОткрытияФормы.Представление,
			ПараметрыОткрытияФормы.ВидКонтактнойИнформации,
			"");
	
	Обработчик = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыРедактирования, "Обработчик");
	
	Если Обработчик = Неопределено Тогда
		
		ПараметрыОбработчика = Новый Структура("Форма,ПутьКДанным", Форма, ПараметрыРедактирования.ПутьКДанным);
		Обработчик = Новый ОписаниеОповещения(
			"РедактированиеКонтактнойИнформацииЗаверщение",
			ЭтотОбъект,
			ПараметрыОбработчика
		);
		
	КонецЕсли;
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытияФормы,, Обработчик);
	
КонецПроцедуры

// Функция убирает лишние символы и разделители из строки с номером телефона
// 
// Параметры:
//  Телефон - Строка - Номер телефона;
//  ПараметрыОбработки - Структура, Неопределено - Настройки обработки номера:
//  * ОставитьПлюс - Булево - в номере телефона остается плюс; По умолчанию Ложь;
//  * ЗаменятьПервуюЦифруНаКодРоссии - Булево - заменим первую цифру на 7 если первая была 8; По умолчанию Истина;
//
// Возвращаемое значение:
//	Строка - Номер телефона после обработки.
//
Функция УбратьЛишниеСимволыТелефона(Телефон, ПараметрыОбработки = Ложь) Экспорт
	
	// Убираем все ненужные символы
	ДлинаНомера = СтрДлина(Телефон);
	НовыйТелефон = "";
	
	ОставитьПлюс = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОбработки, "ОставитьПлюс", Ложь);
	ЗаменятьПервуюЦифруНаКодРоссии = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОбработки,
		"ЗаменятьПервуюЦифруНаКодРоссии", Истина);
	
	Для Сч = 1 По ДлинаНомера Цикл
		
		Символ = Сред(Телефон, Сч, 1);
		КодСимвола = КодСимвола(Символ);
		
		Если КодСимвола < 58 И КодСимвола > 47 Тогда
			
			НовыйТелефон = НовыйТелефон + Символ;
			
		ИначеЕсли ОставитьПлюс И Символ = "+" Тогда
			
			НовыйТелефон = НовыйТелефон + Символ;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ПустаяСтрока(НовыйТелефон) И ЗаменятьПервуюЦифруНаКодРоссии Тогда
		
		Если СтрДлина(НовыйТелефон) > 7 Тогда
			
			Если Лев(НовыйТелефон, 1) = "8" Тогда
				
				НовыйТелефон = "7" + Сред(НовыйТелефон, 2, СтрДлина(НовыйТелефон));
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НовыйТелефон;
	
КонецФункции

// Форматирует переданный номер телефона по маске
//
// Параметры:
//  Телефон - Строка - телефон для форматирования;
//  Маска - Строка - маска для форматирования телефона;
// 
// Возвращаемое значение:
//  Строка
//
Функция ТелефонПоМаске(Знач Телефон, Маска) Экспорт
	
	ОставитьПлюс = СтрНачинаетсяС(Маска, "+") Или СтрНачинаетсяС(Маска, "#");
	ТелефонТолькоЦифры = УбратьЛишниеСимволыТелефона(
		Телефон,
		Новый Структура("ОставитьПлюс,ЗаменятьПервуюЦифруНаКодРоссии", ОставитьПлюс, Ложь)
	);
	ЧислоНесовпадений = 0;
	Результат = "";
	
	Для Индекс = 1 По СтрДлина(Маска) Цикл
		
		ПроверяемыйСимвол = Сред(Маска, Индекс, 1);
		
		Если
			ПроверяемыйСимвол = Сред(ТелефонТолькоЦифры, Индекс - ЧислоНесовпадений, 1)
			Или ПроверяемыйСимвол = "9"
			Или ПроверяемыйСимвол = "#"
			Или ПроверяемыйСимвол = "N"
			Или ПроверяемыйСимвол = "U"
			Или ПроверяемыйСимвол = "X"
			Или ПроверяемыйСимвол = "h"
			Или ПроверяемыйСимвол = "@"
		Тогда
			
			Результат = Результат + Сред(ТелефонТолькоЦифры, Индекс - ЧислоНесовпадений, 1);
			
		ИначеЕсли ПроверяемыйСимвол <> Сред(ТелефонТолькоЦифры, Индекс - ЧислоНесовпадений, 1) Тогда
			
			Результат = Результат + ПроверяемыйСимвол;
			ЧислоНесовпадений = ЧислоНесовпадений + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		Возврат Результат;
		
	КонецЕсли;
	
	Возврат Телефон;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура РедактированиеКонтактнойИнформацииЗаверщение(Знач РезультатЗакрытия, Знач ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) <> Тип("Структура") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПутьКДанным = ДополнительныеПараметры.ПутьКДанным;
	Форма       = ДополнительныеПараметры.Форма;
	
	ТекстПредставления = РезультатЗакрытия.Представление;
	ТекущееЗначение    = Форма;
	
	ЧастиПути = СтрЗаменить(ПутьКДанным, ".", Символы.ПС);
	КоличествоЧастей = СтрЧислоСтрок(ЧастиПути);
	
	Для Позиция = 1 По КоличествоЧастей - 1 Цикл
		
		ИмяРеквизита     = СтрПолучитьСтроку(ЧастиПути, Позиция);
		ТекущееЗначение  = ТекущееЗначение[ИмяРеквизита];
		
	КонецЦикла;
	
	ИмяРеквизита = СтрПолучитьСтроку(ЧастиПути, КоличествоЧастей);
	ТекущееЗначение[ИмяРеквизита] = ТекстПредставления;
	
	Оповестить("ВыборТелефона", , Форма);
	
КонецПроцедуры

#КонецОбласти