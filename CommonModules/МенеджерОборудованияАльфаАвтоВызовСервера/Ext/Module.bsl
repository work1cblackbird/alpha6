
#Область ПрограммныйИнтерфейс

// Возвращает параметры получения идентификатора рабочего места
//
// Возвращаемое значение:
//
//  Структура -
//
Функция ПараметрыПолученияИдентификатораРабочегоМеста() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Константы.ПараметрыПолученияИдентификатораРабочегоМеста.Получить().Получить();
	
	Если Результат = Неопределено Тогда
		
		Результат = Новый Структура();
		Результат.Вставить(
			"РежимПоиска",
			МенеджерОборудованияАльфаАвтоКлиентСервер.РежимыПоискаИдентификатораКлиента().ИдентификаторКлиента
		);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает рабочие места по наменованию
//
// Параметры: 
//  Наименование - наименование рабочего места
//
// Возвращаемое значение:
//  ТаблицаЗначений -  перечень кодов рабочих мест по наименованию
//
Функция НайтиРабочиеМестаПоИмени(Наименование) Экспорт
		
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РабочиеМеста.Код КАК Код
		|ИЗ
		|	Справочник.РабочиеМеста КАК РабочиеМеста
		|ГДЕ
		|	РабочиеМеста.Наименование = &Наименование
		|	И РабочиеМеста.ПометкаУдаления = ЛОЖЬ"
	);
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	
КонецФункции

// Получить код типа маркировки
// 
// Параметры:
//  ТипМаркировки - СправочникСсылка.ТипыМаркировки - Маркировка получения.
//
// Возвращаемое значение:
//  Число - код типа маркировки в десятичной системе счисления
//
Функция КодТипаМаркировки(ТипМаркировки) Экспорт
	
	Возврат МенеджерОборудованияАльфаАвтоПовтИсп.КодТипаМаркировки(ТипМаркировки);
	
КонецФункции // КодТипаМаркировки()

// Получить тип маркировки по коду
// 
// Параметры:
//  КодТипаМаркировки - Число - Код для получения маркировки.
//
// Возвращаемое значение:
//  СправочникСсылка.ТипыМаркировки - Ссылка на тип маркировки
//
Функция ТипМаркировкиПоКоду(КодТипаМаркировки) Экспорт
	
	Возврат МенеджерОборудованияАльфаАвтоПовтИсп.ТипМаркировкиПоКоду(КодТипаМаркировки);
	
КонецФункции // ТипМаркировкиПоКоду()

// Для внутреннего использования
// По фискальному устройству определяет статус смены и проверяет ее активность.
//
// Параметры:
//  ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - фискальное устройство, 
//  							для которого требуется определить активность смены
//
// Возвращаемое значение:
//  Структура - статус смены
// 
Функция ПолучитьСтатусПоследнейСмены(ИдентификаторУстройства) Экспорт
	
	МодульКассовыеСмены = ОбщегоНазначения.ОбщийМодуль("КассовыеСмены");
	Возврат МодульКассовыеСмены.СтатусПоследнейСмены(ИдентификаторУстройства);
	
КонецФункции

// Возвращает Истина, если есть подключенный эквайринговый терминал на текущем рабочем местес установленным
// флагом Используется.
//
Функция ЕстьЭквайринговыйТерминал() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РабочееМесто", МенеджерОборудованияВызовСервера.РабочееМестоКлиента());
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПодключаемоеОборудование.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.РабочееМесто = &РабочееМесто
	|	И НЕ ПодключаемоеОборудование.ПометкаУдаления
	|	И ПодключаемоеОборудование.УстройствоИспользуется
	|	И ПодключаемоеОборудование.ТипОборудования = ЗНАЧЕНИЕ(Перечисление.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал)";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти