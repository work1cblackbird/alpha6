// @strict-types

#Если Не ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  ОбъектыУчетаДокумента - См. Документ.ЭлектронныйДокументВходящийЭДО.Форма.ФормаПросмотраЛегкийИнтерфейс.ОбъектыУчетаДокумента
//  СпособыОбработки - См. Документ.ЭлектронныйДокументВходящийЭДО.Форма.ФормаПросмотраЛегкийИнтерфейс.СпособыОбработкиОсновные
//
// Возвращаемое значение:
//  Булево
Функция ЕстьОтражениеВОбъектУчетаКарточкиДокумента(ОбъектыУчетаДокумента, СпособыОбработки) Экспорт

	Результат = Ложь;

	Для Каждого ОбъектУчетаДокумента Из ОбъектыУчетаДокумента Цикл
		ОтраженныйОбъектУчета = СпособыОбработки.НайтиПоЗначению(ОбъектУчетаДокумента.СпособОбработки);
		Если ОтраженныйОбъектУчета <> Неопределено Тогда
			Результат = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции

#Область ПредставлениеКоманд

// Параметры:
//  ПакетСоставной - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеКомандыПодписать(ПакетСоставной) Экспорт
	
	Если ПакетСоставной Тогда
		Возврат НСтр("ru = 'Подписать пакет'");
	Иначе
		Возврат НСтр("ru = 'Подписать'");
	КонецЕсли;
	
КонецФункции

// Параметры:
//  ПакетСоставной - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеКомандыОтправить(ПакетСоставной) Экспорт
	
	Если ПакетСоставной Тогда
		Возврат НСтр("ru = 'Отправить пакет'");
	Иначе
		Возврат НСтр("ru = 'Отправить'");
	КонецЕсли;
	
КонецФункции

// Параметры:
//  ПакетСоставной - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеКомандыПринятьАннулирование(ПакетСоставной) Экспорт
	
	Если ПакетСоставной Тогда
		Возврат НСтр("ru = 'Подтвердить аннулирование пакета'");
	Иначе
		Возврат НСтр("ru = 'Подтвердить аннулирование'");
	КонецЕсли;
	
КонецФункции

// Параметры:
//  ПакетСоставной - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеКомандыОтклонитьАннулирование(ПакетСоставной) Экспорт
	
	Если ПакетСоставной Тогда
		Возврат НСтр("ru = 'Отклонить аннулирование пакета'");
	Иначе
		Возврат НСтр("ru = 'Отклонить аннулирование'");
	КонецЕсли;

КонецФункции

// Параметры:
//  ПакетСоставной - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеКомандыОтклонить(ПакетСоставной) Экспорт
	
	Если ПакетСоставной Тогда
		Возврат НСтр("ru = 'Отклонить пакет'");
	Иначе
		Возврат НСтр("ru = 'Отклонить'");
	КонецЕсли;
	
КонецФункции

// Параметры:
//  ПакетСоставной - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеКомандыУтвердить(ПакетСоставной) Экспорт
	
	Если ПакетСоставной Тогда
		Возврат НСтр("ru = 'Утвердить пакет'");
	Иначе
		Возврат НСтр("ru = 'Утвердить'");
	КонецЕсли;
	
КонецФункции

// Параметры:
//  ПакетСоставной - Булево
//  ЭтоВнутреннийВидДокумента - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеКомандыАннулировать(ПакетСоставной, ЭтоВнутреннийВидДокумента = Ложь) Экспорт
	
	Если ЭтоВнутреннийВидДокумента Тогда
		Возврат НСтр("ru = 'Аннулировать'");
	ИначеЕсли ПакетСоставной Тогда
		Возврат НСтр("ru = 'Предложить аннулировать пакет'");
	Иначе
		Возврат НСтр("ru = 'Предложить аннулировать документ'");
	КонецЕсли;
	
КонецФункции

// Параметры:
//  ПакетСоставной - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеКомандыЗакрытьПринудительно(ПакетСоставной) Экспорт
	
	Если ПакетСоставной Тогда
		Возврат НСтр("ru = 'Закрыть принудительно пакет'");
	Иначе
		Возврат НСтр("ru = 'Закрыть принудительно'");
	КонецЕсли;
	
КонецФункции

#КонецОбласти // ПредставлениеКоманд

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

#КонецЕсли // ВнешнееСоединение

