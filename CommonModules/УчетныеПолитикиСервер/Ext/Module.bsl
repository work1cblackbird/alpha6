
#Область ПрограммныйИнтерфейс

// Возвращает значение учетной политики
// 
// Параметры:
//  Политики - Массив из Строка - Имя предопределенного;
//           - ПланВидовХарактеристикСсылка.УчетныеПолитики - Учетная политика;
//  НаМомент - Дата - Дата на которую получается учетная политика. Если неопределено берется текущая дата сеанса;
//  Владелец - СправочникСсылка.Организации, СправочникСсылка.ПодразделенияКомпании, СправочникСсылка.СкладыКомпании -
//  	Владелец значения политики; 
//  РазрешеноЗначениеПоУмолчанию - Булево - Разрешено использование значений по умолчанию.
// 
// Возвращаемое значение:
//  Соответствие - Ключ - политика, значение - значение политики. 
//
Функция Значения(Политики,
                 НаМомент = Неопределено,
                 Владелец = Неопределено,
                 РазрешеноЗначениеПоУмолчанию = Истина) Экспорт
	
	Результат = Новый Соответствие();
	
	Для Каждого Политика Из Политики Цикл
		
		Результат.Вставить(Политика, Значение(Политика, НаМомент, Владелец, РазрешеноЗначениеПоУмолчанию));
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает значение учетной политики
// 
// Параметры:
//  Политика - Строка, ПланВидовХарактеристикСсылка.УчетныеПолитики - Учетная политика или имя предопределенного;
//  НаМомент - Дата - Дата на которую получается учетная политика. Если неопределено берется текущая дата сеанса;
//  Владелец - СправочникСсылка.Организации, СправочникСсылка.ПодразделенияКомпании, СправочникСсылка.СкладыКомпании -
//  	Владелец значения политики; 
//  РазрешеноЗначениеПоУмолчанию - Булево - Разрешено использование значений по умолчанию.
// 
// Возвращаемое значение:
//  Произвольный
//
Функция Значение(Знач Политика,
                 Знач НаМомент = Неопределено,
                 Владелец = Неопределено,
                 РазрешеноЗначениеПоУмолчанию = Истина) Экспорт
	
	Если НаМомент = Неопределено Тогда
		
		НаМомент = НачалоДня(ТекущаяДатаСеанса());
		
	Иначе
		
		НаМомент = НачалоДня(НаМомент);
		
	КонецЕсли;
	
	Политика = ДанныеПолитики(Политика);
	
	Если Не ЗначениеЗаполнено(Политика.Ссылка) Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	
	ВсеПолитики = ПраваИНастройкиПользователяПовтИсп.ПолучитьВсеУчетныеПолитики(Владелец, НаМомент,
		РазрешеноЗначениеПоУмолчанию);
	Результат = Неопределено;
	ВсеПолитики.Свойство(Политика.ИмяПредопределенныхДанных, Результат);
	Возврат Результат;
	
КонецФункции

// Определяет доступно ли интерактивное редактирование учетных политик. 
// 
// Возвращаемое значение:
//  Булево - Редактирование доступно
//
Функция РедактированиеДоступно() Экспорт
	
	Возврат ПравоДоступа("Просмотр", Метаданные.Обработки.НастройкаПараметровУчета);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДанныеПолитики(Политика) Экспорт
	
	Если ТипЗнч(Политика) = Тип("ПланВидовХарактеристикСсылка.УчетныеПолитики") Тогда
		
		СсылкаНаЭлемент = Политика;
		
	ИначеЕсли ТипЗнч(Политика) = Тип("Строка") Тогда
		
		СсылкаНаЭлемент = ПланыВидовХарактеристик.УчетныеПолитики[СокрЛП(Политика)];
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Неверный тип политики. Доступные типы Строка и ПланВидовХарактеристикСсылка.УчетныеПолитики'");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СсылкаНаЭлемент) Тогда
		
		Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаЭлемент,
			"Ссылка,ИмяПредопределенныхДанных,ЗначениеПоУмолчанию");
		
	КонецЕсли;
	
	Возврат Новый Структура("Ссылка, ИмяПредопределенныхДанных, ЗначениеПоУмолчанию", СсылкаНаЭлемент, "", Ложь);
	
КонецФункции

#КонецОбласти