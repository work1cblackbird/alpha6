#Область СлужебныйПрограммныйИнтерфейс

#Если Сервер Тогда

// Связывает поступление автомобилей с заказом на автомобиль
//
// Параметры:
//  Заказ    - ДокументСсылка.ЗаказНаАвтомобиль;
//  Документ - ДокументСсылка.ПоступлениеАвтомобилей;
//
Процедура СвязатьСПоступлениемАвтомобилей(Заказ, Документ) Экспорт
	
	АвтомобилиСПробегомСервер.СвязатьСПоступлениемАвтомобилей(Заказ, Документ);
	
КонецПроцедуры

// Удаляет связь поступления автомобилей со всеми заказами на автомобиль
//
// Параметры:
//  Документ - ДокументСсылка.ПоступлениеАвтомобилей;
//
Процедура СброситьСвязьСЗаказами(Документ) Экспорт
	
	АвтомобилиСПробегомСервер.СброситьСвязьСЗаказами(Документ);
	
КонецПроцедуры

// Формирует представления заказа на автомобиль отличное от типового
//
// Параметры:
//  Заказ - ДокументСсылка.ЗаказНаАвтомобиль - заказ на автомобиль
// Возвращаемое значение:
//  Строка
//
Функция ПредставлениеЗаказНаАвтомобиль(Заказ) Экспорт
	
	РеквизитыЗаказа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Заказ, "Номер,Дата");
	Возврат СтрШаблон(
		НСтр("ru = '№%1 от %2'"),
		РеквизитыЗаказа.Номер,
		Формат(РеквизитыЗаказа.Дата, НСтр("ru = 'ДФ=dd.MM.yyyy'"))
	);
	
КонецФункции

// Создает документ передачи денег с документа источника на заказ на автомобиль
//
// Параметры:
//  Источник - ДокументСсылка.ПоступлениеАвтомобилей - документ источник денег;
//  Заказ - ДокументСсылка.ЗаказНаАвтомобиль - документ заказа;
//  Сумма - Число - распределяемая сумма
//
Процедура РаспределитьДеньгиНаЗаказ(Источник, Заказ, Сумма) Экспорт
	
	АвтомобилиСПробегомСервер.РаспределитьДеньгиНаЗаказ(Источник, Заказ, Сумма);
	
КонецПроцедуры

Функция НачатьОбновлениеИнформацииОРаспределении(ИдентификаторФормы, ПараметрыПроцедуры) Экспорт
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	РезультатДлительнойОперации = ДлительныеОперации.ВыполнитьВФоне(
		"АвтомобилиСПробегомСервер.ОбновитьИнформациюОРаспределении",
		ПараметрыПроцедуры,
		ПараметрыВыполнения
	);
	Возврат РезультатДлительнойОперации;
	
КонецФункции

// Ищет связанные события с переданным документом.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.РабочийЛист, ДокументСсылка.Событие - головной документ;
//  Параметры - Структура - дополнительные параметры.
//
Процедура ПолучитьСвязанныеСобытия(Событие, Параметры) Экспорт
	
	// Сформируем список подчиненных документов и взведем признак того, что надо спросить.
	МассивДокументов = Новый Массив;
	
	ДополнительныеПараметры = Новый Структура;
	МассивДокументов = АвтомобилиСПробегомСервер.СвязанныеСобытия(Событие, ДополнительныеПараметры);
	Если МассивДокументов.Количество() Тогда
		ДополнительныеПараметры.Вставить("МассивДокументов", МассивДокументов);
		Параметры.Вставить("ОтменитьСвязанныеСобытия", ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры // ПолучитьСвязанныеСобытия()

// Перезаписывает события со статусом "Отменено".
//
// Параметры:
//  События     - Массив Из ДокументСсылка.Событие - отменяемые события;
//  Комментарий - Строка                           - часть комментария, с которым закрывается событие.
//
Процедура ОтменитьСвязанныеСобытия(События, Комментарий) Экспорт
	
	АвтомобилиСПробегомСервер.ОтменитьСвязанныеСобытия(События, Комментарий);
	
КонецПроцедуры // ОтменитьСвязанныеСобытия()

#КонецЕсли

#КонецОбласти