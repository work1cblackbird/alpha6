
#Область ПрограммныйИнтерфейс

// Процедура используется для организации последовательного исполнения набора взаимодействий с пользователем.
//
// Параметры:
//  ПараметрыВопросов - Структура - Коллекция содержащая набор вопросов и прочие параметры обработки.
//
Процедура ВыполнитьПоследовательно(ПараметрыВопросов) Экспорт
	
	Для Каждого Операция Из ПараметрыВопросов.КоллекцияОпераций Цикл
		
		Если Операция.Значение.Пропустить Тогда
			
			Продолжить;
			
		КонецЕсли;
		                            
		ВыполнитьОперацию(ПараметрыВопросов, Операция);
		Возврат; // На данном этапе работа алгоритма прерывается, продолжится после ответа пользователя.
		
	КонецЦикла;
	
	Для Каждого Операция Из ПараметрыВопросов.КоллекцияОпераций Цикл
		
		ПараметрыВопросов.КоллекцияОпераций[Операция.Ключ] = Операция.Значение.Результат;
		
	КонецЦикла;
	
	Если ПараметрыВопросов.ОбработчикСобытия <> Неопределено Тогда
		
		ВыполнитьОбработкуОповещения(ПараметрыВопросов.ОбработчикСобытия, ПараметрыВопросов);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Служебная процедура. Используется для перехвата очередного ответа пользователя.
//
// Параметры:
//  Результат         - Произвольный - Значение, которое выбрал пользователь при интерактивной обработке
//                                     ответа, который дал пользователь на очередной вопрос.
//  ПараметрыВопросов - Структура    - Коллекция содержащая набор вопросов и прочие параметры обработки.
//
Процедура ОбработчикСобытияРезультатОперации(Результат, ПараметрыВопросов) Экспорт
	
	ПараметрыОперации = ПараметрыВопросов.КоллекцияОпераций[ПараметрыВопросов.КлючТекущегоВопроса];
	
	Если ПараметрыОперации.Свойство("ВопросДаНет") Тогда
		
		ПараметрыОперации.Результат = Результат = КодВозвратаДиалога.Да;
		
	Иначе
		
		ПараметрыОперации.Результат = Результат;
		
	КонецЕсли;
	
	// Очистим владельца формы, т.к. передача формы на сервер не возможна
	Если ПараметрыОперации.Свойство("Владелец") Тогда
		
		ПараметрыОперации.Владелец = Неопределено;
		
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыОперации.ОбработчикСобытия) = Тип("ОписаниеОповещения") Тогда
		
		ВыполнитьОбработкуОповещения(ПараметрыОперации.ОбработчикСобытия, ПараметрыОперации.Результат);
		
	ИначеЕсли ТипЗнч(ПараметрыОперации.ОбработчикСобытия) = Тип("Строка") Тогда
		
		#Если НЕ ВебКлиент Тогда
			
			Выполнить(ПараметрыОперации.ОбработчикСобытия + "(ПараметрыОперации.Результат, ПараметрыВопросов)");
			
		#Иначе
			
			ОбщегоНазначенияКлиент.СообщитьПользователю (НСтр("ru='Данная операция недоступна в режиме Web-клиента.'"));
			ПараметрыОперации.Пропустить = Истина;
			Возврат;
			
		#КонецЕсли
		
	КонецЕсли;
	
	// Нужно прервать выполнение операции, пользователь отказался от обязательного шага.
	Если ПрерватьОбработку(ПараметрыОперации) Тогда
		
		Если Не ПустаяСтрока(ПараметрыОперации.ТекстОтменыВвода) Тогда
		
			ОбщегоНазначенияКлиент.СообщитьПользователю (ПараметрыОперации.ТекстОтменыВвода,,
				ПараметрыВопросов.КлючТекущегоВопроса);
			
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыОперации.Пропустить = Истина;
	ВыполнитьПоследовательно(ПараметрыВопросов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьОперацию(ПараметрыВопросов, Операция)
	
	ПараметрыОперации = Операция.Значение;
	ПараметрыВопросов.Вставить("КлючТекущегоВопроса", Операция.Ключ);
	ОбработчикСобытия = Новый ОписаниеОповещения("ОбработчикСобытияРезультатОперации", ЭтотОбъект, ПараметрыВопросов);
	
	Если ПараметрыОперации.Свойство("ВопросДаНет") Тогда
		
		ПоказатьВопрос(ОбработчикСобытия, ПараметрыОперации.ВопросДаНет, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли ПараметрыОперации.Свойство("Вопрос") Тогда
		
		ПоказатьВопрос(ОбработчикСобытия, ПараметрыОперации.Вопрос, ПараметрыОперации.Кнопки);
		
	ИначеЕсли ПараметрыОперации.Свойство("ВводДаты") Тогда
		
		ПоказатьВводДаты(ОбработчикСобытия, ПараметрыОперации.Дата, ПараметрыОперации.ВводДаты, ПараметрыОперации.ЧастьДаты);
		
	ИначеЕсли ПараметрыОперации.Свойство("ВводЧисла") Тогда
		
		Если ПараметрыОперации.Результат = Неопределено Тогда
			
			ПоказатьВводЧисла(
				ОбработчикСобытия,
				ПараметрыОперации.Результат,
				ПараметрыОперации.ВводЧисла,
				ПараметрыОперации.Длина,
				ПараметрыОперации.Точность
			);
			
		КонецЕсли;
		
	ИначеЕсли ПараметрыОперации.Свойство("ВыборСсылки") Тогда
		
		ПоказатьВыборСсылки(ПараметрыВопросов, ПараметрыОперации, ОбработчикСобытия);
		
	ИначеЕсли ПараметрыОперации.Свойство("ВыборИзСписка") Тогда
		
		ПараметрыОперации.ВыборИзСписка.ПоказатьВыборЭлемента(ОбработчикСобытия, ПараметрыОперации.Заголовок);
		
	ИначеЕсли ПараметрыОперации.Свойство("Обработчик") Тогда
		
		#Если НЕ ВебКлиент Тогда
			Выполнить(ПараметрыОперации.Обработчик + "(ПараметрыОперации.Параметры, ОбработчикСобытия)");
		#Иначе
			ВызватьИсключение Нстр("ru = 'В веб-клиенте не поддерживается выполнение обработчиков из параметров последовательных операций.'");
		#КонецЕсли
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Не верно заданы параметры последовательных операций.'");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьВыборСсылки(ПараметрыВопросов, ПараметрыОперации, ОбработчикСобытия)
	
	Если ПараметрыОперации.Параметры.Свойство("Отбор") Тогда
			
		Для Каждого ЭлементОтбора Из ПараметрыОперации.Параметры.Отбор Цикл
			
			Если
				ТипЗнч(ЭлементОтбора.Значение) = Тип("Строка")
				И ПараметрыВопросов.КоллекцияОпераций.Свойство(ЭлементОтбора.Значение)
			Тогда
				
				ПараметрыОперации.Параметры.Отбор[ЭлементОтбора.Ключ] = ПараметрыВопросов
					.КоллекцияОпераций[ЭлементОтбора.Значение].Результат;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если
		ПолучитьЗначениеПараметраСтруктуры(ПараметрыВопросов, "КлючТекущегоВопроса", "") = "ЗагрузкаИзФайла"
		И ПараметрыВопросов.Форма.Объект.Свойство("Контрагент")
	Тогда
		
		ПараметрыОперации.Параметры.Вставить("Контрагент", ПараметрыВопросов.Форма.Объект.Контрагент);
		
	КонецЕсли;
	
	РезультатОткрытия = ОткрытьФорму(
		ПараметрыОперации.ВыборСсылки,
		ПараметрыОперации.Параметры,
		ПараметрыОперации.Владелец,
		,
		,
		,
		ОбработчикСобытия,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
		
	// Так как при отказе в форме не происходит перехода в обработчик оповещения проверим форму на открытие 
	// и вызовем обработчик вручную со значением Неопределено.
	//
	// В обработчик ошибки перехода тоже не происходит.
	// Неопределено - если отказ произошел ПриСозданииНаСервере(),
	// Открыта() - если отказ произошел ПриОткрытии().
	Если РезультатОткрытия = Неопределено ИЛИ НЕ РезультатОткрытия.Открыта() Тогда
		
		ВыполнитьОбработкуОповещения(ОбработчикСобытия, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПрерватьОбработку(ПараметрыОперации)
	
	Возврат ПараметрыОперации.Обязательный И
		(ПараметрыОперации.Результат = Неопределено
			Или ПараметрыОперации.Результат = КодВозвратаДиалога.Нет
			Или ПараметрыОперации.Результат = Ложь);
	
КонецФункции

#КонецОбласти