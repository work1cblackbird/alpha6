
#Область ПрограммныйИнтерфейс

// см. ВзаимодействияПереопределяемый.ПриПоискеКонтактов
Процедура ПриПоискеКонтактов(Знач ИмяТаблицыКонтактов, ТекстЗапросаДляПоиска) Экспорт
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяТаблицыКонтактов);
	ПустаяСсылка    = МенеджерОбъекта.ПустаяСсылка();
	
	Попытка
		
		ТекстЗапросаДляПоиска = МенеджерОбъекта.ПолучитьТекстЗапросаПоКонтактам(ПустаяСсылка, "", Истина, Ложь);
		
	Исключение
		
		Параметры = Новый Структура;
		Параметры.Вставить("ТекстВременнаяТаблица", "");
		Параметры.Вставить("Объединить", Истина);
		Параметры.Вставить("ТолькоОсновныеКонтакты", Ложь);
		ТекстЗапросаДляПоиска = УправлениеДиалогомСервер.ПолучитьТекстЗапросаПоКонтактам(ПустаяСсылка, Параметры);
		
	КонецПопытки;
	
КонецПроцедуры

// см. ВзаимодействияПереопределяемый.ПриЗаполненииНаборовЗначенийДоступа
Процедура ПриЗаполненииНаборовЗначенийДоступа(Объект, Таблица) Экспорт
	
	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	ТипДокумента = ТипЗнч(Объект);
	Если ТипДокумента = Тип("ДокументОбъект.Встреча")
		ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗапланированноеВзаимодействие")
		ИЛИ ТипДокумента = Тип("ДокументОбъект.СообщениеSMS") Тогда
		
		// Ограничение по "Автор".
		НомерНабора = 1;
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = НомерНабора;
		СтрокаТаб.ЗначениеДоступа = Объект.Автор;
		
		// Ограничение по "Ответственный".
		НомерНабора = НомерНабора + 1;
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = НомерНабора;
		СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;
		
		// Ограничение по "Подразделениям".
		НомерНабора = НомерНабора + 1;
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = НомерНабора;
		СтрокаТаб.ЗначениеДоступа = Объект.ПодразделениеКомпании;
		
		// Ограничение по "Подразделениям ответственного".
		НомерНабора = НомерНабора + 1;
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = НомерНабора;
		СтрокаТаб.ЗначениеДоступа = Объект.ПодразделениеОтветственного;
		
		ТаблицаКонтактов = ?(ТипДокумента = Тип("ДокументОбъект.СообщениеSMS"), Объект.Адресаты, Объект.Участники);
		
		Для Каждого СтрокаТаблицы Из ТаблицаКонтактов Цикл
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Контрагенты")
				ИЛИ ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Пользователи")
				ИЛИ ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Сотрудники") Тогда
				
				НомерНабора = НомерНабора + 1;
				
				СтрокаТаб = Таблица.Добавить();
				СтрокаТаб.НомерНабора     = НомерНабора;
				СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;
				
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ТелефонныйЗвонок") Тогда
		
		// Ограничение по "Автор".
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = Таблица.Количество() + 1;
		СтрокаТаб.ЗначениеДоступа = Объект.Автор;
		
		// Ограничение по "Ответственный".
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = Таблица.Количество() + 1;
		СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;
		
		Если ТипЗнч(Объект.АбонентКонтакт) = Тип("СправочникСсылка.Контрагенты")
			ИЛИ ТипЗнч(Объект.АбонентКонтакт) = Тип("СправочникСсылка.Сотрудники") Тогда
			
			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = Таблица.Количество() + 1;
			СтрокаТаб.ЗначениеДоступа = Объект.АбонентКонтакт;
			
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее")
		ИЛИ ТипДокумента = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		
		НомерНабора = 1;
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = НомерНабора;
		СтрокаТаб.ЗначениеДоступа = Объект.УчетнаяЗапись;
		
	КонецЕсли;
	
КонецПроцедуры

// Получает адреса электронной почты для массива контактов.
//
// Параметры:
//  Контакты - Массив - массив ссылок на контакты.
//  ТипКИ   - ПеречислениеСсылка.ТипыКонтактнойИнформации - тип контактной информации.
//  ГруппаПолучателей - Строка - имя группы в письме для которой ищутся адреса, например "Получатели", "Получатели копий".
//
// Возвращаемое значение:
//   ТаблицаЗначений   - таблица содержащая контакты и адреса их электронной почты.
//
Функция АдресаЭлектроннойПочтыКонтактов(Контакты, ТипКИ, ГруппаПолучателей = "") Экспорт
	
	Если Контакты.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписанияКонтактов = ВзаимодействияКлиентСервер.ОписанияКонтактов();
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаКонтактнаяИнформация.Представление КАК Адрес,
		|	ТаблицаКонтакт.Ссылка КАК Контакт
		|ПОМЕСТИТЬ КонтактыАдреса
		|ИЗ
		|	Справочник.Пользователи КАК ТаблицаКонтакт
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ТаблицаКонтактнаяИнформация
		|		ПО (ТаблицаКонтактнаяИнформация.Ссылка = ТаблицаКонтакт.Ссылка)
		|			И (ТаблицаКонтактнаяИнформация.Тип = &ТипКИ)
		|ГДЕ
		|	ТаблицаКонтакт.Ссылка В(&МассивКонтактов)
		|	И НЕ ТаблицаКонтакт.Служебный
		|	И НЕ ТаблицаКонтакт.Недействителен
		|	И НЕ ТаблицаКонтакт.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаКонтактнаяИнформация.Представление,
		|	ТаблицаКонтакт.Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК ТаблицаКонтакт
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ТаблицаКонтактнаяИнформация
		|		ПО (ТаблицаКонтактнаяИнформация.Ссылка = ТаблицаКонтакт.Ссылка)
		|			И (ТаблицаКонтактнаяИнформация.Тип = &ТипКИ)
		|ГДЕ
		|	НЕ ТаблицаКонтакт.Служебный
		|	И НЕ ТаблицаКонтакт.Недействителен
		|	И НЕ ТаблицаКонтакт.ПометкаУдаления
		|	И ИСТИНА В
		|			(ВЫБРАТЬ
		|				ИСТИНА
		|			ИЗ
		|				РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
		|			ГДЕ
		|				СоставыГруппПользователей.Пользователь = ТаблицаКонтакт.Ссылка
		|				И СоставыГруппПользователей.ГруппаПользователей В (&МассивКонтактов))";
	
	Для каждого ОписаниеКонтакта Из ОписанияКонтактов Цикл
		
		Если ОписаниеКонтакта.Имя = "Пользователи" Тогда
			Продолжить;
		КонецЕсли;
			
		ТекстЗапроса =ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
		ТекстЗапроса =ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ТаблицаКонтактнаяИнформация.Представление,
		|	ТаблицаКонтакт.Ссылка
		|ИЗ
		|	&ТаблицаСправочника КАК ТаблицаКонтакт
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяТаблицаКонтактнаяИнформация КАК ТаблицаКонтактнаяИнформация
		|		ПО (ТаблицаКонтактнаяИнформация.Ссылка = ТаблицаКонтакт.Ссылка)
		|			И (ТаблицаКонтактнаяИнформация.Тип = &ТипКИ)
		|ГДЕ
		|	НЕ ТаблицаКонтакт.ПометкаУдаления
		|	И ТаблицаКонтакт.Ссылка В(&МассивКонтактов)
		|	И &УсловиеИерархический";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаСправочника", "Справочник." +ОписаниеКонтакта.Имя);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &УсловиеИерархический", ?(ОписаниеКонтакта.Иерархический," И (НЕ ТаблицаКонтакт.ЭтоГруппа)",""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицаКонтактнаяИнформация" ,"Справочник." + ОписаниеКонтакта.Имя + ".КонтактнаяИнформация");
			
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КонтактыАдреса.Контакт,
	|	ПРЕДСТАВЛЕНИЕ(КонтактыАдреса.Контакт) КАК Представление,
	|	&Группа
	|ИЗ
	|	КонтактыАдреса КАК КонтактыАдреса
	|УПОРЯДОЧИТЬ ПО
	|	Контакт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтактыАдреса.Контакт КАК Контакт,
	|	КонтактыАдреса.Адрес КАК Адрес
	|ИЗ
	|	КонтактыАдреса КАК КонтактыАдреса
	|УПОРЯДОЧИТЬ ПО
	|	Контакт
	|ИТОГИ
	|ПО
	|	Контакт
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивКонтактов", Контакты);
	Запрос.УстановитьПараметр("ТипКИ",ТипКИ);
	Запрос.УстановитьПараметр("Группа", ГруппаПолучателей);
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаРезультат = Результат[1].Выгрузить(); // ТаблицаЗначений
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	
	ТаблицаРезультат.Колонки.Добавить("Адрес", Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыСтроки(100)));
	ТаблицаРезультат.Колонки.Добавить("СписокАдресов", Новый ОписаниеТипов(МассивТипов));
	ВыборкаКонтакты = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МассивУдалить = Новый Массив;
	Для каждого СтрокаТаблицы Из ТаблицаРезультат Цикл
		ВыборкаКонтакты.Следующий();
		ВыборкаАдреса = ВыборкаКонтакты.Выбрать();
		Пока ВыборкаАдреса.Следующий() Цикл
			Если ПустаяСтрока(СтрокаТаблицы.Адрес) Тогда
				СтрокаТаблицы.Адрес = ВыборкаАдреса.Адрес;
			КонецЕсли;
			СтрокаТаблицы.СписокАдресов = СтрокаТаблицы.СписокАдресов + ?(ПустаяСтрока(СтрокаТаблицы.СписокАдресов), "", ";") + ВыборкаАдреса.Адрес;
		КонецЦикла;
		
		Если ПУстаяСтрока(СтрокаТаблицы.Адрес) Или ПустаяСтрока(СтрокаТаблицы.СписокАдресов) Тогда
			МассивУдалить.Добавить(СтрокаТаблицы);
		КонецЕсли;
			
	КонецЦикла;
	
	// Очистим пустые строки
	Для Каждого Строка Из МассивУдалить Цикл
		ТаблицаРезультат.Удалить(Строка);
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

// Обработчик события при создании на сервере на формах документов подсистемы Взаимодействия
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, для которой обрабатывается событие.
//  ЭлементРазмещения	 - ЭлементФормы - Элемент, над которым необходимо расположить поле ввода "Подразделение ответственного".
//
Процедура ПриСозданииНаСервере(Форма, ЭлементРазмещения) Экспорт
	
	// Добавим на форму поле ввода "Подразделение ответственного"
	НовыйЭлемент = Форма.Элементы.Вставить(
		"ПодразделениеОтветственного", Тип("ПолеФормы"), ЭлементРазмещения.Родитель, ЭлементРазмещения);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.ПодразделениеОтветственного";
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	НовыйЭлемент.Ширина = 32;
	НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
	
КонецПроцедуры

// Возвращает структуру параметров взаимодействия
//
// Параметры:
//  Папка       - Справочник.ПапкиЭлектронныхПисем - папка, имеет смысл для документов "Электронное письмо входящее"
//               и "Электронное письмо исходящее".
//  Предмет          - СправочникСсылка, ДокументСсылка, указывает на предмет взаимодействия.
//  Рассмотрено      - Булево - признак рассмотрения взаимодействия.
//  РассмотретьПосле - ДатаВремя - дата, до которой отложено рассмотрение взаимодействия.
//  РассчитыватьРассмотрено - Булево - признак необходимости расчета состояний папки и предмета.
//
// Возвращаемое значение:
//   Структура   - сформированная структура.
//
Функция СтруктураРеквизитовВзаимодействияДляЗаписи(Папка = Неопределено, Предмет = Неопределено, Рассмотрено = Неопределено,
	                                               РассмотретьПосле = Неопределено, РассчитыватьРассмотрено = Истина) Экспорт
	
	СтруктураВозврата = ПустаяСтруктураРеквизитыВзаимодействия();
	
	Если Папка <> Неопределено Тогда
		СтруктураВозврата.Папка = Папка;
	КонецЕсли;
	
	Если Предмет <> Неопределено Тогда
		СтруктураВозврата.Предмет = Предмет;
	КонецЕсли;
	
	Если Рассмотрено <> Неопределено Тогда
		СтруктураВозврата.Рассмотрено = Рассмотрено;
	КонецЕсли;
	
	Если РассмотретьПосле <> Неопределено Тогда
		СтруктураВозврата.РассмотретьПосле = РассмотретьПосле;
	КонецЕсли;
	СтруктураВозврата.РассчитыватьРассмотрено = РассчитыватьРассмотрено;
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Формирует пустую структуру для записи в регистр сведений ПредметыПапкиВзаимодействий.
//
//  Возвращаемое значение: 
//   Структура - структура параметров
//
Функция ПустаяСтруктураРеквизитыВзаимодействия() Экспорт

	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Предмет"                ,Неопределено);
	СтруктураВозврата.Вставить("Папка"                  ,Неопределено);
	СтруктураВозврата.Вставить("Рассмотрено"            ,Неопределено);
	СтруктураВозврата.Вставить("РассмотретьПосле"       ,Неопределено);
	СтруктураВозврата.Вставить("РассчитыватьРассмотрено",Истина);
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Обработчик события при создании на сервере на форме списка параметрической эурнала документа Взаимодействия
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, для которой обрабатывается событие.
//  ОсновнаяФормаЖурнала - Булево - Признак того, что это основная форма списка журнала.
//
Процедура ЖурналВзаимодействияПриСозданииНаСервере(Форма, ОсновнаяФормаЖурнала = Ложь) Экспорт
	
	// Уберем лишиние элементы формы
	Форма.Элементы.СписокСоздатьВстречу.Видимость = Ложь;
	Форма.Элементы.СписокСоздатьЗапланированноеВзаимодействие.Видимость = Ложь;
	
	// Установим текст запросов списков
	Если ОсновнаяФормаЖурнала Тогда
		Форма.Список.ТекстЗапроса = ТектЗапросаСпискаЖурналаВзаимодействий();
		Форма.ПредметыПанельНавигации.ТекстЗапроса = ТектЗапросаПредметыЖурналаВзаимодействий();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события при создании на сервере на форме списка документа "Сообщение SMS"
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, для которой обрабатывается событие.
//
Процедура ФормаСпискаСообщениеSMSПриСозданииНаСервере(Форма) Экспорт
	
	Если НЕ ПравоДоступа("Просмотр", Метаданные.ОбщиеФормы.ОтправкаSMS) Тогда
		Возврат;
	КонецЕсли;
	
	// Добавим команду для проверки настроек SMS
	НоваяКоманда = Форма.Команды.Добавить("ПроверитьНастройкиSMS");
	НоваяКоманда.Действие = "ПроверитьНастройкиSMS";
	НоваяКоманда.Заголовок = НСтр("ru = 'Проверить настройку'");
	НовыйЭлемент = Форма.Элементы.Добавить("ПроверитьНастройкиSMS", Тип("КнопкаФормы"), Форма.КоманднаяПанель);
	НовыйЭлемент.ИмяКоманды = "ПроверитьНастройкиSMS";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТектЗапросаСпискаЖурналаВзаимодействий()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЖурналДокументовВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.Встреча
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналДокументовВзаимодействияПереопределяемый.ПометкаУдаления
	|						ТОГДА 10
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОГДА ЖурналДокументовВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.ЗапланированноеВзаимодействие
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналДокументовВзаимодействияПереопределяемый.ПометкаУдаления
	|						ТОГДА 11
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОГДА ЖурналДокументовВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.ТелефонныйЗвонок
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналДокументовВзаимодействияПереопределяемый.ПометкаУдаления
	|						ТОГДА 12
	|					ИНАЧЕ 2
	|				КОНЕЦ
	|		КОГДА ЖурналДокументовВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.ЭлектронноеПисьмоВходящее
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналДокументовВзаимодействияПереопределяемый.ПометкаУдаления
	|						ТОГДА 13
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		КОГДА ЖурналДокументовВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.ЭлектронноеПисьмоИсходящее
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналДокументовВзаимодействияПереопределяемый.ПометкаУдаления
	|						ТОГДА 14
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ЖурналДокументовВзаимодействияПереопределяемый.СтатусИсходящегоПисьма = ЗНАЧЕНИЕ(Перечисление.СтатусыИсходящегоЭлектронногоПисьма.Черновик)
	|								ТОГДА 15
	|							КОГДА ЖурналДокументовВзаимодействияПереопределяемый.СтатусИсходящегоПисьма = ЗНАЧЕНИЕ(Перечисление.СтатусыИсходящегоЭлектронногоПисьма.Исходящее)
	|								ТОГДА 16
	|							ИНАЧЕ 4
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ЖурналДокументовВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.СообщениеSMS
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналДокументовВзаимодействияПереопределяемый.ПометкаУдаления
	|						ТОГДА 22
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ЖурналДокументовВзаимодействияПереопределяемый.СтатусИсходящегоПисьма = ЗНАЧЕНИЕ(Перечисление.СостоянияДокументаСообщениеSMS.Черновик)
	|								ТОГДА 17
	|							КОГДА ЖурналДокументовВзаимодействияПереопределяемый.СтатусИсходящегоПисьма = ЗНАЧЕНИЕ(Перечисление.СостоянияДокументаСообщениеSMS.Исходящее)
	|								ТОГДА 18
	|							КОГДА ЖурналДокументовВзаимодействияПереопределяемый.СтатусИсходящегоПисьма = ЗНАЧЕНИЕ(Перечисление.СостоянияДокументаСообщениеSMS.Доставляется)
	|								ТОГДА 19
	|							КОГДА ЖурналДокументовВзаимодействияПереопределяемый.СтатусИсходящегоПисьма = ЗНАЧЕНИЕ(Перечисление.СостоянияДокументаСообщениеSMS.ЧастичноДоставлено)
	|								ТОГДА 21
	|							КОГДА ЖурналДокументовВзаимодействияПереопределяемый.СтатусИсходящегоПисьма = ЗНАЧЕНИЕ(Перечисление.СостоянияДокументаСообщениеSMS.НеДоставлено)
	|								ТОГДА 23
	|							КОГДА ЖурналДокументовВзаимодействияПереопределяемый.СтатусИсходящегоПисьма = ЗНАЧЕНИЕ(Перечисление.СостоянияДокументаСообщениеSMS.Доставлено)
	|								ТОГДА 24
	|							ИНАЧЕ 17
	|						КОНЕЦ
	|				КОНЕЦ
	|	КОНЕЦ КАК НомерКартинки,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Ссылка КАК Ссылка,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Дата КАК Дата,
	|	ЖурналДокументовВзаимодействияПереопределяемый.ПометкаУдаления КАК ПометкаУдаления,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Номер КАК Номер,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Автор КАК Автор,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Входящий КАК Входящий,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Тема КАК Тема,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Ответственный КАК Ответственный,
	|	ЕСТЬNULL(ПредметыВзаимодействийПереопределяемый.Рассмотрено, ЛОЖЬ) КАК Рассмотрено,
	|	ЕСТЬNULL(ПредметыВзаимодействийПереопределяемый.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1)) КАК РассмотретьПосле,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Участники КАК Участники,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Тип КАК Тип,
	|	ЖурналДокументовВзаимодействияПереопределяемый.СтатусИсходящегоПисьма КАК СтатусИсходящегоПисьма,
	|	ЖурналДокументовВзаимодействияПереопределяемый.ЕстьВложения КАК ЕстьВложения,
	|	ЕСТЬNULL(ПредметыВзаимодействийПереопределяемый.Предмет, НЕОПРЕДЕЛЕНО) КАК Предмет,
	|	ТИПЗНАЧЕНИЯ(ПредметыВзаимодействийПереопределяемый.Предмет) КАК ТипПредмета,
	|	ЖурналДокументовВзаимодействияПереопределяемый.УчетнаяЗапись КАК УчетнаяЗапись,
	|	ЕСТЬNULL(ПредметыВзаимодействийПереопределяемый.ПапкаЭлектронногоПисьма, ЗНАЧЕНИЕ(Справочник.ПапкиЭлектронныхПисем.ПустаяСсылка)) КАК Папка,
	|	ЖурналДокументовВзаимодействияПереопределяемый.ПолученоОтправлено КАК ПолученоОтправлено,
	|	ВЫРАЗИТЬ(ЖурналДокументовВзаимодействияПереопределяемый.Размер / 1024 КАК ЧИСЛО(10, 2)) КАК Размер,
	|	ЖурналДокументовВзаимодействияПереопределяемый.Важность КАК Важность,
	|	ВЫБОР
	|		КОГДА ЖурналДокументовВзаимодействияПереопределяемый.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиВзаимодействия.Высокая)
	|			ТОГДА 2
	|		КОГДА ЖурналДокументовВзаимодействияПереопределяемый.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиВзаимодействия.Низкая)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ВажностьНомерКартинки
	|ИЗ
	|	ЖурналДокументов.Взаимодействия КАК ЖурналДокументовВзаимодействияПереопределяемый
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыВзаимодействийПереопределяемый
	|		ПО ЖурналДокументовВзаимодействияПереопределяемый.Ссылка = ПредметыВзаимодействийПереопределяемый.Взаимодействие
	|ГДЕ
	|	НЕ ЖурналДокументовВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.Встреча
	|	И НЕ ЖурналДокументовВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.ЗапланированноеВзаимодействие
	|{ГДЕ
	|	ЖурналДокументовВзаимодействияПереопределяемый.Ссылка КАК Поиск}";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТектЗапросаПредметыЖурналаВзаимодействий()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СостоянияПредметовВзаимодействийПереопределяемый.Предмет КАК Предмет,
	|	СостоянияПредметовВзаимодействийПереопределяемый.КоличествоНеРассмотрено КАК КоличествоНеРассмотрено,
	|	СостоянияПредметовВзаимодействийПереопределяемый.Активен КАК Активен,
	|	СостоянияПредметовВзаимодействийПереопределяемый.ДатаПоследнегоВзаимодействия КАК ДатаПоследнегоВзаимодействия,
	|	ТИПЗНАЧЕНИЯ(СостоянияПредметовВзаимодействийПереопределяемый.Предмет) КАК ТипПредмета
	|ИЗ
	|	РегистрСведений.СостоянияПредметовВзаимодействий КАК СостоянияПредметовВзаимодействийПереопределяемый
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействийПереопределяемый
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЖурналДокументов.Взаимодействия КАК ВзаимодействияПереопределяемый
	|			ПО ПредметыПапкиВзаимодействийПереопределяемый.Взаимодействие = ВзаимодействияПереопределяемый.Ссылка
	|		ПО СостоянияПредметовВзаимодействийПереопределяемый.Предмет = ПредметыПапкиВзаимодействийПереопределяемый.Предмет
	|ГДЕ
	|	НЕ СостоянияПредметовВзаимодействийПереопределяемый.Предмет ССЫЛКА Документ.Встреча
	|	И НЕ СостоянияПредметовВзаимодействийПереопределяемый.Предмет ССЫЛКА Документ.ЗапланированноеВзаимодействие
	|	И НЕ ВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.Встреча
	|	И НЕ ВзаимодействияПереопределяемый.Ссылка ССЫЛКА Документ.ЗапланированноеВзаимодействие
	|{ГДЕ
	|	ВзаимодействияПереопределяемый.Ответственный,
	|	ВзаимодействияПереопределяемый.Тип,
	|	ВзаимодействияПереопределяемый.Важность,
	|	ВзаимодействияПереопределяемый.СтатусИсходящегоПисьма,
	|	ВзаимодействияПереопределяемый.УчетнаяЗапись,
	|	ВзаимодействияПереопределяемый.Автор,
	|	ВзаимодействияПереопределяемый.ПометкаУдаления,
	|	ВзаимодействияПереопределяемый.Входящий,
	|	ПредметыПапкиВзаимодействийПереопределяемый.Рассмотрено,
	|	ПредметыПапкиВзаимодействийПереопределяемый.РассмотретьПосле}";
	
	Возврат ТекстЗапроса;
	
КонецФункции



#КонецОбласти
