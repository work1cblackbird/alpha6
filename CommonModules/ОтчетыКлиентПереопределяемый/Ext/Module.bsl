///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возникает после окончания формирования отчета: после завершения фонового задания.
// Позволяет переопределить обработку результата формирования отчета.
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения
//               - РасширениеУправляемойФормыДляОтчета - форма отчета:
//                   * Отчет - ОтчетОбъект - структура данных формы аналогичная объекту отчета.
//
//  ОтчетСформирован - Булево - Истина если отчет был успешно сформирован.
//
Процедура ПослеФормирования(ФормаОтчета, ОтчетСформирован) Экспорт
	
КонецПроцедуры

// Обработчик расшифровки табличного документа формы отчета.
// См. "Расширение поля формы для поля табличного документа.ОбработкаРасшифровки" в синтакс-помощнике.
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения
//               - РасширениеУправляемойФормыДляОтчета - форма отчета:
//                   * Отчет - ОтчетОбъект - структура данных формы аналогичная объекту отчета.
//
//   Элемент     - ПолеФормы        - табличный документ.
//   Расшифровка - Произвольный     - значение расшифровки точки, серии или значения диаграммы.
//   СтандартнаяОбработка - Булево  - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаРасшифровки(ФормаОтчета, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	
	// +Софтфон
	сфпФормаОтчетаКлиентПереопределяемый.ОбработкаРасшифровки(ФормаОтчета, Элемент, Расшифровка, СтандартнаяОбработка);
	// -Софтфон
	
	Если ФормаОтчета.НастройкиОтчета.ПолноеИмя = "Отчет.СверкаТоварногоИОрдерногоУчета" Тогда
	    ОбработатьРасшифровкуСверкаТоварногоИОрдерногоУчета(ФормаОтчета, Расшифровка, СтандартнаяОбработка);	
	КонецЕсли;
	
КонецПроцедуры

// Обработчик дополнительной расшифровки (меню табличного документа формы отчета).
// См. "Расширение поля формы для поля табличного документа.ОбработкаДополнительнойРасшифровки" в синтакс-помощнике.
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения
//               - РасширениеУправляемойФормыДляОтчета - форма отчета:
//                   * Отчет - ОтчетОбъект - структура данных формы аналогичная объекту отчета.
//
//   Элемент     - ПолеФормы        - табличный документ.
//   Расшифровка - Произвольный     - значение расшифровки точки, серии или значения диаграммы.
//   СтандартнаяОбработка - Булево  - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаДополнительнойРасшифровки(ФормаОтчета, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	
	// АльфаАфто
	СтандартнаяОбработка = Ложь;
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ФормаОтчета.ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(ФормаОтчета.Отчет));
	
	ДоступныеДействия = Новый Массив();

	ДополнительныеДействия = Новый СписокЗначений;
	ДополнительныеДействия.Добавить("Настройки");

	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьВыборДействияЗавершение", ЭтотОбъект, ФормаОтчета);
	
	ОбработкаРасшифровки.ПоказатьВыборДействия(ОписаниеОповещения, Расшифровка, ДоступныеДействия, ДополнительныеДействия, Истина, ФормаОтчета.Элементы.ОтчетТабличныйДокумент);
	// Конец АльфаАвто
	
КонецПроцедуры

// Обработчик команд, добавленных динамически и подключенных к обработчику "Подключаемый_Команда".
// Пример добавления команды см. ОтчетыПереопределяемый.ПриСозданииНаСервере().
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения
//               - РасширениеУправляемойФормыДляОтчета - форма отчета:
//                   * Отчет - ОтчетОбъект - структура данных формы аналогичная объекту отчета.
//
//   Команда     - КомандаФормы     - команда, которая была вызвана.
//   Результат   - Булево           - Истина, если вызов команды обработан.
//
Процедура ОбработчикКоманды(ФормаОтчета, Команда, Результат) Экспорт
	
	
	
КонецПроцедуры

// Обработчик переопределения параметров или формы выбора значений.
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения
//               - РасширениеУправляемойФормыДляОтчета - форма отчета:
//                   * Отчет - ОтчетОбъект - структура данных формы аналогичная объекту отчета.
//
//   УсловияВыбора - Структура:
//    * ИмяПоля              - Строка - имя параметра или поля элемента компоновки данных.
//    * ЭлементКомпоновки    - ДоступныйПараметрКомпоновкиДанных
//                           - ДоступноеПолеОтбораКомпоновкиДанных - элемент выбора.
//    * ДоступныеТипы        - ОписаниеТипов  - типы доступные для выбора.
//    * Отмеченные           - СписокЗначений - значения выбранные ранее.
//    * ПараметрыВыбора      - Массив из ПараметрВыбора - настроенные параметры выбора.
// 
//   ОповещениеОЗакрытии - ОписаниеОповещения - оповещение о результате выбора. Вызывается
//                           после выбора с результатом типа Массив или СписокЗначений.
//
//   СтандартнаяОбработка - Булево - если указать Ложь, то стандартная форма не будет открыта,
//                                   в этом случае нужно открыть свою форму и выполнить ОповещениеОЗакрытии.
//
Процедура ПриНачалеВыбораЗначений(ФормаОтчета, УсловияВыбора, ОповещениеОЗакрытии, СтандартнаяОбработка) Экспорт
	
	
	
КонецПроцедуры

// Обработчик результата выбора подчиненной формы.
// См. "ФормаКлиентскогоПриложения.ОбработкаВыбора" в синтакс-помощнике.
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения
//               - РасширениеУправляемойФормыДляОтчета - форма отчета:
//                   * Отчет - ОтчетОбъект - структура данных формы аналогичная объекту отчета.
//
//   ВыбранноеЗначение - Произвольный     - результат выбора в подчиненной форме.
//   ИсточникВыбора    - ФормаКлиентскогоПриложения - форма, где осуществлен выбор.
//   Результат         - Булево           - Истина, если результат выбора обработан.
//
Процедура ОбработкаВыбора(ФормаОтчета, ВыбранноеЗначение, ИсточникВыбора, Результат) Экспорт
	
КонецПроцедуры

// Обработчик двойного щелчка мыши, нажатия клавиши Enter или гиперссылки в табличном документе формы отчета.
// См. "Расширение поля формы для поля табличного документа.Выбор" в синтакс-помощнике.
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения
//               - РасширениеУправляемойФормыДляОтчета - форма отчета:
//                   * Отчет - ОтчетОбъект - структура данных формы аналогичная объекту отчета.
//
//   Элемент     - ПолеФормы        - табличный документ.
//   Область     - ОбластьЯчеекТабличногоДокумента - выбранное значение.
//   СтандартнаяОбработка - Булево - признак выполнения стандартной обработки события.
//
Процедура ОбработкаВыбораТабличногоДокумента(ФормаОтчета, Элемент, Область, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Обработчик широковещательного оповещения формы отчета.
// См. "ФормаКлиентскогоПриложения.ОбработкаОповещения" в синтакс-помощнике.
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения
//               - РасширениеУправляемойФормыДляОтчета - форма отчета:
//                   * Отчет - ОтчетОбъект - структура данных формы аналогичная объекту отчета.
//
//   ИмяСобытия  - Строка           - идентификатор события для принимающих форм.
//   Параметр    - Произвольный     - расширенная информация о событии.
//   Источник    - ФормаКлиентскогоПриложения
//               - Произвольный - источник события.
//   ОповещениеОбработано - Булево - признак того, что событие обработано.
//
Процедура ОбработкаОповещения(ФормаОтчета, ИмяСобытия, Параметр, Источник, ОповещениеОбработано) Экспорт
	
КонецПроцедуры

// Обработчик нажатия на кнопку выбора периода в отдельной форме.
//  Если в конфигурации используется собственный диалог выбора периода,
//  тогда параметр СтандартнаяОбработка следует установить в Ложь,
//  а выбранный период следует вернуть в ОбработчикРезультата.
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения
//               - РасширениеУправляемойФормыДляОтчета - форма отчета:
//                   * Отчет - ОтчетОбъект - структура данных формы аналогичная объекту отчета.
//
//   Период - СтандартныйПериод - значение настройки компоновщика, соответствующей выбранному периоду.
//
//   СтандартнаяОбработка - Булево - если Истина, то будет использован стандартный диалог выбора периода.
//       Если установить в Ложь то стандартный диалог не откроется.
//
//   ОбработчикРезультата - ОписаниеОповещения - обработчик результата выбора периода.
//       В качестве результата в ОбработчикРезультата могут быть переданы значения типов:
//       Неопределено - пользователь отказался от ввода периода.
//       СтандартныйПериод - выбранный период.
//
Процедура ПриНажатииКнопкиВыбораПериода(ФормаОтчета, Период, СтандартнаяОбработка, ОбработчикРезультата) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РасшифровкаОтчетаСверкаТоварногоИОрдерногоУчета

// Вызывается для отчёта "СверкаТоварногоИОрдерногоУчета"
//
Процедура ОбработатьРасшифровкуСверкаТоварногоИОрдерногоУчета(ЭтаФорма, Расшифровка, СтандартнаяОбработка)
	
	ТекущиеДанныеРасшифровки = ЭтаФорма.ДанныеРасшифровки;
	
	СтруктураПараметров = Новый Структура; 
	СтруктураПараметров.Вставить("ДанныеРасшифровки", ТекущиеДанныеРасшифровки);
	СтруктураПараметров.Вставить("Расшифровка", Расшифровка);
	
	ПодчиненныеДокументы = ОтчетыПлатформаВызовСервера.ПолучитьданныеРасшифровкиСверкиТоварногоИОрдерногоУчета(СтруктураПараметров);
	
	Если НЕ ПодчиненныеДокументы = Неопределено Тогда 
		ИзменитьДействиеОткрытьДляРасшифровкиПодчиненныхДокументов(ЭтаФорма, ПодчиненныеДокументы, СтандартнаяОбработка, ТекущиеДанныеРасшифровки, Расшифровка, СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Процедура ИзменитьДействиеОткрытьДляРасшифровкиПодчиненныхДокументов(ЭтаФорма, ПодчиненныеДокументы, СтандартнаяОбработка, ДанныеРасшифровки, Расшифровка, СтруктураПараметров) 
	
	СтандартнаяОбработка = Ложь;
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек.ПолучитьИсточникДоступныхНастроек());
	
	ОповещениеВыбораРасшифровки = Новый ОписаниеОповещения("ОбработкаВыбораРасшифровкиПодчиненныхДокументов", ОтчетыКлиентПереопределяемый, СтруктураПараметров);
	
	ДоступныеДействия = Новый Массив;
	
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
	
	ДополнительныеПункты = Новый СписокЗначений;
		
	ИмяДействия = НСтр("ru = 'Открыть '");
	
	ДокументыСписокЗначений = Новый СписокЗначений;
	ДокументыСписокЗначений.ЗагрузитьЗначения(ПодчиненныеДокументы);
	
	ДополнительныеПункты.Добавить(ДокументыСписокЗначений, ИмяДействия);
	
	ОбработкаРасшифровки.ПоказатьВыборДействия(ОповещениеВыбораРасшифровки, Расшифровка, ДоступныеДействия, ДополнительныеПункты);
	
КонецПроцедуры  

Процедура ОбработкаВыбораРасшифровкиПодчиненныхДокументов(ВыполненноеДействие, ПараметрВыполненногоДействия, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ВыполненноеДействие <> ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет 
		И ВыполненноеДействие <> Неопределено Тогда
		Если ЭтоСтандартноеДействие(ВыполненноеДействие) Тогда 
			ПараметрыОтчета = Новый Структура;
		    ПараметрыОтчета.Вставить("СформироватьПриОткрытии", Истина);
		    ПараметрыОтчета.Вставить("Расшифровка", Новый ОписаниеОбработкиРасшифровкиКомпоновкиДанных(ДополнительныеПараметры.ДанныеРасшифровки, ДополнительныеПараметры.Расшифровка, ПараметрВыполненногоДействия));
		    ОткрытьФорму("Отчет.СверкаТоварногоИОрдерногоУчета.Форма", ПараметрыОтчета, , Истина);		
		Иначе
			ПоказатьЗначение(, ВыполненноеДействие);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Функция ЭтоСтандартноеДействие(ВыполненноеДействие)
	
	Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать
		ИЛИ ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать
		ИЛИ ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить
		ИЛИ ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать
		ИЛИ ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить Тогда 
	   	Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции

// АльфаАвто
&НаКлиенте
Процедура ПоказатьВыборДействияЗавершение(ВыбранноеДействие, ПараметрВыполненногоДействи, ДополнительныеПараметры) Экспорт

	Если ВыбранноеДействие = "Настройки" Тогда
		ДополнительныеПараметры.ОткрытьНастройкиОтчета(Неопределено);
	КонецЕсли;

КонецПроцедуры
// КонецАльфаАвто

#КонецОбласти