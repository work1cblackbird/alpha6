////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы (УНФ)
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

///////////////////////////////////////////////////////////////////////////////
// Обработчики обновления версий (Автосалон)

// Процедура - Переводит значения права СписаниеТоваровПоСебестоимости с перечисления
// Варианты ответов на булево. Нет, Да переходят в Ложь, Спрашивать - в Истину.
//
Процедура ИзменитьПравоСписаниеТоваровПоСебестоимости() Экспорт
	
	НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПраваИНастройки.ПользовательПрофиль,
	|	ПраваИНастройки.ПравоНастройка,
	|	ПраваИНастройки.Объект,
	|	ПраваИНастройки.Значение
	|ИЗ
	|	РегистрСведений.ПраваИНастройки КАК ПраваИНастройки
	|ГДЕ
	|	ПраваИНастройки.ПравоНастройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПраваИНастройки.СписаниеТоваровПоСебестоимости)
	|	И ПраваИНастройки.Значение ССЫЛКА Перечисление.ВариантыОтветов";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.ПраваИНастройки.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка, , "Значение");
		Запись.Значение = Выборка.Значение = Перечисления.ВариантыОтветов.Спрашивать;
		Запись.Записать();
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

// Процедура заполнения текущих документов счет-фактур и чеков на оплату реквизита "Ключ строки",
// которые введены на основании заказ-наряда
//
Процедура ЗаполнитьКлючСтрокиДокументамНаОснованииЗаказНаряда() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СчетФактураВыданныйТовары.Ссылка КАК Ссылка,
	               |	СчетФактураВыданныйТовары.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	               |ГДЕ
	               |	(ВЫРАЗИТЬ(СчетФактураВыданныйТовары.Ссылка.ДокументОснование КАК Документ.ЗаказНаряд)) <> ЗНАЧЕНИЕ(Документ.ЗаказНаряд.ПустаяСсылка)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЧекНаОплатуТовары.Ссылка,
	               |	ЧекНаОплатуТовары.НомерСтроки
	               |ИЗ
	               |	Документ.ЧекНаОплату.Товары КАК ЧекНаОплатуТовары
	               |ГДЕ
	               |	(ВЫРАЗИТЬ(ЧекНаОплатуТовары.Ссылка.ДокументОснование КАК Документ.ЗаказНаряд)) <> ЗНАЧЕНИЕ(Документ.ЗаказНаряд.ПустаяСсылка)
	               |ИТОГИ ПО
	               |	Ссылка";
	ВыборкаДокумента = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумента.Следующий() Цикл
		ДокументОбъект = ВыборкаДокумента.Ссылка.ПолучитьОбъект();
		ВыборкаНомераСтрок = ВыборкаДокумента.Выбрать();
		Пока ВыборкаНомераСтрок.Следующий() Цикл
			СтрокаТоваров = ДокументОбъект.Товары.Найти(ВыборкаНомераСтрок.НомерСтроки, "НомерСтроки");
			Если НЕ СтрокаТоваров = Неопределено Тогда
				СтрокаТоваров.КлючСтроки = Новый УникальныйИдентификатор;
			КонецЕсли;
		КонецЦикла;
		
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
	
КонецПроцедуры // ЗаполнитьКлючСтрокиДокументамНаОснованииЗаказНаряда()

// Увеличение в настройках пользователя записи на ремонт параметра "МасштабЯчейки" в два раза.
//
Процедура ОбновитьМасштабЯчейкиДляНастройкиЗаписиНаРемонт() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КлючНастроек = "Обработка.ЗаписьНаРемонт.Форма.НастройкиДневногоКалендаря/ТекущиеДанные";
	КоэффициентМасштаба = 2;
	
	// Получим пользователей ИБ
	ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	Для Каждого Пользователь Из ПользователиИБ Цикл
		ИмяПользователя = Пользователь.Имя;
		
		Если НЕ ЗначениеЗаполнено(ИмяПользователя) Тогда
			Продолжить;
		КонецЕсли;
		
		// Получим текущие настройки пользователя
		НастройкиПользователя = ХранилищеСистемныхНастроек.Загрузить(КлючНастроек,,, ИмяПользователя);
		
		// Удалим некорректный параметр
		Если ТипЗнч(НастройкиПользователя) = Тип("Соответствие")
			И НастройкиПользователя.Получить("НеОбновлятьМасштабЯчейкии") = Истина Тогда
			НастройкиПользователя.Удалить("НеОбновлятьМасштабЯчейкии");
			НастройкиПользователя.Вставить("НеОбновлятьМасштабЯчейки", Истина);
		КонецЕсли;
		
		Если ТипЗнч(НастройкиПользователя) <> Тип("Соответствие")
			ИЛИ НастройкиПользователя.Получить("МасштабЯчейки") = Неопределено
			ИЛИ НастройкиПользователя.Получить("ШиринаКолонкиРесурсов") = Неопределено
			ИЛИ НастройкиПользователя.Получить("НеОбновлятьМасштабЯчейки") = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		МасштабЯчейки = НастройкиПользователя.Получить("МасштабЯчейки");
		НастройкиПользователя.Вставить("МасштабЯчейки", МасштабЯчейки * КоэффициентМасштаба);
		ШиринаКолонкиРесурсов = НастройкиПользователя.Получить("ШиринаКолонкиРесурсов");
		НастройкиПользователя.Вставить("ШиринаКолонкиРесурсов", ШиринаКолонкиРесурсов);
		НастройкиПользователя.Вставить("НеОбновлятьМасштабЯчейки", Истина);
		
		// Запишим настройки пользователя
		ХранилищеСистемныхНастроек.Сохранить(
			КлючНастроек
			,
			,
			НастройкиПользователя,
			,
			ИмяПользователя);
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьМасштабЯчейкиДляНастройкиЗаписиНаРемонт()

// Удаление ПП и его создание. Нужно для перехода после изменения состава ПП.
//
Процедура ОбновитьПолнотекстовыйПоискПриСменеРелиза() Экспорт
	
	Если ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Разрешить Тогда
	
		ПолнотекстовыйПоиск.ОчиститьИндекс();
		ПолнотекстовыйПоиск.ОбновитьИндекс(Истина, Истина);
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти