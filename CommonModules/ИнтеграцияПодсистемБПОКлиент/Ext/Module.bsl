#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийБСП
// Обработка программных событий, возникающих в подсистемах БСП.

// Определяет события, на которые подписана эта библиотека.
//
// Параметры:
//  Подписки - Структура - Ключами свойств структуры являются имена событий, на которые
//           подписана эта библиотека.
//
Процедура ПриОпределенииПодписокНаСобытияБСП(Подписки) Экспорт
	
	// БазоваяФункциональность
	Подписки.ПередНачаломРаботыСистемы = Истина;
	Подписки.ПриНачалеРаботыСистемы = Истина;
	Подписки.ПередЗавершениемРаботыСистемы = Истина;
	
КонецПроцедуры

// Функция, вызываемая перед началом работы системы.
//
Процедура ПередНачаломРаботыСистемы() Экспорт
	
	ПараметрыРаботыКлиента = ПараметрыРаботыКлиентаПриЗапуске();
	ПодготовитьПараметрыПриложения(ПараметрыРаботыКлиента);
	
КонецПроцедуры

// Функция, вызываемая при начале работы системы.
//
Процедура ПриНачалеРаботыСистемы() Экспорт
	
	ПараметрыРаботыКлиента = ПараметрыРаботыКлиентаПриЗапуске();
	
	// ++ НеМобильноеПриложение
	РабочееМесто = ПараметрыРаботыКлиента.РабочееМесто;
	ТребуетсяПолучитьMACАдрес = Ложь;
	Если ЗначениеЗаполнено(РабочееМесто) Тогда
		Если ПустаяСтрока(ПараметрыРаботыКлиента.MACАдресРабочегоМеста) Тогда
			ТребуетсяПолучитьMACАдрес = Истина;
		КонецЕсли;
	Иначе
		ТребуетсяПолучитьMACАдрес = Истина;
	КонецЕсли;
	
	Если ТребуетсяПолучитьMACАдрес Тогда
		Оповещение = Новый ОписаниеОповещения("ПолученMACАдресПриЗапуске", ЭтотОбъект);
		УстанавливатьРасширениеБраузера = Ложь;
		ЗапускПриложения = Истина;
		МенеджерОборудованияКлиент.НачатьПолучениеMACАдреса(Оповещение, УстанавливатьРасширениеБраузера, ЗапускПриложения);
	КонецЕсли;
	
	#Если Не ВебКлиент Тогда
	ВнешниеКомпонентыБПОКлиент.ПереустановитьКомпоненты(ПараметрыРаботыКлиента.ОборудованиеДляПереустановки);
	Если ОбщегоНазначенияБПОКлиент.ИспользуетсяРаспределеннаяФискализация() Тогда
		МодульРаспределеннаяФискализацияКлиент = ОбщегоНазначенияБПОКлиент.ОбщийМодуль("РаспределеннаяФискализацияКлиент");
		МодульРаспределеннаяФискализацияКлиент.ПодключениеСистемыВзаимодействия(ПараметрыРаботыКлиента.ИдентификаторОбсужденияРаспределеннойФискализации); 
	КонецЕсли;
	#КонецЕсли
	// -- НеМобильноеПриложение
	
	ПодготовитьПараметрыПриложения(ПараметрыРаботыКлиента);
	
КонецПроцедуры

// Процедура, вызываемая при начале работы системы, выполняет подготовку данных механизма.
//
Процедура ПередЗавершениемРаботыСистемы() Экспорт
	
КонецПроцедуры

#КонецОбласти

// Выполняет обработку внешнего события, вызывается из глобального модуля
//
// Параметры:
//  Источник - Строка.
//  Событие - Строка.
//  Данные - Строка.
Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные) Экспорт

	ОписаниеОшибки  = "";
	// Подготовить данные
	ОписаниеСобытия = Новый Структура();
	ОписаниеСобытия.Вставить("Источник", Источник);
	ОписаниеСобытия.Вставить("Событие",  Событие);
	ОписаниеСобытия.Вставить("Данные",   Данные);
	// Передать на обработку данные.
	Результат = МенеджерОборудованияКлиент.ОбработатьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
	Если Не Результат Тогда
		ОбщегоНазначенияБПОКлиент.СообщитьПользователю(НСтр("ru='При обработке внешнего события от устройства произошла ошибка.'") + Символы.ПС + ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает значения параметров, необходимых для работы клиентского кода конфигурации
// без дополнительных серверных вызовов.
// 
// Возвращаемое значение:
//   Структура:
//     * ТекущаяДатаНаКлиенте - Дата
Функция ПараметрыРаботыКлиентаПриЗапуске() Экспорт
	
	Если ОбщегоНазначенияБПОКлиент.ИспользуетсяБСП() Тогда
		ПараметрыРаботыКлиента = ОбщегоНазначенияБПОКлиент.ПараметрыРаботыКлиентаПриЗапуске();
		Если ПараметрыРаботыКлиента.Свойство("ОборудованиеДляПереустановки") Тогда
			Возврат ПараметрыРаботыКлиента;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ИнтеграцияПодсистемБПОКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	
КонецФункции

Процедура ПолученMACАдресПриЗапуске(MACАдрес, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(MACАдрес) Тогда
		
		ПодключаемоеОборудование = МенеджерОборудованияКлиент.ПодключаемоеОборудование();
		ПодключаемоеОборудование.MACАдрес = MACАдрес;
		
		Если ОбщегоНазначенияБПОКлиент.ЭтоВебКлиент() Тогда
			ЗапрашиватьНаСервере = Ложь;
			РабочееМесто = МенеджерОборудованияКлиент.РабочееМестоКлиента(ЗапрашиватьНаСервере);
			Если ЗначениеЗаполнено(РабочееМесто) Тогда
				МенеджерОборудованияВызовСервера.СохранитьMACАдресДляРабочееМеста(MACАдрес);
			Иначе
				ИдентификаторКлиента = МенеджерОборудованияКлиентСервер.ИдентификаторКлиентаДляРабочегоМеста();
				МенеджерОборудованияКлиент.ПривязатьРабочееМестоПоMACАдресу(ИдентификаторКлиента, MACАдрес); 
			КонецЕсли;
		Иначе
			МенеджерОборудованияВызовСервера.СохранитьMACАдресДляРабочееМеста(MACАдрес);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьПараметрыПриложения(ПараметрыРаботыКлиента)
	
	Если ПараметрыПриложения = Неопределено Тогда
		ПараметрыПриложения = Новый Соответствие();
	КонецЕсли;
	
	Если Не ОбщегоНазначенияБПОКлиент.ИспользуетсяБСП() Тогда
		ИмяПараметра = "БПО.ПодсистемыКонфигурации";
		Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
			ПараметрыПриложения.Вставить(ИмяПараметра, ПараметрыРаботыКлиента.ИменаПодсистем);
		КонецЕсли;
	КонецЕсли;
	
	ИмяПараметра = "БПО.ВерсияБСП";
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ПараметрыПриложения.Вставить(ИмяПараметра, ПараметрыРаботыКлиента.ВерсияБСП);
	КонецЕсли;
	
	ИмяПараметра = "БПО.СоответствиеТиповОборудования";
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ПараметрыПриложения.Вставить(ИмяПараметра, ПараметрыРаботыКлиента.СоответствиеТиповОборудования);
	КонецЕсли;
	
	ПодключаемоеОборудование = МенеджерОборудованияКлиент.ПодключаемоеОборудование();
	ПодключаемоеОборудование.РабочееМесто = ПараметрыРаботыКлиента.РабочееМесто;
	
КонецПроцедуры

#КонецОбласти

