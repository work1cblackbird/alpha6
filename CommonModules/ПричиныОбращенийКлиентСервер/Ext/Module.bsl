
#Область ПрограммныйИнтерфейс

// Пересчет итогов в таблице по указанной причине обращения
//
// Параметры:
//  ПричинаОбращения - СправочникСсылка.ПричиныОбращений - Выбранная причина обращения.
//  Таблица          - ТаблицаФормы                      - Таблица, по которой подсчитывается итог.
//  ИмяПоля          - Строка                            - Имя идентификатора таблицы.
// 
// Возвращаемое значение:
//  Число - Итоговая сумма по таблице.
//
Функция ПодсчитатьСуммуВТаблицеПоПричинеОбращения(ПричинаОбращения, Таблица, ИмяПоля="ИдентификаторПричиныОбращения") Экспорт
	
	Если Таблица.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Сумма = 0;
	
	СтрокиПричины = Таблица.НайтиСтроки(Новый Структура(ИмяПоля,ПричинаОбращения));
	Для каждого Строка Из СтрокиПричины Цикл
		Сумма = Сумма + Строка.СуммаВсего;
	КонецЦикла;
		
	Возврат Сумма;
	
КонецФункции

// Обновление суммовых показателей причин обращений
//
// Параметры:
//  ПричиныОбращения - ТаблицаФормы - Таблица причин обращений.
//  Автоработы       - ТаблицаФормы - Таблица авторабот.
//  Товары           - ТаблицаФормы - Таблица товаров.
//
Процедура ОбновитьИндикаторыПричинОбращения(ПричиныОбращения, Автоработы, Товары) Экспорт
	
	Для Каждого Причина Из ПричиныОбращения Цикл
		СуммаПоРаботам =  ПодсчитатьСуммуВТаблицеПоПричинеОбращения(Причина.ИдентификаторПричиныОбращения, Автоработы);
		СуммаПоТоварам =  ПодсчитатьСуммуВТаблицеПоПричинеОбращения(Причина.ИдентификаторПричиныОбращения, Товары);
		
		Причина.СуммаПоАвтоработам = СуммаПоРаботам;
		Причина.СуммаПоТоварам     = СуммаПоТоварам;
		Причина.СуммаВсего         = СуммаПоТоварам + СуммаПоРаботам;
		
		Причина.ЗаголовокСуммаПоАвтоработам = "По автоработам:";
		Причина.ЗаголовокСуммаПоТоварам     = "По товарам:";
		Причина.ЗаголовокСуммаВсего         = "Итого:";
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
