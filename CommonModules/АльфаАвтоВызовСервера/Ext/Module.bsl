
#Область ПрограммныйИнтерфейс

// Возвращает значение параметра сеанса "МаскаЛицензирования"
// 
// Возвращаемое значение:
//  Строка - Маска лицензирования.
//
Функция ПолучитьМаскуЛицензирования() Экспорт
	
	Попытка
		ЗащищенныеФункцииСервер.ОбновитьМаскуЛицензирования();
		
		Возврат ПараметрыСеанса.МаскаЛицензирования;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

// Печать этикеток (начало)

// Функция формирует структуру с данными для печати на принтере этикеток.
//
// Параметры:
//  Параметры		- Массив - Параметры печати.
//  МенеджерПечати	- Модуль менеджера - Модуль менеджерв печати.
//  Размер			- Строка - Размер этикетки.
//
// Возвращаемое значение:
//  Массив - Массив данных этикеток для печати.
//
Функция ПодготовитьСтруктуруДанныхЦенниковИЭтикетокДляПринтераЭтикеток(Знач Параметры, Знач МенеджерПечати, Размер) Экспорт
	
	МенеджерПечати = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МенеджерПечати);
	
	Данные = МенеджерПечати.ПолучитьДанныеДляПринтераЭтикеток(Параметры);
	
	Результат = Новый Массив;
	
	Для Каждого ТекШаблон Из Данные Цикл
		
		Если ТекШаблон.Шаблон.РазмерМакета = Размер Тогда
			
			Пакет = Новый Структура;
			Пакет.Вставить("XML", ТекШаблон.ТабличныйДокумент.XML);
			Пакет.Вставить("Этикетки", Новый Массив);
			
			Для Каждого ТекЭтикетка Из ТекШаблон.ТабличныйДокумент.Этикетки Цикл
				
				НоваяЭтикетка = Новый Структура;
				НоваяЭтикетка.Вставить("Количество", ТекЭтикетка.Количество);
				НоваяЭтикетка.Вставить("Поля", ТекЭтикетка.ЗначенияПолей);
				
				Пакет.Этикетки.Добавить(НоваяЭтикетка);
				
			КонецЦикла;
			
			Результат.Добавить(Пакет);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Печать этикеток (конец)

// Вызывается при заполнении контактной информации о службе поддержки продукта
//
// Параметры:
//  ГрафикРаботы - Строка - график работы службы поддержки
//  Контакты     - Массив - Соответствие, где "Ключ" это заголовок поля
//  Сайты        - Массив - набор сайтов (строки)
//
Процедура ПриПолученииКонтактовСлужбыПоддержки(ГрафикРаботы, Контакты, Сайты) Экспорт
	
	// Сведения о графике работы
	ГрафикРаботы = НСтр("ru='10:00 - 18:00, без перерывов,
	                        |кроме субботы и воскресенья'");
	
	// Сведения о контактах
	Телефон = Новый Структура("Заголовок,Значение", НСтр("ru = 'Телефон'"), "+7 (495) 223-04-04, +7 (495) 231-20-02");
	Контакты.Добавить(Телефон);
	
	Почта = Новый Структура("Заголовок,Значение", НСтр("ru = 'Эл. почта'"), "alfa@rarus.ru");
	Контакты.Добавить(Почта);
	
	// Сведения о связанных информационных ресурсах
	Сайты = Новый Массив();
	Сайты.Добавить("https://rarus.ru/1c-auto/alfa-avto-avtosalon-avtoservis-avtozapchasti-6/");
	Сайты.Добавить("https://rarus.ru/1c-auto/1c8-alfa-avto-4/");
	Сайты.Добавить("https://rarus.ru/support/rarus-solutions");
	
КонецПроцедуры // ПриПолученииКонтактовСлужбыПоддержки()

// Вызывается при идентификации бизнес-роли пользователя
//
Процедура ПриОпределенииБизнесРолиПользователя(Пользователь, БизнесРольПользователя) Экспорт
	
	
	
КонецПроцедуры // ПриОпределенииБизнесРолиПользователя()

#КонецОбласти