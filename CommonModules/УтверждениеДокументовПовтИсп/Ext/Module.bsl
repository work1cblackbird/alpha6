// Общий модуль "Утверждение документов (повторного использования)"

#Область СлужебныйПрограммныйИнтерфейс

// Проверяет участие документа в подсистеме утверждения, получает режим отмены проведения.
//
// Параметры:
//  Документ						- Строка	- Полное имя документа, для которого производится проверка.
//  ОтклонениеПриОтменеПроведения	- Булево	- Истина: при отмене проведения уст. статус «Отклонен», Ложь: «Согласован».
//
// Возвращаемое значение:
//  Булево  - Участие документа в подсистеме утверждения: Истина - участвует, Ложь - статус не контролируется.
//
Функция КонтролироватьУтверждениеДокумента(Документ) Экспорт

	СтруктураВозврата = Новый Структура("ДокументУчаствуетВУтверждении, ОтклонениеПриОтменеПроведения", Ложь, Ложь); 
	
	// Получаем значение настройки ОтклонениеПриОтменеПроведения из регистра для текущего документа.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИспользоватьУтверждениеДокументов.ОтклонениеПриОтменеПроведения
	|ИЗ
	|	РегистрСведений.ИспользоватьУтверждениеДокументов КАК ИспользоватьУтверждениеДокументов
	|ГДЕ
	|	ИспользоватьУтверждениеДокументов.Документ = &Документ
	|	И ИспользоватьУтверждениеДокументов.Использовать = ИСТИНА";
	Запрос.УстановитьПараметр("Документ", Документ);
	
	Если СтрНайти(Документ, "ЖурналДокументов.") <> 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "= &Документ", "В (&Документ)");
		ИмяЖурнала = СтрРазделить(Документ, ".")[1];
		ОбъектМетаданных = Метаданные.ЖурналыДокументов.Найти(ИмяЖурнала);
		МассивДокументов = Новый Массив;
		Для Каждого РегистрируемыйДокумент Из ОбъектМетаданных.РегистрируемыеДокументы Цикл
			МассивДокументов.Добавить(РегистрируемыйДокумент.ПолноеИмя())
		КонецЦикла;
		Запрос.УстановитьПараметр("Документ", МассивДокументов);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		СтруктураВозврата.ДокументУчаствуетВУтверждении = Истина;
		СтруктураВозврата.ОтклонениеПриОтменеПроведения = Выборка.ОтклонениеПриОтменеПроведения;
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции // ИспользоватьУтверждениеДокументов()

// Формирует список доступных статусов утверждения документа.
//
// Параметры:
//  Документ      - Строка - Полное имя документа (из метаданных), для которого выбираются доступные статусы.
//
// Возвращаемое значение:
//   Соответствие  - Перечень доступных статусов утверждения для пользователя/группы доступа.
//
Функция ДоступныеСтатусы(Документ) Экспорт
	
	ДоступныеСтатусы = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Пользователи.ГруппаПравИНастроек = ЗНАЧЕНИЕ(Справочник.ГруппыПравИНастроек.ПустаяСсылка)
		|			ТОГДА &Пользователь
		|		ИНАЧЕ Пользователи.ГруппаПравИНастроек
		|	КОНЕЦ КАК Объект
		|ПОМЕСТИТЬ ТекОбъект
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Ссылка = &Пользователь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиУтвержденияДокументов.Согласован КАК Согласован,
		|	НастройкиУтвержденияДокументов.Утвержден КАК Утвержден,
		|	НастройкиУтвержденияДокументов.Объект КАК Объект
		|ПОМЕСТИТЬ СтатусыДокумента
		|ИЗ
		|	РегистрСведений.НастройкиУтвержденияДокументов КАК НастройкиУтвержденияДокументов
		|ГДЕ
		|	НастройкиУтвержденияДокументов.Документ = &Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СтатусыДокумента.Согласован, ЛОЖЬ) КАК Согласован,
		|	ЕСТЬNULL(СтатусыДокумента.Утвержден, ЛОЖЬ) КАК Утвержден
		|ИЗ
		|	ТекОбъект КАК ТекОбъект
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыДокумента КАК СтатусыДокумента
		|		ПО ТекОбъект.Объект = СтатусыДокумента.Объект
		|ГДЕ
		|	ЕСТЬNULL(СтатусыДокумента.Объект, 0) <> 0";
	
	Запрос.УстановитьПараметр("Пользователь",  Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("Документ",      Документ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДоступныеСтатусы.Добавить(Перечисления.СтатусыДокументов.Подготовка, "Подготовка");
	ДоступныеСтатусы.Добавить(Перечисления.СтатусыДокументов.Подготовлен, "Подготовлен");
	
	Если Выборка.Следующий() Тогда
		
		Если Выборка.Согласован Тогда
			ДоступныеСтатусы.Добавить(Перечисления.СтатусыДокументов.Согласован, "Согласован");
		КонецЕсли;
		
		Если Выборка.Утвержден Тогда
			ДоступныеСтатусы.Добавить(Перечисления.СтатусыДокументов.Утвержден, "Утвержден");
		КонецЕсли;
		
		Если Выборка.Согласован ИЛИ Выборка.Утвержден Тогда
			ДоступныеСтатусы.Добавить(Перечисления.СтатусыДокументов.Отклонен, "Отклонен");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДоступныеСтатусы;
	
КонецФункции // ДоступныеСтатусы()

#КонецОбласти