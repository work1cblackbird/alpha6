
////////////////////////////////////////////////////////////////////////////////
// Варианты отчетов - Форма отчета (серверные методы, вызов сервера)
//  
////////////////////////////////////////////////////////////////////////////////
#Область СлужебныеПроцедурыИФункции

#Область РасшифровкаОтчетовСофтфон

Процедура сфпЕженедельныйОтчетОбработкаРасшифровки(КомпоновщикНастроек, ОтчетДанныеРасшифровки, Расшифровка, СтандартнаяОбработка, СтруктураДляОткрытияОтчета) Экспорт
	Если ЗначениеЗаполнено(ОтчетДанныеРасшифровки) И ЭтоАдресВременногоХранилища(ОтчетДанныеРасшифровки) Тогда
		ДанныеРасшифровки = ПолучитьИзВременногоХранилища(ОтчетДанныеРасшифровки);
	КонецЕсли;	
	Если ТипЗнч(Расшифровка) = Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
		СтруктураВозврата = Новый Структура("Сотрудник");
		сфпЕженедельныйОтчетПолучитьСтруктуруВозврата(ДанныеРасшифровки.Элементы[Расшифровка],СтруктураВозврата);		
	КонецЕсли;		
	Если ДанныеРасшифровки.Элементы[Расшифровка].ОсновноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
		Если ТипЗнч(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение) = Тип("СправочникСсылка.Пользователи") Тогда
			СтандартнаяОбработка = Истина;
		КонецЕсли;	
	Иначе
		// Необходимо открыть отчёт "По совершённым звонкам" 
		// с переданными параметрами: Сотрудник и Дата
		СтруктураДляОткрытияОтчета.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураДляОткрытияОтчета.Вставить("Сотрудник", СтруктураВозврата.Сотрудник);
		КоллекцияПолей = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля();
		Если КоллекцияПолей.Количество() > 0 Тогда
			СтруктураДляОткрытияОтчета.Вставить("ДатаОтчета", КоллекцияПолей[0].Значение);
			Если КоллекцияПолей.Количество() = 2 Тогда
				Если КоллекцияПолей[1].Поле = "ВсегоОрганизацийДень" Тогда
					СтруктураДляОткрытияОтчета.Вставить("ТолькоСКлиентами", Истина);
				ИначеЕсли КоллекцияПолей[1].Поле = "ВсегоНеИзБазыДень" Тогда					
					СтруктураДляОткрытияОтчета.Вставить("БезКлиентов", Истина);
				КонецЕсли;					
			КонецЕсли;				
			Если ТипЗнч(СтруктураДляОткрытияОтчета.ДатаОтчета) = Тип("Строка") Тогда
				  СтруктураДляОткрытияОтчета.ДатаОтчета = сфпСтроковыеФункцииКлиентСервер.СтрокаВДату(СтруктураДляОткрытияОтчета.ДатаОтчета);
			КонецЕсли;				
		КонецЕсли;		
		
		Для Каждого ЭлементНастроек Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			Если ТипЗнч(ЭлементНастроек) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
				Если ЭлементНастроек.Использование И ЭлементНастроек.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДлительностьЗвонка") Тогда
					СтруктураДляОткрытияОтчета.Вставить("ДлительностьЗвонка", ЭлементНастроек.ПравоеЗначение);
					СтруктураДляОткрытияОтчета.Вставить("ВидСравненияДлительностьЗвонка", ЭлементНастроек.ВидСравнения);
					Прервать;
				КонецЕсли;					
			КонецЕсли;				
		КонецЦикла;			
	КонецЕсли;	
КонецПроцедуры

Процедура сфпЕженедельныйОтчетПолучитьСтруктуруВозврата(ПолеИлиГруппировка,СтруктураПолей)
	МассивРодителей = ПолеИлиГруппировка.ПолучитьРодителей();
	Для Каждого Стр из МассивРодителей Цикл
		Если ТипЗнч(Стр) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда 
			сфпЕженедельныйОтчетПолучитьСтруктуруВозврата(Стр,СтруктураПолей);
		ИначеЕсли ТипЗнч(Стр) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
			ПоляГруппировки = Стр.ПолучитьПоля();
			Для Каждого гСтр из ПоляГруппировки Цикл
				Если СтруктураПолей.Свойство(гСтр.Поле) Тогда
					Если Не ЗначениеЗаполнено(СтруктураПолей[гСтр.Поле]) Тогда
						СтруктураПолей[гСтр.Поле] = гСтр.Значение;
					КонецЕсли;
				КонецЕсли;
				сфпЕженедельныйОтчетПолучитьСтруктуруВозврата(Стр,СтруктураПолей);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура сфпОтчетПоВсемЗвонкамОбработкаРасшифровки(КомпоновщикНастроек, ОтчетДанныеРасшифровки, Расшифровка, СтандартнаяОбработка, СтруктураДляОткрытияОтчета) Экспорт
	Если ЗначениеЗаполнено(ОтчетДанныеРасшифровки) И ЭтоАдресВременногоХранилища(ОтчетДанныеРасшифровки) Тогда
		ДанныеРасшифровки = ПолучитьИзВременногоХранилища(ОтчетДанныеРасшифровки);
	КонецЕсли;	
	Если ТипЗнч(Расшифровка) = Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
		Для Каждого ЭлементНастроек Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			Если ТипЗнч(ЭлементНастроек) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
				Если ЭлементНастроек.Использование И ЭлементНастроек.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Сотрудник") Тогда
					СтруктураДляОткрытияОтчета.Вставить("Сотрудник", ЭлементНастроек.ПравоеЗначение);
				ИначеЕсли  ЭлементНастроек.Использование И ЭлементНастроек.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДлительностьЗвонка") Тогда
					СтруктураДляОткрытияОтчета.Вставить("ДлительностьЗвонка", ЭлементНастроек.ПравоеЗначение);
					СтруктураДляОткрытияОтчета.Вставить("ВидСравненияДлительностьЗвонка", ЭлементНастроек.ВидСравнения);
				КонецЕсли;					
			КонецЕсли;				
		КонецЦикла;			
	КонецЕсли;		
	Если ДанныеРасшифровки.Элементы[Расшифровка].ОсновноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
		Если ТипЗнч(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение) = Тип("СправочникСсылка.Пользователи") Тогда
			СтандартнаяОбработка = Истина;
		КонецЕсли;	
	Иначе
		// Необходимо открыть отчёт "По совершённым звонкам",
		// или "по пропущенным звонкам" с переданными параметрами: Сотрудник и Дата
		СтруктураДляОткрытияОтчета.Вставить("СформироватьПриОткрытии", Истина);
		Если ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля().Количество() > 0 Тогда
			СтруктураДляОткрытияОтчета.Вставить("ДатаОтчета", ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение);
			Если ТипЗнч(СтруктураДляОткрытияОтчета.ДатаОтчета) = Тип("Строка") Тогда
				СтруктураДляОткрытияОтчета.ДатаОтчета = сфпСтроковыеФункцииКлиентСервер.СтрокаВДату(СтруктураДляОткрытияОтчета.ДатаОтчета);
				СтруктураДляОткрытияОтчета.Вставить("ОтчетПоПропущеннымЗвонкам", Истина)
			КонецЕсли;				
		КонецЕсли;			
	КонецЕсли;		
КонецПроцедуры

#КонецОбласти

#КонецОбласти