
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПараметрыНоменклатуры") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыНоменклатуры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Артикул = Номенклатура.Артикул;
	КонецЕсли;
	
	Если Количество = 0 Тогда
		Количество = 1;
	КонецЕсли;
	
	Автор = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(
		Новый ОписаниеОповещения("ПередЗакрытиемПродолжение", ЭтотОбъект), Отказ, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭлементФормыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АртикулПриИзменении(Элемент)
	
	АртикулПриИзмененииНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура АртикулПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Артикул) Тогда
		Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Артикул);
	Иначе
		Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура АртикулНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", Номенклатура);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
	
	ОписаниеОповещенияОВыбореАртикула = Новый ОписаниеОповещения("АртикулНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, ЭтотОбъект, , , ОписаниеОповещенияОВыбореАртикула, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АртикулНоменклатуры(Номенклатура)
	Возврат Номенклатура.Артикул;
КонецФункции

&НаКлиенте
Процедура АртикулНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Номенклатура = Результат;
		Артикул      = АртикулНоменклатуры(Номенклатура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АртикулОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НоменклатураНажатие(Неопределено, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", Номенклатура);
		ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Продолжение обработчика события ПередЗакрытием
&НаКлиенте
Процедура ПередЗакрытиемПродолжение(Ответ, ДополнительныеПараметры) Экспорт
	
	ЗаписатьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
// Сохранение настроек и закрытие формы
Процедура ЗаписатьИЗакрыть(Команда = Неопределено)
	
	Если НЕ ЗначениеЗаполнено(Артикул) Тогда
		
		ТекстОшибки = НСтр("ru = 'Поле «№ по каталогу» не заполнено. Введите значение номера по каталогу.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Возврат;
		
	КонецЕсли;
	
	СформироватьДвижения();
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДвижения()
	
	НовыйУпущенныйСпрос = РегистрыСведений.УпущенныйСпрос.СоздатьМенеджерЗаписи();
	
	НовыйУпущенныйСпрос.Артикул         = Артикул;
	НовыйУпущенныйСпрос.АртикулДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(Артикул);
	НовыйУпущенныйСпрос.Автор           = Автор;
	НовыйУпущенныйСпрос.Количество      = Количество;
	НовыйУпущенныйСпрос.Комментарий     = Комментарий;
	НовыйУпущенныйСпрос.Номенклатура    = Номенклатура;
	НовыйУпущенныйСпрос.Причина         = Причина;
	НовыйУпущенныйСпрос.ИсточникЗапроса = Источник;
	НовыйУпущенныйСпрос.Период          = ТекущаяДатаСеанса();
	
	НовыйУпущенныйСпрос.Записать(Истина);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти



