#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	схемаКомпановкиДанных = Обработки.ЗаписьНаРемонт.ПолучитьМакет("СКД_ПодборРабочихМест");
	АдресСхемыКомпановкиДанных = ПоместитьВоВременноеХранилище(схемаКомпановкиДанных, УникальныйИдентификатор);
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпановкиДанных));
	КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(СхемаКомпановкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Закрыть(ВыполнитьПодборИсполнителей());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует таблицу исполнителей и помещает ее во временное хранилище
//
&НаСервере
Функция ВыполнитьПодборИсполнителей()
	
	компоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	макетКомпоновки = компоновщикМакетаКомпоновкиДанных.Выполнить(
		ПолучитьИзВременногоХранилища(АдресСхемыКомпановкиДанных),
		КомпоновщикНастроекКомпоновкиДанных.Настройки,,,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	процессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	процессорКомпоновкиДанных.Инициализировать(макетКомпоновки);
	процессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	таблицаРезультат = Новый ТаблицаЗначений();
	процессорВывода.УстановитьОбъект(таблицаРезультат);
	
	процессорВывода.НачатьВывод();
	процессорВывода.Вывести(процессорКомпоновкиДанных, Истина);
	процессорВывода.ЗакончитьВывод();
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаРезультат.ВыгрузитьКолонку("Цех"));
	
КонецФункции

#КонецОбласти


