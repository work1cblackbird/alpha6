///////////////////////////////////////////////////////////////////////////////
// Модуль формы "Форма редактирования интервала"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КоличествоВыводимыхДней = 9;
	ЗаполнитьЗначенияСвойств(
		ЭтотОбъект,
		Параметры,
		,
		"ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,ТолькоПросмотр, ОбъектПланирования");
	
	Начало = ОбщегоНазначенияАвтосалонКлиентСервер.ВЧасовойПоясПодразделения(Начало, СмещениеЧасовогоПояса);
	Конец = ОбщегоНазначенияАвтосалонКлиентСервер.ВЧасовойПоясПодразделения(Конец, СмещениеЧасовогоПояса);
	
	ТолькоПросмотр = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТолькоПросмотр", Ложь);
	ТекОбъект = Параметры.ОбъектПланирования;
	
	Если ТипЗнч(ТекОбъект) = Тип("СправочникСсылка.ПричиныОбращений") Тогда
		
		ОбъектПланирования =  ТекОбъект.ПричинаОбращения;
		
	Иначе
		
		ОбъектПланирования =  ТекОбъект.НаименованиеПолное;
		
	КонецЕсли;
	
	СписокОбъектов = ПолучитьЗначениеПараметраСтруктуры(Параметры, "СписокОбъектов", Новый СписокЗначений);
	Заголовок = ПолучитьЗаголовокФормы(Начало, Конец);
	
	Для Каждого ПланОбъект Из СписокОбъектов Цикл
		Элементы.ОбъектПланирования.СписокВыбора.Добавить
		(
			ПланОбъект.Значение, 
			ПланОбъект.Представление,
			, 
			ПланОбъект.Картинка
		);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.Изменить.Доступность = Не ТолькоПросмотр;
	
	ДеньНачалаСписка = НачалоДня(ТекущаяДата() - КонтрольПланированияПрошедшимВременем * 86400);
	ДеньКонцаСписка = НачалоДня(ДеньНачалаСписка + КоличествоВыводимыхДней * 86400); 
	
	УстановитьСписокВыбораДень(Элементы.НачалоДень.СписокВыбора, ДеньНачалаСписка, ДеньКонцаСписка);
	
	ДеньНачалаСписка = НачалоДня(Начало);
	ДеньКонцаСписка = НачалоДня(ДеньНачалаСписка + КоличествоВыводимыхДней * 86400); 
	
	УстановитьСписокВыбораДень(Элементы.КонецДень.СписокВыбора, ДеньНачалаСписка, ДеньКонцаСписка);

	УстановитьНормуВремени();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонецВремяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьСписокВыбораВремя(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НачалоВремяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьСписокВыбораВремя(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НачалоВремяРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Направление = 1 Тогда
		Начало = Начало + 300;
	Иначе
		Если Начало - 300 >= ТекущаяДата() - КонтрольПланированияПрошедшимВременем * 86400 Тогда
			Начало = Начало - 300;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьНормуВремени();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КонецВремяРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Направление = 1 Тогда
		Конец = Конец + 300;
	Иначе
		Если Конец - 300 >= Начало Тогда
			Конец = Конец - 300;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьНормуВремени();
	
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.Имя = "НачалоДень" Тогда
		
		Начало = ВыбранноеЗначение + (Начало - НачалоДня(Начало)); 
		
		ДеньНачалаСписка = НачалоДня(Начало);
		ДеньКонцаСписка = НачалоДня(ДеньНачалаСписка + КоличествоВыводимыхДней * 86400); 
		
		УстановитьСписокВыбораДень(Элементы.КонецДень.СписокВыбора, ДеньНачалаСписка, ДеньКонцаСписка);
		
	ИначеЕсли Элемент.Имя = "КонецДень" Тогда
		Конец = ВыбранноеЗначение + (Конец - НачалоДня(Конец));
	КонецЕсли;
	
	УстановитьНормуВремени();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжительностьМинутыПриИзменении(Элемент)
	Конец = Начало + ПродолжительностьМинуты*60;
КонецПроцедуры

&НаКлиенте
Процедура КонецВремяПриИзменении(Элемент)
	УстановитьНормуВремени();
КонецПроцедуры

&НаКлиенте
Процедура НачалоВремяПриИзменении(Элемент)
	УстановитьНормуВремени();
КонецПроцедуры

&НаКлиенте
Процедура НачалоДеньПриИзменении(Элемент)
	УстановитьНормуВремени();
КонецПроцедуры

&НаКлиенте
Процедура КонецДеньПриИзменении(Элемент)
	УстановитьНормуВремени();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПланированияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИдентификаторОбъекта = ВыбранноеЗначение;
	
	ОбъектПланирования = Элемент.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение).Представление; 
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжительностьМинутыИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	Конец = Начало + Число(Текст)*60;
	ПродолжительностьМинуты = Число(Текст);
	Элементы.ПродолжительностьМинуты.ВыделенныйТекст = "";
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	Если Не Модифицированность Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("РабочееМесто", РабочееМесто);
	ПараметрыЗакрытия.Вставить("Исполнитель", Исполнитель);
	ПараметрыЗакрытия.Вставить("Начало", ОбщегоНазначенияАвтосалонКлиентСервер.ВЧасовойПоясИБ(Начало, СмещениеЧасовогоПояса));
	ПараметрыЗакрытия.Вставить("Конец", ОбщегоНазначенияАвтосалонКлиентСервер.ВЧасовойПоясИБ(Конец, СмещениеЧасовогоПояса));
	ПараметрыЗакрытия.Вставить("НормаВремени", ПродолжительностьМинуты*60);
	ПараметрыЗакрытия.Вставить("Идентификатор", ИдентификаторОбъекта); 
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	Закрыть(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Плюс(Команда)
	ПродолжительностьМинуты = ПродолжительностьМинуты + 5;
	ПродолжительностьМинутыПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Минус(Команда)
	ПродолжительностьМинуты = ПродолжительностьМинуты - 5;
	ПродолжительностьМинутыПриИзменении(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьЗаголовокФормы(Начало, Конец)
	
	Возврат СтрШаблон("Редактирование интервала ""%1 - %2"" ", 
		Строка(Формат(Начало, "ДФ = HH:mm")), 
		Строка(Формат(Конец, "ДФ = HH:mm"))
	);
	
КонецФункции

&НаКлиенте
Процедура УстановитьНормуВремени()
	НормаВремени = Конец - Начало;
	Если НормаВремени >= 0 Тогда
		ПродолжительностьМинуты = Цел(НормаВремени/60);
	Иначе
		ПродолжительностьМинуты = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСписокВыбораДень(СписокВыбора, ДеньНачалаСписка, ДеньКонцаСписка)
	
	СписокВыбора.Очистить();
	
	Пока ДеньНачалаСписка <= ДеньКонцаСписка Цикл
		СписокВыбора.Добавить(ДеньНачалаСписка, Формат(ДеньНачалаСписка, "Дф = ""дд ММММ"""));
		ДеньНачалаСписка = ДеньНачалаСписка + 86400;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСписокВыбораВремя(Элемент)
	
	СписокВыбора = Новый СписокЗначений;
	Если Элемент.Имя = "КонецВремя" И НачалоДня(Начало) = НачалоДня(Конец) Тогда
		РазницаВремени = Начало - НачалоДня(Начало);
		Если РазницаВремени = 0 Тогда
			Время = 3600;
		Иначе
			Время = РазницаВремени + 3600 - (РазницаВремени % 3600);
		КонецЕсли;
	Иначе
		СписокВыбора.Добавить(0, "00:00");
		Время = 3600;
	КонецЕсли;
	
	Пока Время < 86400 Цикл
		СписокВыбора.Добавить(Время, Формат(Дата(1,1,1)+ Время, "ДФ=HH:мм"));
		Время = Время + 3600;
	КонецЦикла;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборВремениИзСписка", ЭтотОбъект, Элемент);
	ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВремениИзСписка(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВремяВСекундах = Результат.Значение;
	
	Если ДополнительныеПараметры.Имя = "НачалоВремя" Тогда
		Начало = НачалоДня(Начало) + ВремяВСекундах;
	ИначеЕсли ДополнительныеПараметры.Имя = "КонецВремя" Тогда
		Конец = НачалоДня(Конец) + ВремяВСекундах;
	КонецЕсли;
	
	УстановитьНормуВремени();
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

