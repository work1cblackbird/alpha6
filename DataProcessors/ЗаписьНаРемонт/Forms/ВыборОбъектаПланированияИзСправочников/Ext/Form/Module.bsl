
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ПричиныОбращенияВДокументе") Тогда
		
		ПричиныОбращения
			.КомпоновщикНастроек
			.Настройки
			.ПараметрыДанных
			.УстановитьЗначениеПараметра("ПричиныОбращенияВДокументе", Параметры.ПричиныОбращенияВДокументе);
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Не передан параметр ""ПричиныОбращенияВДокументе""'");
		
	КонецЕсли;
	
	Если Параметры.Свойство("РесурсыПланирования") Тогда
		
		Автоработы
			.КомпоновщикНастроек
			.Настройки
			.ПараметрыДанных
			.УстановитьЗначениеПараметра("РесурсыПланирования", Параметры.РесурсыПланирования);
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Не передан параметр ""РесурсыПланирования""'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	НастроитьПодсказки(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАвтоработы

&НаКлиенте
Процедура АвтоработыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ ЭтоГруппа(Элементы.Автоработы.ТекущаяСтрока) Тогда
		
		СтандартнаяОбработка = Ложь;
		Далее();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПричиныОбращения

&НаКлиенте
Процедура ПричиныОбращенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ ЭтоГруппа(Элементы.ПричиныОбращения.ТекущаяСтрока) Тогда
		
		СтандартнаяОбработка = Ложь;
		Далее();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПропуститьВыбор(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаАвтоработы Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПричиныОбращения;
		Возврат;
		
	КонецЕсли;
	
	ЗавершитьВыбор();
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьПодробнуюИнформацию(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаАвтоработы Тогда
		
		СкрытьПодсказкуАвторабот = Истина;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПричиныОбращения Тогда
		
		СкрытьПодсказкуПричинОбращения = Истина;
		
	КонецЕсли;
	
	НастроитьПодсказки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда=Неопределено)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаАвтоработы Тогда
		
		ВыбраннаяАвторабота = Элементы.Автоработы.ТекущаяСтрока;
		
		Если
			Команда = Неопределено
			ИЛИ НЕ ЗначениеЗаполнено(ВыбраннаяАвторабота)
			ИЛИ НЕ ЭтоГруппа(ВыбраннаяАвторабота)
		Тогда
			
			Если ЭтоРаботаТолькоДляПланирования(ВыбраннаяАвторабота) Тогда
				
				ЗавершитьВыбор();
				Возврат;
				
			КонецЕсли;
			
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПричиныОбращения;
			Возврат;
			
		КонецЕсли;
		
		ВыбраннаяАвторабота = Неопределено;
		ПоказатьПредупреждение(, НСтр("ru = 'Выбор групп запрещен.'"),, НСтр("ru = 'Выбор автоработы'"));
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПричиныОбращения Тогда
		
		ВыбраннаяПричинаОбращения = Элементы.ПричиныОбращения.ТекущаяСтрока;
		
		Если
			Команда = Неопределено
			ИЛИ НЕ ЗначениеЗаполнено(ВыбраннаяПричинаОбращения)
			ИЛИ НЕ ЭтоГруппа(ВыбраннаяПричинаОбращения)
		Тогда
			
			ЗавершитьВыбор();
			Возврат;
			
		КонецЕсли;
		
		ВыбраннаяПричинаОбращения = Неопределено;
		ПоказатьПредупреждение(, НСтр("ru = 'Выбор групп запрещен.'"),, НСтр("ru = 'Выбор причины обращения'"));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершитьВыбор()
	
	Закрыть(Новый Структура("Авторабота,Причина", ВыбраннаяАвторабота, ВыбраннаяПричинаОбращения));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьПодсказки(Форма)
	
	Форма.Элементы.ЗаголовокАвтоработПодробный.Видимость = НЕ Форма.СкрытьПодсказкуАвторабот;
	Форма.Элементы.УбратьПодробнуюИнформациюАвтоработы.Видимость = НЕ Форма.СкрытьПодсказкуАвторабот;
	Форма.Элементы.ЗаголовокПричинОбращенияПодробный.Видимость = НЕ Форма.СкрытьПодсказкуПричинОбращения;
	Форма.Элементы.УбратьПодробнуюИнформациюПричиныОбращения.Видимость = НЕ Форма.СкрытьПодсказкуПричинОбращения;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Установка оформления для списка причин обращения
	ЭлементУсловногоОформления = ПричиныОбращения
		.КомпоновщикНастроек
		.Настройки
		.УсловноеОформление
		.Элементы
		.Добавить();
	
	ЭлементУсловногоОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбораДанных = ЭлементУсловногоОформления
		.Отбор
		.Элементы
		.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЕстьВДокументе");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Истина;
	ЭлементОтбораДанных.Использование = Истина;
	
	ЭлементОформления = ЭлементУсловногоОформления
		.Оформление
		.Элементы
		.Найти("Font");
	ЭлементОформления.Значение = Новый Шрифт(,, Истина);
	ЭлементОформления.Использование = Истина;
	
	ЭлементОформленияЦветФона = ЭлементУсловногоОформления
		.Оформление
		.Элементы
		.Найти("ЦветФона");
	ЭлементОформленияЦветФона.Значение = ЦветаСтиля.ЦветФонаВиджета;
	ЭлементОформленияЦветФона.Использование = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоГруппа(Элемент)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Элемент, "ЭтоГруппа");
	
КонецФункции

&НаСервереБезКонтекста
Функция ЭтоРаботаТолькоДляПланирования(Элемент)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Элемент, "ВидИспользования")
		= Перечисления.ВидыИспользованияАвторабот.Планирование;
	
КонецФункции

#КонецОбласти
