
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьПоследовательности();
	ЗаполнитьОрганизации();
	
	ПрочитатьПараметры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	
	ЗаписатьПараметры();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПоследовательности()
	
	КонфигурацияПоследовательностей = Обработки.ВосстановлениеПоследовательностей.КонфигурацияПоследовательностей();
	
	Для Каждого Последовательность Из КонфигурацияПоследовательностей Цикл
		
		НоваяСтрока = ПоследовательностиСписок.Добавить();
		НоваяСтрока.ИмяГраницы = Последовательность.Имя;
		НоваяСтрока.Последовательность = Последовательность.Представление;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОрганизации()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления");
	
	ОрганизацииСписок.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация"));
	
КонецПроцедуры

&НаСервере
Функция Задание()
	
	Возврат РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.ВосстановлениеПоследовательностей);
	
КонецФункции

&НаСервере
Процедура ПрочитатьПараметры()
	
	ПараметрыЗадания = Задание().Параметры;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗадания) ИЛИ ТипЗнч(ПараметрыЗадания[0]) <> Тип("Структура") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПоДату = ПолучитьЗначениеПараметраСтруктуры(ПараметрыЗадания[0], "ПоДату", Дата(1, 1, 1));
	СписокПоследовательностей = ПолучитьЗначениеПараметраСтруктуры(ПараметрыЗадания[0], "СписокПоследовательностей");
	
	Если ЗначениеЗаполнено(СписокПоследовательностей) И ТипЗнч(СписокПоследовательностей) = Тип("Структура") Тогда
		
		Для Каждого Последовательность Из ПоследовательностиСписок Цикл
			
			Последовательность.Восстановить = СписокПоследовательностей.Свойство(Последовательность.ИмяГраницы);
			
		КонецЦикла;
		
	КонецЕсли;
	
	СписокОрганизаций = ПолучитьЗначениеПараметраСтруктуры(ПараметрыЗадания[0], "СписокОрганизаций");
	
	Если ЗначениеЗаполнено(СписокОрганизаций) И ТипЗнч(СписокОрганизаций) = Тип("СписокЗначений") Тогда
		
		Для Каждого Организация Из ОрганизацииСписок Цикл
			
			ОрганизацияВПараметрах = СписокОрганизаций.НайтиПоЗначению(Организация.Значение);
			
			Если ОрганизацияВПараметрах = Неопределено Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Организация.Пометка = ОрганизацияВПараметрах.Пометка;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ПрочитатьПараметры()

&НаСервере
Процедура ЗаписатьПараметры()
	
	Задание = Задание();
	Задание.Параметры.Очистить();
	СписокПоследовательностей = Новый Структура;
	
	Для Каждого Последовательность Из ПоследовательностиСписок Цикл
		
		Если Последовательность.Восстановить Тогда
			
			СписокПоследовательностей.Вставить(Последовательность.ИмяГраницы, Последовательность.Последовательность);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("СписокПоследовательностей", СписокПоследовательностей);
	ПараметрыЗадания.Вставить("СписокОрганизаций", ОрганизацииСписок);
	ПараметрыЗадания.Вставить("ПоДату", ПоДату);
	Задание.Параметры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыЗадания);
	Задание.Записать();
	
КонецПроцедуры

#КонецОбласти




