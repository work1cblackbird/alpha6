#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	АдресСервера = ЛицензированиеСервер.АдресСервераЛицензирования();
    ТекущийАдресСервера = АдресСервера;
	
	Если НЕ ЗначениеЗаполнено(АдресСервера) Тогда
		Объект.РежимСтарта = 0;
		Объект.АдресСервера = "*LOCAL";
		Элементы.АдресСервера.Доступность = Ложь;
	ИначеЕсли ВРег(АдресСервера) = "*LOCAL" ИЛИ ВРег(АдресСервера) = "LOCALHOST" Тогда
		Объект.РежимСтарта = 0;
		Объект.АдресСервера = АдресСервера;
		Элементы.АдресСервера.Доступность = Ложь;
	ИначеЕсли  ВРег(АдресСервера) = "*AUTO" Тогда
		Объект.РежимСтарта = 1;
		Объект.АдресСервера = "";
	Иначе
		Объект.РежимСтарта = 1;
		Объект.АдресСервера = АдресСервера;
	КонецЕсли;
	
	СписокРешений = ЛицензированиеПоддержка.СписокРешений();
	КоличествоРешений = СписокРешений.Количество();
	
	Если КоличествоРешений > 1 Тогда // Несколько решений
		СписокВыбораРешений = Элементы.ВыбранноеРешение.СписокВыбора;
		ИндексРешения = 0;
		Для Каждого ЭлементСписка Из СписокРешений Цикл
			СписокВыбораРешений.Добавить(ИндексРешения, ЭлементСписка.Значение);
			ИндексРешения = ИндексРешения + 1;
		КонецЦикла;
	КонецЕсли;
	
	ВыбранноеРешение = 0;

	Настройки = ХранилищеОбщихНастроек.Загрузить("РегистрационнаяИнформация",,,"");
	Если Не Настройки = Неопределено Тогда
		Для Каждого Настройка Из Настройки Цикл
			Объект[Настройка.Ключ] = Настройка.Значение;
		КонецЦикла;
	КонецЕсли;
	
	// Добавление списка выбора огранизаций и ИНН
	Если НЕ Метаданные.Справочники.Найти("Организации") = Неопределено Тогда
		Если НЕ Метаданные.Справочники.Организации.Реквизиты.Найти("ИНН")=Неопределено Тогда
			ЕстьИНН = Истина;
		КонецЕсли;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	&УсловиеПоИНН,
		               |	Организации.Наименование КАК Организация
		               |ИЗ
		               |	Справочник.Организации КАК Организации";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеПоИНН,",?(ЕстьИНН,"Организации.ИНН КАК ИНН,",""));
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		Если ЕстьИНН Тогда
			ОрганизацииИнн.Загрузить(РезультатЗапроса);
		КонецЕсли;
		Элементы.Организация.КнопкаВыпадающегоСписка = Истина;
		Элементы.Организация.СписокВыбора.ЗагрузитьЗначения(РезультатЗапроса.ВыгрузитьКолонку("Организация"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	ПереходКСтранице(Элементы.СтраницаВыборСервера);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьНастройки();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);

	Если ПустаяСтрока(СтрЗаменить(Объект.ПинКод,"-","")) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не указан пин-код'; en = 'PIN is not specified'");
		Сообщение.Поле = "Объект.ПинКод";
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(Сообщение.Текст);
		Отказ = Истина;
	Иначе
		
		Если (РежимАктивации = 0 И СтрДлина(СокрЛП(Объект.ПинКод)) < 7) ИЛИ (РежимАктивации = 1 И СтрДлина(СокрЛП(Объект.ПинКод)) < 23) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Неверно указан пин-код'; en = 'Incorrect PIN'");
			Сообщение.Поле = "Объект.ПинКод";
			Сообщение.Сообщить();
			ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(Сообщение.Текст);
			Отказ = Истина;
		КонецЕсли;

	КонецЕсли;
	
	Если РежимАктивации = 0 Тогда //  Рег. номер нужен для НЕ совместных продуктов
		Если ПустаяСтрока(Объект.РегистрационныйНомер) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Не указан регистрационный номер'; en = 'Registration number is not specified registration number'");
			Сообщение.Поле = "Объект.РегистрационныйНомер";
			Сообщение.Сообщить();
			ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(Сообщение.Текст);
			Отказ = Истина;
		Иначе
			Если СтрДлина(СокрЛП(Объект.РегистрационныйНомер)) < 13 Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = НСтр("ru = 'Некорректно указан регистрационный номер.
                                        |Номер должен содержать не менее 13 цифр'; en = 'Incorrectly specified registration number.
                                        |Number must be at least 13 digits'");
				Сообщение.Поле = "Объект.РегистрационныйНомер";
				Сообщение.Сообщить();
				ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(Сообщение.Текст);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если ВРег(Настройки["Объект.АдресСервера"]) = "*AUTO" Тогда
		Настройки["Объект.АдресСервера"] = "";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Выбор файла ответа активации
&НаКлиенте
Процедура ИмяФайлаОтветаАктивацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачатьПодключениеРасширенияРаботыСФайлами(Новый ОписаниеОповещения("ПослеПодключенияРасширенияРаботыСФайлами", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияРасширенияРаботыСФайлами(Подключено, ДополнительныеПараметры) Экспорт
	
	Если Подключено Тогда
		ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ВыборФайла.МножественныйВыбор = Ложь;
		ВыборФайла.Заголовок = НСтр("ru = 'Выбор файла'; en = 'File selection'");
		ВыборФайла.Фильтр = НСтр("ru = 'Текстовый документ(*.txt)|*.txt|Все файлы (*.*)|*.*'; en = 'Text document(*.txt)|*.txt|All files (*.*)|*.*'");
		ВыборФайла.ИндексФильтра = 0;
		ВыборФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайлаОтветаАктивации", ЭтотОбъект, Новый Структура("ВыборФайла", ВыборФайла)));
	Иначе
		ОписаниеОшибки = НСтр("ru = 'Ошибка открытия файла. Попробуйте открыть через тонкий или толстый клиент.'; en = 'Error opening file. Try opening through a thin or thick client.'");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайлаОтветаАктивации(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ВыборФайла = ДополнительныеПараметры.ВыборФайла;
	
	
	Результат = (ВыбранныеФайлы <> Неопределено);
	ПолноеИмяФайла = ВыборФайла.ПолноеИмяФайла;
	
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаОтветаАктивации = ПолноеИмяФайла;

КонецПроцедуры

&НаКлиенте
Процедура АдресСервераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СписокСерверов = СписокСерверов(ОписаниеОшибки);
	СписокСерверов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("АдресСервераНачалоВыбораЗавершение", ЭтотОбъект), НСтр("ru = 'Выберите сервер лицензирования'; en = 'Select the license server'"));
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Объект.АдресСервера = ?(ВыбранныйЭлемент = Неопределено, Объект.АдресСервера, ВыбранныйЭлемент.Значение);

КонецПроцедуры

&НаКлиенте
Процедура РежимСтартаПриИзменении(Элемент)
	Если Объект.РежимСтарта = 0 Тогда
		Объект.АдресСервера = "*LOCAL";
		Элементы.АдресСервера.Доступность = Ложь;
		Элементы.ПодключитьсяКВыбранномуСерверуПослеАктивации.Доступность = Ложь;
		Объект.ПодключитьсяКВыбранномуСерверуПослеАктивации = Ложь;
	Иначе
		Элементы.АдресСервера.Доступность = Истина;
		Элементы.ПодключитьсяКВыбранномуСерверуПослеАктивации.Доступность = Истина;
		Объект.ПодключитьсяКВыбранномуСерверуПослеАктивации = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	    
	// Добавление ИНН
	Если ЕстьИНН И Элементы.Организация.СписокВыбора.Количество()>0 И ЗначениеЗаполнено(Объект.Организация) Тогда
		ПараметрыОтбора = Новый Структура("Организация",Объект.Организация);
		НайденныеСтроки = ОрганизацииИнн.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество()>0 И ЗначениеЗаполнено(НайденныеСтроки[0].ИНН) Тогда
			Объект.ИНН = НайденныеСтроки[0].ИНН;
		Иначе
			Объект.ИНН = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаАктивацияВебСервис Тогда
		ТекущийАдрес = ЛицензированиеСервер.АдресСервераЛицензирования();
		АдресАктивации = Объект.АдресСервера;
		
		Если (НЕ ЗначениеЗаполнено(ТекущийАдрес) ИЛИ ВРег(ТекущийАдрес) = "*LOCAL" ИЛИ ВРег(ТекущийАдрес) = "LOCALHOST")
			И (НЕ ЗначениеЗаполнено(АдресАктивации) ИЛИ ВРег(АдресАктивации) = "*LOCAL" ИЛИ ВРег(АдресАктивации) = "LOCALHOST") Тогда
			
		Иначе
			Текст = НСтр("ru = 'Адрес текущего сервера лицензирования:'; en = 'Address of the current license server:'")+ Символы.НПП + ТекущийАдрес
				+ НСтр("ru = '|Адрес выбранного сервера для активации ключа:'; en = '|Address of the selected server for the key activation:'") + Символы.НПП + АдресАктивации;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БлокОтветаТелефоннойАктивации1ПриИзменении(Элемент)
	
	ПроверитьСтрокуДанныхТелефоннойАктивации(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура БлокОтветаТелефоннойАктивации1ИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	ПроверитьСтрокуДанныхТелефоннойАктивации(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВариантАктивацииПриИзменении(Элемент)
	Если Объект.ВариантАктивации = 0 Тогда
		Элементы.ДекорацияСпособАктивации.Заголовок = "	" + НСтр("ru = 'Онлайн-активация выполняется через интернет. Наиболее быстрый способ активации.'");
	ИначеЕсли Объект.ВариантАктивации = 1 Тогда
		Элементы.ДекорацияСпособАктивации.Заголовок = "	" + НСтр("ru = 'При выборе этого способа активации - программой создается файл запроса активации. 
		|Этот файл каким-либо способом, например, по электронной почте, передается в центр лицензирования.
		|На основании данного файла запроса в центре лицензирования создается файл активации, который передается обратно.
		|Этот файл активации следует загрузить в систему защиты. 
		|В результате этой загрузки будет активирован программный ключ.'");
	Иначе
		Элементы.ДекорацияСпособАктивации.Заголовок = "	" + НСтр("ru = 'При выборе этого способа активации - пользователь звонит по телефону в центр лицензирования и зачитывает цифровой код, 
		|отображенный программой. 
		|В ответ из центра сообщают цифровой код для активации.
		|Пользователь вводит этот код в соответствующее поле и активирует программный ключ.
		|Данный способ удобен, если есть только телефонная связь, а связь через интернет - отсутствует.'");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияАдресЭлектроннойПочтыНажатие(Элемент)
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
    РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
	АдресЭлектроннойПочты = ЛицензированиеСервер.АдресЭлектроннойПочтыДляАктивации(ИмяМакетаПараметровЛицензирования);
	СтрокаMailTo = "mailto:" + Элементы.ДекорацияАдресЭлектроннойПочты.Заголовок;
	
	НачатьЗапускПриложения(Неопределено, СтрокаMailTo);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВперед(Команда)
	ОбработкаДействия("Вперед");
КонецПроцедуры

&НаКлиенте
Процедура КомандаНазад(Команда)
	ОбработкаДействия("Назад");
КонецПроцедуры

&НаКлиенте
Процедура КомандаАктивироватьВручную(Команда)
	
	Файл = Новый Файл(ИмяФайлаОтветаАктивации);
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("КомандаАктивироватьВручнуюЗавершение", ЭтотОбъект, Новый Структура("Файл", Файл)));

КонецПроцедуры

&НаКлиенте
Процедура КомандаАктивироватьВручнуюЗавершение(Существует, ДополнительныеПараметры) Экспорт
	
	Если НЕ Существует Тогда
		СтрокаСообщения = НСтр("ru = 'Указанный файл не существует'; en = 'The specified file does not exist'");
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрокаСообщения;
		Сообщение.Сообщить();				
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(СтрокаСообщения);
		Возврат;
	КонецЕсли;
	ПотокЧтения = Новый ТекстовыйДокумент();
	КодировкаФайла = Нстр("ru = 'windows-1251'; en = 'windows-1252'");
	ПотокЧтения.НачатьЧтение(Новый ОписаниеОповещения("КомандаАктивироватьВручнуюЗавершениеЗавершение", ЭтотОбъект, Новый Структура("ПотокЧтения", ПотокЧтения)), ИмяФайлаОтветаАктивации,КодировкаФайла);

КонецПроцедуры

&НаКлиенте
Процедура КомандаАктивироватьВручнуюЗавершениеЗавершение(ДополнительныеПараметры1) Экспорт
	
	ПотокЧтения = ДополнительныеПараметры1.ПотокЧтения;
	
	
	ТекстОтвета = ПотокЧтения.ПолучитьТекст();
	Результат = ЛицензированиеСервер.АктивироватьПрограммныйКлючНаУказанномСервере(Объект.АдресСервера, ТекстОтвета, ОписаниеОшибки);
	
	Если НЕ Результат Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();				
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
	Иначе
		Если СервераРазличаются() Тогда
			ПереходКСтранице(Элементы.СтраницаДействияПослеАктивации);
		Иначе
			Закрыть(ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаАктивироватьВебСервис(Команда)
	
	КодированнаяСтрока = СформироватьЗапросАктивации();
	Если КодированнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
	
	Если ИмяМакетаПараметровЛицензирования = Неопределено Тогда
		ОписаниеОшибки = НСтр("ru = 'Неверный формат имени обработки:'; en = 'Invalid name format of data processor:'") + Символы.ПС + Объект.ИмяОбработки;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	Если РежимАктивации = 0 Тогда
		ОтветАктивации = ЛицензированиеСервер.АктивироватьЧерезВебСервис(КодированнаяСтрока, 0, ИмяМакетаПараметровЛицензирования, ОписаниеОшибки);
	Иначе
		ОтветАктивации = ЛицензированиеСервер.АктивироватьЧерезВебСервис(КодированнаяСтрока, 2, ИмяМакетаПараметровЛицензирования, ОписаниеОшибки);
	КонецЕсли;
	
	Если ОтветАктивации = "" Тогда
		Закрыть(ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	Результат = ЛицензированиеСервер.АктивироватьПрограммныйКлючНаУказанномСервере(Объект.АдресСервера, ОтветАктивации, ОписаниеОшибки);
	Если НЕ Результат Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
	Иначе
		Если СервераРазличаются() Тогда
			ПереходКСтранице(Элементы.СтраницаДействияПослеАктивации);
		Иначе
			Закрыть(ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаАктивироватьПоТелефону(Команда)
	
	Если ПустаяСтрока(СтрЗаменить(Объект.БлокОтветаТелефоннойАктивации1,"-","")) Тогда
		СтрокаСообщения = НСтр("ru = 'Заполните ответную строку активации'; en = 'Fill in the activation response string'");
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрокаСообщения;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(СтрокаСообщения);
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(СтрЗаменить(Объект.БлокОтветаТелефоннойАктивации2,"-","")) Тогда
		СтрокаСообщения = НСтр("ru = 'Заполните ответную строку активации'; en = 'Fill in the activation response string'");
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрокаСообщения;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(СтрокаСообщения);
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(СтрЗаменить(Объект.БлокОтветаТелефоннойАктивации3,"-","")) Тогда
		СтрокаСообщения = НСтр("ru = 'Заполните ответную строку активации'; en = 'Fill in the activation response string'");
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрокаСообщения;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(СтрокаСообщения);
		Возврат;
	КонецЕсли;
	
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
	
	ОписаниеОшибки = "";
	ДанныеАктивации = Новый Структура;
	ДанныеАктивации.Вставить("ПредставлениеПинКода",Объект.ПинКод);
	ДанныеАктивации.Вставить("ОписаниеОборудования",Объект.ОписаниеОборудования);
	ДанныеАктивации.Вставить("РегистрационныйНомер",Объект.РегистрационныйНомер);
	ДанныеАктивации.Вставить("ФИО", Объект.Ответственный);
	ДанныеАктивации.Вставить("Организация", Объект.Организация);
	ДанныеАктивации.Вставить("ИНН", Объект.ИНН);
	ДанныеАктивации.Вставить("Телефон",Объект.Телефон);
	ДанныеАктивации.Вставить("Почта",Объект.ЭлектроннаяПочта);
	ДанныеАктивации.Вставить("Сайт",Объект.Сайт);
	ДанныеАктивации.Вставить("Установщик", "");
	
	ОтветАктивации = Объект.БлокОтветаТелефоннойАктивации1 + Символы.ПС;
	ОтветАктивации = ОтветАктивации + Объект.БлокОтветаТелефоннойАктивации2 + Символы.ПС;
	ОтветАктивации = ОтветАктивации + Объект.БлокОтветаТелефоннойАктивации3 + Символы.ПС;
	
	Если НЕ ЛицензированиеСервер.АктивироватьКлючПоТелефону(ИмяМакетаПараметровЛицензирования, Объект.АдресСервера, ОтветАктивации, ДанныеАктивации, ОписаниеОшибки) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
	Иначе
		Если СервераРазличаются() Тогда
			ПереходКСтранице(Элементы.СтраницаДействияПослеАктивации);
		Иначе
			Закрыть(ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьФайл(Команда)
	
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
    РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = НСтр("ru = 'Сохранить файл запроса активации как'; en = 'Save the activation reques file as'");
	Диалог.Фильтр = НСтр("ru = 'Файлы *.txt|*.txt'; en = 'Files *.txt|*.txt'");
	
	Если РежимАктивации = 0 Тогда
		Диалог.ПолноеИмяФайла = "KAR" + Объект.РегистрационныйНомер + ".txt";
	Иначе
		ЧастьКода = СтрЗаменить(Лев(Объект.ПинКод, 7),"-","");
		Диалог.ПолноеИмяФайла = "KAR" + ЧастьКода + ".txt";
	КонецЕсли;
			
	Диалог.Показать(Новый ОписаниеОповещения("КомандаСохранитьФайлЗавершение", ЭтотОбъект, Новый Структура("Диалог, ИмяМакетаПараметровЛицензирования", Диалог, ИмяМакетаПараметровЛицензирования)));
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьФайлЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	ИмяМакетаПараметровЛицензирования = ДополнительныеПараметры.ИмяМакетаПараметровЛицензирования;
	
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли;
	
	Файл = Новый ТекстовыйДокумент();
	Файл.Записать(ИмяФайла, Нстр("ru = 'windows-1251'; en = 'windows-1252'"));
	
	КодированнаяСтрока = СформироватьЗапросАктивации();
	
	Если КодированнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Файл.УстановитьТекст(КодированнаяСтрока);
	Файл.Записать(ИмяФайла, Нстр("ru = 'windows-1251'; en = 'windows-1252'"));
	
	Элементы.ДекорацияИмяФайла.Заголовок = ИмяФайла;
	Элементы.ДекорацияАдресЭлектроннойПочты.Заголовок = ЛицензированиеСервер.АдресЭлектроннойПочтыДляАктивации(ИмяМакетаПараметровЛицензирования);
	
	ПереходКСтранице(Элементы.СтраницаАктивацияФайлИнструкция);

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗавершитьРаботуМастера(Команда)
	Если Объект.ПодключитьсяКВыбранномуСерверуПослеАктивации Тогда
		ЛицензированиеСервер.УстановитьАдресСервераЛицензирования(Объект.АдресСервера);
		Оповестить("СерверЛицензирования",Объект.АдресСервера);
	КонецЕсли;
	Закрыть(ОписаниеОшибки);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьИмяОбработкиПоИндексу(Индекс)
	СписокРешений = ЛицензированиеПоддержка.СписокРешений();
	ТекИндекс = 0;
	Для Каждого ЭлементСписка Из СписокРешений Цикл
		Если ТекИндекс = Индекс Тогда
			Возврат ЭлементСписка.Ключ;
		Иначе
			ТекИндекс = ТекИндекс + 1;
		КонецЕсли;
	КонецЦикла;
КонецФункции

// Обработка действий пользователя
&НаКлиенте
Процедура ОбработкаДействия(Действие)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборСервера Тогда
		Если Объект.РежимСтарта = 1 Тогда
			Если ПустаяСтрока(Объект.АдресСервера) ИЛИ ВРег(Объект.АдресСервера) = "*AUTO" Тогда
				СтрокаСообщения = НСтр("ru = 'Укажите адрес сервера лицензирования'; en = 'Specify the address of the license server'");
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = СтрокаСообщения;
				Сообщение.Сообщить();
				ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(СтрокаСообщения);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если КоличествоРешений = 1 Тогда
			Объект.ИмяОбработки = ПолучитьИмяОбработкиПоИндексу(0);
			ПереходКСтранице(Элементы.СтраницаВариантАктивации);
		Иначе
			ПереходКСтранице(Элементы.СтраницаВыборРешения);
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборРешения Тогда
		
		Если Действие =  "Вперед" Тогда
			Объект.ИмяОбработки = ПолучитьИмяОбработкиПоИндексу(ВыбранноеРешение);
			ПереходКСтранице(Элементы.СтраницаВариантАктивации);
		Иначе
			ПереходКСтранице(Элементы.СтраницаВыборСервера);
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВариантАктивации Тогда
		Если Действие = "Вперед" Тогда
			
			ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
			Если ИмяМакетаПараметровЛицензирования = Неопределено Тогда
				ОписаниеОшибки = НСтр("ru = 'Неверный формат имени обработки:'; en = 'Invalid name format of data processor:'") + Символы.ПС + Объект.ИмяОбработки;
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = ОписаниеОшибки;
				Сообщение.Сообщить();
				ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
				Возврат;
			КонецЕсли;	
			
			Если Объект.ВариантАктивации = 0 Тогда //веб-сервис
				
				Если ЛицензированиеСервер.РазрешенаАктивацияЧерезВебСервис(ИмяМакетаПараметровЛицензирования) Тогда
					ПереходКСтранице(Элементы.СтраницаАктивацияПараметры);
				Иначе
					ОписаниеОшибки = НСтр("ru = 'Для этой конфигурации отсутствует возможность активации через интернет'; en = 'For this product there is no possibility of activation via the Internet'");
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст = ОписаниеОшибки;
					Сообщение.Сообщить();
					ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
					Возврат;
				КонецЕсли;
			ИначеЕсли Объект.ВариантАктивации = 1 Тогда //вручную через интернет
				Если ЛицензированиеСервер.РазрешенаАктивацияПоПочте(ИмяМакетаПараметровЛицензирования) Тогда
					ПереходКСтранице(Элементы.СтраницаЗапросОтвет);
				Иначе
					ОписаниеОшибки = НСтр("ru = 'Для этой конфигурации отсутствует возможность активации через файловый запрос'; en = 'For this product there is no possibility of activation by file request'");
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст = ОписаниеОшибки;
					Сообщение.Сообщить();
					ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
					Возврат;
				КонецЕсли;
			Иначе // по телефону
				Если ЛицензированиеСервер.РазрешенаАктивацияПоТелефону(ИмяМакетаПараметровЛицензирования) Тогда
					ПереходКСтранице(Элементы.СтраницаАктивацияПараметры);
				Иначе
					ОписаниеОшибки = НСтр("ru = 'Для этой конфигурации отсутствует возможность активации по телефону'; en = 'For this configuration, there is no possibility of activation by phone'");
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст = ОписаниеОшибки;
					Сообщение.Сообщить();
					ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
					Возврат;
				КонецЕсли;
			КонецЕсли;
		Иначе //Назад
			Если КоличествоРешений = 1 Тогда
				ПереходКСтранице(Элементы.СтраницаВыборСервера);
			Иначе
				ПереходКСтранице(Элементы.СтраницаВыборРешения);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗапросОтвет Тогда
		Если Действие = "Вперед" Тогда
			// Вперед
			Если Объект.ЗапросОтвет = 0 Тогда
				ПереходКСтранице(Элементы.СтраницаАктивацияПараметры);
			Иначе
				ПереходКСтранице(Элементы.СтраницаОтветАктивации);
			КонецЕсли;
		Иначе
			// Назад
			ПереходКСтранице(Элементы.СтраницаВариантАктивации);
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаАктивацияПараметры Тогда
		Если Действие = "Вперед" Тогда
			
			Если НЕ ПроверитьЗаполнение() Тогда
				Возврат;
			КонецЕсли;

			Если НЕ ЛицензированиеСервер.ПолучитьСигнатуруОборудованияУказанногоСервера(Объект.АдресСервера, Объект.СигнатураОборудования, Объект.ОписаниеОборудования, ОписаниеОшибки) Тогда	
				ОписаниеОшибки = НСтр("ru = 'Не удалось получить идентификатор аппаратной привязки. '; en = 'Failed to get the hardware ID binding.'") + ОписаниеОшибки;
				Сообщение = Новый СообщениеПользователю();
   				Сообщение.Текст = ОписаниеОшибки;
   				Сообщение.УстановитьДанные(ЭтотОбъект);
    			Сообщение.Сообщить();
				ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
				Возврат;
			КонецЕсли;
			
			ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
			РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);

			Если РежимАктивации = 0 Тогда
				РезультатПроверкиПинКода = ЛицензированиеСервер.ЭтоПинКод(Объект.ПинКод, ОписаниеОшибки);
			Иначе
				РегистрационныйНомер = "";
				КороткийПинКод = "";	
				РезультатПроверкиПинКода = ЛицензированиеСервер.ЭтоДлинныйПинКод(Объект.ПинКод, РегистрационныйНомер, КороткийПинКод, ОписаниеОшибки);
			КонецЕсли;
			
			Если РезультатПроверкиПинКода = Неопределено Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = ОписаниеОшибки;
				Сообщение.Сообщить();
				ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
				Возврат;
			ИначеЕсли (НЕ РезультатПроверкиПинКода) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = НСтр("ru = 'Некорректно указан пин-код'; en = 'Incorrect PIN'");
				Сообщение.Поле = "Объект.ПинКод";
				Сообщение.Сообщить();
				ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(Сообщение.Текст);
				Возврат;
			КонецЕсли;
							
			Если Объект.ВариантАктивации = 0 Тогда
				ПереходКСтранице(Элементы.СтраницаАктивацияВебСервис);
			ИначеЕсли Объект.ВариантАктивации = 1 Тогда //файл
				ПереходКСтранице(Элементы.СтраницаАктивацияФайл);
			Иначе //телефон
				Объект.БлокЗапросаТелефоннойАктивации = СформироватьЗапросТелефоннойАктивации();
				ТекстИнструкцииПоАктивации = НСтр("ru = 'Позвоните в центр лицензирования по телефону ""'; en = 'Call in Licensing center by phone ""'") + ЛицензированиеСервер.ТелефонЦентраЛицензирования(ИмяМакетаПараметровЛицензирования) + НСтр("ru = '"".
				|Продиктуйте регистрационные данные и запрос активации ключа.
				|Затем, перейдите на следующую страницу и введите ответ активации ключа.'; en = '"".
				|Dictate the registration data and an activation key.
				|Then, go to the next page and enter the activation key response.'");
				Элементы.ДекорацияИнструкцияПоАктивации.Заголовок = ТекстИнструкцииПоАктивации;
				ПереходКСтранице(Элементы.СтраницаЗапросАктивацииТелефон);
			КонецЕсли;
		Иначе
			ПереходКСтранице(Элементы.СтраницаВариантАктивации);
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаАктивацияФайл Тогда
		Если Действие = "Назад" Тогда
			ПереходКСтранице(Элементы.СтраницаАктивацияПараметры);
		Иначе
			Если ПустаяСтрока(ИмяФайла) Тогда
				ПереходКСтранице(Элементы.СтраницаОтветАктивации);
			Иначе
				ПереходКСтранице(Элементы.СтраницаАктивацияФайлИнструкция);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтветАктивации Тогда
		Если Действие = "Назад" Тогда
			Если Объект.ЗапросОтвет = 0 Тогда
				Если ПустаяСтрока(ИмяФайла) Тогда
					ПереходКСтранице(Элементы.СтраницаАктивацияФайл);
				Иначе
					ПереходКСтранице(Элементы.СтраницаАктивацияФайлИнструкция);
				КонецЕсли;
			Иначе
				ПереходКСтранице(Элементы.СтраницаЗапросОтвет);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаАктивацияВебСервис Тогда
		Если Действие = "Назад" Тогда
			ПереходКСтранице(Элементы.СтраницаАктивацияПараметры);
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗапросАктивацииТелефон Тогда
		Если Действие = "Вперед" Тогда
			ПереходКСтранице(Элементы.СтраницаАктивацияТелефон);
		Иначе //назад
			ПереходКСтранице(Элементы.СтраницаАктивацияПараметры);
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаАктивацияТелефон Тогда
		Если Действие = "Назад" Тогда
			ПереходКСтранице(Элементы.СтраницаЗапросАктивацииТелефон);
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаАктивацияФайлИнструкция Тогда
		Если Действие = "Вперед" Тогда
			ПереходКСтранице(Элементы.СтраницаОтветАктивации);
		Иначе
			ПереходКСтранице(Элементы.СтраницаАктивацияФайл);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Переход к странице формы
// Параметры
//   Страница - ГруппаФормы - страница, на которую будет осуществлен переход.
&НаКлиенте
Процедура ПереходКСтранице(Страница)
	Для Каждого ТекСтраница Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		ТекСтраница.Видимость = Ложь;
	КонецЦикла;
	Страница.Видимость = Истина;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Страница;
	
	ТекущаяСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	
	Если  ТекущаяСтраница = Элементы.СтраницаВыборСервера Тогда
		Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаКомандаНазад.Доступность = Ложь;
	Иначе
		Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаКомандаНазад.Доступность = Истина;
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.СтраницаАктивацияВебСервис ИЛИ ТекущаяСтраница = Элементы.СтраницаОтветАктивации 
		ИЛИ ТекущаяСтраница = Элементы.СтраницаАктивацияТелефон ИЛИ ТекущаяСтраница = Элементы.СтраницаДействияПослеАктивации Тогда
		
		Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаКомандаВперед.Доступность = Ложь;
	Иначе
		Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаКомандаВперед.Доступность = Истина;
	КонецЕсли;
	
	Если Страница = Элементы.СтраницаАктивацияПараметры Тогда
		ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
		Если ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования) = 0 Тогда
			Элементы.ПинКод.Маска = "999-999";
			Элементы.ПинКод.Ширина = 9;
			Элементы.РегистрационныйНомер.Видимость = Истина;
			Элементы.НадписьРегистрационныйНомер.Видимость = Истина;
			Элементы.НадписьРегистрационныйНомерПоТелефону.Видимость = Истина;
			Элементы.НадписьРегистрационныйНомерФайл.Видимость = Истина;
			Элементы.ДекорацияРегНомерПин.Заголовок = НСтр("ru = 'Укажите регистрационный номер программного продукта и прилагающийся к продукту пин-код'");
		Иначе
			Элементы.ПинКод.Маска = "999-999-999-999-999-999";
			Элементы.ПинКод.Ширина = 23;
			Элементы.РегистрационныйНомер.Видимость = Ложь;
			Элементы.НадписьРегистрационныйНомер.Видимость = Ложь;
			Элементы.НадписьРегистрационныйНомерПоТелефону.Видимость = Ложь;
			Элементы.НадписьРегистрационныйНомерФайл.Видимость = Ложь;
			Элементы.ДекорацияРегНомерПин.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.СтраницаВариантАктивации Тогда
		ВариантАктивацииПриИзменении(Элементы.ВариантАктивации);
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.СтраницаАктивацияФайл Тогда
		Элементы.ФормаКомандаВперед.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

// Формирует запрос активации программного ключа
&НаКлиенте
Функция СформироватьЗапросАктивации()
	
	#Если ВебКлиент Тогда
		ВызватьИсключение Нстр("ru = 'Операция не поддерживается в веб-клиенте.'");		
	#КонецЕсли
	
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
	
	ТекстXML = Новый ЗаписьXML;
	ТекстXML.УстановитьСтроку();
	
	ТекстXML.ЗаписатьОбъявлениеXML();
	ТекстXML.ЗаписатьНачалоЭлемента("sd");
	
	ТекстXML.ЗаписатьНачалоЭлемента("Activation");
	
	Если РежимАктивации = 0 Тогда
		ТекстXML.ЗаписатьАтрибут("Type", "0");
		
		ТекстXML.ЗаписатьАтрибут("PinCode", Объект.ПинКод);
		ТекстXML.ЗаписатьАтрибут("Regnumber", Объект.РегистрационныйНомер);
		
	Иначе
		ТекстXML.ЗаписатьАтрибут("Type", "2");
		ТекстXML.ЗаписатьАтрибут("PinCode", Объект.ПинКод);
		ТекстXML.ЗаписатьАтрибут("Regnumber", "");
	КонецЕсли;
	
	ТекстXML.ЗаписатьАтрибут("Signature", Объект.СигнатураОборудования);
	ТекстXML.ЗаписатьАтрибут("HIDText", Объект.ОписаниеОборудования);
	
	ТекстXML.ЗаписатьКонецЭлемента();
	
	ТекстXML.ЗаписатьНачалоЭлемента("RegInfo");
	
	ТекстXML.ЗаписатьАтрибут("Responsible", Объект.Ответственный);
	ТекстXML.ЗаписатьАтрибут("Organization", Объект.Организация);
	ТекстXML.ЗаписатьАтрибут("INN", Объект.ИНН);
	ТекстXML.ЗаписатьАтрибут("Phone", Объект.Телефон);
	ТекстXML.ЗаписатьАтрибут("email", Объект.ЭлектроннаяПочта);
	ТекстXML.ЗаписатьАтрибут("web", Объект.Сайт);
	ТекстXML.ЗаписатьАтрибут("installer", Объект.Установщик);
	
	ТекстXML.ЗаписатьКонецЭлемента();
	ТекстXML.ЗаписатьКонецЭлемента();
	
	СтрокаАктивации = ТекстXML.Закрыть();
		
    КодированнаяСтрока = "";
	ОписаниеОшибки="";
	Если НЕ ЛицензированиеСервер.ЗакодироватьСтроку(СтрокаАктивации, КодированнаяСтрока, ОписаниеОшибки) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
		Возврат Неопределено;
	КонецЕсли;

	Возврат КодированнаяСтрока;
КонецФункции

// Формирует запрос телефонной активации программного ключа
&НаКлиенте
Функция СформироватьЗапросТелефоннойАктивации()
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);

	Если РежимАктивации = 0 Тогда
		СерийныйНомер = ЛицензированиеСервер.НомерПродуктаИзСерийногоНомера(Объект.РегистрационныйНомер);
	Иначе
		СерийныйНомер = 0;
	КонецЕсли;
	
	НомерЛинейкиПродуктов = ЛицензированиеСервер.ИдентификаторПродукта(ИмяМакетаПараметровЛицензирования);
	ПинКод = Объект.ПинКод;
	ИдАппаратнойПривязки = Объект.СигнатураОборудования;
	Результат = "";
	
	Если ЛицензированиеСервер.ПолучитьТелефонныйЗапрос(СерийныйНомер, НомерЛинейкиПродуктов, ПинКод, ИдАппаратнойПривязки, Результат, ОписаниеОшибки) Тогда
		Возврат Результат;
	Иначе
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Возвращает список серверов лицензирования, найденных в локальной сети  
&НаСервереБезКонтекста
Функция СписокСерверов(ОписаниеОшибки)
	Возврат ЛицензированиеСервер.СервераЛицензирования("",ОписаниеОшибки);
КонецФункции

&НаКлиенте
Функция СервераРазличаются()
	ТекущийАдрес = ЛицензированиеСервер.АдресСервераЛицензирования();
	АдресАктивации = Объект.АдресСервера;
	
	Если НЕ ВРЕГ(ТекущийАдрес) = ВРЕГ(АдресАктивации) Тогда
		Возврат Истина;
	ИначеЕсли (ВРег(ТекущийАдрес) = "*LOCAL" ИЛИ ВРег(ТекущийАдрес) = "LOCALHOST") И (ВРег(АдресАктивации) = "*LOCAL" ИЛИ ВРег(АдресАктивации) = "LOCALHOST") Тогда
		Возврат Ложь;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПроверитьСтрокуДанныхТелефоннойАктивации(Элемент)
	СтрокаАктивации = Элемент.ТекстРедактирования;
	Результат = ЛицензированиеСервер.ПроверитьСтрокуДанныхТелефоннойАктивации(СтрокаАктивации, ОписаниеОшибки);
	Если Результат = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
	КонецЕсли;
	
	Если НЕ Результат Тогда
		Элементы[Элемент.Имя].ЦветТекста = WebЦвета.Красный;
	Иначе
		Элементы[Элемент.Имя].ЦветТекста = WebЦвета.Зеленый;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	ОписаниеНастройки = Новый ОписаниеНастроек;
	ОписаниеНастройки.Представление = НСтр("ru = 'Регистрационная информация'; en = 'Registration information'");
	ДанныеНастройки = Новый Структура;
	ДанныеНастройки.Вставить("Организация", Объект.Организация);
	ДанныеНастройки.Вставить("ИНН", Объект.ИНН);
	ДанныеНастройки.Вставить("Ответственный",Объект.Ответственный);
	ДанныеНастройки.Вставить("Телефон",Объект.Телефон);
	ДанныеНастройки.Вставить("ЭлектроннаяПочта",Объект.ЭлектроннаяПочта);
	ДанныеНастройки.Вставить("Сайт",Объект.Сайт);
	ДанныеНастройки.Вставить("Установщик", Объект.Установщик);
	ХранилищеОбщихНастроек.Сохранить("РегистрационнаяИнформация",,ДанныеНастройки,,"");
КонецПроцедуры

#КонецОбласти
