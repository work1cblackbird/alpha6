
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтоКлиентСервернаяБаза = Не Найти(СтрокаСоединенияИнформационнойБазы(), "File=");
	
	ЧастиИмени = СтрЗаменить(ИмяФормы, ".", Символы.ПС);
	
	ИмяОбъектаОбработки = СтрПолучитьСтроку(ЧастиИмени, 1)+"."+СтрПолучитьСтроку(ЧастиИмени, 2);
	Результат = "";
	ОписаниеОшибки = "";
	
	Если ТипЗнч(Параметры.РезультатыЗапуска)=Тип("Массив") Тогда
		РезультатыЗапуска = Параметры.РезультатыЗапуска;
	Иначе	
		РезультатыЗапуска = Новый Массив;
		Для Каждого Решение Из ЛицензированиеПоддержка.СписокРешений() Цикл
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ОписаниеОшибки","");
			ПараметрыФормы.Вставить("КодОшибки",0);
			ПараметрыФормы.Вставить("ПрограммноеОткрытиеФормы",Истина);
			ПараметрыФормы.Вставить("ИмяОбработки", Решение.Ключ);
			ПараметрыФормы.Вставить("ИмяРешения", Решение.Значение);
			РезультатыЗапуска.Добавить(ПараметрыФормы);
		КонецЦикла;
		
	КонецЕсли;
	
	
	Для Каждого РезультатЗапуска Из РезультатыЗапуска Цикл
		Результат = РезультатЗапуска.ОписаниеОшибки;
		КодОшибки = РезультатЗапуска.КодОшибки;
		
		Если ПустаяСтрока(Результат) Тогда
			Попытка
				Обработка = ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку(РезультатЗапуска.ИмяОбработки, Результат);
			Исключение
				Результат = ОписаниеОшибки();
			КонецПопытки
		КонецЕсли;
		
		Если ПустаяСтрока(Результат) Тогда
			Если Обработка.Компонента.ЗащитаАктивна() Тогда
				Результат = "";
				Результат = СформироватьОписаниеСостоянияСистемыЗащиты(Результат);
			Иначе
				Элементы.КомандаАктивироватьПакетЛицензий.Доступность = Ложь;
			КонецЕсли;
		Иначе
			Элементы.КомандаАктивироватьПакетЛицензий.Доступность = Ложь;
			Результат = СформироватьОписаниеСостоянияСистемыЗащиты(Результат);
		КонецЕсли;
		Если ОписаниеОшибки<>"" Тогда
			ОписаниеОшибки = ОписаниеОшибки + Символы.ПС+Символы.ПС;	
		КонецЕсли;	
			
		ОписаниеОшибки = ОписаниеОшибки + РезультатЗапуска.ИмяРешения + Символы.ПС + Результат;
	КонецЦикла;
	
	Если ЭтоКлиентСервернаяБаза Тогда
		Элементы.КомандаУстановитьСерверЛицензирования.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СисИнфо = Новый СистемнаяИнформация;
	ЭтоWindows = СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64;
	
	Если НЕ ЭтоWindows Тогда
		Элементы.КомандаУстановитьСерверЛицензирования.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Вызов мастера активации ключа защиты
&НаКлиенте
Процедура КомандаАктивироватьКлюч(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыАктивацииКлюча", ЭтотОбъект);
	ОткрытьФорму(ИмяОбъектаОбработки+".Форма.ФормаАктивацииКлючаЗащиты", , , , , , Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыАктивацииКлюча(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = Результат;
	
	Если ОписаниеОшибки = "" Тогда
		// перезапуск защиты
		ОбновитьПовторноИспользуемыеЗначения();
		
		ПодключитьОбработчикОжидания("Таймаут", 2, Истина);
		Ошибка = Ложь;
		ПодключитьсяКСерверуЛицензирования(Ошибка);
		
	КонецЕсли;
	
КонецПроцедуры

// Перезапуск защиты
&НаКлиенте
Процедура Перезапустить(Команда)
	
	ОписаниеОшибки = "";
	
	// перезапуск защиты
	ОтключитьсяОтСервераЛицензирования();
	ОбновитьПовторноИспользуемыеЗначения();
	Ошибка = Ложь;
	ПодключитьсяКСерверуЛицензирования(Ошибка);
	
	Если НЕ Ошибка Тогда
		ОбновитьИнтерфейс();
		Закрыть(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьсяКСерверуЛицензирования(Ошибка=Ложь)
	СписокРешений = ЛицензированиеПоддержка.СписокРешений();
	РезультатыЗапуска = Новый Массив;
	
	Для Каждого Решение Из СписокРешений Цикл
		
		ОписаниеОшибки = "";
		КодОшибки = 0;
		
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			
			// Повторный запуск системы лицензирования в режиме обычного приложения не дает ошибки.
			УстановитьПривилегированныйРежим(ИСТИНА);
			Если ПараметрыСеанса.ВключенаЗащитаОтОпасныхДействий = 2 Тогда
				ПараметрыСеанса.ВключенаЗащитаОтОпасныхДействий = 0
			КонецЕсли;
			
			// Проверка и разбор длинного имени
			ИмяОбработки = Решение.Ключ;
			ИмяМакетаХранилища = "";
			ИмяМакетаПараметровЛицензирования = "";
			КороткоеИмяОбработки = "";
			Если НЕ ЛицензированиеСервер.РазделитьИмяОбработки(ИмяОбработки, ИмяМакетаХранилища, ИмяМакетаПараметровЛицензирования, КороткоеИмяОбработки) Тогда
				ОписаниеОшибки = НСтр("ru = 'Неверный формат имени обработки:'; en = 'Invalid name format of data processor:'") + Символы.ПС+ИмяОбработки;
				КодОшибки = 1;
				Возврат;
			КонецЕсли;	
			КлючПродукта = ИмяМакетаХранилища + "." + ИмяМакетаПараметровЛицензирования;
			
			Если НЕ ЛицензированиеКлиент.ВыполнитьПривязкуКлиента(КлючПродукта, ОписаниеОшибки) Тогда
				ОписаниеОшибки = СформироватьОписаниеСостоянияСистемыЗащиты(ОписаниеОшибки);
				Возврат;
			КонецЕсли;
			
		#КонецЕсли
		
		РезультатОписаниеОшибки = "";
		ЛицензированиеСервер.НачалоРаботыСистемыЛицензирования(Решение.Ключ, РезультатОписаниеОшибки, КодОшибки);
		Если РезультатОписаниеОшибки<>"" Тогда
			Ошибка = Истина;
		КонецЕсли;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОписаниеОшибки",РезультатОписаниеОшибки);
		ПараметрыФормы.Вставить("КодОшибки",КодОшибки);
		ПараметрыФормы.Вставить("ПрограммноеОткрытиеФормы",Истина);
		ПараметрыФормы.Вставить("ИмяОбработки", Решение.Ключ);
		ПараметрыФормы.Вставить("ИмяРешения", Решение.Значение);
		РезультатыЗапуска.Добавить(ПараметрыФормы); 
		
	КонецЦикла;
	
	Для Каждого РезультатЗапуска Из РезультатыЗапуска Цикл
		Результат = РезультатЗапуска.ОписаниеОшибки;
		КодОшибки = РезультатЗапуска.КодОшибки;
		
		Если ПустаяСтрока(Результат) Тогда
			Результат = СформироватьОписаниеСостоянияСистемыЗащиты(Результат);
		КонецЕсли;
		
		Если ОписаниеОшибки<>"" Тогда
			ОписаниеОшибки = ОписаниеОшибки + Символы.ПС+Символы.ПС;	
		КонецЕсли;	
		
		ОписаниеОшибки = ОписаниеОшибки + РезультатЗапуска.ИмяРешения + Символы.ПС + Результат;
	КонецЦикла;
	
	ОписаниеОшибки = СформироватьОписаниеСостоянияСистемыЗащиты(ОписаниеОшибки);
	
КонецПроцедуры

// Завершение работы
&НаКлиенте
Процедура ЗавершитьРаботу(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗавершитьРаботуЗавершение", ЭтотОбъект), НСтр("ru = 'Завершить работу системы?'; en = 'Shut down the system?'"), РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаботуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		Если Параметры.ПрограммноеОткрытиеФормы ИЛИ МодальныйРежим Тогда
			Закрыть(Истина);
		Иначе
			ОтключитьсяОтСервераЛицензирования();
			
			// Если необходимо завершить работу платформы, то следует 
			// Закомментировать:
			Закрыть(Истина);
			// Раскомментировать:
			//ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Вызов мастера настройки сервера лицензирования
&НаКлиенте
Процедура КомандаНастройкаСервера(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНастройкиСервераЗащиты", ЭтотОбъект, Новый Структура("ПрограммноеОткрытиеФормы", Параметры.ПрограммноеОткрытиеФормы));
	ОткрытьФорму(ИмяОбъектаОбработки+".Форма.ФормаНастройкиСервераЗащиты", , , , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыНастройкиСервераЗащиты(Результат, ДополнительныеПараметры) Экспорт
	Если НЕ Результат = Неопределено Тогда
		// были выполнены действия по настройке подключения к серверу
		ОписаниеОшибки = Результат;
		Если ОписаниеОшибки = "" Тогда
			// перезапуск защиты
			ОтключитьсяОтСервераЛицензирования();
			ОбновитьПовторноИспользуемыеЗначения();
			
			СписокРешений = ЛицензированиеПоддержка.СписокРешений();
			РезультатыЗапуска = Новый Массив;
			Ошибка = Ложь;
			
			АдресаСерверовЛицензирования = ЛицензированиеСервер.СписокАдресовСервераЛицензирования();
			
			КоличествоСерверов = АдресаСерверовЛицензирования.Количество();
			Сч = 1;
			Для Каждого АдресСервера Из АдресаСерверовЛицензирования Цикл
				
				ЛицензированиеСервер.УстановитьПараметрСеансаТекущийАдресСервераЛицензирования(АдресСервера);
				
				
				Для Каждого Решение Из СписокРешений Цикл
					
					#Если ТолстыйКлиентОбычноеПриложение Тогда
						
						ОписаниеОшибки = "";
						КодОшибки = 0;
						
						// Проверка и разбор длинного имени
						ИмяОбработки = Решение.Ключ;
						ИмяМакетаХранилища = "";
						ИмяМакетаПараметровЛицензирования = "";
						КороткоеИмяОбработки = "";
						Если НЕ ЛицензированиеСервер.РазделитьИмяОбработки(ИмяОбработки, ИмяМакетаХранилища, ИмяМакетаПараметровЛицензирования, КороткоеИмяОбработки) Тогда
							ОписаниеОшибки = НСтр("ru = 'Неверный формат имени обработки:'; en = 'Invalid name format of data processor:'") + Символы.ПС + ИмяОбработки;
							КодОшибки = 1;
							Возврат;
						КонецЕсли;	
						КлючПродукта = ИмяМакетаХранилища + "." + ИмяМакетаПараметровЛицензирования;
						
						Если НЕ ЛицензированиеКлиент.ВыполнитьПривязкуКлиента(КлючПродукта, ОписаниеОшибки) Тогда
							ОписаниеОшибки = СформироватьОписаниеСостоянияСистемыЗащиты(ОписаниеОшибки);
							Возврат;
						КонецЕсли;
						
					#КонецЕсли
					
					
					РезультатОписаниеОшибки = "";
					КодОшибки = 0;
					ЛицензированиеСервер.НачалоРаботыСистемыЛицензирования(Решение.Ключ, РезультатОписаниеОшибки, КодОшибки);
					Если РезультатОписаниеОшибки<>"" Тогда
						Ошибка = Истина;
					КонецЕсли;
					ПараметрыФормы = Новый Структура;
					ПараметрыФормы.Вставить("ОписаниеОшибки",РезультатОписаниеОшибки);
					ПараметрыФормы.Вставить("КодОшибки",КодОшибки);
					ПараметрыФормы.Вставить("ПрограммноеОткрытиеФормы",Истина);
					ПараметрыФормы.Вставить("ИмяОбработки", Решение.Ключ);
					ПараметрыФормы.Вставить("ИмяРешения", Решение.Значение);
					РезультатыЗапуска.Добавить(ПараметрыФормы); 
					
				КонецЦикла;
				
				Для Каждого РезультатЗапуска Из РезультатыЗапуска Цикл
					Результат = РезультатЗапуска.ОписаниеОшибки;
					КодОшибки = РезультатЗапуска.КодОшибки;
					
					Если ПустаяСтрока(Результат) Тогда
						Результат = СформироватьОписаниеСостоянияСистемыЗащиты(Результат);
					КонецЕсли;
					
					Если ОписаниеОшибки<>"" Тогда
						ОписаниеОшибки = ОписаниеОшибки + Символы.ПС+Символы.ПС;	
					КонецЕсли;	
					
					ОписаниеОшибки = ОписаниеОшибки + РезультатЗапуска.ИмяРешения + Символы.ПС + Результат;
				КонецЦикла;
				
				
				Если ЛицензированиеСервер.ЕстьОшибкаСоединенияССервером(РезультатыЗапуска) И Сч < КоличествоСерверов Тогда
					// Если ошибка соединения с сервером, на сервере не найден ключ и список серверов не исчерпан, то пробуем
					// подключиться к другому серверу.
					РезультатыЗапуска.Очистить();
					Сч = Сч + 1;
					Продолжить;
				Иначе
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если НЕ Ошибка И Параметры.ПрограммноеОткрытиеФормы Тогда
				ОбновитьИнтерфейс();
				Закрыть(Ложь);
			Иначе
				ОписаниеОшибки = СформироватьОписаниеСостоянияСистемыЗащиты(ОписаниеОшибки);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаАктивироватьПакетЛицензий(Команда)
	Если ВРег(ЛицензированиеСервер.АдресСервераЛицензирования()) = "*AUTO" Тогда
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'В режиме автоматического поиска сервера лицензирования невозможна активация лицензий.
		|Требуется явно указать сервер лицензирования.'; en = 'In license server automatic search mode can not activate the license.
		|Required to specify the license server.'"));
		
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыАктивацииЛицензий", ЭтотОбъект);
	ОткрытьФорму(ИмяОбъектаОбработки+".Форма.ФормаАктивацииЛицензий", , , , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыАктивацииЛицензий(Результат, ДополнительныеПараметры) Экспорт
	ОписаниеОшибки = СформироватьОписаниеСостоянияСистемыЗащиты(Результат);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьСерверЛицензирования(Команда)
	
	#Если НЕ ВебКлиент Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("КомандаУстановитьСерверЛицензированияЗавершение", ЭтотОбъект), НСтр("ru = 'Сервер лицензирования конфигураций будет установлен на этом компьютере.
                          |Пользователь должен иметь права администратора компьютера.
                          |Установить?'; en = 'The license server is installed on this computer.
                          |The user must have administrator privileges computer.
                          |Start Installation?'"), РежимДиалогаВопрос.ДаНет);
	#Иначе
		  ПоказатьПредупреждение(Неопределено, НСтр("ru = 'В веб-клиенте недоступна установка сервера защиты'; en = 'In  web-client mode,  the License server installation is unavailable'"));
		  Возврат;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьСерверЛицензированияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса =  КодВозвратаДиалога.Да Тогда
		ДанныеФайла = ПолучитьДанныеФайла();
		НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("КомандаУстановитьСерверЛицензированияЗавершениеПолученияКаталогаВременныхФайлов", ЭтотОбъект, Новый Структура("ДанныеФайла", ДанныеФайла)));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьСерверЛицензированияЗавершениеПолученияКаталогаВременныхФайлов(ИмяКаталогаВременныхФайлов, ДополнительныеПараметры) Экспорт
	
	ДанныеФайла = ДополнительныеПараметры.ДанныеФайла;
	
	ИмяКаталога = ИмяКаталогаВременныхФайлов;
	ИмяВременногоФайла = ИмяКаталога + "setup.msi";
	
	ДанныеФайла.НачатьЗапись(Новый ОписаниеОповещения("КомандаУстановитьСерверЛицензированияЗавершениеПолученияКаталогаВременныхФайловЗавершение", ЭтотОбъект, Новый Структура("ИмяВременногоФайла", ИмяВременногоФайла)), ИмяВременногоФайла);

КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьСерверЛицензированияЗавершениеПолученияКаталогаВременныхФайловЗавершение(ДополнительныеПараметры1) Экспорт
	
	ИмяВременногоФайла = ДополнительныеПараметры1.ИмяВременногоФайла;
	НачатьЗапускПриложения(Новый ОписаниеОповещения("КомандаУстановитьСерверЛицензированияЗавершениеЗавершение", ЭтотОбъект), ИмяВременногоФайла);

КонецПроцедуры

// Процедура - Команда установить сервер лицензирования завершение завершение
// Необходима для возможности создать оповещение.
//
// Параметры:
//  КодВозврата				
//  ДополнительныеПараметры 
//
&НаКлиенте
Процедура КомандаУстановитьСерверЛицензированияЗавершениеЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Зарезервировано = ИСТИНА;

КонецПроцедуры

&НаКлиенте
Процедура КомандаИнформация(Команда)
	
	ОткрытьФорму(ИмяОбъектаОбработки+".Форма.ИнформацияОПараметрахЛицензирования", , ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьДистрибутивСервераЛицензирования(Команда)
	#Если НЕ ВебКлиент Тогда
		ДиалогСохранения = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогСохранения.Фильтр = ".msi";
		ДиалогСохранения.ПолноеИмяФайла = "setup.msi";
		ДиалогСохранения.Заголовок = НСтр("ru = 'Выберите расположение дистрибутива сервера лицензирования'; en = 'Select the location of the license server distribution'");
		
		ДиалогСохранения.Показать(Новый ОписаниеОповещения("КомандаСохранитьДистрибутивСервераЛицензированияЗавершение", ЭтотОбъект, Новый Структура("ДиалогСохранения", ДиалогСохранения)));
	#Иначе
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'В веб-клиенте недоступно сохранение сервера лицензирования'; en = 'Saving a license server is not available in the Web client'"));
		Возврат;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьДистрибутивСервераЛицензированияЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогСохранения = ДополнительныеПараметры.ДиалогСохранения;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		
		КаталогДистрибутива = ДиалогСохранения.ПолноеИмяФайла;
		
		ДанныеФайла = ПолучитьДанныеФайла();
		ДанныеФайла.НачатьЗапись(Новый ОписаниеОповещения("КомандаСохранитьДистрибутивСервераЛицензированияЗавершениеЗавершение", ЭтотОбъект, Новый Структура("КаталогДистрибутива", КаталогДистрибутива)), КаталогДистрибутива);                            
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьДистрибутивСервераЛицензированияЗавершениеЗавершение(Результат) Экспорт

	Зарезервировано = ИСТИНА;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьОписаниеСостоянияСистемыЗащиты(ОписаниеОшибки)
	Если ПустаяСтрока(ОписаниеОшибки) Тогда
		ОписаниеОшибки = НСтр("ru = 'Лицензия получена от сервера: ""'; en = 'License received from the server: ""'") + ЛицензированиеСервер.ПараметрСеансаАдресСервераЛицензирования() + """";
	КонецЕсли;
		
	Возврат "[" + ТекущаяДата() + "]: " + ОписаниеОшибки;
КонецФункции

&НаСервере
Процедура ОтключитьсяОтСервераЛицензирования()
	ОписаниеОшибки = "";
	
	СписокРешений = ЛицензированиеПоддержка.СписокРешений();
	Для Каждого Решение Из СписокРешений Цикл
		ЛицензированиеСервер.ОсвободитьЛицензию(Решение.Ключ, ОписаниеОшибки);
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла()
	ДвоичныеДанные = ПолучитьОбщийМакет("ДистрибутивСервераЛицензирования");
	Возврат ДвоичныеДанные;
КонецФункции

// Служебная функция. Зарезервировано.
&НаКлиенте
Процедура Таймаут()
	
	Зарезервировано = ИСТИНА;
	
КонецПроцедуры

#КонецОбласти

