#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	АдресСервера = ПараметрыСеанса.АдресСервераЛицензирования;
	
	Если НЕ ЗначениеЗаполнено(АдресСервера) Тогда
		СтрокаСообщения = (НСтр("ru = 'Отсутствует подключение к серверу лицензирования'; en = 'No connection to the license server'"));
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрокаСообщения;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(СтрокаСообщения);
		Отказ = Истина;
	КонецЕсли;
	
	СписокРешений = ЛицензированиеПоддержка.СписокРешений();
	
	Если СписокРешений.Количество() > 1 Тогда // Несколько решений
		Элементы.ВыбранноеРешение.Видимость = Истина;
		СписокВыбораРешений = Элементы.ВыбранноеРешение.СписокВыбора;
		ИндексРешения = 0;
		Для Каждого ЭлементСписка Из СписокРешений Цикл
			СписокВыбораРешений.Добавить(ИндексРешения, ЭлементСписка.Значение);
			ИндексРешения = ИндексРешения + 1;
		КонецЦикла;
	Иначе
		Элементы.ВыбранноеРешение.Видимость = Ложь;
	КонецЕсли;
	
	ВыбранноеРешение = 0;
	
	ИмяОбработки = ПолучитьИмяОбработкиПоИндексу(ВыбранноеРешение);
	
	Если НЕ Отказ Тогда
		Результат = ПолучитьПараметрыКлюча(ИмяОбработки);
		
		ЭтоПоставкаСПрограммнымКлючом = (СерийныйНомер = АппаратныйНомер);
		
		Если Результат Тогда
			ЗаполнитьТаблицуПараметров();
		Иначе
			Элементы.ОписаниеОшибки.Видимость = Истина;
			ОписаниеОшибки = НСтр("ru = 'Не удалось получить параметры ключа защиты'");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыбранноеРешениеПриИзменении(Элемент)
	
	ТаблицаПараметровКлюча.Очистить();
	
	Результат = ПолучитьПараметрыКлюча(ПолучитьИмяОбработкиПоИндексу(ВыбранноеРешение));
	
	ЭтоПоставкаСПрограммнымКлючом = (СерийныйНомер = АппаратныйНомер);
	
	Если Результат Тогда
		ЗаполнитьТаблицуПараметров();
	Иначе
		Элементы.ОписаниеОшибки.Видимость = Истина;
		ОписаниеОшибки = НСтр("ru = 'Не удалось получить параметры ключа защиты'; en = 'Could not get the key parameters of protection'");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСохранитьВФайл(Команда)
	Текст = "";
	
	Текст = Текст + НСтр("ru = 'Дата:'") + Символы.НПП + ТекущаяДата() + Символы.ВК + Символы.ПС;
	Если НЕ ОписаниеОшибки = "" Тогда
		Текст = Текст + НСтр("ru = 'Описание ошибки: '; en = 'Error description'") + ОписаниеОшибки + Символы.ВК + Символы.ПС; 
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТаблицаПараметровКлюча Цикл
		Текст = Текст + ТекСтрока.Параметр + ": " + ТекСтрока.Значение + Символы.ВК + Символы.ПС;
	КонецЦикла;
	
	ИмяФайла = "LicParam_"+СерийныйНомер+".txt";
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	
	Диалог.Заголовок = НСтр("ru = 'Сохранить файл параметров лицензирования как'; en = 'Save the licensing options file as'");
	Диалог.Фильтр = НСтр("ru = 'Файлы *.txt|*.txt'; en = 'Files *.txt|*.txt'");
	Диалог.ПолноеИмяФайла = ИмяФайла;
	
	Диалог.Показать(Новый ОписаниеОповещения("КомандаСохранитьВФайлЗавершение", ЭтотОбъект, Новый Структура("Диалог, Текст", Диалог, Текст)));
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьВФайлЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	Текст = ДополнительныеПараметры.Текст;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли;
	
	Файл = Новый ТекстовыйДокумент();
	Файл.Записать(ИмяФайла, Нстр("ru = 'windows-1251'; en = 'windows-1252'"));
	
	Файл.УстановитьТекст(Текст);
	Файл.Записать(ИмяФайла, Нстр("ru = 'windows-1251'; en = 'windows-1252'"));
	
	ТекстПредупреждения = НСтр("ru = 'Описание текущих параметров лицензирования сохранено в файл: '; en = 'Description of the current licensing options stored in the file'") + ИмяФайла;
	ПоказатьПредупреждение(Неопределено, ТекстПредупреждения,,НСтр("ru = 'Сохранен файл текущих параметров лицензирования'; en = 'The file is saved'"));

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьПараметрыКлюча(ИмяОбработки)
	
	ПараметрыКлючаЗащиты = Новый Структура;
	Результат = ЛицензированиеСервер.ПолучитьПараметрыКлючаЗащиты(ИмяОбработки,ПараметрыКлючаЗащиты,ОписаниеОшибки, КодОшибки);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,ПараметрыКлючаЗащиты);
	
	Если НЕ Результат Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьИмяОбработкиПоИндексу(Индекс)
	СписокРешений = ЛицензированиеПоддержка.СписокРешений();
	ТекИндекс = 0;
	Для Каждого ЭлементСписка Из СписокРешений Цикл
		Если ТекИндекс = Индекс Тогда
			Возврат ЭлементСписка.Ключ;
		Иначе
			ТекИндекс = ТекИндекс + 1;
		КонецЕсли;
	КонецЦикла;
КонецФункции

// Возвращает строковое представление типа ключа
&НаСервере
Функция СтрокаТипКлюча(ТипКлюча)
	Если ЭтоПоставкаСПрограммнымКлючом Тогда
		ТипКлючаСтрокой = НСтр("ru = 'Программный'; en = 'Software'");
	Иначе
		ТипКлючаСтрокой = НСтр("ru = 'Аппаратный'; en = 'Hardware'");
	КонецЕсли;
	
	Если ТипКлюча = 2 Тогда
		ТипКлючаСтрокой = ТипКлючаСтрокой + НСтр("ru = ', демонстрационный'; en = ', demo'");
	КонецЕсли;
	
	Возврат ТипКлючаСтрокой;
КонецФункции

// Возвращает описание количества подключений
&НаСервере
Функция СтрокаКоличествоПодключений(Всего, Свободно)
	Если Всего>=255 Тогда
		Строка = НСтр("ru = 'en = 'Without restriction' ,'") + Символы.НПП + НСтр("ru = 'занято -'; en = 'used -'") + Символы.НПП + Строка(Всего - Свободно);
	Иначе
		Строка = НСтр("ru = 'всего - '; en = 'total -'") + Строка(Всего) + ", " + НСтр("ru = 'занято - '; en = 'used -'") + Строка(Всего - Свободно) + ", " + НСтр("ru = 'свободно - '; en = 'available -'") + Строка(Свободно);
	КонецЕсли;
	Возврат Строка;
КонецФункции

// Возвращает строковое представление даты окончания действия ключа
&НаСервере
Функция СтрокаДатаОкончаниеДействия(ДатаОкончания)
	Если ДатаОкончания = '18991230000000' Тогда
		ДатаОкончанияСтрокой = НСтр("ru = 'не определена'; en = 'not determined'");
	Иначе
		ДатаОкончанияСтрокой = Формат(ДатаОкончания,"ДЛФ=D");
	КонецЕсли;
	Возврат ДатаОкончанияСтрокой;
КонецФункции

// Заполняет таблицу параметров ключа лицензирования
&НаСервере
Процедура ЗаполнитьТаблицуПараметров()
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Сервер лицензирования'; en = 'License server'"), ПараметрыСеанса.АдресСервераЛицензирования);
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Название ключа'; en = 'The key name'"), НазваниеКлюча);
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Серийный номер'; en = 'Serial number'"), СерийныйНомер);
	Если НЕ ЭтоПоставкаСПрограммнымКлючом Тогда
		ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Аппаратный номер'; en = 'Hardware key number'"), АппаратныйНомер);
	КонецЕсли;
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Дата окончания'; en = 'Expiration date'"), СтрокаДатаОкончаниеДействия(ДатаОкончания));
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Тип ключа'; en = 'Key type'"), СтрокаТипКлюча(ТипКлюча));
	Если ЭтоПоставкаСПрограммнымКлючом Тогда
		ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Пин-код'; en = 'PIN'"), ПинКод);
	КонецЕсли;
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Подключений за место'; en = 'Connections for a place'"), СтрокаКоличествоПодключений(ВсегоПользователейЗаМесто, СвободноПользователейЗаМесто));
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Подключений за сессию'; en = 'Connections per session'"), СтрокаКоличествоПодключений(ВсегоПользователейЗаСессию, СвободноПользователейЗаСессию));
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Маска'; en = 'Mask'"), Маска);
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Маска 2'; en = 'Mask 2'"), Счетчик2);
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Версия компоненты'; en = 'Version of the protection component'"), ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку(ИмяОбработки).Компонента.Версия);
	
	МестоХраненияКомпоненты = ЛицензированиеСервер.ПолучитьМестоХраненияКомпоненты();
	Если Найти(МестоХраненияКомпоненты, "ОбщийМакет") Тогда
		ИсточникКомпоненты = НСтр("ru = 'Внутреннее хранилище'; en = 'Internal storage'");
	Иначе
		ИсточникКомпоненты = НСтр("ru = 'Внешнее хранилище'; en = 'External storage'");
	КонецЕсли;
	ТаблицаПараметровДобавитьСтроку(НСтр("ru = 'Источник компоненты'; en = 'Location of component'"), ИсточникКомпоненты);
КонецПроцедуры

&НаСервере
Процедура ТаблицаПараметровДобавитьСтроку(Параметр, Значение)
	НоваяСтрока = ТаблицаПараметровКлюча.Добавить();
	НоваяСтрока.Параметр = Параметр;
	НоваяСтрока.Значение = Значение;
КонецПроцедуры

#КонецОбласти


