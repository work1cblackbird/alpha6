
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокРешений = ЛицензированиеПоддержка.СписокРешений();
	КоличествоРешений = СписокРешений.Количество();
	
	Если КоличествоРешений > 1 Тогда // Несколько решений
		СписокВыбораРешений = Элементы.ВыбранноеРешение.СписокВыбора;
		ИндексРешения = 0;
		Для Каждого ЭлементСписка Из СписокРешений Цикл
			СписокВыбораРешений.Добавить(ИндексРешения, ЭлементСписка.Значение);
			ИндексРешения = ИндексРешения + 1;
		КонецЦикла;
	КонецЕсли;
	
	ВыбранноеРешение = 0;
	
	Настройки = ХранилищеОбщихНастроек.Загрузить("РегистрационнаяИнформация",,,"");
	Если Не Настройки = Неопределено Тогда
		Для Каждого Настройка Из Настройки Цикл
			Объект[Настройка.Ключ] = Настройка.Значение;
		КонецЦикла;
	КонецЕсли;
	
	// Добавление списка выбора огранизаций и ИНН
	Если НЕ Метаданные.Справочники.Найти("Организации") = Неопределено Тогда
		Если НЕ Метаданные.Справочники.Организации.Реквизиты.Найти("ИНН")=Неопределено Тогда
			ЕстьИНН = Истина;
		КонецЕсли;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	&УсловиеПоИНН,
		               |	Организации.Наименование КАК Организация
		               |ИЗ
		               |	Справочник.Организации КАК Организации";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеПоИНН,",?(ЕстьИНН,"Организации.ИНН КАК ИНН,",""));
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		Если ЕстьИНН Тогда
			ОрганизацииИнн.Загрузить(РезультатЗапроса);
		КонецЕсли;
		Элементы.Организация.КнопкаВыпадающегоСписка = Истина;
		Элементы.Организация.СписокВыбора.ЗагрузитьЗначения(РезультатЗапроса.ВыгрузитьКолонку("Организация"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	// отключение видимости всех страниц
	Для Каждого ТекСтраница Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		ТекСтраница.Видимость = Ложь;
	КонецЦикла;
	Если КоличествоРешений = 1 Тогда
		Объект.ИмяОбработки = ПолучитьИмяОбработкиПоИндексу(0);
		ПереходКСтранице(Элементы.СтраницаВыборСпособаАктивации);
	Иначе
		ПереходКСтранице(Элементы.СтраницаВыборРешения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьНастройки();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
	
	Если РежимАктивации = 0 Тогда // для НЕ совместных продуктов
		Если СтрДлина(СокрЛП(Объект.РегистрационныйНомерПакетаЛицензий)) < 13 Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Некорректно указан регистрационный номер.
                                    |Номер должен содержать не менее 13 цифр'; en = 'Incorrectly specified registration number.
                                    |Number must be at least 13 digits'");
			Сообщение.Поле = "Объект.РегистрационныйНомер";
			Сообщение.Сообщить();
			ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(Сообщение.Текст);
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(СтрЗаменить(Объект.ПарольПакетаЛицензий,"-","")) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не указан пароль пакета лицензий'; en = 'Password of license package is not specified'");
		Сообщение.Поле = "Объект.ПарольПакетаЛицензий";
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(Сообщение.Текст);
		Отказ = Истина;
	Иначе
		Если (РежимАктивации = 0 И СтрДлина(СокрЛП(Объект.ПарольПакетаЛицензий)) < 15) ИЛИ (РежимАктивации = 1 И СтрДлина(СокрЛП(Объект.ПарольПакетаЛицензий)) < 39) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Неверно указан пароль пакета лицензий'; en = 'Incorrect password of license package'");
			Сообщение.Поле = "Объект.ПинКод";
			Сообщение.Сообщить();
			ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(Сообщение.Текст);
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантАктивацииПриИзменении(Элемент)
	Если Объект.СпособАктивации = 0 Тогда
		Элементы.ДекорацияВариантАктивации.Заголовок = "	" + НСтр("ru = 'Онлайн-активация выполняется через интернет. 
		|Наиболее быстрый способ активации.'");
	Иначе
		Элементы.ДекорацияВариантАктивации.Заголовок = "	" + НСтр("ru = 'В этом способе работы программой создается файл запроса активации.
		|Этот файл каким-либо способом - например, по электронной почте или с курьером - передается в центр лицензирования.
		|На основании данного файла запроса в центре лицензирования создается файл активации лицензии, который передается обратно.
		|Этот файл активации следует загрузить в систему защиты. В результате этой загрузки новая лицензия будет активирована.'");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтветИнтернетАктивацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачатьПодключениеРасширенияРаботыСФайлами(Новый ОписаниеОповещения("ПослеПодключенияРасширенияРаботыСФайлами", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	    
	// Добавление ИНН
	Если ЕстьИНН И Элементы.Организация.СписокВыбора.Количество()>0 И ЗначениеЗаполнено(Объект.Организация) Тогда
		ПараметрыОтбора = Новый Структура("Организация",Объект.Организация);
		НайденныеСтроки = ОрганизацииИнн.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество()>0 И ЗначениеЗаполнено(НайденныеСтроки[0].ИНН) Тогда
			Объект.ИНН = НайденныеСтроки[0].ИНН;
		Иначе
			Объект.ИНН = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВперед(Команда)
	ОбработкаДействия("Вперед");
КонецПроцедуры

&НаКлиенте
Процедура КомандаНазад(Команда)
	ОбработкаДействия("Назад");
КонецПроцедуры

// Активация пакета лицензий через интернет
&НаКлиенте
Процедура КомандаАктивироватьВебСервис(Команда)
	
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
	
	КодированнаяСтрока = СформироватьЗапросАктивации();
	Если КодированнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	Если ИмяМакетаПараметровЛицензирования = Неопределено Тогда
		ОписаниеОшибки = НСтр("ru = 'Неверный формат имени обработки:'; en = 'Invalid name format of data processor:'") + Символы.ПС + Объект.ИмяОбработки;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
		Возврат;
	КонецЕсли;	
	
	Если РежимАктивации = 0 Тогда
		ОтветАктивации = ЛицензированиеСервер.АктивироватьЧерезВебСервис(КодированнаяСтрока, 1, ИмяМакетаПараметровЛицензирования, ОписаниеОшибки);
	Иначе
		ОтветАктивации = ЛицензированиеСервер.АктивироватьЧерезВебСервис(КодированнаяСтрока, 3, ИмяМакетаПараметровЛицензирования, ОписаниеОшибки);
	КонецЕсли;
		
	Если ОтветАктивации = "" Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
	Иначе
		Результат = ЛицензированиеСервер.УстановитьОбновлениеКлюча(ОтветАктивации, ОписаниеОшибки);
		Если НЕ Результат Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ОписаниеОшибки;
			Сообщение.Сообщить();
			ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
		Иначе
			Закрыть(НСтр("ru = 'Пакет лицензий № '; en = 'License Pack №'") + Объект.РегистрационныйНомерПакетаЛицензий + Символы.НПП + НСтр("ru = 'активирован.'; en = 'activated.'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Активация пакета лицензий через файловый запрос
&НаКлиенте
Процедура КомандаАктивироватьВручную(Команда)
		
	Файл = Новый Файл(Объект.ОтветИнтернетАктивации);
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("КомандаАктивироватьВручнуюЗавершение", ЭтотОбъект, Новый Структура("Файл", Файл)));
    	
КонецПроцедуры

&НаКлиенте
Процедура КомандаАктивироватьВручнуюЗавершение(Существует, ДополнительныеПараметры) Экспорт
	
	Если НЕ Существует Тогда
		СтрокаСообщения = НСтр("ru = 'Указанный файл не существует'; en = 'The specified file does not exist'");
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрокаСообщения;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(СтрокаСообщения);
		Возврат;
	КонецЕсли;
	ПотокЧтения = Новый ТекстовыйДокумент();
	Кодировка = Нстр("ru = 'windows-1251'; en = 'windows-1252'");
	ПотокЧтения.НачатьЧтение(Новый ОписаниеОповещения("КомандаАктивироватьВручнуюЗавершениеЗавершение", ЭтотОбъект, Новый Структура("ПотокЧтения", ПотокЧтения)), Объект.ОтветИнтернетАктивации,Кодировка);

КонецПроцедуры

&НаКлиенте
Процедура КомандаАктивироватьВручнуюЗавершениеЗавершение(ДополнительныеПараметры1) Экспорт
	
	ПотокЧтения = ДополнительныеПараметры1.ПотокЧтения;
	
	
	ТекстОтвета = ПотокЧтения.ПолучитьТекст();
	
	Результат = ЛицензированиеСервер.УстановитьОбновлениеКлюча(ТекстОтвета, ОписаниеОшибки);
	Если НЕ Результат Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
	Иначе
		Закрыть(НСтр("ru = 'Пакет лицензий № '; en = 'License Pack №'") + Объект.РегистрационныйНомерПакетаЛицензий + Символы.НПП + НСтр("ru = 'активирован.'; en = 'activated.'"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьФайлЗапроса(Команда)
	
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
	
	КодированнаяСтрока = СформироватьЗапросАктивации();
	Если КодированнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = НСтр("ru = 'Сохранить файл запроса активации как'; en = 'Save an activation request file as'");
	Диалог.Фильтр = НСтр("ru = 'Файлы *.txt|*.txt'");
	
	Если РежимАктивации = 0 Тогда
		Диалог.ПолноеИмяФайла = "LAR" + Объект.РегистрационныйНомерПакетаЛицензий + ".txt";
	Иначе
		ЧастьКода = СтрЗаменить(Лев(Объект.ПарольПакетаЛицензий, 7),"-","");
		Диалог.ПолноеИмяФайла = "LAR" + ЧастьКода + ".txt";
	КонецЕсли;
	
	Диалог.Показать(Новый ОписаниеОповещения("КомандаСохранитьФайлЗапросаЗавершение", ЭтотОбъект, Новый Структура("Диалог, ИмяМакетаПараметровЛицензирования, КодированнаяСтрока", Диалог, ИмяМакетаПараметровЛицензирования, КодированнаяСтрока)));
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьФайлЗапросаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	ИмяМакетаПараметровЛицензирования = ДополнительныеПараметры.ИмяМакетаПараметровЛицензирования;
	КодированнаяСтрока = ДополнительныеПараметры.КодированнаяСтрока;
	
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли;
	
	Файл = Новый ТекстовыйДокумент();
	
	Попытка
		Файл.Записать(ИмяФайла, Нстр("ru = 'windows-1251'; en = 'windows-1252'"));
	Исключение
		СтрокаСообщения = НСтр("ru = 'Не удалось сохранить файл запроса'; en = 'Failed to save the file'");
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрокаСообщения;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(СтрокаСообщения);
	КонецПопытки;
	
	Файл.УстановитьТекст(КодированнаяСтрока);
	Попытка
		Файл.Записать(ИмяФайла, Нстр("ru = 'windows-1251'; en = 'windows-1252'"));
		ФайлЗаписан = Истина;
	Исключение
		СтрокаСообщения = НСтр("ru = 'Не удалось сохранить файл запроса'; en = 'Failed to save the file'");
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрокаСообщения;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(СтрокаСообщения);
	КонецПопытки;
	Если ФайлЗаписан Тогда
		Элементы.ДекорацияИмяФайла.Заголовок = ИмяФайла;
		Элементы.ДекорацияАдресЭлектроннойПочты.Заголовок = ЛицензированиеСервер.АдресЭлектроннойПочтыДляАктивации(ИмяМакетаПараметровЛицензирования);
		
		ПереходКСтранице(Элементы.СтраницаАктивацияФайлИнструкция);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция СформироватьЗапросАктивации()
	
	#Если ВебКлиент Тогда
		ВызватьИсключение Нстр("ru = 'Операция не поддерживается в веб-клиенте.'");		
	#КонецЕсли
	
	ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
	РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
	
	Результат = ПолучитьПараметрыКлюча(Объект.ИмяОбработки);
	
	Если НЕ Результат Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстXML = Новый ЗаписьXML;
	ТекстXML.УстановитьСтроку();
	
	ТекстXML.ЗаписатьОбъявлениеXML();
	ТекстXML.ЗаписатьНачалоЭлемента("sd");
	
	ТекстXML.ЗаписатьНачалоЭлемента("Activation");
	
	Если РежимАктивации = 0 Тогда
		ТекстXML.ЗаписатьАтрибут("Type", "1");
		ТекстXML.ЗаписатьАтрибут("PinCode", Объект.ПинКод);
		ТекстXML.ЗаписатьАтрибут("KeyNumber", Формат(Объект.НомерКлюча,"ЧГ="));
		ТекстXML.ЗаписатьАтрибут("Regnumber", Объект.РегистрационныйНомерПакетаЛицензий);
		ТекстXML.ЗаписатьАтрибут("Password", Объект.ПарольПакетаЛицензий);
	Иначе
		ТекстXML.ЗаписатьАтрибут("Type", "3");
		ТекстXML.ЗаписатьАтрибут("PinCode", Объект.ПинКод);
		ТекстXML.ЗаписатьАтрибут("KeyNumber", Формат(Объект.НомерКлюча,"ЧГ="));
		ТекстXML.ЗаписатьАтрибут("Regnumber", "");
		ТекстXML.ЗаписатьАтрибут("Password", Объект.ПарольПакетаЛицензий);
	КонецЕсли;

	ТекстXML.ЗаписатьКонецЭлемента();
	
	ТекстXML.ЗаписатьНачалоЭлемента("RegInfo");
	
	ТекстXML.ЗаписатьАтрибут("Responsible", Объект.Ответственный);
	ТекстXML.ЗаписатьАтрибут("Organization", Объект.Организация);
	ТекстXML.ЗаписатьАтрибут("INN", Объект.ИНН);
	ТекстXML.ЗаписатьАтрибут("Phone", Объект.Телефон);
	ТекстXML.ЗаписатьАтрибут("email", Объект.ЭлектроннаяПочта);
	ТекстXML.ЗаписатьАтрибут("web", Объект.Сайт);
	ТекстXML.ЗаписатьАтрибут("installer", Объект.Установщик);
	
	ТекстXML.ЗаписатьКонецЭлемента();
	ТекстXML.ЗаписатьКонецЭлемента();
	
	СтрокаАктивации = ТекстXML.Закрыть();
		
    КодированнаяСтрока = "";
	ОписаниеОшибки="";
	
	Если НЕ ЛицензированиеСервер.КомпонентаЗакодироватьСтроку(СтрокаАктивации, КодированнаяСтрока, Объект.ИмяОбработки, ОписаниеОшибки) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
		ЛицензированиеСервер.ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки);
		Возврат Неопределено;
	КонецЕсли;

	Возврат КодированнаяСтрока;
КонецФункции

&НаСервере
Функция ПолучитьИмяОбработкиПоИндексу(Индекс)
	СписокРешений = ЛицензированиеПоддержка.СписокРешений();
	ТекИндекс = 0;
	Для Каждого ЭлементСписка Из СписокРешений Цикл
		Если ТекИндекс = Индекс Тогда
			Возврат ЭлементСписка.Ключ;
		Иначе
			ТекИндекс = ТекИндекс + 1;
		КонецЕсли;
	КонецЦикла;
КонецФункции

// Получение параметров ключа защиты
&НаКлиенте
Функция ПолучитьПараметрыКлюча(ИмяОбработки)
	
	ПараметрыКлючаЗащиты = Новый Структура;	
	Результат = ЛицензированиеСервер.ПолучитьПараметрыКлючаЗащиты(ИмяОбработки, ПараметрыКлючаЗащиты, ОписаниеОшибки, КодОшибки);
	Если НЕ Результат Тогда
		Возврат Ложь;
	Иначе
		Объект.НомерКлюча = ПараметрыКлючаЗащиты.СерийныйНомер;
		Объект.ЗаводскойНомерКлюча = ПараметрыКлючаЗащиты.АппаратныйНомер;
		Объект.ПинКод = ПараметрыКлючаЗащиты.ПинКод; // пин-код, которым был активирован ключ защиты
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ОбработкаДействия(Действие)
	Страницы = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы;
	ТекущаяСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	
	Если ТекущаяСтраница = Страницы.СтраницаВыборСпособаАктивации Тогда
		Если Объект.СпособАктивации = 0 Тогда //веб сервис
			ПереходКСтранице(Страницы.СтраницаАнкетныеДанные);
		Иначе
			// Вручную
			ПереходКСтранице(Страницы.СтраницаЗапросОтвет);
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = Страницы.СтраницаВыборРешения Тогда
		Объект.ИмяОбработки = ПолучитьИмяОбработкиПоИндексу(ВыбранноеРешение);
		ПереходКСтранице(Страницы.СтраницаВыборСпособаАктивации);
		
	ИначеЕсли ТекущаяСтраница = Страницы.СтраницаАнкетныеДанные Тогда
		Если Действие = "Вперед" Тогда
			
			Если НЕ ПроверитьЗаполнение() Тогда
				Возврат;
			КонецЕсли;
			
			Если Объект.СпособАктивации = 0 Тогда
				ПереходКСтранице(Страницы.СтраницаАктивацияВебСервис);
				Элементы.КомандаСохранитьФайлЗапроса.Видимость = Ложь;
				Элементы.КомандаАктивироватьВебСервис.Видимость = Истина;
			Иначе
				ПереходКСтранице(Страницы.СтраницаАктивацияВебСервис);
				Элементы.КомандаСохранитьФайлЗапроса.Видимость = Истина;
				Элементы.КомандаАктивироватьВебСервис.Видимость = Ложь;
			КонецЕсли;
		Иначе // Назад
			ПереходКСтранице(Страницы.СтраницаВыборСпособаАктивации);
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = Страницы.СтраницаЗапросОтвет Тогда
		Если Действие = "Вперед" Тогда
			Если Объект.ЗапросОтвет = 0 Тогда
				ПереходКСтранице(Страницы.СтраницаАнкетныеДанные);
			Иначе
				// Ответ активации
				ПереходКСтранице(Страницы.СтраницаОтветАктивации);
			КонецЕсли;
		Иначе
			// Назад
			ПереходКСтранице(Страницы.СтраницаВыборСпособаАктивации);
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Страницы.СтраницаАктивацияВебСервис Тогда	
		Если Действие = "Назад" Тогда
			ПереходКСтранице(Страницы.СтраницаАнкетныеДанные);
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Страницы.СтраницаОтветАктивации Тогда
		Если Действие = "Назад" Тогда
			Если Объект.СпособАктивации = 0 Тогда
				ПереходКСтранице(Страницы.СтраницаАнкетныеДанные);
			Иначе
				Если Объект.ЗапросОтвет = 0 Тогда
					ПереходКСтранице(Страницы.СтраницаАнкетныеДанные); 
				Иначе
					ПереходКСтранице(Страницы.СтраницаЗапросОтвет);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Страницы.СтраницаАктивацияФайлИнструкция Тогда
		Если Действие = "Вперед" Тогда
			ПереходКСтранице(Страницы.СтраницаОтветАктивации);
		Иначе
			ПереходКСтранице(Страницы.СтраницаАктивацияВебСервис);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереходКСтранице(Страница)
	Элементы.ГруппаСтраницы.ТекущаяСтраница.Видимость = Ложь;
	Страница.Видимость = Истина;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Страница;
	
	ТекущаяСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	
	Если (Страница = Элементы.СтраницаВыборСпособаАктивации И КоличествоРешений = 1) ИЛИ Страница = Элементы.СтраницаВыборРешения Тогда
		Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаКомандаНазад.Доступность = Ложь;
	Иначе
		Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаКомандаНазад.Доступность = Истина;
	КонецЕсли;
	
	Если Страница = Элементы.СтраницаВыборСпособаАктивации Тогда
		ВариантАктивацииПриИзменении(Элементы.ВариантАктивации);
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.СтраницаАктивацияВебСервис ИЛИ ТекущаяСтраница = Элементы.СтраницаОтветАктивации Тогда
		Элементы.ФормаКомандаВперед.Доступность = Ложь;
	Иначе
		Элементы.ФормаКомандаВперед.Доступность = Истина;
	КонецЕсли;
	
	Если Страница = Элементы.СтраницаАнкетныеДанные Тогда
		ИмяМакетаПараметровЛицензирования = ЛицензированиеСервер.ПолучитьИмяМакетаПараметровЛицензирования(Объект.ИмяОбработки);
		РежимАктивации = ЛицензированиеСервер.РежимАктивации(ИмяМакетаПараметровЛицензирования);
		
		Если РежимАктивации = 0 Тогда
			Элементы.ПарольПакетаЛицензий.Маска = "999-999-999-999";
			Элементы.РегистрационныйНомер.Видимость = Истина;
			Элементы.РегистрационныйНомерВебСервис.Видимость = Истина;
		Иначе
			// совместные продукты
			Элементы.ПарольПакетаЛицензий.Маска = "999-999-999-999-999-999-999-999-999-999";
			Элементы.РегистрационныйНомер.Видимость = Ложь;
			Элементы.РегистрационныйНомерВебСервис.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияРасширенияРаботыСФайлами(Подключено, ДополнительныеПараметры) Экспорт
	
	РасширениеПодключено = Подключено;
	Если РасширениеПодключено Тогда
		ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ВыборФайла.МножественныйВыбор = Ложь;
		ВыборФайла.Заголовок = НСтр("ru = 'Выбор файла'; en = 'Select File'");
		ВыборФайла.Фильтр = НСтр("ru = 'Текстовый документ(*.txt)|*.txt|Все файлы (*.*)|*.*'; en = 'Text document(*.txt)|*.txt|All files (*.*)|*.*'");
		ВыборФайла.ИндексФильтра = 0;
		ВыборФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайлаОтветаАктивации", ЭтотОбъект, Новый Структура("ВыборФайла", ВыборФайла)));
	Иначе
		ОписаниеОшибки = НСтр("ru = 'Ошибка открытия файла. Попробуйте открыть через тонкий или толстый клиент.'; en = 'Error opening file. Try opening through a thin or thick client.'");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайлаОтветаАктивации(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ВыборФайла = ДополнительныеПараметры.ВыборФайла;
	
	
	Результат = (ВыбранныеФайлы <> Неопределено);
	ПолноеИмяФайла = ВыборФайла.ПолноеИмяФайла;
	
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ОтветИнтернетАктивации = ПолноеИмяФайла;

КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	ОписаниеНастройки = Новый ОписаниеНастроек;
	ОписаниеНастройки.Представление = НСтр("ru = 'Регистрационная информация'; en = 'Registration Information'");
	ДанныеНастройки = Новый Структура;
	ДанныеНастройки.Вставить("Организация", Объект.Организация);
	ДанныеНастройки.Вставить("ИНН", Объект.ИНН);
	ДанныеНастройки.Вставить("Ответственный",Объект.Ответственный);
	ДанныеНастройки.Вставить("Телефон",Объект.Телефон);
	ДанныеНастройки.Вставить("ЭлектроннаяПочта",Объект.ЭлектроннаяПочта);
	ДанныеНастройки.Вставить("Сайт",Объект.Сайт);
	ДанныеНастройки.Вставить("Установщик", Объект.Установщик);
	ХранилищеОбщихНастроек.Сохранить("РегистрационнаяИнформация",,ДанныеНастройки,,"");
КонецПроцедуры

#КонецОбласти

