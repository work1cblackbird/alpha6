#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ДокументОбъект Экспорт; // Документ объект

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьИнтервалПрошлогоПериода(ВидПлана,ДатаНачала,ДатаКонца)
	ДатаНачалаПланирования = ДокументОбъект.ДатаНачала;
	ДатаКонцаПланирования = ДокументОбъект.ДатаКонца;
	Если ВидПлана=Неопределено Тогда
		ДатаНачала=Неопределено;
		ДатаКонца=Неопределено;
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.День Тогда
		ДатаНачала = НачалоДня(ДатаНачалаПланирования-1);
		ДатаКонца = КонецДня(ДатаКонцаПланирования-1);
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.Неделя Тогда
		ДатаНачала = НачалоНедели(ДатаНачалаПланирования-7);
		ДатаКонца = КонецНедели(ДатаКонцаПланирования-7);
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.Месяц Тогда
		ДатаНачала = НачалоМесяца(ДобавитьМесяц(ДатаНачалаПланирования,-1));
		ДатаКонца = КонецМесяца(ДобавитьМесяц(ДатаКонцаПланирования,-1));
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.Квартал Тогда
		ДатаНачала = НачалоКвартала(ДобавитьМесяц(ДатаНачалаПланирования,-3));
		ДатаКонца = КонецКвартала(ДобавитьМесяц(ДатаКонцаПланирования,-3));
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.Год Тогда
		ДатаНачала = НачалоГода(ДобавитьМесяц(ДатаНачалаПланирования,-12));
		ДатаКонца = КонецГода(ДобавитьМесяц(ДатаКонцаПланирования,-12));
	КонецЕсли;
КонецПроцедуры

// Заполнение документа план операция: планирование.
Процедура ЗаполнитьПлан() Экспорт
	ДокументОбъект.Показатели.Очистить();
	Если НЕ ДокументОбъект <> Документы.ПланФакт.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	
	// Кэшируем параметры запросов.
	ВидПлана = Справочники.ВидыПлановКомпании.ПланПродажПоНоменклатуреВПределахКатегорииМесячный;
	ТипНоменклатуры=ДокументОбъект.ОбъектПланирования;
	ПодразделениеКомпании=ДокументОбъект.ПодразделениеКомпании;
	ДатаНачала = Неопределено;
	ДатаКонца = Неопределено;
	ПолучитьИнтервалПрошлогоПериода(ВидПлана,ДатаНачала,ДатаКонца);
	
	// Определим необходимость ограничения по ассортименту.	
	ШиринаАссортимента = Документы.ПланФакт.ПолучитьПараметрПлана(ДокументОбъект, НСтр("ru = 'Ширина ассортимента'"));
    ОграничиватьПоШиринеАссортимента=(ШиринаАссортимента<>Неопределено И ШиринаАссортимента>0);
	
	// Получим результаты продаж за предыдущий период по данному типу номенклатуры.
	ТекстЗапроса="ВЫБРАТЬ ";
	Если ОграничиватьПоШиринеАссортимента Тогда
		ТекстЗапроса=ТекстЗапроса+"ПЕРВЫЕ "+ШиринаАссортимента+" ";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	 |	Необх.ВидАналитикиПланирования1 КАК ВидАналитикиПланирования1,
	 |	СУММА(ВЫБОР 
	 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА Необх.ПоказательПлана1Оборот 
	 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток >= Необх.ПоказательПлана1Оборот ТОГДА 0 
	 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток < Необх.ПоказательПлана1Оборот ТОГДА Необх.ПоказательПлана1Оборот - Ост.КоличествоОстаток 
	 |
	 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА МинОст.ЗначениеРеквизита 
	 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток >= МинОст.ЗначениеРеквизита ТОГДА 0 
	 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток < МинОст.ЗначениеРеквизита ТОГДА МинОст.ЗначениеРеквизита - Ост.КоличествоОстаток 
	 |	КОНЕЦ) КАК ПоказательПлана1,
	 |	СУММА(ВЫБОР
	 |		КОГДА Партии.КоличествоПриход<>0 ТОГДА Партии.СуммаУпрПриход / Партии.КоличествоПриход
	 |		ИНАЧЕ 0
	 |	КОНЕЦ) КАК ПоказательПлана2,
	 |
	 |	СУММА(ВЫБОР 
	 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА Необх.ПоказательПлана1Оборот 
	 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток >= Необх.ПоказательПлана1Оборот ТОГДА 0 
	 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток < Необх.ПоказательПлана1Оборот ТОГДА Необх.ПоказательПлана1Оборот - Ост.КоличествоОстаток 
	 |
	 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА МинОст.ЗначениеРеквизита 
	 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток >= МинОст.ЗначениеРеквизита ТОГДА 0 
	 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток < МинОст.ЗначениеРеквизита ТОГДА МинОст.ЗначениеРеквизита - Ост.КоличествоОстаток 
	 |	КОНЕЦ)
	 |	* СУММА(ВЫБОР
	 |		КОГДА Партии.КоличествоПриход<>0 ТОГДА Партии.СуммаУпрПриход / Партии.КоличествоПриход
	 |		ИНАЧЕ 0
	 |	КОНЕЦ) КАК ПоказательПлана3
	 |
	 |ИЗ
	 |	РегистрНакопления.Планирование.Обороты(&ДатаНачала, &ДатаКонца, , ВидПлана = &ВидПлана И ВидАналитикиПланирования1.ТипНоменклатуры = &ТипНоменклатуры И ПодразделениеКомпании В ИЕРАРХИИ(&ПодразделениеКомпании)) КАК Необх
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваровКомпании.Остатки(&ДатаКонца, СкладКомпании.ПодразделениеКомпании=&ПодразделениеКомпании) КАК Ост
	 |		ПО Необх.ВидАналитикиПланирования1 = Ост.Номенклатура
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеРеквизитыНоменклатуры КАК МинОст
	 |		ПО Необх.ВидАналитикиПланирования1 = МинОст.Номенклатура И (МинОст.ДополнительныйРеквизит = &МинимальныйОстатокСсылка) И Необх.ПодразделениеКомпании=МинОст.ПодразделениеКомпании
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровКомпании.Обороты(&ДатаНачала, &ДатаКонца, , СкладКомпании.ПодразделениеКомпании=&ПодразделениеКомпании) КАК Партии
	 |		ПО Необх.ВидАналитикиПланирования1 = Партии.Номенклатура
	 |СГРУППИРОВАТЬ ПО
	 |	Необх.ВидАналитикиПланирования1, Партии.Номенклатура, Ост.Номенклатура";
	 
	Если ОграничиватьПоШиринеАссортимента Тогда
		ТекстЗапроса=ТекстЗапроса+"
		| УПОРЯДОЧИТЬ ПО ПоказательПлана3 УБЫВ";
	КонецЕсли;
	 		
	Запрос=Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВидПлана", ВидПлана);
	Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
	Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца", ДатаКонца);
	Запрос.УстановитьПараметр("МинимальныйОстатокСсылка", Перечисления.ДополнительныеРеквизитыНоменклатуры.МинимальныйОстаток);
	
	ДокументОбъект.Показатели.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если ОграничиватьПоШиринеАссортимента Тогда
		Если ДокументОбъект.Показатели.Количество()<ШиринаАссортимента Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'ВНИМАНИЕ! Заданная ширина ассортимента превосходит количество видов товаров, проданных за предыдущий период.'")
			);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Заполнение документа план операция: фактически.
Процедура ЗаполнитьФакт() Экспорт
	ДокументОбъект.Показатели.Очистить();
	Если НЕ ДокументОбъект <> Документы.ПланФакт.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	
	// Кэшируем параметры запроса.
	ВидПлана = Справочники.ВидыПлановКомпании.ПланПродажПоТоварнымКатегориямМесячный;
	ТипНоменклатуры=ДокументОбъект.ОбъектПланирования;
	ПодразделениеКомпании=ДокументОбъект.ПодразделениеКомпании;
	ДатаНачала = Неопределено;
	ДатаКонца = Неопределено;
	ПолучитьИнтервалПрошлогоПериода(ВидПлана,ДатаНачала,ДатаКонца);
	
	// Определим необходимость ограничения по ассортименту.	
	ШиринаАссортимента = Документы.ПланФакт.ПолучитьПараметрПлана(ДокументОбъект, НСтр("ru = 'Ширина ассортимента'"));
    ОграничиватьПоШиринеАссортимента=(ШиринаАссортимента<>Неопределено И ШиринаАссортимента>0);
	
	// Получим результаты продаж за предыдущий период по данному типу номенклатуры.
		ТекстЗапроса="ВЫБРАТЬ ";
	Если ОграничиватьПоШиринеАссортимента Тогда
		ТекстЗапроса=ТекстЗапроса+"ПЕРВЫЕ "+ШиринаАссортимента+" ";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|	ПартииТоваровКомпании.Номенклатура КАК ВидАналитикиПланирования1,
	|	СУММА(ПартииТоваровКомпании.КоличествоПриход) КАК ПоказательПлана1,
	|	СУММА(ПартииТоваровКомпании.СуммаУпрПриход) КАК ПоказательПлана3,
	|	СУММА(ПартииТоваровКомпании.СуммаУпрПриход) / СУММА(ПартииТоваровКомпании.КоличествоПриход) КАК ПоказательПлана2
	|ИЗ
	|	РегистрНакопления.ПартииТоваровКомпании.Обороты(&ДатаНачала, &ДатаКонца, , Партия.ХозОперация = &ХозОперация И Номенклатура.ТипНоменклатуры=&ТипНоменклатуры И СкладКомпании.ПодразделениеКомпании=&ПодразделениеКомпании) КАК ПартииТоваровКомпании
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровКомпании.Номенклатура";
	
	Если ОграничиватьПоШиринеАссортимента Тогда
		ТекстЗапроса=ТекстЗапроса+"
		| УПОРЯДОЧИТЬ ПО ПоказательПлана3 УБЫВ";
	КонецЕсли;
	
	Запрос=Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца",ДатаКонца);
	Запрос.УстановитьПараметр("ТипНоменклатуры",ТипНоменклатуры);
	Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
	Запрос.УстановитьПараметр("ХозОперация", Справочники.ХозОперации.ПоступлениеТоваров);
	
	// Заполняем документ.
	ДокументОбъект.Показатели.Загрузить(Запрос.Выполнить().Выгрузить());
	
	 Если ОграничиватьПоШиринеАссортимента Тогда
		Если ДокументОбъект.Показатели.Количество()<ШиринаАссортимента Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'ВНИМАНИЕ! Заданная ширина ассортимента превосходит количество видов товаров, проданных за предыдущий период.'")
			);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли