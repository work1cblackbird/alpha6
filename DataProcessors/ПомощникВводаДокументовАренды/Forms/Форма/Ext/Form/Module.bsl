///////////////////////////////////////////////////////////////////////////////
// Модуль формы обработки "Помощник ввода документов аренды"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Основание", Основание) И НЕ ЗначениеЗаполнено(Параметры.Основание) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДействующееСоглашение = РегистрыСведений.АрендаДействующиеСоглашения.ДействующееСоглашение(Основание);
	
	ДействующееСоглашениеДатаНачала    = ДействующееСоглашение.ДатаНачала;
	ДействующееСоглашениеДатаОкончания = ДействующееСоглашение.ДатаОкончания;
	
	ЗаполнитьСоответствиеМесяцев(ДействующееСоглашениеДатаНачала, ДействующееСоглашениеДатаОкончания);
	
	Элементы.ГруппаАктОбОказанииУслуг.Видимость = Ложь;
	Элементы.ГруппаСчет.Видимость               = Ложь;
	Элементы.ГруппаСчетДепозита.Видимость       = Ложь;
	
	Элементы.СчетПризнак.Видимость              = Ложь;
	Элементы.СчетДепозитаПризнак.Видимость      = Ложь;
	Элементы.АктПризнак.Видимость               = Ложь;
	
	Если Параметры.Свойство("Акт") И Основание.ВидАренды.ТипАренды <> Перечисления.ТипыРемонта.Бесплатный Тогда
		АктПризнак = Истина;
		Элементы.АктПризнак.Видимость = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("Счет") И Основание.ВидАренды.ТипАренды <> Перечисления.ТипыРемонта.Бесплатный Тогда
		СчетПризнак = Истина;
		Элементы.СчетПризнак.Видимость = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("СчетДепозита") И Основание.ВидАренды.ДепозитИспользование Тогда
		СчетДепозитаПризнак = Истина;
		Элементы.СчетДепозитаПризнак.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ (АктПризнак ИЛИ СчетПризнак ИЛИ СчетДепозитаПризнак) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Для данного договора выбранное действие недоступно.'"),
			,,,
			Отказ);
		Возврат;
	КонецЕсли;
	
	Если АктПризнак Тогда
		АктВидПериодаПриИзменении(Неопределено);
		АктПризнакПриИзменении(Неопределено);
	КонецЕсли;
	
	Если СчетПризнак Тогда
		СчетВидПериодаПриИзменении(Неопределено);
		СчетПризнакПриИзменении(Неопределено);
	КонецЕсли;
	
	Если СчетДепозитаПризнак Тогда
		СчетДепозитаПризнакПриИзменении(Неопределено);
	КонецЕсли;
	
	ПроверитьВозможностьПродолжения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АктВидПериодаПриИзменении(Элемент)
	
	УстановитьДаты("Акт");
	
КонецПроцедуры

&НаКлиенте
Процедура АктПериодПриИзменении(Элемент)
	
	УстановитьДатыПоМесяцу("Акт");
	
КонецПроцедуры

&НаКлиенте
Процедура СчетВидПериодаПриИзменении(Элемент)
	
	УстановитьДаты("Счет");
	
КонецПроцедуры

&НаКлиенте
Процедура СчетПериодПриИзменении(Элемент)
	
	УстановитьДатыПоМесяцу("Счет");
	
КонецПроцедуры

&НаКлиенте
Процедура СчетПризнакПриИзменении(Элемент)
	
	Элементы.ГруппаСчет.Видимость = СчетПризнак;
	СчетДополнительныеУслуги      = СчетПризнак;
	СчетАренда                    = СчетПризнак;
	СчетОткрытьФорму              = СчетПризнак;
	
	ПроверитьВозможностьПродолжения();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетДепозитаПризнакПриИзменении(Элемент)
	
	Элементы.ГруппаСчетДепозита.Видимость = СчетДепозитаПризнак;
	СчетДепозитаОткрытьФорму              = СчетДепозитаПризнак;
	
	ПроверитьВозможностьПродолжения();
	
КонецПроцедуры

&НаКлиенте
Процедура АктПризнакПриИзменении(Элемент)
	
	Элементы.ГруппаАктОбОказанииУслуг.Видимость = АктПризнак;
	АктДополнительныеУслуги                     = АктПризнак;
	АктАренда                                   = АктПризнак;
	АктОткрытьФорму                             = АктПризнак;
	
	ПроверитьВозможностьПродолжения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВвестиДокумент(Команда)
	
	Отказ = Ложь;
	
	Если СчетДепозитаПризнак Тогда
		
		ПараметрыВвода = Новый Структура;
		ПараметрыВвода.Вставить("Основание",     Основание);
		ПараметрыВвода.Вставить("ДоговорАренды", Основание);
		ПараметрыВвода.Вставить("СчетНаДепозит", Истина);
		
		Если СчетДепозитаОткрытьФорму Тогда
			Результат = ОткрытьФорму(
				"Документ.СчетНаОплату.ФормаОбъекта",
				Новый Структура("ЗначенияЗаполнения", ПараметрыВвода),,
				Истина);
			Отказ = Отказ ИЛИ (Результат = Неопределено);
		Иначе
			СоздатьДокумент("СчетНаОплату", ПараметрыВвода, РежимЗаписиДокумента.Запись, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ И СчетПризнак Тогда
		
		ПараметрыВвода = Новый Структура;
		ПараметрыВвода.Вставить("Основание",     Основание);
		ПараметрыВвода.Вставить("Аренда",        СчетАренда);
		ПараметрыВвода.Вставить("ДопУслуги",     СчетДополнительныеУслуги);
		ПараметрыВвода.Вставить("ДатаНачала",    СчетДатаНачала);
		ПараметрыВвода.Вставить("ДатаОкончания", СчетДатаОкончания);
		
		Если СчетОткрытьФорму Тогда
			Результат = ОткрытьФорму(
				"Документ.СчетНаОплату.ФормаОбъекта",
				Новый Структура("ЗначенияЗаполнения", ПараметрыВвода),,
				Истина);
			Отказ = Отказ ИЛИ (Результат = Неопределено);
		Иначе
			СоздатьДокумент("СчетНаОплату", ПараметрыВвода, РежимЗаписиДокумента.Запись, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ И АктПризнак Тогда
		
		ПараметрыВвода = Новый Структура;
		ПараметрыВвода.Вставить("Основание",     Основание);
		ПараметрыВвода.Вставить("Аренда",        АктАренда);
		ПараметрыВвода.Вставить("ДопУслуги",     АктДополнительныеУслуги);
		ПараметрыВвода.Вставить("ДатаНачала",    АктДатаНачала);
		ПараметрыВвода.Вставить("ДатаОкончания", АктДатаОкончания);
		
		Если АктОткрытьФорму Тогда
			Результат = ОткрытьФорму(
				"Документ.РеализацияТоваров.ФормаОбъекта",
				Новый Структура("ЗначенияЗаполнения", ПараметрыВвода),,
				Истина);
			Отказ = Отказ ИЛИ (Результат = Неопределено);
		Иначе
			СоздатьДокумент("РеализацияТоваров", ПараметрыВвода, РежимЗаписиДокумента.Проведение, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункцииКлиент

&НаКлиенте
Процедура УстановитьДаты(Префикс)
	
	Элементы[Префикс + "Период"].Доступность = (ЭтотОбъект[Префикс + "ВидПериода"] = 3);
	
	Если ЭтотОбъект[Префикс + "ВидПериода"] = 0 Тогда
		ЭтотОбъект[Префикс + "ДатаНачала"]    = ДействующееСоглашениеДатаНачала;
		ЭтотОбъект[Префикс + "ДатаОкончания"] = ДействующееСоглашениеДатаОкончания;
	ИначеЕсли ЭтотОбъект[Префикс + "ВидПериода"] = 1 Тогда
		ЭтотОбъект[Префикс + "ДатаНачала"]    = Макс(
			НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()),
			ДействующееСоглашениеДатаНачала);
		ЭтотОбъект[Префикс + "ДатаОкончания"] = Мин(
			КонецМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()),
			ДействующееСоглашениеДатаОкончания);
	ИначеЕсли ЭтотОбъект[Префикс + "ВидПериода"] = 2 Тогда
		ЭтотОбъект[Префикс + "ДатаНачала"]    = Макс(
			НачалоМесяца(ДобавитьМесяц(ОбщегоНазначенияКлиент.ДатаСеанса(), -1)),
			ДействующееСоглашениеДатаНачала);
		ЭтотОбъект[Префикс + "ДатаОкончания"] = Мин(
			КонецМесяца (ДобавитьМесяц(ОбщегоНазначенияКлиент.ДатаСеанса(), -1)),
			ДействующееСоглашениеДатаОкончания);
	ИначеЕсли ЭтотОбъект[Префикс + "ВидПериода"] = 3 Тогда
		УстановитьДатыПоМесяцу(Префикс);
	КонецЕсли;
	
	Если ЭтотОбъект[Префикс + "ДатаНачала"] > ЭтотОбъект[Префикс + "ДатаОкончания"] Тогда
		ЭтотОбъект[Префикс + "ДатаНачала"]    = Неопределено;
		ЭтотОбъект[Префикс + "ДатаОкончания"] = Неопределено;
	КонецЕсли;
	
	ПроверитьВозможностьПродолжения();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДатыПоМесяцу(Префикс)
	
	Период = СоответствиеМесяцев.НайтиСтроки(Новый Структура("НомерПериода", ЭтотОбъект[Префикс + "Период"]))[0];
	ЭтотОбъект[Префикс + "ДатаНачала"]    = Макс(НачалоМесяца(Период.ДатаНачала),    ДействующееСоглашениеДатаНачала);
	ЭтотОбъект[Префикс + "ДатаОкончания"] = Мин (КонецМесяца (Период.ДатаОкончания), ДействующееСоглашениеДатаОкончания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВозможностьПродолжения()
	
	Элементы.ФормаВвестиДокумент.Доступность = (АктПризнак ИЛИ СчетПризнак ИЛИ СчетДепозитаПризнак);
	
	Если АктПризнак Тогда
		Элементы.ФормаВвестиДокумент.Доступность = Элементы.ФормаВвестиДокумент.Доступность
			И ЗначениеЗаполнено(АктДатаНачала) И ЗначениеЗаполнено(АктДатаОкончания);
	КонецЕсли;
	
	Если СчетПризнак Тогда
		Элементы.ФормаВвестиДокумент.Доступность = (Элементы.ФормаВвестиДокумент.Доступность
			И ЗначениеЗаполнено(СчетДатаНачала) И ЗначениеЗаполнено(СчетДатаОкончания));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииСервер

&НаСервере
Процедура СоздатьДокумент(ТипДокумента, ПараметрыВвода, РежимЗаписи, Отказ)
	
	НовыйДокумент = Документы[ТипДокумента].СоздатьДокумент();
	НовыйДокумент.Заполнить(ПараметрыВвода);
	
	Если НЕ НовыйДокумент.Товары.Количество() Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Новый документ после заполнения не содержит ни одной строки в таблице ""Товары"".
				|Создание документа отменено.'"),,,,
			Отказ);
		Возврат;
	КонецЕсли;
	
	Попытка
		НовыйДокумент.Записать(РежимЗаписи);
	Исключение
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = 'Не удалось выполнить %1 документа по причине: %2.'"),
				НРег(Строка(РежимЗаписи)),
				КраткоеПредставлениеОшибки(ИнформацияОбОшибке())
			),,,,Отказ
		);
			
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоответствиеМесяцев(ДатаНачала, ДатаОкончания)
	
	НачалоМесяца = ДатаНачала;
	КонецМесяца  = Мин(ДатаОкончания, КонецМесяца(НачалоМесяца));
	НомерПериода = 0;
	
	Пока НачалоМесяца < ДатаОкончания Цикл
		
		НоваяСтрока = СоответствиеМесяцев.Добавить();
		НоваяСтрока.НомерПериода  = НомерПериода;
		НоваяСтрока.ДатаНачала    = НачалоМесяца;
		НоваяСтрока.ДатаОкончания = КонецМесяца;
		
		НомерПериода = НомерПериода + 1;
		НачалоМесяца = НачалоМесяца(ДобавитьМесяц(НачалоМесяца, 1));
		КонецМесяца  = Мин(ДатаОкончания, КонецМесяца(НачалоМесяца));
		
	КонецЦикла;
	
	Элементы.СчетПериод.СписокВыбора.Очистить();
	Элементы.АктПериод. СписокВыбора.Очистить();
	
	Для Каждого Строка Из СоответствиеМесяцев Цикл
		
		Элементы.СчетПериод.СписокВыбора.Добавить(
			Строка.НомерПериода,
			Формат(Строка.ДатаНачала, НСтр("ru = 'ДФ=''гггг ММММ'''"))
		);
		Элементы.АктПериод. СписокВыбора.Добавить(
			Строка.НомерПериода,
			Формат(Строка.ДатаНачала, НСтр("ru = 'ДФ=''гггг ММММ'''"))
		);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
