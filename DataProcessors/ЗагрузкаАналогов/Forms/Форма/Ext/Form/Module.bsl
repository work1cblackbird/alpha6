
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьНастройкиПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КолонкаНомерПриИзменении(Элемент)
	
	ОформитьОбразец();
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкаНомерАналогаПриИзменении(Элемент)
	
	ОформитьОбразец();
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкаПроизводительПриИзменении(Элемент)
	
	ОформитьОбразец();
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкаПроизводительАналогаПриИзменении(Элемент)
	
	ОформитьОбразец();
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкаНаименованиеПриИзменении(Элемент)
	
	ОформитьОбразец();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеАналогаПриИзменении(Элемент)
	
	ОформитьОбразец();
	
КонецПроцедуры

&НаКлиенте
Процедура НачальнаяСтрокаПриИзменении(Элемент)
	
	ОформитьОбразец();
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьЗаголовкиПриИзменении(Элемент)
	
	ОформитьОбразец();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьФайл(Команда)
	
	НачатьПомещениеФайлаНаСервер(
		Новый ОписаниеОповещения("ЗавершениеВыбораФайла", ЭтотОбъект),
		,
		,
		,
		,
		УникальныйИдентификатор
	);
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	Элементы.Корень.ТекущаяСтраница = СледующаяСтраница(ЭтотОбъект);
	ВыполнитьОбработкуСменыСтраницы(Элементы.Корень.ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройкиПоУмолчанию(Команда)
	
	УстановитьНастройкиПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КНачалу(Команда)
	
	Элементы.Корень.ТекущаяСтраница = Элементы.ВыборФайлаИНастройка;
	ВыполнитьОбработкуСменыСтраницы(Элементы.Корень.ТекущаяСтраница);
	
	Элементы.РезультатЗагрузкиДеревоЗагрузитьВРегистр.Доступность = Истина;
	Элементы.РезультатЗагрузкиДеревоЗагрузитьВРегистр.Заголовок = "";
	РезультатЗагрузкиДерево.ПолучитьЭлементы().Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольЗаполнения(Команда)
	
	ПараметрыОперации = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОперации.ТекстСообщения = НСтр("ru='Выполняется проверка аналогов'");
	ПараметрыОперации.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОперации.ВыводитьОкноОжидания = Истина;
	ПараметрыОперации.ВыводитьСообщения = Истина;
	
	ДлительнаяОперация = КонтрольАналогов();
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения("ЗавершениеКонтроляАналогов", ЭтотОбъект),
		ПараметрыОперации
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВРегистр(Команда)
	
	ПараметрыОперации = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОперации.ТекстСообщения = НСтр("ru='Выполняется загрузка аналогов'");
	ПараметрыОперации.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОперации.ВыводитьОкноОжидания = Истина;
	ПараметрыОперации.ВыводитьСообщения = Истина;
	
	ДлительнаяОперация = ЗаписатьИзмененияВБазу();
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения("ЗавершениеЗагрузкиАналогов", ЭтотОбъект),
		ПараметрыОперации
	);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНастройкиПоУмолчанию(Форма)
	
	ЗаполнитьЗначенияСвойств(Форма.Объект, НастройкиПоУмолчанию());
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НастройкиПоУмолчанию()
	
	Настройки = Новый Структура();
	Настройки.Вставить("КолонкаНомер", 1);
	Настройки.Вставить("КолонкаПроизводитель", 2);
	Настройки.Вставить("КолонкаНаименование", 3);
	Настройки.Вставить("КолонкаНомерАналога", 4);
	Настройки.Вставить("КолонкаПроизводительАналога", 5);
	Настройки.Вставить("КолонкаНаименованиеАналога", 6);
	Настройки.Вставить("ЕстьЗаголовки", Истина);
	Настройки.Вставить("НачальнаяСтрока", 1);
	
	Возврат Настройки;
	
КонецФункции

#Область РаботаСФайлом

&НаКлиенте
Процедура ЗавершениеВыбораФайла(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат.ПомещениеФайлаОтменено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗагрузитьФайлНаСервера(Результат.Адрес);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьФайлНаСервера(Адрес)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	Объект.АдресФайла = ПолучитьИмяВременногоФайла("xlsx");
	ДвоичныеДанные.Записать(Объект.АдресФайла);
	ЗагружаемыйДокумент.Прочитать(Объект.АдресФайла);
	ОформитьОбразец();
	
	Попытка
		
		УдалитьФайлы(Объект.АдресФайла);
		
	Исключение
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Загрузка аналогов.Удаление временного файла'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Предупреждение,
			,
			,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),
		);
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаАналаговВФоне

&НаКлиенте
Процедура НачатьЗагрузкуАналогов(Источник, ДополнительныеПараметры) Экспорт
	
	Если НЕ (НастройкиЗаполненыВерно() И ЕстьДанныеДляЗагрузки()) Тогда
		
		Элементы.Корень.ТекущаяСтраница = ПредыдущаяСтраница(ЭтотОбъект);
		Возврат;
		
	КонецЕсли;
	
	УстановитьИндикаторВыполненияЗадания();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);	
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ЗагрузкаАналоговПрогресс",
		ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ЗагрузитьАналоги(),
		Новый ОписаниеОповещения("ЗагрузкаАналоговЗавершение", ЭтотОбъект),
		ПараметрыОжидания
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаАналоговПрогресс(РезультатВыполнения, ДопПараметры) Экспорт
	
	Если РезультатВыполнения.Статус = "Выполняется" И ЗначениеЗаполнено(РезультатВыполнения.Прогресс) Тогда
		
		УстановитьИндикаторВыполненияЗадания(РезультатВыполнения.Прогресс.Процент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаАналоговЗавершение(РезультатВыполнения, ДопПараметры) Экспорт
	
	Если РезультатВыполнения.Статус = "Выполняется" Тогда
		
		Возврат;
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ПоказатьПредупреждение(, РезультатВыполнения.КраткоеПредставлениеОшибки);
		Элементы.Корень.ТекущаяСтраница = ПредыдущаяСтраница(ЭтотОбъект);
		Возврат;
		
	ИначеЕсли РезультатВыполнения.Статус = "Отменено" Тогда
		
		Элементы.Корень.ТекущаяСтраница = ПредыдущаяСтраница(ЭтотОбъект);
		Возврат;
		
	КонецЕсли;
	
	УстановитьИндикаторВыполненияЗадания(99);
	Элементы.Корень.ТекущаяСтраница = СледующаяСтраница(ЭтотОбъект);
	ВыполнитьОбработкуСменыСтраницы(Элементы.Корень.ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПоследовательностьСтраниц(Форма)
	
	Последовательность = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.Элементы.ВыборФайлаИНастройка);
	Последовательность.Добавить(Форма.Элементы.ВыполнениеФоновогоДействия);
	Последовательность.Добавить(Форма.Элементы.РезультатЗагрузки);
	Возврат Последовательность;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СледующаяСтраница(Форма)
	
	Последовательность = ПоследовательностьСтраниц(Форма);
	Возврат Последовательность[Последовательность.Найти(Форма.Элементы.Корень.ТекущаяСтраница) + 1];
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредыдущаяСтраница(Форма)
	
	Последовательность = ПоследовательностьСтраниц(Форма);
	Возврат Последовательность[Последовательность.Найти(Форма.Элементы.Корень.ТекущаяСтраница) - 1];
	
КонецФункции

&НаКлиенте
Функция НастройкиЗаполненыВерно()
	
	ВсеОк = Истина;
	
	ПроверяемыеПоля = Новый Структура;
	ПроверяемыеПоля.Вставить("КолонкаНомер", НСтр("ru = 'Номер'"));
	ПроверяемыеПоля.Вставить("КолонкаПроизводитель", НСтр("ru = 'Производитель'"));
	ПроверяемыеПоля.Вставить("КолонкаНомерАналога", НСтр("ru = 'Номер аналога'"));
	ПроверяемыеПоля.Вставить("КолонкаПроизводительАналога", НСтр("ru = 'Производитель аналога'"));
	
	Для Каждого Поле Из ПроверяемыеПоля Цикл
		
		Если Не ЗначениеЗаполнено(Объект[Поле.Ключ]) Тогда
			
			ВсеОк = Ложь;
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Не указана обязательная колонка <%1>'"),
					Поле.Значение
				),
				,
				Поле.Ключ
			);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВсеОк;
	
КонецФункции

&НаКлиенте
Функция ЕстьДанныеДляЗагрузки()
	
	Если ЗагружаемыйДокумент.ВысотаТаблицы = 0 Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Нет данных для загрузки'"));
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ЗагрузитьАналоги()
	
	// Составим новый табличный документ из которого будем получать данные.
	НачалоЗагрузки = 2;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Вывести(Образец.ПолучитьОбласть(1, 1, 1, ЗагружаемыйДокумент.ШиринаТаблицы));
	ТабличныйДокумент.Вывести(
		Образец.ПолучитьОбласть(
			НачалоЗагрузки, 1, Образец.ВысотаТаблицы, ЗагружаемыйДокумент.ШиринаТаблицы));
	
	// Остановим выполнение если задание уже выполняется
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	// Подготавливаем параметры длительной операции
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"РегистрыСведений.ГруппыАналогов.АналогиИзТабличногоДокумента",
		ТабличныйДокумент
	);
	
	
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РезультатВыполнения, "ИдентификаторЗадания,АдресРезультата");
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура УстановитьИндикаторВыполненияЗадания(Этап=0)
	
	ВсегоЭтапов = 5;
	
	Для Сч = 1 По ВсегоЭтапов Цикл
		
		ОбщегоНазначенияКлиентСервер
			.УстановитьСвойствоЭлементаФормы(Элементы, СтрШаблон("Этап%1Выполняется", Сч), "Видимость", Этап <= Сч);
		ОбщегоНазначенияКлиентСервер
			.УстановитьСвойствоЭлементаФормы(Элементы, СтрШаблон("ИндикаторЭтап%1Выполняется", Сч), "Видимость", Этап = Сч);
		ОбщегоНазначенияКлиентСервер
			.УстановитьСвойствоЭлементаФормы(Элементы, СтрШаблон("Этап%1Выполнено", Сч), "Видимость", Этап > Сч);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуСменыСтраницы(ТекущаяСтраница)
	
	Событие = СобытияСменыСтраницы().Получить(ТекущаяСтраница);
	
	Если Событие = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Событие, "ВыполнитьОбработкуСменыСтраницы");
	
КонецПроцедуры

&НаКлиенте
Функция СобытияСменыСтраницы()
	
	Обработчики = Новый Соответствие;
	Обработчики.Вставить(Элементы.ВыполнениеФоновогоДействия, Новый ОписаниеОповещения("НачатьЗагрузкуАналогов", ЭтотОбъект));
	Обработчики.Вставить(Элементы.РезультатЗагрузки, Новый ОписаниеОповещения("НачатьФормированиеРезультатаЗагрузки", ЭтотОбъект));
	Возврат Обработчики;
	
КонецФункции

#КонецОбласти

#Область ЗагрузкаАналоговВДерево

&НаКлиенте
Процедура НачатьФормированиеРезультатаЗагрузки(Источник, ДополнительныеПараметры) Экспорт
	
	СформироватьРезультатЗагрузки();
	ОбщегоНазначенияАвтосалонКлиент.РазвернутьДерево(ЭтотОбъект, "РезультатЗагрузкиДерево", Истина);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьРезультатЗагрузки()
	
	ДанныеАналогов = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если ДанныеАналогов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ГруппыКЗаписи = ДанныеАналогов.ГруппыКЗаписи;
	
	Для Каждого ТекущаяГруппа Из ГруппыКЗаписи Цикл
		
		НоваяГруппа = РезультатЗагрузкиДерево.ПолучитьЭлементы().Добавить();
		НоваяГруппа.ИдентификаторГруппы = Строка(ТекущаяГруппа.Ключ);
		
		Для Каждого ТекущийАналог Из ТекущаяГруппа.Значение Цикл
			НовыйАналог = НоваяГруппа.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовыйАналог, ТекущийАналог);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Образец

&НаСервере
Процедура ОформитьОбразец()
	
	НачалоЗагрузки = Объект.НачальнаяСтрока + ?(Объект.ЕстьЗаголовки , 1, 0);
	
	Образец.Очистить();
	Образец.Вывести(ОформитьСтрокуЗаголовков());
	Образец.Вывести(
		ЗагружаемыйДокумент.ПолучитьОбласть(
			НачалоЗагрузки, 1, ЗагружаемыйДокумент.ВысотаТаблицы, ЗагружаемыйДокумент.ШиринаТаблицы));
	
КонецПроцедуры

&НаСервере
Функция ОформитьСтрокуЗаголовков()
	
	Макет =  Обработки.ЗагрузкаАналогов.ПолучитьМакет("Оформление");
	ЗаполненнаяЯчейка = Макет.ПолучитьОбласть("Заголовки|ЗаполненнаяЯчейка");
	ПустаяЯчейка = Макет.ПолучитьОбласть("Заголовки|ПустаяЯчейка");
	Служебная = Макет.ПолучитьОбласть("Заголовки|СлужебнаяЯчейка");
	НомераКолонок = НомераКолонокНастроек(ЭтотОбъект);
	Шапка = Новый ТабличныйДокумент;
	
	ШиринаТаблицы = ЗагружаемыйДокумент.ПолучитьРазмерОбластиДанныхПоГоризонтали();
	
	Для Сч = 1 По ШиринаТаблицы + 1 Цикл
		
		Колонка = НомераКолонок.Получить(Сч);
		Если Колонка <> Неопределено Тогда
			ТекущаяЯчейка = ЗаполненнаяЯчейка;
			ТекущаяЯчейка.Параметры.Колонка = Колонка;
		ИначеЕсли Сч = ШиринаТаблицы + 1 Тогда
			ТекущаяЯчейка = Служебная;
			ТекущаяЯчейка.Параметры.Колонка = НСтр("ru = 'Результат контроля (служебная)'");
		Иначе
			ТекущаяЯчейка = ПустаяЯчейка;
		КонецЕсли;
		
		Если Сч = 1 Тогда
			Шапка.Вывести(ТекущаяЯчейка);
		Иначе
			Шапка.Присоединить(ТекущаяЯчейка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Шапка;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НомераКолонокНастроек(Форма)
	
	Объект = Форма.Объект;
	
	Колонки = Новый Соответствие;
	
	Если ЗначениеЗаполнено(Объект.КолонкаНомер) Тогда
		
		Колонки.Вставить(Объект.КолонкаНомер, "Номер");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КолонкаПроизводитель) Тогда
		
		Колонки.Вставить(Объект.КолонкаПроизводитель, "Производитель");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КолонкаНомерАналога) Тогда
		
		Колонки.Вставить(Объект.КолонкаНомерАналога, "Номер аналога");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КолонкаПроизводительАналога) Тогда
		
		Колонки.Вставить(Объект.КолонкаПроизводительАналога, "Производитель аналога");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КолонкаНаименование) Тогда
		
		Колонки.Вставить(Объект.КолонкаНаименование, "Наименование");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КолонкаНаименованиеАналога) Тогда
		
		ЗначениеКолонки = Колонки.Получить(Объект.КолонкаНаименованиеАналога);
		
		Если ЗначениеКолонки = Неопределено Тогда
			
			Колонки.Вставить(Объект.КолонкаНаименованиеАналога, "Наименование аналога");
			
		Иначе
			
			Колонки.Вставить(Объект.КолонкаНаименованиеАналога, ЗначениеКолонки + " / Наименование аналога");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Колонки;
	
КонецФункции

#КонецОбласти

&НаСервере
Функция КонтрольАналогов()
	
	// Составим новый табличный документ из которого будем получать данные.
	НачалоЗагрузки = 2;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Вывести(Образец.ПолучитьОбласть(1, 1, 1, ЗагружаемыйДокумент.ШиринаТаблицы));
	ТабличныйДокумент.Вывести(
		Образец.ПолучитьОбласть(
			НачалоЗагрузки, 1, Образец.ВысотаТаблицы, ЗагружаемыйДокумент.ШиринаТаблицы));
	
	// Остановим выполнение если задание уже выполняется
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	// Подготавливаем параметры длительной операции
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ГруппыАналогов.КонтрольАналоговВТабличномДокументе",
		ТабличныйДокумент,
		ПараметрыВыполнения);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РезультатВыполнения, "ИдентификаторЗадания,АдресРезультата");
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ЗавершениеКонтроляАналогов(РезультатКонтроля, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатКонтроля = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеКонтроля = КонтрольАналоговРезультат(РезультатКонтроля.АдресРезультата);
	
	Если ДанныеКонтроля = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Последняя колонка для описания проверки
	НомерКолонки = ?(ШиринаТаблицы = 0, Образец.ШиринаТаблицы, ШиринаТаблицы) + 1;
	ШаблонЯчейки = "R%1C%2";
	
	Для Сч = 2 По Образец.ВысотаТаблицы Цикл
		
		НомерСтроки = Сч - 1;
		Контроль = ДанныеКонтроля.Получить(НомерСтроки);
		
		ИмяОбласти = СтрШаблон(ШаблонЯчейки, Формат(Сч, "ЧГ="), Формат(НомерКолонки, "ЧГ="));
		
		// Оформление ячейки
		Если НомерКолонки > 1 Тогда
			ОбразецФормата = Образец.Область(СтрШаблон(ШаблонЯчейки, Формат(Сч, "ЧГ="), Формат(1, "ЧГ=")));
			Образец.Область(ИмяОбласти).Шрифт = ОбразецФормата.Шрифт;
			Образец.Область(ИмяОбласти).ЦветТекста = ОбразецФормата.ЦветТекста;
		КонецЕсли;
		
		Образец.Область(ИмяОбласти).Текст = Контроль;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КонтрольАналоговРезультат(АдресКонтроля)
	
	Возврат ПолучитьИзВременногоХранилища(АдресКонтроля);
	
КонецФункции

&НаСервере
Функция ЗаписатьИзмененияВБазу()
	
	// Остановим выполнение если задание уже выполняется
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	// Подготавливаем параметры длительной операции
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ГруппыАналогов.ЗаписатьИзмененияВБазу",
		ПолучитьИзВременногоХранилища(АдресРезультата),
		ПараметрыВыполнения
	);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РезультатВыполнения, "ИдентификаторЗадания,АдресРезультата");
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ЗавершениеЗагрузкиАналогов(РезультатЗагрузки, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатЗагрузки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьПредупреждение(, НСтр("ru = 'Аналоги загружены'"), 30);
	Элементы.РезультатЗагрузкиДеревоЗагрузитьВРегистр.Доступность = Ложь;
	Элементы.РезультатЗагрузкиДеревоЗагрузитьВРегистр.Заголовок = НСтр("ru = 'Аналоги загружены'");
	
КонецПроцедуры

#КонецОбласти
