
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция СоздатьДокументыКорректировкиБонусов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БонусныеБаллыОстатки.БонуснаяКарта,
	|	БонусныеБаллыОстатки.ДатаСписанияБонусов,
	|	БонусныеБаллыОстатки.БонуснаяКарта.БонуснаяПрограмма КАК БонуснаяПрограмма,
	|	БонусныеБаллыОстатки.КоличествоОстаток,
	|	БонусныеБаллыОстатки.БонуснаяКарта.Объект КАК Контрагент
	|ИЗ
	|	РегистрНакопления.БонусныеБаллы.Остатки(, ДатаСписанияБонусов < &ТекДата И НЕ АктивностьБонусов) КАК БонусныеБаллыОстатки";
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		// создадим документ
		НовыйДокумент = Документы.КорректировкаБонусов.СоздатьДокумент();
		НовыйДокумент.Заполнить(Неопределено);
		НовыйДокумент.УстановитьНовыйНомер();
		НовыйДокумент.СозданРегламентно = Истина;
		НовыйДокумент.Комментарий = "Создан регламентным заданием ""Активация бонусных баллов""";
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Активация накопленных баллов'"), 
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Начата регламентная активация накопленных баллов'"));
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = НовыйДокумент.БонусыКНачислению.Добавить();
			НоваяСтрока.Карточка              = Выборка.БонуснаяКарта;
			НоваяСтрока.ДатаСписания          = ?(Выборка.БонуснаяПрограмма.СрокСгоранияБонусов <> 0, 
						НачалоДня(Выборка.ДатаСписанияБонусов + 24 * 60 * 60 * Выборка.БонуснаяПрограмма.СрокСгоранияБонусов), Дата("39990101"));
			НоваяСтрока.Количество            = Выборка.КоличествоОстаток;
			НоваяСтрока.КоличествоКНачислению = 0;
			
			НовыйДокумент.БонусыКНачислению.Свернуть("Карточка,ДатаСписания", "Количество,КоличествоКНачислению");
			
			НоваяСтрокаСписания = НовыйДокумент.БонусыКСписанию.Добавить();
			НоваяСтрокаСписания.Карточка              = Выборка.БонуснаяКарта;
			НоваяСтрокаСписания.ДатаСписания          = Выборка.ДатаСписанияБонусов;
			НоваяСтрокаСписания.Количество            = 0;
			НоваяСтрокаСписания.КоличествоКНачислению = Выборка.КоличествоОстаток;
			
			// добавим строку в рассылку
			ИспользоватьSMSРассылку   = Выборка.БонуснаяПрограмма.ИспользоватьSMSРассылку И ЗначениеЗаполнено(ШаблонРассылкиSMS);
			ИспользоватьEMailРассылку = Выборка.БонуснаяПрограмма.ИспользоватьEMailРассылку И ЗначениеЗаполнено(ШаблонРассылкиEMail);
			
			Если ИспользоватьSMSРассылку ИЛИ ИспользоватьEMailРассылку Тогда
				Рассылка = ТаблицаРассылок.Добавить();
				Рассылка.Контрагент        = Выборка.Контрагент;
				Рассылка.БонуснаяПрограмма = Выборка.БонуснаяПрограмма;
				Рассылка.БонуснаяКарта     = Выборка.БонуснаяКарта;
				Рассылка.ДатаСписания      = НоваяСтрока.ДатаСписания;
				Рассылка.Количество        = Выборка.КоличествоОстаток;
				Рассылка.SMS               = ИспользоватьSMSРассылку;
				Рассылка.Email             = ИспользоватьEMailРассылку;
			КонецЕсли;
			
		КонецЦикла;
		
		Отказ = Ложь;
		Попытка
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Активация накопленных баллов'"), 
			УровеньЖурналаРегистрации.Информация, , ,
			НСтр("ru = 'Сформирован документ '") + Строка(НовыйДокумент.Ссылка) + ".");
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке(); 
			Отказ = Истина;
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Активация накопленных баллов'"), 
			УровеньЖурналаРегистрации.Ошибка, , ,
			НСтр("ru = 'Не сформирован регламентый документ для активация накопленных баллов.'"));
		КонецПопытки;
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Активация накопленных баллов'"), 
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Закончена регламентная активация накопленных баллов'"));
		
		Если Отказ Тогда
			ТаблицаРассылок.Очистить();
		КонецЕсли;
		
		Возврат НовыйДокумент.Ссылка;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ВыполнитьРассылкуУведомлений(ДокументОснование) Экспорт
	
	ИспользоватьПрочиеВзаимодействия = ПолучитьФункциональнуюОпцию("ИспользоватьПрочиеВзаимодействия");
	ИспользоватьПочтовыйКлиент       = ПолучитьФункциональнуюОпцию("ИспользоватьПочтовыйКлиент");
	
	// Проверим возможность выполнения рассылки
	Если НЕ ИспользоватьПрочиеВзаимодействия И НЕ ИспользоватьПочтовыйКлиент Тогда
		Возврат;
	КонецЕсли;
	
	// создаем документ
	ДокументыКОтправкеSMS   = Новый Массив;
	ДокументыКОтправкеПисем = Новый Массив;
	
	БонусныеПрограммыСервер.ЗаполнитьКонтактнуюИнфрмациюРассылок(ТаблицаРассылок);
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Рассылка оповещений о бонусных баллах'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация,
		, ,
		НСтр("ru = 'Формирование документов и рассылка'", ОбщегоНазначения.КодОсновногоЯзыка())
	);
	
	Если ТаблицаРассылок.Количество() > 0 Тогда
		
		Для Каждого Рассылка Из ТаблицаРассылок Цикл
			
			// SMS
			Если ИспользоватьПрочиеВзаимодействия
				И Рассылка.SMS
				И НЕ ПустаяСтрока(Рассылка.Телефон)
				И ЗначениеЗаполнено(ШаблонРассылкиSMS) 
				И Рассылка.Контрагент.СогласиеНаПолучениеSMS Тогда
				
				СтруктураРассылки = БонусныеПрограммыСервер.СтрокаРассылки();
				ЗаполнитьЗначенияСвойств(СтруктураРассылки, Рассылка);
				ДополнительныеПараметры = Новый Структура("СтрокаДанныхРассылки", СтруктураРассылки);
				
				СтруктураСообщения = ШаблоныСообщений.СформироватьСообщение(
				ШаблонРассылкиSMS,
				ЭтотОбъект,
				Новый УникальныйИдентификатор,
				ДополнительныеПараметры);

				ДокументыКОтправкеSMS.Добавить(БонусныеПрограммыСервер.СоздатьSMS(
					СтруктураСообщения,
					ДокументОснование, 
					Рассылка));
				
			КонецЕсли;
			
			// Email
			Если ИспользоватьПочтовыйКлиент
				И Рассылка.Email
				И НЕ ПустаяСтрока(Рассылка.Адрес)
				И ЗначениеЗаполнено(УчетнаяЗаписьЭлектроннойПочты)
				И ЗначениеЗаполнено(ШаблонРассылкиEMail) Тогда
				
				СтруктураРассылки = БонусныеПрограммыСервер.СтрокаРассылки();
				ЗаполнитьЗначенияСвойств(СтруктураРассылки, Рассылка);
				ДополнительныеПараметры = Новый Структура("СтрокаДанныхРассылки", СтруктураРассылки);
				
				СтруктураСообщения = ШаблоныСообщений.СформироватьСообщение(
					ШаблонРассылкиEMail,
					ЭтотОбъект,
					Новый УникальныйИдентификатор,
					ДополнительныеПараметры);

				ДокументыКОтправкеПисем.Добавить(БонусныеПрограммыСервер.СоздатьEmail(
					СтруктураСообщения,
					ДокументОснование, 
					УчетнаяЗаписьЭлектроннойПочты,
					Рассылка));
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДокументыКОтправкеSMS.Количество() > 0 Тогда
		
		БонусныеПрограммыСервер.ОтправитьSMS(ДокументыКОтправкеSMS);
		
	КонецЕсли;
	
	Если ДокументыКОтправкеПисем.Количество() > 0 И ЗначениеЗаполнено(УчетнаяЗаписьЭлектроннойПочты) Тогда
		
		БонусныеПрограммыСервер.ОтправитьEmail(ДокументыКОтправкеПисем, УчетнаяЗаписьЭлектроннойПочты);		
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Рассылка оповещений о бонусных баллах'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация,
		, ,
		НСтр("ru = 'Окончание формирования документов и рассылки'", ОбщегоНазначения.КодОсновногоЯзыка())
	);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецЕсли