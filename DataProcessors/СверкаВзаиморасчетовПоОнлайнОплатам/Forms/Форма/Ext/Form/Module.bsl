
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДопустимыеТипыИнтерфейсов.Очистить();
	ДопустимыеТипыИнтерфейсов.Добавить(Перечисления.ТипыИнтерфейсовДляВнешнихСистем.СБП_1С);
	ДопустимыеТипыИнтерфейсов.Добавить(Перечисления.ТипыИнтерфейсовДляВнешнихСистем.ЮКасса);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ИнтерфейсПриИзмененииНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Интерфейс) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТипИнтерфейса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Интерфейс, "ТипИнтерфейса");
	Если ДопустимыеТипыИнтерфейсов.НайтиПоЗначению(ТипИнтерфейса) = Неопределено Тогда
		
		ШаблонСообщения = НСтр("ru='Для интерфейса типа %1 построение отчета невозможно'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ТипИнтерфейса);
		ВывестиСообщение(ТекстСообщения, ЭтотОбъект, "Интерфейс");
		
		ТипИнтерфейса = Неопределено;
		Интерфейс = Неопределено;
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыВзаимодействия = Справочники.ИнтерфейсыДляВнешнихСистем.ПолучитьПараметрыВзаимодействия(Интерфейс);
	ПараметрыВзаимодействия.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтерфейсПриИзменении(Элемент)
	
	ИнтерфейсПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗапроситьОтчет(Команда)
	
	Если НЕ ОтчетМожетБытьПолучен() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыВзаимодействия.Вставить("ДатаНачала", Период.ДатаНачала);
	ПараметрыВзаимодействия.Вставить("ДатаОкончания", Период.ДатаОкончания);
	
	КомандаЗапроситьОтчетНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗапроситьОтчетНаСервере()
	
	РезультатВыполнения = ОнлайнОплата.ПостроитьОтчетПоОперациям(ПараметрыВзаимодействия);
	
	Для каждого ТекстСообщения Из РезультатВыполнения.ТекстыСообщений Цикл
		
		ВывестиСообщение(ТекстСообщения, ЭтотОбъект);
		
	КонецЦикла;
	
	Если РезультатВыполнения.Успешно Тогда
		
		ПостроитьОтчет();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОтчетМожетБытьПолучен()
	
	Если НЕ ЗначениеЗаполнено(Интерфейс) Тогда
		
		ТекстСообщения = НСтр("ru='Не выбран Интерфейс'");
		ВывестиСообщение(ТекстСообщения, ЭтотОбъект, "Интерфейс");
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Период.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
	
		ТекстСообщения = НСтр("ru='Не выбран период отчета'");
		ВывестиСообщение(ТекстСообщения, ЭтотОбъект, "Период");
		
		Возврат Ложь;
	
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ПостроитьОтчет()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаОтчета = ПолучитьИзВременногоХранилища(ПараметрыВзаимодействия.АдресВрХранилища);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОтчета.ТипОперации КАК ТипОперации,
	|	ТаблицаОтчета.ДатаОперации КАК ДатаОперации,
	|	ТаблицаОтчета.СуммаОплаты КАК СуммаОплаты,
	|	ТаблицаОтчета.СуммаВозврата КАК СуммаВозврата,
	|	ТаблицаОтчета.ИдентификаторОперации КАК ИдентификаторОперации,
	|	ТаблицаОтчета.ИдентификаторОперацииОплаты КАК ИдентификаторОперацииОплаты,
	|	ТаблицаОтчета.СуммаКомиссии КАК СуммаКомиссии
	|ПОМЕСТИТЬ ВТ_ТаблицаОтчета
	|ИЗ
	|	&ТаблицаОтчета КАК ТаблицаОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПлатежныйШлюз.ЗаявкаНаРасходДС = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходДС.ПустаяСсылка)
	|			ТОГДА &Оплата
	|		ИНАЧЕ &Возврат
	|	КОНЕЦ КАК ТипОперации,
	|	ПлатежныйШлюз.ДатаОперации КАК ДатаОперации,
	|	ВЫБОР
	|		КОГДА ПлатежныйШлюз.ЗаявкаНаРасходДС = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходДС.ПустаяСсылка)
	|			ТОГДА ПлатежныйШлюз.СуммаОперации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОплаты,
	|	ВЫБОР
	|		КОГДА ПлатежныйШлюз.ЗаявкаНаРасходДС = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходДС.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ ПлатежныйШлюз.СуммаОперации
	|	КОНЕЦ КАК СуммаВозврата,
	|	ПлатежныйШлюз.ИдентификаторОперации КАК ИдентификаторОперации,
	|	ПлатежныйШлюз.ИдентификаторОперацииОплаты КАК ИдентификаторОперацииОплаты
	|ПОМЕСТИТЬ ВТ_ДанныеРегистра
	|ИЗ
	|	РегистрСведений.ПлатежныйШлюз КАК ПлатежныйШлюз
	|ГДЕ
	|	ПлатежныйШлюз.Интерфейс = &Интерфейс
	|	И ПлатежныйШлюз.ДатаРегистрации МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПлатежныйШлюз.ЧекНаОплату <> ЗНАЧЕНИЕ(Документ.ЧекНаОплату.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОтчета.ИдентификаторОперацииОплаты КАК ИдентификаторОперацииОплаты,
	|	ВТ_ТаблицаОтчета.ИдентификаторОперации КАК ИдентификаторОперации,
	|	ВТ_ТаблицаОтчета.ТипОперации КАК ТипОперации,
	|	ВТ_ТаблицаОтчета.СуммаКомиссии КАК СуммаКомиссии,
	|	ВТ_ТаблицаОтчета.ДатаОперации КАК ДатаОперации,
	|	ВТ_ТаблицаОтчета.СуммаОплаты КАК СуммаОплатыБанк,
	|	0 КАК СуммаОплатыРегистр,
	|	ВТ_ТаблицаОтчета.СуммаВозврата КАК СуммаВозвратаБанк,
	|	0 КАК СуммаВозвратаРегистр
	|ПОМЕСТИТЬ ВТ_ВсеДанные
	|ИЗ
	|	ВТ_ТаблицаОтчета КАК ВТ_ТаблицаОтчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ДанныеРегистра.ИдентификаторОперацииОплаты,
	|	ВТ_ДанныеРегистра.ИдентификаторОперации,
	|	ВТ_ДанныеРегистра.ТипОперации,
	|	0,
	|	ВТ_ДанныеРегистра.ДатаОперации,
	|	0,
	|	ВТ_ДанныеРегистра.СуммаОплаты,
	|	0,
	|	ВТ_ДанныеРегистра.СуммаВозврата
	|ИЗ
	|	ВТ_ДанныеРегистра КАК ВТ_ДанныеРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ДанныеРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеДанные.ИдентификаторОперацииОплаты КАК ИдентификаторОперацииОплаты,
	|	ВТ_ВсеДанные.ИдентификаторОперации КАК ИдентификаторОперации,
	|	ВТ_ВсеДанные.ТипОперации КАК ТипОперации,
	|	СУММА(ВТ_ВсеДанные.СуммаКомиссии) КАК СуммаКомиссии,
	|	МАКСИМУМ(ВТ_ВсеДанные.ДатаОперации) КАК ДатаОперации,
	|	СУММА(ВТ_ВсеДанные.СуммаОплатыБанк) КАК СуммаОплатыБанк,
	|	СУММА(ВТ_ВсеДанные.СуммаОплатыРегистр) КАК СуммаОплатыРегистр,
	|	СУММА(ВТ_ВсеДанные.СуммаВозвратаБанк) КАК СуммаВозвратаБанк,
	|	СУММА(ВТ_ВсеДанные.СуммаВозвратаРегистр) КАК СуммаВозвратаРегистр
	|ПОМЕСТИТЬ ВТ_СгруппированныеДанные
	|ИЗ
	|	ВТ_ВсеДанные КАК ВТ_ВсеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВсеДанные.ИдентификаторОперацииОплаты,
	|	ВТ_ВсеДанные.ИдентификаторОперации,
	|	ВТ_ВсеДанные.ТипОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВсеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлатежныйШлюз.СчетНаОплату КАК СчетНаОплату,
	|	ПлатежныйШлюз.ЗаявкаНаРасходДС КАК ЗаявкаНаРасходДС,
	|	ПлатежныйШлюз.ИдентификаторОперации КАК ИдентификаторОперации
	|ПОМЕСТИТЬ ВТ_Документы
	|ИЗ
	|	РегистрСведений.ПлатежныйШлюз КАК ПлатежныйШлюз
	|ГДЕ
	|	ПлатежныйШлюз.ИдентификаторОперации В
	|			(ВЫБРАТЬ
	|				ВТ_СгруппированныеДанные.ИдентификаторОперации КАК ИдентификаторОперации
	|			ИЗ
	|				ВТ_СгруппированныеДанные КАК ВТ_СгруппированныеДанные)
	|	И ПлатежныйШлюз.Интерфейс = &Интерфейс
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_Документы.СчетНаОплату, НЕОПРЕДЕЛЕНО) КАК СчетНаОплату,
	|	ЕСТЬNULL(ВТ_Документы.ЗаявкаНаРасходДС, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходДС.ПустаяСсылка)) КАК ЗаявкаНаРасходДС,
	|	ВТ_СгруппированныеДанные.ИдентификаторОперацииОплаты КАК ИдентификаторОперацииОплаты,
	|	ВТ_СгруппированныеДанные.ИдентификаторОперации КАК ИдентификаторОперации,
	|	ВТ_СгруппированныеДанные.ТипОперации КАК ТипОперации,
	|	ВТ_СгруппированныеДанные.СуммаКомиссии КАК СуммаКомиссии,
	|	ВТ_СгруппированныеДанные.ДатаОперации КАК ДатаОперации,
	|	ВТ_СгруппированныеДанные.СуммаОплатыБанк КАК СуммаОплатыБанк,
	|	ВТ_СгруппированныеДанные.СуммаОплатыРегистр КАК СуммаОплатыРегистр,
	|	ВТ_СгруппированныеДанные.СуммаВозвратаБанк КАК СуммаВозвратаБанк,
	|	ВТ_СгруппированныеДанные.СуммаВозвратаРегистр КАК СуммаВозвратаРегистр,
	|	ВЫБОР
	|		КОГДА ВТ_СгруппированныеДанные.СуммаОплатыБанк = ВТ_СгруппированныеДанные.СуммаОплатыРегистр
	|				И ВТ_СгруппированныеДанные.СуммаВозвратаБанк = ВТ_СгруппированныеДанные.СуммаВозвратаРегистр
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьРасхождения
	|ИЗ
	|	ВТ_СгруппированныеДанные КАК ВТ_СгруппированныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Документы КАК ВТ_Документы
	|		ПО ВТ_СгруппированныеДанные.ИдентификаторОперации = ВТ_Документы.ИдентификаторОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОперации";
	
	Запрос.УстановитьПараметр("ТаблицаОтчета", ТаблицаОтчета);
	Запрос.УстановитьПараметр("Оплата", "Оплата");
	Запрос.УстановитьПараметр("Возврат", "Возврат");
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Интерфейс", Интерфейс);
	
	Объект.СверкаОпераций.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти