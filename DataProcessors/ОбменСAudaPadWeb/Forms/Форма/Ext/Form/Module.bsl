#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(
		Объект,
		Параметры,
		"ЗаказНаряд,СводныйРемонтныйЗаказ,ОткрытиеИзФормыДокумента,ВладелецФормаДокументаЗаказНаряд,ЗаявкаНаРемонт"
	);
	
	Если Объект.СводныйРемонтныйЗаказ.Пустая() И НЕ Объект.ЗаказНаряд.Пустая() Тогда
		
		Объект.СводныйРемонтныйЗаказ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ЗаказНаряд, "СводныйРемонтныйЗаказ");
		
	КонецЕсли;
	
	Объект.АдресСервера = ПраваИНастройкиПользователя.Значение("СерверAudaPadWeb");
	СохраненныеНастройки = ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить("ОбменСAudaPadWeb", "ОбщиеНастройки");
	
	Если СохраненныеНастройки = Неопределено Тогда
		
		СохраненныеНастройки = НастройкиПоУмолчанию();
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, СохраненныеНастройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Открываем форму для заполнения данных для регистрации
//
&НаКлиенте
Процедура Регистрация(Элемент)
	
	ОткрытьФорму("Обработка.ОбменСAudaPadWeb.Форма.ЗаявкаНаРегистрацию",,
		ЭтотОбъект,
		КлючУникальности,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаСайт(Элемент)
	
	ЗапуститьПриложение(СтрШаблон("http://%1/breclient/ui?process=NO_PROCESS&step=WorkListGrid", Объект.АдресСервера));
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Элемент)
	
	ПараметрыОткрытия  = Новый Структура("Объект", Объект);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузкаДелаЗакрытие", ЭтотОбъект, Новый Структура);
	
	ОткрытьФорму("Обработка.ОбменСAudaPadWeb.Форма.ЗагрузкаДела", ПараметрыОткрытия,
		ЭтотОбъект, КлючУникальности, Окно,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Элемент)
	
	ПараметрыОткрытия = Новый Структура("Объект", Объект);
	ОткрытьФорму("Обработка.ОбменСAudaPadWeb.Форма.ОтправкаДанныхНаСервер",
		ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДело(Элемент)
	
	// проверим заполнен ли ЗН
	Если Объект.ЗаказНаряд.Пустая()
		И Объект.ЗаявкаНаРемонт.Пустая() Тогда
		
		ОбработчикОповещения = Новый ОписаниеОповещения("ВыборТипаДокументаЗавершение", ЭтотОбъект, Новый Структура);
		
		СписокДокументов = Новый СписокЗначений;
		СписокДокументов.Добавить("ЗаказНаряд", НСтр("ru = 'Заказ-наряд'"));
		СписокДокументов.Добавить("ЗаявкаНаРемонт", НСтр("ru = 'Заявка на ремонт'"));
		
		СписокДокументов.ПоказатьВыборЭлемента(
			ОбработчикОповещения,
			НСтр("ru = 'Выберете тип документа'"));
			
		Возврат;
	КонецЕсли;
	
	// создание дела
	СоздатьИОткрытьДело();
	
КонецПроцедуры

// Открываем форму настроек обмена
//
&НаКлиенте
Процедура Настройки(Элемент)
	
	ДополнительныеПараметры = Новый Структура("Объект", Объект);
	ОписаниеОповещения = Новый ОписаниеОповещения("НастройкиВыполнено", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Обработка.ОбменСAudaPadWeb.Форма.Настройки",
		ДополнительныеПараметры,
		ЭтотОбъект,
		КлючУникальности,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция НастройкиПоУмолчанию()
	Значения = Новый Структура;
	
	// подключение
	Значения.Вставить("ЛогинAutoPadWeb", "");
	Значения.Вставить("ПарольAutoPadWeb", "");
	Значения.Вставить("ИспользоватьПрокси", Ложь);
	Значения.Вставить("ЛогинПрокси", "");
	Значения.Вставить("ПарольПрокси", "");
	
	// значения по умолчанию
	Значения.Вставить("ВидРемонтаПоУмолчанию", ПраваИНастройкиПользователя.Значение("ВидРемонтаПоУмолчанию"));
	Значения.Вставить("ЦехПоУмолчанию", Справочники.Цеха.ОсновнойЦех);
	Значения.Вставить("ТипЦенПоУмолчанию", ПраваИНастройкиПользователя.Значение("ОсновнойТипЦенПродажи"));
	Значения.Вставить("ТипЦенАвтоработПоУмолчанию", ПраваИНастройкиПользователя.Значение("ОсновнойТипЦенРабот"));
	
	// группы для создания новых элементов
	Значения.Вставить("ГруппаНоменклатуры");
	Значения.Вставить("ГруппаАвторабот");
	Значения.Вставить("ГруппаКонтрагентов");
	Значения.Вставить("ГруппаАвтомобили");
	Значения.Вставить("ГруппаМодели");
	
	// поиск
	Значения.Вставить("ПоискПоАртикулу", Ложь);
	Значения.Вставить("ПоискПоНаименованиеПолное", Ложь);
	Значения.Вставить("ИспользоватьКонтрагентовТолькоИзГруппы", Ложь);
	
	// загрузка
	Значения.Вставить("СинхронизироватьНоменклатуруПоКаталожномуНомеру", Ложь);
	Значения.Вставить("НеДобавлятьНоменклатуруПриСозданииАвторабот", Ложь);
	Значения.Вставить("НоменклатураДляАвтоработПоУмолчанию", Справочники.Номенклатура.Авторабота);
	Значения.Вставить("РежимЗагрузкиАвторабот", Перечисления.РежимыЗагрузкиТаблиц.Загружать);
	Значения.Вставить("РежимЗагрузкиДеталей", Перечисления.РежимыЗагрузкиТаблиц.Загружать);
	Значения.Вставить("ОбновлятьШапкуДокумента", Ложь);
	Значения.Вставить("СтатусЗадания", "ALL");
	
	// выгрузка
	Значения.Вставить("КодировкаФайлаПриложения", "Системная");
	
	Возврат Значения;
КонецФункции

&НаСервере
Функция ДанныеКСохранению(ОбновлятьШапкуДокумента = Истина)
	Значения = Новый Структура;
	// подключение
	Значения.Вставить("ЛогинAutoPadWeb");
	Значения.Вставить("ПарольAutoPadWeb");
	Значения.Вставить("ИспользоватьПрокси");
	Значения.Вставить("ЛогинПрокси");
	Значения.Вставить("ПарольПрокси");
	
	// значения по умолчанию
	Значения.Вставить("ВидРемонтаПоУмолчанию");
	Значения.Вставить("ЦехПоУмолчанию");
	Значения.Вставить("ТипЦенПоУмолчанию");
	Значения.Вставить("ТипЦенАвтоработПоУмолчанию");
	
	// группы для создания новых элементов
	Значения.Вставить("ГруппаНоменклатуры");
	Значения.Вставить("ГруппаАвторабот");
	Значения.Вставить("ГруппаКонтрагентов");
	Значения.Вставить("ГруппаАвтомобили");
	Значения.Вставить("ГруппаМодели");
	
	// поиск
	Значения.Вставить("ПоискПоАртикулу");
	Значения.Вставить("ПоискПоНаименованиеПолное");
	Значения.Вставить("ИспользоватьКонтрагентовТолькоИзГруппы");
	
	// загрузка
	Значения.Вставить("СинхронизироватьНоменклатуруПоКаталожномуНомеру");
	Значения.Вставить("НеДобавлятьНоменклатуруПриСозданииАвторабот");
	Значения.Вставить("НоменклатураДляАвтоработПоУмолчанию");
	Значения.Вставить("РежимЗагрузкиАвторабот");
	Значения.Вставить("РежимЗагрузкиДеталей");
	Значения.Вставить("ОбновлятьШапкуДокумента");
	Значения.Вставить("СтатусЗадания");
	
	// выгрузка
	Значения.Вставить("КодировкаФайлаПриложения");
	
	Для Каждого Значение Из Значения Цикл
		Значения[Значение.Ключ] = Объект[Значение.Ключ];
	КонецЦикла;
	
	Возврат Значения;
КонецФункции

&НаСервере
Процедура СохранитьНастройки()
	
	ОбщегоНазначения.ХранилищеНастроекДанныхФормСохранить("ОбменСAudaPadWeb", "ОбщиеНастройки", ДанныеКСохранению());
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИОткрытьДело()
	
	ДокументДела = ?(ЗначениеЗаполнено(Объект.ЗаявкаНаРемонт), Объект.ЗаявкаНаРемонт, Объект.ЗаказНаряд);
	
	Если ДокументДела.Пустая() Тогда
		
		ВызватьИсключение НСтр("ru = 'Нельзя создать дело по пустому документу.'");
		
	КонецЕсли;
	
	Ответ = ОбменСAudaPadWebВызовСервера.СоздатьЗадание(
		ДокументДела,
		ОбменСAudaPadWebКлиентСервер.ПараметрыПодключенияОбъекта(Объект),
		Объект.ИдентификаторДела,
		Объект.ИдентификаторЗадания);
	
	Если Ответ.Свойство("Успех") И НЕ Ответ.Успех Тогда
		ПоказатьПредупреждение(, Ответ.Сообщение,, "Создание дела");
		Возврат;
	КонецЕсли;
	
	ПутьКДелу = СтрШаблон("http://%1/breclient/ui?taskId=%2",
		Объект.АдресСервера,
		ВРег(Строка(Объект.ИдентификаторЗадания)));

	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьЗаданиеЗаверщение", ЭтотОбъект, ПутьКДелу);
	
	ПоказатьВопрос(
		ОписаниеОповещения,
		НСтр("ru = 'Задание успешно создано. Открыть в браузере?'"),
		РежимДиалогаВопрос.ДаНет,
		15,
		КодВозвратаДиалога.Нет,,
		КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СводныйРемонтныйЗаказЗаказНаряда(ЗаказНаряд)
	
	Возврат ЗаказНаряд.СводныйРемонтныйЗаказ;
	
КонецФункции

#Область ОбработчикиОповещений

&НаКлиенте
Процедура НастройкиВыполнено(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Объект, Результат);
		СохранитьНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборТипаДокументаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещение = Новый ОписаниеОповещения("ВыборДокументаЗавершение", ЭтотОбъект, Новый Структура);
	
	ПараметрыОткрытия = Новый Структура("РежимВыбора,СкрытьВыполненные", Истина, Истина);
	
	ОткрытьФорму(
		"Документ." + Результат.Значение + ".ФормаВыбора",
		ПараметрыОткрытия,
		ЭтотОбъект,
		КлючУникальности,,,
		ОписаниеОповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // ВыборТипаДокументаЗавершение()

&НаКлиенте
Процедура ВыборДокументаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("ДокументСсылка.ЗаявкаНаРемонт") Тогда
		Объект.ЗаявкаНаРемонт = Результат;
		Объект.ЗаказНаряд = Неопределено;
		Объект.СводныйРемонтныйЗаказ = Неопределено;
	Иначе
		Объект.ЗаявкаНаРемонт = Неопределено;
		Объект.ЗаказНаряд = Результат;
		Объект.СводныйРемонтныйЗаказ = СводныйРемонтныйЗаказЗаказНаряда(Объект.ЗаказНаряд);
	КонецЕсли;
	
	СоздатьИОткрытьДело();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗаданиеЗаверщение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗапуститьПриложение(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаДелаЗакрытие(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьЗначенияСвойств(Объект, ДополнительныеПараметры.Объект,, "ОбновлятьШапкуДокумента");
	СохранитьНастройки();
	
	Если Объект.ОткрытиеИзФормыДокумента И Открыта() Тогда
		
		ПодключитьОбработчикОжидания("ЗакрытьФорму", 0.3, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

