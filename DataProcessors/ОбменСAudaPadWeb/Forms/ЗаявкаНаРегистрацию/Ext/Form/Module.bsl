
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// обновим ограничение типов у выбора контрагента\организации
	Если НЕ ПустаяСтрока(ТипОрганизацииКонтрагента) Тогда
		ТипОрганизацииКонтрагентаПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки = Неопределено Тогда
		Настройки = ЗначенияПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипОрганизацииКонтрагентаПриИзменении(Элемент)
	
	Элементы.ОрганизацияКонтрагент.ОграничениеТипа =
		Новый ОписаниеТипов(СтрШаблон("СправочникСсылка.%1", ТипОрганизацииКонтрагента));
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияКонтрагентПриИзмененииНаСервере()
	
	ИНН = ОрганизацияКонтрагент.ИНН;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияКонтрагентПриИзменении(Элемент)
	
	ОрганизацияКонтрагентПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура БанкПриИзмененииНаСервере()
	
	БИК   = Банк.Код;
	Город = Банк.Город;
	
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	БанкПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтактноеЛицоПриИзмененииНаСервере()
	
	УправлениеКонтактнойИнформациейАльфаАвто.ТелефонДляМаски(КонтактноеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактноеЛицоПриИзменении(Элемент)
	КонтактноеЛицоПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РасчетныйСчетПриИзмененииНаСервере()
	
	Банк = РасчетныйСчет.Банк;
	БанкПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетныйСчетПриИзменении(Элемент)
	РасчетныйСчетПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	ВыбратьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Ошибки = ОтправитьНаСервере();
	
	Если НЕ ПустаяСтрока(Ошибки) Тогда
		ПоказатьПредупреждение(, Ошибки,, НСтр("ru = 'Ошибка отправки письма'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьОшибку(ТекстОшибки, Ошибки = "")
	
	Ошибки = Ошибки + СтрШаблон("%1-%2", ?(ПустаяСтрока(Ошибки), "", Символы.ПС), ТекстОшибки);
	
КонецПроцедуры

&НаСервере
Функция ЗначенияПоУмолчанию()
	
	ЗначенияРеквизитов = Новый Структура;
	
	ЗначенияРеквизитов.Вставить("КоличествоБазДанных", 1);
	ЗначенияРеквизитов.Вставить("Банк", Неопределено);
	ЗначенияРеквизитов.Вставить("БИК", "");
	ЗначенияРеквизитов.Вставить("Город", "");
	ЗначенияРеквизитов.Вставить("ДатаОснования", Дата(1, 1, 1));
	ЗначенияРеквизитов.Вставить("Должность", Неопределено);
	ЗначенияРеквизитов.Вставить("ИдентификацияТранспортногоСредстваПоНомеруVIN", Ложь);
	ЗначенияРеквизитов.Вставить("ИНН", "");
	ЗначенияРеквизитов.Вставить("КонтактноеЛицо", Неопределено);
	ЗначенияРеквизитов.Вставить("КоррСчет", Неопределено);
	ЗначенияРеквизитов.Вставить("Направление", "Страховая компания");
	ЗначенияРеквизитов.Вставить("НомерОснования", "");
	ЗначенияРеквизитов.Вставить("ОГРН", "");
	ЗначенияРеквизитов.Вставить("ОрганизацияКонтрагент", Неопределено);
	ЗначенияРеквизитов.Вставить("Почта", "");
	ЗначенияРеквизитов.Вставить("ПравоваяФорма", "Индивидуальный предприниматель");
	ЗначенияРеквизитов.Вставить("ПрограммныйПродукт", "AudaPad Web");
	ЗначенияРеквизитов.Вставить("РасчетныйСчет", Неопределено);
	ЗначенияРеквизитов.Вставить("СозданиеПечатнойФормы", Ложь);
	ЗначенияРеквизитов.Вставить("СпособОбмена", "Электронно с ЭЦП (диалог)");
	ЗначенияРеквизитов.Вставить("Тариф", "Ежемесячно по факту");
	ЗначенияРеквизитов.Вставить("Телефон", "");
	ЗначенияРеквизитов.Вставить("ТипОрганизацииКонтрагента", "Организации");
	ЗначенияРеквизитов.Вставить("ФактическийАдрес", "");
	ЗначенияРеквизитов.Вставить("ЮридическийАдрес", "");
	
	Возврат ЗначенияРеквизитов;
	
КонецФункции

&НаСервере
Функция ПроверитьПравильностьЗаполнения(ТекстСообщения)
	
	ВсеПравильно = Истина; 
	Ошибки = "";
	
	ЭтоЮрЛицо = ТипОрганизацииКонтрагента = "Организации"
		ИЛИ ОрганизацияКонтрагент.ФормаСобственности = Перечисления.ФормыСобственности.ЮридическоеЛицо;
	
	Если НЕ ЗначениеЗаполнено(ОрганизацияКонтрагент) Тогда
		ДобавитьОшибку(НСтр("ru = 'Не указан контрагент или организация заказывающая услугу.'"), Ошибки);
		ВсеПравильно = Ложь;
	КонецЕсли;
	
	Если КоличествоБазДанных <= 0 Тогда
		ДобавитьОшибку(НСтр("ru = 'Не верно указано количество баз данных.'"), Ошибки);
		ВсеПравильно = Ложь;
	КонецЕсли;
	
	ОшибкиИНН = "";
	Если ПустаяСтрока(ИНН) Тогда
		ДобавитьОшибку(НСтр("ru = 'Не указан ИНН клиента.'"), Ошибки);
		ВсеПравильно = Ложь;
	ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, ЭтоЮрЛицо, ОшибкиИНН) Тогда
		ДобавитьОшибку(ОшибкиИНН, Ошибки);
		ВсеПравильно = Ложь;
	КонецЕсли;
	
	Если РасчетныйСчет.Пустая() Тогда
		ДобавитьОшибку(НСтр("ru = 'Не указан расчетный счет клиента.'"), Ошибки);
		ВсеПравильно = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ЮридическийАдрес) Тогда
		ДобавитьОшибку(НСтр("ru = 'Не указан юридический адрес.'"), Ошибки);
		ВсеПравильно = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ФактическийАдрес) Тогда
		ДобавитьОшибку(НСтр("ru = 'Не указан фактический адрес.'"), Ошибки);
		ВсеПравильно = Ложь;
	КонецЕсли;
	
	Если КонтактноеЛицо.Пустая() Тогда
		ДобавитьОшибку(НСтр("ru = 'Не указано контактное лицо.'"), Ошибки);
		ВсеПравильно = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Телефон) Тогда
		ДобавитьОшибку(НСтр("ru = 'Не указан контактный телефон.'"), Ошибки);
		ВсеПравильно = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Почта) Тогда
		ДобавитьОшибку(НСтр("ru = 'Не указан адрес электронной почты.'"), Ошибки);
		ВсеПравильно = Ложь;
	КонецЕсли;
	
	Если НЕ ВсеПравильно Тогда
		ТекстСообщения = НСтр("ru = 'Обнаружены ошибки заполнения:'") + Символы.ПС + Ошибки;
	КонецЕсли;
	
	Возврат ВсеПравильно;
	
КонецФункции

&НаСервере
Функция ОтправитьНаСервере()
	Ошибки = "";
	
	Если НЕ ПроверитьПравильностьЗаполнения(Ошибки) Тогда
		Возврат Ошибки;
	КонецЕсли;
	
	
	
КонецФункции

&НаСервере
Функция СохранитьНаСервере(ТабличныйДокумент = Неопределено)
	Ошибки = "";
	
	Если НЕ ПроверитьПравильностьЗаполнения(Ошибки) Тогда
		Возврат Ошибки;
	КонецЕсли;
	
	Макет   = Обработки.ОбменСAudaPadWeb.ПолучитьМакет("ЗаявкаНаРегистрацию");
	Область = Макет.ПолучитьОбласть("Горизонталь|Вертикаль");
	
	Область.Параметры.Заполнить(ЭтотОбъект);
	
	Область.Параметры.ИмяКонфигурации    = Метаданные.Имя + " (" + Метаданные.Синоним + ")";
	Область.Параметры.ВерсияКонфигурации = Метаданные.Версия;
	Область.Параметры.Действующего = ?(ТипОрганизацииКонтрагента = "Контрагенты", "Действующего", "Действующей");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Вывести(Область);
	Возврат Ошибки;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьФайл()
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьФайлЗавершениеКонтроляРасширенияРаботыСФайлами", ЭтотОбъект);
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(Оповещение,, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлЗавершениеКонтроляРасширенияРаботыСФайлами(РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	Если РезультатОповещения <> Истина Тогда // Отказ от установки расширения
		ПоказатьПредупреждение(, НСтр("ru = 'Расширение для работы с файлами не подключено.'"));
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок      = НСтр ("ru = 'Сохранение PDF-файла'");
	Диалог.Расширение     = "pdf";
	Диалог.ПолноеИмяФайла = "Заявка Auda Pad Web";
	Диалог.Фильтр         = "PDF-файлы (*.pdf)|*.pdf";
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьФайлЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог));
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если НЕ (ВыбранныеФайлы <> Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент = Неопределено;
	Ошибки = СохранитьНаСервере(ТабличныйДокумент);
	
	Если НЕ ПустаяСтрока(Ошибки) Тогда
		ПоказатьПредупреждение(, Ошибки,, НСтр("ru = 'Ошибка сохранение файла'"));
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент.Записать(Диалог.ПолноеИмяФайла, ТипФайлаТабличногоДокумента.PDF);
	
КонецПроцедуры

#КонецОбласти