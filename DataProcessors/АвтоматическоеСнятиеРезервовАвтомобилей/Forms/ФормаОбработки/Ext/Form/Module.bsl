
#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗащищенныеФункцииАльфаАвтоСервер.ПодсистемаДоступна("ЗащитаАвтосалон",Ложь) Тогда
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СхемаКомпановкиДанных = Обработки.АвтоматическоеСнятиеРезервовАвтомобилей.ПолучитьМакет("ЗаказыСоСроками");
	АдресСхемыКомпановкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпановкиДанных, УникальныйИдентификатор);
	Объект.КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпановкиДанных));
	Объект.КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(СхемаКомпановкиДанных.НастройкиПоУмолчанию);
	
	ЗаполнитьДеревоЗаказов();
	
КонецПроцедуры // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте при открытии формы, до показа окна пользователю.
//
// Параметры:
//  Отказ - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьРезервыАвтомобилей();
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия кнопки "Отобразить бессрочные резервы".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура ОтобразитьБессрочныеРезервы(Команда)
	
	ОтобразитьБессрочныеРезервы = НЕ ОтобразитьБессрочныеРезервы;
	Элементы.ОтобразитьБессрочныеРезервы.Пометка = ОтобразитьБессрочныеРезервы;
	
	ЗаполнитьДеревоЗаказов();
	
	РазвернутьРезервыАвтомобилей();
	
КонецПроцедуры // ОтобразитьБессрочныеРезервы()

// Обработчик события нажатия кнопки из подменю "Отметить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КомандаОтметить(Команда)
	
	ТекущаяДатаСеанса = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	Для Каждого ТекущийТипЗаказа Из РезервыАвтомобилей.ПолучитьЭлементы() Цикл
		ИмеютсяОтмеченные = Ложь;
		Для Каждого ТекущаяСтрока Из ТекущийТипЗаказа.ПолучитьЭлементы() Цикл
			Если Команда.Имя = "КомандаПометитьВсе" Тогда
				ТекущаяСтрока.Использование = Истина;
			ИначеЕсли Команда.Имя = "КомандаОтметитьНеоплаченные" Тогда
				ТекущаяСтрока.Использование = (ТекущаяСтрока.Оплата = 0
					И ЗначениеЗаполнено(ТекущаяСтрока.СрокСнятияРезерва)
					И ТекущаяСтрока.СрокСнятияРезерва < ТекущаяДатаСеанса);
			ИначеЕсли Команда.Имя = "КомандаОтменитьВсе" Тогда
				ТекущаяСтрока.Использование = Ложь;
			КонецЕсли;
			ИмеютсяОтмеченные = ИмеютсяОтмеченные ИЛИ ТекущаяСтрока.Использование;
		КонецЦикла;
		ТекущийТипЗаказа.Использование = ИмеютсяОтмеченные;
	КонецЦикла;
	
КонецПроцедуры // КомандаОтметить()

// Обработчик события нажатия кнопки "Обновить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КомандаОбновитьСписокЗаказов(Команда)
	
	ЗаполнитьДеревоЗаказов();
	
	РазвернутьРезервыАвтомобилей();
	
КонецПроцедуры // КомандаОбновитьСписокЗаказов()

// Обработчик события нажатия кнопки "Создавать напоминания".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура СоздаватьНапоминания(Команда)
	
	Объект.СоздаватьНапоминание = НЕ Объект.СоздаватьНапоминание;
	Элементы.СоздаватьНапоминания.Пометка = Объект.СоздаватьНапоминание;
	
КонецПроцедуры // СоздаватьНапоминания()

&НаСервере
Функция КомандаВыполнитьСнятиеРезервовНаСервере()
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница <> Элементы.СтраницаЗаказы Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Результат = Обработки.АвтоматическоеСнятиеРезервовАвтомобилей.ВыполнитьСнятиеРезервовАвтомобилей(
		РеквизитФормыВЗначение("РезервыАвтомобилей", Тип("ДеревоЗначений")),
		Объект.СоздаватьНапоминание);
	
	Если Результат.Ошибка Тогда
		
		Возврат Результат.Данные;
		
	КонецЕсли;
	
	ЗаполнитьДеревоЗаказов();
	ПоказатьСформированныеДокументы(Результат.Данные);
	
КонецФункции

&НаКлиенте
Процедура КомандаВыполнитьСнятиеРезервов(Команда)
	
	Ошибка = КомандаВыполнитьСнятиеРезервовНаСервере();
	
	Если ЗначениеЗаполнено(Ошибка) Тогда
		
		ПоказатьПредупреждение(, Ошибка);
		Возврат;
		
	КонецЕсли;
	
	РазвернутьРезервыАвтомобилей();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтбор(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ОтборНастроекКомпоновкиДанных", Объект.КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор);
	
	ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОтбора", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.АвтоматическоеСнятиеРезервовАвтомобилей.Форма.НастройкиОтбора", ПараметрыФормы, ЭтотОбъект,,,, ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#Область ПроцедурыОбработчикиЭлементовУправленияФормы

&НаСервере
Процедура ГруппаСтраницыПриСменеСтраницыНаСервере()
	
	Элементы.ОсновныеДействия.Доступность = (Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗаказы);
	
КонецПроцедуры // ГруппаСтраницыПриСменеСтраницыНаСервере()

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ГруппаСтраницыПриСменеСтраницыНаСервере();
	
КонецПроцедуры // ГруппаСтраницыПриСменеСтраницы()

&НаКлиенте
Процедура РезервыАвтомобилейИспользованиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РезервыАвтомобилей.ТекущиеДанные;
	
	Если ТекущиеДанные.ЭтоГруппа Тогда
		НайденныеСтроки = РезервыАвтомобилей.НайтиПоИдентификатору(Элементы.РезервыАвтомобилей.ТекущаяСтрока);
		Для Каждого ТекущаяСтрока Из НайденныеСтроки.ПолучитьЭлементы() Цикл
			ТекущаяСтрока.Использование = ТекущиеДанные.Использование;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура для отображения дерева номенклатур документов оснований после формирования.
//
&НаКлиенте
Процедура РазвернутьРезервыАвтомобилей()
	
	// Развернем дерево номенклатуры
	Для Каждого ТекущаяСтрока Из РезервыАвтомобилей.ПолучитьЭлементы() Цикл
		Элементы.РезервыАвтомобилей.Развернуть(ТекущаяСтрока.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
Конецпроцедуры // РазвернутьДеревоНоменклатуры()

// Заполняет табличную часть на форме и кэш заказов по заказам
&НаСервере
Процедура ЗаполнитьДеревоЗаказов()
	
	РезервыАвтомобилей.ПолучитьЭлементы().Очистить();
	
	ДеревоРезультат = Обработки.АвтоматическоеСнятиеРезервовАвтомобилей.ПолучитьДеревоЗаказовАвтомобилей(Объект, Ложь);
	
	Для Каждого СтрокаРодитель Из ДеревоРезультат.Строки Цикл
		СтрокаПервогоУровня = РезервыАвтомобилей.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПервогоУровня, СтрокаРодитель);
		СтрокаПервогоУровня.ЭтоГруппа = Истина;
		
		Для Каждого Строка Из СтрокаРодитель.Строки Цикл
			Если НЕ ОтобразитьБессрочныеРезервы И НЕ ЗначениеЗаполнено(Строка.СрокСнятияРезерва) Тогда Продолжить; КонецЕсли;
			
			СтрокаВторогоУровня = СтрокаПервогоУровня.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВторогоУровня, Строка);
			СтрокаВторогоУровня.ЭтоГруппа     = Ложь;
			СтрокаВторогоУровня.Использование = (Строка.Оплата = 0.);
		КонецЦикла;
		
		Если СтрокаПервогоУровня.ПолучитьЭлементы().Количество() = 0 Тогда
			РезервыАвтомобилей.ПолучитьЭлементы().Удалить(СтрокаПервогоУровня);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Переход на страницу сформированных документов
&НаСервере
Процедура ПоказатьСформированныеДокументы(КэшСнятиеРезервов)
	
	СформированныеДокументы.Очистить();
	Для Каждого ТекСтрока Из КэшСнятиеРезервов Цикл
		НоваяСтрока = СформированныеДокументы.Добавить();
		НоваяСтрока.Документ   = ТекСтрока.Ссылка;
		НоваяСтрока.Автомобиль = ТекСтрока.Автомобиль;
	КонецЦикла;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРезультат;
	ГруппаСтраницыПриСменеСтраницыНаСервере();
	
КонецПроцедуры // ПоказатьСформированныеДокументы()

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОтбора(РезультатОповещения, ДополнительныеПарамтеры = Неопределено) Экспорт
	
	Если РезультатОповещения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы.Очистить();
	
	Для Каждого ТекущаяСтрока Из РезультатОповещения.Элементы Цикл
		ЗаполнитьЗначенияСвойств(Объект.КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")), ТекущаяСтрока);
	КонецЦикла;
	
	ЗаполнитьДеревоЗаказов();
	
	РазвернутьРезервыАвтомобилей();
	
КонецПроцедуры

#КонецОбласти

