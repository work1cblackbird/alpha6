///////////////////////////////////////////////////////////////////////////////
// Модуль основной формы обработки "Проверка номенклатуры по типу"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на клиенте при открытии формы, до показа окна пользователю.
//
// Параметры:
//  Отказ - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Установим по умолчанию проверки в истину.
	Объект.ПроверятьЕдиницыИзмерения = Истина;
	Объект.ПроверятьХарактеристики   = Истина;
	Объект.ПроверятьУчетЦен          = Истина;
	Объект.ПроверятьШтрихкоды        = Истина;
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицыОшибок

// Обработчик события возникающего на клиенте при активизации строки таблицы ошибок.
//
// Параметры:
//  Элемент - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ТаблицаОшибокПриАктивизацииСтроки(Элемент)
	
	// Установить доступность для контекстного меню.
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.ТекущиеДанные.ВидОбъекта = НСтр("ru = 'Проверка единиц измерения'") 
			ИЛИ Элемент.ТекущиеДанные.ВидОбъекта = НСтр("ru = 'Проверка характеристик номенклатуры'") Тогда
			Элементы.ТаблицаОшибокКонтекстноеМеню.ПодчиненныеЭлементы.ПоискИЗаменаЗначений.Доступность = Истина;
		Иначе
			Элементы.ТаблицаОшибокКонтекстноеМеню.ПодчиненныеЭлементы.ПоискИЗаменаЗначений.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ТаблицаОшибокПриАктивизацииСтроки()

// Обработчик события возникающего на клиенте при двойном щелчке мыши (нажатии Enter) в ячейке таблицы.
//
// Параметры:
//  Элемент              - ТаблицаФормы - Элемент управления, в котором возникло данное событие.
//  ВыбраннаяСтрока      - Ссылка       - Значение выбранной строки.
//  Поле                 - ПолеФормы    - Активное поле.
//  СтандартнаяОбработка - Булево       - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ТаблицаОшибокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "ТаблицаОшибокОбъект" Тогда
		
		ТекСтрока = Элементы.ТаблицаОшибок.ТекущиеДанные;
		
		Если ТекСтрока.ТипОшибки = 1 Тогда
			
			ПараметрыФормы = Новый Структура("Ключ", ТекСтрока.Ссылка);
			ОткрытьФорму("Справочник.ЕдиницыИзмерения.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
			
		ИначеЕсли ТекСтрока.ТипОшибки = 2 Тогда
			
			ПараметрыФормы = Новый Структура("Ключ", ТекСтрока.Ссылка);
			ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
			
		ИначеЕсли ТекСтрока.ТипОшибки = 3 Тогда
			
			ПараметрыФормы = Новый Структура("Ключ", ТекСтрока.Ссылка);
			ОткрытьФорму("РегистрСведений.Штрихкоды.ФормаЗаписи", ПараметрыФормы, ЭтотОбъект);
			
		ИначеЕсли ТекСтрока.ТипОшибки = 4 Тогда
			
			ПоказатьЗначение(, ТекСтрока.Ссылка);
			
		КонецЕсли;
		
	ИначеЕсли Поле.Имя = "ТаблицаОшибокТипНоменклатуры" Тогда
		
		ТекСтрока = Элементы.ТаблицаОшибок.ТекущиеДанные;
		
		ОткрытьФорму("Справочник.ТипыНоменклатуры.ФормаОбъекта", Новый Структура("Ключ", ТекСтрока.ТипНоменклатуры));
		
	КонецЕсли;
	
КонецПроцедуры // ТаблицаОшибокВыбор()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет анализ данных на ошибки.
//
&НаКлиенте
Процедура Анализ(Команда)
	
	// Обработаем событие в контексте сервера.
	АнализНаСервере();
	
КонецПроцедуры // Анализ()

// Выполняет анализ данных на ошибки в контексте сервера.
//
&НаСервере
Процедура АнализНаСервере()
	
	Если НЕ ( Объект.ПроверятьЕдиницыИзмерения 
				ИЛИ Объект.ПроверятьХарактеристики 
				ИЛИ Объект.ПроверятьШтрихкоды 
				ИЛИ Объект.ПроверятьУчетЦен) Тогда
				
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru= 'Не выбрано ни одной проверки.'"));
		Возврат;
	КонецЕсли;
	
	// Очистим таблицу ошибок
	Объект.ТаблицаОшибок.Очистить();
	
	Если Объект.ТипНоменклатуры.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ТипыНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.ТипыНоменклатуры КАК ТипыНоменклатуры
		|ГДЕ
		|	ТипыНоменклатуры.ЭтоГруппа = ЛОЖЬ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ПроверитьТипНоменклатуры(Выборка.Ссылка);
		КонецЦикла;
		
	Иначе
		ПроверитьТипНоменклатуры(Объект.ТипНоменклатуры);
	КонецЕсли;
	
	Объект.ТаблицаОшибок.Сортировать("ТипНоменклатуры");
	
КонецПроцедуры // АнализНаСервере()

// Осуществляет проверку данных выбранного типа номенклатуры.
// в соответствии с параметрами обработки
// возвращает текст с найденными ошибками.
//
// Параметры:
//  ТипНоменклатуры - СправочникСсылка - ТипыНоменклатуры.
//
&НаСервере
Процедура ПроверитьТипНоменклатуры(ТипНоменклатуры)
	
	Если ТипНоменклатуры.Пустая() Тогда
			НСтр("ru= 'Не указан тип номенклатуры для проверки.'");
			Возврат;
	КонецЕсли;
	
	ОтборТипа = Новый Структура ("ТипНоменклатуры",ТипНоменклатуры);
	
	Если Объект.ПроверятьЕдиницыИзмерения Тогда
		
		Если ТипНоменклатуры.ИспользованиеЕдиницИзмерения = 1 Тогда
			// Подчинены типу номенклатуры
			Номенкл = Справочники.Номенклатура.Выбрать(,,ОтборТипа);
			Пока Номенкл.Следующий() Цикл
				Выборка = Справочники.ЕдиницыИзмерения.Выбрать(,Номенкл.Ссылка);
				Пока Выборка.Следующий() Цикл
					Стр = Объект.ТаблицаОшибок.Добавить();
					Стр.ТипНоменклатуры = ТипНоменклатуры;
					Стр.ВидОбъекта = НСтр("ru = 'Проверка единиц измерения'");
					Стр.Ошибка = НСтр("ru = 'Подчинение номенклатуре вместо типа'");
					Стр.Объект = Выборка.Ссылка;
					Стр.ТипОшибки = 1;
					Стр.Ссылка = Выборка.Ссылка;
				КонецЦикла;
			КонецЦикла;
			
		ИначеЕсли ТипНоменклатуры.ИспользованиеЕдиницИзмерения = 2 Тогда
			// Подчинены номенклатуре
			Выборка = Справочники.ЕдиницыИзмерения.Выбрать(,ТипНоменклатуры);
			Пока Выборка.Следующий() Цикл
				Стр = Объект.ТаблицаОшибок.Добавить();
				Стр.ТипНоменклатуры = ТипНоменклатуры;
				Стр.ВидОбъекта = НСтр("ru = 'Проверка единиц измерения'");
				Стр.Ошибка = НСтр("ru = 'Подчинение типу вместо номенклатуры'");
				Стр.Объект = Выборка.Ссылка;
				Стр.ТипОшибки = 1;
				Стр.Ссылка = Выборка.Ссылка;
			КонецЦикла;
		Иначе
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru='Некорректный тип номенклатуры %1'"),Объект.ТипНоменклатуры));
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.ПроверятьХарактеристики Тогда
		
		Если ТипНоменклатуры.ИспользованиеХарактеристик = 1 ИЛИ ТипНоменклатуры.ИспользованиеХарактеристик = 3 Тогда
			
			// Подчинены типу номенклатуры
			Номенклатура = Справочники.Номенклатура.Выбрать(,,ОтборТипа);
			
			Пока Номенклатура.Следующий() Цикл
				
				Выборка = Справочники.ХарактеристикиНоменклатуры.Выбрать(,Номенклатура.Ссылка);
				
				Пока Выборка.Следующий() Цикл
					
					Стр = Объект.ТаблицаОшибок.Добавить();
					Стр.ТипНоменклатуры = ТипНоменклатуры;
					Стр.ВидОбъекта = НСтр("ru = 'Проверка характеристик номенклатуры'");
					Стр.Ошибка = ?(ТипНоменклатуры.ИспользованиеХарактеристик = 3, 
										НСтр("ru = 'Подчинение номенклатуре, учет по характеристикам не ведется'"), 
										НСтр("ru = 'Подчинение номенклатуре вместо типа'"));
					Стр.Объект = Выборка.Ссылка;
					Стр.ТипОшибки = 2;
					Стр.Ссылка = Выборка.Ссылка;
					
				КонецЦикла;
				
			КонецЦикла;
			
		ИначеЕсли ТипНоменклатуры.ИспользованиеХарактеристик = 2 ИЛИ ТипНоменклатуры.ИспользованиеХарактеристик = 3 Тогда
			
			// Подчинены номенклатуре
			Выборка = Справочники.ХарактеристикиНоменклатуры.Выбрать(,ТипНоменклатуры);
			
			Пока Выборка.Следующий() Цикл
				
				Стр = Объект.ТаблицаОшибок.Добавить();
				Стр.ТипНоменклатуры = ТипНоменклатуры;
				Стр.ВидОбъекта = НСтр("ru = 'Проверка характеристик номенклатуры'");
				Стр.Ошибка = ?(ТипНоменклатуры.ИспользованиеХарактеристик = 3, 
								НСтр("ru = 'Подчинение типу номенклатуры, учет по характеристикам не ведется'"),
								НСтр("ru = 'Подчинение типу вместо номенклатуры'"));
				Стр.Объект = Выборка.Ссылка;
				Стр.ТипОшибки = 2;
				Стр.Ссылка = Выборка.Ссылка;
				
			КонецЦикла;
		
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.ПроверятьШтрихкоды Тогда
		
		Если ТипНоменклатуры.ИспользованиеШтрихКодов = 1 Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	Штрихкоды.Объект КАК Объект,
			               |	Штрихкоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			               |	Штрихкоды.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			               |	Штрихкоды.Штрихкод КАК Штрихкод,
			               |	ВЫБОР
			               |		КОГДА Штрихкоды.ХарактеристикаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			               |				ИЛИ Штрихкоды.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
			               |			ТОГДА ИСТИНА
			               |		ИНАЧЕ ЛОЖЬ
			               |	КОНЕЦ КАК Заполнено
			               |ИЗ
			               |	Справочник.Номенклатура КАК Номенклатура
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
			               |		ПО (Штрихкоды.Объект = Номенклатура.Ссылка)
			               |ГДЕ
			               |	Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
			               |	И Штрихкоды.Запрет = ЛОЖЬ
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Штрихкоды.Объект,
			               |	Штрихкоды.ЕдиницаИзмерения,
			               |	Штрихкоды.ХарактеристикаНоменклатуры,
			               |	Штрихкоды.Штрихкод";
			
			Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Стр = Объект.ТаблицаОшибок.Добавить();
				Стр.ТипНоменклатуры = ТипНоменклатуры;
				Стр.ВидОбъекта = НСтр("ru = 'Проверка штрихкодирования'");
				Стр.Ошибка = НСтр("ru = 'Штрихкод для номенклатуры со штрихкодированием по номенклатуре задан неверно'");
				Стр.Объект = Выборка.Штрихкод;
				Стр.ТипОшибки = 3;
				
				СтруктураКлюча= Новый Структура();
				СтруктураКлюча.Вставить("Объект", Выборка.Объект);
				СтруктураКлюча.Вставить("Штрихкод", Выборка.Штрихкод);
				СтруктураКлюча.Вставить("ЕдиницаИзмерения", Выборка.ЕдиницаИзмерения);
				СтруктураКлюча.Вставить("ХарактеристикаНоменклатуры", Выборка.ХарактеристикаНоменклатуры);
				
				КлючЗаписи = РегистрыСведений.Штрихкоды.СоздатьКлючЗаписи(СтруктураКлюча);
				
				Стр.Ссылка = КлючЗаписи;
				
			КонецЦикла;
			
		ИначеЕсли ТипНоменклатуры.ИспользованиеШтрихКодов = 0 Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Штрихкоды.Объект,
			|	Штрихкоды.ЕдиницаИзмерения,
			|	Штрихкоды.ХарактеристикаНоменклатуры,
			|	Штрихкоды.Штрихкод
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
			|		ПО (Штрихкоды.Объект = Номенклатура.Ссылка)
			|ГДЕ
			|	Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
			|	И Штрихкоды.Запрет = ЛОЖЬ
			|
			|СГРУППИРОВАТЬ ПО
			|	Штрихкоды.Объект,
			|	Штрихкоды.ЕдиницаИзмерения,
			|	Штрихкоды.ХарактеристикаНоменклатуры,
			|	Штрихкоды.Штрихкод";
			
			Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Стр = Объект.ТаблицаОшибок.Добавить();
				Стр.ТипНоменклатуры = ТипНоменклатуры;
				Стр.ВидОбъекта = НСтр("ru = 'Проверка штрихкодирования'");
				Стр.Ошибка = НСтр("ru = 'Есть штрихкод для номенклатуры без учета штрихкодирования'");
				Стр.Объект = Выборка.Штрихкод;
				Стр.ТипОшибки = 3;
				
				СтруктураКлюча= Новый Структура();
				СтруктураКлюча.Вставить("Объект", Выборка.Объект);
				СтруктураКлюча.Вставить("Штрихкод", Выборка.Штрихкод);
				СтруктураКлюча.Вставить("ЕдиницаИзмерения", Выборка.ЕдиницаИзмерения);
				СтруктураКлюча.Вставить("ХарактеристикаНоменклатуры", Выборка.ХарактеристикаНоменклатуры);
				
				КлючЗаписи = РегистрыСведений.Штрихкоды.СоздатьКлючЗаписи(СтруктураКлюча);
				
				Стр.Ссылка = КлючЗаписи;
				
			КонецЦикла;
			
		ИначеЕсли ТипНоменклатуры.ИспользованиеШтрихКодов = 2 Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	Штрихкоды.Объект КАК Объект,
			               |	Штрихкоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			               |	Штрихкоды.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			               |	Штрихкоды.Штрихкод КАК Штрихкод,
			               |	ВЫБОР
			               |		КОГДА Штрихкоды.ХарактеристикаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			               |				ИЛИ Штрихкоды.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
			               |			ТОГДА ИСТИНА
			               |		ИНАЧЕ ЛОЖЬ
			               |	КОНЕЦ КАК Заполнено
			               |ИЗ
			               |	Справочник.Номенклатура КАК Номенклатура
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
			               |		ПО (Штрихкоды.Объект = Номенклатура.Ссылка)
			               |ГДЕ
			               |	Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
			               |	И Штрихкоды.Запрет = ЛОЖЬ
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Штрихкоды.Объект,
			               |	Штрихкоды.ЕдиницаИзмерения,
			               |	Штрихкоды.ХарактеристикаНоменклатуры,
			               |	Штрихкоды.Штрихкод";
			
			Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Стр = Объект.ТаблицаОшибок.Добавить();
				Стр.ТипНоменклатуры = ТипНоменклатуры;
				Стр.ВидОбъекта = НСтр("ru = 'Проверка штрихкодирования'");
				Стр.Ошибка = НСтр("ru = 'Штрихкод для номенклатуры со штрихкодированием по единице измерения задан неверно'");
				Стр.Объект = Выборка.Штрихкод;
				Стр.ТипОшибки = 3;
				
				СтруктураКлюча= Новый Структура();
				СтруктураКлюча.Вставить("Объект", Выборка.Объект);
				СтруктураКлюча.Вставить("Штрихкод", Выборка.Штрихкод);
				СтруктураКлюча.Вставить("ЕдиницаИзмерения", Выборка.ЕдиницаИзмерения);
				СтруктураКлюча.Вставить("ХарактеристикаНоменклатуры", Выборка.ХарактеристикаНоменклатуры);
				
				КлючЗаписи = РегистрыСведений.Штрихкоды.СоздатьКлючЗаписи(СтруктураКлюча);
				
				Стр.Ссылка = КлючЗаписи;
				
			КонецЦикла;
			
		ИначеЕсли ТипНоменклатуры.ИспользованиеШтрихКодов = 3 Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	Штрихкоды.Объект КАК Объект,
			               |	Штрихкоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			               |	Штрихкоды.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			               |	Штрихкоды.Штрихкод КАК Штрихкод,
			               |	ВЫБОР
			               |		КОГДА Штрихкоды.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			               |				ИЛИ Штрихкоды.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
			               |			ТОГДА ИСТИНА
			               |		ИНАЧЕ ЛОЖЬ
			               |	КОНЕЦ КАК Заполнено
			               |ИЗ
			               |	Справочник.Номенклатура КАК Номенклатура
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
			               |		ПО (Штрихкоды.Объект = Номенклатура.Ссылка)
			               |ГДЕ
			               |	Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
			               |	И Штрихкоды.Запрет = ЛОЖЬ
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Штрихкоды.Объект,
			               |	Штрихкоды.ЕдиницаИзмерения,
			               |	Штрихкоды.ХарактеристикаНоменклатуры,
			               |	Штрихкоды.Штрихкод";
			
			Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Стр = Объект.ТаблицаОшибок.Добавить();
				Стр.ТипНоменклатуры = ТипНоменклатуры;
				Стр.ВидОбъекта = НСтр("ru = 'Проверка штрихкодирования'");
				Стр.Ошибка = НСтр("ru = 'Штрихкод для номенклатуры со штрихкодированием по характеристике задан неверно'");
				Стр.Объект = Выборка.Штрихкод;
				Стр.ТипОшибки = 3;
				
				СтруктураКлюча= Новый Структура();
				СтруктураКлюча.Вставить("Объект", Выборка.Объект);
				СтруктураКлюча.Вставить("Штрихкод", Выборка.Штрихкод);
				СтруктураКлюча.Вставить("ЕдиницаИзмерения", Выборка.ЕдиницаИзмерения);
				СтруктураКлюча.Вставить("ХарактеристикаНоменклатуры", Выборка.ХарактеристикаНоменклатуры);
				
				КлючЗаписи = РегистрыСведений.Штрихкоды.СоздатьКлючЗаписи(СтруктураКлюча);
				
				Стр.Ссылка = КлючЗаписи;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.ПроверятьУчетЦен Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЦеныСрезПоследних.Регистратор КАК Регистратор,
		|	ЦеныСрезПоследних.ТипЦен КАК ТипЦен,
		|	ЦеныСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныСрезПоследних.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ЦеныСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	РегистрСведений.Цены.СрезПоследних(
		|			,
		|			Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
		|				И ТипЦен.АлгоритмПолученияЦены = ЗНАЧЕНИЕ(Перечисление.АлгоритмПолученияЦены.ПоХарактеристике)
		|				И ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЦеныСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныСрезПоследних.Регистратор КАК Регистратор,
		|	ЦеныСрезПоследних.ТипЦен КАК ТипЦен,
		|	ЦеныСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныСрезПоследних.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ЦеныСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	РегистрСведений.Цены.СрезПоследних(
		|			,
		|			Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
		|				И ТипЦен.АлгоритмПолученияЦены = ЗНАЧЕНИЕ(Перечисление.АлгоритмПолученияЦены.ПоЕдиницеИзмерения)
		|				И ХарактеристикаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ЦеныСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныСрезПоследних.Регистратор КАК Регистратор,
		|	ЦеныСрезПоследних.ТипЦен КАК ТипЦен,
		|	ЦеныСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныСрезПоследних.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ЦеныСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	РегистрСведений.Цены.СрезПоследних(
		|			,
		|			Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
		|				И ТипЦен.АлгоритмПолученияЦены = ЗНАЧЕНИЕ(Перечисление.АлгоритмПолученияЦены.ПоНоменклатуре)
		|				И (ХарактеристикаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|					ИЛИ ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка))) КАК ЦеныСрезПоследних";
		
		Если ТипНоменклатуры.УчетЦенТолькоВРазрезеДопПараметров Тогда
			
			ЗапросДопПараметры = Новый Запрос;
			ЗапросДопПараметры.Текст = "ВЫБРАТЬ
			|	ЦеныСрезПоследних.Регистратор КАК Регистратор,
			|	ЦеныСрезПоследних.ТипЦен КАК ТипЦен,
			|	ЦеныСрезПоследних.Номенклатура КАК Номенклатура,
			|	ЦеныСрезПоследних.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	ЦеныСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			|ИЗ
			|	РегистрСведений.Цены.СрезПоследних(
			|			,
			|			Номенклатура.ТипНоменклатуры = &ТипНоменклатуры
			|				И (ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|					ИЛИ ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка))) КАК ЦеныСрезПоследних";
			
			ЗапросДопПараметры.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
		
		Выборка3 = ЗапросДопПараметры.Выполнить().Выбрать();
		
		Пока Выборка3.Следующий() Цикл
			
			Стр = Объект.ТаблицаОшибок.Добавить();
			Стр.ТипНоменклатуры = ТипНоменклатуры;
			Стр.ВидОбъекта = НСтр("ru = 'Проверка учета цен'");
			Стр.Ошибка = НСтр("ru = 'Для типа номенклатуры с учетом цен только в разрезе дополнительных параметров цена задана неверно'");
			Стр.Объект = ""+Выборка3.Номенклатура+"; "+?(ЗначениеЗаполнено(Выборка3.ХарактеристикаНоменклатуры),""
							+Выборка3.ХарактеристикаНоменклатуры+"; ","")+Выборка3.ЕдиницаИзмерения;
			Стр.ТипОшибки = 4;
			
			Стр.Ссылка = Выборка3.Регистратор;
			
		КонецЦикла;
		
	КонецЕсли;
		
		Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
		
		Пакет = Запрос.ВыполнитьПакет();
		
		Выборка0 = Пакет[0].Выбрать();
		Выборка1 = Пакет[1].Выбрать();
		Выборка2 = Пакет[2].Выбрать();
		
		Пока Выборка0.Следующий() Цикл
			
			Стр = Объект.ТаблицаОшибок.Добавить();
			Стр.ТипНоменклатуры = ТипНоменклатуры;
			Стр.ВидОбъекта = НСтр("ru = 'Проверка учета цен'");
			Стр.Ошибка = НСтр("ru = 'Для типа цены с алгоритмом получения цен по характеристике задана единица измерения'");
			Стр.Объект = ""+Выборка0.Номенклатура+"; "+?(ЗначениеЗаполнено(Выборка0.ХарактеристикаНоменклатуры),""
							+Выборка0.ХарактеристикаНоменклатуры+"; ","")+Выборка0.ЕдиницаИзмерения;
			Стр.ТипОшибки = 4;
			
			Стр.Ссылка = Выборка0.Регистратор;
			
		КонецЦикла;
		
		Пока Выборка1.Следующий() Цикл
			
			Стр = Объект.ТаблицаОшибок.Добавить();
			Стр.ТипНоменклатуры = ТипНоменклатуры;
			Стр.ВидОбъекта = НСтр("ru = 'Проверка учета цен'");
			Стр.Ошибка = НСтр("ru = 'Для типа цены с алгоритмом получения цен по единице измерения задана характеристика'");
			Стр.Объект = ""+Выборка1.Номенклатура+"; "+?(ЗначениеЗаполнено(Выборка1.ХарактеристикаНоменклатуры),""
								+Выборка1.ХарактеристикаНоменклатуры+"; ","")+Выборка1.ЕдиницаИзмерения;
			Стр.ТипОшибки = 4;
			
			Стр.Ссылка = Выборка1.Регистратор;
			
		КонецЦикла;
		
		Пока Выборка2.Следующий() Цикл
			
			Стр = Объект.ТаблицаОшибок.Добавить();
			Стр.ТипНоменклатуры = ТипНоменклатуры;
			Стр.ВидОбъекта = НСтр("ru = 'Проверка учета цен'");
			Стр.Ошибка = НСтр("ru = 'Для типа цены с алгоритмом получения цен по номенклатуре заданы дополнительные параметры'");
			Стр.Объект = ""+Выборка2.Номенклатура+"; "+?(ЗначениеЗаполнено(Выборка2.ХарактеристикаНоменклатуры),""
							+Выборка2.ХарактеристикаНоменклатуры+"; ","")+Выборка2.ЕдиницаИзмерения;
			Стр.ТипОшибки = 4;
			
			Стр.Ссылка = Выборка2.Регистратор;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьТипНоменклатуры()

// Служит для открытия формы замены значений.
//
&НаКлиенте
Процедура ЗаменитьОбъект(Команда)
	
	Если Элементы.ТаблицаОшибок.ТекущиеДанные <> Неопределено  Тогда
		ЗаменяемыйОбъект = Элементы.ТаблицаОшибок.ТекущиеДанные.Объект;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗаменяемыйОбъект", ЗаменяемыйОбъект);
	
	ОткрытьФорму("Обработка.ПоискЗаменаЗначений.Форма",СтруктураПараметров,,Истина);
	
КонецПроцедуры

#КонецОбласти

