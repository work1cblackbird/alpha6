
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

// BSLLS:MissingVariablesDescription-off
Перем Владелец;
Перем БезПроверок;
Перем ИмяСвойства;
Перем ЭтоРеквизит;
Перем НовоеЗначение;
Перем ДопИнформацияАвтомобилей;
// BSLLS:MissingVariablesDescription-on

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Устанавливает автомобиль с которыем работаем в объект
//
// Параметры:
//  Автомобиль - СправочникСсылка.Автомобили - автомобиль
// 
// Возвращаемое значение:
//   ОбработкаОбъект.ПомощникВРаботеСАвтомобилем
//
Функция ДляАвтомобиля(Автомобиль) Экспорт
	
	Владелец = Автомобиль;
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает режим записи без проверок
// 
// Возвращаемое значение:
//   ОбработкаОбъект.ПомощникВРаботеСАвтомобилем
//
Функция БезПроверок() Экспорт
	
	БезПроверок = Истина;
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает свойство для которого поисходит запись
//
// Параметры:
//  Свойство - Строка - имя свойства
// 
// Возвращаемое значение:
//   ОбработкаОбъект.ПомощникВРаботеСАвтомобилем
//
Функция ДляСвойства(Свойство) Экспорт
	
	ИмяСвойства = Свойство;
	ЭтоРеквизит = ЕстьРеквизит(Метаданные.Справочники.Автомобили, ИмяСвойства);
	Возврат ЭтотОбъект;
	
КонецФункции

// Запись значений свойст автомобилей
//
// Параметры:
//  Значение - Свойство - значение свойства автомобиля.
//
// Возвращаемое значение:
//  ОбработкаОбъект.ПомощникВРаботеСАвтомобилем - Зачем то себы возвращает.
//
Функция ЗаписатьЗначение(Значение) Экспорт
	
	НовоеЗначение = Значение;
	
	Если ЭтоРеквизит Тогда
		
		ЗаписатьВСправочник();
		Возврат ЭтотОбъект;
	КонецЕсли;
	
	ЗаписатьВРегистр();
	Возврат ЭтотОбъект;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьВСправочник()
	
	НачатьТранзакцию();
	
	Попытка
		
		ОбъектАвтомобиль = Владелец.ПолучитьОбъект();
		ОбъектАвтомобиль.Заблокировать();
		ОбъектАвтомобиль[ИмяСвойства] = НовоеЗначение;
		
		Если БезПроверок Тогда
			
			ОбъектАвтомобиль.ОбменДанными.Загрузка = Истина;
			
		КонецЕсли;
		
		ОбъектАвтомобиль.Записать();
		
		ЗафиксироватьТранзакцию();
	
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Данные.Изменение'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.Автомобили,
			Владелец,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		ВызватьИсключение НСтр("ru = 'Не удалось обновить реквизит справочника Автомобили.
			|Подробнее в журнале регистрации.'");
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаписатьВРегистр()
	
	Справочники.Автомобили.ЗаписьЗначенияРегистраСведения(
		Владелец,
		НовоеЗначение,
		ДопИнформацияАвтомобилей[ИмяСвойства]
	);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ДопИнформацияАвтомобилей = Новый Структура;
ДопИнформацияАвтомобилей.Вставить("Владелец", Перечисления.ДополнительнаяИнформацияАвтомобилей.Хозяин);
ДопИнформацияАвтомобилей.Вставить("ГосНомер", Перечисления.ДополнительнаяИнформацияАвтомобилей.ГосНомер);
ДопИнформацияАвтомобилей.Вставить("Пробег", Перечисления.ДополнительнаяИнформацияАвтомобилей.Пробег);
ДопИнформацияАвтомобилей.Вставить("Вид", Перечисления.ДополнительнаяИнформацияАвтомобилей.ВидАвтомобиля);
ДопИнформацияАвтомобилей.Вставить("Паспорт", Перечисления.ДополнительнаяИнформацияАвтомобилей.ТехПаспорт);
ДопИнформацияАвтомобилей.Вставить("Свидетельство",
	Перечисления.ДополнительнаяИнформацияАвтомобилей.СвидетельствоОРегистрацииТС);

#КонецОбласти
	
#Иначе
  
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
  
#КонецЕсли
