// Модуль менеджера обработки "Кассовая книга".

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Обработчик печати.
//
// Параметры:
//  МассивОбъектов         - Массив           - массив объектов для формирования печатных форм
//  ПараметрыПечати        - Структура        - дополнительные параметры печати
//  КоллекцияПечатныхФорм  - Таблица значений - таблица с идентификаторами печатных форм и макетами печати
//  ОбъектыПечати          - Структура        - список областей печатной формы в разрезе документов
//  ПараметрыВывода        - Структура        - дополнительные параметры вывода формы.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КассоваяКнига") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"КассоваяКнига",
		НСтр("ru = 'Кассовая книга'"),
		ПечатьКассоваяКнига(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Обложка") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Обложка",
		"Обложка",
		ПараметрыПечати.ДокументОбложка);
		
	КонецЕсли;
	
КонецПроцедуры // Печать()

// Формирует данные в табличном документе.
//
Функция ПечатьКассоваяКнига (МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	// Создадим табличные документы
	КассоваяКнига = Новый ТабличныйДокумент;
	ДокументОбложка = Новый ТабличныйДокумент;
	
	// Необходимые параметры
	МассивМесяцев = ПараметрыПечати.МассивМесяцев;
	Объект = ПараметрыПечати.ОбъектКассоваяКнига;
	
	НаименованиеПолноеОрганизации = СокрЛП(РеквизитыСИсторией.ПолучитьНаименованияНаДату(Объект.Организация, Объект.Период.ДатаНачала, "НаименованиеДляПечатныхФорм"));
	
	// Получим месяц
	Если (Месяц(Объект.Период.ДатаНачала) = Месяц(Объект.Период.ДатаОкончания)) 
		И (Год(Объект.Период.ДатаНачала) = Год(Объект.Период.ДатаОкончания)) Тогда
		
		МесяцОтчета = МассивМесяцев[Месяц(Объект.Период.ДатаНачала)];
	КонецЕсли;
	
	// Выполним выборку касс в случае не заполненной кассы.
	Если НЕ ЗначениеЗаполнено(Объект.КассаКомпании) Тогда
		
		Запрос = Новый Запрос("
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КассыКомпании.Наименование,
		|	КассыКомпании.ВалютаДенежныхСредств,
		|	КассыКомпании.МноговалютнаяКасса,
		|	КассыКомпании.Представление,
		|	КассыКомпании.Ссылка
		|ИЗ
		|	Справочник.КассыКомпании КАК КассыКомпании
		|ГДЕ
		|	КассыКомпании.Организация = &Организация");
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		МассивКассКомпании = Запрос.Выполнить().Выгрузить();
		
		Для каждого ВыборкаКассы Из МассивКассКомпании Цикл
			Касса = ВыборкаКассы.Ссылка;
			
			// Получим макеты для результата и обложки.
			МакетОтчета = ПолучитьМакет("КассоваяКнига");
			МакетОбложки = ПолучитьМакет("Обложка");
			
			Многовалютная = Касса.МноговалютнаяКасса;
			НомерЛиста = Неопределено;
			НачалоПериода = НачалоДня(Объект.Период.ДатаНачала);
			КонецПериода = КонецДня(Объект.Период.ДатаОкончания);
			
			Если Объект.ПересчитыватьНомера Тогда
				НачалоПериода = НачалоГода(НачалоПериода);
			КонецЕсли;
			
			// Получим итоги по дням.
			ЗапросИтоги = Новый Запрос();
			ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДенежныеСредстваКомпанииОстаткиИОбороты.Период КАК Период,
			|	ДенежныеСредстваКомпанииОстаткиИОбороты.Валюта КАК Валюта,
			|	ДенежныеСредстваКомпанииОстаткиИОбороты.СуммаНачальныйОстаток КАК НачальныйОстаток,
			|	ДенежныеСредстваКомпанииОстаткиИОбороты.СуммаКонечныйОстаток КАК КонечныйОстаток,
			|	ДенежныеСредстваКомпанииОстаткиИОбороты.СуммаПриход КАК ПриходЗаДень,
			|	ДенежныеСредстваКомпанииОстаткиИОбороты.СуммаРасход КАК РасходЗаДень
			|ИЗ
			|	РегистрНакопления.ДенежныеСредстваКомпании.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, День, Движения, СтруктурнаяЕдиница = &Касса) КАК ДенежныеСредстваКомпанииОстаткиИОбороты
			|
			|УПОРЯДОЧИТЬ ПО
			|	Период,
			|	Валюта
			|ИТОГИ
			|	СУММА(НачальныйОстаток),
			|	СУММА(КонечныйОстаток),
			|	СУММА(ПриходЗаДень),
			|	СУММА(РасходЗаДень)
			|ПО
			|	Период ПЕРИОДАМИ(ДЕНЬ, , ),
			|	Валюта";
			ЗапросИтоги.Текст = ТекстЗапроса;
			ЗапросИтоги.УстановитьПараметр("ДатаНачала",НачалоПериода);
			ЗапросИтоги.УстановитьПараметр("ДатаКонца",КонецПериода);
			ЗапросИтоги.УстановитьПараметр("Касса",Касса);
			ВыборкаИтогиДни = ЗапросИтоги.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			// Получим выборку операций по кассе за период.
			ЗапросДни = Новый Запрос();
			ЗапросДни.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НАЧАЛОПЕРИОДА(ДенежныеСредстваКомпании.Период, ГОД) КАК ГОД,
			|	НАЧАЛОПЕРИОДА(ДенежныеСредстваКомпании.Период, МЕСЯЦ) КАК МЕСЯЦ,
			|	НАЧАЛОПЕРИОДА(ДенежныеСредстваКомпании.Период, ДЕНЬ) КАК Период,
			|	ДенежныеСредстваКомпании.Период КАК Секунда,
			|	ДенежныеСредстваКомпании.Регистратор КАК Документ,
			|	ДенежныеСредстваКомпании.Регистратор.Номер КАК НомерДок,
			|	ВЫБОР
			|		КОГДА ДенежныеСредстваКомпании.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
			|			ТОГДА &Принято
			|		КОГДА ДенежныеСредстваКомпании.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
			|			ТОГДА &Выдано
			|		ИНАЧЕ ДенежныеСредстваКомпании.СтатьяДДС
			|	КОНЕЦ КАК СтрокаДДС,
			|	ДенежныеСредстваКомпании.Регистратор.Контрагент КАК Контрагент,
			|	ДенежныеСредстваКомпании.Регистратор.Основание КАК Основание,
			|	ДенежныеСредстваКомпании.Регистратор.ВалютаДокумента КАК Валюта,
			|	ДенежныеСредстваКомпании.СтатьяДДС.КоррСчет КАК КоррСчет,
			|	ВЫБОР
			|		КОГДА ДенежныеСредстваКомпании.ВидДвижения = &Приход
			|			ТОГДА ДенежныеСредстваКомпании.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Приход,
			|	ВЫБОР
			|		КОГДА ДенежныеСредстваКомпании.ВидДвижения = &Расход
			|			ТОГДА ДенежныеСредстваКомпании.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Расход,
			|	ВЫБОР
			|		КОГДА ДенежныеСредстваКомпании.ВидДвижения = &Приход
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПриходных,
			|	ВЫБОР
			|		КОГДА ДенежныеСредстваКомпании.ВидДвижения = &Расход
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоРасходных
			|ИЗ
			|	РегистрНакопления.ДенежныеСредстваКомпании КАК ДенежныеСредстваКомпании
			|ГДЕ
			|	ДенежныеСредстваКомпании.СтруктурнаяЕдиница = &Касса
			|	И ДенежныеСредстваКомпании.Период МЕЖДУ &ДатаНачала И &ДатаКонца
			|	И (НЕ ДенежныеСредстваКомпании.Регистратор ССЫЛКА Документ.ПереоценкаВалютныхСредств)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ГОД,
			|	МЕСЯЦ,
			|	Период,
			|	Секунда
			|ИТОГИ
			|	СУММА(КоличествоПриходных),
			|	СУММА(КоличествоРасходных)
			|ПО
			|	ГОД,
			|	МЕСЯЦ,
			|	Период";
			
			ЗапросДни.УстановитьПараметр("ДатаНачала",НачалоПериода);
			ЗапросДни.УстановитьПараметр("ДатаКонца",КонецПериода);
			ЗапросДни.УстановитьПараметр("Касса",Касса);
			ЗапросДни.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
			ЗапросДни.УстановитьПараметр("Расход",ВидДвиженияНакопления.Расход);
			ЗапросДни.УстановитьПараметр("Принято", НСтр("ru = 'Принято от'"));
			ЗапросДни.УстановитьПараметр("Выдано", НСтр("ru = 'Выдано'"));
	
			// Получим нужные области макета.
			ИмяОбласти = ?(Объект.ВыводитьОснования,"Широкая","") + ?(Многовалютная,"Многовалютная","");
			ОбластьМакетаВкладнойЛист	= МакетОтчета.ПолучитьОбласть("ВкладнойЛист|Отчет");
			ОбластьМакетаШапка			= МакетОтчета.ПолучитьОбласть("Шапка|Отчет");
			ОбластьМакетаОстатокНаНД	= МакетОтчета.ПолучитьОбласть("ОстатокНаНД|Отчет");
			ОбластьМакетаСтрока			= МакетОтчета.ПолучитьОбласть("Строка"+ИмяОбласти+"|Отчет");
			ОбластьМакетаПеренос		= МакетОтчета.ПолучитьОбласть("Перенос|Отчет");
			ОбластьМакетаОборот			= МакетОтчета.ПолучитьОбласть("Оборот|Отчет");
			ОбластьМакетаОборотРуб		= МакетОтчета.ПолучитьОбласть("ОборотРуб|Отчет");
			ОбластьМакетаОборотВал		= МакетОтчета.ПолучитьОбласть("ОборотВал|Отчет");
			ОбластьМакетаКонечныйОстаток= МакетОтчета.ПолучитьОбласть("КонечныйОстаток|Отчет");
			ОбластьМакетаПодвал			= МакетОтчета.ПолучитьОбласть("Подвал|Отчет");
			ОбластьМакетаЛистовЗаМесяц	= МакетОтчета.ПолучитьОбласть("ЛистовЗаМесяц|Отчет");
			ОбластьМакетаЛистовЗаГод	= МакетОтчета.ПолучитьОбласть("ЛистовЗаГод|Отчет");
			ОбластьМакетаВТомЧисле		= МакетОтчета.ПолучитьОбласть("ВТомЧисле|Отчет");
			ОбластьМакетаОстаток		= МакетОтчета.ПолучитьОбласть("Остаток|Отчет");
			ОбластьМакетаВалОстаток		= МакетОтчета.ПолучитьОбласть("ВалОстаток|Отчет");
			
			// Заполним постоянные параметры областей.
			СтруктураСведений = РегистрыСведений.СведенияКомпании.ПолучитьПоследнее(Объект.Период.ДатаОкончания,Новый Структура("Организация,Объект",Объект.Организация,Перечисления.ВидыОбъектовСведений.ГлавныйБухгалтер));
			ГлавныйБухгалтер = СтруктураСведений.Значение;
			СтруктураСведений = РегистрыСведений.СведенияКомпании.ПолучитьПоследнее(Объект.Период.ДатаОкончания,Новый Структура("Организация,Объект",Объект.Организация,Перечисления.ВидыОбъектовСведений.Кассир));
			Кассир = СтруктураСведений.Значение;
			СтруктураСведений = РегистрыСведений.СведенияКомпании.ПолучитьПоследнее(Объект.Период.ДатаОкончания,Новый Структура("Организация,Объект",Объект.Организация,Перечисления.ВидыОбъектовСведений.Руководитель));
			Руководитель = СтруктураСведений.Значение;
			ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтер = ГлавныйБухгалтер;
			ОбластьМакетаПодвал.Параметры.Кассир = Кассир;
			
			счИтоги = 0;
			РезультатЗапроса = ЗапросДни.Выполнить();
			ВыборкаГоды = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Год");
			Количество = РезультатЗапроса.Выбрать().Количество();
			Сч = 0;
			ОтборНомера = Новый Структура("Касса",Касса);
			Пока ВыборкаГоды.Следующий() Цикл
				Сч = Сч + 1;
				ВыборкаМесяца = ВыборкаГоды.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Месяц");
				счДеньГода = 0; КоличествоДнейВГоду = ВыборкаГоды.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период").Количество();
				Пока ВыборкаМесяца.Следующий() Цикл
					Сч = Сч + 1;			
					ВыборкаДни = ВыборкаМесяца.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
					счДеньМесяца = 0;
					КоличествоДнейВМесяце = ВыборкаДни.Количество();
					Пока ВыборкаДни.Следующий() Цикл
						
						Сч = Сч + 1;
						
						// Для первого дня необходимо вывести номер листа, следующий за сохраненным номером листа.
						Если НомерЛиста = Неопределено И Объект.ПересчитыватьНомера Тогда
							
							НомерЛиста = 1;
							ЛистовЗаМесяц = 1;
							ЛистовЗаГод = 1;
							
							// Создадим и очистим весь набор записей.
							Номера = РегистрыСведений.НомераЛистовКассовойКниги.СоздатьНаборЗаписей();
							Номера.Отбор.КассаКомпании.Установить(Касса);
							Номера.Прочитать();
							Номера.Очистить();
							
						КонецЕсли;
						
						Если НомерЛиста = Неопределено Тогда
							
							ЗапросНомера = Новый Запрос();
							ЗапросНомера.Текст = "
							|ВЫБРАТЬ РАЗРЕШЕННЫЕ
							|	ЕСТЬNULL(НомерПоследнегоЛистаПредМесяц.НомерЛиста, 1) КАК НомерПоследнегоЛистаЗаПредМесяц,
							|	НомерПоследнегоЛистаЗаЭтотМесяц.НомерЛиста КАК НомерПоследнегоЛистаЗаЭтотМесяц
							|ИЗ
							|	РегистрСведений.НомераЛистовКассовойКниги.СрезПоследних(
							|		&НачалоМесяца,
							|		КассаКомпании = &Касса
							|		    И НАЧАЛОПЕРИОДА(Период, ГОД) = &НачалоГода) КАК НомерПоследнегоЛистаПредМесяц
							|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.НомераЛистовКассовойКниги.СрезПоследних(
							|		&ДатаНач,
							|		КассаКомпании = &Касса
							|		    И НАЧАЛОПЕРИОДА(Период, ГОД) = &НачалоГода) КАК НомерПоследнегоЛистаЗаЭтотМесяц
							|		ПО (ИСТИНА)
							|";
							ЗапросНомера.УстановитьПараметр("Касса",Касса);
							ЗапросНомера.УстановитьПараметр("НачалоГода",ВыборкаГоды.Год);
							ЗапросНомера.УстановитьПараметр("НачалоМесяца",Новый Граница(ВыборкаМесяца.Месяц,ВидГраницы.Исключая));
							ЗапросНомера.УстановитьПараметр("ДатаНач",Новый Граница(ВыборкаДни.Период,ВидГраницы.Исключая));
							ВыборкаНомера = ЗапросНомера.Выполнить().Выбрать();
							
							Если ВыборкаНомера.Количество() = 0 Тогда
								НомерЛиста = 1;
								ЛистовЗаМесяц = 1;
								ЛистовЗаГод = 1;
							Иначе
								ВыборкаНомера.Следующий();
								НомерЛиста = ВыборкаНомера.НомерПоследнегоЛистаЗаЭтотМесяц + 1;
								ЛистовЗаГод = НомерЛиста;
								ЛистовЗаМесяц = ВыборкаНомера.НомерПоследнегоЛистаЗаЭтотМесяц - ВыборкаНомера.НомерПоследнегоЛистаЗаПредМесяц + 1;
							КонецЕсли;
							
						КонецЕсли;
						
						счДеньГода = счДеньГода + 1;
						счДеньМесяца = счДеньМесяца + 1;
						
						// Выведем параметры "дня".
						ОбластьМакетаВкладнойЛист.Параметры.ТекстНомерЛиста = НомерЛиста;
						ОбластьМакетаВкладнойЛист.Параметры.ДатаКассы       = Формат(ВыборкаДни.Период,"ДЛФ=DD"); 
						КассоваяКнига.Вывести(ОбластьМакетаВкладнойЛист);
						КассоваяКнига.Присоединить(ОбластьМакетаВкладнойЛист);
						КассоваяКнига.Вывести(ОбластьМакетаШапка);
						КассоваяКнига.Присоединить(ОбластьМакетаШапка);
						
						// Перейдем к следующей итоговой записи, совпадающей с этим днем и выведем все валюты.
						ВыборкаИтогиВалюты = ВыборкаИтогиДни.Строки[счИтоги].Строки;
						счИтоги = счИтоги + 1;
						
						Для Каждого СтрокаИтогиВалюты Из ВыборкаИтогиВалюты Цикл
							ОбластьМакетаОстатокНаНД.Параметры.НачальныйОстаток = СтрокаИтогиВалюты.НачальныйОстаток;
							Если Многовалютная Тогда
								ОбластьМакетаОстатокНаНД.Параметры.Валюта = " (" + СтрокаИтогиВалюты.Валюта + ")";
							КонецЕсли;
							КассоваяКнига.Вывести(ОбластьМакетаОстатокНаНД);
							КассоваяКнига.Присоединить(ОбластьМакетаОстатокНаНД);
						КонецЦикла;
						
						// Начинаем выводить документы дня.
						ПриходРасходПоЛисту = Новый Соответствие();
						ЛистовЗаДень = 0;
						ВыборкаДокументы = ВыборкаДни.Выбрать();
						счСтроки = 1;
						
						Пока ВыборкаДокументы.Следующий() Цикл
							
							Сч = Сч + 1;
							ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаДокументы);
								
							КонтрагентЗначение = ВыборкаДокументы.Контрагент;
							Если ТипЗнч(КонтрагентЗначение) = Тип("СправочникСсылка.Контрагенты") 
							   И ВыборкаДокументы.Контрагент.ФормаСобственности = Перечисления.ФормыСобственности.ЧастноеЛицо Тогда
								// Просклоняем представление контрагента
								КонтрагентПол = ПолКакЧисло(ВыборкаДокументы.Контрагент.Пол);
								КонтрагентЗначение = КонтрагентЗначение.НаименованиеПолное;
								Если ВыборкаДокументы.СтрокаДДС = ЗапросДни.Параметры.Принято Тогда
									КонтрагентЗначение = СклонениеПредставленийОбъектов.ПросклонятьФИО(КонтрагентЗначение, 2, 
										ВыборкаДокументы.Контрагент, ?(ЗначениеЗаполнено(КонтрагентПол), КонтрагентПол, Неопределено));		
								ИначеЕсли ВыборкаДокументы.СтрокаДДС = ЗапросДни.Параметры.Выдано Тогда
									КонтрагентЗначение = СклонениеПредставленийОбъектов.ПросклонятьФИО(КонтрагентЗначение, 3, 
										ВыборкаДокументы.Контрагент, ?(ЗначениеЗаполнено(КонтрагентПол), КонтрагентПол, Неопределено));	
								Иначе
									// Если не приход и не расход, то оставляем как есть
									Если ВыборкаДокументы.СтрокаДДС.ВидДвижения = Перечисления.ВидыДвижений.Приход Тогда
										КонтрагентЗначение = СклонениеПредставленийОбъектов.ПросклонятьФИО(КонтрагентЗначение, 2, 
											ВыборкаДокументы.Контрагент, ?(ЗначениеЗаполнено(КонтрагентПол), КонтрагентПол, Неопределено));	
									ИначеЕсли ВыборкаДокументы.СтрокаДДС.ВидДвижения = Перечисления.ВидыДвижений.Расход Тогда
										КонтрагентЗначение = СклонениеПредставленийОбъектов.ПросклонятьФИО(КонтрагентЗначение, 3, 
											ВыборкаДокументы.Контрагент, ?(ЗначениеЗаполнено(КонтрагентПол), КонтрагентПол, Неопределено));	
									КонецЕсли;
								КонецЕсли;	
							КонецЕсли;
							
							ОбластьМакетаСтрока.Параметры.Контрагент = Строка(ВыборкаДокументы.СтрокаДДС) 
								+ ?(ЗначениеЗаполнено(КонтрагентЗначение), " " + КонтрагентЗначение, "")
								+ ?(Объект.ВыводитьОснования, " " + ВыборкаДокументы.Основание, "");
							ОбластьМакетаСтрока.Параметры.НомерДок = УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(ВыборкаДокументы.Документ);
							
							Если Многовалютная Тогда
								ИмяПараметра = "Валюта" + ?(ВыборкаДокументы.Приход <> 0, "Приход","Расход");
								ОбластьМакетаСтрока.Параметры[ИмяПараметра] = ВыборкаДокументы.Валюта;
							КонецЕсли;
							
							// Если не хватает для вывода места, переносим на следующий лист,
							// увеличивая номер листа и обнуляя итоги по листу.
							МассивПроверки = Новый Массив();
							МассивПроверки.Добавить(ОбластьМакетаСтрока);
							
							Для к = 1 По ПриходРасходПоЛисту.Количество() Цикл
								МассивПроверки.Добавить(ОбластьМакетаПеренос);
							КонецЦикла;
							
							Если ВыборкаДокументы.Количество() = счСтроки Тогда
								МассивПроверки.Добавить(ОбластьМакетаПодвал);
							КонецЕсли;
							
							Попытка
								
								РезультатПроверки = КассоваяКнига.ПроверитьВывод(МассивПроверки);
								
								// Проверим, помещаются ли на странице.
								Если НЕ РезультатПроверки Тогда
									Для Каждого ТекВалюта Из ПриходРасходПоЛисту Цикл
										Если Многовалютная Тогда
											ОбластьМакетаПеренос.Параметры.Валюта = " (" + ТекВалюта.Ключ + ")";
										КонецЕсли;
										ОбластьМакетаПеренос.Параметры.Заполнить(ТекВалюта.Значение);
										КассоваяКнига.Вывести(ОбластьМакетаПеренос);
										КассоваяКнига.Присоединить(ОбластьМакетаПеренос);
									КонецЦикла;
									КассоваяКнига.ВывестиГоризонтальныйРазделительСтраниц();
									НомерЛиста		= НомерЛиста + 1;
									ЛистовЗаДень	= ЛистовЗаДень + 1;
									ЛистовЗаМесяц	= ЛистовЗаМесяц + 1;
									ЛистовЗаГод		= ЛистовЗаГод + 1;
									
									КассоваяКнига.Вывести(ОбластьМакетаШапка);
									КассоваяКнига.Присоединить(ОбластьМакетаШапка);
									ПриходРасходПоЛисту = Новый Соответствие();
									
								КонецЕсли;
								
							Исключение
								
								ЗаписьЖурналаРегистрации(НСтр("ru = 'Возникли проблемы с получением информации о текущем принтере'", ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
								
							КонецПопытки;
							
							КассоваяКнига.Вывести(ОбластьМакетаСтрока);
							счСтроки = счСтроки + 1;
							КассоваяКнига.Присоединить(ОбластьМакетаСтрока);
							
							// Заполним структуру итогов по листу.
							ПриходРасход = Неопределено;
							ПриходРасход = ПриходРасходПоЛисту.Получить(ВыборкаДокументы.Валюта);
							ПриходРасход = ?(ПриходРасход = Неопределено, Новый Структура("Приход,Расход",0,0), ПриходРасход);
							ПриходРасход.Приход = ПриходРасход.Приход + ВыборкаДокументы.Приход;
							ПриходРасход.Расход = ПриходРасход.Расход + ВыборкаДокументы.Расход;
							ПриходРасходПоЛисту.Вставить(ВыборкаДокументы.Валюта, ПриходРасход);
							
						КонецЦикла;
						
						// Если у нас день растянулся на несколько листов, тогда выведем итог по последнему листу.
						Если ЛистовЗаДень > 0 Тогда
							
							Для каждого ТекВалюта Из ПриходРасходПоЛисту Цикл
								
								Если Многовалютная Тогда
									ОбластьМакетаПеренос.Параметры.Валюта = " (" + ТекВалюта.Ключ + ")";
								КонецЕсли;
								
								ОбластьМакетаПеренос.Параметры.Заполнить(ТекВалюта.Значение);
								КассоваяКнига.Вывести(ОбластьМакетаПеренос);
								КассоваяКнига.Присоединить(ОбластьМакетаПеренос);
								
							КонецЦикла;
							
						КонецЕсли;
						
						// Составление надписи подвала для приходных и расходных ордеров.
						ЕстьПриходный = Ложь;
						ЕстьРасходный = Ложь; 
						
						Если ВыборкаДни.КоличествоПриходных = 0 Тогда
							ЕстьПриходный = Истина;
							ПриходныеПолучил = Символ(8211)+ " " + "приходных";
						ИначеЕсли ВыборкаДни.КоличествоПриходных = 1 Тогда
							ЕстьПриходный = Истина;
							ПриходныеПолучил = НСтр("ru = 'один приходный'");
						ИначеЕсли ВыборкаДни.КоличествоПриходных > 1 Тогда
							ЕстьПриходный = Истина;
							ПриходныеПолучил = НРег(ЧислоПрописью(ВыборкаДни.КоличествоПриходных,"НД=Ложь",",,,,,,,,0")) + "приходных";
						КонецЕсли; 
						Если ВыборкаДни.КоличествоРасходных = 0 Тогда
							ЕстьРасходный = Истина;
							РасходныеПолучил = Символ(8211)+ " " + "расходных";
						ИначеЕсли ВыборкаДни.КоличествоРасходных = 1 Тогда
							ЕстьРасходный = Истина;
							РасходныеПолучил = НСтр("ru = 'один расходный'");
						ИначеЕсли ВыборкаДни.КоличествоРасходных > 1 Тогда
							ЕстьРасходный = Истина;
							РасходныеПолучил = НРег(ЧислоПрописью(ВыборкаДни.КоличествоРасходных,"НД=Ложь",",,,,,,,,0")) + "расходных";
						КонецЕсли; 
						Если ЕстьПриходный И ЕстьРасходный Тогда    
							ВставкаИ = " "+ "и" +" ";
						Иначе
							ВставкаИ = "";
						КонецЕсли;
						
						ОбластьМакетаПодвал.Параметры.НадписьКолПриходныхРасходных = ПриходныеПолучил + ВставкаИ + РасходныеПолучил + " " + "получил.";
						
						// Выводя подвальные секции, проверим, не перескочили ли мы на следующую страницу.
						МассивПроверки = Новый Массив();
						
						Для Каждого СтрокаИтогиВалюты Из ВыборкаИтогиВалюты Цикл
							МассивПроверки.Добавить(ОбластьМакетаОборот);
							МассивПроверки.Добавить(ОбластьМакетаКонечныйОстаток);
						КонецЦикла;
						
						МассивПроверки.Добавить(ОбластьМакетаПодвал);
						
						// Вычислим, возможно это последний в месяце день или в году, тогда выведем количество листов.
						ПоследнийВМесяце = Ложь; ПоследнийВГоду = Ложь;
						
						Если счДеньГода = КоличествоДнейВГоду Тогда
							ПоследнийВГоду = Истина;
							МассивПроверки.Добавить(ОбластьМакетаЛистовЗаГод);
						КонецЕсли;
						
						Если счДеньМесяца = КоличествоДнейВМесяце Тогда
							ПоследнийВМесяце = Истина;
							МассивПроверки.Добавить(ОбластьМакетаЛистовЗаМесяц);
						КонецЕсли;
						
						Попытка
							РезультатПроверки = КассоваяКнига.ПроверитьВывод(МассивПроверки);
							Если НЕ РезультатПроверки Тогда
								НомерЛиста = НомерЛиста + 1;
								ЛистовЗаМесяц = ЛистовЗаМесяц + 1;
								ЛистовЗаГод = ЛистовЗаГод + 1;
							КонецЕсли;
						Исключение
							
							ЗаписьЖурналаРегистрации(НСтр("ru = 'Возникли проблемы с получением информации о текущем принтере'", ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
							
						КонецПопытки;
						
						// Выведем все обороты по валютам.
						Для Каждого СтрокаИтогиВалюты Из ВыборкаИтогиВалюты Цикл
							
							ОбластьМакетаОборот.Параметры.ПриходЗаДень = СтрокаИтогиВалюты.ПриходЗаДень;
							ОбластьМакетаОборот.Параметры.РасходЗаДень = СтрокаИтогиВалюты.РасходЗаДень;
							
							Если Многовалютная Тогда
								ОбластьМакетаОборот.Параметры.Валюта = " (" + СтрокаИтогиВалюты.Валюта + ")";
							КонецЕсли;
							
							КассоваяКнига.Вывести(ОбластьМакетаОборот);
							КассоваяКнига.Присоединить(ОбластьМакетаОборот);
							
						КонецЦикла;
						
						// Выведем все остатки на конец дня по валютам. 
						Для Каждого СтрокаИтогиВалюты Из ВыборкаИтогиВалюты Цикл
							
							ОбластьМакетаКонечныйОстаток.Параметры.ОстатокКонец = СтрокаИтогиВалюты.КонечныйОстаток;
							
							Если Многовалютная Тогда
								ОбластьМакетаКонечныйОстаток.Параметры.Валюта = " (" + СтрокаИтогиВалюты.Валюта + ")";
							КонецЕсли;
							
							КассоваяКнига.Вывести(ОбластьМакетаКонечныйОстаток);
							КассоваяКнига.Присоединить(ОбластьМакетаКонечныйОстаток);
							
						КонецЦикла;
						
						КассоваяКнига.Вывести(ОбластьМакетаПодвал);
						КассоваяКнига.Присоединить(ОбластьМакетаПодвал);
						
						// Если это последний лист в печати.
						Если Сч = Количество Тогда 
							
							Если Объект.Лист > 0 Тогда
								ПоследнийВГоду = НЕ (Объект.Лист = 1);
							Иначе
								ПоследнийВМесяце	= ЛОЖЬ;
								ПоследнийВГоду		= ЛОЖЬ;
							КонецЕсли;
							
							Если Объект.ПечатьОбложки Тогда
								
								// Печать обложки и титульного листа.
								ОбластьОбложка = МакетОбложки.ПолучитьОбласть("Обложка");
								ОбластьОбложка.Параметры.ПредставлениеОрганизации = НаименованиеПолноеОрганизации;
								ОбластьОбложка.Параметры.Организация = Объект.Организация;						
								ОбластьОбложка.Параметры.НадписьОбложка = " " + "на" + " " + ?(МесяцОтчета <> Неопределено, МесяцОтчета.Значение + " ", "") + Формат(Год(ВыборкаДни.Период),"ЧГ=0") + " г.";
								ОбластьОбложка.Параметры.КодОКПО = Объект.Организация.КодПоОКПО;	
								ДокументОбложка.Вывести(ОбластьОбложка);
								ДокументОбложка.ВывестиГоризонтальныйРазделительСтраниц();
								ДокументОбложка.Вывести(ОбластьОбложка);
								
								// Последний лист кассовой книги
								ДокументОбложка.ВывестиГоризонтальныйРазделительСтраниц();
								ОбластьПослДеньГода = МакетОбложки.ПолучитьОбласть("ПослДеньГода");
								ОбластьПослДеньГода.Параметры.ГлавныйБухгалтерПредставление = ГлавныйБухгалтер;
								ОбластьПослДеньГода.Параметры.ГлавныйБухгалтер = ГлавныйБухгалтер;						
								ОбластьПослДеньГода.Параметры.РуководительПредставление = Руководитель;
								ОбластьПослДеньГода.Параметры.Руководитель = Руководитель;						
								ОбластьПослДеньГода.Параметры.РуководительДолжность = ?(НЕ ЗначениеЗаполнено(Руководитель),"",Руководитель.Должность);
								ОбластьПослДеньГода.Параметры.ЛистовЗаГод = ЛистовЗаГод;
								ДокументОбложка.Вывести(ОбластьПослДеньГода);
								ДокументОбложка.ОтображатьСетку = Ложь;
								ДокументОбложка.ОтображатьЗаголовки = Ложь;
								ДокументОбложка.ТолькоПросмотр = Истина;
								
							КонецЕсли;
							
						КонецЕсли;
						
						Если ПоследнийВМесяце Тогда
							ОбластьМакетаЛистовЗаМесяц.Параметры.НадписьЛистовЗаМесяц = НСтр("ru ='Количество листов кассовой книги за месяц:'")
																								+ " " + ЛистовЗаМесяц;
							КассоваяКнига.Вывести(ОбластьМакетаЛистовЗаМесяц);
							КассоваяКнига.Присоединить(ОбластьМакетаЛистовЗаМесяц)
						КонецЕсли;
						
						Если ПоследнийВГоду Тогда
							ОбластьМакетаЛистовЗаГод.Параметры.НадписьЛистовЗаГод = НСтр("ru = 'Количество листов кассовой книги за год:'")
																							+ " " + ЛистовЗаГод;
							КассоваяКнига.Вывести(ОбластьМакетаЛистовЗаГод);
							КассоваяКнига.Присоединить(ОбластьМакетаЛистовЗаГод);
						КонецЕсли;
						
						// Сохраним значение с количеством листов.
						Если Объект.ПересчитыватьНомера Тогда
							ДеньЛиста = Номера.Добавить();
						Иначе
							ДеньЛиста = РегистрыСведений.НомераЛистовКассовойКниги.СоздатьМенеджерЗаписи();
						КонецЕсли;
						
						ДеньЛиста.Период = ВыборкаДни.Период;
						ДеньЛиста.КассаКомпании = Касса;
						ДеньЛиста.НомерЛиста = ЛистовЗаГод;
						
						Если Не Объект.ПересчитыватьНомера Тогда
							ДеньЛиста.Записать();
						КонецЕсли;
						
						// Переход на следующий день
						КассоваяКнига.ВывестиГоризонтальныйРазделительСтраниц();
						
						// Если номера пересчитываем, а дата начала еще не настала то необходимо очистить документ.
						Если Объект.ПересчитыватьНомера И ВыборкаДни.Период < НачалоДня(Объект.Период.ДатаНачала) Тогда
							КассоваяКнига.Очистить();
						КонецЕсли;
						
						НомерЛиста    = НомерЛиста + 1;
						ЛистовЗаМесяц = ЛистовЗаМесяц + 1;
						ЛистовЗаГод   = ЛистовЗаГод + 1;
						
					КонецЦикла; // По дням
					
					ЛистовЗаМесяц = 1;
					
				КонецЦикла; // По месяцам 
				
				ЛистовЗаГод = 1;
				НомерЛиста = 1;
				
				// Сохраним созданный набор записей.
				Если Объект.ПересчитыватьНомера Тогда
					Номера.Записать();
				КонецЕсли;
				
			КонецЦикла; // По годам
			
		КонецЦикла;
		
	Иначе
		
		// Получим макеты для результата и обложки.
		МакетОтчета = ПолучитьМакет("КассоваяКнига");
		МакетОбложки = ПолучитьМакет("Обложка");
		
		Многовалютная = Объект.КассаКомпании.МноговалютнаяКасса;
		НомерЛиста = Неопределено;
		НачалоПериода = НачалоДня(Объект.Период.ДатаНачала);
		КонецПериода = КонецДня(Объект.Период.ДатаОкончания);
		
		Если Объект.ПересчитыватьНомера Тогда
			НачалоПериода = НачалоГода(НачалоПериода);
		КонецЕсли;
		
		// Получим итоги по дням
		ЗапросИтоги = Новый Запрос();
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредстваКомпанииОстаткиИОбороты.Период КАК Период,
		|	ДенежныеСредстваКомпанииОстаткиИОбороты.Валюта КАК Валюта,
		|	ДенежныеСредстваКомпанииОстаткиИОбороты.СуммаНачальныйОстаток КАК НачальныйОстаток,
		|	ДенежныеСредстваКомпанииОстаткиИОбороты.СуммаКонечныйОстаток КАК КонечныйОстаток,
		|	ДенежныеСредстваКомпанииОстаткиИОбороты.СуммаПриход КАК ПриходЗаДень,
		|	ДенежныеСредстваКомпанииОстаткиИОбороты.СуммаРасход КАК РасходЗаДень
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваКомпании.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, День, Движения, СтруктурнаяЕдиница = &КассаКомпании) КАК ДенежныеСредстваКомпанииОстаткиИОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	Валюта
		|ИТОГИ
		|	СУММА(НачальныйОстаток),
		|	СУММА(КонечныйОстаток),
		|	СУММА(ПриходЗаДень),
		|	СУММА(РасходЗаДень)
		|ПО
		|	Период ПЕРИОДАМИ(ДЕНЬ, , ),
		|	Валюта";
		
		ЗапросИтоги.Текст = ТекстЗапроса;
		ЗапросИтоги.УстановитьПараметр("ДатаНачала",НачалоПериода);
		ЗапросИтоги.УстановитьПараметр("ДатаКонца",КонецПериода);
		ЗапросИтоги.УстановитьПараметр("КассаКомпании",Объект.КассаКомпании);
		ВыборкаИтогиДни = ЗапросИтоги.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		// Получим выборку операций по кассе за период.
		ЗапросДни = Новый Запрос();
		ЗапросДни.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ДенежныеСредстваКомпании.Период, ГОД) КАК ГОД,
		|	НАЧАЛОПЕРИОДА(ДенежныеСредстваКомпании.Период, МЕСЯЦ) КАК МЕСЯЦ,
		|	НАЧАЛОПЕРИОДА(ДенежныеСредстваКомпании.Период, ДЕНЬ) КАК Период,
		|	ДенежныеСредстваКомпании.Период КАК Секунда,
		|	ДенежныеСредстваКомпании.Регистратор КАК Документ,
		|	ДенежныеСредстваКомпании.Регистратор.Номер КАК НомерДок,
		|	ВЫБОР
		|		КОГДА ДенежныеСредстваКомпании.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА &Принято
		|		КОГДА ДенежныеСредстваКомпании.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
		|			ТОГДА &Выдано
		|		ИНАЧЕ ДенежныеСредстваКомпании.СтатьяДДС
		|	КОНЕЦ КАК СтрокаДДС,
		|	ДенежныеСредстваКомпании.Регистратор.Контрагент КАК Контрагент,
		|	ДенежныеСредстваКомпании.Регистратор.Основание КАК Основание,
		|	ДенежныеСредстваКомпании.Регистратор.ВалютаДокумента КАК Валюта,
		|	ДенежныеСредстваКомпании.СтатьяДДС.КоррСчет КАК КоррСчет,
		|	ВЫБОР
		|		КОГДА ДенежныеСредстваКомпании.ВидДвижения = &Приход
		|			ТОГДА ДенежныеСредстваКомпании.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Приход,
		|	ВЫБОР
		|		КОГДА ДенежныеСредстваКомпании.ВидДвижения = &Расход
		|			ТОГДА ДенежныеСредстваКомпании.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Расход,
		|	ВЫБОР
		|		КОГДА ДенежныеСредстваКомпании.ВидДвижения = &Приход
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоПриходных,
		|	ВЫБОР
		|		КОГДА ДенежныеСредстваКомпании.ВидДвижения = &Расход
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоРасходных
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваКомпании КАК ДенежныеСредстваКомпании
		|ГДЕ
		|	ДенежныеСредстваКомпании.СтруктурнаяЕдиница = &КассаКомпании
		|	И ДенежныеСредстваКомпании.Период МЕЖДУ &ДатаНачала И &ДатаКонца
		|	И (НЕ ДенежныеСредстваКомпании.Регистратор ССЫЛКА Документ.ПереоценкаВалютныхСредств)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГОД,
		|	МЕСЯЦ,
		|	Период,
		|	Секунда
		|ИТОГИ
		|	СУММА(КоличествоПриходных),
		|	СУММА(КоличествоРасходных)
		|ПО
		|	ГОД,
		|	МЕСЯЦ,
		|	Период";
		
		ЗапросДни.УстановитьПараметр("ДатаНачала",НачалоПериода);
		ЗапросДни.УстановитьПараметр("ДатаКонца",КонецПериода);
		ЗапросДни.УстановитьПараметр("КассаКомпании",Объект.КассаКомпании);
		ЗапросДни.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
		ЗапросДни.УстановитьПараметр("Расход",ВидДвиженияНакопления.Расход);	
		ЗапросДни.УстановитьПараметр("Принято", НСтр("ru = 'Принято от'"));
		ЗапросДни.УстановитьПараметр("Выдано", НСтр("ru = 'Выдано'"));

		// Получим нужные области макета.
		ИмяОбласти = ?(Объект.ВыводитьОснования,"Широкая","") + ?(Многовалютная,"Многовалютная","");
		ОбластьМакетаВкладнойЛист 	 = МакетОтчета.ПолучитьОбласть("ВкладнойЛист|Отчет");
		ОбластьМакетаШапка			 = МакетОтчета.ПолучитьОбласть("Шапка|Отчет");
		ОбластьМакетаОстатокНаНД	 = МакетОтчета.ПолучитьОбласть("ОстатокНаНД|Отчет");
		ОбластьМакетаСтрока			 = МакетОтчета.ПолучитьОбласть("Строка" + ИмяОбласти + "|Отчет");
		ОбластьМакетаПеренос		 = МакетОтчета.ПолучитьОбласть("Перенос|Отчет");
		ОбластьМакетаОборот			 = МакетОтчета.ПолучитьОбласть("Оборот|Отчет");
		ОбластьМакетаОборотРуб		 = МакетОтчета.ПолучитьОбласть("ОборотРуб|Отчет");	
		ОбластьМакетаОборотВал		 = МакетОтчета.ПолучитьОбласть("ОборотВал|Отчет");		
		ОбластьМакетаКонечныйОстаток = МакетОтчета.ПолучитьОбласть("КонечныйОстаток|Отчет");
		ОбластьМакетаПодвал			 = МакетОтчета.ПолучитьОбласть("Подвал|Отчет");
		ОбластьМакетаЛистовЗаМесяц	 = МакетОтчета.ПолучитьОбласть("ЛистовЗаМесяц|Отчет");
		ОбластьМакетаЛистовЗаГод	 = МакетОтчета.ПолучитьОбласть("ЛистовЗаГод|Отчет");
		ОбластьМакетаВТомЧисле		 = МакетОтчета.ПолучитьОбласть("ВТомЧисле|Отчет");	
		ОбластьМакетаОстаток		 = МакетОтчета.ПолучитьОбласть("Остаток|Отчет");		
		ОбластьМакетаВалОстаток		 = МакетОтчета.ПолучитьОбласть("ВалОстаток|Отчет");			
		
		// Заполним постоянные параметры областей.
		СтруктураСведений = РегистрыСведений.СведенияКомпании.ПолучитьПоследнее(Объект.Период.ДатаОкончания,Новый Структура("Организация,Объект",Объект.Организация,Перечисления.ВидыОбъектовСведений.ГлавныйБухгалтер));
		ГлавныйБухгалтер = СтруктураСведений.Значение;
		СтруктураСведений = РегистрыСведений.СведенияКомпании.ПолучитьПоследнее(Объект.Период.ДатаОкончания,Новый Структура("Организация,Объект",Объект.Организация,Перечисления.ВидыОбъектовСведений.Кассир));
		Кассир = СтруктураСведений.Значение;
		СтруктураСведений = РегистрыСведений.СведенияКомпании.ПолучитьПоследнее(Объект.Период.ДатаОкончания,Новый Структура("Организация,Объект",Объект.Организация,Перечисления.ВидыОбъектовСведений.Руководитель));
		Руководитель = СтруктураСведений.Значение;
		ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтер = ГлавныйБухгалтер;
		ОбластьМакетаПодвал.Параметры.Кассир = Кассир;	
		
		счИтоги = 0;
		РезультатЗапроса = ЗапросДни.Выполнить();
		ВыборкаГоды = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Год");
		Количество = РезультатЗапроса.Выбрать().Количество();
		Сч = 0;
		ОтборНомера = Новый Структура("КассаКомпании",Объект.КассаКомпании);
		
		Пока ВыборкаГоды.Следующий() Цикл
			
			Сч = Сч + 1;
			ВыборкаМесяца = ВыборкаГоды.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Месяц");
			счДеньГода = 0; КоличествоДнейВГоду = ВыборкаГоды.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период").Количество();		
			
			Пока ВыборкаМесяца.Следующий() Цикл
				
				Сч = Сч + 1;
				ВыборкаДни = ВыборкаМесяца.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
				счДеньМесяца = 0; КоличествоДнейВМесяце = ВыборкаДни.Количество();
				
				Пока ВыборкаДни.Следующий() Цикл
					
					Сч = Сч + 1;
					
					// Для первого дня необходимо вывести номер листа, следующий за сохраненным номером листа.
					Если НомерЛиста = Неопределено И Объект.ПересчитыватьНомера Тогда
						
						НомерЛиста = 1;
						ЛистовЗаМесяц = 1;
						ЛистовЗаГод = 1;
						
						// Создадим и очистим весь набор записей.
						Номера = РегистрыСведений.НомераЛистовКассовойКниги.СоздатьНаборЗаписей();
						Номера.Отбор.КассаКомпании.Установить(Объект.КассаКомпании);
						Номера.Прочитать();
						Номера.Очистить();
						
					КонецЕсли;
					
					Если НомерЛиста = Неопределено Тогда
						ЗапросНомера = Новый Запрос();
						ЗапросНомера.Текст = "
						|ВЫБРАТЬ РАЗРЕШЕННЫЕ
						|	ЕСТЬNULL(НомерПоследнегоЛистаПредМесяц.НомерЛиста, 1) КАК НомерПоследнегоЛистаЗаПредМесяц,
						|	НомерПоследнегоЛистаЗаЭтотМесяц.НомерЛиста КАК НомерПоследнегоЛистаЗаЭтотМесяц
						|ИЗ
						|	РегистрСведений.НомераЛистовКассовойКниги.СрезПоследних(
						|		&НачалоМесяца,
						|		КассаКомпании = &КассаКомпании
						|		    И НАЧАЛОПЕРИОДА(Период, ГОД) = &НачалоГода) КАК НомерПоследнегоЛистаПредМесяц
						|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.НомераЛистовКассовойКниги.СрезПоследних(
						|		&ДатаНач,
						|		КассаКомпании = &КассаКомпании
						|		    И НАЧАЛОПЕРИОДА(Период, ГОД) = &НачалоГода) КАК НомерПоследнегоЛистаЗаЭтотМесяц
						|		ПО (ИСТИНА)
						|";
						ЗапросНомера.УстановитьПараметр("КассаКомпании", Объект.КассаКомпании);
						ЗапросНомера.УстановитьПараметр("НачалоГода", ВыборкаГоды.Год);
						ЗапросНомера.УстановитьПараметр("НачалоМесяца", Новый Граница(ВыборкаМесяца.Месяц,ВидГраницы.Исключая));
						ЗапросНомера.УстановитьПараметр("ДатаНач", Новый Граница(ВыборкаДни.Период,ВидГраницы.Исключая));
						ВыборкаНомера = ЗапросНомера.Выполнить().Выбрать();
						
						Если ВыборкаНомера.Количество() = 0 Тогда
							НомерЛиста = 1;
							ЛистовЗаМесяц = 1;
							ЛистовЗаГод = 1;
						Иначе
							ВыборкаНомера.Следующий();
							НомерЛиста = ВыборкаНомера.НомерПоследнегоЛистаЗаЭтотМесяц + 1;
							ЛистовЗаГод = НомерЛиста;
							ЛистовЗаМесяц = ВыборкаНомера.НомерПоследнегоЛистаЗаЭтотМесяц - ВыборкаНомера.НомерПоследнегоЛистаЗаПредМесяц + 1;
						КонецЕсли;
						
					КонецЕсли;
					
					счДеньГода = счДеньГода + 1;
					счДеньМесяца = счДеньМесяца + 1;
					
					// Выведем параметры "дня" 
					ОбластьМакетаВкладнойЛист.Параметры.ТекстНомерЛиста = НомерЛиста;
					ОбластьМакетаВкладнойЛист.Параметры.ДатаКассы       = Формат(ВыборкаДни.Период,"ДЛФ=DD"); 
					КассоваяКнига.Вывести(ОбластьМакетаВкладнойЛист);
					КассоваяКнига.Присоединить(ОбластьМакетаВкладнойЛист);
					КассоваяКнига.Вывести(ОбластьМакетаШапка);
					КассоваяКнига.Присоединить(ОбластьМакетаШапка);
					
					// Перейдем к следующей итоговой записи, совпадающей с этим днем и выведем все валюты.
					ВыборкаИтогиВалюты = ВыборкаИтогиДни.Строки[счИтоги].Строки;
					счИтоги = счИтоги + 1;
					
					Для Каждого СтрокаИтогиВалюты Из ВыборкаИтогиВалюты Цикл
						ОбластьМакетаОстатокНаНД.Параметры.НачальныйОстаток = СтрокаИтогиВалюты.НачальныйОстаток;
						Если Многовалютная Тогда
							ОбластьМакетаОстатокНаНД.Параметры.Валюта = " (" + СтрокаИтогиВалюты.Валюта + ")";
						КонецЕсли;
						КассоваяКнига.Вывести(ОбластьМакетаОстатокНаНД);
						КассоваяКнига.Присоединить(ОбластьМакетаОстатокНаНД);
					КонецЦикла;
					
					// Начинаем выводить документы дня
					ПриходРасходПоЛисту = Новый Соответствие();
					ЛистовЗаДень = 0;
					ВыборкаДокументы = ВыборкаДни.Выбрать();
					счСтроки = 1;
					
					Пока ВыборкаДокументы.Следующий() Цикл
						
						Сч = Сч + 1;
						ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаДокументы);
						
						КонтрагентЗначение = ВыборкаДокументы.Контрагент;
						Если ТипЗнч(КонтрагентЗначение) = Тип("СправочникСсылка.Контрагенты") 
						   И ВыборкаДокументы.Контрагент.ФормаСобственности = Перечисления.ФормыСобственности.ЧастноеЛицо Тогда
							// Просклоняем представление контрагента
							КонтрагентПол = ПолКакЧисло(ВыборкаДокументы.Контрагент.Пол);
							КонтрагентЗначение = КонтрагентЗначение.НаименованиеПолное;
							Если ВыборкаДокументы.СтрокаДДС = ЗапросДни.Параметры.Принято Тогда
								КонтрагентЗначение = СклонениеПредставленийОбъектов.ПросклонятьФИО(КонтрагентЗначение, 2, 
									ВыборкаДокументы.Контрагент, ?(ЗначениеЗаполнено(КонтрагентПол), КонтрагентПол, Неопределено));		
							ИначеЕсли ВыборкаДокументы.СтрокаДДС = ЗапросДни.Параметры.Выдано Тогда
								КонтрагентЗначение = СклонениеПредставленийОбъектов.ПросклонятьФИО(КонтрагентЗначение, 3, 
									ВыборкаДокументы.Контрагент, ?(ЗначениеЗаполнено(КонтрагентПол), КонтрагентПол, Неопределено));	
							Иначе
								// Если не приход и не расход, то оставляем как есть
								Если ВыборкаДокументы.СтрокаДДС.ВидДвижения = Перечисления.ВидыДвижений.Приход Тогда
									КонтрагентЗначение = СклонениеПредставленийОбъектов.ПросклонятьФИО(КонтрагентЗначение, 2, 
										ВыборкаДокументы.Контрагент, ?(ЗначениеЗаполнено(КонтрагентПол), КонтрагентПол, Неопределено));	
								ИначеЕсли ВыборкаДокументы.СтрокаДДС.ВидДвижения = Перечисления.ВидыДвижений.Расход Тогда
									КонтрагентЗначение = СклонениеПредставленийОбъектов.ПросклонятьФИО(КонтрагентЗначение, 3, 
										ВыборкаДокументы.Контрагент, ?(ЗначениеЗаполнено(КонтрагентПол), КонтрагентПол, Неопределено));	
								КонецЕсли;
							КонецЕсли;	
						КонецЕсли;
						
						ОбластьМакетаСтрока.Параметры.Контрагент = Строка(ВыборкаДокументы.СтрокаДДС) 
							+ ?(ЗначениеЗаполнено(КонтрагентЗначение), " " + КонтрагентЗначение, "")
							+ ?(Объект.ВыводитьОснования, " " + ВыборкаДокументы.Основание, "");
						ОбластьМакетаСтрока.Параметры.НомерДок = УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(ВыборкаДокументы.Документ);
						
						Если Многовалютная Тогда
							ИмяПараметра = "Валюта" + ?(ВыборкаДокументы.Приход <> 0, "Приход","Расход");
							ОбластьМакетаСтрока.Параметры[ИмяПараметра] = ВыборкаДокументы.Валюта;
						КонецЕсли;
						
						// Если не хватает для вывода места, переносим на следующий лист,
						// увеличивая номер листа и обнуляя итоги по листу.
						МассивПроверки = Новый Массив();
						МассивПроверки.Добавить(ОбластьМакетаСтрока);
						
						Для к = 1 По ПриходРасходПоЛисту.Количество() Цикл
							МассивПроверки.Добавить(ОбластьМакетаПеренос);
						КонецЦикла;
						
						Если ВыборкаДокументы.Количество() = счСтроки Тогда
							МассивПроверки.Добавить(ОбластьМакетаПодвал);
						КонецЕсли;
						
						Попытка
							
							РезультатПроверки = КассоваяКнига.ПроверитьВывод(МассивПроверки);
							
							// Проверим, помещаются ли на странице.
							Если НЕ РезультатПроверки Тогда
								
								Для Каждого ТекВалюта Из ПриходРасходПоЛисту Цикл
									Если Многовалютная Тогда
										ОбластьМакетаПеренос.Параметры.Валюта = " (" + ТекВалюта.Ключ + ")";
									КонецЕсли;
									ОбластьМакетаПеренос.Параметры.Заполнить(ТекВалюта.Значение);
									КассоваяКнига.Вывести(ОбластьМакетаПеренос);
									КассоваяКнига.Присоединить(ОбластьМакетаПеренос);
								КонецЦикла;
								
								КассоваяКнига.ВывестиГоризонтальныйРазделительСтраниц();
								НомерЛиста    = НомерЛиста + 1;
								ЛистовЗаДень  = ЛистовЗаДень + 1;
								ЛистовЗаМесяц = ЛистовЗаМесяц + 1;
								ЛистовЗаГод   = ЛистовЗаГод + 1;
								КассоваяКнига.Вывести(ОбластьМакетаШапка);
								КассоваяКнига.Присоединить(ОбластьМакетаШапка);
								ПриходРасходПоЛисту = Новый Соответствие();
								
							КонецЕсли;
							
						Исключение
							
							ЗаписьЖурналаРегистрации(НСтр("ru = 'Возникли проблемы с получением информации о текущем принтере'", ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
							
						КонецПопытки;
						
						КассоваяКнига.Вывести(ОбластьМакетаСтрока);
						КассоваяКнига.Присоединить(ОбластьМакетаСтрока);
						счСтроки = счСтроки + 1;
						
						// Заполним структуру итогов по листу.
						ПриходРасход = Неопределено;
						ПриходРасход = ПриходРасходПоЛисту.Получить(ВыборкаДокументы.Валюта);
						ПриходРасход = ?(ПриходРасход = Неопределено, Новый Структура("Приход,Расход",0,0), ПриходРасход);
						ПриходРасход.Приход = ПриходРасход.Приход + ВыборкаДокументы.Приход;
						ПриходРасход.Расход = ПриходРасход.Расход + ВыборкаДокументы.Расход;
						ПриходРасходПоЛисту.Вставить(ВыборкаДокументы.Валюта, ПриходРасход);
					КонецЦикла; // По документам 
					
					// Если у нас день растянулся на несколько листов, тогда выведем итог по последнему листу.
					Если ЛистовЗаДень > 0 Тогда
						
						Для каждого ТекВалюта Из ПриходРасходПоЛисту Цикл
							
							Если Многовалютная Тогда
								ОбластьМакетаПеренос.Параметры.Валюта = " (" + ТекВалюта.Ключ + ")";
							КонецЕсли;
							
							ОбластьМакетаПеренос.Параметры.Заполнить(ТекВалюта.Значение);
							КассоваяКнига.Вывести(ОбластьМакетаПеренос);
							КассоваяКнига.Присоединить(ОбластьМакетаПеренос);
							
						КонецЦикла;
						
					КонецЕсли; 
					
					// Составление надписи подвала для приходных и расходных ордеров.
					ЕстьПриходный = Ложь;
					ЕстьРасходный = Ложь;
					
					Если ВыборкаДни.КоличествоПриходных = 0 Тогда
						ЕстьПриходный = Истина;
						ПриходныеПолучил = Символ(8211)+ " " + "приходных";
					ИначеЕсли ВыборкаДни.КоличествоПриходных = 1 Тогда
						ЕстьПриходный = Истина;
						ПриходныеПолучил = НСтр("ru = 'один приходный'");
					ИначеЕсли ВыборкаДни.КоличествоПриходных > 1 Тогда
						ЕстьПриходный = Истина;
						ПриходныеПолучил = НРег(ЧислоПрописью(ВыборкаДни.КоличествоПриходных,"НД=Ложь",",,,,,,,,0")) + "приходных";
					КонецЕсли;
					
					Если ВыборкаДни.КоличествоРасходных = 0 Тогда
						ЕстьРасходный = Истина;
						РасходныеПолучил = Символ(8211)+ " " + "расходных";
					ИначеЕсли ВыборкаДни.КоличествоРасходных = 1 Тогда
						ЕстьРасходный = Истина;
						РасходныеПолучил = НСтр("ru = 'один расходный'");
					ИначеЕсли ВыборкаДни.КоличествоРасходных > 1 Тогда
						ЕстьРасходный = Истина;
						РасходныеПолучил = НРег(ЧислоПрописью(ВыборкаДни.КоличествоРасходных,"НД=Ложь",",,,,,,,,0")) + "расходных";
					КонецЕсли;
					
					Если ЕстьПриходный И ЕстьРасходный Тогда    
						ВставкаИ = " " + "и" + " ";
					Иначе
						ВставкаИ = "";
					КонецЕсли;
					
					ОбластьМакетаПодвал.Параметры.НадписьКолПриходныхРасходных = ПриходныеПолучил + ВставкаИ + РасходныеПолучил 
																					+ " " + "получил.";
					
					// Выводя подвальные секции, проверим, не перескочили ли мы на следующую страницу.
					МассивПроверки = Новый Массив();
					
					Для Каждого СтрокаИтогиВалюты Из ВыборкаИтогиВалюты Цикл
						МассивПроверки.Добавить(ОбластьМакетаОборот);					
						МассивПроверки.Добавить(ОбластьМакетаКонечныйОстаток);								
					КонецЦикла;
					
					МассивПроверки.Добавить(ОбластьМакетаПодвал);
					
					// Вычислим, возможно это последний в месяце день или в году, тогда выведем количество листов.
					ПоследнийВМесяце = Ложь; ПоследнийВГоду = Ложь;
					Если счДеньГода = КоличествоДнейВГоду Тогда
						ПоследнийВГоду = Истина;
						МассивПроверки.Добавить(ОбластьМакетаЛистовЗаГод);
					КонецЕсли;
					Если счДеньМесяца = КоличествоДнейВМесяце Тогда
						ПоследнийВМесяце = Истина;
						МассивПроверки.Добавить(ОбластьМакетаЛистовЗаМесяц);
					КонецЕсли;
					
					Попытка
						
						РезультатПроверки = КассоваяКнига.ПроверитьВывод(МассивПроверки);
						
						Если НЕ РезультатПроверки Тогда
							НомерЛиста 		= НомерЛиста + 1;
							ЛистовЗаМесяц 	= ЛистовЗаМесяц + 1;
							ЛистовЗаГод 	= ЛистовЗаГод + 1;
						КонецЕсли;
						
					Исключение
						ЗаписьЖурналаРегистрации(НСтр("ru = 'Возникли проблемы с получением информации о текущем принтере'", ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					КонецПопытки;
					
					// Выведем все обороты по валютам.
					Для Каждого СтрокаИтогиВалюты Из ВыборкаИтогиВалюты Цикл
						
						ОбластьМакетаОборот.Параметры.ПриходЗаДень = СтрокаИтогиВалюты.ПриходЗаДень;
						ОбластьМакетаОборот.Параметры.РасходЗаДень = СтрокаИтогиВалюты.РасходЗаДень;
						
						Если Многовалютная Тогда
							ОбластьМакетаОборот.Параметры.Валюта = " (" + СтрокаИтогиВалюты.Валюта + ")";
						КонецЕсли;
						
						КассоваяКнига.Вывести(ОбластьМакетаОборот);
						КассоваяКнига.Присоединить(ОбластьМакетаОборот);
						
					КонецЦикла;
					
					// Выведем все остатки на конец дня по валютам.
					Для Каждого СтрокаИтогиВалюты Из ВыборкаИтогиВалюты Цикл
						
						ОбластьМакетаКонечныйОстаток.Параметры.ОстатокКонец = СтрокаИтогиВалюты.КонечныйОстаток;
						
						Если Многовалютная Тогда
							ОбластьМакетаКонечныйОстаток.Параметры.Валюта = " (" + СтрокаИтогиВалюты.Валюта + ")";
						КонецЕсли;
						
						КассоваяКнига.Вывести(ОбластьМакетаКонечныйОстаток);
						КассоваяКнига.Присоединить(ОбластьМакетаКонечныйОстаток);
						
					КонецЦикла;
					
					КассоваяКнига.Вывести(ОбластьМакетаПодвал);
					КассоваяКнига.Присоединить(ОбластьМакетаПодвал);
					
					// Если это последний лист в печати.
					Если Сч = Количество Тогда
						
						Если Объект.Лист > 0 Тогда
							ПоследнийВГоду = НЕ (Объект.Лист = 1);
						Иначе
							ПоследнийВМесяце = ЛОЖЬ;
							ПоследнийВГоду   = ЛОЖЬ;
						КонецЕсли;
						
						Если Объект.ПечатьОбложки Тогда
							
							// Печать обложки и титульного листа.
							ОбластьОбложка = МакетОбложки.ПолучитьОбласть("Обложка");
							ОбластьОбложка.Параметры.ПредставлениеОрганизации = НаименованиеПолноеОрганизации;
							ОбластьОбложка.Параметры.Организация = Объект.Организация;
							ОбластьОбложка.Параметры.НадписьОбложка = " на " + ?(МесяцОтчета <> Неопределено, МесяцОтчета.Значение + " ", "") + Формат(Год(ВыборкаДни.Период),"ЧГ=0") + " г.";
							ОбластьОбложка.Параметры.КодОКПО = Объект.Организация.КодПоОКПО;	
							ДокументОбложка.Вывести(ОбластьОбложка);
							ДокументОбложка.ВывестиГоризонтальныйРазделительСтраниц();
							ДокументОбложка.Вывести(ОбластьОбложка);
							
							// Последний лист кассовой книги.
							ДокументОбложка.ВывестиГоризонтальныйРазделительСтраниц();
							ОбластьПослДеньГода = МакетОбложки.ПолучитьОбласть("ПослДеньГода");
							ОбластьПослДеньГода.Параметры.ГлавныйБухгалтерПредставление = ГлавныйБухгалтер;
							ОбластьПослДеньГода.Параметры.ГлавныйБухгалтер = ГлавныйБухгалтер;
							ОбластьПослДеньГода.Параметры.РуководительПредставление = Руководитель;
							ОбластьПослДеньГода.Параметры.Руководитель = Руководитель;
							ОбластьПослДеньГода.Параметры.РуководительДолжность = ?(НЕ ЗначениеЗаполнено(Руководитель),"",Руководитель.Должность);
							ОбластьПослДеньГода.Параметры.ЛистовЗаГод = ЛистовЗаГод;
							ДокументОбложка.Вывести(ОбластьПослДеньГода);
							ДокументОбложка.ОтображатьСетку = Ложь;
							ДокументОбложка.ОтображатьЗаголовки = Ложь;
							ДокументОбложка.ТолькоПросмотр = Истина;
							
						КонецЕсли;
					КонецЕсли;
					
					Если ПоследнийВМесяце Тогда
						ОбластьМакетаЛистовЗаМесяц.Параметры.НадписьЛистовЗаМесяц = НСтр("ru = 'Количество листов кассовой книги за месяц:'") + " " + ЛистовЗаМесяц;
						КассоваяКнига.Вывести(ОбластьМакетаЛистовЗаМесяц);
						КассоваяКнига.Присоединить(ОбластьМакетаЛистовЗаМесяц);
					КонецЕсли;
					
					Если ПоследнийВГоду Тогда
						ОбластьМакетаЛистовЗаГод.Параметры.НадписьЛистовЗаГод = НСтр("ru = 'Количество листов кассовой книги за год:'") + " " + ЛистовЗаГод;
						КассоваяКнига.Вывести(ОбластьМакетаЛистовЗаГод);
						КассоваяКнига.Присоединить(ОбластьМакетаЛистовЗаГод);
					КонецЕсли;
					
					// Сохраним значение с количеством листов.
					Если Объект.ПересчитыватьНомера Тогда
						ДеньЛиста = Номера.Добавить();
					Иначе
						ДеньЛиста = РегистрыСведений.НомераЛистовКассовойКниги.СоздатьМенеджерЗаписи();
					КонецЕсли;
					
					ДеньЛиста.Период = ВыборкаДни.Период;
					ДеньЛиста.КассаКомпании = Объект.КассаКомпании;
					ДеньЛиста.НомерЛиста = ЛистовЗаГод;
					
					Если Не Объект.ПересчитыватьНомера Тогда
						ДеньЛиста.Записать();
					КонецЕсли;
					
					// Переход на следующий день.
					КассоваяКнига.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Если номера пересчитываем, а дата начала еще не настала то необходимо очистить документ.
					Если Объект.ПересчитыватьНомера И ВыборкаДни.Период < НачалоДня(Объект.Период.ДатаНачала) Тогда
						КассоваяКнига.Очистить();
					КонецЕсли;
					
					НомерЛиста    = НомерЛиста + 1;
					ЛистовЗаМесяц = ЛистовЗаМесяц + 1;
					ЛистовЗаГод   = ЛистовЗаГод + 1;
					
				КонецЦикла; // По дням
				
				ЛистовЗаМесяц = 1;
				
			КонецЦикла; // По месяцам 
			
			ЛистовЗаГод = 1;
			НомерЛиста = 1;
			
			// Сохраним созданный набор записей.
			Если Объект.ПересчитыватьНомера Тогда
				Номера.Записать();
			КонецЕсли;
			
		КонецЦикла; // По годам
		
	КонецЕсли;
	
	Если Объект.ПечатьОбложки Тогда
		ПараметрыПечати.Вставить("ДокументОбложка", ДокументОбложка);
	КонецЕсли;
	
	Возврат КассоваяКнига;
	
КонецФункции // ПечатьКассоваяКнига()

#КонецОбласти

Функция ПолКакЧисло(Пол)
	
	Если Пол = Перечисления.ПолФизическихЛиц.Женский Тогда
		Возврат 2;
	ИначеЕсли Пол = Перечисления.ПолФизическихЛиц.Мужской Тогда
		Возврат 1;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли