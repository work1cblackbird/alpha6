
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполним список контактной информации
	Контакты     = Новый Массив();
	Сайты        = Новый Массив();
	ГрафикРаботы = "";
	ЦентрМониторингаПереопределяемый.ПриПолученииКонтактовСлужбыПоддержки(ГрафикРаботы, Контакты, Сайты);
	
	// Выводим график работы
	Если ПустаяСтрока(ГрафикРаботы) Тогда
		ЭтотОбъект.Элементы.ГрафикРаботы.Видимость = Ложь;
	Иначе
		ЭтотОбъект.Элементы.ГрафикРаботы.Заголовок = ГрафикРаботы;
	КонецЕсли;
	
	// Созданим элементы контактной информации
	СоздатьЭлементыКонтактнойИнформации(Контакты, Сайты);
	
	// Заполним сведения о программном продукте
	ЭтотОбъект.ПрограммныйПродукт = Метаданные.Синоним;
	ЭтотОбъект.ВерсияПродукта     = Метаданные.Версия;
	СистИнфо = Новый СистемнаяИнформация;
	ЭтотОбъект.ВерсияПлатформы    = СистИнфо.ВерсияПриложения;
	ЭтотОбъект.ИдентификаторБазы  = ЦентрМониторингаСлужебный.ПолучитьПараметрыЦентраМониторингаВнешнийВызов(Новый Структура("ИдентификаторИнформационнойБазы")).ИдентификаторИнформационнойБазы;
	
	// Проверяем регистрационную информацию
	ЭтотОбъект.Элементы.ГруппаРегистрацияПродукта.Видимость = НЕ ЦентрМониторингаОтраслевой.РегистрационныеДанныеЗаполнены(ЭтотОбъект.РегНомер, ЭтотОбъект.ИНН);
	ЭтотОбъект.Элементы.РегНомер.Видимость = НЕ ЭтотОбъект.Элементы.ГруппаРегистрацияПродукта.Видимость;
	ЭтотОбъект.Элементы.ИНН     .Видимость = НЕ ЭтотОбъект.Элементы.ГруппаРегистрацияПродукта.Видимость;
	
	// Возможность управлять идентификатором и служебными командами есть только у админа
	ЭтотОбъект.Элементы.ВерсияПродуктаКонтекстноеМенюГруппа.Видимость = РольДоступна("ПолныеПрава");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПослеРегистрацииПродукта(Результат, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Элементы.ГруппаРегистрацияПродукта.Видимость = НЕ ЦентрМониторингаОтраслевой.РегистрационныеДанныеЗаполнены(ЭтотОбъект.РегНомер, ЭтотОбъект.ИНН);
	ЭтотОбъект.Элементы.РегНомер.Видимость = НЕ ЭтотОбъект.Элементы.ГруппаРегистрацияПродукта.Видимость;
	ЭтотОбъект.Элементы.ИНН     .Видимость = НЕ ЭтотОбъект.Элементы.ГруппаРегистрацияПродукта.Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьПродукт(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПослеРегистрацииПродукта", ЭтотОбъект);
	ОткрытьФорму("Обработка.ПоддержкаОтраслевыхРешений.Форма.РегистрационнаяАнкета",,,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СайтНажатие(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ПослеСайтНажатие", ЭтотОбъект);
	НачатьЗапускПриложения(Оповещение, Элемент.Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПродуктаОткрытие(Элемент, СтандартнаяОбработка)
	
	Если НЕ Элементы.ВерсияПродуктаКонтекстноеМенюГруппа.Видимость Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = ЛОЖЬ;
	
	Оповещение = Новый ОписаниеОповещения(
	    "Подключаемый_ПередИзменитьИдентификатор",
	    ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru = 'Изменение может привести к нарушению работы системы.
                              |Продолжить?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, ЛОЖЬ);
	
КонецПроцедуры

&НаСервере
Функция СохранитьПакетНаСервере(Ошибка=ЛОЖЬ)
	
	УстановитьПривилегированныйРежим(ИСТИНА);
	
	ПараметрыЦентраМониторинга = Новый Структура();
	ПараметрыЦентраМониторинга.Вставить("ИдентификаторИнформационнойБазы");
	ПараметрыЦентраМониторинга.Вставить("ДатаКрайнегоПакета");
	ПараметрыЦентраМониторинга.Вставить("НомерКрайнегоПакета");
	ЦентрМониторингаСлужебный.ПолучитьПараметрыЦентраМониторингаВнешнийВызов(ПараметрыЦентраМониторинга);
	
	ЦентрМониторингаОтраслевой.ВключитьОтправкуСтатистики(ИСТИНА, ЛОЖЬ, "127.0.0.-1");
	
	РаботаСВнешнимиРесурсамиЗаблокирована = ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована;
	ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована = ЛОЖЬ;
	
	Попытка
		ЦентрМониторингаСлужебный.ЦентрМониторингаРегламентноеЗадание();
	Исключение
		Причина = ИнформацияОбОшибке();
		ОбщегоНазначения.СообщитьПользователю(ПодробноеПредставлениеОшибки(Причина),,,, Ошибка);
	КонецПопытки;
	
	ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована = РаботаСВнешнимиРесурсамиЗаблокирована;
	
	ЦентрМониторингаОтраслевой.ВключитьОтправкуСтатистики();
	
	НомерПакетаДоФормирования = ПараметрыЦентраМониторинга.НомерКрайнегоПакета;
	ЦентрМониторингаСлужебный.ПолучитьПараметрыЦентраМониторингаВнешнийВызов(ПараметрыЦентраМониторинга);
	
	Ошибка = Ошибка ИЛИ (НомерПакетаДоФормирования=ПараметрыЦентраМониторинга.НомерКрайнегоПакета);
	
	Если Ошибка Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Пакет = РегистрыСведений.ПакетыДляОтправки.ПолучитьПакет(ПараметрыЦентраМониторинга.НомерКрайнегоПакета);
	Если Пакет=Неопределено Тогда
		Ошибка = ИСТИНА;
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяФайла = Строка(ПараметрыЦентраМониторинга.ИдентификаторИнформационнойБазы) + "-null-" + Формат(ПараметрыЦентраМониторинга.ДатаКрайнегоПакета, "ДФ='гггг-ММ-ддTЧЧ-мм-сс'") + ".json";
	Пакет.Вставить("ИмяФайла", ИмяФайла);
	Пакет.Вставить("Длина",    СтрДлина(Пакет.ТелоПакета));
	
	ПакетАдрес = ПоместитьВоВременноеХранилище(Пакет, ЭтотОбъект.УникальныйИдентификатор);
	Возврат ПакетАдрес;
	
КонецФункции // СохранитьПакетНаСервере()

&НаКлиенте
Процедура СохранитьПакет(Команда, Ошибка=ЛОЖЬ)
	
	// Вызываем обработчик сбора статистики с клиента
	ЦентрМониторингаОтраслевой.ПриВыполненииСтандартныхПериодическихПроверокНаСервере();
	
	// Выполняем обработку на сервере
	ПакетАдрес = СохранитьПакетНаСервере(Ошибка);
	
	Если Ошибка ИЛИ ПакетАдрес=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Пакет = ПолучитьИзВременногоХранилища(ПакетАдрес);
	Если Пакет=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.ПолноеИмяФайла     = Пакет.ИмяФайла;
	Диалог.Фильтр             = НСтр("ru = 'Пакет статистики (*.json)'") + Символы.ПС + "*.json";
	Диалог.Заголовок          = НСтр("ru = 'Сохранение пакета статистики'");
	Диалог.МножественныйВыбор = ЛОЖЬ;
	
	Диалог.Показать(Новый ОписаниеОповещения("Подключаемый_СохранитьПакетЗавершение", ЭтотОбъект, Пакет));
	
КонецПроцедуры // СохранитьПакет()

&НаСервере
Процедура ОтправитьПакетНаСервере(Ошибка=ЛОЖЬ)
	
	УстановитьПривилегированныйРежим(ИСТИНА);
	
	ЦентрМониторингаОтраслевой.ВключитьОтправкуСтатистики(ИСТИНА, ЛОЖЬ);
	
	РаботаСВнешнимиРесурсамиЗаблокирована = ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована;
	ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована = ЛОЖЬ;
	
	Попытка
		ЦентрМониторингаСлужебный.ЦентрМониторингаРегламентноеЗадание();
	Исключение
		Причина = ИнформацияОбОшибке();
		ОбщегоНазначения.СообщитьПользователю(ПодробноеПредставлениеОшибки(Причина),,,, Ошибка);
	КонецПопытки;
	
	ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована = РаботаСВнешнимиРесурсамиЗаблокирована;
	
КонецПроцедуры // ОтправитьПакетНаСервере()

&НаКлиенте
Процедура ОтправитьПакет(Команда, Ошибка=ЛОЖЬ)
	
	// Вызываем обработчик сбора статистики с клиента
	ЦентрМониторингаОтраслевой.ПриВыполненииСтандартныхПериодическихПроверокНаСервере();
	
	// Выполняем обработку на сервере
	ОтправитьПакетНаСервере(Ошибка);
	
КонецПроцедуры // ОтправитьПакет()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Динамическое создание полей с контактной информацией.
//
// Параметры:
//  Контакты - ТаблицаЗначений - Колонки таблицы значений: Заголовок, Значение.
//  Сайты - Массив - набор сайтов (строки)
//
&НаСервере
Процедура СоздатьЭлементыКонтактнойИнформации(Контакты, Сайты)
	
	// Создаем реквизиты формы
	НовыеРеквизиты = Новый Массив;
	ТипСтрока      = Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(0));
	Для Номер=0 По Контакты.ВГраница() Цикл
		ИмяРеквизита = "Контакт"+Формат(Номер+1, "ЧН=0; ЧГ=0");
		НовыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, ТипСтрока));
	КонецЦикла;
	ЭтотОбъект.ИзменитьРеквизиты(НовыеРеквизиты);
	
	// Создаем элементы управления
	Для Номер=0 По Контакты.ВГраница() Цикл
		
		ИмяРеквизита = "Контакт"+Формат(Номер+1, "ЧН=0; ЧГ=0");
		Название     = Контакты[Номер].Заголовок;
		Значение     = Контакты[Номер].Значение;
		
		Элемент = ЭтотОбъект.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), ЭтотОбъект.Элементы.Контакты);
		Элемент.Вид            = ВидПоляФормы.ПолеВвода;
		Элемент.ТолькоПросмотр = Истина;
		Элемент.Заголовок      = Название;
		Элемент.ПутьКДанным    = ИмяРеквизита;
		
		ЭтотОбъект[Элемент.ПутьКДанным] = Значение;
		
	КонецЦикла;
	
	// Проверим, нужно ли выводить секцию сайтов
	Если Сайты.Количество()=0 Тогда
		ЭтотОбъект.Элементы.ЗаголовокСайты.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	// Выводим перечень сайтов
	Для Номер=0 По Сайты.ВГраница() Цикл
		
		ИмяЭлемента = "Сайт"+Формат(Номер+1, "ЧН=0; ЧГ=0");
		Значение    = Сайты[Номер];
		
		Элемент = ЭтотОбъект.Элементы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), ЭтотОбъект.Элементы.ГруппаСсылки);
		Элемент.Заголовок   = Значение;
		Элемент.Гиперссылка = Истина;
		Элемент.УстановитьДействие("Нажатие", "СайтНажатие");
		
	КонецЦикла;
	
КонецПроцедуры // СоздатьЭлементыКонтактнойИнформации()

&НаКлиенте
Процедура ПослеСайтНажатие(Результат, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если Результат=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СохранитьПакетЗавершение(ВыбранныеФайлы, Пакет) Экспорт
	
	Если ВыбранныеФайлы=Неопределено ИЛИ ВыбранныеФайлы.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьПакета = Новый ЗаписьТекста(ВыбранныеФайлы[0], КодировкаТекста.UTF8);
	ЗаписьПакета.ЗаписатьСтроку(Пакет.ТелоПакета);
	ЗаписьПакета.Закрыть();
	
КонецПроцедуры // Подключаемый_СохранитьПакетЗавершение()

&НаКлиенте
Процедура Подключаемый_ПередИзменитьИдентификатор(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатЗакрытия=КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения(
		"Подключаемый_ПослеИзменитьИдентификатор",
		ЭтотОбъект);
		
	ПоказатьВводСтроки(Оповещение, ЭтотОбъект.ИдентификаторБазы, НСтр("ru = 'Постоянный идентификатор базы'"), 0, ЛОЖЬ);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеИзменитьИдентификатор(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ИзмененныйGUID = Новый УникальныйИдентификатор(РезультатЗакрытия);
	Исключение
		Оповещение = Новый ОписаниеОповещения("Подключаемый_ПослеИзменитьИдентификатор", ЭтотОбъект);
		ПоказатьВводСтроки(Оповещение, ЭтотОбъект.ИдентификаторБазы, НСтр("ru = 'Постоянный идентификатор базы'"), 0, Ложь);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Нарушен формат записи идентификатора'"));
		Возврат;
	КонецПопытки;
	
	ЭтотОбъект.ИдентификаторБазы = РезультатЗакрытия;
	ИзменитьУникальныйИдентификатор(ИзмененныйGUID);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьУникальныйИдентификатор(ИдентификаторИнформационнойБазы)
	
	ПараметрыЦентраМониторинга = ЦентрМониторингаСлужебный.ПолучитьПараметрыЦентраМониторингаВнешнийВызов(Новый Структура("ИдентификаторИнформационнойБазыПостоянный"));
	Если ПараметрыЦентраМониторинга.ИдентификаторИнформационнойБазыПостоянный=ИдентификаторИнформационнойБазы Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЦентраМониторинга.Вставить("ОзнакомительныйПакетОтправлен",             ЛОЖЬ);
	ПараметрыЦентраМониторинга.Вставить("НомерКрайнегоПакета",                       0);
	ПараметрыЦентраМониторинга.Вставить("ИдентификаторИнформационнойБазы",           ИдентификаторИнформационнойБазы);
	ПараметрыЦентраМониторинга.Вставить("ИдентификаторИнформационнойБазыПостоянный", ИдентификаторИнформационнойБазы);
	
	ЦентрМониторингаСлужебный.УстановитьПараметрыЦентраМониторингаВнешнийВызов(ПараметрыЦентраМониторинга);
	
КонецПроцедуры

#КонецОбласти
