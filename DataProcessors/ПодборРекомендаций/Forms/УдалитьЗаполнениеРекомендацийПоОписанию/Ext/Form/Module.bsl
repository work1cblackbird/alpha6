
#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Автомобиль       = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Автомобиль");
	ПодобранныеРекомендации = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Рекомендации");
	НомерСтрокиРекомендация = ПолучитьЗначениеПараметраСтруктуры(Параметры, "СтрокаРекомендация");
	Комментарий             = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Комментарий");
	Период                  = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Период");
	Автор                   = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Автор");
	Исполнитель             = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Исполнитель");
	ДатаАктуальности        = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ДатаАктуальности");
	РекомендацияЗаписи      = ПолучитьЗначениеПараметраСтруктуры(Параметры, "РекомендацияЗаписи");
	ПериодЗаписи            = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ПериодЗаписи");

	ЗаполнениеРекомендациямиПоОписанию(ПодобранныеРекомендации);
	
	// Произведем заполнение служебного реквизита "Остаток"
	ОтображатьОстаток = ПолучитьФункциональнуюОпцию("ИспользоватьИндикациюОстатковТовара");
	
	Элементы.РекомендацииОстатокНаСкладе.Видимость = ОтображатьОстаток;
	
	// Проверим наличие "Остатка на складе" в табличной части
	Если ОтображатьОстаток Тогда
		Обработки.ПодборРекомендаций.ПолучитьОстаткиНоменклатурыНаСкладах(Объект, Неопределено);
	КонецЕсли;
	
	ЗагрузкаВыбраннойРекомендации = Ложь;
	
КонецПроцедуры // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте при открытии формы, до показа окна пользователю.
//
// Параметры:
//  Отказ - Булево - Признак отказа от создания формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "Рекомендации");
	
КонецПроцедуры // ПриОткрытии()

// Обработчик события возникающего на клиенте перед закрытием формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗагрузкаВыбраннойРекомендации И Модифицированность Тогда
		Если Объект.Рекомендации.Количество() > 0 Тогда
			Отказ = Истина;
			ОбработкаОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаЗагрузкаРекомендаций", ЭтотОбъект);
			ПоказатьВопрос(
				ОбработкаОповещения,
				НСтр("ru = 'Добавлены изменения рекомендаций по данному текстовому описанию. Загрузить рекомендации?'"),
				РежимДиалогаВопрос.ДаНет
			);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытием()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРекомендации

&НаКлиенте
Процедура РекомендацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Рекомендации.ТекущиеДанные;
	
	Если НоваяСтрока И НЕ Копирование И НЕ ТекущиеДанные = Неопределено Тогда
		ТекущиеДанные.Комментарий = Комментарий;
		ТекущиеДанные.Период      = Период;
		ТекущиеДанные.Автор            = Автор;
		ТекущиеДанные.Исполнитель      = Исполнитель;
		ТекущиеДанные.ДатаАктуальности = ДатаАктуальности;
		ТекущиеДанные.ПериодЗаписи       = ПериодЗаписи;
		ТекущиеДанные.РекомендацияЗаписи = РекомендацияЗаписи;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущаяСтрока = Элементы.Рекомендации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Рекомендация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнена рекомендация по автомобилю.'"));
		Если НоваяСтрока Тогда
			Объект.Рекомендации.Удалить(ТекущаяСтрока);
		Иначе
			РекомендацииРекомендацияПриИзменении(Неопределено);
		КонецЕсли; 
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Элементы.Рекомендации.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.Рекомендации.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Рекомендация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнена рекомендация по автомобилю.'"));
		Если НоваяСтрока Тогда
			Объект.Рекомендации.Удалить(ТекущаяСтрока);
		Иначе
			РекомендацииРекомендацияПриИзменении(Неопределено);
		КонецЕсли; 
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура РекомендацииРекомендацияПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Рекомендация) Тогда
		ТекущиеДанные.РекомендацияАртикул = ТекущиеДанные.Рекомендация.Артикул;
	Иначе
		ТекущиеДанные.РекомендацияАртикул = "";
	КонецЕсли; 
	
	Если ТекущиеДанные.Количество=0 Тогда
		ТекущиеДанные.Количество=1;
	КонецЕсли;
	
	// Проверим наличие "Остатка на складе" в табличной части
	Если ОтображатьОстаток Тогда
		Обработки.ПодборРекомендаций.ПолучитьОстаткиНоменклатурыНаСкладах(Объект, Неопределено, ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииРекомендацияПриИзменении(Элемент)
	
	РекомендацииРекомендацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные=Элементы.Рекомендации.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Количество=0 Тогда
		ТекущиеДанные.Количество=1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.Рекомендации.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Состояние)
		И НЕ ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Запланировано") Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = 'Данная рекомендация имеет состояние ""%1"". Удаление рекомендации запрещено.'"),  
				ТекущиеДанные.Состояние
			)
		);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	ЗагрузкаРекомендаций();
	
КонецПроцедуры // Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнениеРекомендациямиПоОписанию(ТекущиеРекомендации)
	
	Если НЕ ЗначениеЗаполнено(Комментарий) Тогда
		Возврат;
	КонецЕсли;
	
	ОтборСтрок = Новый Структура("Комментарий", Комментарий);
	
	НайденныеРекомендации = ТекущиеРекомендации.НайтиСтроки(ОтборСтрок);
	
	Для Каждого СтрокаРекомендации Из НайденныеРекомендации Цикл
		Если ЗначениеЗаполнено(СтрокаРекомендации.Рекомендация) Тогда
			ЗаполнитьЗначенияСвойств(Объект.Рекомендации.Добавить(), СтрокаРекомендации);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ФормированиеРезультатаРекомендаций()
	
	//Если Объект.Рекомендации.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.РекомендацииПоАвтомобилю.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Автомобиль.Установить(Объект.Автомобиль);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
	Если Объект.Рекомендации.Количество() > 0 Тогда
		
		Для Каждого Рекомендация Из Объект.Рекомендации Цикл
			Если ЗначениеЗаполнено(Рекомендация.Рекомендация) Тогда
				Обработки.ПодборРекомендаций.ЗаписатьСтрокуРекомендации(Объект, Рекомендация, Истина);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ФормированиеРезультата()

&НаКлиенте
Процедура ЗагрузкаРекомендаций()
	
	ЗагрузкаВыбраннойРекомендации = Истина;
	ФормированиеРезультатаРекомендаций();
	
	Закрыть(Комментарий);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаЗагрузкаРекомендаций(РезультатОповещения,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		ЗагрузкаРекомендаций();
	ИначеЕсли РезультатОповещения = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_ОбработкаРезультатаЗагрузкаРекомендаций()

#КонецОбласти

