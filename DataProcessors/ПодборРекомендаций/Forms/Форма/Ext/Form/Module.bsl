///////////////////////////////////////////////////////////////////////////////
// Модуль формы обработчика "Подбор рекомендаций"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполним из параметров элементы формы
	ОтборАктуальный = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ОтборАктуальный", Ложь);
	ОтборВыполняется = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ОтборВыполняется", Ложь);
	ОтборВыполнена = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ОтборВыполнена", Ложь);
	ОтборОтклонена = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ОтборОтклонена", Ложь);
	ОтборРекомендацияАвтоработы = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ОтборРекомендацияАвтоработы", Ложь);
	ОтборРекомендацияНоменклатура = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ОтборРекомендацияНоменклатура", Ложь);
	РежимВыбора = ПолучитьЗначениеПараметраСтруктуры(Параметры, "РежимВыбора", Ложь);
	Объект.Автомобиль =
		ПолучитьЗначениеПараметраСтруктуры(Параметры, "Автомобиль", Справочники.Автомобили.ПустаяСсылка());
	Объект.ТипЦен = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТипЦен", Неопределено);
	Объект.ТипЦенАвторабот = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ТипЦенАвторабот", Неопределено);
	Объект.Дата = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Дата", Дата("00010101000000"));
	Объект.Контрагент =
		ПолучитьЗначениеПараметраСтруктуры(Параметры, "Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	Объект.ДоговорВзаиморасчетов = ПолучитьЗначениеПараметраСтруктуры(
		Параметры,
		"ДоговорВзаиморасчетов",
		Справочники.ДоговорыВзаиморасчетов.ПустаяСсылка()
	);
	Объект.Цех = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Цех", Справочники.Цеха.ПустаяСсылка());
	Объект.ВидРемонта =
		ПолучитьЗначениеПараметраСтруктуры(Параметры, "ВидРемонта", Справочники.ВидыРемонта.ПустаяСсылка());
	ИдентификаторПричиныОбращения = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ИдентификаторПричиныОбращения");
	ИмяФормыВладельца = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ИмяДокумента");
	
	Если НЕ ЗначениеЗаполнено(Объект.Автомобиль) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не указан автомобиль, для которого указаны рекомендации.'"), , , , Отказ
		);
		Возврат;
	КонецЕсли; 
	
	Если Параметры.Свойство("Рекомендации") И Параметры.Рекомендации.Количество() <> 0 Тогда
		//ЗаполнитьЗначенияСвойств(Объект, Параметры.ПараметрыОбъекта);
		Объект.Рекомендации.Загрузить(Параметры.Рекомендации.Выгрузить());
	Иначе
		ОбъектРекомендация = РеквизитФормыВЗначение("Объект");
		ОбъектРекомендация.ЗаполнитьРекомендации();
		Объект.Рекомендации.Очистить();
		Объект.Рекомендации.Загрузить(ОбъектРекомендация.Рекомендации.Выгрузить());
	КонецЕсли;
	
	ЭтотОбъект.ЗакрыватьПриВыборе = Ложь;
	
	СписокВыбора = Элементы.РекомендацииДатаАктуальности.СписокВыбора;
	СписокВыбора.Очистить();
	СписокВыбора.Добавить(1,  НСтр("ru='Месяц'"));
	СписокВыбора.Добавить(2,  НСтр("ru='Два месяца'"));
	СписокВыбора.Добавить(3,  НСтр("ru='Три месяца'"));
	СписокВыбора.Добавить(6,  НСтр("ru='Полгода'"));
	СписокВыбора.Добавить(12, НСтр("ru='Год'"));
	
	// Произведем заполнение служебного реквизита "Остаток"
	ОтображатьОстаток = ПолучитьФункциональнуюОпцию("ИспользоватьИндикациюОстатковТовара");
	
	Элементы.РекомендацииОстатокНаСкладе.Видимость = ОтображатьОстаток;
	
	ПравоДоступаРедактироватьРекомендацииПоАвтомобилю      = ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.РекомендацииПоАвтомобилю);
	Элементы.Рекомендации.ТолькоПросмотр                   = НЕ ПравоДоступаРедактироватьРекомендацииПоАвтомобилю;
	Элементы.ПереместитьТекущийЭлементВверх.Доступность    = ПравоДоступаРедактироватьРекомендацииПоАвтомобилю;
	Элементы.ПереместитьТекущийЭлементВниз.Доступность     = ПравоДоступаРедактироватьРекомендацииПоАвтомобилю;
	Элементы.Отклонить.Доступность                         = ПравоДоступаРедактироватьРекомендацииПоАвтомобилю;
	
	// Проверим наличие "Остатка на складе" в табличной части
	Если ОтображатьОстаток Тогда
		Обработки.ПодборРекомендаций.ПолучитьОстаткиНоменклатурыНаСкладах(Объект, Неопределено);
	КонецЕсли;
	
	УстановитьОтбор();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтотОбъект.ВладелецФормы = Неопределено Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Запрещен самостоятельный вызов.'"),,
			НСтр("ru = 'Данная форма используется другими объектами конфигурации.'"),
			БиблиотекаКартинок.Предупреждение32,
			СтатусОповещенияПользователя.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ВладелецФормы <> Неопределено И ВладелецФормы.ТолькоПросмотр Тогда
		ЭтотОбъект.РежимВыбора = Ложь;
	КонецЕсли;
	
	ЭтоЗаписьНаРемонт = СтрНайти(ВладелецФормы.ИмяФормы, "ЗаписьНаРемонт") > 0;

	
	Если РежимВыбора Тогда
		Заголовок = НСтр("ru = 'Подбор рекомендаций'");
		Элементы.Выбор.Доступность = Истина;
		
		Если ЭтоЗаписьНаРемонт Тогда
			
			СсылкаДокумента = ВладелецФормы.ЗаписьНаРемонт[ВладелецФормы.ЗаписьНаРемонт.РежимРедактирования].Ссылка;
			
		Иначе
			СсылкаДокумента = ВладелецФормы.Объект.Ссылка;
		КонецЕсли;
		
	Иначе
		Заголовок = НСтр("ru = 'Редактирование рекомендаций'");
		Элементы.Выбор.Доступность = Ложь;
	КонецЕсли; 
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если РежимВыбора Тогда
		РежимВыбора = Ложь;
		Закрыть(Новый Структура("Рекомендации, Модифицированность", Объект.Рекомендации, Объект.Модифицированность));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборАвторПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры // ОтборАвторПриИзменении()

&НаКлиенте
Процедура ОтборАктуальныйПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры // ОтборАктуальныйПриИзменении()

&НаКлиенте
Процедура ОтборВыпоняетсяПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры // ОтборВыпоняетсяПриИзменении()

&НаКлиенте
Процедура ОтборВыполненаПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры // ОтборВыполненаПриИзменении()

&НаКлиенте
Процедура ОтобрОтклоненаПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры // ОтобрОтклоненаПриИзменении()

&НаКлиенте
Процедура ОтборНеактуальнаПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОторРекомендацияАвтоработыПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры // ОторРекомендацияАвтоработыПриИзменении()

&НаКлиенте
Процедура ОтборРекомендацияНоменклатурыПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры // ОтборРекомендацияНоменклатурыПриИзменении()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРекомендации

&НаКлиенте
Процедура РекомендацииПередУдалением(Элемент, Отказ)
	
	Отказ=Истина;
	Отклонить(Элементы.РекомендацииКоманднаяПанель.ПодчиненныеЭлементы.Отклонить);
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = Элементы.Рекомендации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Копирование Тогда
		ТекущаяСтрока.Период = ТекущаяДата();
		ТекущаяСтрока.Автор = ПолучитьАвтора();
		ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Запланировано");
		ТекущаяСтрока.ЗаказНаряд = ПредопределенноеЗначение("Документ.ЗаказНаряд.ПустаяСсылка");
		ТекущаяСтрока.ЗаказНарядТекущий = Ложь;
		ТекущаяСтрока.ЗаявкаНаРемонт = ПредопределенноеЗначение("Документ.ЗаявкаНаРемонт.ПустаяСсылка");
	КонецЕсли;
	
	ТекущаяСтрока.РекомендацияДоРедактирования = ТекущаяСтрока.Рекомендация;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Период) Тогда
		ТекущаяСтрока.Период = Объект.Дата;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Автор) Тогда
		ТекущаяСтрока.Автор = ПолучитьАвтора();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Состояние) Тогда
		ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Запланировано");
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		ТекущаяСтрока.ИндетификаторОтбораСостояния  = Истина;
		ТекущаяСтрока.ИндетификаторОтбораПоТипу = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущаяСтрока = Элементы.Рекомендации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Автомобиль) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru='Не указан автомобиль, для которого указаны рекомендации.'")
			, , , , ОтменаРедактирования
		);
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Рекомендация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не заполнена рекомендация по автомобилю.'"));
		Если НоваяСтрока Тогда
			Объект.Рекомендации.Удалить(ТекущаяСтрока);
		Иначе
			ТекущаяСтрока.Рекомендация = ТекущаяСтрока.РекомендацияДоРедактирования;
			РекомендацииРекомендацияПриИзменении(Неопределено);
			//Отказ=Истина;
		КонецЕсли; 
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура РекомендацииПриОкончанииРедактированияНаСервере(НоваяСтрока)
	
	ТекущиеДанные = Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	
	Обработки.ПодборРекомендаций.ЗаписатьСтрокуРекомендации(Объект, ТекущиеДанные, Истина, НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Элементы.Рекомендации.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Рекомендация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не заполнена рекомендация по автомобилю.'"));
		Если НоваяСтрока Тогда
			Объект.Рекомендации.Удалить(ТекущаяСтрока);
		Иначе
			ТекущаяСтрока.Рекомендация=ТекущаяСтрока.РекомендацияДоРедактирования;
			РекомендацииРекомендацияПриИзменении(Неопределено);
			//Отказ=Истина;
		КонецЕсли; 
		Возврат;
	КонецЕсли; 
	
	РекомендацииПриОкончанииРедактированияНаСервере(НоваяСтрока);
	
	ОбновитьНаСервере();

КонецПроцедуры

&НаСервере
Процедура РекомендацииРекомендацияПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Рекомендация) Тогда
		ТекущиеДанные.РекомендацияАртикул = ТекущиеДанные.Рекомендация.Артикул;
	Иначе
		ТекущиеДанные.РекомендацияАртикул = "";
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Рекомендация) = Тип("СправочникСсылка.Номенклатура") Тогда
		ТекущиеДанные.ЕдиницаИзмерения 	= ТекущиеДанные.Рекомендация.ОсновнаяЕдиницаИзмерения;
		ТекущиеДанные.Коэффициент 		= ТекущиеДанные.ЕдиницаИзмерения.Коэффициент;
		
		ИспользованиеЕдиницИзмерения   	= ТекущиеДанные.Рекомендация.ТипНоменклатуры.ИспользованиеЕдиницИзмерения;
		Если ИспользованиеЕдиницИзмерения 		= 1 Тогда
			ТекущиеДанные.ВладелецЕдиницыИзмерения = ТекущиеДанные.Рекомендация.ТипНоменклатуры;
		ИначеЕсли ИспользованиеЕдиницИзмерения 	= 2 Тогда
			ТекущиеДанные.ВладелецЕдиницыИзмерения = ТекущиеДанные.Рекомендация;
		Иначе
			ТекущиеДанные.ВладелецЕдиницыИзмерения = Неопределено;
		КонецЕсли;
	КонецЕсли; 
	
	ОбъектРекомендация = РеквизитФормыВЗначение("Объект");
	ОбъектРекомендация.РассчитатьЦенуРекомендации(ТекущиеДанные);
	
	// Проверим наличие "Остатка на складе" в табличной части
	Если ОтображатьОстаток Тогда
		Обработки.ПодборРекомендаций.ПолучитьОстаткиНоменклатурыНаСкладах(Объект, Неопределено, ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииРекомендацияПриИзменении(Элемент)
	
	ТекущаяСтрока=Элементы.Рекомендации.ТекущиеДанные;
	Если ТекущаяСтрока=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РекомендацииРекомендацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииКомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	// Отказываемся от стандартной обработки события
	СтандартнаяОбработка = Ложь;
	
	// Формируем описание обработчика перехвата закрытия формы
	ОбработкаРезультатаЗакрытия = Новый ОписаниеОповещения(
		"Подключаемый_ОбработкаРезультатаРедактированияКомментария",
		ЭтотОбъект,
		Элементы.Рекомендации.ТекущиеДанные
	);
	
	// Открываем диалог многострочного редактирования текста коммантария
	ПоказатьВводСтроки(
		ОбработкаРезультатаЗакрытия,
		СокрЛП(Элементы.Рекомендации.ТекущиеДанные.Комментарий),
		НСтр("ru = 'Введите текстовое описание рекомендации'")
		, ,
		Истина
	);
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииДатаАктуальностиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Рекомендации.ТекущиеДанные;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Число") Тогда
		ТекущиеДанные.ДатаАктуальности = ДобавитьМесяц(ТекущиеДанные.Период,ВыбранноеЗначение);
	Иначе
		ТекущиеДанные.ДатаАктуальности = ВыбранноеЗначение;
	КонецЕсли;

	ЗаписатьСтроку();
	
	ОбновитьНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура РекомендацииПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Рекомендации.ТекущаяСтрока = Неопределено Тогда
		Элементы.Отклонить.Доступность = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока=Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	Если ТекущаяСтрока.Выполнена
		ИЛИ ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Выполняется")
		ИЛИ ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Завершено")
		ИЛИ ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Отменено") Тогда
		
		Элементы.Отклонить.Доступность = Ложь;
	Иначе
		Элементы.Отклонить.Доступность = ?(ПравоДоступаРедактироватьРекомендацииПоАвтомобилю, Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РекомендацииЗаявкаНаРемонтПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	
	Обработки.ПодборРекомендаций.ЗаявкаНаРемонтПриИзменении(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииЗаявкаНаРемонтПриИзменении(Элемент)
	
	ТекущаяСтрока=Элементы.Рекомендации.ТекущаяСтрока;
	Если ТекущаяСтрока=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РекомендацииЗаявкаНаРемонтПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РекомендацииЗаказНарядПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	
	Обработки.ПодборРекомендаций.ЗаказНарядПриИзменении(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииЗаказНарядПриИзменении(Элемент)
	
	ТекущаяСтрока=Элементы.Рекомендации.ТекущаяСтрока;
	Если ТекущаяСтрока=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РекомендацииЗаказНарядПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПараметрыПеретаскивания.Значение <> Строка Тогда
		
		ТекущаяСтрока = Объект.Рекомендации.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
		ЗаменяемаяСтрока = Объект.Рекомендации.НайтиПоИдентификатору(Строка);
		НомерТекущейСтроки = ТекущаяСтрока.НомерСтроки;
		НомерЗаменяемойСтроки = ЗаменяемаяСтрока.НомерСтроки;
		ИндексТекущейСтроки = НомерТекущейСтроки - 1;
		ИндексЗаменяемойСтроки = НомерЗаменяемойСтроки - 1;
		КоличествоПеремещяемыхСтрок = НомерТекущейСтроки - НомерЗаменяемойСтроки;
		
		СтараяДатаЗаписи = Объект.Рекомендации[ИндексТекущейСтроки].ДатаЗаписи;
		НоваяДатаЗаписи = Объект.Рекомендации[ИндексЗаменяемойСтроки].ДатаЗаписи;
		
		Объект.Рекомендации[ИндексТекущейСтроки].ДатаЗаписи = НоваяДатаЗаписи;
		Объект.Рекомендации[ИндексЗаменяемойСтроки].ДатаЗаписи = СтараяДатаЗаписи;
		
		ПереместитьТекущийЭлементВТаблицеНаСервере(ИндексТекущейСтроки, ИндексЗаменяемойСтроки);
		ОбновитьНаСервере();
		Элементы.Рекомендации.ТекущаяСтрока = Объект.Рекомендации[ИндексЗаменяемойСтроки].ПолучитьИдентификатор();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииЕдиницаИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Рекомендации.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Рекомендация) = Тип("СправочникСсылка.Автоработы") Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РекомендацииЕдиницаИзмеренияПриИзмененииНаСервере()
	
	ТекущиеДанные 				= Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	ТекущиеДанные.Коэффициент 	= ТекущиеДанные.ЕдиницаИзмерения.Коэффициент;
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендацииЕдиницаИзмеренияПриИзменении(Элемент)
	
	РекомендацииЕдиницаИзмеренияПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отклонить(Команда)
	
	ТекущаяСтрока = Элементы.Рекомендации.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока.Выполнена
		ИЛИ ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Выполняется")
		ИЛИ ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Завершено")
		ИЛИ ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Отменено") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	Оповещение = Новый ОписаниеОповещения("ВыборПричиныОтказа", ЭтотОбъект);
	ОткрытьФорму("Справочник.ПричиныОтказаОтОбслуживания.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , Оповещение);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	Идентификатор = Элементы.Рекомендации.ТекущаяСтрока;
	
	Если Идентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеТекущейСтроки = Объект.Рекомендации.НайтиПоИдентификатору(Идентификатор);
	ТекущаяСтрокаТаблицы = ДанныеТекущейСтроки.НомерСтроки;
	
	ОбъектРекомендация = РеквизитФормыВЗначение("Объект");
	ОбъектРекомендация.ЗаполнитьРекомендации();
	Объект.Рекомендации.Очистить();
	Объект.Рекомендации.Загрузить(ОбъектРекомендация.Рекомендации.Выгрузить());
	
	Если ОтображатьОстаток Тогда
		Обработки.ПодборРекомендаций.ПолучитьОстаткиНоменклатурыНаСкладах(Объект, Неопределено);
	КонецЕсли;
	
	УстановитьОтбор();
	
	Если ТекущаяСтрокаТаблицы > Объект.Рекомендации.Количество() Тогда
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Рекомендация", ДанныеТекущейСтроки.Рекомендация);
		ПараметрыОтбора.Вставить("Период", ДанныеТекущейСтроки.Период);
		
		НайденныеСтрокиРекомендаций = Объект.Рекомендации.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтрокиРекомендаций.Количество() > 0 Тогда
			Элементы.Рекомендации.ТекущаяСтрока = НайденныеСтрокиРекомендаций[0].ПолучитьИдентификатор();
		КонецЕсли;
		
	Иначе
		Элементы.Рекомендации.ТекущаяСтрока = Объект.Рекомендации[ТекущаяСтрокаТаблицы - 1].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Выбор(Команда)
	
	Если НЕ РежимВыбора Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверкаВыбраннойРекомендации() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Рекомендации.ТекущиеДанные;
	
	Рекомендация 		= ТекущиеДанные.Рекомендация;
	Количество   		= ТекущиеДанные.Количество;
	Коэффициент 		= ТекущиеДанные.Коэффициент;
	ЕдиницаИзмерения 	= ТекущиеДанные.ЕдиницаИзмерения;
	СпособРасчетаСтоимостиРаботы = ТекущиеДанные.СпособРасчетаСтоимостиРаботы;
	Оповестить("ВыборРекомендацииАвтомобиля", 
		Новый Структура(
		"Рекомендация,
		|Количество,
		|ЕдиницаИзмерения,
		|Коэффициент,
		|ИдентификаторПричиныОбращения", 
	Рекомендация,
	Количество,
	ЕдиницаИзмерения,
	Коэффициент,
	ИдентификаторПричиныОбращения), СсылкаДокумента);
	
	ЗаписатьСтроку();
	УстановитьОтбор();
	
КонецПроцедуры // Выбор()

&НаКлиенте
Процедура Печать(Команда)
	
	ОтборНеУстановлен = НЕ ОтборРекомендацияАвтоработы И НЕ ОтборРекомендацияНоменклатура;
	
	// Установим параметры для печати
	МенеджерПечати = "Обработка.ПодборРекомендаций";
	
	ИменаМакетов = Новый Массив;
	ИменаМакетов.Добавить("Рекомендации");
	
	// Установим параметры команды
	ПараметрКоманды = Новый Массив;
	ПараметрыПечати = Новый Структура("ЗаголовокФормы", "Рекомендации по автомобилю");
	ПараметрыПечати.Вставить("Объект",Объект);
	ПараметрыПечати.Вставить("ВыводитьРаботы",              ОтборРекомендацияАвтоработы ИЛИ ОтборНеУстановлен);
	ПараметрыПечати.Вставить("ВыводитьЗапчасти",            ОтборРекомендацияНоменклатура ИЛИ ОтборНеУстановлен);
	
	// Сформируем список отборов состояний
	Если НЕ ((ОтборАктуальный = Истина И ОтборВыполнена = Истина И ОтборВыполняется = Истина И ОтборОтклонена = Истина И ОтборНеактуальна = Истина)
		ИЛИ (ОтборАктуальный = Ложь И ОтборВыполнена = Ложь И ОтборВыполняется = Ложь И ОтборОтклонена = Ложь И ОтборНеактуальна = Ложь)) Тогда
		СписокСостояний = Новый СписокЗначений;
		Если ОтборАктуальный Тогда
			СписокСостояний.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Запланировано"));
		КонецЕсли; 
		Если ОтборВыполняется Тогда
			СписокСостояний.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Выполняется"));
		КонецЕсли; 
		Если ОтборВыполнена Тогда
			СписокСостояний.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Завершено"));
		КонецЕсли; 
		Если ОтборОтклонена Тогда
			СписокСостояний.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Отменено"));
		КонецЕсли;
		Если  ОтборНеактуальна Тогда
			СписокСостояний.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияСобытий.Неактуально"));
		КонецЕсли;

		ПараметрыПечати.Вставить("СписокСостояний", СписокСостояний);
	КонецЕсли;
	
	// Добавляем пустую ссылку, так как этот параметр должен иметь ссылочный тип, но абсолютно не влияет на поеведение печатной формы.
	ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.Автоработы.ПустаяСсылка"));
	
	// Выведем на печатную форму
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(МенеджерПечати,ИменаМакетов,ПараметрКоманды,Неопределено,ПараметрыПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьТекущийЭлементВверх(Команда)
	
	ТекущаяСтрока = Элементы.Рекомендации.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		НомерТекущейСтроки = ТекущаяСтрока.НомерСтроки;
		ИндексТекущейСтроки = НомерТекущейСтроки - 1;
		ИндексЗаменяемойСтроки = НомерТекущейСтроки - 2;
		
		Если НомерТекущейСтроки > 1 Тогда
			
			СтараяДатаЗаписи = Объект.Рекомендации[ИндексТекущейСтроки].ДатаЗаписи;
			НоваяДатаЗаписи = Объект.Рекомендации[ИндексЗаменяемойСтроки].ДатаЗаписи;
			
			Объект.Рекомендации[ИндексТекущейСтроки].ДатаЗаписи = НоваяДатаЗаписи;
			Объект.Рекомендации[ИндексЗаменяемойСтроки].ДатаЗаписи = СтараяДатаЗаписи;
			
			ПереместитьТекущийЭлементВТаблицеНаСервере(ИндексТекущейСтроки, ИндексЗаменяемойСтроки);
			
			Объект.Рекомендации.Сдвинуть(ИндексТекущейСтроки , -1);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьТекущийЭлементВниз(Команда)
	
	ТекущаяСтрока = Элементы.Рекомендации.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		НомерТекущейСтроки = ТекущаяСтрока.НомерСтроки;
		ИндексТекущейСтроки = НомерТекущейСтроки - 1;
		ИндексЗаменяемойСтроки = НомерТекущейСтроки;
		
		Если НомерТекущейСтроки < Объект.Рекомендации.Количество() Тогда
			
			СтараяДатаЗаписи = Объект.Рекомендации[ИндексТекущейСтроки].ДатаЗаписи;
			НоваяДатаЗаписи = Объект.Рекомендации[ИндексЗаменяемойСтроки].ДатаЗаписи;
			
			Объект.Рекомендации[ИндексТекущейСтроки].ДатаЗаписи = НоваяДатаЗаписи;
			Объект.Рекомендации[ИндексЗаменяемойСтроки].ДатаЗаписи = СтараяДатаЗаписи;
			
			ПереместитьТекущийЭлементВТаблицеНаСервере(ИндексТекущейСтроки, ИндексЗаменяемойСтроки);
			
			Объект.Рекомендации.Сдвинуть(ИндексТекущейСтроки, 1);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтбор()
	
	// Сформируем колонки для отбора
	
	Элементы.Рекомендации.ОтборСтрок = Неопределено;
	
	Отбор = Новый Структура;
	Если ЗначениеЗаполнено(ОтборАвтор) Тогда
		Отбор.Вставить("Автор", ОтборАвтор);
	КонецЕсли;
	
	СписокСостояний = Новый СписокЗначений;
	Если ОтборАктуальный Тогда
		СписокСостояний.Добавить(Перечисления.СостоянияСобытий.Запланировано);
	КонецЕсли; 
	Если ОтборВыполняется Тогда
		СписокСостояний.Добавить(Перечисления.СостоянияСобытий.Выполняется);
	КонецЕсли; 
	Если ОтборВыполнена Тогда
		СписокСостояний.Добавить(Перечисления.СостоянияСобытий.Завершено);
	КонецЕсли; 
	Если ОтборОтклонена Тогда
		СписокСостояний.Добавить(Перечисления.СостоянияСобытий.Отменено);
	КонецЕсли;
	Если ОтборНеактуальна Тогда
		СписокСостояний.Добавить(Перечисления.СостоянияСобытий.Неактуально);
	КонецЕсли;  

	
	СписокРекомендаций=Новый СписокЗначений;
	ЕстьДетальРабота = Истина;
	Если НЕ((ОтборРекомендацияАвтоработы=Истина И ОтборРекомендацияНоменклатура=Истина)
		ИЛИ (ОтборРекомендацияАвтоработы=Ложь И ОтборРекомендацияНоменклатура=Ложь)) Тогда
		
		Если ОтборРекомендацияАвтоработы=Истина Тогда
			Для каждого СтрокаРекомендаций Из Объект.Рекомендации Цикл
				Если ТипЗнч(СтрокаРекомендаций.Рекомендация)=Тип("СправочникСсылка.Автоработы")
					И ЗначениеЗаполнено(СтрокаРекомендаций.Рекомендация) Тогда
					СписокРекомендаций.Добавить(СтрокаРекомендаций.Рекомендация);
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли;
		
		Если ОтборРекомендацияНоменклатура=Истина Тогда
			Для каждого СтрокаРекомендаций Из Объект.Рекомендации Цикл
				Если ТипЗнч(СтрокаРекомендаций.Рекомендация)=Тип("СправочникСсылка.Номенклатура")
					И ЗначениеЗаполнено(СтрокаРекомендаций.Рекомендация) Тогда
					СписокРекомендаций.Добавить(СтрокаРекомендаций.Рекомендация);
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
		
		Если СписокРекомендаций.Количество() = 0 Тогда
			ЕстьДетальРабота = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// установим отбор по состоянию и типу рекомендаций
	Для Каждого ТекСтрока Из Объект.Рекомендации Цикл
		
		// сначала сбросим колонку отбора в ложь
		ТекСтрока.ИндетификаторОтбораСостояния  = Ложь;
		ТекСтрока.ИндетификаторОтбораПоТипу = Ложь;
		
		Если СписокСостояний.Количество() > 0 Тогда
			Для Каждого ТекСостояние Из СписокСостояний Цикл
				Если ТекСтрока.Состояние = ТекСостояние.Значение Тогда
					ТекСтрока.ИндетификаторОтбораСостояния = Истина;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ТекСтрока.ИндетификаторОтбораСостояния = Истина;
		КонецЕсли;
		
		Если СписокРекомендаций.Количество() > 0 Тогда
			Для Каждого ТекРекомендация Из СписокРекомендаций Цикл
				Если ТекСтрока.Рекомендация = ТекРекомендация.Значение Тогда
					ТекСтрока.ИндетификаторОтбораПоТипу = Истина;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ТекСтрока.ИндетификаторОтбораПоТипу = ЕстьДетальРабота;
		КонецЕсли;
		
		Если ТипЗнч(ТекСтрока.Рекомендация) = Тип("СправочникСсылка.Номенклатура") Тогда
			ИспользованиеЕдиницИзмерения   	= ТекСтрока.Рекомендация.ТипНоменклатуры.ИспользованиеЕдиницИзмерения;
			Если ИспользованиеЕдиницИзмерения = 1 Тогда
				ТекСтрока.ВладелецЕдиницыИзмерения = ТекСтрока.Рекомендация.ТипНоменклатуры;
			ИначеЕсли ИспользованиеЕдиницИзмерения = 2 Тогда
				ТекСтрока.ВладелецЕдиницыИзмерения = ТекСтрока.Рекомендация;
			Иначе
				ТекСтрока.ВладелецЕдиницыИзмерения = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Отбор.Вставить("ИндетификаторОтбораСостояния", Истина);
	Отбор.Вставить("ИндетификаторОтбораПоТипу", Истина);
	
	Если Отбор.Количество() > 0 Тогда
		Элементы.Рекомендации.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	КонецЕсли;
	
	// Сформируем значения в подвале
	КоличествоРекомендаций = 0;
	СуммаРекомендаций = 0;
	
	НайденныеСтроки = Объект.Рекомендации.НайтиСтроки(Отбор);
	
	Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
		КоличествоРекомендаций = КоличествоРекомендаций + ТекущаяСтрока.Количество;
		СуммаРекомендаций      = СуммаРекомендаций + ТекущаяСтрока.Сумма;
	КонецЦикла;
	
	Элементы.РекомендацииКоличество.ТекстПодвала = Формат(КоличествоРекомендаций, "ЧДЦ=3");
	Элементы.РекомендацииСумма.ТекстПодвала      = Формат(СуммаРекомендаций, "ЧДЦ=2");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПричиныОтказа(ПричинаОтказа, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПричинаОтказа) Тогда
		Возврат;
	КонецЕсли; 
	
	ВыборПричиныОтказаНаСервере(ПричинаОтказа);
	
КонецПроцедуры

&НаСервере
Процедура ВыборПричиныОтказаНаСервере(ПричинаОтказа)
	
	ТекущиеДанные = Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	
	ТекущиеДанные.ПричинаОтказа = ПричинаОтказа;
	РекомендацииПричинаОтказаПриИзменении(ТекущиеДанные);
	
	Обработки.ПодборРекомендаций.ЗаписатьСтрокуРекомендации(Объект, ТекущиеДанные, Истина);
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаСервере
Процедура РекомендацииПричинаОтказаПриИзменении(ТекущаяСтрока)
	
	Если ТекущаяСтрока=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Обработки.ПодборРекомендаций.ПричинаОтказаПриИзменении(ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Функция ПроверкаСостоянияРекомендации(Состояние, ТипДокумента, ДокументОснование = Неопределено, ЗаявкаНаРемонт = Неопределено)
	
	Если ТипДокумента = "Документ.ЗаявкаНаРемонт" Тогда
		Если Состояние<>Перечисления.СостоянияСобытий.Запланировано Тогда
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТипДокумента = "Документ.ЗаказНаряд" Тогда
		Если Состояние = Перечисления.СостоянияСобытий.Запланировано Тогда
		ИначеЕсли Состояние = Перечисления.СостоянияСобытий.Выполняется
			И ДокументОснование = ЗаявкаНаРемонт Тогда
		Иначе
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьАвтора()
	
	Возврат Пользователи.ТекущийПользователь();
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаРедактированияКомментария(РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОповещения = Неопределено Тогда
		ТекущаяСтрока = ДополнительныеПараметры;
		ТекущаяСтрока.Комментарий = РезультатОповещения;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверкаВыбраннойРекомендации()
	
	Если Элементы.Рекомендации.ТекущаяСтрока = Неопределено Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	ТекущаяСтрока = Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	
	Если ТекущаяСтрока=Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Отказ от выбора, если рекомендация представлена только текстовым описанием
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Рекомендация) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Запрещен выбор рекомендации только с текстовым описанием.'")
		);
		Возврат Ложь;
	КонецЕсли;

	// Отказ от выбора, если у пользователя нет прав на добавление работ или деталей.
	Если ТипЗнч(ТекущаяСтрока.Рекомендация) = Тип("СправочникСсылка.Автоработы")
		И НЕ ПравоПользователя("РедактированиеРаботЗаказНаряда") Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Запрещен выбор рекомендации, нет права на редактирование работ.'"));
			Возврат Ложь;
	ИначеЕсли ТипЗнч(ТекущаяСтрока.Рекомендация) = Тип("СправочникСсылка.Номенклатура")
		И НЕ ПравоПользователя("РедактированиеДеталейЗаказНаряда") Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Запрещен выбор рекомендации, нет права на редактирование деталей.'"));
			Возврат Ложь;
	КонецЕсли;

	Если ИмяФормыВладельца = "Документ.ЗаявкаНаРемонт" Тогда
		Если ПроверкаСостоянияРекомендации(ТекущаяСтрока.Состояние, "Документ.ЗаявкаНаРемонт") Тогда
			Возврат Ложь;
		КонецЕсли; 
	ИначеЕсли ИмяФормыВладельца = "Документ.ЗаказНаряд" Тогда
		Если ПроверкаСостоянияРекомендации(ТекущаяСтрока.Состояние, "Документ.ЗаказНаряд", СсылкаДокумента.ДокументОснование, ТекущаяСтрока.ЗаявкаНаРемонт) Тогда
			Возврат Ложь;
		КонецЕсли; 
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(СсылкаДокумента)=Тип("ДокументСсылка.ЗаявкаНаРемонт") Тогда
		ТекущаяСтрока.ЗаявкаНаРемонт=СсылкаДокумента;
		РекомендацииЗаявкаНаРемонтПриИзмененииНаСервере();
		Объект.Модифицированность=Истина;
	ИначеЕсли ТипЗнч(СсылкаДокумента)=Тип("ДокументСсылка.ЗаказНаряд") Тогда
		ТекущаяСтрока.ЗаказНаряд=СсылкаДокумента;
		РекомендацииЗаказНарядПриИзмененииНаСервере();
		ЭтотОбъект.Модифицированность=Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Исполнитель) Тогда
		ТекущаяСтрока.Исполнитель = ПолучитьАвтора();
	КонецЕсли;
	//РекомендацииПриОкончанииРедактированияНаСервере();
	
	Возврат Истина;
	
КонецФункции // ДобавитьРекомендациюВДокумент()

&НаСервере
Процедура ЗаписатьСтроку()
	
	ТекущаяСтрока = Объект.Рекомендации.НайтиПоИдентификатору(Элементы.Рекомендации.ТекущаяСтрока);
	Обработки.ПодборРекомендаций.ЗаписатьСтрокуРекомендации(Объект, ТекущаяСтрока, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПереместитьТекущийЭлементВТаблицеНаСервере(НомерТекущейСтроки, НомерЗаменяемойСтроки)
	
	Обработки.ПодборРекомендаций.ЗаписатьСтрокуРекомендации(Объект, Объект.Рекомендации[НомерТекущейСтроки], Истина);
	Обработки.ПодборРекомендаций.ЗаписатьСтрокуРекомендации(Объект, Объект.Рекомендации[НомерЗаменяемойСтроки], Истина);
	
КонецПроцедуры

#КонецОбласти

