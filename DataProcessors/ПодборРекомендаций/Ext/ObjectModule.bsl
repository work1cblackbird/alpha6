
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРекомендации(ЗаполнениеСуммРекомендаций = Истина) Экспорт
	
	Запрос=Новый Запрос;
	ТекстЗапроса= 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РекомендацииПоАвтомобилю.Период КАК Период,
		|	РекомендацииПоАвтомобилю.Период КАК ПериодЗаписи,
		|	РекомендацииПоАвтомобилю.Автомобиль КАК Автомобиль,
		|	РекомендацииПоАвтомобилю.Рекомендация.Артикул КАК РекомендацияАртикул,
		|	РекомендацииПоАвтомобилю.Рекомендация КАК Рекомендация,
		|	РекомендацииПоАвтомобилю.Рекомендация КАК РекомендацияЗаписи,
		|	РекомендацииПоАвтомобилю.Количество КАК Количество,
		|	РекомендацииПоАвтомобилю.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт,
		|	РекомендацииПоАвтомобилю.ЗаказНаряд КАК ЗаказНаряд,
		|	РекомендацииПоАвтомобилю.ПричинаОтказа КАК ПричинаОтказа,
		|	РекомендацииПоАвтомобилю.ДатаВыполнения КАК ДатаВыполнения,
		|	РекомендацииПоАвтомобилю.Автор КАК Автор,
		|	РекомендацииПоАвтомобилю.Исполнитель КАК Исполнитель,
		|	РекомендацииПоАвтомобилю.Выполнена КАК Выполнена,
		|	ВЫБОР
		|		КОГДА РекомендацииПоАвтомобилю.Выполнена = ИСТИНА
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Завершено)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА (РекомендацииПоАвтомобилю.ЗаявкаНаРемонт <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРемонт.ПустаяСсылка)
		|						ИЛИ РекомендацииПоАвтомобилю.ЗаказНаряд <> ЗНАЧЕНИЕ(Документ.ЗаказНаряд.ПустаяСсылка))
		|						И РекомендацииПоАвтомобилю.Выполнена = ЛОЖЬ
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Выполняется)
		|				ИНАЧЕ ВЫБОР
		|						КОГДА РекомендацииПоАвтомобилю.ЗаявкаНаРемонт = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРемонт.ПустаяСсылка)
		|								И РекомендацииПоАвтомобилю.ЗаказНаряд = ЗНАЧЕНИЕ(Документ.ЗаказНаряд.ПустаяСсылка)
		|								И РекомендацииПоАвтомобилю.ДатаАктуальности > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|								И РекомендацииПоАвтомобилю.ДатаАктуальности <= &ТекущаяДата
		|							ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Неактуально)
		|						ИНАЧЕ ВЫБОР
		|								КОГДА РекомендацииПоАвтомобилю.ПричинаОтказа <> ЗНАЧЕНИЕ(Справочник.ПричиныОтказаОтОбслуживания.ПустаяСсылка)
		|									ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Отменено)
		|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Запланировано)
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Состояние,
		|	РекомендацииПоАвтомобилю.ДатаАктуальности КАК ДатаАктуальности,
		|	РекомендацииПоАвтомобилю.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	РекомендацииПоАвтомобилю.Коэффициент КАК Коэффициент,
		|	РекомендацииПоАвтомобилю.Комментарий КАК Комментарий,
		|	РекомендацииПоАвтомобилю.ДатаЗаписи КАК ДатаЗаписи
		|ИЗ
		|	РегистрСведений.РекомендацииПоАвтомобилю КАК РекомендацииПоАвтомобилю
		|ГДЕ
		|	РекомендацииПоАвтомобилю.Автомобиль = &Автомобиль
		|
		|УПОРЯДОЧИТЬ ПО
		|	РекомендацииПоАвтомобилю.ДатаЗаписи,
		|	Период,
		|	Рекомендация";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Автомобиль",Автомобиль);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Рекомендации.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если ЗаполнениеСуммРекомендаций Тогда
		ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
		Для каждого СтрокаРекомендации Из Рекомендации Цикл
			РассчитатьЦенуРекомендации(СтрокаРекомендации);
		КонецЦикла;
	КонецЕсли;
	
	Модифицированность=Ложь;
	
КонецПроцедуры

Процедура РассчитатьЦенуРекомендации(СтрокаРекомендации) Экспорт
	
	Если ЗначениеЗаполнено(Дата) Тогда
		ДатаЦен = КонецДня(Дата);
	Иначе
		ДатаЦен = Неопределено;
	КонецЕсли;
	
	ВалютаРегл 	= Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	Коэффициент = СтрокаРекомендации.Коэффициент;

	Если ЗначениеЗаполнено(СтрокаРекомендации.Рекомендация) Тогда
		
		Если ТипЗнч(СтрокаРекомендации.Рекомендация) = Тип("СправочникСсылка.Номенклатура") Тогда
			
			Цена = ЦенообразованиеСервер.ПолучитьЦену(
				ТипЦен,
				СтрокаРекомендации.Рекомендация,
				ДатаЦен,,
				ВалютаРегл,,,,
				ПараметрыСеанса.ПодразделениеКомпании
			);
			
		ИначеЕсли ТипЗнч(СтрокаРекомендации.Рекомендация) = Тип("СправочникСсылка.Автоработы") Тогда
			
			ЦенаРаботы = ЦенообразованиеСервер.ПолучитьЦенуАвтоработы(
				ТипЦенАвторабот,
				СтрокаРекомендации.Рекомендация,
				Автомобиль.Модель,
				Контрагент,
				ДоговорВзаиморасчетов,
				Цех,
				ВидРемонта,
				ДатаЦен,
				ВалютаРегл,
				1
			);
			
			Нормочас = ЦенаРаботы.Нормочас;
			
			Если СтрокаРекомендации.Коэффициент = 0 И ЗначениеЗаполнено(ЦенаРаботы.НормаВремени) Тогда
				Коэффициент = ЦенаРаботы.НормаВремени;
			Иначе 
				Коэффициент = СтрокаРекомендации.Коэффициент;
			КонецЕсли;
			
			СтрокаРекомендации.Цена = ЦенаРаботы.Цена;
			СтрокаРекомендации.Коэффициент = Коэффициент;
			
			Если Не ЗначениеЗаполнено(ЦенаРаботы)
				ИЛИ Не ПолучитьЗначениеПараметраСтруктуры(ЦенаРаботы, "ЦенаНайдена", Ложь) Тогда
				
				// Получим из автоработы
				СпособРасчетаСтоимостиРаботы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
					СтрокаРекомендации.Рекомендация, "СпособРасчетаСтоимостиРаботы");
				
				СтрокаРекомендации.СпособРасчетаСтоимостиРаботы = ?(
					ЗначениеЗаполнено(СпособРасчетаСтоимостиРаботы),
					СпособРасчетаСтоимостиРаботы,
					Перечисления.СпособыРасчетаСтоимостиРаботы.ФиксированнойСуммой);
				
			Иначе
				
				ВидЦены = "";
				СтрокаРекомендации.СпособРасчетаСтоимостиРаботы = ?(
					ЦенаРаботы.Свойство("ВидЦены", ВидЦены) И ВидЦены = "Нормочас",
					Перечисления.СпособыРасчетаСтоимостиРаботы.ПоНормеВремени,
					Перечисления.СпособыРасчетаСтоимостиРаботы.ФиксированнойСуммой);
				
			КонецЕсли;
			
			Если СтрокаРекомендации.СпособРасчетаСтоимостиРаботы =
				Перечисления.СпособыРасчетаСтоимостиРаботы.ФиксированнойСуммой Тогда
				СтрокаРекомендации.Сумма = СтрокаРекомендации.Цена * СтрокаРекомендации.Количество;
			Иначе
				СтрокаРекомендации.Сумма = СтрокаРекомендации.Цена * СтрокаРекомендации.Количество * СтрокаРекомендации.Коэффициент;
			КонецЕсли;
			
			Возврат;
			
		Иначе
			Цена = 0;
		КонецЕсли;
		
	Иначе
		Цена = 0;
	КонецЕсли;
	
	СтрокаРекомендации.Цена = Цена;
	СтрокаРекомендации.Коэффициент = Коэффициент;
	СтрокаРекомендации.Сумма = СтрокаРекомендации.Цена * СтрокаРекомендации.Количество * СтрокаРекомендации.Коэффициент;
	СтрокаРекомендации.СпособРасчетаСтоимостиРаботы = Перечисления.СпособыРасчетаСтоимостиРаботы.ПустаяСсылка();
	
КонецПроцедуры

// Функция - Проверить наличие рекомендация
//
// Параметры:
//  СостояниеВыполнения	 - ПеречислениеСсылка.СостоянияСобытий - Состояние события
// 
// Возвращаемое значение:
//  Булево - 	Истина, если есть рекомендации
//  			Ложь, если нет.
//
Функция ПроверитьНаличиеРекомендация(СостояниеВыполнения = Неопределено) Экспорт

	Если СостояниеВыполнения = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли  СостояниеВыполнения = Перечисления.СостоянияСобытий.Запланировано Тогда
		ТекстЗапроса=
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	РекомендацииПоАвтомобилю.Выполнена КАК Выполнена,
		|	РекомендацииПоАвтомобилю.Автомобиль КАК Автомобиль,
		|	РекомендацииПоАвтомобилю.Рекомендация КАК Рекомендация
		|ИЗ
		|	РегистрСведений.РекомендацииПоАвтомобилю КАК РекомендацииПоАвтомобилю
		|ГДЕ
		|	РекомендацииПоАвтомобилю.Автомобиль = &Автомобиль
		|	И РекомендацииПоАвтомобилю.Выполнена = ЛОЖЬ
		|	И НЕ(РекомендацииПоАвтомобилю.ЗаявкаНаРемонт <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРемонт.ПустаяСсылка)
		|				ИЛИ РекомендацииПоАвтомобилю.ЗаказНаряд <> ЗНАЧЕНИЕ(Документ.ЗаказНаряд.ПустаяСсылка))
		|	И РекомендацииПоАвтомобилю.ПричинаОтказа = ЗНАЧЕНИЕ(Справочник.ПричиныОтказаОтОбслуживания.ПустаяСсылка)";
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
	
	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции // ПроверитьНаличиеРекомендация()

#КонецОбласти

#КонецЕсли