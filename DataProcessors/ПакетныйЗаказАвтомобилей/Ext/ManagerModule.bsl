// Модуль менеджера обработки "Пакетный заказ автомобилей"
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает предопределенную структуру действий
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
// Возвращаемое значение:
//   Структура - структура, содержащая параметры действия.
//
Функция ПолучитьПараметрыДействия(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	Если ПараметрыДействия = Неопределено Тогда
		ПараметрыДействия = Новый Структура;
	КонецЕсли;
	
	// Производим добавление параметров расширяемых контекст обработки событий объекта
	ПараметрыДействия.Вставить("ОбъектЗаполнен", Объект.Автомобили.Количество() > 0);
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ПараметрыДействия.Вставить("РезервыДляКонтрагента", Объект.Контрагент);
	КонецЕсли;
	
	Возврат ПараметрыДействия;
	
КонецФункции // ПолучитьПараметрыДействия()

// Процедура выполняет пересчет реквизита "Сумма документа"
//
// Параметры:
//  Объект  - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//
Процедура ПересчитатьСуммуДокумента(Объект) Экспорт
	Объект.СуммаДокумента = ?(Объект.Автомобили.Количество() > 0, Объект.Автомобили.Итог("СуммаВсего"), 0) + ?(Объект.Опции.Количество() > 0, Объект.Опции.Итог("СуммаВсего"), 0);
КонецПроцедуры

// Проведение или запись документов "Заказ поставщику на автомобиль"
//
// Параметры:
//  Параметры - Структура - параметры записи документов.
//
// Возвращаемое значение:
//  Структура - Начать запись в фоне:
// * ВсеОК - Булево - признак успешности выполнения операции;
// * СписокДокументов - Массив Из ДокументСсылка.ЗаказПоставщикуНаАвтомобиль - созданные документы;
// * Информация - Строка - описание ошибки;
// * Сообщения - Массив Из Строка - сообщения об ошибках;
// 
Функция НачатьЗаписьВФоне(Параметры) Экспорт
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Результат = НовыйРезультатГенерацииДокумнетов();
	Событие = ПодготовитьСобытие(Параметры);
	
	Попытка
		
		Событие.Записать(РежимЗаписиДокумента.Проведение);
		
	Исключение
		
		Если ТранзакцияАктивна() Тогда
			
			ОтменитьТранзакцию();
			
		КонецЕсли;
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации(
			СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке)
		);
		Результат.Информация = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		Результат.ВсеОК = Ложь;
		Возврат Результат;
		
	КонецПопытки;
	
	ЦенаВключаетНДС = НЕ ЗначениеЗаполнено(Параметры.ТипЦен) ИЛИ Параметры.ТипЦен.ЦенаВключаетНДС;
	
	Для Каждого Строка Из Параметры.ТаблицаАвтомобили Цикл
		
		Для Сч = 1 По Строка.Количество Цикл
			
			ЗаказНаАвтомобиль = ПодготовитьЗаказПоставщику(Параметры, Событие.Ссылка);
			ЗаказНаАвтомобиль.ЦенаАвтомобиля         = Строка.Цена;
			ЗаказНаАвтомобиль.СтавкаНДСНаАвтомобиль  = Строка.СтавкаНДС;
			
			Если Строка.Автомобиль.Пустая() Тогда
				
				//@skip-check structure-consructor-too-many-keys
				ПоляАвтомобиля = Новый Структура("Цвет,Марка,Модель,ТипСалона,ВариантКомплектации");
				НовыйАвтомобиль = Справочники.Автомобили.СоздатьЭлемент();
				НовыйАвтомобиль.ОбменДанными.Загрузка = Истина;
				НовыйАвтомобиль.Заполнить(Неопределено);
				НовыйАвтомобиль.УстановитьНовыйКод();
				ЗаполнитьЗначенияСвойств(НовыйАвтомобиль, Строка, "Цвет,Марка,Модель,ТипСалона,ВариантКомплектации");
				ЗаполнитьЗначенияСвойств(ПоляАвтомобиля, Строка, "Цвет,Марка,Модель,ТипСалона,ВариантКомплектации");
				НовыйАвтомобиль.Наименование = Справочники.Автомобили.СформироватьНаименованиеАвтомобиляПоПолям(
					Строка.Модель,
					Строка.Цвет,
					"",
					""
				);
				
				Попытка
					
					НовыйАвтомобиль.Записать();
					ПоляАвтомобиля.Вставить("Автомобиль", НовыйАвтомобиль.Ссылка);
					
				Исключение
					
					Если ТранзакцияАктивна() Тогда
						
						ОтменитьТранзакцию();
						
					КонецЕсли;
					
					ИнформацияОбОшибке = ИнформацияОбОшибке();
					ЗаписьЖурналаРегистрации(
						СобытиеЖурналаРегистрации(),
						УровеньЖурналаРегистрации.Ошибка,
						,
						,
						ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке)
					);
					Результат.Информация = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
					Результат.ВсеОК = Ложь;
					Возврат Результат;
					
				КонецПопытки;
				
			Иначе
				
				ПоляАвтомобиля = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
					Строка.Автомобиль,
					"Цвет,Марка,Модель,ТипСалона,ВариантКомплектации"
				);
				ПоляАвтомобиля.Вставить("Автомобиль", Строка.Автомобиль);
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЗаказНаАвтомобиль, ПоляАвтомобиля);
			
			Если ЦенаВключаетНДС Тогда
				
				ЗаказНаАвтомобиль.СуммаВсегоНаАвтомобиль = Строка.Цена;
				ЗаказНаАвтомобиль.СуммаНДСНаАвтомобиль =
					(ЗаказНаАвтомобиль.СтавкаНДСНаАвтомобиль.Ставка * Строка.Цена)
					/ (100 + ЗаказНаАвтомобиль.СтавкаНДСНаАвтомобиль.Ставка);
				
			Иначе
				
				ЗаказНаАвтомобиль.СуммаНДСНаАвтомобиль   = (ЗаказНаАвтомобиль.СтавкаНДСНаАвтомобиль.Ставка * Строка.Цена) / 100;
				ЗаказНаАвтомобиль.СуммаВсегоНаАвтомобиль = Строка.Цена + ЗаказНаАвтомобиль.СуммаНДСНаАвтомобиль;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.СрокПоставки) Тогда
				
				ЗаказНаАвтомобиль.СрокПоставки = Строка.СрокПоставки;
				
			КонецЕсли;
			
			ОпцииАвтомобиля = Параметры.ТаблицаОпции.НайтиСтроки(
				Новый Структура("ИдентификаторСтроки", Строка.ИдентификаторСтроки)
			);
			
			Для Каждого Опция Из ОпцииАвтомобиля Цикл
				
				ЗаполнитьЗначенияСвойств(ЗаказНаАвтомобиль.Опции.Добавить(), Опция);
				
			КонецЦикла;
			
			ИсходныеСообщения = ПолучитьСообщенияПользователю(Истина);
			Для Каждого Сообщение Из ИсходныеСообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
			
			Попытка
				
				ЗаказНаАвтомобиль.Записать(РежимЗаписиДокумента.Проведение);
				Результат.СписокДокументов.Добавить(ЗаказНаАвтомобиль.Ссылка);
				
			Исключение
				
				Если ТранзакцияАктивна() Тогда
					
					ОтменитьТранзакцию();
					
				КонецЕсли;
				
				// Сформируем текст ошибки
				ИнформацияОбОшибке = ИнформацияОбОшибке();
				ТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
				Сообщения = ПолучитьСообщенияПользователю(Истина);
				Для Каждого Сообщение Из Сообщения Цикл
					ТекстОшибки = СокрП(ТекстОшибки + Символы.ПС + Символы.ПС + СокрЛ(Сообщение.Текст));
					Результат.Сообщения.Добавить(СокрЛ(Сообщение.Текст));
				КонецЦикла;
				
				ЗаписьЖурналаРегистрации(
					СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка,
					,
					,
					ТекстОшибки
				);
				
				Результат.Информация = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
				Результат.ВсеОК = Ложь;
				Возврат Результат;
				
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Попытка
		
		Событие.Записать(РежимЗаписиДокумента.Проведение);
		
	Исключение
		
		Если ТранзакцияАктивна() Тогда
			
			ОтменитьТранзакцию();
			
		КонецЕсли;
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации(
			СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке)
		);
		Результат.Информация = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		Результат.ВсеОК = Ложь;
		Возврат Результат;
		
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	Результат.ВсеОК = Истина;
	Возврат Результат;
	
КонецФункции

// Удаление лишних строк из табличной части опции
//
// Параметры:
//  Объект        - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ИДДляУдаления - Строка - Уникальный идетификатор для удаления.
//
Процедура УдалениеСтрокОпций(Объект, ИДДляУдаления) Экспорт
	СтрокиДляУдаления = Объект.Опции.НайтиСтроки(Новый Структура("ИдентификаторСтроки", ИДДляУдаления));
	Для Каждого Строка Из СтрокиДляУдаления Цикл
		Объект.Опции.Удалить(Строка);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(ТабЧастьАвтомобили, ТабЧастьОпции, ОбязательныеРеквизиты) Экспорт
	Результат = Истина;
	Если НЕ ЗначениеЗаполнено(ОбязательныеРеквизиты.Организация) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Организация не заполнена'"));
		Результат = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОбязательныеРеквизиты.ПодразделениеКомпании) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Подразделение компании не заполнено'"));
		Результат = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОбязательныеРеквизиты.Автор) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Автор не заполнен'"));
		Результат = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОбязательныеРеквизиты.ВалютаДокумента) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Валюта не заполнена'"));
		Результат = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОбязательныеРеквизиты.КурсДокумента) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Курс не заполнен'"));
		Результат = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОбязательныеРеквизиты.ТипЦен) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Тип цен не заполнен'"));
		Результат = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОбязательныеРеквизиты.Контрагент) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Контрагент не заполнен'"));
		Результат = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОбязательныеРеквизиты.ДоговорВзаиморасчетов) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Договор взаиморасчетов не заполнен'"));
		Результат = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОбязательныеРеквизиты.СрокПоставки) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Срок поставки документа не заполнен'"));
		Результат = Ложь;
	КонецЕсли;
	
	Если ТабЧастьАвтомобили.Количество() > 0 Тогда
		Для Каждого ТекСтрока Из ТабЧастьАвтомобили Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Модель) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = 'Модель автомобиля не заполнена в строке %1'"), ТекСтрока.НомерСтроки)
				);
				Результат = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Марка) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = 'Марка автомобиля не заполнена в строке %1'"), ТекСтрока.НомерСтроки)
				);
				Результат = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Количество) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = 'Количество автомобилей не заполнено в строке %1'"), ТекСтрока.НомерСтроки)
				);
				Результат = Ложь;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Табличная часть ""Автомобили""  не содержит строк.'"));
		Результат = Ложь;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТабЧастьопции Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.Опция) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Опция не заполнена в строке %1'"),ТекСтрока.НомерСтроки)
			);
			Результат = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ТекСтрока.Количество) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Количество опций не заполнено в строке %1'"),ТекСтрока.НомерСтроки)
			);
			Результат = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ПроверитьДублиСтрокОпций(ТабЧастьОпции) Тогда
		Результат = Ложь;
	КонецЕсли;
	Если ПроверитьДублиСтрокАвтомобилей(ТабЧастьАвтомобили) Тогда
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Реквизиты_шапки

// Обработчик события возникающего при изменении данных реквизита "Контрагент".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура КонтрагентПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	ОбработкаРеквизитовДокументаСервер.КонтрагентПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // КонтрагентПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Организация".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОрганизацияПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	ОбработкаРеквизитовДокументаСервер.ОрганизацияПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // КонтрагентПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Валюта документа".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ВалютаДокументаПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	ОбработкаРеквизитовДокументаСервер.ВалютаДокументаПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // ВалютаДокументаПриИзмененииНаСервере()

// Обработчик события возникающего при изменении данных реквизита "Тип цен".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ТипЦенПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	ОбработкаРеквизитовДокументаСервер.ТипЦенПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // ТипЦенПриИзмененииНаСервере()

// Обработчик события возникающего при изменении данных реквизита "ПодразделениеКомпании".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ПодразделениеКомпанииПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	ОбработкаРеквизитовДокументаСервер.ПодразделениеКомпанииПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // КонтрагентПриИзменении()

// Обработчик события возникающего при изменении данных реквизита "Контрагент".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ДоговорВзаиморасчетовПриИзменении(Объект, ПараметрыДействия = Неопределено) Экспорт
	
	// Устанавливаем параметры выполнения операции
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	ОбработкаРеквизитовДокументаСервер.ДоговорВзаиморасчетовПриИзменении(Объект, ПараметрыДействия);
	
КонецПроцедуры // КонтрагентПриИзменении()

// Процедура заполняет табличные части "Автомобили" и "Опции" по заказам покупателей.
Процедура ЗаполнитьТЧПоЗаказамПокупателей(Объект, ВалютаРегл, ВалютаУпр) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Автомобиль КАК Автомобиль
	               |ПОМЕСТИТЬ АвтомобилиНеВСписке
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗаказыПоставщикамНаАвтомобилиОстатки.Автомобиль КАК Автомобиль
	               |	ИЗ
	               |		РегистрНакопления.ЗаказыПоставщикамНаАвтомобили.Остатки КАК ЗаказыПоставщикамНаАвтомобилиОстатки
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ОстаткиАвтомобилейОстатки.Автомобиль
	               |	ИЗ
	               |		РегистрНакопления.ОстаткиАвтомобилей.Остатки КАК ОстаткиАвтомобилейОстатки) КАК ВложенныйЗапрос
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказыАвтомобилейОстатки.Заказ КАК ЗаказПокупателя,
	               |	ЗаказыАвтомобилейОстатки.Автомобиль КАК Автомобиль,
	               |	ЗаказыАвтомобилейОстатки.Автомобиль.Марка КАК Марка,
	               |	ЗаказыАвтомобилейОстатки.Автомобиль.Модель КАК Модель,
	               |	ЗаказыАвтомобилейОстатки.Автомобиль.ВариантКомплектации КАК ВариантКомплектации,
	               |	ЗаказыАвтомобилейОстатки.Автомобиль.Цвет КАК Цвет,
				   |    ЗаказыАвтомобилейОстатки.КоличествоОстаток КАК Количество,
	               |	ЗаказыАвтомобилейОстатки.СуммаОстаток КАК СуммаРег,
	               |	ЗаказыАвтомобилейОстатки.СуммаУпрОстаток КАК СуммаУпр,
	               |	ЗаказыАвтомобилейОстатки.Автомобиль.ТипСалона КАК ТипСалона,
	               |	ЗаказНаАвтомобильОпции.Опция КАК Опция,
	               |	ЗаказНаАвтомобильОпции.Количество КАК КоличествоОпция,
	               |	ЗаказНаАвтомобильОпции.Цена КАК ЦенаОпция,
	               |	ЗаказНаАвтомобильОпции.Сумма КАК СуммаОпция,
	               |	ЗаказНаАвтомобильОпции.СтавкаНДС КАК СтавкаНДСОпция,
	               |	ЗаказНаАвтомобильОпции.СуммаНДС КАК СуммаНДСОпция,
	               |	ЗаказНаАвтомобильОпции.СуммаВсего КАК СуммаВсегоОпция,
	               |	ЗаказНаАвтомобильОпции.Ссылка.ВалютаДокумента КАК ВалютаДокумента
	               |ИЗ
	               |	РегистрНакопления.ЗаказыАвтомобилей.Остатки(
	               |			,
	               |			НЕ Автомобиль В
	               |					(ВЫБРАТЬ
	               |						АвтомобилиНеВСписке.Автомобиль
	               |					ИЗ
	               |						АвтомобилиНеВСписке КАК АвтомобилиНеВСписке)) КАК ЗаказыАвтомобилейОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаАвтомобиль.Опции КАК ЗаказНаАвтомобильОпции
	               |		ПО ЗаказыАвтомобилейОстатки.Заказ = ЗаказНаАвтомобильОпции.Ссылка
	               |ИТОГИ
	               |	МАКСИМУМ(Автомобиль),
	               |	МАКСИМУМ(Марка),
	               |	МАКСИМУМ(Модель),
	               |	МАКСИМУМ(ВариантКомплектации),
	               |	МАКСИМУМ(Цвет),
				   |    МАКСИМУМ(Количество),
	               |	МАКСИМУМ(СуммаРег),
	               |	МАКСИМУМ(СуммаУпр),
	               |	МАКСИМУМ(ТипСалона),
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Опция),
	               |	МАКСИМУМ(КоличествоОпция)
	               |ПО
	               |	ЗаказПокупателя";
	
	Результат = Запрос.Выполнить();
	
	ВыборкаАвтомобили = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаАвтомобили.Следующий() Цикл
		
		НоваяСтрока = Объект.Автомобили.Добавить();
		
		НоваяСтрока.Автомобиль          = ВыборкаАвтомобили.Автомобиль;
		НоваяСтрока.Марка               = ВыборкаАвтомобили.Марка;
		НоваяСтрока.Модель              = ВыборкаАвтомобили.Модель;
		НоваяСтрока.ВариантКомплектации = ВыборкаАвтомобили.ВариантКомплектации;
		НоваяСтрока.ТипСалона           = ВыборкаАвтомобили.ТипСалона;
		НоваяСтрока.Цвет                = ВыборкаАвтомобили.Цвет;
		НоваяСтрока.Количество          = 1;
		
		ПараметрыНДС = ПолучитьПараметрыПлательщикаНДС(Объект.Организация, Объект.ПодразделениеКомпании, Объект.Дата);
			
		НоваяСтрока.СтавкаНДС = ПараметрыНДС.ОсновнаяСтавка;
		
		НоваяСтрока.СуммаНДС = (НоваяСтрока.СтавкаНДС.Ставка * НоваяСтрока.Сумма) / 100;
		
		Если Объект.ВалютаДокумента = ВалютаУпр Тогда	
			НоваяСтрока.СуммаВсего = ВыборкаАвтомобили.СуммаУпр;
		ИначеЕсли Объект.ВалютаДокумента = ВалютаРегл Тогда
			НоваяСтрока.СуммаВсего = ВыборкаАвтомобили.СуммаРег;
		Иначе
			НоваяСтрока.СуммаВсего = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаАвтомобили.СуммаУпр, ВалютаУпр, 
															ТекущаяДатаСеанса(), Объект.ВалютаДокумента, Объект.КурсДокумента);
		КонецЕсли;
		
		АвтомобилиСуммаВсегоПриИзменении(Объект, НоваяСтрока);
		
		НоваяСтрока.СрокПоставки        = Объект.СрокПоставки;
		НоваяСтрока.ЗаказПокупателя     = ВыборкаАвтомобили.ЗаказПокупателя;
		НоваяСтрока.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		
		Если ВыборкаАвтомобили.Опция > 0 Тогда
			
			ВыборкаОпции = ВыборкаАвтомобили.Выбрать();
			
			Пока ВыборкаОпции.Следующий() Цикл
				
				НоваяСтрокаОпции = Объект.Опции.Добавить();
				
				НоваяСтрокаОпции.Опция               = ВыборкаОпции.Опция;
				НоваяСтрокаОпции.Количество          = ВыборкаОпции.КоличествоОпция;
				НоваяСтрокаОпции.ИдентификаторСтроки = НоваяСтрока.ИдентификаторСтроки;
				НоваяСтрокаОпции.СтавкаНДС           = ВыборкаОпции.СтавкаНДСОпция;
				
				Если Объект.ВалютаДокумента = ВыборкаОпции.ВалютаДокумента Тогда
					НоваяСтрокаОпции.СуммаНДС        = ВыборкаОпции.СуммаНДСОпция;
					НоваяСтрокаОпции.СуммаВсего      = ВыборкаОпции.СуммаВсегоОпция;
				Иначе
					НоваяСтрокаОпции.СуммаНДС        = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаОпции.СуммаНДСОпция, 
							ВыборкаОпции.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, Объект.КурсДокумента);
					НоваяСтрокаОпции.СуммаВсего      = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаОпции.СуммаВсегоОпция,
							ВыборкаОпции.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, Объект.КурсДокумента);
				КонецЕсли;
				
				НоваяСтрокаОпции.СтавкаНДС = ПараметрыНДС.ОсновнаяСтавка;
				
				ОпцииСуммаВсегоПриИзменении(Объект, НоваяСтрокаОпции);

			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Процедура заполняет табличные части "Автомобили" и "Опции" по продажам
// Параметры:
//  ДатаНачала - дата начала
//  ДатаОкончания - дата окончания.
Процедура ЗаполнитьТЧПоПродажам(ДатаНачала, ДатаОкончания, Объект, ВалютаРегл, ВалютаУпр) Экспорт
 	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродажиАвтомобилейОбороты.Автомобиль КАК Автомобиль,
	|	ПродажиАвтомобилейОбороты.КоличествоОборот КАК КоличествоОборот,
	|	ПродажиАвтомобилейОбороты.Регистратор КАК Регистратор,
	|	ПродажиАвтомобилейОбороты.Автомобиль.Марка КАК АвтомобильМарка,
	|	ПродажиАвтомобилейОбороты.Автомобиль.Модель КАК АвтомобильМодель,
	|	ПродажиАвтомобилейОбороты.Автомобиль.ВариантКомплектации КАК АвтомобильВариантКомплектации,
	|	ПродажиАвтомобилейОбороты.Автомобиль.Цвет КАК АвтомобильЦвет,
	|	ПродажиАвтомобилейОбороты.Автомобиль.ТипСалона КАК АвтомобильТипСалона,
	|	ПродажиАвтомобилейОбороты.СуммаОборот КАК СуммаОборот,
	|	ПродажиАвтомобилейОбороты.СуммаУпрОборот КАК СуммаУпрОборот
	|ПОМЕСТИТЬ ПродажиАвтомобилей
	|ИЗ
	|	РегистрНакопления.ПродажиАвтомобилей.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ПродажиАвтомобилейОбороты
	|ГДЕ
	|	ПродажиАвтомобилейОбороты.Регистратор ССЫЛКА Документ.РеализацияАвтомобилей
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиАвтомобилейОбороты.Автомобиль,
	|	ПродажиАвтомобилейОбороты.КоличествоОборот,
	|	ПродажиАвтомобилейОбороты.Регистратор,
	|	ПродажиАвтомобилейОбороты.СуммаОборот,
	|	ПродажиАвтомобилейОбороты.Автомобиль.Модель,
	|	ПродажиАвтомобилейОбороты.Автомобиль.ВариантКомплектации,
	|	ПродажиАвтомобилейОбороты.Автомобиль.Цвет,
	|	ПродажиАвтомобилейОбороты.Автомобиль.ТипСалона,
	|	ПродажиАвтомобилейОбороты.СуммаУпрОборот,
	|	ПродажиАвтомобилейОбороты.Автомобиль.Марка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОпцииАвтомобилей.Опция КАК Опция,
	|	ОпцииАвтомобилей.Количество КАК КоличествоОпции,
	|	ОпцииАвтомобилей.Автомобиль КАК Автомобиль
	|ПОМЕСТИТЬ Опции
	|ИЗ
	|	ПродажиАвтомобилей КАК ПродажиАвтомобилей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОпцииАвтомобилей КАК ОпцииАвтомобилей
	|		ПО ПродажиАвтомобилей.Автомобиль = ОпцииАвтомобилей.Автомобиль
	|ГДЕ
	|	ОпцииАвтомобилей.ЗаписьАктивна = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПродажиАвтомобилей.АвтомобильМарка КАК Марка,
	|	ПродажиАвтомобилей.АвтомобильМодель КАК Модель,
	|	ПродажиАвтомобилей.АвтомобильВариантКомплектации КАК ВариантКомплектации,
	|	ПродажиАвтомобилей.АвтомобильЦвет КАК Цвет,
	|	ПродажиАвтомобилей.АвтомобильТипСалона КАК ТипСалона,
	|	ПродажиАвтомобилей.КоличествоОборот КАК Количество,
	|	ПродажиАвтомобилей.СуммаОборот КАК ЦенаРег,
	|	ПродажиАвтомобилей.СуммаОборот * ПродажиАвтомобилей.КоличествоОборот КАК СуммаРег,
	|	ПродажиАвтомобилей.Регистратор КАК Регистратор,
	|	ПродажиАвтомобилей.СуммаУпрОборот * ПродажиАвтомобилей.КоличествоОборот КАК СуммаУпр,
	|	ПродажиАвтомобилей.СуммаУпрОборот КАК ЦенаУпр,
	|	Опции.Опция КАК Опция,
	|	Опции.КоличествоОпции КАК КоличествоОпции
	|ИЗ
	|	ПродажиАвтомобилей КАК ПродажиАвтомобилей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Опции КАК Опции
	|		ПО ПродажиАвтомобилей.Автомобиль = Опции.Автомобиль
	|ИТОГИ
	|	МАКСИМУМ(Марка),
	|	МАКСИМУМ(Модель),
	|	МАКСИМУМ(ВариантКомплектации),
	|	МАКСИМУМ(Цвет),
	|	МАКСИМУМ(ТипСалона),
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(ЦенаРег),
	|	МАКСИМУМ(СуммаРег),
	|	МАКСИМУМ(СуммаУпр),
	|	МАКСИМУМ(ЦенаУпр),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Опция)
	|ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаАвтомобили = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаАвтомобили.Следующий() Цикл
		
		НоваяСтрока = Объект.Автомобили.Добавить();
		
		НоваяСтрока.Марка               = ВыборкаАвтомобили.Марка;
		НоваяСтрока.Модель              = ВыборкаАвтомобили.Модель;
		НоваяСтрока.ВариантКомплектации = ВыборкаАвтомобили.ВариантКомплектации;
		НоваяСтрока.ТипСалона           = ВыборкаАвтомобили.ТипСалона;
		НоваяСтрока.Цвет                = ВыборкаАвтомобили.Цвет;
		НоваяСтрока.Количество          = ВыборкаАвтомобили.Количество;
		
		// проверка валюты документа
		Если Объект.ВалютаДокумента = ВалютаУпр Тогда	
			НоваяСтрока.СуммаВсего = ВыборкаАвтомобили.СуммаУпр;
		ИначеЕсли Объект.ВалютаДокумента = ВалютаРегл Тогда
			НоваяСтрока.СуммаВсего = ВыборкаАвтомобили.СуммаРег;
		Иначе
			НоваяСтрока.СуммаВсего = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаАвтомобили.СуммаУпр,ВалютаУпр,ТекущаяДатаСеанса(),Объект.ВалютаДокумента,Объект.КурсДокумента);
		КонецЕсли;
		
		// проверка ставки НДС 
		ПараметрыНДС = ПолучитьПараметрыПлательщикаНДС(Объект.Организация, Объект.ПодразделениеКомпании, Объект.Дата);
		НоваяСтрока.СтавкаНДС = ПараметрыНДС.ОсновнаяСтавка;
			
		НоваяСтрока.СрокПоставки        = Объект.СрокПоставки;
		НоваяСтрока.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		АвтомобилиСуммаВсегоПриИзменении(Объект, НоваяСтрока);
		
		Если ВыборкаАвтомобили.Опция > 0 Тогда
			
			ВыборкаОпции = ВыборкаАвтомобили.Выбрать();
			
			Пока ВыборкаОпции.Следующий() Цикл
				
				НоваяСтрокаОпции = Объект.Опции.Добавить();
				НоваяСтрокаОпции.Опция               = ВыборкаОпции.Опция;
				НоваяСтрокаОпции.Количество          = ВыборкаОпции.КоличествоОпции;
				НоваяСтрокаОпции.ИдентификаторСтроки = НоваяСтрока.ИдентификаторСтроки;
				
				НоваяСтрокаОпции.СтавкаНДС = ПараметрыНДС.ОсновнаяСтавка;
				 
				НоваяСтрокаОпции.Цена = ЦенообразованиеСервер.ПолучитьЦенуОпции(Объект.ТипЦен, НоваяСтрокаОпции.Опция, НоваяСтрока.Модель, 
					НоваяСтрока.ВариантКомплектации,, Объект.ВалютаДокумента, Объект.КурсДокумента);
	
				ОпцииЦенаПриИзменении(Объект,НоваяСтрокаОпции);

			КонецЦикла;
			
		КонецЕсли;  
		
	КонецЦикла;

КонецПроцедуры

// Процедура заполняет табличные части "Автомобили" и "Опции" по Заказам поставщику
// Параметры:
//  ДатаНачала - дата начала
//  ДатаОкончания - дата окончания.
Процедура ЗаполнитьТЧПоЗаказамПоставщику(ДатаНачала, ДатаОкончания, Объект, ВалютаРегл, ВалютаУпр) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.Марка КАК АвтомобильМарка,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.Модель КАК АвтомобильМодель,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.ВариантКомплектации КАК АвтомобильВариантКомплектации,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.Цвет КАК АвтомобильЦвет,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.ТипСалона КАК АвтомобильТипСалона,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.КоличествоПриход КАК КоличествоПриход,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль КАК Автомобиль,
	|	МАКСИМУМ(ЗаказыПоставщикамНаАвтомобилиОбороты.СуммаПриход) КАК СуммаПриход,
	|	МАКСИМУМ(ЗаказыПоставщикамНаАвтомобилиОбороты.СуммаУпрПриход) КАК СуммаУпрПриход,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ЗаказПоставщикам
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикамНаАвтомобили.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ЗаказыПоставщикамНаАвтомобилиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.ВариантКомплектации,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.Модель,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.Цвет,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.ТипСалона,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.КоличествоПриход,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Регистратор,
	|	ЗаказыПоставщикамНаАвтомобилиОбороты.Автомобиль.Марка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщикуНаАвтомобильОпции.Опция КАК Опция,
	|	ЗаказПоставщикуНаАвтомобильОпции.Цена КАК Цена,
	|	ЗаказПоставщикуНаАвтомобильОпции.Ссылка.Марка КАК Марка,
	|	ЗаказПоставщикуНаАвтомобильОпции.Ссылка.Модель КАК Модель,
	|	ЗаказПоставщикуНаАвтомобильОпции.Ссылка.Автомобиль КАК Автомобиль,
	|	ЗаказПоставщикуНаАвтомобильОпции.Количество КАК Количество,
	|	ЗаказПоставщикуНаАвтомобильОпции.Сумма КАК Сумма,
	|	ЗаказПоставщикуНаАвтомобильОпции.СтавкаНДС КАК СтавкаНДС,
	|	ЗаказПоставщикуНаАвтомобильОпции.СуммаНДС КАК СуммаНДС,
	|	ЗаказПоставщикуНаАвтомобильОпции.СуммаВсего КАК СуммаВсего,
	|	ЗаказПоставщикуНаАвтомобильОпции.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	ЗаказПоставщикуНаАвтомобильОпции.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Док
	|ИЗ
	|	Документ.ЗаказПоставщикуНаАвтомобиль.Опции КАК ЗаказПоставщикуНаАвтомобильОпции
	|ГДЕ
	|	ЗаказПоставщикуНаАвтомобильОпции.Ссылка В
	|			(ВЫБРАТЬ
	|				ЗаказПоставщикам.Регистратор
	|			ИЗ
	|				ЗаказПоставщикам КАК ЗаказПоставщикам)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПоставщикам.Автомобиль КАК Автомобиль,
	|	ЗаказПоставщикам.АвтомобильМодель КАК Модель,
	|	ЗаказПоставщикам.АвтомобильМарка КАК Марка,
	|	ЗаказПоставщикам.АвтомобильВариантКомплектации КАК ВариантКомплектации,
	|	ЗаказПоставщикам.АвтомобильЦвет КАК Цвет,
	|	ЗаказПоставщикам.АвтомобильТипСалона КАК ТипСалона,
	|	СУММА(ЗаказПоставщикам.КоличествоПриход) КАК Количество,
	|	МАКСИМУМ(ЗаказПоставщикам.СуммаПриход) КАК ЦенаРег,
	|	Док.Опция КАК Опция,
	|	МАКСИМУМ(Док.Цена) КАК ЦенаОпция,
	|	СУММА(Док.Количество) КАК КоличествоОпция,
	|	ЗаказПоставщикам.СуммаУпрПриход КАК ЦенаУпр,
	|	Док.СуммаНДС КАК СуммаНДСОпция,
	|	Док.СтавкаНДС КАК СтавкаНДСОпция,
	|	Док.СуммаВсего КАК СуммаВсегоОпция,
	|	ЗаказПоставщикам.КоличествоПриход * ЗаказПоставщикам.СуммаПриход КАК СуммаРег,
	|	ЗаказПоставщикам.КоличествоПриход * ЗаказПоставщикам.СуммаУпрПриход КАК СуммаУпр,
	|	Док.ВалютаДокумента КАК ВалютаДокумента,
	|	Док.Сумма КАК СуммаОпция
	|ИЗ
	|	ЗаказПоставщикам КАК ЗаказПоставщикам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Док КАК Док
	|		ПО ЗаказПоставщикам.Регистратор = Док.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщикам.АвтомобильЦвет,
	|	ЗаказПоставщикам.АвтомобильМодель,
	|	Док.Опция,
	|	ЗаказПоставщикам.АвтомобильТипСалона,
	|	ЗаказПоставщикам.АвтомобильВариантКомплектации,
	|	ЗаказПоставщикам.Автомобиль,
	|	ЗаказПоставщикам.СуммаУпрПриход,
	|	Док.СуммаНДС,
	|	Док.СтавкаНДС,
	|	Док.СуммаВсего,
	|	Док.ВалютаДокумента,
	|	Док.Сумма,
	|	ЗаказПоставщикам.КоличествоПриход * ЗаказПоставщикам.СуммаПриход,
	|	ЗаказПоставщикам.КоличествоПриход * ЗаказПоставщикам.СуммаУпрПриход,
	|	ЗаказПоставщикам.АвтомобильМарка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказПоставщикам.Автомобиль
	|ИТОГИ
	|	МАКСИМУМ(Модель),
	|	МАКСИМУМ(Марка),
	|	МАКСИМУМ(ВариантКомплектации),
	|	МАКСИМУМ(Цвет),
	|	МАКСИМУМ(ТипСалона),
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(ЦенаРег),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Опция),
	|	МАКСИМУМ(ЦенаУпр),
	|	МАКСИМУМ(СуммаРег),
	|	МАКСИМУМ(СуммаУпр)
	|ПО
	|	Автомобиль";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаАвтомобили = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаАвтомобили.Следующий() Цикл
		
		НоваяСтрока = Объект.Автомобили.Добавить();
		
		НоваяСтрока.Марка               = ВыборкаАвтомобили.Марка;
		НоваяСтрока.Модель              = ВыборкаАвтомобили.Модель;
		НоваяСтрока.ВариантКомплектации = ВыборкаАвтомобили.ВариантКомплектации;
		НоваяСтрока.ТипСалона           = ВыборкаАвтомобили.ТипСалона;
		НоваяСтрока.Цвет                = ВыборкаАвтомобили.Цвет;
		НоваяСтрока.Количество          = ВыборкаАвтомобили.Количество;
		
		ПараметрыНДС = ПолучитьПараметрыПлательщикаНДС(Объект.Организация, Объект.ПодразделениеКомпании, Объект.Дата);
		НоваяСтрока.СтавкаНДС = ПараметрыНДС.ОсновнаяСтавка;
				
		НоваяСтрока.СуммаНДС = (НоваяСтрока.СтавкаНДС.Ставка * НоваяСтрока.Сумма) / 100;
		
		Если Объект.ВалютаДокумента = ВалютаУпр Тогда
			НоваяСтрока.СуммаВсего = ВыборкаАвтомобили.СуммаУпр;
		ИначеЕсли Объект.ВалютаДокумента = ВалютаРегл Тогда
			НоваяСтрока.СуммаВсего = ВыборкаАвтомобили.СуммаРег;
		Иначе
			НоваяСтрока.СуммаВсего = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаАвтомобили.СуммаУпр, ВалютаУпр,
															ТекущаяДатаСеанса(), Объект.ВалютаДокумента, Объект.КурсДокумента);
		КонецЕсли;
		
		НоваяСтрока.СрокПоставки        = Объект.СрокПоставки;
		НоваяСтрока.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		АвтомобилиСуммаВсегоПриИзменении(Объект, НоваяСтрока);
		
		Если ВыборкаАвтомобили.Опция > 0 Тогда
			
			ВыборкаОпции = ВыборкаАвтомобили.Выбрать();
			
			Пока ВыборкаОпции.Следующий() Цикл
				
				НоваяСтрокаОпции = Объект.Опции.Добавить();
				
				НоваяСтрокаОпции.Опция               = ВыборкаОпции.Опция;
				НоваяСтрокаОпции.Количество          = ВыборкаОпции.КоличествоОпция;
				НоваяСтрокаОпции.Цена                = ВыборкаОпции.ЦенаОпция;
				НоваяСтрокаОпции.Сумма               = ВыборкаОпции.СуммаВсегоОпция;
				НоваяСтрокаОпции.СтавкаНДС           = ВыборкаОпции.СтавкаНДСОпция;
				НоваяСтрокаОпции.ИдентификаторСтроки = НоваяСтрока.ИдентификаторСтроки;
				
				Если Объект.ВалютаДокумента = ВыборкаОпции.ВалютаДокумента Тогда
					НоваяСтрокаОпции.Цена            = ВыборкаОпции.ЦенаОпция;
					НоваяСтрокаОпции.Сумма           = ВыборкаОпции.СуммаОпция;
					НоваяСтрокаОпции.СуммаНДС        = ВыборкаОпции.СуммаНДСОпция;
					НоваяСтрокаОпции.СуммаВсего      = ВыборкаОпции.СуммаВсегоОпция;
				Иначе
					НоваяСтрокаОпции.Цена            = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаОпции.ЦенаОпция, 
								ВыборкаОпции.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, Объект.КурсДокумента);
					НоваяСтрокаОпции.Сумма           = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаОпции.СуммаОпция, 
								ВыборкаОпции.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, Объект.КурсДокумента);
					НоваяСтрокаОпции.СуммаНДС        = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаОпции.СуммаНДСОпция, 
								ВыборкаОпции.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, Объект.КурсДокумента);
					НоваяСтрокаОпции.СуммаВсего      = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаОпции.СуммаВсегоОпция, 
								ВыборкаОпции.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, Объект.КурсДокумента);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Конец.Реквизиты_шапки

// Реквизиты_таблицы_автомобилей

// Обработчик события возникающего при изменении данных реквизита "Автомобиль".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиАвтомобильПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	Если Не (Строка.Автомобиль = Справочники.Автомобили.ПустаяСсылка()) Тогда
		Строка.Количество = 1;
		АвтомобилиКоличествоПриИзменении(Объект, Строка, ПараметрыДействия);
		Автомобиль                    = Строка.Автомобиль;
		Строка.Модель                 = Автомобиль.Модель;
		Строка.Марка                  = Автомобиль.Марка;
		Строка.ВариантКомплектации    = Автомобиль.ВариантКомплектации;
		Строка.Цвет                   = Автомобиль.Цвет;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказыАвтомобилейОстатки.Автомобиль КАК Автомобиль,
	|	ЗаказыАвтомобилейОстатки.КоличествоОстаток,
	|	ЗаказыАвтомобилейОстатки.Заказ КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ЗаказыАвтомобилей.Остатки(
	|			,
	|			Заказ ССЫЛКА Документ.ЗаказНаАвтомобиль
	|				И Автомобиль <> ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК ЗаказыАвтомобилейОстатки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Результат = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Строка.Автомобиль = Выборка.Автомобиль Тогда
			Строка.ЗаказПокупателя = Выборка.Ссылка;
			Результат = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Не Результат Тогда
		Строка.ЗаказПокупателя = Документы.ЗаказНаАвтомобиль.ПустаяСсылка();
	КонецЕсли;
	
	АвтомобилиМодельПриИзменении(Объект, Строка, ПараметрыДействия);
	АвтомобилиЗаказПокупателяПриИзменении(Объект, Строка, ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Количество".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиКоличествоПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	Если Строка.Автомобиль <> Справочники.Автомобили.ПустаяСсылка() Тогда
		Строка.Количество = 1;
	КонецЕсли;
		
	АвтомобилиЦенаАвтомобиляПриИзменении(Объект,Строка, ПараметрыДействия);	
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Модель".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиМодельПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	Если Строка.Количество = 0 Тогда
		Строка.Количество = 1
	КонецЕсли;
	
	Строка.Марка = Строка.Модель.Марка;
	
	// Заполним ставку НДС  
	
	ПараметрыНДС = Новый Структура();
	
	Если Объект.ХозОперация = Справочники.ХозОперации.ПоступлениеАвтомобилей Тогда
		ОсвобожденОтНДС = Объект.Контрагент.ОсвобожденОтНДС ИЛИ
			Объект.Контрагент.ФормаСобственности = Перечисления.ФормыСобственности.ЧастноеЛицо;
	Иначе
		ПараметрыНДС = ПолучитьПараметрыПлательщикаНДС(Объект.Организация, Объект.ПодразделениеКомпании, Объект.Дата);	
		ОсвобожденОтНДС = ПараметрыНДС.ОсвобожденОтНДС;
	КонецЕсли;
	
	Если ОсвобожденОтНДС Тогда
		Строка.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
	Иначе
		Строка.СтавкаНДС = РаботаСоСтавкамиНДССервер.СтавкаНДСНоменклатуры(ПараметрыНДС);
	КонецЕсли;
	
	Строка.Цена = ЦенообразованиеСервер.ПолучитьЦенуАвтомобиля(Объект.ТипЦен, Строка.Модель, Строка.ВариантКомплектации,,
		Объект.ВалютаДокумента, Объект.КурсДокумента);
	
	АвтомобилиЦенаАвтомобиляПриИзменении(Объект,Строка, ПараметрыДействия);	
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Заказ".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиЗаказПокупателяПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыАвтомобилейОстатки.Заказ КАК Ссылка,
	|	ЗаказыАвтомобилейОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыАвтомобилей.Остатки КАК ЗаказыАвтомобилейОстатки
	|ГДЕ
	|	ЗаказыАвтомобилейОстатки.КоличествоОстаток - ЗаказыАвтомобилейОстатки.РезервОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗаказПокупателяПодходит = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка = Строка.ЗаказПокупателя Тогда
			ЗаказПокупателяПодходит = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗаказПокупателяПодходит Тогда
		УдалениеСтрокОпций(Объект, Строка.ИдентификаторСтроки);
		ЗаказПокупателя = Строка.ЗаказПокупателя;
		
		Строка.Марка               = ЗаказПокупателя.Марка;
		Строка.Модель              = ЗаказПокупателя.Модель;
		Строка.ВариантКомплектации = ЗаказПокупателя.ВариантКомплектации;
		Строка.ТипСалона           = ЗаказПокупателя.ТипСалона;
		Строка.Цвет                = ЗаказПокупателя.Цвет;
		Строка.Автомобиль          = ЗаказПокупателя.Автомобиль;
		Строка.СрокПоставки        = ЗаказПокупателя.СрокПоставки;
		Строка.Количество          = 1;
		
		Если ЗаказПокупателя.ВалютаДокумента = Объект.ВалютаДокумента Тогда
			Строка.Цена       = ЗаказПокупателя.СуммаВсегоНаАвтомобиль;
			Строка.СуммаВсего = ЗаказПокупателя.СуммаВсегоНаАвтомобиль;
			Строка.Сумма      = ЗаказПокупателя.СуммаВсегоНаАвтомобиль;
			Строка.СуммаНДС   = ЗаказПокупателя.СуммаНДСНаАвтомобиль;
		Иначе
			Строка.Цена       = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ЗаказПокупателя.СуммаВсегоНаАвтомобиль, ЗаказПокупателя.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, ТекущаяДатаСеанса());
			Строка.СуммаВсего = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ЗаказПокупателя.СуммаВсегоНаАвтомобиль, ЗаказПокупателя.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, ТекущаяДатаСеанса());
			Строка.Сумма      = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ЗаказПокупателя.СуммаВсегоНаАвтомобиль, ЗаказПокупателя.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, ТекущаяДатаСеанса());
			Строка.СуммаНДС   = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ЗаказПокупателя.СуммаНДСНаАвтомобиль,   ЗаказПокупателя.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, ТекущаяДатаСеанса());
		КонецЕсли;
		Строка.СтавкаНДС      = ЗаказПокупателя.СтавкаНДСНаАвтомобиль;
		
		ОпцииЗаказПокупателя     = ЗаказПокупателя.Опции.Выгрузить();
		
		Для Каждого ТекЭлемент Из ОпцииЗаказПокупателя Цикл
			
			НоваяСтрокаОпции = Объект.Опции.Добавить();
			
			НоваяСтрокаОпции.ИдентификаторСтроки = Строка.ИдентификаторСтроки;
			НоваяСтрокаОпции.Количество          = ТекЭлемент.Количество;
			НоваяСтрокаОпции.Опция               = ТекЭлемент.Опция;
			НоваяСтрокаОпции.СтавкаНДС           = ТекЭлемент.СтавкаНДС;
			Если ЗаказПокупателя.ВалютаДокумента = Объект.ВалютаДокумента Тогда
				НоваяСтрокаОпции.Сумма               = ТекЭлемент.Сумма;
				НоваяСтрокаОпции.СуммаВсего          = ТекЭлемент.СуммаВсего;
				НоваяСтрокаОпции.СуммаНДС            = ТекЭлемент.СуммаНДС;
				НоваяСтрокаОпции.Цена                = ТекЭлемент.Цена;
			Иначе
				НоваяСтрокаОпции.Сумма               = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекЭлемент.Сумма,      ЗаказПокупателя.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, ТекущаяДатаСеанса());
				НоваяСтрокаОпции.СуммаВсего          = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекЭлемент.СуммаВсего, ЗаказПокупателя.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, ТекущаяДатаСеанса());
				НоваяСтрокаОпции.СуммаНДС            = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекЭлемент.СуммаНДС,   ЗаказПокупателя.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, ТекущаяДатаСеанса());
				НоваяСтрокаОпции.Цена                = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекЭлемент.Цена,       ЗаказПокупателя.ВалютаДокумента, ТекущаяДатаСеанса(), Объект.ВалютаДокумента, ТекущаяДатаСеанса());
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Строка.ЗаказПокупателя = Документы.ЗаказПокупателя.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Сумма всего".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиСуммаВсегоПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	// Определим включают ли в себя НДС цены документа
	ЦенаВключаетНДС = (НЕ ЗначениеЗаполнено(Объект.ТипЦен) ИЛИ Объект.ТипЦен.ЦенаВключаетНДС);
	// Рассчитаем значение реквизита "Сумма". Если расчет НДС не ведется, то ЦенаВключаетНДС будет всегда Истина. 
	Если НЕ ЦенаВключаетНДС Тогда
		Строка.Сумма = Окр(Строка.СуммаВсего*100/(100+Строка.СтавкаНДС.Ставка),2);
	КонецЕсли;
	// Пересчитываем цену.
	Строка.Цена = ?(Строка.Количество = 0,0,Строка.Сумма/Строка.Количество);
	
	// Рассчитываем новую сумму НДС.
	Если ЦенаВключаетНДС Тогда
		Строка.Сумма=Строка.СуммаВсего;
		Строка.СуммаНДС = Окр((Строка.Сумма * Строка.СтавкаНДС.Ставка) / (100 + Строка.СтавкаНДС.Ставка), 2);
	Иначе
		Строка.СуммаНДС = Окр(Строка.Сумма * Строка.СтавкаНДС.Ставка / 100, 2);
		Строка.Сумма = (100 * Строка.СуммаВсего) / (100 + Строка.СтавкаНДС.Ставка);
	КонецЕсли;
	
	АвтомобилиСуммаПриИзменении(Объект, Строка, ПараметрыДействия);
	ПересчитатьСуммуДокумента(Объект);
	            
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Вариант комплектации".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиВариантКомплектацииПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	АвтомобилиЦенаАвтомобиляПриИзменении(Объект,Строка, ПараметрыДействия);
	АвтомобилиМодельПриИзменении(Объект,Строка, ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Тип салона".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиТипСалонаПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	

	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Цвет".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиЦветПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Цена".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиЦенаАвтомобиляПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	Строка.Сумма = Строка.Цена * Строка.Количество;
	АвтомобилиСуммаПриИзменении(Объект,Строка, ПараметрыДействия);
	ПересчитатьСуммуДокумента(Объект);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Сумма".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиСуммаПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	Строка.Цена = ?(Строка.Количество = 0, 0, Строка.Сумма / Строка.Количество);
	АвтомобилиСтавкаНДСПриИзменении(Объект, Строка, ПараметрыДействия);
	ПересчитатьСуммуДокумента(Объект);
		
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Ставка НДС".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиСтавкаНДСПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	// Определим каким образом у нас вычисляется НДС
	ЦенаВключаетНДС=(НЕ ЗначениеЗаполнено(Объект.ТипЦен) ИЛИ Объект.ТипЦен.ЦенаВключаетНДС);
	// Расчет НДС
	Если ЦенаВключаетНДС Тогда
		Строка.СуммаНДС = Окр((Строка.Сумма * Строка.СтавкаНДС.Ставка) / (100 + Строка.СтавкаНДС.Ставка) ,2);
	Иначе
		Строка.СуммаНДС = Окр(Строка.Сумма * Строка.СтавкаНДС.Ставка / 100, 2);
	КонецЕсли; 
	// В любом случаее идем в секцию "СуммаНДС", т.к. в ней будем произведен расчет суммы всего.
	АвтомобилиСуммаНДСПриИзменении(Объект, Строка, ПараметрыДействия);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Сумма НДС".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура АвтомобилиСуммаНДСПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	// Определим каким образом у нас вычисляется НДС
	ЦенаВключаетНДС = (НЕ ЗначениеЗаполнено(Объект.ТипЦен) ИЛИ Объект.ТипЦен.ЦенаВключаетНДС);
	Если ЦенаВключаетНДС Тогда
		Строка.СуммаВсего = Строка.Сумма;
	Иначе
		Строка.СуммаВсего = Строка.Сумма + Строка.СуммаНДС;
	КонецЕсли;
	
КонецПроцедуры

// Конец.Реквизиты_таблицы_автомобилей

// Реквизиты_таблицы_опций

// Обработчик события возникающего при изменении данных реквизита "Заказ".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОпцииСуммаВсегоПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	// Определим включают ли в себя НДС цены документа
	ЦенаВключаетНДС = (НЕ ЗначениеЗаполнено(Объект.ТипЦен) ИЛИ Объект.ТипЦен.ЦенаВключаетНДС);
	// Рассчитаем значение реквизита "Сумма". Если расчет НДС не ведется, то ЦенаВключаетНДС будет всегда Истина. 
	Если НЕ ЦенаВключаетНДС Тогда
		Строка.Сумма = Окр(Строка.СуммаВсего * 100 / (100 + Строка.СтавкаНДС.Ставка), 2);
	КонецЕсли;
	// Пересчитываем цену.
	Строка.Цена = ?(Строка.Количество = 0, 0, Строка.Сумма / Строка.Количество);
	// Рассчитываем новую сумму НДС.
	Если ЦенаВключаетНДС Тогда
		Строка.Сумма = Строка.СуммаВсего;
		Строка.СуммаНДС = Окр((Строка.Сумма * Строка.СтавкаНДС.Ставка) / (100 + Строка.СтавкаНДС.Ставка), 2);
	Иначе
		Строка.СуммаНДС = Окр(Строка.Сумма * Строка.СтавкаНДС.Ставка / 100, 2);
		Строка.Сумма = (100 * Строка.СуммаВсего) / (100 + Строка.СтавкаНДС.Ставка);
	КонецЕсли;
	
	ОпцииСуммаПриИзменении(Объект,Строка, ПараметрыДействия);
	ПересчитатьСуммуДокумента(Объект);
	
КонецПроцедуры

// Обработчик события возникающего при изменении данных реквизита "Заказ".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОпцииОпцияПриИзменении(Объект, Строка, СтрокаАвтомобиль, ПараметрыДействия = Неопределено) Экспорт
	
	ПараметрыДействия = ПолучитьПараметрыДействия(Объект, ПараметрыДействия);
	
	Если Строка.Опция.ПризнакНабора Тогда
		
		РазложитьНаборОпцийНаСтроки(Объект, Строка, СтрокаАвтомобиль, ПараметрыДействия);
		Возврат;
		
	КонецЕсли;
	
	Если Строка.Количество = 0 Тогда
		
		Строка.Количество = 1;
		
	КонецЕсли;
	
	ПараметрыНДС = Новый Структура();
	
	Если Объект.ХозОперация = Справочники.ХозОперации.ПоступлениеАвтомобилей Тогда
		ОсвобожденОтНДС = Объект.Контрагент.ОсвобожденОтНДС ИЛИ
		Объект.Контрагент.ФормаСобственности = Перечисления.ФормыСобственности.ЧастноеЛицо;
	Иначе
		ПараметрыНДС = ПолучитьПараметрыПлательщикаНДС(Объект.Организация, Объект.ПодразделениеКомпании, Объект.Дата);
		ОсвобожденОтНДС = ПараметрыНДС.ОсвобожденОтНДС;
	КонецЕсли;
	
	Если ОсвобожденОтНДС Тогда
		Строка.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
	Иначе
		Строка.СтавкаНДС = РаботаСоСтавкамиНДССервер.СтавкаНДСНоменклатуры(ПараметрыНДС);
	КонецЕсли;
	
	Строка.Цена = ЦенообразованиеСервер.ПолучитьЦенуОпции(Объект.ТипЦен, Строка.Опция, СтрокаАвтомобиль.Модель, 
		СтрокаАвтомобиль.ВариантКомплектации,, Объект.ВалютаДокумента, Объект.КурсДокумента);
	
	ОпцииЦенаПриИзменении(Объект,Строка, ПараметрыДействия);
	
КонецПроцедуры 

// Обработчик события возникающего при изменении данных реквизита "Заказ".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОпцииКоличествоПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	ОпцииЦенаПриИзменении(Объект,Строка, ПараметрыДействия);
	
КонецПроцедуры 

// Обработчик события возникающего при изменении данных реквизита "Заказ".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОпцииЦенаПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	Строка.Сумма=Строка.Цена*Строка.Количество;
	ОпцииСуммаПриИзменении(Объект,Строка, ПараметрыДействия);
	ПересчитатьСуммуДокумента(Объект);
	
КонецПроцедуры 

// Обработчик события возникающего при изменении данных реквизита "Заказ".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОпцииСуммаПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	Строка.Цена = ?(Строка.Количество = 0, 0, Строка.Сумма / Строка.Количество);
	ОпцииСтавкаНДСПриИзменении(Объект,Строка, ПараметрыДействия);
	ПересчитатьСуммуДокумента(Объект);
	
КонецПроцедуры 

// Обработчик события возникающего при изменении данных реквизита "Заказ".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОпцииСтавкаНДСПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	// Определим каким образом у нас вычисляется НДС
	ЦенаВключаетНДС=(НЕ ЗначениеЗаполнено(Объект.ТипЦен) ИЛИ Объект.ТипЦен.ЦенаВключаетНДС);
	// Расчет НДС
	Если ЦенаВключаетНДС Тогда
		Строка.СуммаНДС = Окр((Строка.Сумма * Строка.СтавкаНДС.Ставка) / (100 + Строка.СтавкаНДС.Ставка), 2);
	Иначе
		Строка.СуммаНДС = Окр(Строка.Сумма * Строка.СтавкаНДС.Ставка / 100, 2);
	КонецЕсли; 
	// В любом случае идем в секцию "СуммаНДС", т.к. в ней будем произведен расчет суммы всего.
	ОпцииСуммаНДСПриИзменении(Объект, Строка, ПараметрыДействия);		
	
КонецПроцедуры 

// Обработчик события возникающего при изменении данных реквизита "Заказ".
//
// Параметры:
//  Объект            - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура ОпцииСуммаНДСПриИзменении(Объект, Строка, ПараметрыДействия = Неопределено) Экспорт
	
	// Определим каким образом у нас вычисляется НДС
	ЦенаВключаетНДС = (НЕ ЗначениеЗаполнено(Объект.ТипЦен) ИЛИ Объект.ТипЦен.ЦенаВключаетНДС);
	Если ЦенаВключаетНДС Тогда
		Строка.СуммаВсего = Строка.Сумма;
	Иначе
		Строка.СуммаВсего = Строка.Сумма + Строка.СуммаНДС;
	КонецЕсли;
	
КонецПроцедуры

// Конец.Реквизиты_таблицы_опций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьДублиСтрокОпций(Опции)
	КолонкаОпции = Опции.Выгрузить(,"Опция, ИдентификаторСтроки");
	КолонкаОпции.Свернуть("Опция, ИдентификаторСтроки");
	НайденыДубли = Ложь;
	Для Каждого ТекСтрока Из КолонкаОпции Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Опция", ТекСтрока["Опция"]);
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", ТекСтрока["ИдентификаторСтроки"]);
		НайденныеСтроки = Опции.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 1 Тогда
			НомераСтрок = "";
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НомераСтрок = НомераСтрок + ?(НомераСтрок = "", "", ", " ) + НайденнаяСтрока.НомерСтроки;
			КонецЦикла;
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Имеются дубли опций <'")+ТекСтрока["Опция"]+НСтр("ru = '> в строках: '")+НомераСтрок);
			НайденыДубли = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат НайденыДубли;
КонецФункции

Функция ПроверитьДублиСтрокАвтомобилей(Автомобили)
	КолонкаАвтомобили = Автомобили.Выгрузить(,"Автомобиль");
	КолонкаАвтомобили.Свернуть("Автомобиль");
	Для Каждого ТекСтрока Из КолонкаАвтомобили Цикл
		Если ТекСтрока.Автомобиль = Справочники.Автомобили.ПустаяСсылка() Тогда
			КолонкаАвтомобили.Удалить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	НайденыДубли = Ложь;
	Для Каждого ТекСтрока Из КолонкаАвтомобили Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Автомобиль", ТекСтрока["Автомобиль"]);
		НайденныеСтроки = Автомобили.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 1 Тогда
			НомераСтрок = "";
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НомераСтрок = НомераСтрок + ?(НомераСтрок = "", "", ", " ) + НайденнаяСтрока.НомерСтроки;
			КонецЦикла;
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Имеются дубли опций <'")+ТекСтрока["Автомобиль"]+НСтр("ru = '> в строках: '")+НомераСтрок);
			НайденыДубли = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат НайденыДубли;
КонецФункции

Функция ПодготовитьСобытие(Параметры)
	
	ДокументСобытие = Документы.Событие.СоздатьДокумент();
	ДокументСобытие.Заполнить(Неопределено);
	ДокументСобытие.УстановитьНовыйНомер();
	ДокументСобытие.Дата          = ТекущаяДатаСеанса();
	ДокументСобытие.Тема          = Параметры.Комментарий;
	ДокументСобытие.Контрагент    = Параметры.Контрагент;
	ДокументСобытие.Состояние     = Перечисления.СостоянияСобытий.Запланировано;
	ДокументСобытие.ДатаНачала    = ДокументСобытие.Дата;
	ДокументСобытие.ДатаОкончания = ДокументСобытие.Дата;
	ДокументСобытие.Важность      = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
	ДокументСобытие.Автор         = Параметры.Автор;
	ДокументСобытие.Цель    = Параметры.Комментарий;
	ДокументСобытие.Комментарий   = Параметры.Комментарий;
	ДокументСобытие.Менеджер      = Параметры.Автор.Сотрудник;
	ДокументСобытие.ХозОперация   = Справочники.ХозОперации.Событие;
	ДокументСобытие.СторонниеЛица.Добавить().Контрагент = Параметры.Контрагент;
	ДокументСобытие.ВидСобытия   = Справочники.ВидыСобытий.Прочее;
	
	Возврат ДокументСобытие;
	
КонецФункции

Функция ПодготовитьЗаказПоставщику(Параметры, Основание)
	
	ЗаказНаАвтомобиль = Документы.ЗаказПоставщикуНаАвтомобиль.СоздатьДокумент();
	ЗаказНаАвтомобиль.Заполнить(Неопределено);
	ЗаполнитьЗначенияСвойств(ЗаказНаАвтомобиль, Параметры);
	ЗаказНаАвтомобиль.ХозОперация       = Справочники.ХозОперации.ЗаказПоставщикуНаАвтомобиль;
	ЗаказНаАвтомобиль.ДокументОснование = Основание;
	Возврат ЗаказНаАвтомобиль;
	
КонецФункции

Функция НовыйРезультатГенерацииДокумнетов()
	
	//@skip-check structure-consructor-too-many-keys
	Возврат Новый Структура("ВсеОК,СписокДокументов,Информация,Сообщения", Истина, Новый Массив, "", Новый Массив);
	
КонецФункции

Функция СобытиеЖурналаРегистрации()
	
	Возврат НСтр("ru = 'Пакетный заказ поставщику на автомобили'", ОбщегоНазначения.КодОсновногоЯзыка());
	
КонецФункции

Процедура РазложитьНаборОпцийНаСтроки(Объект, Строка, СтрокаАвтомобиль, ПараметрыДействия = Неопределено)
	
	Набор            = Строка.Опция;
	КоличествоНабора = Строка.Количество;
	
	Если КоличествоНабора = 0 Тогда
		
		КоличествоНабора = 1;
		
	КонецЕсли;
	
	Объект.Опции.Удалить(Строка);
	ИдентификаторСтроки = СтрокаАвтомобиль.ИдентификаторСтроки;
	
	Для Каждого ИзНабора Из Набор.СоставНабора Цикл
		
		УсловиеПоиска = Новый Структура("Опция,ИдентификаторСтроки", ИзНабора.Опция, ИдентификаторСтроки);
		СтрокиСОпциейВДокументе = Объект.Опции.НайтиСтроки(УсловиеПоиска);
		
		Если СтрокиСОпциейВДокументе.Количество() > 0 Тогда
			
			// Если добавляемое оборудование уже есть в табличной части увеличим количество.
			СтрокаТЧ = СтрокиСОпциейВДокументе[0];
			СтрокаТЧ.Количество = СтрокаТЧ.Количество + ИзНабора.Количество * КоличествоНабора;
			ОпцииКоличествоПриИзменении(Объект, СтрокаТЧ);
			
		Иначе
			
			СтрокаТЧ = Объект.Опции.Добавить();
			СтрокаТЧ.ИдентификаторСтроки = ИдентификаторСтроки;
			СтрокаТЧ.Опция               = ИзНабора.Опция;
			СтрокаТЧ.Количество          = ИзНабора.Количество * КоличествоНабора;
			ОпцииОпцияПриИзменении(Объект, СтрокаТЧ, СтрокаАвтомобиль);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти

#КонецЕсли