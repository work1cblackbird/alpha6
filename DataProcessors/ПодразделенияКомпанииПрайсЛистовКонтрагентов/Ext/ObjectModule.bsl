#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Начальная инициализация объекта
//
Процедура Инициализировать(ОтветственноеПодразделение, ПрайсЛист) Экспорт
	
	ОсновноеПодразделениеКомпании = ОтветственноеПодразделение;
	Если ОсновноеПодразделениеКомпании.Пустая() Тогда
		ОсновноеПодразделениеКомпании = Справочники.ПодразделенияКомпании.ОсновноеПодразделение;
		
		ОтветственноеПодразделение = ОсновноеПодразделениеКомпании;
	КонецЕсли;
	
	ПрайсЛистКонтрагента = ПрайсЛист;
	
	ОбновитьДерево();
	
КонецПроцедуры

// Устанавливаем ответственное перезаполнение и
// перезаполняем дерево подразделения
//
Процедура УстановитьОтветственноеПодразделение(ОтветственноеПодразделение) Экспорт
	
	ОсновноеПодразделениеКомпании = ОтветственноеПодразделение;
	ДеревоПодразделений.Строки.Очистить();
	
	ОбновитьДерево(Истина);
	
КонецПроцедуры

// Запись подразделений в базу
//
Процедура Записать() Экспорт
	Перем ТаблицаПодразделений;
	
	ДеревоВТаблицу(ТаблицаПодразделений);
	
	РезультатЗапрещенныеПодразделения = 1;
	РезультатРазрешенныеПодразделения = 2;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтветственноеПодразделение", ОсновноеПодразделениеКомпании);
	Запрос.УстановитьПараметр("ТаблицаПодразделений"      , ТаблицаПодразделений);
	Запрос.УстановитьПараметр("ПрайсЛист"                 , ПрайсЛистКонтрагента);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПодразделений.ПодразделениеКомпании,
	|	ТаблицаПодразделений.УровеньДоступности,
	|	ТаблицаПодразделений.ВИерархииОтветственногоПодразделения
	|ПОМЕСТИТЬ ТаблицаПодразделений
	|ИЗ
	|	&ТаблицаПодразделений КАК ТаблицаПодразделений
	|ГДЕ
	|	ТаблицаПодразделений.ПодразделениеКомпании <> &ОтветственноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПодразделений.ПодразделениеКомпании,
	|	&ПрайсЛист КАК ПрайсЛист,
	|	ТаблицаПодразделений.УровеньДоступности КАК Уровень
	|//ПОМЕСТИТЬ ЗапрещенныеПодразделения
	|ИЗ
	|	ТаблицаПодразделений КАК ТаблицаПодразделений
	|ГДЕ
	|	(ТаблицаПодразделений.ВИерархииОтветственногоПодразделения
	|		И ТаблицаПодразделений.УровеньДоступности <> ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.Просмотр))
	|	ИЛИ (НЕ ТаблицаПодразделений.ВИерархииОтветственногоПодразделения
	|		И ТаблицаПодразделений.УровеньДоступности <> ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.Запрещено))";
	
	Результат = Запрос.Выполнить();
	
	НаборРазрешенныеПодразделения = 
		РегистрыСведений.ПрайсЛистыКонтрагентовДоступностьПодразделенийКомпании.СоздатьНаборЗаписей();
	НаборРазрешенныеПодразделения.Отбор.ПрайсЛист.Установить(ПрайсЛистКонтрагента);
	НаборРазрешенныеПодразделения.Загрузить(Результат.Выгрузить());
	
	Попытка
		НаборРазрешенныеПодразделения.Записать(Истина);
	Исключение 
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка записи набора'"),
       				УровеньЖурналаРегистрации.Ошибка,,,
       				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункцииПоРаботеСИнтерфейсом

Процедура ОбойтиДерево(СтрокаДерева, ДанныеСтрок, Родитель = Неопределено)
	
	Если СтрокаДерева.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Родитель = Неопределено Тогда
		Родитель = ДеревоПодразделений.Строки;
	КонецЕсли;
	
	Для Каждого Строка Из СтрокаДерева.Строки Цикл
		НоваяСтрока = Родитель.Добавить();
		
		ДанныеСтрок.Сбросить();
		
		Условие = Новый Структура("ПодразделениеКомпании", Строка.ПодразделениеКомпании);
		
		ДанныеСтрок.НайтиСледующий(Условие);
		
		// заполним данными из регистров
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрок);
		
		// формируем представление строки для отображения на форме
		СформироватьПредставлениеСтроки(НоваяСтрока);
		
		// рекурсивный обход дерева
		ОбойтиДерево(Строка, ДанныеСтрок, НоваяСтрока.Строки);
	КонецЦикла;
	
КонецПроцедуры

// Обновление дерева подразделений на форме
//
Процедура ОбновитьДерево(УстановкаОтветственногоПодразделения = Ложь)
	
	ОбойтиДерево(ПолучитьДеревоПодразделений(), ПодразделенияКомпанииПрайсЛиста(УстановкаОтветственногоПодразделения));
	
КонецПроцедуры

Процедура СформироватьПредставлениеСтроки(Строка)
	
	Строка.Представление = Строка(Строка.ПодразделениеКомпании);
	
	Строка.ПредставлениеДоступа = Строка(НРег(СтрШаблон("(%1)", Строка.УровеньДоступности)));
	
	Если Строка.УровеньДоступности = Перечисления.УровниДоступностиПрайсЛистовКонтрагентов.Редактирование Тогда
		Строка.Картинка = 0;
	ИначеЕсли Строка.УровеньДоступности = Перечисления.УровниДоступностиПрайсЛистовКонтрагентов.Запрещено Тогда
		Строка.Картинка = 1;
	ИначеЕсли Строка.УровеньДоступности = Перечисления.УровниДоступностиПрайсЛистовКонтрагентов.Просмотр Тогда
		Строка.Картинка = 2;
	ИначеЕсли Строка.УровеньДоступности = Перечисления.УровниДоступностиПрайсЛистовКонтрагентов.ПрямыеЗаказы Тогда
		Строка.Картинка = 3;
	Иначе
		Строка.Картинка = -1;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьДоступныеПодразделенияКомпанииИзБазы(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПрайсЛист"            , ПрайсЛистКонтрагента);
	Запрос.УстановитьПараметр("ОсновноеПодразделение", ОсновноеПодразделениеКомпании);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрайсЛистыКонтрагентовДоступностьПодразделенийКомпании.ПодразделениеКомпании,
	|	ПрайсЛистыКонтрагентовДоступностьПодразделенийКомпании.Уровень
	|ПОМЕСТИТЬ ДоступностьПодразделенийКомпании
	|ИЗ
	|	РегистрСведений.ПрайсЛистыКонтрагентовДоступностьПодразделенийКомпании КАК ПрайсЛистыКонтрагентовДоступностьПодразделенийКомпании
	|ГДЕ
	|	ПрайсЛистыКонтрагентовДоступностьПодразделенийКомпании.ПрайсЛист = &ПрайсЛист";
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииПоРаботеСДанными

Процедура ДеревоВТаблицу(Таблица, СтрокаДерева = Неопределено)
	
	Если Таблица = Неопределено Тогда
		Таблица = Новый ТаблицаЗначений;
		Таблица.Колонки.Добавить("ПодразделениеКомпании", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияКомпании"));
		ОписаниеУровеньДоступности = Новый ОписаниеТипов("ПеречислениеСсылка.УровниДоступностиПрайсЛистовКонтрагентов");
		Таблица.Колонки.Добавить("УровеньДоступности", ОписаниеУровеньДоступности);
		Таблица.Колонки.Добавить("ВИерархииОтветственногоПодразделения", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
	Если СтрокаДерева = Неопределено Тогда
		СтрокаДерева = ДеревоПодразделений;
	КонецЕсли;
	
	Если СтрокаДерева.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из СтрокаДерева.Строки Цикл
		ЗаполнитьЗначенияСвойств(Таблица.Добавить(), Элемент);
		
		ДеревоВТаблицу(Таблица, Элемент);
	КонецЦикла;
	
КонецПроцедуры

Функция ПодразделенияКомпанииПрайсЛиста(УстановкаОтветственногоПодразделения)
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПолучитьДоступныеПодразделенияКомпанииИзБазы(МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПрайсЛист"            ,                ПрайсЛистКонтрагента);
	Запрос.УстановитьПараметр("ОсновноеПодразделение",                ОсновноеПодразделениеКомпании);
	Запрос.УстановитьПараметр("УстановкаОтветственногоПодразделения", УстановкаОтветственногоПодразделения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодразделенияКомпании.Ссылка КАК ПодразделениеКомпании,
	|	ПодразделенияКомпании.Ссылка = &ОсновноеПодразделение КАК ЭтоОсновноеПодразделение,
	|	ВЫБОР
	|		КОГДА НЕ (ДоступностьПодразделенийКомпании.Уровень ЕСТЬ NULL) И ДоступностьПодразделенийКомпании.Уровень <> ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.Запрещено)
	|			ТОГДА ИСТИНА
	|		КОГДА (ПодразделенияКомпании.Ссылка = &ОсновноеПодразделение ИЛИ ПодразделенияКомпании.Ссылка В ИЕРАРХИИ (&ОсновноеПодразделение))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьДоступ,
	|	ПодразделенияКомпании.Ссылка В ИЕРАРХИИ (&ОсновноеПодразделение) КАК ВИерархииОтветственногоПодразделения,
	|	ВЫБОР
	|		КОГДА НЕ (ДоступностьПодразделенийКомпании.Уровень ЕСТЬ NULL ИЛИ &УстановкаОтветственногоПодразделения)
	|			ТОГДА ДоступностьПодразделенийКомпании.Уровень
	|		КОГДА ПодразделенияКомпании.Ссылка = &ОсновноеПодразделение
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.Редактирование)
	|		КОГДА ПодразделенияКомпании.Ссылка В ИЕРАРХИИ (&ОсновноеПодразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.Просмотр)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.УровниДоступностиПрайсЛистовКонтрагентов.Запрещено)
	|	КОНЕЦ КАК УровеньДоступности
	|ИЗ
	|	Справочник.ПодразделенияКомпании КАК ПодразделенияКомпании
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДоступностьПодразделенийКомпании КАК ДоступностьПодразделенийКомпании
	|		ПО ПодразделенияКомпании.Ссылка = ДоступностьПодразделенийКомпании.ПодразделениеКомпании";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	МенеджерВременныхТаблиц.Закрыть();
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДеревоПодразделений()
	
	ДеревоПодразделенийВрем = Новый ДеревоЗначений;
	ДеревоПодразделенийВрем.Колонки.Добавить("ПодразделениеКомпании");
	
	ТекРодитель = Неопределено;
	
	Выборка = Справочники.ПодразделенияКомпании.ВыбратьИерархически();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Родитель) И ТекРодитель <> Неопределено Тогда
			Пока Выборка.Родитель <> ТекРодитель.ПодразделениеКомпании Цикл
				ТекРодитель = ТекРодитель.Родитель;
			КонецЦикла;
			
			ТекРодитель = ТекРодитель.Строки.Добавить();
			ТекРодитель.ПодразделениеКомпании = Выборка.Ссылка;
		Иначе
			ТекРодитель = ДеревоПодразделенийВрем.Строки.Добавить();
			ТекРодитель.ПодразделениеКомпании = Выборка.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДеревоПодразделенийВрем;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли