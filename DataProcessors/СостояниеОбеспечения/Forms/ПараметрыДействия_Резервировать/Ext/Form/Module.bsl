
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Заказ = Параметры.Заказ;
	Заголовок = СостояниеОбеспеченияСервер.ЗаголовокОкна(Заказ, "Резервирование для");
	ЗаполнитьТовары();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗакрытьПодчиненные" И ЭтотОбъект.ВладелецФормы = Источник Тогда
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если
		ВладелецФормы <> Неопределено
		И ВладелецФормы.ИмяФормы = "Обработка.СостояниеОбеспечения.Форма.Форма"
	Тогда
		
		ВладелецФормы.ОткрытаПодчиненнаяФорма = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	Товар = Элементы.Товары.ТекущиеДанные.ПолучитьРодителя();
	
	Если Товар = Неопределено Тогда
		
		РаспределитьКоличество(Элементы.Товары.ТекущиеДанные);
		Возврат;
		
	КонецЕсли;
	
	РассчитатьИтог(Товар);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Резервировать(Команда)
	
	Если Не ЗаполнениеКорректно() Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Не корректно задано количество для резервирования.'"));
		Возврат;
		
	КонецЕсли;
	
	Закрыть(РезервироватьНаСервере());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементыУсловногоОформления = Новый Массив;
	
	ВыделениеГруппыШрифтом = ОбщегоНазначенияАвтосалон.НовыйЭлементОформления();
	ВыделениеГруппыШрифтом.Поля.Добавить(Элементы.Товары.Имя);
	Условие = ОбщегоНазначенияАвтосалон.НовоеУсловиеОформления();
	Условие.Левое = "Товары.МестоРазмещения";
	Условие.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ВыделениеГруппыШрифтом.Условия.Добавить(Условие);
	ВыделениеГруппыШрифтом.Оформление.Вставить("Шрифт", ШрифтыСтиля.СостояниеОбеспеченияШрифтГруппы);
	ЭлементыУсловногоОформления.Добавить(ВыделениеГруппыШрифтом);
	
	ВыделениеНеКорректногоКоличества = ОбщегоНазначенияАвтосалон.НовыйЭлементОформления();
	ВыделениеНеКорректногоКоличества.Поля.Добавить(Элементы.ТоварыКоличество.Имя);
	Условие = ОбщегоНазначенияАвтосалон.НовоеУсловиеОформления();
	Условие.Левое = "Товары.Количество";
	Условие.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	Условие.Правое = "Товары.Доступно";
	ВыделениеНеКорректногоКоличества.Условия.Добавить(Условие);
	ВыделениеНеКорректногоКоличества.Оформление.Вставить("ЦветФона", 
										ЦветаСтиля.ЦветФонаНекорректногоКонтрагентаВДокументе);
	ЭлементыУсловногоОформления.Добавить(ВыделениеНеКорректногоКоличества);
	
	ОбщегоНазначенияАвтосалон.УстановитьУсловноеОформление(УсловноеОформление.Элементы, ЭлементыУсловногоОформления);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредставлениеСтроки(Строка)
	
	Возврат Строка(Строка.МестоРазмещения);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТовары()
	
	ЭлементыДерева = Товары.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	Построитель = Новый ПостроительЗапроса(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЗаказыПокупателейОстатки.ЗаказаноОстаток КАК Требуется,
	|	ЗаказыПокупателейОстатки.РезервОстаток КАК ВРезерве
	|ПОМЕСТИТЬ ЗаказОстатки
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(, Заказ = &Заказ {(Номенклатура), (ХарактеристикаНоменклатуры)}) КАК ЗаказыПокупателейОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиТоваровКомпанииОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиТоваровКомпанииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиТоваровКомпанииОстатки.СкладКомпании КАК МестоРазмещения,
	|	ОстаткиТоваровКомпанииОстатки.КоличествоОстаток - ОстаткиТоваровКомпанииОстатки.РезервОстаток КАК Доступно
	|ПОМЕСТИТЬ ДоступноНаСкладах
	|ИЗ
	|	РегистрНакопления.ОстаткиТоваровКомпании.Остатки(
	|			,
	|			(Номенклатура, ХарактеристикаНоменклатуры) В
	|					(ВЫБРАТЬ
	|						ЗаказОстатки.Номенклатура КАК Номенклатура,
	|						ЗаказОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|					ИЗ
	|						ЗаказОстатки КАК ЗаказОстатки)
	|				И СкладКомпании В (&ДоступныеСклады)) КАК ОстаткиТоваровКомпанииОстатки
	|ГДЕ
	|	ОстаткиТоваровКомпанииОстатки.КоличествоОстаток - ОстаткиТоваровКомпанииОстатки.РезервОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыПоставщикамОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЗаказыПоставщикамОстатки.ЗаказаноОстаток КАК ЗаказаноОстаток
	|ПОМЕСТИТЬ ОстаткиВЗаказах
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|			,
	|			ЗаказПоставщику.ПодразделениеКомпании В ИЕРАРХИИ (&ПодразделениеКомпании)
	|				И (Номенклатура, ХарактеристикаНоменклатуры) В
	|					(ВЫБРАТЬ
	|						ЗаказОстатки.Номенклатура,
	|						ЗаказОстатки.ХарактеристикаНоменклатуры
	|					ИЗ
	|						ЗаказОстатки КАК ЗаказОстатки)) КАК ЗаказыПоставщикамОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиВЗаказах.ЗаказПоставщику КАК МестоРазмещения,
	|	ОстаткиВЗаказах.Номенклатура КАК Номенклатура,
	|	ОстаткиВЗаказах.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиВЗаказах.ЗаказаноОстаток - ЕСТЬNULL(ЗаказыРаспределениеОстатки.КоличествоОстаток, 0) КАК Доступно
	|ПОМЕСТИТЬ ДоступноВЗаказах
	|ИЗ
	|	ОстаткиВЗаказах КАК ОстаткиВЗаказах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыРаспределение.Остатки(
	|				,
	|				ЗаказПоставщика В
	|						(ВЫБРАТЬ
	|							ОстаткиВЗаказах.ЗаказПоставщику КАК ЗаказПоставщику
	|						ИЗ
	|							ОстаткиВЗаказах КАК ОстаткиВЗаказах)
	|					И (Номенклатура, ХарактеристикаНоменклатуры) В
	|						(ВЫБРАТЬ
	|							ЗаказОстатки.Номенклатура КАК Номенклатура,
	|							ЗаказОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|						ИЗ
	|							ЗаказОстатки КАК ЗаказОстатки)) КАК ЗаказыРаспределениеОстатки
	|		ПО ОстаткиВЗаказах.ЗаказПоставщику = ЗаказыРаспределениеОстатки.ЗаказПоставщика
	|			И ОстаткиВЗаказах.Номенклатура = ЗаказыРаспределениеОстатки.Номенклатура
	|			И ОстаткиВЗаказах.ХарактеристикаНоменклатуры = ЗаказыРаспределениеОстатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиВЗаказах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЗаказОстатки.Требуется КАК Требуется,
	|	ЗаказОстатки.ВРезерве КАК ВРезерве,
	|	ДоступноНаСкладах.МестоРазмещения КАК МестоРазмещения,
	|	ДоступноНаСкладах.Доступно КАК Доступно,
	|	1 КАК Приоритет
	|ПОМЕСТИТЬ ИтоговаяТаблица
	|ИЗ
	|	ЗаказОстатки КАК ЗаказОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступноНаСкладах КАК ДоступноНаСкладах
	|		ПО ЗаказОстатки.Номенклатура = ДоступноНаСкладах.Номенклатура
	|			И ЗаказОстатки.ХарактеристикаНоменклатуры = ДоступноНаСкладах.ХарактеристикаНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказОстатки.Номенклатура,
	|	ЗаказОстатки.ХарактеристикаНоменклатуры,
	|	ЗаказОстатки.Требуется,
	|	ЗаказОстатки.ВРезерве,
	|	ДоступноВЗаказах.МестоРазмещения,
	|	ДоступноВЗаказах.Доступно,
	|	2
	|ИЗ
	|	ЗаказОстатки КАК ЗаказОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступноВЗаказах КАК ДоступноВЗаказах
	|		ПО ЗаказОстатки.Номенклатура = ДоступноВЗаказах.Номенклатура
	|			И ЗаказОстатки.ХарактеристикаНоменклатуры = ДоступноВЗаказах.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗаказОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДоступноНаСкладах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДоступноВЗаказах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТаблица.Номенклатура КАК Номенклатура,
	|	ИтоговаяТаблица.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ИтоговаяТаблица.Требуется КАК Требуется,
	|	ИтоговаяТаблица.ВРезерве КАК ВРезерве,
	|	ИтоговаяТаблица.МестоРазмещения КАК МестоРазмещения,
	|	ИтоговаяТаблица.Доступно КАК Доступно,
	|	ИтоговаяТаблица.Приоритет КАК Приоритет,
	|	ИтоговаяТаблица.Требуется - ИтоговаяТаблица.ВРезерве КАК Количество
	|ИЗ
	|	ИтоговаяТаблица КАК ИтоговаяТаблица
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет
	|ИТОГИ
	|	МАКСИМУМ(Требуется),
	|	МАКСИМУМ(ВРезерве),
	|	СУММА(Количество),
	|	СУММА(Доступно)
	|ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры");
	
	Построитель.Параметры.Вставить("Заказ", Параметры.Заказ);
	Построитель.Параметры.Вставить("ДоступныеСклады", Параметры.ДоступныеСклады);
	Построитель.Параметры.Вставить("ПодразделениеКомпании", Параметры.ПодразделениеКомпании);
	
	Построитель = СостояниеОбеспеченияСервер.ДополнитьОтборПостроителяНоменклатурой(Построитель, Параметры);
	Построитель.Выполнить();
	
	Если Построитель.Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаНоменклатура = Построитель.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		ВыборкаХарактеристики = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаХарактеристики.Следующий() Цикл
			
			НоваяГруппа = ЭлементыДерева.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяГруппа, ВыборкаХарактеристики);
			Выборка = ВыборкаХарактеристики.Выбрать();
			
			НоваяГруппа.ПредставлениеСтроки = СостояниеОбеспеченияСервер.ПредставлениеГруппыДерева(ВыборкаХарактеристики);
			
			НоваяГруппа.Количество = ВыборкаХарактеристики.Требуется - ВыборкаХарактеристики.ВРезерве;
			ОсталосьРаспределить = НоваяГруппа.Количество;
			ЭлементыНовойГруппы = НоваяГруппа.ПолучитьЭлементы();
			
			Пока Выборка.Следующий() Цикл
				
				НоваяСтрока = ЭлементыНовойГруппы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.ПредставлениеСтроки = ПредставлениеСтроки(Выборка);
				НоваяСтрока.Количество = Мин(ОсталосьРаспределить, НоваяСтрока.Доступно);
				ОсталосьРаспределить = ОсталосьРаспределить - НоваяСтрока.Количество;
				
			КонецЦикла;
			
			Если ОсталосьРаспределить > 0 Тогда
				
				НоваяГруппа.Количество = НоваяГруппа.Количество - ОсталосьРаспределить;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьКоличество(Товар)
	
	ОсталосьРаспределить = Товар.Количество;
	
	Для Каждого Строка Из Товар.ПолучитьЭлементы() Цикл
		
		Строка.Количество = Мин(Строка.Доступно, ОсталосьРаспределить);
		ОсталосьРаспределить = ОсталосьРаспределить - Строка.Количество;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьИтог(Товар)
	
	Товар.Количество = 0;
	
	Для Каждого Строка Из Товар.ПолучитьЭлементы() Цикл
		
		Товар.Количество = Товар.Количество + Строка.Количество;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ЗаполнениеКорректно()
	
	Для Каждого Группа Из Товары.ПолучитьЭлементы() Цикл
		
		Если Группа.Количество > Группа.Доступно Тогда
				
				Возврат Ложь;
				
			КонецЕсли;
		
		Для Каждого Строка Из Группа.ПолучитьЭлементы() Цикл
			
			Если Строка.Количество > Строка.Доступно Тогда
				
				Возврат Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ВыгрузитьТовары()
	
	ТипыМест = Новый Массив;
	ТипыМест.Добавить(Тип("СправочникСсылка.СкладыКомпании"));
	ТипыМест.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Таблица.Колонки.Добавить("МестоРазмещения", Новый ОписаниеТипов(ТипыМест));
	Таблица.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3, ДопустимыйЗнак.Неотрицательный));
	
	Для Каждого Группа Из Товары.ПолучитьЭлементы() Цикл
		
		Для Каждого Строка Из Группа.ПолучитьЭлементы() Цикл
			
			Если Строка.Количество = 0 Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(Таблица.Добавить(), Строка);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

&НаСервере
Функция РезервироватьНаСервере()
	
	ТоварыТаблица = ВыгрузитьТовары();
	СозданныеДокументы = Новый Массив;
	
	Если ТоварыТаблица.Количество() = 0 Тогда
		
		Возврат Новый ФиксированныйМассив(СозданныеДокументы);
		
	КонецЕсли;
	
	ДокументРезервированияНаСкладе = Документы.РезервированиеЗаказовПокупателя.СоздатьДокумент();
	ДокументРезервированияНаСкладе.Заполнить(Заказ);
	ДокументРезервированияНаСкладе.Товары.Очистить();
	ДокументРезервированияНаСкладе.Комментарий = Комментарий;
	
	ДокументРезервированияВЗаказах = Документы.РаспределениеЗаказаПокупателя.СоздатьДокумент();
	ДокументРезервированияВЗаказах.Заполнить(Заказ);
	ДокументРезервированияВЗаказах.Товары.Очистить();
	ДокументРезервированияВЗаказах.Комментарий = Комментарий;
	ПараметрыДействия = Новый Структура("ЗаполнитьНеРаспределеннымиТоварами", Ложь);
	
	Для Каждого Товар Из ТоварыТаблица Цикл
		
		Если ТипЗнч(Товар.МестоРазмещения) = Тип("СправочникСсылка.СкладыКомпании") Тогда
			
			НоваяСтрока = ДокументРезервированияНаСкладе.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Товар);
			НоваяСтрока.ЗаказПокупателя = Заказ;
			Документы
				.РезервированиеЗаказовПокупателя
				.ТоварыНоменклатураПриИзменении(ДокументРезервированияНаСкладе, НоваяСтрока);
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ДокументРезервированияВЗаказах.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Товар);
		НоваяСтрока.ЗаказПоставщику = Товар.МестоРазмещения;
		Документы
			.РаспределениеЗаказаПокупателя
			.ТоварыНоменклатураПриИзменении(ДокументРезервированияВЗаказах, НоваяСтрока, ПараметрыДействия);
		
	КонецЦикла;
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	Попытка
		
		Если ДокументРезервированияНаСкладе.Товары.Количество() > 0 Тогда
			
			ДокументРезервированияНаСкладе.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
			СозданныеДокументы.Добавить(ДокументРезервированияНаСкладе.Ссылка);
			
		КонецЕсли;
		
		Если ДокументРезервированияВЗаказах.Товары.Количество() > 0 Тогда
			
			ДокументРезервированияВЗаказах.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
			СозданныеДокументы.Добавить(ДокументРезервированияВЗаказах.Ссылка);
			
		КонецЕсли; 
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Новый ФиксированныйМассив(Новый Массив);
		
	КонецПопытки;
	
	Возврат Новый ФиксированныйМассив(СозданныеДокументы);
	
КонецФункции

#КонецОбласти
