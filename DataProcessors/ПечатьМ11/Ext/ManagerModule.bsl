#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Процедура обработки печати.
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_М11") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_М11",
															НСтр("ru = 'М11 (Требование-накладная)'"),
															ПечатьМ11Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_М4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_М4",
															НСтр("ru = 'М-4 (Приходный ордер)'"),
															ПечатьМ4Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;													
КонецПроцедуры

Функция ПечатьМ11Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина; 
	Для Каждого Документ Из МассивОбъектов Цикл
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);

		// Получим данные из документа
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиМ11(Документ);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьМ11.ПФ_MXL_М11");
		
		ОбластьЗаголовок    = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		
		СтруктураПредставления = УправлениеПечатьюПлатформа.СформироватьСтруктуруПредставления();
		
		// Правим, что автоматом не заполнилось, или заполнилось неправильно.
		ОбластьЗаголовок.Параметры.Заголовок = НСтр("ru = 'ТРЕБОВАНИЕ-НАКЛАДНАЯ №'") + " " + ДанныеДокумента.Номер;
		
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = Документ.Дата;
		ОбластьЗаголовок.Параметры.ОрганизацияПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ДанныеДокумента.Организация, СтруктураПредставления, ДополнительныеПараметры);
		
		ОбластьЗаголовок.Параметры.КодОКПО					= ДанныеДокумента.Организация.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ДатаСоставления			= Формат(ДанныеДокумента.Дата, "ДФ = дд.ММ.гггг");
		ОбластьЗаголовок.Параметры.СкладОтправитель			= УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(
			ДанныеДокумента.Грузоотправитель, Документ.Дата);
		ОбластьЗаголовок.Параметры.СкладПолучатель			= УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(
			ДанныеДокумента.Грузополучатель, Документ.Дата);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Переменные управляющие постраничным выводом.
		НомерСтраницы   = 1;
		
		// Выводим заголовок таблицы
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ОбластьШапкаТаблицы.Параметры.Валюта = ДанныеДокумента.ВалютаДокумента;
		
		// Определим имя показываемой колонки кода.
		НазваниеПоНастройке = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Синоним;
		ОбластьШапкаТаблицы.Параметры.ИмяКолонкиКода = СтрЗаменить(НазваниеПоНастройке, "/", " / ");
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		// Для следующей страницы.
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница 2";
		
		КоличествоСтрок = ДанныеДокумента.ВыборкаТабличнойЧасти.Количество();
		ОбластиДляПроверкиВывода = Неопределено;
		
		Ном = 0;
		
		// Проверим, входит ли НДС в стоимость.
		ЦенаВключаетНДС = ДанныеДокумента.ЦенаВключаетНДС;
		НомерСтраницыПред = НомерСтраницы;
		// Выводим многострочную часть документа.
		Для Каждого СтрокаТабличнойЧасти Из ДанныеДокумента.ВыборкаТабличнойЧасти Цикл
			
			Ном = Ном + 1;
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаТабличнойЧасти);
			Характеристика = Строка(СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры);
			ОбластьСтрока.Параметры.ТоварНаименование = 
				УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(СтрокаТабличнойЧасти.Номенклатура)
				+ ?(Характеристика = "", "" ,", " + Характеристика);
			ОбластьСтрока.Параметры.НоменклатурныйНомер = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(
				СтрокаТабличнойЧасти.Номенклатура);
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = СтрокаТабличнойЧасти.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТабличнойЧасти.ЕдиницаИзмерения;
			ОбластьСтрока.Параметры.Количество = Формат(СтрокаТабличнойЧасти.Количество, ФорматВыводаКоличества);
			Если ЦенаВключаетНДС Тогда
				ОбластьСтрока.Параметры.Цена		= Формат(СтрокаТабличнойЧасти.Цена, ФорматВыводаСуммы);
				ОбластьСтрока.Параметры.СуммаБезНДС	= Формат(СтрокаТабличнойЧасти.Сумма, ФорматВыводаСуммы);
			Иначе
				ОбластьСтрока.Параметры.Цена 		= Формат(СтрокаТабличнойЧасти.Цена, ФорматВыводаСуммы);
				ОбластьСтрока.Параметры.СуммаБезНДС	= Формат(СтрокаТабличнойЧасти.Сумма, ФорматВыводаСуммы);
			КонецЕсли;		
			
			Если Ном = КоличествоСтрок Тогда
				ОбластиДляПроверкиВывода = Новый Массив;
				ОбластиДляПроверкиВывода.Добавить(ОбластьПодвал);
			КонецЕсли;
			
			// Выводим строку, делая проверку попадания на лист.
			НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока,
					ОбластьШапкаТаблицы, , НомерСтраницы, , Документ, ОбластиДляПроверкиВывода);
				
			// Инициализация итогов по странице.
			Если НомерСтраницы <> НомерСтраницыПред Тогда
				НомерСтраницыПред = НомерСтраницы;
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.Отпустил);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.Получил);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// Зададим параметры макета
		ТабличныйДокумент.АвтоМасштаб=Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		// Отметим конец области документа
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_М11Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьМ11Общая()

Функция ПечатьМ4Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		
		// Получим данные из документа
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиМ4(Документ);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьМ11.ПФ_MXL_М4");
		
		ОбластьЗаголовок          = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьШапкаТаблицы       = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрока             = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвалСтраницы     = Макет.ПолучитьОбласть("ПодвалСтраницы");
		ОбластьИтогиСтраницы      = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтого              = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал             = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		СтруктураПредставления = УправлениеПечатьюПлатформа.СформироватьСтруктуруПредставления();
		
		// Правим, что автоматом не заполнилось, или заполнилось неправильно.
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = Документ.Дата;
		ОбластьЗаголовок.Параметры.ОрганизацияПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ОбластьЗаголовок.Параметры.Организация, СтруктураПредставления, ДополнительныеПараметры);
		ОбластьЗаголовок.Параметры.ПодразделениеКомпании = УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(
			ОбластьЗаголовок.Параметры.ПодразделениеКомпании, Документ.Дата);
		ОбластьЗаголовок.Параметры.ОрганизацияПоОКПО = ДанныеДокумента.Организация.КодПоОКПО;
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Выводим заголовок документа
		ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеДокумента);
		ОбластьЗаголовокДокумента.Параметры.ДатаСоставления = Формат(ДанныеДокумента.Дата, "ДФ = дд.ММ.гггг");
		ОбластьЗаголовокДокумента.Параметры.МестоПриемки = УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(
			ДанныеДокумента.СкладКомпании);
		ОбластьЗаголовокДокумента.Параметры.ПоставщикНаименование =
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ДанныеДокумента.Контрагент, Документ.Дата);
		ОбластьЗаголовокДокумента.Параметры.Поставщик = ДанныеДокумента.Контрагент;
		
		Если ЗначениеЗаполнено(ДанныеДокумента.Контрагент) Тогда
			ОбластьЗаголовокДокумента.Параметры.ПоставщикКод = ДанныеДокумента.Контрагент.Код;
		КонецЕсли;
		
		ОбластьЗаголовокДокумента.Параметры.НомерСопроводительногоДокумента = ДанныеДокумента.ВхДокНомер;
		ОбластьЗаголовокДокумента.Параметры.СтраховаяКомпания = ДанныеДокумента.СтраховаяКомпания;
		ОбластьЗаголовокДокумента.Параметры.СтраховаяКомпанияПредставление =
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ДанныеДокумента.СтраховаяКомпания);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
		
		// Переменные управляющие постраничным выводом
		СтрокНаСтранице = 23;
		СтрокШапки      = 10;
		СтрокПодвала    = 6;
		НомерСтраницы   = 1;
		
		// Выводим заголовок таблицы
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		
		// Проверим учетную валюту
		Если ДанныеДокумента.ВалютаДокумента.Наименование = "Руб" Тогда
			ОбластьШапкаТаблицы.Параметры.Валюта = ДанныеДокумента.ВалютаДокумента.Наименование + ". коп.";
		Иначе
			ОбластьШапкаТаблицы.Параметры.Валюта = ДанныеДокумента.ВалютаДокумента;
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаСтрок = ДанныеДокумента.Товары;
		КоличествоСтрок = ВыборкаСтрок.Количество();
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		НеВыводитьНоменклатуруСНулевымКоличеством = ПолучитьЗначениеПараметраСтруктуры(
			ДанныеДокумента,
			"НеВыводитьНоменклатуруСНулевымКоличеством",
			Ложь);
		
		// Определим имя показываемой колонки кода.
		ИмяКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
		
		// Инициализация итогов по странице.
		ИтогоКоличествоПринятоПоСтранице = 0;
		ИтогоСуммаБезНДСПоСтранице       = 0;
		ИтогоСуммаНДСПоСтранице 		 = 0;
		ИтогоВсегоСНДСПоСтранице		 = 0;
		Ном 							 = 0;
		
		// Инициализация итогов по документу
		ИтогоКоличествоПринято 	= 0;
		ИтогоСуммаБезНДС       	= 0;
		ИтогоСуммаНДС		   	= 0;
		ИтогоВсегоСНДС			= 0;
		
		// Проверим, входит ли НДС в стоимость	
		ЦенаВключаетНДС = ДанныеДокумента.ЦенаВключаетНДС;
		
		// Выводим многострочную часть документа
		Для каждого СтрокаТабличнойЧасти Из ВыборкаСтрок Цикл
			
			Если НеВыводитьНоменклатуруСНулевымКоличеством
				И СтрокаТабличнойЧасти.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Ном = Ном + 1;
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				ИЛИ ((ПереноситьПоследнююСтроку = 1) И (Ном = КоличествоСтрок)) Тогда
				ОбластьИтогиСтраницы.Параметры.ИтогоКоличествоПринято = Формат(
					ИтогоКоличествоПринятоПоСтранице, ФорматВыводаКоличества);
				ОбластьИтогиСтраницы.Параметры.ИтогоСуммаБезНДС = Формат(ИтогоСуммаБезНДСПоСтранице, ФорматВыводаСуммы);
				ОбластьИтогиСтраницы.Параметры.ИтогоСуммаНДС    = Формат(ИтогоСуммаНДСПоСтранице,    ФорматВыводаСуммы);
				ОбластьИтогиСтраницы.Параметры.ИтогоВсегоСНДС   = Формат(ИтогоВсегоСНДСПоСтранице,   ФорматВыводаСуммы);
				ТабличныйДокумент.Вывести(ОбластьИтогиСтраницы);
				ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
				
				// Очистим итоги по странице
				ИтогоКоличествоПринятоПоСтранице = 0;
				ИтогоСуммаБезНДСПоСтранице       = 0;
				ИтогоСуммаНДСПоСтранице 		 = 0;
				ИтогоВсегоСНДСПоСтранице		 = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаТабличнойЧасти);
			Если ЕстьРеквизит(ВыборкаСтрок, "ХарактеристикаНоменклатуры") Тогда
				Характеристика = Строка(СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры);
				ОбластьСтрока.Параметры.ТоварНаименование = 
					УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(СтрокаТабличнойЧасти.Номенклатура)
					+ ?(Характеристика = "", "", ", " + Характеристика);
			Иначе
				ОбластьСтрока.Параметры.ТоварНаименование = СтрокаТабличнойЧасти.ТоварНаименование;
			КонецЕсли;
			Если ЕстьРеквизит(ВыборкаСтрок, "Код") Тогда
				ОбластьСтрока.Параметры.ТоварКод = СтрокаТабличнойЧасти.Код;
			Иначе
				ОбластьСтрока.Параметры.ТоварКод = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(
					СтрокаТабличнойЧасти.Номенклатура);
			КонецЕсли;
			Если ЕстьРеквизит(ВыборкаСтрок, "КодЕдиницаИзмерения") Тогда
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = СтрокаТабличнойЧасти.КодЕдиницаИзмерения;
			Иначе
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод =
					СтрокаТабличнойЧасти.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
			КонецЕсли;
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТабличнойЧасти.ЕдиницаИзмерения;
			ОбластьСтрока.Параметры.КоличествоПринято = Формат(СтрокаТабличнойЧасти.Количество, ФорматВыводаКоличества);
			
			Если ДанныеДокумента.Свойство("ОснованиеТовары") Тогда
				// Получаем список строк с данным товаром (их может быть несколько с разными характеристиками).
				Отбор = Новый Структура("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
				МассивНайденныхСтрок = ДанныеДокумента.ОснованиеТовары.НайтиСтроки(Отбор);
				КолвоИзОснования = 0;
				Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
					ТекСтрока = МассивНайденныхСтрок[Сч];
					Если ТекСтрока.ХарактеристикаНоменклатуры = СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры Тогда
						КолвоИзОснования = ТекСтрока.Количество;
						Прервать;
					КонецЕсли; 
				КонецЦикла;
				ОбластьСтрока.Параметры.КоличествоПоДокументу = Формат(КолвоИзОснования,ФорматВыводаКоличества);
			КонецЕсли;
			
			Если ЦенаВключаетНДС Тогда
				ОбластьСтрока.Параметры.Цена = Формат(
					СтрокаТабличнойЧасти.Цена - СтрокаТабличнойЧасти.СуммаНДС / СтрокаТабличнойЧасти.Количество,
					ФорматВыводаСуммы);
				ОбластьСтрока.Параметры.СуммаБезНДС = Формат(
					СтрокаТабличнойЧасти.Сумма - ОбластьСтрока.Параметры.СуммаНДС, ФорматВыводаСуммы);
				ИтогоСуммаБезНДСПоСтранице = ИтогоСуммаБезНДСПоСтранице + СтрокаТабличнойЧасти.Сумма
					- СтрокаТабличнойЧасти.СуммаНДС;
				ИтогоСуммаБезНДС = ИтогоСуммаБезНДС + СтрокаТабличнойЧасти.Сумма - СтрокаТабличнойЧасти.СуммаНДС;
			Иначе
				ОбластьСтрока.Параметры.СуммаБезНДС = Формат(СтрокаТабличнойЧасти.Сумма, ФорматВыводаСуммы);
				ОбластьСтрока.Параметры.Цена 		= Формат(СтрокаТабличнойЧасти.Цена,  ФорматВыводаСуммы);
				ИтогоСуммаБезНДСПоСтранице			= ИтогоСуммаБезНДСПоСтранице + СтрокаТабличнойЧасти.Сумма;
				ИтогоСуммаБезНДС					= ИтогоСуммаБезНДС + СтрокаТабличнойЧасти.Сумма;
			КонецЕсли;		
			ОбластьСтрока.Параметры.ВсегоСНДС = Формат(СтрокаТабличнойЧасти.СуммаВсего, ФорматВыводаСуммы);
			ОбластьСтрока.Параметры.СуммаНДС  = Формат(СтрокаТабличнойЧасти.СуммаНДС,   ФорматВыводаСуммы);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			// Увеличим итоги по странице
			ИтогоКоличествоПринятоПоСтранице = ИтогоКоличествоПринятоПоСтранице + СтрокаТабличнойЧасти.Количество;
			ИтогоСуммаНДСПоСтранице			 = ИтогоСуммаНДСПоСтранице + СтрокаТабличнойЧасти.СуммаНДС;
			ИтогоВсегоСНДСПоСтранице		 = ИтогоВсегоСНДСПоСтранице + СтрокаТабличнойЧасти.СуммаВсего;
			
			// Увеличим итоги по документу
			ИтогоКоличествоПринято	= ИтогоКоличествоПринято + СтрокаТабличнойЧасти.Количество;
			ИтогоСуммаНДС			= ИтогоСуммаНДС + СтрокаТабличнойЧасти.СуммаНДС;
			ИтогоВсегоСНДС			= ИтогоВсегоСНДС + СтрокаТабличнойЧасти.СуммаВсего;
			
		КонецЦикла;
		
		// Выводим итоги по последней странице.
		ОбластьИтогиСтраницы.Параметры.ИтогоКоличествоПринято = Формат(
			ИтогоКоличествоПринятоПоСтранице, ФорматВыводаКоличества);
		ОбластьИтогиСтраницы.Параметры.ИтогоСуммаБезНДС = Формат(ИтогоСуммаБезНДСПоСтранице, ФорматВыводаСуммы);
		ОбластьИтогиСтраницы.Параметры.ИтогоСуммаНДС    = Формат(ИтогоСуммаНДСПоСтранице,    ФорматВыводаСуммы);
		ОбластьИтогиСтраницы.Параметры.ИтогоВсегоСНДС   = Формат(ИтогоВсегоСНДСПоСтранице,   ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьИтогиСтраницы);
		
		// Выводим итоги по документу
		ОбластьИтого.Параметры.ИтогоКоличествоПринято = Формат(ИтогоКоличествоПринято, ФорматВыводаКоличества);
		ОбластьИтого.Параметры.ИтогоСуммаБезНДС       = Формат(ИтогоСуммаБезНДС,       ФорматВыводаСуммы);
		ОбластьИтого.Параметры.ИтогоСуммаНДС          = Формат(ИтогоСуммаНДС,          ФорматВыводаСуммы);
		ОбластьИтого.Параметры.ИтогоВсегоСНДС         = Формат(ИтогоВсегоСНДС,         ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		// Выводим подвал
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.Отпустил);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.Получил);
		
		УправлениеПечатьюПлатформа.
		ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьПодвал, , , НомерСтраницы, , Документ);
		
		// Зададим параметры макета
		ТабличныйДокумент.АвтоМасштаб=Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		// Отметим конец области документа
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_М4Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьМ4Общая()

#КонецОбласти

#КонецОбласти

#КонецЕсли