///////////////////////////////////////////////////////////////////////////////
// Модуль обработки "Автоматическое снятие резервов"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	РазрешениеСнятияРезервов = ПраваИНастройкиПользователя.Значение("РазрешениеСнятияРезервов");
	Если РазрешениеСнятияРезервов = Перечисления.РезервыСпособыСписания.Запрещено Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Запрещено снимать резервы.'"));
		Отказ = Истина;		
	КонецЕсли;
	
	СформироватьТаблицуЗаказов();
	
	// Установим вариант отображения дополнительных полей "Код" и "Артикул"
	УправлениеДиалогомДокументаСервер.УстановитьВидимостьКолонокКодАртикул(ЭтотОбъект, "ЗаказыТовары");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события возникающего при выборе строки.
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ЗаказыСнятиеРезервов" ИЛИ Поле.Имя = "ЗаказыКорректировка" Тогда
		Возврат;	
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Элементы.Заказы.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат; 
	КонецЕсли;
	
	ТекущиеДанные = Заказы.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Документ = ТекущиеДанные.Заказ;
	
	ПоказатьЗначение(,Документ);
	
КонецПроцедуры

// Обработчик события возникающего на клиенте при активизации строки.
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ЗаказыПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.Заказы.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат; 
	КонецЕсли;
	
	Если Элементы.Заказы.ТекущаяСтрока = Неопределено Тогда
		Элементы.ЗаказыТовары.ОтборСтрок = Неопределено;
		Элементы.ЗаказыТовары.Обновить();
	Иначе
		ТекущиеДанные = Заказы.НайтиПоИдентификатору(Элементы.Заказы.ТекущаяСтрока);
		Элементы.ЗаказыТовары.ОтборСтрок = Новый ФиксированнаяСтруктура("Заказ", ТекущиеДанные.Заказ);
		Элементы.ЗаказыТовары.Обновить();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события возникающего при выборе строки.
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура СнятиеРезервовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Элементы.СнятиеРезервов.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = СнятиеРезервов.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Документ = ТекущиеДанные.СнятиеРезервов;
	
	ПоказатьЗначение(,Документ);
	
КонецПроцедуры

// Обработчик события возникающего на клиенте при активизации строки.
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура СнятиеРезервовДокументыПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.СнятиеРезервов.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат; 
	КонецЕсли;
	
	Если Элементы.СнятиеРезервов.ТекущаяСтрока = Неопределено Тогда
		Элементы.СнятиеРезервовТовары.ОтборСтрок = Неопределено;
		Элементы.СнятиеРезервовТовары.Обновить();
	Иначе
		ТекущиеДанные = СнятиеРезервов.НайтиПоИдентификатору(Элементы.СнятиеРезервов.ТекущаяСтрока);
		Элементы.СнятиеРезервовТовары.ОтборСтрок = Новый ФиксированнаяСтруктура("СнятиеРезервов", ТекущиеДанные.СнятиеРезервов);
		Элементы.СнятиеРезервовТовары.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
		
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗаказыПокупателей Тогда	
		ГруппаСтраницыПриСменеСтраницыНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ГруппаСтраницыПриСменеСтраницыНаСервере()
	СформироватьТаблицуЗаказов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события возникающего при нажатии на кнопку "Выполнить снятие резервов".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КомандаВыполнитьСнятиеРезервов(Команда)
	
	ВыполнитьСнятиеРезервов();
	
КонецПроцедуры

// Обработчик события возникающего при нажатии на кнопку "Обновить список".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КомандаОбновитьСписокЗаказов(Команда)
	
	СформироватьТаблицуЗаказов();
	
КонецПроцедуры

// Обработчик события возникающего при нажатии на кнопку "Отметить все".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КомандаСнятиеРезервовОтметитьВсе(Команда)
	
	Для Каждого ТекСтрока Из Заказы Цикл
		ТекСтрока.СнятиеРезервов = Истина;
	КонецЦикла;
	
КонецПроцедуры

// Обработчик события возникающего при нажатии на кнопку "Отметить просроченные".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КомандаСнятиеРезервовОтметитьПросроченные(Команда)
	
	Для Каждого ТекСтрока Из Заказы Цикл
		ТекСтрока.СнятиеРезервов = НЕ (ТекСтрока.Оплата<>0) И ЗначениеЗаполнено(ТекСтрока.СрокСнятияРезерва);
	КонецЦикла;	
	
КонецПроцедуры

// Обработчик события возникающего при нажатии на кнопку "Снять все".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КомандаСнятиеРезервовСнятьВсе(Команда)
	
	Для Каждого ТекСтрока Из Заказы Цикл
		ТекСтрока.СнятиеРезервов = Ложь;
	КонецЦикла;
	
КонецПроцедуры

// Обработчик события возникающего при нажатии на кнопку "Отметить все".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КомандаКорректировкаОтметитьВсе(Команда)
	
	Для Каждого ТекСтрока Из Заказы Цикл
		ТекСтрока.Корректировка = Истина;
	КонецЦикла;
	
КонецПроцедуры

// Обработчик события возникающего при нажатии на кнопку "Снять все".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КомандаКорректировкаСнятьВсе(Команда)
	
	Для Каждого ТекСтрока Из Заказы Цикл
		ТекСтрока.Корректировка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет табличную часть на форме и кэш заказов по заказам покупателей
//
&НаСервере
Процедура СформироватьТаблицуЗаказов()
	
	Заказы.Очистить();
	ЗаказыТовары.Очистить();

	ТаблицаЗаказов = Обработки.АвтоматическоеСнятиеРезервов.ПолучитьТаблицуЗаказов();	
	Для Каждого ТекСтрока Из ТаблицаЗаказов Цикл
		
		НоваяСтрока = ЗаказыТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
		
		Если НЕ ЗначениеЗаполнено(ТекСтрока.СрокСнятияРезерва) Тогда
			ТекСтрока.СнятиеРезервов = Ложь;	
			ТекСтрока.Корректировка = Ложь;	
		КонецЕсли;
		
		Если ТекСтрока.Оплата <> 0 Тогда
			ТекСтрока.СнятиеРезервов = Ложь;	
			ТекСтрока.Корректировка = Ложь;	
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаЗаказов.Свернуть("Заказ,Номер,Дата,Автор,Организация,ПодразделениеКомпании,Контрагент,ХозОперация,СкладКомпании,МестоРазмещения,СрокСнятияРезерва,СнятиеРезервов,Сумма,Оплата");
	
	Для Каждого ТекЗаказ Из ТаблицаЗаказов Цикл
		НоваяСтрока = Заказы.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекЗаказ);
	КонецЦикла;
	
КонецПроцедуры

// Переход на страницу сформированных документов
//
&НаСервере
Процедура ПоказатьСформированныеДокументы()
	
	ТЗСнятиеРезервов = РеквизитФормыВЗначение("СнятиеРезервов",Тип("ТаблицаЗначений"));
	
	СнятиеРезервов.Очистить();
	Для Каждого ТекСтрока Из СнятиеРезервовТовары Цикл
		Если ТЗСнятиеРезервов.Найти(ТекСтрока.СнятиеРезервов,"СнятиеРезервов") = Неопределено Тогда
			НоваяСтрока = ТЗСнятиеРезервов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТЗСнятиеРезервов,"СнятиеРезервов");
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаСнятиеРезервов;	
		
КонецПроцедуры

// Выполняет формирование документов Снятие резервов
//
&НаСервере
Процедура ВыполнитьСнятиеРезервов()
	
	ТипыЗаказов = Новый Массив;
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказВнутренний"));
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	
	ТипКонтрагентов = Новый Массив;
	ТипКонтрагентов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТипКонтрагентов.Добавить(Тип("СправочникСсылка.ПодразделенияКомпании"));
	
	// формируем таблицу заказов, по которым будут списываться резервы
	ТаблицаЗаказовДляСписания = Новый ТаблицаЗначений;
	ТаблицаЗаказовДляСписания.Колонки.Добавить("Контрагент", Новый ОписаниеТипов(ТипКонтрагентов));
	ТаблицаЗаказовДляСписания.Колонки.Добавить("Заказ", Новый ОписаниеТипов(ТипыЗаказов));
	ТаблицаЗаказовДляСписания.Колонки.Добавить("Корректировка", Новый ОписаниеТипов("Булево"));	
	Для Каждого ТекСтрока Из Заказы Цикл
		Если ТекСтрока.СнятиеРезервов Тогда
			НоваяСтрока = ТаблицаЗаказовДляСписания.Добавить();
			НоваяСтрока.Контрагент =  ТекСтрока.Контрагент;
			НоваяСтрока.Заказ = ТекСтрока.Заказ;
			НоваяСтрока.Корректировка = ТекСтрока.Корректировка;              
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаСнятиеРезервов = Обработки.АвтоматическоеСнятиеРезервов.ВыполнитьСнятиеРезервов(ТаблицаЗаказовДляСписания, ЗаказыТовары, СоздаватьНапоминание);
	Для Каждого ТекСтрока Из ТаблицаСнятиеРезервов Цикл
		НоваяСтрока = СнятиеРезервовТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
	КонецЦикла;
	
	Если СнятиеРезервовТовары.Количество() > 0 Тогда
		ПоказатьСформированныеДокументы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
		// Цвет текста
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Заказы");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Заказы.СрокСнятияРезерва");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Дата(1,1,1);
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.СветлоГрифельноСерый);
	
	// Цвет текста
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Заказы");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Заказы.Оплата");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноКрасный);

КонецПроцедуры

#КонецОбласти

