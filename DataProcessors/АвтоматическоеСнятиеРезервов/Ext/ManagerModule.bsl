// Модуль менеджера обработки "Автоматическое снятие резервов"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Возвращает таблицу заказов с истекшим сроком снятия резервов
//
Функция ПолучитьТаблицуЗаказов(СрокДоРезервирования = 0) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗаказыПокупателейОстатки.Заказ КАК Заказ,
	               |	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	               |	ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	МАКСИМУМ(ЗаказыПокупателейОстатки.РезервОстаток) КАК РезервОстаток,
	               |	МАКСИМУМ(ЗаказыПокупателейОстатки.РезервСвободныйОстаток) КАК РезервСвободныйОстаток,
	               |	ЗаказыПокупателейОстатки.Заказ.СрокСнятияРезерва КАК ЗаказСрокСнятияРезерва,
	               |	ЗаказыПокупателейОстатки.СкладКомпании КАК СкладКомпании
	               |ПОМЕСТИТЬ ОстаткиЗаказов
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателей.Остатки(, Заказ.СрокСнятияРезерва < &ДатаОкончания) КАК ЗаказыПокупателейОстатки
	               |ГДЕ
	               |	&УсловиеСнятияРезервов
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПокупателейОстатки.Номенклатура,
	               |	ЗаказыПокупателейОстатки.Заказ,
	               |	ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры,
	               |	ЗаказыПокупателейОстатки.Заказ.СрокСнятияРезерва,
	               |	ЗаказыПокупателейОстатки.СкладКомпании
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗаказыПокупателейОстатки.Заказ КАК Заказ,
	               |	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	               |	ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	МАКСИМУМ(ЗаказыПокупателейОстатки.РезервОстаток) КАК РезервОстаток,
	               |	МАКСИМУМ(ЗаказыПокупателейОстатки.РезервСвободныйОстаток) КАК РезервСвободныйОстаток,
	               |	ЗаказыПокупателейОстатки.Заказ.СрокСнятияРезерва КАК ЗаказСрокСнятияРезерва,
	               |	СУММА(ЗаказыПокупателей.СуммаУпр) КАК СуммаУпр,
	               |	ЗаказыПокупателейОстатки.СкладКомпании КАК СкладКомпании
	               |ПОМЕСТИТЬ ЗаказыОстаткиРезервов
	               |ИЗ
	               |	ОстаткиЗаказов КАК ЗаказыПокупателейОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей КАК ЗаказыПокупателей
	               |		ПО ЗаказыПокупателейОстатки.Заказ = ЗаказыПокупателей.Заказ
	               |			И (ЗаказыПокупателей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПокупателейОстатки.Номенклатура,
	               |	ЗаказыПокупателейОстатки.Заказ,
	               |	ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры,
	               |	ЗаказыПокупателейОстатки.Заказ.СрокСнятияРезерва,
	               |	ЗаказыПокупателейОстатки.СкладКомпании
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Заказ,
	               |	Номенклатура,
	               |	ХарактеристикаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ОстаткиЗаказов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗаказыОстаткиРезервов.Заказ КАК Заказ,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Номер
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).Номер
	               |	КОНЕЦ КАК Номер,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Дата
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).Дата
	               |	КОНЕЦ КАК Дата,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Автор
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).Автор
	               |	КОНЕЦ КАК Автор,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Организация
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).Организация
	               |	КОНЕЦ КАК Организация,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).ПодразделениеКомпании
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).ПодразделениеКомпании
	               |	КОНЕЦ КАК ПодразделениеКомпании,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Контрагент
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).ПодразделениеПолучатель
	               |	КОНЕЦ КАК Контрагент,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).ХозОперация
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).ХозОперация
	               |	КОНЕЦ КАК ХозОперация,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).СкладКомпании
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).СкладКомпании
	               |	КОНЕЦ КАК СкладКомпании,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).СрокСнятияРезерва
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).СрокСнятияРезерва
	               |	КОНЕЦ КАК СрокСнятияРезерва,
	               |	ЗаказыОстаткиРезервов.Номенклатура КАК Номенклатура,
	               |	ЗаказыОстаткиРезервов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	МАКСИМУМ(ЗаказыОстаткиРезервов.РезервОстаток) КАК РезервОстаток,
	               |	МАКСИМУМ(ЗаказыОстаткиРезервов.РезервСвободныйОстаток) КАК РезервСвободныйОстаток,
	               |	НАЧАЛОПЕРИОДА(МАКСИМУМ(ЗаказыПокупателей.Период), ДЕНЬ) КАК ДатаРезервирования,
	               |	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(МАКСИМУМ(ЗаказыПокупателей.Период), ДЕНЬ), &ДатаОкончания, ДЕНЬ) + 1 КАК СрокРезервирования,
	               |	ИСТИНА КАК СнятиеРезервов,
	               |	ИСТИНА КАК Корректировка,
	               |	МАКСИМУМ(ЕСТЬNULL(-РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток, 0) + ЕСТЬNULL(-ВзаиморасчетыКомпанииОстатки.СуммаУпрОстаток, 0)) КАК Оплата,
	               |	МАКСИМУМ(ЗаказыОстаткиРезервов.СуммаУпр) КАК Сумма,
	               |	ЗаказыОстаткиРезервов.СкладКомпании КАК МестоРазмещения
	               |ИЗ
	               |	ЗаказыОстаткиРезервов КАК ЗаказыОстаткиРезервов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей КАК ЗаказыПокупателей
	               |		ПО (ЗаказыПокупателей.Период <= &ДатаОкончания)
	               |			И (ЗаказыПокупателей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	               |			И (ЗаказыПокупателей.ВидОперации В (&ВидыОперацийЗаказов))
	               |			И ЗаказыОстаткиРезервов.Заказ = ЗаказыПокупателей.Заказ
	               |			И ЗаказыОстаткиРезервов.Номенклатура = ЗаказыПокупателей.Номенклатура
	               |			И ЗаказыОстаткиРезервов.ХарактеристикаНоменклатуры = ЗаказыПокупателей.ХарактеристикаНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКонтрагентами.Остатки(, ТИПЗНАЧЕНИЯ(Заказ) = ТИП(Документ.ЗаказПокупателя)) КАК РасчетыСКонтрагентамиОстатки
	               |		ПО (ЗаказыОстаткиРезервов.Заказ = РасчетыСКонтрагентамиОстатки.Заказ)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыКомпании.Остатки(, ТИПЗНАЧЕНИЯ(Сделка) В (ТИП(Документ.ЗаказПокупателя), ТИП(Документ.СчетНаОплату))) КАК ВзаиморасчетыКомпанииОстатки
	               |		ПО (ВЫБОР
	               |				КОГДА ВзаиморасчетыКомпанииОстатки.Сделка ССЫЛКА Документ.ЗаказПокупателя
	               |					ТОГДА ЗаказыОстаткиРезервов.Заказ = ВзаиморасчетыКомпанииОстатки.Сделка
	               |				КОГДА ВзаиморасчетыКомпанииОстатки.Сделка ССЫЛКА Документ.СчетНаОплату
	               |					ТОГДА ЗаказыОстаткиРезервов.Заказ = ВЫРАЗИТЬ(ВзаиморасчетыКомпанииОстатки.Сделка КАК Документ.СчетНаОплату).ДокументОснование
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыОстаткиРезервов.Заказ,
	               |	ЗаказыОстаткиРезервов.Номенклатура,
	               |	ЗаказыОстаткиРезервов.ХарактеристикаНоменклатуры,
	               |	ЗаказыОстаткиРезервов.СкладКомпании,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Номер
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).Номер
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Дата
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).Дата
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Автор
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).Автор
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Организация
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).Организация
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).ПодразделениеКомпании
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).ПодразделениеКомпании
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).Контрагент
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).ПодразделениеПолучатель
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).ХозОперация
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).ХозОперация
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).СкладКомпании
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).СкладКомпании
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказПокупателя
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказПокупателя).СрокСнятияРезерва
	               |		КОГДА ЗаказыОстаткиРезервов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	               |			ТОГДА ВЫРАЗИТЬ(ЗаказыОстаткиРезервов.Заказ КАК Документ.ЗаказВнутренний).СрокСнятияРезерва
	               |	КОНЕЦ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СрокСнятияРезерва";
	
	РазрешениеСнятияРезервов = ПраваИНастройкиПользователя.Значение("РазрешениеСнятияРезервов");
	Если РазрешениеСнятияРезервов = Перечисления.РезервыСпособыСписания.РазрешеноРезервыИзСвободногоЗапаса Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеСнятияРезервов","ЗаказыПокупателейОстатки.РезервСвободныйОстаток > 0");	
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеСнятияРезервов","ЗаказыПокупателейОстатки.РезервОстаток > 0");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаОкончания",ТекущаяДатаСеанса() + 24 * 3600 * СрокДоРезервирования);
	ВидыОперацийЗаказов = Новый Массив;
	ВидыОперацийЗаказов.Добавить(Перечисления.ВидыОперацийЗаказов.Резервирование);
	ВидыОперацийЗаказов.Добавить(Перечисления.ВидыОперацийЗаказов.ЗаказСРезервированием);
	Запрос.УстановитьПараметр("ВидыОперацийЗаказов",ВидыОперацийЗаказов);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Создает запись напоминание автору(менеджеру) документа о списании резерва.
//
Процедура СоздатьНапоминание(НаборЗаписей, ТаблицаЗаказов, СнятиеРезервов=Неопределено, СрокДоРезервирования = 0) Экспорт
	
	// Получим пользователей, кому требуется создать напоминание.
	Запрос = Новый Запрос;
	
	// Вариант запроса, который вернет всех пользователей, если для 1 сотрудника заведено несколько пользователей.
	Запрос.Текст="ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаЗаказов.Заказ ССЫЛКА Документ.ЗаказВнутренний
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаЗаказов.Заказ КАК Документ.ЗаказВнутренний)
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаЗаказов.Заказ КАК Документ.ЗаказПокупателя)
	|	КОНЕЦ КАК Заказ
	|ПОМЕСТИТЬ ТаблицаЗаказов
	|ИЗ
	|	&ТаблицаЗаказов КАК ТаблицаЗаказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПокупателя.Заказ КАК Заказ,
	|	ЕСТЬNULL(Пользователи.Ссылка, ЗаказПокупателя.Заказ.Автор) КАК Пользователь,
	|	ЗаказПокупателя.Заказ.СрокСнятияРезерва КАК СрокСнятияРезерва
	|ИЗ
	|	ТаблицаЗаказов КАК ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ЗаказПокупателя.Заказ.Менеджер = Пользователи.Сотрудник
	|			И (НЕ Пользователи.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
	|			И (Пользователи.ПометкаУдаления = ЛОЖЬ)
	|ГДЕ
	|	ЕСТЬNULL(Пользователи.Ссылка, ЗаказПокупателя.Заказ.Автор) <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|ИТОГИ
	|	МИНИМУМ(СрокСнятияРезерва)
	|ПО
	|	Пользователь";
	Запрос.УстановитьПараметр("ТаблицаЗаказов", ТаблицаЗаказов);
	ВыборкаПользователи = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПользователи.Следующий() Цикл
		
		ВыборкаЗаказы = ВыборкаПользователи.Выбрать();
		
		// Сформируем СтрЗаказы - список заказов по пользователю через запятую.
		СтрЗаказы = "";
		Первый = Истина;
		ПервыйЗаказ = Неопределено;
		Пока ВыборкаЗаказы.Следующий() Цикл;
			Если Первый Тогда
				СтрЗаказы = "<" + Строка(ВыборкаЗаказы.Заказ) + ">";
				ПервыйЗаказ = ВыборкаЗаказы.Заказ;
				Первый = Ложь;
			Иначе
				СтрЗаказы = СтрЗаказы + ", <" + Строка(ВыборкаЗаказы.Заказ) + ">";
			КонецЕсли;
		КонецЦикла;
		СтрЗаказы = ?(ВыборкаЗаказы.Количество() = 1, НСтр("ru = 'по заказу'"), НСтр("ru = 'по заказам'")) + " " + СтрЗаказы;
		
		Если СнятиеРезервов <> Неопределено Тогда
			Описание = СтрШаблон(НСтр("ru = 'Сформирован документ снятия резервов <%1> %2'"), Строка(СнятиеРезервов), СтрЗаказы);
		Иначе
			Если СрокДоРезервирования = 0 Тогда
				Описание = СтрШаблон(НСтр("ru = 'Истек срок снятия резерва %1. Необходимо выполнить снятие резерва.'"), СтрЗаказы);
			Иначе
				Описание = СтрШаблон(
					НСтр("ru = 'Срок резерва %1 истекает %2.'"),
					СтрЗаказы,
					Формат(ВыборкаПользователи.СрокСнятияРезерва, "ДЛФ = D")
				);
			КонецЕсли;
		КонецЕсли;
		ВремяСобытия = ТекущаяДатаСеанса() + 180;
		Расписание = Неопределено;
		Расписание = Новый ХранилищеЗначения(Расписание, Новый СжатиеДанных(9));		
		
		НоваяЗапись = НаборЗаписей.Добавить();			
		НоваяЗапись.Активность            				= Истина;
		НоваяЗапись.Пользователь            			= ВыборкаПользователи.Пользователь;
		НоваяЗапись.Автор                  				= Пользователи.ТекущийПользователь();
		НоваяЗапись.СпособУстановкиВремениНапоминания	= Перечисления.СпособыУстановкиВремениНапоминания.ВУказанноеВремя;
		НоваяЗапись.ВремяСобытия            			= ВремяСобытия;
		НоваяЗапись.СрокНапоминания        				= ВремяСобытия;
		НоваяЗапись.Описание 							= Описание;
		НоваяЗапись.Расписание            				= Расписание;
		НоваяЗапись.ПредставлениеИсточника				= НСтр("ru = 'Автоматическое снятие резервов по заказам покупателей'") + Описание;
		Если СнятиеРезервов<>Неопределено Тогда
			НоваяЗапись.Источник = СнятиеРезервов;
		Иначе
			НоваяЗапись.Источник = ПервыйЗаказ;
		КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры

// Формирует набор напоминаний по просроченным резервам и записывает их.
//
Процедура СформироватьНапоминанияПроСнятиеРезервов(ЗаказыСПредоплатой) Экспорт
	
	СрокНапоминанияСнятияРезервов = Константы.СрокНапоминанияСнятияРезервов.Получить();
	ТаблицаЗаказов = ПолучитьТаблицуЗаказов(СрокНапоминанияСнятияРезервов);
	Если ТаблицаЗаказов=Неопределено ИЛИ ТаблицаЗаказов.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписейНапоминания = РегистрыСведений.НапоминанияПользователя.СоздатьНаборЗаписей();
	НаборЗаписейНапоминания.Отбор.Автор.Установить(Пользователи.АвторизованныйПользователь());
	НаборЗаписейНапоминания.Прочитать();
	
	ТипыЗаказов = Новый Массив;
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказВнутренний"));
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	
	ТаблицаЗаказовИтоговая = Новый ТаблицаЗначений;
	ТаблицаЗаказовИтоговая.Колонки.Добавить("Заказ", Новый ОписаниеТипов(ТипыЗаказов));	
	
	ТекДата = ТекущаяДатаСеанса() + 24* 3600 * СрокНапоминанияСнятияРезервов;
	Для Каждого ТекЗаказ Из ТаблицаЗаказов Цикл
		
		Если НЕ ЗаказыСПредоплатой И ТекЗаказ.Оплата > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекЗаказ.СрокСнятияРезерва) И ТекЗаказ.СрокСнятияРезерва < ТекДата Тогда
			СтрокаИтоговая = ТаблицаЗаказовИтоговая.Добавить();
			СтрокаИтоговая.Заказ = ТекЗаказ.Заказ;
		КонецЕсли;
		
	КонецЦикла;
	
	СоздатьНапоминание(НаборЗаписейНапоминания, ТаблицаЗаказовИтоговая,, СрокНапоминанияСнятияРезервов);
	
	// записываем сформированные напоминания
	Попытка
		НаборЗаписейНапоминания.Записать(Истина);
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось записать набор в регистр ""НапоминанияПользователя"".'", ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

// Формирует документы снятие резервов и возвращает результат работы.
//
Функция ВыполнитьСнятиеРезервов(ТаблицаЗаказовДляСписания, КэшЗаказы, СоздаватьНапоминание=Ложь, ФоновыйРежим=Ложь) Экспорт
	
	ТипыЗаказов = Новый Массив;
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказВнутренний"));
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	
	КэшСнятиеРезервов = Новый ТаблицаЗначений;
	КэшСнятиеРезервов.Колонки.Добавить("СнятиеРезервов",Новый ОписаниеТипов("ДокументСсылка.СнятиеРезервовЗаказовПокупателя"));
	КэшСнятиеРезервов.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	КэшСнятиеРезервов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3)));
	КэшСнятиеРезервов.Колонки.Добавить("ЕдиницаИзмерения",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	КэшСнятиеРезервов.Колонки.Добавить("Коэффициент",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(10, 0)));
	КэшСнятиеРезервов.Колонки.Добавить("МестоРазмещения",Новый ОписаниеТипов("СправочникСсылка.СкладыКомпании"));
	КэшСнятиеРезервов.Колонки.Добавить("ЗаказПокупателя", Новый ОписаниеТипов(ТипыЗаказов));
	КэшСнятиеРезервов.Колонки.Добавить("ХарактеристикаНоменклатуры",Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	
	РазрешениеСнятияРезервов = ПраваИНастройкиПользователя.Значение("РазрешениеСнятияРезервов");
	
	// Если ничего не выбрано, прерываем обработку.
	Если ТаблицаЗаказовДляСписания.Количество()=0 Тогда
		Если НЕ ФоновыйРежим Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не выбрано заявок для формирования снятия резервов'"));
		КонецЕсли;
		Возврат КэшСнятиеРезервов;
	КонецЕсли;
	
	ТаблицаЗаказовДляСписания.Сортировать("Контрагент,Корректировка");
	
	ТекущийДокумент = Документы.СнятиеРезервовЗаказовПокупателя.СоздатьДокумент();	
	ТекущийКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
	ТекФлагКорректировки = Ложь;
	
	// Таблица содержит заказы, резервы по которым были сняты данным документом.
	ТаблицаЗаказовИтоговая = Новый ТаблицаЗначений;
	ТаблицаЗаказовИтоговая.Колонки.Добавить("Заказ", Новый ОписаниеТипов(ТипыЗаказов));	
	
	Если СоздаватьНапоминание Тогда
		НаборЗаписейНапоминания = РегистрыСведений.НапоминанияПользователя.СоздатьНаборЗаписей();
		НаборЗаписейНапоминания.Отбор.Автор.Установить(Пользователи.АвторизованныйПользователь());
		НаборЗаписейНапоминания.Прочитать();
	КонецЕсли;
	
	Для Каждого ТекЗаказДляСписания Из ТаблицаЗаказовДляСписания Цикл
		
		Если ТекущийКонтрагент <> ТекЗаказДляСписания.Контрагент ИЛИ ТекФлагКорректировки <> ТекЗаказДляСписания.Корректировка Тогда
			
			// Изменился контрагент
			ТекущийКонтрагент = ТекЗаказДляСписания.Контрагент;
			ТекФлагКорректировки = ТекЗаказДляСписания.Корректировка;
			
			// Записываем документ
			Если НЕ ЗначениеЗаполнено(ТекущийДокумент.Ссылка) И ТекущийДокумент.Товары.Количество()>0 Тогда
				Попытка
					ТекущийДокумент.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);	
					Если НЕ ФоновыйРежим Тогда
						ОбщегоНазначения.СообщитьПользователю(
							СтрШаблон(НСтр("ru = '""Сформирован и проведен документ ""%1""'"),Строка(ТекущийДокумент.Ссылка))
						);
					КонецЕсли;
					// Формируем данные для страницы "сформированные документы".
					Для Каждого СтрокаТоваров Из ТекущийДокумент.Ссылка.Товары Цикл
						СтрокаКэша = КэшСнятиеРезервов.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаКэша, СтрокаТоваров);
						СтрокаКэша.СнятиеРезервов = ТекущийДокумент.Ссылка;
					КонецЦикла;
					// Создаем напоминание автору заказа покупателя.
					Если СоздаватьНапоминание Тогда
						Обработки.АвтоматическоеСнятиеРезервов.СоздатьНапоминание(НаборЗаписейНапоминания, ТаблицаЗаказовИтоговая,ТекущийДокумент.Ссылка);
					КонецЕсли;
				Исключение
					Если НЕ ФоновыйРежим Тогда
						ОбщегоНазначения.СообщитьПользователю(
							СтрШаблон(НСтр("ru = '""Не удалось записать документ ""%1""'"),Строка(ТекущийДокумент)
							)
						);
					КонецЕсли;
				КонецПопытки;
				
	 			ТаблицаЗаказовИтоговая.Очистить();
				
			КонецЕсли;
			
			// Создаем новый документ и заполняем его реквизиты.
			ТекущийДокумент = Документы.СнятиеРезервовЗаказовПокупателя.СоздатьДокумент();
			ТекущийДокумент.Контрагент = ТекЗаказДляСписания.Контрагент;	
			ТекущийДокумент.Заполнить(Неопределено);
			ТекущийДокумент.КорректировкаЗаказа = ТекЗаказДляСписания.Корректировка;
			ТекущийДокумент.Комментарий = НСтр("ru = 'Автоматическое снятие резерва'");
			Если ТипЗнч(ТекЗаказДляСписания.Заказ) = Тип("ДокументСсылка.ЗаказВнутренний") Тогда
				ТекущийДокумент.ХозОперация = Справочники.ХозОперации.СнятиеРезерваВнутреннего;
			КонецЕсли;
			
		КонецЕсли;
		
		// Заполняем данными табличную часть "Товары" нового документа.
		ТекущиеТовары = КэшЗаказы.НайтиСтроки(Новый Структура("Заказ",ТекЗаказДляСписания.Заказ));
		Для Каждого ТекСтрокаТовара Из ТекущиеТовары Цикл
			НоваяСтрока = ТекущийДокумент.Товары.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры = ТекСтрокаТовара.ХарактеристикаНоменклатуры;
			НоваяСтрока.МестоРазмещения = ТекСтрокаТовара.МестоРазмещения;
			НоваяСтрока.ЗаказПокупателя = ТекСтрокаТовара.Заказ;
			
			НоваяСтрока.ЕдиницаИзмерения = Справочники.Номенклатура.ПолучитьОсновнуюЕдиницуПоБазовой(ТекСтрокаТовара.Номенклатура);
			НоваяСтрока.Коэффициент = НоваяСтрока.ЕдиницаИзмерения.Коэффициент;
			
			Если РазрешениеСнятияРезервов = Перечисления.РезервыСпособыСписания.РазрешеноРезервыИзСвободногоЗапаса Тогда
				НоваяСтрока.Количество = ТекСтрокаТовара.РезервСвободныйОстаток;
			Иначе 
				НоваяСтрока.Количество = ТекСтрокаТовара.РезервОстаток;
			КонецЕсли;
			Документы.СнятиеРезервовЗаказовПокупателя.ТоварыНоменклатураПриИзменении(ТекущийДокумент,НоваяСтрока);
		КонецЦикла;
		
 		СтрокаИтоговая = ТаблицаЗаказовИтоговая.Добавить();
		СтрокаИтоговая.Заказ = ТекЗаказДляСписания.Заказ;		
		
	КонецЦикла;
	
	// Записываем последний документ, если он не был записан в цикле.
	Если НЕ ЗначениеЗаполнено(ТекущийДокумент.Ссылка) И ТекущийДокумент.Товары.Количество()>0 Тогда
		Попытка
			ТекущийДокумент.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);	
			Если НЕ ФоновыйРежим Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = '""Сформирован и проведен документ ""%1""'"),Строка(ТекущийДокумент.Ссылка))
				);
			КонецЕсли;
			// Формируем данные для страницы "сформированные документы".
			Для Каждого СтрокаТоваров Из ТекущийДокумент.Ссылка.Товары Цикл
				СтрокаКэша = КэшСнятиеРезервов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаКэша, СтрокаТоваров);
				СтрокаКэша.СнятиеРезервов = ТекущийДокумент.Ссылка;
			КонецЦикла;
			// Создаем напоминание автору заказа покупателя.
			Если СоздаватьНапоминание Тогда
				Обработки.АвтоматическоеСнятиеРезервов.СоздатьНапоминание(НаборЗаписейНапоминания,ТаблицаЗаказовИтоговая,ТекущийДокумент.Ссылка);
			КонецЕсли;
		Исключение
			Если НЕ ФоновыйРежим Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = '""Не удалось записать документ ""%1""'"),Строка(ТекущийДокумент))
				);
			КонецЕсли;
		КонецПопытки;
	КонецЕсли;
	
	// Записываем сформированные напоминания.
	Если СоздаватьНапоминание Тогда
		Попытка НаборЗаписейНапоминания.Записать(Истина); 
		Исключение 	
			Если НЕ ФоновыйРежим Тогда 
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = '""Ошибка создания напоминаний о резервировании товаров: ""%1""'"),ОписаниеОшибки())
				); 
			КонецЕсли;
		КонецПопытки;
	КонецЕсли;
	
	Возврат КэшСнятиеРезервов;
	
КонецФункции

// Выполняет регламентное задание по автоматическому снятию резервов
//
Процедура ВыполнитьАвтоматическоеСнятиеРезервов(СтруктураПараметров) Экспорт
	
	// получим параметры
	КорректировкаЗаказа = Ложь;
	ФормированиеНапоминаний = Ложь;
	СписаниеРезервовСПредоплатой = Ложь;
	ЗаказыПокупателей = Ложь;
	ЗаказыВнутренние = Ложь;
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		СтруктураПараметров.Свойство("КорректировкаЗаказа",КорректировкаЗаказа);
		СтруктураПараметров.Свойство("ФормированиеНапоминаний",ФормированиеНапоминаний);
		СтруктураПараметров.Свойство("СписаниеРезервовСПредоплатой",СписаниеРезервовСПредоплатой);
		ЗаказыПокупателей = ПолучитьЗначениеПараметраСтруктуры(СтруктураПараметров, "ЗаказыПокупателей", Ложь);
		ЗаказыВнутренние = ПолучитьЗначениеПараметраСтруктуры(СтруктураПараметров, "ЗаказыВнутренние", Ложь);
	КонецЕсли;
	
	// инициализация таблиц с данными о заказах
	ТипыЗаказов = Новый Массив;
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказВнутренний"));
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	
	ТипКонтрагентов = Новый Массив;
	ТипКонтрагентов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТипКонтрагентов.Добавить(Тип("СправочникСсылка.ПодразделенияКомпании"));
	
	КэшЗаказы = ПолучитьТаблицуЗаказов();
	ТаблицаЗаказовДляСписания = Новый ТаблицаЗначений;
	ТаблицаЗаказовДляСписания.Колонки.Добавить("Заказ", Новый ОписаниеТипов(ТипыЗаказов));
	ТаблицаЗаказовДляСписания.Колонки.Добавить("Контрагент", Новый ОписаниеТипов(ТипКонтрагентов));
	ТаблицаЗаказовДляСписания.Колонки.Добавить("Корректировка",Новый ОписаниеТипов("Булево"));
	
	// заполнение таблиц данными о заказах в соответствии с параметрами
	ТекДата = ТекущаяДатаСеанса();
	Для Каждого ТекЗаказ Из КэшЗаказы Цикл
		Если ЗначениеЗаполнено(ТекЗаказ.СрокСнятияРезерва) И ТекЗаказ.СрокСнятияРезерва < ТекДата Тогда
			Если (ТекЗаказ.Оплата > 0 И НЕ СписаниеРезервовСПредоплатой)
				ИЛИ (НЕ ЗаказыПокупателей И ТипЗнч(ТекЗаказ.Заказ) = Тип("ДокументСсылка.ЗаказПокупателя"))
				ИЛИ (НЕ ЗаказыВнутренние И ТипЗнч(ТекЗаказ.Заказ) = Тип("ДокументСсылка.ЗаказВнутренний")) Тогда
				Продолжить;
			КонецЕсли;
			Если ТаблицаЗаказовДляСписания.Найти(ТекЗаказ.Заказ, "Заказ") = Неопределено Тогда
				НоваяСтрокаТаблицы = ТаблицаЗаказовДляСписания.Добавить();
				НоваяСтрокаТаблицы.Заказ = ТекЗаказ.Заказ;
				НоваяСтрокаТаблицы.Контрагент = ТекЗаказ.Контрагент;
				НоваяСтрокаТаблицы.Корректировка = КорректировкаЗаказа;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// выполняем функцию, которая формирует документы снятия резервов 
	Результат = ВыполнитьСнятиеРезервов(ТаблицаЗаказовДляСписания,КэшЗаказы,ФормированиеНапоминаний,Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

