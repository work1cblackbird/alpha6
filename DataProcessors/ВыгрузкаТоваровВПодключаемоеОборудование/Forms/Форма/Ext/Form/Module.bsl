#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	РабочееМесто = МенеджерОборудованияВызовСервера.РабочееМестоКлиента();
	
	Отбор = Новый Структура("РабочееМесто", РабочееМесто);
	ОборудованиеРМ = Справочники.ПодключаемоеОборудование.Выбрать(,, Отбор);
	Пока ОборудованиеРМ.Следующий() Цикл
		Если НЕ ОборудованиеРМ.УстройствоИспользуется Или ОборудованиеРМ.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		ТипОборудованияРМ = ОборудованиеРМ.ТипОборудования;
		
		Если ТипОборудованияРМ = Перечисления.ТипыПодключаемогоОборудования.ТерминалСбораДанных Тогда
			СписокТСД.Добавить(ОборудованиеРМ.Ссылка, ОборудованиеРМ.Наименование)
		ИначеЕсли ТипОборудованияРМ = Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток Тогда
			СписокВесов.Добавить(ОборудованиеРМ.Ссылка, ОборудованиеРМ.Наименование)
		ИначеЕсли ТипОборудованияРМ = Перечисления.ТипыПодключаемогоОборудования.УдалитьККМОфлайн Тогда
			СписокККМOffLine.Добавить(ОборудованиеРМ.Ссылка, ОборудованиеРМ.Наименование)
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьВыполнить()

	ЗаполнитьБазуТоваров();

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВыполнить()

	ОчиститьСообщения();
	
	Если ПустаяСтрока(ТипОборудования) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбран тип оборудования.'"));
		Возврат;
	КонецЕсли;
	
	ТаблицаЗагрузкиТоваров = Новый Массив;
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеОперации", ЭтотОбъект);
	
	Если ТипОборудования = "Весы" Тогда
		
		Для Каждого Товар Из ТаблицаВыгрузки Цикл
			НоваяСтрока = ОборудованиеВесовоеОборудованиеКлиентСервер.ПараметрыСтрокиВыгрузкиВВесыСПечатьюЭтикеток();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Товар, "PLU,Штрихкод,Наименование,Цена");
			НоваяСтрока.Код = Товар.КодТовара;
			ТаблицаЗагрузкиТоваров.Добавить(НоваяСтрока);
		КонецЦикла;
		
		ПараметрыОперации = ОборудованиеВесовоеОборудованиеКлиентСервер.ПараметрыОперацииВесыСПечатьюЭтикеток();
		ПараметрыОперации.Вставить("ТаблицаТоваров", ТаблицаЗагрузкиТоваров);
		ПараметрыОперации.ЧастичнаяВыгрузка = РежимОбновления;
		ОборудованиеВесовоеОборудованиеКлиент.НачатьВыгрузкуДанныеВВесыСПечатьюЭтикеток(
			ОписаниеОповещения,
			УникальныйИдентификатор,
			Устройство,
			ПараметрыОперации
		);
		
	ИначеЕсли ТипОборудования = "ККМ" Тогда
		// !!! Реализовать
	ИначеЕсли ТипОборудования = "ТСД" Тогда
		
		Для Каждого Товар Из ТаблицаВыгрузки Цикл
			НоваяСтрока = ОборудованиеТерминалыСбораДанныхКлиентСервер.ПараметрыСтрокиВыгрузкиВТСД();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Товар, "Штрихкод, ЕдиницаИзмерения, Качество, Цена, Остаток");
			НоваяСтрока.Код = Товар.КодТовара;
			НоваяСтрока.Номенклатура = Товар.Наименование;
			НоваяСтрока.ХарактеристикаНоменклатуры = Товар.Характеристика;
			НоваяСтрока.СерияНоменклатуры = Товар.Серия;
			ТаблицаЗагрузкиТоваров.Добавить(НоваяСтрока);
		КонецЦикла;

		ПараметрыОперации = ОборудованиеТерминалыСбораДанныхКлиентСервер.ПараметрыВыгрузкиВТСД();
		ПараметрыОперации.Вставить("ТаблицаТоваров", ТаблицаЗагрузкиТоваров);
		ПараметрыОперации.ЧастичнаяВыгрузка = РежимОбновления;
		ОборудованиеТерминалыСбораДанныхКлиент.НачатьВыгрузкуДанныеВТСД(
			ОписаниеОповещения,
			УникальныйИдентификатор,
			Неопределено,
			ПараметрыОперации
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьТовары(Команда)
	
	// Получим данные текущей строки табличной части
	Если НЕ Элементы.ТаблицаВыгрузки.ТекущаяСтрока = Неопределено Тогда
		ТекущиеДанные =ТаблицаВыгрузки.НайтиПоИдентификатору(Элементы.ТаблицаВыгрузки.ТекущаяСтрока);
		ТаблицаВыгрузки.Удалить(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеОперации(Результат, Параметры) Экспорт
	
	ОтветОтУстройства = ?(Результат.Результат, НСтр("ru = 'Выполнение операции успешно завершено'"), НСтр("ru = 'В процессе выполнения операции произошла ошибка'"));
	ОбщегоНазначенияКлиент.СообщитьПользователю(ОтветОтУстройства);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСписокТоваров(Команда)
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(ТипОборудования) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбран тип оборудования.'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеОперации", ЭтотОбъект);
	Если ТипОборудования = "Весы" Тогда
		ОборудованиеВесовоеОборудованиеКлиент.НачатьОчисткуТоваровВВесахСПечатьюЭтикеток(
			ОписаниеОповещения,
			УникальныйИдентификатор,
			Устройство
		);
	ИначеЕсли ТипОборудования = "ККМ" Тогда
		// !!! Реализовать 
	ИначеЕсли ТипОборудования = "ТСД" Тогда
		ОборудованиеТерминалыСбораДанныхКлиент.НачатьОчисткуДанныеВТСД(
			ОписаниеОповещения,
			УникальныйИдентификатор,
			Устройство
		);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Цвет фона
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаВыгрузки");
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаВыгрузки.КодТовара");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаВыгрузки.КодТовара");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(255,191,188));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьБазуТоваров()
	
	Если ГруппаТоваров.Пустая() Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Поле ""Группа товаров"" не заполнено'"));
	КонецЕсли;
	Если СкладКомпании.Пустая() Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Поле ""Склад"" не заполнено'"));
	КонецЕсли;
	Если ТипЦен.Пустая() Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Поле ""Тип цен"" не заполнено'"));
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	| ВыгружаемыеТовары.Номенклатура КАК Номенклатура,
	| ВыгружаемыеТовары.Штрихкод КАК Штрихкод,
	| ВыгружаемыеТовары.Номенклатура.Наименование КАК Наименование,
	| ВыгружаемыеТовары.Номенклатура.Код КАК КодТовара,
	| ВыгружаемыеТовары.Номенклатура.Артикул КАК Артикул,
	| ВыгружаемыеТовары.Номенклатура.НаименованиеПолное КАК НаименованиеПолное,
	| ВыгружаемыеТовары.ХарактеристикаНоменклатуры.Наименование КАК Характеристика,
	| ВыгружаемыеТовары.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	| ВыгружаемыеТовары.НомерЯчейки КАК PLU,
	| ВыгружаемыеТовары.ХарактеристикаНоменклатуры.СерийныйНомер КАК Серия,
	| ВыгружаемыеТовары.ХарактеристикаНоменклатуры.Качество.Наименование КАК Качество,
	| ВыгружаемыеТовары.Номенклатура.ТипНоменклатуры.УникальностьСерийногоНомера КАК УчетПоСериям,
	| ВЫБОР
	|  КОГДА ВыгружаемыеТовары.ЕдиницаИзмерения = ВыгружаемыеТовары.Номенклатура.ОсновнаяЕдиницаИзмерения
	|   ТОГДА ОстаткиТоваровКомпанииОстатки.КоличествоОстаток - ОстаткиТоваровКомпанииОстатки.РезервОстаток
	|  ИНАЧЕ (ОстаткиТоваровКомпанииОстатки.КоличествоОстаток - ОстаткиТоваровКомпанииОстатки.РезервОстаток) * ВыгружаемыеТовары.Номенклатура.ОсновнаяЕдиницаИзмерения.Коэффициент / ВыгружаемыеТовары.ЕдиницаИзмерения.Коэффициент
	| КОНЕЦ КАК Остаток,
	| ВыгружаемыеТовары.ХарактеристикаНоменклатуры,
	| ВыгружаемыеТовары.ЕдиницаИзмерения КАК Единица
	|ИЗ
	| (ВЫБРАТЬ
	|  ТоварыВОборудовании.Номенклатура КАК Номенклатура,
	|  Штрихкоды.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|  ВЫБОР
	|   КОГДА Штрихкоды.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|    ТОГДА ТоварыВОборудовании.Номенклатура.ОсновнаяЕдиницаИзмерения
	|   ИНАЧЕ Штрихкоды.ЕдиницаИзмерения
	|  КОНЕЦ КАК ЕдиницаИзмерения,
	|  Штрихкоды.Штрихкод КАК Штрихкод,
	|  ТоварыВОборудовании.НомерЯчейки КАК НомерЯчейки
	| ИЗ
	|  РегистрСведений.ТоварыВОборудовании КАК ТоварыВОборудовании
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|   ПО ТоварыВОборудовании.Номенклатура = Штрихкоды.Объект
	| ГДЕ
	|  ТоварыВОборудовании.Номенклатура.ЭтоГруппа = ЛОЖЬ
	|  И ТоварыВОборудовании.ГруппаТоваров = &ГруппаТоваров
	|  И НЕ Штрихкоды.Штрихкод = """") КАК ВыгружаемыеТовары
	|  ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваровКомпании.Остатки(, СкладКомпании = &СкладКомпании) КАК ОстаткиТоваровКомпанииОстатки
	|  ПО ВыгружаемыеТовары.Номенклатура = ОстаткиТоваровКомпанииОстатки.Номенклатура
	|   И ВыгружаемыеТовары.ХарактеристикаНоменклатуры = ОстаткиТоваровКомпанииОстатки.ХарактеристикаНоменклатуры";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ГруппаТоваров", ГруппаТоваров);
	Запрос.УстановитьПараметр("СкладКомпании", СкладКомпании);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаВыгрузки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Цена = ЦенообразованиеСервер.ПолучитьЦену(ТипЦен, Выборка.Номенклатура,,,,, Выборка.ХарактеристикаНоменклатуры, Выборка.Единица, СкладКомпании.ПодразделениеКомпании);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОборудованияПриИзменении(Элемент)
	
	Устройство = НЕОПРЕДЕЛЕНО;
	
	Если ТипОборудования = "ТСД" Тогда
		Элементы.Устройство.СписокВыбора.ЗагрузитьЗначения(СписокТСД.ВыгрузитьЗначения());	
	ИначеЕсли ТипОборудования = "Весы" Тогда
		Элементы.Устройство.СписокВыбора.ЗагрузитьЗначения(СписокВесов.ВыгрузитьЗначения());	
	ИначеЕсли ТипОборудования = "ККМ" Тогда
		Элементы.Устройство.СписокВыбора.ЗагрузитьЗначения(СписокККМOffLine.ВыгрузитьЗначения());	
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

