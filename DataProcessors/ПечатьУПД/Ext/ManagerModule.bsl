#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Процедура обработки печати.
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_УПД") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_УПД",
															НСтр("ru = 'Универсальный передаточный документ'"),
															ПечатьУПДОбщая(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьУПДОбщая(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина;
	УстановитьПривилегированныйРежим(Истина);
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало 	 = ТабличныйДокумент.ВысотаТаблицы + 1;
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		
		ВыводитьКодТНВЭД      = ПраваИНастройкиПользователя.Значение("ВыводитьКодТНВЭД");
		
		// Зададим параметры макета
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб		 = Истина;
		
		// Получим данные из документа.
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиУПД(Документ);
						
		Если ЗначениеЗаполнено(ДанныеДокумента) Тогда 
			
			ЭтоИсправление = ?(ДанныеДокумента.Свойство("Исправление"), ДанныеДокумента.Исправление, Ложь); 
			
			ВыводитьКодВидаТовара = (ДанныеДокумента.Дата >= Дата('20171001'));
			ИспользоватьМакетДо2021 = (ДанныеДокумента.Дата < Дата('20210701'));
			Если ДанныеДокумента.Дата >= Дата('20241001') Тогда
				НомерРедакции = 1096;
			Иначе
				НомерРедакции = 534;
			КонецЕсли;
			
			ВыборкаТабличнойЧасти = ДанныеДокумента.Товары;
			КоличествоСтрок =  ВыборкаТабличнойЧасти.Количество();
			
			Если ЕстьРеквизит(ВыборкаТабличнойЧасти, "СтавкаНДС") Тогда
				ЕстьРеквизитСтавкаНДС = Истина;
			Иначе 
				ЕстьРеквизитСтавкаНДС = Ложь;
			КонецЕсли;

			ЕстьРНПТ = Ложь;
			ЕстьСтоимостьТовараПрослеживания = Ложь;

			Если ИспользоватьМакетДо2021 Тогда

				Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьУПД.ПФ_MXL_УПД");

			Иначе
				
				ЕстьРНПТ = ЕстьРеквизит(ДанныеДокумента, "ТаблицаРНПТ") И ДанныеДокумента.ТаблицаРНПТ.Количество() > 0;
				
				Если ЕстьРНПТ Тогда
					Если Документ.Дата >= Дата('20231001') Тогда
						ЕстьСтоимостьТовараПрослеживания = Истина;
						ИмяМакета = "Обработка.ПечатьУПД.ПФ_MXL_УПД_01_10_2023_Прослеж";
					Иначе
						ИмяМакета = "Обработка.ПечатьУПД.ПФ_MXL_УПД_02_04_2021_Прослеж";
					КонецЕсли;
					Макет = УправлениеПечатью.МакетПечатнойФормы(ИмяМакета);
				Иначе
					Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьУПД.ПФ_MXL_УПД_02_04_2021");
				КонецЕсли;
				
			КонецЕсли;

			ОбластьЗаголовок        = Макет.ПолучитьОбласть("Шапка");
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
			ОбластьИтого            = Макет.ПолучитьОбласть("Итого");
			ОбластьПодвал           = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвалНакладной  = Макет.ПолучитьОбласть("ПодвалНакладной");

			ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
			ОбластьЗаголовок.Параметры.СтатусУПД = ДанныеДокумента.Статус;
			Статус = ДанныеДокумента.Статус;
			
			ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
			ПерерасчетВВалюте = Ложь;
			Если ДанныеДокумента.ВалютаДокумента <> ВалютаРегл Тогда
				
				ПерерасчетВВалюте = Истина;
				
				ДокументОбъектСтруктура = УправлениеПечатьюПлатформа.ДанныеДокументаДляПерерасчетаТаблицы();
				ЗаполнитьЗначенияСвойств(ДокументОбъектСтруктура, ДанныеДокумента);
				ДокументОбъектСтруктура.Документ = ?(Статус = 1, ДанныеДокумента.ДокументОснование, Документ);;
				
				ЗащищенныеФункцииАльфаАвтоСервер.ПерерасчетТаблицыТоваров(ВыборкаТабличнойЧасти,
					ДокументОбъектСтруктура,
					ВалютаРегл);
				
			КонецЕсли;
			
			Если Статус = 1 Тогда
				Если ДанныеДокумента.ХозОперация = Справочники.ХозОперации.СчетФактураВыданный 
					ИЛИ ДанныеДокумента.ХозОперация = Справочники.ХозОперации.СчетФактураПолученный Тогда
					ОбластьЗаголовок.Параметры.Номер    = ДанныеДокумента.Номер;
					ОбластьЗаголовок.Параметры.Дата 	= Формат(ДанныеДокумента.Дата, "ДЛФ=DD");
					ОбластьЗаголовок.Параметры.НомерИсправления = "--";
					ОбластьЗаголовок.Параметры.ДатаИсправления 	= "--";
				Иначе
					ОбластьЗаголовок.Параметры.НомерИсправления = ДанныеДокумента.НомерИсправления;
					ОбластьЗаголовок.Параметры.ДатаИсправления = Формат(ДанныеДокумента.Дата, "ДЛФ=DD");
					// Найдем изначальную счет фактуру.
					Если ДанныеДокумента.Свойство("НомерИсходногоДокумента")
						И ЗначениеЗаполнено(ДанныеДокумента.НомерИсходногоДокумента) Тогда
						ОбластьЗаголовок.Параметры.Номер = ДанныеДокумента.НомерИсходногоДокумента;
						ОбластьЗаголовок.Параметры.Дата  = Формат(ДанныеДокумента.ДатаИсходногоДокумента, "ДЛФ=DD");
					Иначе
						ДокументОсн = ДанныеДокумента.ДокументОснование;
						Пока ТипЗнч(ДокументОсн) = Тип("ДокументСсылка.КорректировкаРеализации") Цикл
							ДокументОсн = ДокументОсн.ДокументОснование;
						КонецЦикла;
						
						Запрос = Новый Запрос;
						Запрос.Текст =
						"ВЫБРАТЬ
						|	СчетФактураВыданный.Ссылка
						|ИЗ
						|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
						|ГДЕ
						|	СчетФактураВыданный.ДокументОснование = &ДокументОсн";
						Запрос.УстановитьПараметр("ДокументОсн", ДокументОсн);
						ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
						
						Если ВыборкаЗапроса.Следующий() Тогда 
							ОбластьЗаголовок.Параметры.Номер = УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(
							ВыборкаЗапроса.Ссылка);
							ОбластьЗаголовок.Параметры.Дата = Формат(ВыборкаЗапроса.Ссылка.Дата, "ДЛФ=DD");
						Иначе
							ОбластьЗаголовок.Параметры.Номер = "--";
							ОбластьЗаголовок.Параметры.Дата  = "--";
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если Не ЭтоИсправление Тогда 
					ОбластьЗаголовок.Параметры.Номер = ДанныеДокумента.Номер;
					ОбластьЗаголовок.Параметры.Дата  = Формат(ДанныеДокумента.Дата, "ДЛФ=DD");	
				Иначе
					ОбластьЗаголовок.Параметры.Номер = ДанныеДокумента.НомерИсходногоДокумента;
					ОбластьЗаголовок.Параметры.Дата  = Формат(ДанныеДокумента.ДатаИсходногоДокумента, "ДЛФ=DD");
				КонецЕсли; 
				
				Если ДанныеДокумента.Свойство("НомерИсправления")
					И ЗначениеЗаполнено(ДанныеДокумента.НомерИсправления) Тогда

					ОбластьЗаголовок.Параметры.НомерИсправления = ДанныеДокумента.НомерИсправления;
					ОбластьЗаголовок.Параметры.ДатаИсправления  = Формат(ДанныеДокумента.ДатаИсправления, "ДЛФ=DD");
				Иначе

					ОбластьЗаголовок.Параметры.НомерИсправления = "--";
					ОбластьЗаголовок.Параметры.ДатаИсправления  = "--";
				КонецЕсли;				
			КонецЕсли;
			
			ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
			ДополнительныеПараметры.Вставить("ПодразделениеКомпании", ДанныеДокумента.ПодразделениеКомпании);
			ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
			ДополнительныеПараметры.ДляПечати = Истина;
			ДополнительныеПараметры.НаДату = ДанныеДокумента.Дата;
			
			ОбластьЗаголовок.Параметры.Валюта = 
					?(ЗначениеЗаполнено(ВалютаРегл.НаименованиеПолное), 
						ВалютаРегл.НаименованиеПолное,ВалютаРегл.Наименование)
					+ ", " + ВалютаРегл.Код;
			ОбластьЗаголовок.Параметры.Поставщик = ДанныеДокумента.Поставщик;
			ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Поставщик, Новый Структура("Наименование", " "), ДополнительныеПараметры);
			ОбластьЗаголовок.Параметры.АдресПоставщика = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Поставщик, Новый Структура("АдресЮридический"," "), ДополнительныеПараметры);
			ОбластьЗаголовок.Параметры.АдресПоставщика = 
				?(ЗначениеЗаполнено(ОбластьЗаголовок.Параметры.АдресПоставщика), ОбластьЗаголовок.Параметры.АдресПоставщика, "--");   
					
			Грузоотправитель = ДанныеДокумента.Грузоотправитель;
			ИННПоставщика = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
					ОбластьЗаголовок.Параметры.Поставщик, Новый Структура("ИНН"," "), ДополнительныеПараметры
			);
												
			Если ТипЗнч(Грузоотправитель) = Тип("СправочникСсылка.Контрагенты") Тогда
				
				КПППоставщика = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(
					ДанныеДокумента.Поставщик,
					ДанныеДокумента.Поставщик,
					ДанныеДокумента.Дата
				);
			Иначе 
				
				КПППоставщика = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(
					ДанныеДокумента.Поставщик,
					ДанныеДокумента.Грузоотправитель,
					ДанныеДокумента.Дата
				); 
			КонецЕсли; 
					
			ОбластьЗаголовок.Параметры.ИННПоставщика = 
				?(ЗначениеЗаполнено(ИННПоставщика), ИННПоставщика, "--")+ "/" + ?(ЗначениеЗаполнено(КПППоставщика), КПППоставщика, "--");
				
			Если Грузоотправитель = ДанныеДокумента.Поставщик Тогда 
			
				ОбластьЗаголовок.Параметры.ПредставлениеГрузоотправителя = НСтр("ru = 'он же'");  
			  
			Иначе		
				ОбластьЗаголовок.Параметры.ПредставлениеГрузоотправителя =
					УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(ОбластьЗаголовок.Параметры.Грузоотправитель,
						Новый Структура("Наименование,АдресФактический", " ", ""),Новый Структура("НаДату", ДанныеДокумента.Дата));
			КонецЕсли;
			
			ЕстьТовары = Ложь;
			Если КоличествоСтрок>0 Тогда
				Для Каждого СтрокаТоваров Из ВыборкаТабличнойЧасти Цикл
					ТипТовараВСтроке = ТипЗнч(СтрокаТоваров.Номенклатура);
					Если ТипТовараВСтроке = Тип("СправочникСсылка.Автомобили")
						ИЛИ (ТипТовараВСтроке = Тип("СправочникСсылка.Номенклатура")
							И СтрокаТоваров.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Услуга) Тогда
						ЕстьТовары = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если НЕ ЕстьТовары Тогда
					ОбластьЗаголовок.Параметры.ПредставлениеГрузоотправителя = "--";
					ОбластьЗаголовок.Параметры.ПредставлениеГрузополучателя = "--";
				КонецЕсли; 
			КонецЕсли;
			
			Если Статус = 1 И Не ТипЗнч(ДанныеДокумента.ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
				Если ЗначениеЗаполнено(ДанныеДокумента.ПлатежноРасчетныеДокументы) Тогда
					
					ПолучитьПлатежноРасчетныеДокументы(ОбластьЗаголовок, ДанныеДокумента.ПлатежноРасчетныеДокументы);
					
				Иначе
					
					ОбластьЗаголовок.Параметры.ПоДокументу = "--";
					
				КонецЕсли;
			КонецЕсли;
			
			Покупатель = ДанныеДокумента.Покупатель;
			
			Если ТипЗнч(Покупатель) = Тип("СправочникСсылка.Контрагенты") Тогда
				
				Грузополучатель = ДанныеДокумента.Грузополучатель;
				
				Если Покупатель.ФормаСобственности = Перечисления.ФормыСобственности.ОбособленноеПодразделение Тогда
					
					ОбластьЗаголовок.Параметры.Покупатель = Покупатель.ГоловнойКонтрагент;
					ИННПокупателя = ?(ЗначениеЗаполнено(Покупатель.ГоловнойКонтрагент.ИНН), Покупатель.ГоловнойКонтрагент.ИНН, "--");
					КПППокупателя = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(Покупатель, ДанныеДокумента.ПодразделениеКомпании, ДанныеДокумента.Дата);
					Грузополучатель = Покупатель;
					
				Иначе
					
					ОбластьЗаголовок.Параметры.Покупатель = Покупатель;
					ИННПокупателя = ?(ЗначениеЗаполнено(Покупатель.ИНН), Покупатель.ИНН, "--");
					
					Если ЗначениеЗаполнено(Грузополучатель) 
						И ТипЗнч(Грузополучатель) = Тип("СправочникСсылка.Контрагенты")
						И Грузополучатель.ФормаСобственности = Перечисления.ФормыСобственности.ОбособленноеПодразделение Тогда
						
						КПППокупателя = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(Грузополучатель, ДанныеДокумента.ПодразделениеКомпании, ДанныеДокумента.Дата);
						
					Иначе
						
						КПППокупателя = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(Покупатель, ДанныеДокумента.ПодразделениеКомпании, ДанныеДокумента.Дата);
						
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
				
				ОбластьЗаголовок.Параметры.Покупатель = Покупатель;
				ИННПокупателя = ?(ЗначениеЗаполнено(Покупатель.ИНН), Покупатель.ИНН, "--");
				КПППокупателя = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(Покупатель, ДанныеДокумента.ПодразделениеКомпании, ДанныеДокумента.Дата);
				Грузополучатель = ДанныеДокумента.Грузополучатель;
				
			КонецЕсли;
			
			ОбластьЗаголовок.Параметры.ПредставлениеПокупателя = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Покупатель, Новый Структура("Наименование", ""), ДополнительныеПараметры);
			ОбластьЗаголовок.Параметры.АдресПокупателя = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Покупатель, Новый Структура("АдресЮридический", ""), ДополнительныеПараметры);
			ОбластьЗаголовок.Параметры.АдресПокупателя = ?(ЗначениеЗаполнено(ОбластьЗаголовок.Параметры.АдресПокупателя),
				ОбластьЗаголовок.Параметры.АдресПокупателя, "--");
			
			ОбластьЗаголовок.Параметры.ИННПокупателя = ИННПокупателя + "/" + КПППокупателя ;
			
			Если ЕстьТовары Тогда
				Если ЗначениеЗаполнено(Грузополучатель) Тогда 
					ОбластьЗаголовок.Параметры.Грузополучатель = Грузополучатель; 
					
					Если ЕстьРеквизит(Документ, "АдресДоставки") И ЗначениеЗаполнено(Документ.АдресДоставки) Тогда 
					ОбластьЗаголовок.Параметры.ПредставлениеГрузополучателя = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
							ОбластьЗаголовок.Параметры.Грузополучатель, Новый Структура("Наименование", " ")) + ", " + Документ.АдресДоставки;

					Иначе
					ОбластьЗаголовок.Параметры.ПредставлениеГрузополучателя =
						УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(ОбластьЗаголовок.Параметры.Грузополучатель,
							Новый Структура("Наименование,АдресФактический", " ", ""), ДополнительныеПараметры
					);
					КонецЕсли;
				КонецЕсли;
			Иначе
				ОбластьЗаголовок.Параметры.ПредставлениеГрузополучателя = "--";
			КонецЕсли;
			
			// Если дата документа позднее 01.07.2017.
			Если ИспользоватьМакетДо2021 Тогда
				Если ВыводитьКодВидаТовара Тогда
					ОбластьЗаголовок.Параметры.Редакция = 
						НСтр("ru = '(в редакции постановления Правительства Российской Федерации от 19 августа 2017 № 981)'");
				ИначеЕсли ДанныеДокумента.Дата >= Дата('20170701') Тогда
					ОбластьЗаголовок.Параметры.Редакция = 
						НСтр("ru = '(в редакции постановления Правительства Российской Федерации от 25 мая 2017 г. № 625)'");
				КонецЕсли;
			Иначе
				Если НомерРедакции = 1096 Тогда 
					ОбластьЗаголовок.Параметры.Редакция =
						НСтр("ru = '(в редакции постановления Правительства Российской Федерации от 16 августа 2024 г. № 1096)'");
				Иначе 
					ОбластьЗаголовок.Параметры.Редакция =
						НСтр("ru = '(в редакции постановления Правительства Российской Федерации от 2 апреля 2021 г. № 534)'");
				КонецЕсли;
				Если ЕстьРеквизит(ДанныеДокумента,"ИдентификаторГосударственногоКонтракта") Тогда
					ОбластьЗаголовок.Параметры.ИдентификаторГосударственногоКонтракта =
						ДанныеДокумента.ИдентификаторГосударственногоКонтракта;
				КонецЕсли;
				Если ЕстьРеквизит(ДанныеДокумента, "ДокументОтгрузки") И ЗначениеЗаполнено(ДанныеДокумента.ДокументОтгрузки) Тогда
					Если Статус = 1 Тогда  
						
						НомерДокумента = ? (ЭтоИсправление, ДанныеДокумента.НомерИсходногоДокумента,ДанныеДокумента.Номер); 
						ДатаДокумента = ?(ЭтоИсправление,Формат(ДанныеДокумента.ДатаИсходногоДокумента,"ДЛФ=D"), Формат(ДанныеДокумента.Дата, "ДЛФ=D"));
					ИначеЕсли ТипЗнч(ДанныеДокумента.ДокументОтгрузки) = Тип("ДокументСсылка.ПоступлениеТоваров")
						ИЛИ ТипЗнч(ДанныеДокумента.ДокументОтгрузки) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
						ДанныеДокументаОтгрузки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеДокумента.ДокументОтгрузки, "ВхДокНомер,ВхДокДата");
						НомерДокумента = ДанныеДокументаОтгрузки.ВхДокНомер;
						ДатаДокумента = Формат(ДанныеДокументаОтгрузки.ВхДокДата, "ДЛФ=D");
					Иначе
						НомерДокумента = УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(ДанныеДокумента.ДокументОтгрузки);
						Если ТипЗнч(ДанныеДокумента.ДокументОтгрузки) = Тип("ДокументСсылка.ЗаказНаряд") Тогда
							ДанныеДокументаОтгрузки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеДокумента.ДокументОтгрузки, "ДатаЗакрытия,Дата");
							ДатаДокумента = Формат(
								?(ЗначениеЗаполнено(ДанныеДокументаОтгрузки.ДатаЗакрытия),
									ДанныеДокументаОтгрузки.ДатаЗакрытия, ДанныеДокументаОтгрузки.Дата), "ДЛФ=D");
						Иначе
							ДатаДокумента = Формат(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеДокумента.ДокументОтгрузки, "Дата"), "ДЛФ=D");
						КонецЕсли;
					КонецЕсли;

					НомераСтрок = "";
					НаименованиеДокумента = "";

					Если НомерРедакции = 1096 Тогда 

						ШаблонПодстрокиДокументаОбОтгрузке = "%1, № %2 от %3 г.";
						НаименованиеДокумента = Документы.СчетФактураВыданный.ПолучитьНаименованиеДокументаОтгрузки(Истина, ВыборкаТабличнойЧасти);

					Иначе

						ШаблонПодстрокиДокументаОбОтгрузке = "№ п/п %1 № %2 от %3 г.";
						Если КоличествоСтрок = 1  Тогда
							НомераСтрок = "1";
						Иначе 
							НомераСтрок = "1 - " + Строка(КоличествоСтрок);
						КонецЕсли;

					КонецЕсли;

					ОбластьЗаголовок.Параметры.ДокументыОбОтгрузке = СтрШаблон(ШаблонПодстрокиДокументаОбОтгрузке,
						?(НомерРедакции = 1096, НаименованиеДокумента, НомераСтрок),
						?(ЗначениеЗаполнено(НомерДокумента), НомерДокумента, "      "),
						?(ЗначениеЗаполнено(ДатаДокумента), ДатаДокумента, "      ")
					);
				КонецЕсли;
			КонецЕсли;
			
			// Выводим область.
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			
			// Если дата документа позднее 01.07.2017.
			Если ДанныеДокумента.Дата >= Дата('20170701') И ИспользоватьМакетДо2021 Тогда
				ОбластьШапкаИдГосКонтракта = Макет.ПолучитьОбласть("ШапкаИдГосКонтракта");
				ЗаголовокИдентификатораГосударственногоКонтракта = 
						НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения)'") 
						+ ?(ВыводитьКодВидаТовара, " (" + НСтр("ru = 'при наличии'") + ")", "") + ": ";
				
				ОбластьШапкаИдГосКонтракта.Параметры.ИдентификаторГосударственногоКонтракта = 
					ЗаголовокИдентификатораГосударственногоКонтракта + ДанныеДокумента.ИдентификаторГосударственногоКонтракта;
				ТабличныйДокумент.Вывести(ОбластьШапкаИдГосКонтракта);
			КонецЕсли;
			
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");

			Если ЕстьСтоимостьТовараПрослеживания Тогда 
				Если НомерРедакции = 1096 Тогда 
					ОбластьЗаголовокТаблицы.Параметры.ЗаголовокТаблицы14 = НСтр("ru = 'Стоимость товара, подлежащего прослежива-
					|емости, без налога на добавленную стоимость, в рублях'");
				Иначе 
					ОбластьЗаголовокТаблицы.Параметры.ЗаголовокТаблицы14 = НСтр("ru = 'Стоимость товара, подлежащего прослежива-
					|емости, без налога'");
				КонецЕсли;
			КонецЕсли;
			
			// Уберем колонку, вывод которой утвержден с 1 октября 2017 г.
			Если ИспользоватьМакетДо2021 Тогда
				ОбластьКодВидаТовара = Макет.Область("КодВидаТовара");
				Если НЕ ВыводитьКодВидаТовара Тогда
					
					НовыйТекст =
						ОбластьЗаголовокТаблицы.Область(3, ОбластьКодВидаТовара.Лево - 1, 4, ОбластьКодВидаТовара.Лево - 1).Текст;
					
					ОбластьВыреза = ОбластьЗаголовокТаблицы.Область(3, ОбластьКодВидаТовара.Лево - 1, 4, ОбластьКодВидаТовара.Право);
					ОбластьВыреза.Объединить();
					ОбластьВыреза.Текст = НовыйТекст;
					
					ОбластьВыреза = ОбластьЗаголовокТаблицы.Область(5, ОбластьКодВидаТовара.Лево - 1, 5, ОбластьКодВидаТовара.Право);
					ОбластьВыреза.Объединить();
					
					ОбластьЗаголовокТаблицы.Параметры.ТекстНомерТаможеннойДекларации = НСтр("ru = 'Номер таможенной декларации'");
					
				Иначе
					
					ОбластьЗаголовокТаблицы.Параметры.ТекстНомерТаможеннойДекларации = 
							НСтр("ru = 'Регистрацион- ный номер таможенной декларации'");
					
				КонецЕсли;
				
				ОбластьЗаголовокТаблицыНачало = Новый ТабличныйДокумент;
				ОбластьЗаголовокТаблицыНачало.Вывести(ОбластьЗаголовокТаблицы);
				Смещать = ТипСмещенияТабличногоДокумента.ПоВертикали;
				Область = ОбластьЗаголовокТаблицыНачало.Область("R2");
				ОбластьЗаголовокТаблицыНачало.УдалитьОбласть(Область, Смещать);
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицыНачало);
				
			Иначе
				
				ОбластьЗаголовокТаблицыНачало = Новый ТабличныйДокумент;
				ОбластьЗаголовокТаблицыНачало.Вывести(ОбластьЗаголовокТаблицы);
				Смещать = ТипСмещенияТабличногоДокумента.ПоВертикали;
				Область = ОбластьЗаголовокТаблицыНачало.Область("R1");
				ОбластьЗаголовокТаблицыНачало.УдалитьОбласть(Область, Смещать);
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицыНачало);
				
			КонецЕсли;
			
			НомерСтраницы = 2;
			НомерСтраницыПред = НомерСтраницы;
			
			// Заполним параметры шапки таблицы для следующего листа
			ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы  = "Лист" + " " + НомерСтраницы;
			Если ОбластьЗаголовок.Параметры.Номер <> "--" И ОбластьЗаголовок.Параметры.Дата <> "--" Тогда
				ОбластьЗаголовокТаблицы.Параметры.ТекстЗаголовка = НСтр("ru = 'Универсальный передаточный документ'") + " № "
					+ ОбластьЗаголовок.Параметры.Номер + " от " + ОбластьЗаголовок.Параметры.Дата;
			Иначе
				ОбластьЗаголовокТаблицы.Параметры.ТекстЗаголовка = НСтр("ru = 'Универсальный передаточный документ'") + " № " 
					+ ОбластьЗаголовок.Параметры.НомерИсправления + " от " + ОбластьЗаголовок.Параметры.ДатаИсправления;
			КонецЕсли;
			
			// Уберем колонку, вывод которой утвержден с 1 октября 2017 г.
			Если НЕ ВыводитьКодВидаТовара Тогда
				НовыйПараметр = ОбластьСтрока.Область(1, ОбластьКодВидаТовара.Лево - 1, 1, ОбластьКодВидаТовара.Лево - 1).Параметр;
				ОбластьВыреза = ОбластьСтрока.Область(1, ОбластьКодВидаТовара.Лево - 1, 1, ОбластьКодВидаТовара.Право);
				ОбластьВыреза.Объединить();
				ОбластьВыреза.Параметр = НовыйПараметр;
			КонецЕсли;
			
			ЕстьСтрокиСНДС = Ложь;
			ИтогоСтоимость = 0;
			ИтогоСуммаНДС = 0;
			ИтогоВсего = 0;
			
			СтруктураИтоговПоСтранице = Новый Структура("Сумма", 0);
			
			ОбластиДляПроверкиВывода = Неопределено;    
			
			ЕстьСебестоимость = Ложь;
			
			КоличествоСтрок = ВыборкаТабличнойЧасти.Количество();
			
			Если КоличествоСтрок > 0 Тогда
				
				ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
					Документ.ДоговорВзаиморасчетов,
					"ЕдиницаИзмеренияАвтоработВПечатныхФормах, ЕдиницаИзмеренияАвтоработВПечатныхФормах.Код"
				);

				Для Каждого ТекСтрока Из ВыборкаТабличнойЧасти Цикл
					
					ОбластьСтрока.Параметры.Заполнить(ТекСтрока);
					КоличествоТовара = ТекСтрока.Количество;
					
					ВывестиСтрануПроисхожденияВСтроку(ОбластьСтрока, ВыборкаТабличнойЧасти, ТекСтрока,
						?(ЕстьРНПТ, ДанныеДокумента.ТаблицаРНПТ, Неопределено));
						
					ОбластьСтрока.Параметры.ТоварКод = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(
						ТекСтрока.Номенклатура);  
						
					Если ВыводитьКодВидаТовара Тогда
						Если ВыводитьКодТНВЭД И ЕстьРеквизит(ТекСтрока.Номенклатура, "КодТНВЭД")
							И ЗначениеЗаполнено(ТекСтрока.Номенклатура.КодТНВЭД) Тогда
							ОбластьСтрока.Параметры.КодВидаТовара = СокрЛП(ТекСтрока.Номенклатура.КодТНВЭД);
						Иначе
							ОбластьСтрока.Параметры.КодВидаТовара = "--";
						КонецЕсли;
					КонецЕсли;
	
					Если ТипЗнч(ТекСтрока.Номенклатура) <> Тип("СправочникСсылка.Номенклатура") Тогда
						Если ЕстьРеквизит(ВыборкаТабличнойЧасти, "Коэффициент") Тогда
							КоличествоТовара = ТекСтрока.Количество * ТекСтрока.Коэффициент;
						КонецЕсли;
						ОбластьСтрока.Параметры.Количество = КоличествоТовара;
					КонецЕсли;  
					
					ЕстьСодержание = ЕстьРеквизит(ВыборкаТабличнойЧасти, "Содержание") И ЗначениеЗаполнено(ТекСтрока.Содержание);
					Если ЕстьРеквизит(ВыборкаТабличнойЧасти, "ТоварНаименование") Тогда
						Наименование = ТекСтрока.ТоварНаименование;
					ИначеЕсли ЕстьСодержание Тогда
						Наименование = ТекСтрока.Содержание;
					Иначе
						Наименование = ?(ЗначениеЗаполнено(ТекСтрока.Номенклатура.НаименованиеПолное),
								ТекСтрока.Номенклатура.НаименованиеПолное, ТекСтрока.Номенклатура.Наименование);
					КонецЕсли;
					Если ЕстьРеквизит(ВыборкаТабличнойЧасти, "ХарактеристикаНоменклатуры") И Не ЕстьСодержание Тогда
						Если ЗначениеЗаполнено(ТекСтрока.ХарактеристикаНоменклатуры) Тогда 
							Наименование = Наименование
								+ ", "
								+ УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ТекСтрока.ХарактеристикаНоменклатуры);
						КонецЕсли;
					КонецЕсли;
					Если Документ.Дата >= Дата(2016, 07, 01) И НЕ ВыводитьКодВидаТовара Тогда
						Если ЕстьРеквизит(ТекСтрока.Номенклатура, "КодТНВЭД") Тогда
							Если ТекСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС 
								И СокрЛП(ТекСтрока.Номенклатура.КодТНВЭД) <> "" Тогда
								
								Наименование = Наименование + ", " + НСтр("ru='код ТН ВЭД'") + " " + ТекСтрока.Номенклатура.КодТНВЭД;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					ОбластьСтрока.Параметры.ТоварНаименование = Наименование;
					
					Если ЕстьРеквизит(ТекСтрока.Номенклатура, "ВидНоменклатуры") 
						И ТекСтрока.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Услуга Тогда
						
						ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод  = ТекСтрока.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
						ОбластьСтрока.Параметры.ЕдиницаИзмерения     = ТекСтрока.ЕдиницаИзмерения;
						
					ИначеЕсли
						ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Автоработы")
						И ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормах <> Справочники.КлассификаторЕдиницИзмерения.прочерк
					Тогда
						
						ОбластьСтрока.Параметры.ЕдиницаИзмерения = ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормах;
						
						Если ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормах <>
							ПредопределенноеЗначение("Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка") Тогда
							
							ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормахКод;	
							
						Иначе
							
							ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = "--";
							
						КонецЕсли;
						
					ИначеЕсли ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Автомобили") Тогда
						
						ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = "796";
						ОбластьСтрока.Параметры.ЕдиницаИзмерения = "шт"
							   
					Иначе
						
						ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = "--";
						ОбластьСтрока.Параметры.ЕдиницаИзмерения = "--";
						
					КонецЕсли;
					
					Если ДанныеДокумента.Статус = 1 Тогда
						ОбластьСтрока.Параметры.Акциз = НСтр("ru = 'без акциза'");
					ИначеЕсли ДанныеДокумента.Статус = 2 Тогда
						ОбластьСтрока.Параметры.Акциз = НСтр("ru = '--'");
					КонецЕсли;
					ОбластьСтрока.Параметры.Всего =  ТекСтрока.СуммаВсего;
					Если ЕстьРеквизитСтавкаНДС И ТекСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС Тогда
						Если ДанныеДокумента.Статус = 1 Тогда
							ОбластьСтрока.Параметры.СтавкаНДС = НСтр("ru = 'без НДС'");
							ОбластьСтрока.Параметры.СуммаНДС = НСтр("ru = 'без НДС'");
						ИначеЕсли ДанныеДокумента.Статус = 2 Тогда
							ОбластьСтрока.Параметры.СтавкаНДС = НСтр("ru = '--'");
							ОбластьСтрока.Параметры.СуммаНДС = НСтр("ru = '--'");
						КонецЕсли;
					Иначе
						ОбластьСтрока.Параметры.СуммаНДС = ТекСтрока.СуммаНДС;
						ЕстьСтрокиСНДС = Истина;
		            КонецЕсли;
					
					ОбластьСтрока.Параметры.Стоимость 	= ТекСтрока.СуммаВсего - ТекСтрока.СуммаНДС;
					ОбластьСтрока.Параметры.Цена		= ТекСтрока.Цена;
					Если ВалютаРегл <> ДанныеДокумента.ВалютаДокумента 
						Или ЕстьРеквизит(Документ, "ТипЦен") И Документ.ТипЦен.ЦенаВключаетНДС Тогда
						ОбластьСтрока.Параметры.Цена = ?(КоличествоТовара = 0, 0,
							ОбластьСтрока.Параметры.Стоимость / КоличествоТовара);
					КонецЕсли;
					
					// Межценовая разница.
					Если ЕстьРеквизит(ВыборкаТабличнойЧасти, "Себестоимость") Тогда
						
						Себестоимость = ТекСтрока.Себестоимость;
						Если Себестоимость > 0 Тогда
							ОбластьСтрока.Параметры.ТоварНаименование = "Межценовая разница " + ОбластьСтрока.Параметры.ТоварНаименование;
							ОбластьСтрока.Параметры.Стоимость = ТекСтрока.СуммаВсего - Себестоимость;
							ТекстСтавкаНДС = СокрЛП(Строка(ТекСтрока.СтавкаНДС.Ставка));
							Если СтрНайти(ТекстСтавкаНДС, "/") = 0 Тогда
								ОбластьСтрока.Параметры.СтавкаНДС = ТекстСтавкаНДС + "/1" + ТекстСтавкаНДС;
							КонецЕсли;
							ЕстьСебестоимость = Истина;						
						КонецЕсли;
						
					КонецЕсли;
					ИтогоСтоимость = ОбластьСтрока.Параметры.Стоимость + ИтогоСтоимость;
					ИтогоСуммаНДС = ТекСтрока.СуммаНДС + ИтогоСуммаНДС;
					ИтогоВсего = ОбластьСтрока.Параметры.Всего + ИтогоВсего;		
									
					// При выводе последней строки будем проверять, что вмещается подвал.
					Если ВыборкаТабличнойЧасти[КоличествоСтрок - 1] = ТекСтрока Тогда
						
						ОбластиДляПроверкиВывода = Новый Массив;
						ОбластиДляПроверкиВывода.Добавить(ОбластьИтого);
						ОбластиДляПроверкиВывода.Добавить(ОбластьПодвал);
						ОбластиДляПроверкиВывода.Добавить(ОбластьПодвалНакладной);

					КонецЕсли;
					
					// Выводим строку, делая проверку попадания на лист.
					НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока,
						ОбластьЗаголовокТаблицы, , НомерСтраницы, , Документ, ОбластиДляПроверкиВывода);
					
					// Инициализация итогов по странице.
					Если НомерСтраницы <> НомерСтраницыПред Тогда
						НомерСтраницыПред = НомерСтраницы;
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Лист:" + " " + НомерСтраницы;
					КонецЕсли;
					
					
				КонецЦикла;
			КонецЕсли;
			
			Если ПерерасчетВВалюте Тогда 
				
				ИтогоВсего = ВыборкаТабличнойЧасти.Итог("СуммаВсего");
				
			Иначе
				
				ИтогоВсего = Документ.СуммаДокумента; 
				
			КонецЕсли;    
			
			ОбластьИтого.Параметры.ИтогоВсего  = ИтогоВсего;
			Если ЕстьСтрокиСНДС Тогда
				ОбластьИтого.Параметры.ИтогоСуммаНДС = ИтогоСуммаНДС;
			Иначе
				Если ДанныеДокумента.Статус = 1 Тогда
					ОбластьИтого.Параметры.ИтогоСуммаНДС = НСтр("ru = 'без НДС'"); 
				ИначеЕсли ДанныеДокумента.Статус = 2 Тогда
					ОбластьИтого.Параметры.ИтогоСуммаНДС = НСтр("ru = '--'");
				КонецЕсли;
			КонецЕсли;
			Если ЕстьСебестоимость Тогда
				ОбластьИтого.Параметры.ИтогоСтоимость = ИтогоСтоимость;
			Иначе
       			ОбластьИтого.Параметры.ИтогоСтоимость = ИтогоВсего -  ИтогоСуммаНДС;
			КонецЕсли;
			
     		ТабличныйДокумент.Вывести(ОбластьИтого);
			
			// Заполним информацию о руководителях организации.
			ЭтоИП = Документ.Организация.ФормаСобственности = Перечисления.ФормыСобственности.ИндивидуальныйПредприниматель;
			Если ЭтоИП Тогда
				ОбластьПодвал.Параметры.ФИОПБОЮЛ = ДанныеДокумента.Руководитель.Представление;
				ОбластьПодвал.Параметры.Свидетельство =
					Справочники.ПодтверждающиеДокументы.ПолучитьПодтверждающийДокументОбъектаПоВиду(ДанныеДокумента.Поставщик,
						Перечисления.ВидыДокументов.Свидетельство);   
						
			Иначе
				ОбластьПодвал.Параметры.ФИОРуководителя = ДанныеДокумента.Руководитель.Представление + 
					ПолучитьПредставлениеОснования(
				 		ПолучитьСтруктуруОснования(ДанныеДокумента.Руководитель, ДанныеДокумента.Дата, Документ.Организация)); 
					
				ОбластьПодвал.Параметры.ФИОГлавногоБухгалтера = ДанныеДокумента.ГлавныйБухгалтер.Представление +
			 		ПолучитьПредставлениеОснования(
						ПолучитьСтруктуруОснования(ДанныеДокумента.ГлавныйБухгалтер, ДанныеДокумента.Дата, Документ.Организация));

			КонецЕсли;
								
			ОбластьПодвал.Параметры.КоличествоЛистов = НСтр("ru = 'Документ 
			|составлен на'")
			+ Символы.ПС
				+СтрокаСЧислом(НСтр("ru = '; %1 листе;; %1 листах; %1 листах; %1 листах'"),
				ТабличныйДокумент.КоличествоСтраниц(),
				ВидЧисловогоЗначения.Количественное
			);
			
			Если ИспользоватьМакетДо2021 Тогда
				ОбластьПодвал.Параметры.ТекстИндивидуальныйПредприниматель = ?(ВыводитьКодВидаТовара,
					НСтр("ru = 'Индивидуальный предприниматель или иное уполномоченное лицо'"),
					НСтр("ru = 'Индивидуальный предприниматель'"));
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
			// Заполним Основание
			ОбластьПодвалНакладной.Параметры.Основание = ЗначениеОснованияОтгрузкиТоваров(ДанныеДокумента, Документ);
			
			ОбластьПодвалНакладной.Параметры.ФИОКладовщика = ДанныеДокумента.Отпустил.Представление + 
				ПолучитьПредставлениеОснования(
				 	ПолучитьСтруктуруОснования(ДанныеДокумента.Отпустил, ДанныеДокумента.Дата, Документ.Организация)); 
				
			ОбластьПодвалНакладной.Параметры.ДолжностьКладовщика = ДанныеДокумента.Отпустил.Должность;
			
			ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи = ДанныеДокумента.ДатаОтгрузки;
			
			Если НЕ ЗначениеЗаполнено(ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи) Тогда
				ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи = ДанныеДокумента.Дата;
			КонецЕсли;
			ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи = Формат(
				ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи, "ДЛФ=ДД");
			
			ОбластьПодвалНакладной.Параметры.ПредставлениеОрганизации = ОбластьЗаголовок.Параметры.ПредставлениеПоставщика 
					+ ", " + "ИНН/КПП" + " " + ОбластьЗаголовок.Параметры.ИННПоставщика;
					
			ОбластьПодвалНакладной.Параметры.ФИОГрузополучателя = ДанныеДокумента.Получил.Представление;
			ОбластьПодвалНакладной.Параметры.ДолжностьГрузополучателя =ДанныеДокумента.Получил.Должность;
			
			
			ОбластьПодвалНакладной.Параметры.ДолжностьМенеджера = ДанныеДокумента.Менеджер.МенеджерДолжность;
			ОбластьПодвалНакладной.Параметры.ФИОМенеджера       = ДанныеДокумента.Менеджер.МенеджерПредставление;
				
			ОбластьПодвалНакладной.Параметры.ПредставлениеКонтрагента = ОбластьЗаголовок.Параметры.ПредставлениеПокупателя
				+ ", " + "ИНН/КПП" + " " + ОбластьЗаголовок.Параметры.ИННПокупателя;
				
				
			ТабличныйДокумент.Вывести(ОбластьПодвалНакладной);
		
			// отметим конец области документа
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
			
			УправлениеПечатьюАльфаАвто.ДублирующиеФаксимиле(ТабличныйДокумент, ОбъектыПечати, Документ, Документ.Организация);
		КонецЕсли;
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УПДОбщая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	
	УстановитьПривилегированныйРежим(Ложь);
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ВывестиСтрануПроисхожденияВСтроку(ОбластьСтрока, ВыборкаТабличнойЧасти, ТекСтрока, ТаблицаРНПТ)

	Если Не ЕстьРеквизит(ВыборкаТабличнойЧасти, "ГТД") Или Не ЗначениеЗаполнено(ТекСтрока.ГТД) Тогда
		
		ОбластьСтрока.Параметры.ПредставлениеГТД	= "--";
		ОбластьСтрока.Параметры.ПредставлениеСтраны	= "--";
		ОбластьСтрока.Параметры.СтранаПроисхожденияКод = "--";
		
		Если ТаблицаРНПТ <> Неопределено Тогда
			
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослежКод = "--";
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослеж = "--";
			ОбластьСтрока.Параметры.КоличествоПрослеж = "--";
			Попытка
				ОбластьСтрока.Параметры.СтоимПрослеж = "--";
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
	Иначе
		
		СтранаИмпортер = ТекСтрока.ГТД.Страна;
		ЕстьВКлассификаторе = УправлениеКонтактнойИнформацией
		.ДанныеКлассификатораСтранМираПоКоду(СтранаИмпортер.Код) <> Неопределено;
		
		
		ОбластьСтрока.Параметры.ПредставлениеГТД = УправлениеПечатьюПлатформа
		.ПолучитьНаименованиеСправочника(ТекСтрока.ГТД);
		ОбластьСтрока.Параметры.ПредставлениеСтраны = СтранаИмпортер.Наименование;
		
		Если ЕстьВКлассификаторе Тогда
			
			ОбластьСтрока.Параметры.СтранаПроисхожденияКод = СтранаИмпортер.Код;
			
		Иначе
			
			ОбластьСтрока.Параметры.СтранаПроисхожденияКод = "--";
			
		КонецЕсли;
		
		// Заполним РНПТ
		Если ТаблицаРНПТ <> Неопределено Тогда
			
			ДанныеПоиска = "Номенклатура,ХарактеристикаНоменклатуры,ГТД";
			Если ЕстьРеквизит(ТекСтрока, "Партия") И ЗначениеЗаполнено(ТекСтрока.Партия) Тогда
				ДанныеПоиска = ДанныеПоиска + ",Партия";
			КонецЕсли;
			СтруктураПоиска = Новый Структура(ДанныеПоиска);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекСтрока);
			Если СтруктураПоиска.ХарактеристикаНоменклатуры = Неопределено Тогда
				СтруктураПоиска.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
			КонецЕсли;
			НайденныеРНПТ = ТаблицаРНПТ.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныеРНПТ.Количество() > 0 Тогда
				
				КоличествоТовара = 0;
				
				Для Каждого ТекущаяСтрока Из НайденныеРНПТ Цикл
					
					КоличествоТовара = ТекущаяСтрока.Количество + КоличествоТовара;
					
				КонецЦикла;
				
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослежКод = НайденныеРНПТ[0].КодЕдиницыПрослеживаемости;
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослеж = НайденныеРНПТ[0].ЕдиницаПрослеживаемости;
				ОбластьСтрока.Параметры.КоличествоПрослеж =
					КоличествоТовара * ?(КоличествоТовара < 0, -1, 1);

				Попытка
					ОбластьСтрока.Параметры.СтоимПрослеж = ТекСтрока.СуммаВсего - ТекСтрока.СуммаНДС;
				Исключение
				КонецПопытки;
					
			Иначе
				
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослежКод = "--";
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослеж = "--";
				ОбластьСтрока.Параметры.КоличествоПрослеж = "--";
				Попытка
					ОбластьСтрока.Параметры.СтоимПрослеж = "--";
				Исключение
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПолучитьПлатежноРасчетныеДокументы(ОбластьЗаголовок, ПлатежноРасчетныеДокументы)
	
	МассивДокументов = Новый Массив;
	ШаблонСтроки = НСтр("ru = '%1 от %2'");
	
	СокращенныйНомер = НЕ Константы.ПолныйНомерДокументаВПечатныхФормах.Получить();
	
	Для Каждого Строка Из ПлатежноРасчетныеДокументы Цикл
		Номер = СокрЛП(Строка.Номер);

		Если СокращенныйНомер Тогда
			ПреффиксДокумента = ""; 
			Номер = СтрЗаменить(Номер, Символы.НПП, " ");	
			Если  СтрНайти(Номер, "Платежное поручение")> 0 Тогда 
				Пробел= СтрНайти (Номер, " ",,,2);
			Иначе
				Пробел =  СтрНайти(Номер, " ");
			КонецЕсли;
			 
			Если Пробел > 0 Тогда
				ПреффиксДокумента = Лев(Номер, Пробел);
				Номер = ПреффиксДокумента + ПрефиксацияОбъектов.ПолучитьНомерНаПечать(Прав(Номер, Пробел),Истина,Истина,Истина);
			Иначе
				Номер = ПрефиксацияОбъектов.ПолучитьНомерНаПечать(Номер,Истина,Истина,Истина);
			КонецЕсли;
		КонецЕсли;

		МассивДокументов.Добавить(СтрШаблон(ШаблонСтроки, Номер, Формат(Строка.Дата, "ДЛФ=D")));
	КонецЦикла;
	
	ОбластьЗаголовок.Параметры.ПоДокументу = СтрСоединить(МассивДокументов, "; ");
	
КонецПроцедуры

Функция ПолучитьСтруктуруОснования(ВладелецОснования,ДатаДокумента, ОрганизацияДокумента) 
		
   Основание = Новый Структура();  
	
	Если  ЗначениеЗаполнено(ВладелецОснования.Основание) Тогда
				
		ДокументОснование = ВладелецОснования.Основание;
		
		Если ДокументОснование.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Доверенность ИЛИ 
			ДокументОснование.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Приказ Тогда
					
			Если ДокументОснование.ДатаВыдачи <= ДатаДокумента  И ДокументОснование.Организация = ОрганизацияДокумента Тогда
						
				Основание.Вставить("ВидДокумента", ДокументОснование.ВидПодтверждающегоДокумента);
				Основание.Вставить("Серия", ДокументОснование.Серия);
				Основание.Вставить("Номер", ДокументОснование.Номер);
				Основание.Вставить("Дата", Формат(ДокументОснование.ДатаВыдачи,"ДФ=dd.MM.yyyy; ДЛФ=D" )); 
				Если ВладелецОснования.Свойство("Принял") ИЛИ ВладелецОснования.Свойство("Получил") Тогда 
					Основание.Вставить("КемВыдан", ДокументОснование.Контрагент); 
				Иначе 
				    Основание.Вставить("КемВыдан", ДокументОснование.Организация);
				КонецЕсли;
				Основание.Вставить("ВладелецОснования", ВладелецОснования.Представление);
			КонецЕсли;          
					
		КонецЕсли;	
		
	КонецЕсли;	
	
	Возврат Основание; 

КонецФункции 

Функция ПолучитьПредставлениеОснования(Основание)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(Основание) Тогда
		
		Представление = Строка(Основание.ВидДокумента)
			+ " " + Основание.Серия
			+ " № " + Основание.Номер 
			+ " от " + Формат(Основание.Дата,"ДФ=dd.MM.yyyy; ДЛФ=D" ); 			
	КонецЕсли; 
	
	Возврат Представление; 
	
КонецФункции

Функция ЗначениеОснованияОтгрузкиТоваров(ДанныеДокумента, Документ)

	ОснованиеОтгрузкиТоваров = "";
	ЗначениеНезаполненногоОснования = НСтр("ru = 'Без документа-основания'");
	
	ДоговорВзаиморасчетов = ДанныеДокумента.ДоговорВзаиморасчетов;
	
	Если ЗначениеЗаполнено(ДоговорВзаиморасчетов)
		И ТипЗнч(ДоговорВзаиморасчетов) = Тип("СправочникСсылка.ДоговорыВзаиморасчетов") Тогда
		
		ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДоговорВзаиморасчетов, "ДатаНачала, НомерДоговора, Наименование");
		
		Если ЗначениеЗаполнено(ДанныеДоговора.НомерДоговора) И ЗначениеЗаполнено(ДанныеДоговора.ДатаНачала) Тогда
			
			ОснованиеОтгрузкиТоваров = ДанныеДоговора.Наименование;			

		КонецЕсли;		
	КонецЕсли;
	
	// Добавим данные ответственного лица
	Если ЗначениеЗаполнено(ОснованиеОтгрузкиТоваров) Тогда
	
		ДанныеОтветственногоЛицаСтрока = ПолучитьПредставлениеОснования(
			ПолучитьСтруктуруОснования(ДанныеДокумента.Получил, ДанныеДокумента.Дата, Документ.Организация));
			
		Если ЗначениеЗаполнено(ДанныеОтветственногоЛицаСтрока) Тогда
		
			ОснованиеОтгрузкиТоваров = ОснованиеОтгрузкиТоваров + ", " + ДанныеОтветственногоЛицаСтрока
		
		КонецЕсли;
	
	Иначе
		
		ОснованиеОтгрузкиТоваров = ЗначениеНезаполненногоОснования;
		
	КонецЕсли;
	
	Возврат ОснованиеОтгрузкиТоваров;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли