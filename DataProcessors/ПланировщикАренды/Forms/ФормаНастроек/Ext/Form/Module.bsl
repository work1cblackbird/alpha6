///////////////////////////////////////////////////////////////////////////////
// Модуль формы обработки "Календарь пользователя"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВремяОтображенияС                   = Параметры.ВремяОтображенияС;
	ВремяОтображенияПо                  = Параметры.ВремяОтображенияПо;
	ТолькоРабочиеЧасы                   = Параметры.ТолькоРабочиеЧасы;
	АвтоОбновление                      = Параметры.АвтоОбновление;
	ШиринаСтрокиИзмерения               = Параметры.ШиринаСтрокиИзмерения;
	ШаблонПредставленияИнтервалаОбъекта = Параметры.ШаблонПредставленияИнтервалаОбъекта;
	ШаблонПредставленияАвтомобиля       = Параметры.ШаблонПредставленияАвтомобиля;
	
	// Установим доступность
	Элементы.ГруппаВременнойИнтервал.ТолькоПросмотр = ТолькоРабочиеЧасы;
	
	// Сформируем список возможных интервалов
	Для Номер = 0 По 24 Цикл
		Элементы.ВремяОтображенияС. СписокВыбора.Добавить(Номер);
		Элементы.ВремяОтображенияПо.СписокВыбора.Добавить(Номер);
	КонецЦикла;
	
КонецПроцедуры // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте перед закрытием формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	УправлениеДиалогомКлиент.ПроверитьМодифицированностьДанныхПриЗакрытии(
		ЭтотОбъект, Отказ, Новый ОписаниеОповещения("Подключаемый_ПередЗакрытием", ЭтотОбъект));
	
КонецПроцедуры // ПередЗакрытием()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события возникающего на клиенте при изменении данных реквизита "Только рабочие часы".
//
// Параметры:
//  Элемент - ПолеФормы - Элемент управления, в котором возникло данное событие.
//
&НаКлиенте
Процедура ТолькоРабочиеЧасыПриИзменении(Элемент)
	
	Элементы.ГруппаВременнойИнтервал.ТолькоПросмотр = ТолькоРабочиеЧасы;
	
	ВремяОтображенияС  = 0;
	ВремяОтображенияПо = 24;
	
КонецПроцедуры // ТолькоРабочиеЧасыПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	Если Модифицированность Тогда
		Модифицированность = Ложь;
		ПараметрыЗакрытия = Новый Структура;
		ПараметрыЗакрытия.Вставить("Объект",                              Объект);
		ПараметрыЗакрытия.Вставить("ВремяОтображенияПо",                  ВремяОтображенияПо);
		ПараметрыЗакрытия.Вставить("ВремяОтображенияС",                   ВремяОтображенияС);
		ПараметрыЗакрытия.Вставить("ТолькоРабочиеЧасы",                   ТолькоРабочиеЧасы);
		ПараметрыЗакрытия.Вставить("АвтоОбновление",                      АвтоОбновление);
		ПараметрыЗакрытия.Вставить("ШиринаСтрокиИзмерения",               ШиринаСтрокиИзмерения);
		ПараметрыЗакрытия.Вставить("ШаблонПредставленияИнтервалаОбъекта", ШаблонПредставленияИнтервалаОбъекта);
		ПараметрыЗакрытия.Вставить("ШаблонПредставленияАвтомобиля",       ШаблонПредставленияАвтомобиля);
		Закрыть(ПараметрыЗакрытия);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры // Применить()

&НаКлиенте
Процедура ВосстановитьЗначениеПоУмолчанию(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаШаблонИнтервала Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("Подключаемый_ШаблонПредставленияИнтервалаОбъекта", ЭтотОбъект, "Интервал"),
			НСтр("ru = 'Установить шаблон представления интервала по умолчанию?'"),
			РежимДиалогаВопрос.ДаНет);
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаШаблонАвтомобиля Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("Подключаемый_ШаблонПредставленияИнтервалаОбъекта", ЭтотОбъект, "Автомобиль"),
			НСтр("ru = 'Установить шаблон представления автомобиля по умолчанию?'"),
			РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик события возникающего при выполнении оповещения данной формы о прекращении работы подчиненной.
//
// Параметры:
//  РезультатОповещения     - Произвольный - Результат выполнения операции в подчиненной форме.
//  ДополнительныеПараметры - Структура - Содержит процедуру в которую будет передан ответ на вопрос и формы из которой
//                                        вызвано оповещение.
//
&НаКлиенте
Процедура Подключаемый_ПередЗакрытием(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	// Сохраняем настройки.
	Применить(Неопределено);
	
КонецПроцедуры // Подключаемый_ПередЗакрытием()

&НаКлиенте
Процедура Подключаемый_ШаблонПредставленияИнтервалаОбъекта(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да И ДополнительныеПараметры = "Интервал" Тогда
		Модифицированность = Истина;
		ШаблонПредставленияИнтервалаОбъекта =
			НСтр("ru = '{{.Документ.ХозОперация}} {{.Документ.Номер}} от {{.Документ.Дата}}
			|Контрагент: {{.Документ.Контрагент}}
			|Телефон: {{.Документ.ПредставлениеТелефона}}
			|Заказчик: {{.Документ.Заказчик}}
			|Вид: {{.Документ.ВидРемонтаИлиАренды}}'");
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да И ДополнительныеПараметры = "Автомобиль" Тогда
		Модифицированность = Истина;
		ШаблонПредставленияАвтомобиля = 
			НСтр("ru = 'Модель: {{.Автомобиль.Модель}}
			|Г/н: {{.ГосНомер}}
			|Цвет: {{.Автомобиль.Цвет}}'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
