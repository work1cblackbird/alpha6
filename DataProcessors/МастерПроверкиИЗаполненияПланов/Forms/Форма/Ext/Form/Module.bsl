// Модуль формы обработки

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// удФормаПриОткрытии(ЭтаФорма);
	// заполним начальные данные
	Если Не ЗначениеЗаполнено(Объект.Подразделение) Тогда
		Объект.Подразделение = ПредопределенноеЗначение("Справочник.ПодразделенияКомпании.ОсновноеПодразделение");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Периодичность) Тогда
		Объект.Периодичность = "Месяц";
	КонецЕсли;
	
	ДатаНачала = ТекущаяДата();
	ПлюсПериод(ЭтаФорма.Элементы.ПлюсПериод);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ((ИмяСобытия = "ДокументПлан") ИЛИ (ИмяСобытия = "ДокументФакт")) Тогда
		НомерДокумента 	= Сред(Параметр,1,10);
		ДатаДокумента 	= Дата(Сред(Параметр,11));
		
		Если ИмяСобытия = "ДокументПлан" Тогда
			Для ПеременнаяЦикла = 0 По Объект.ЗаполнениеПланов.Количество() - 1 Цикл
				СтрокаДокумента = Объект.ЗаполнениеПланов.Получить(ПеременнаяЦикла);
				Если ((СтрокаДокумента.ДокументПлана.Дата = ДатаДокумента) И (СтрокаДокумента.ДокументПлана.Номер = НомерДокумента)) Тогда
					СтрокаДокумента.Светофор = 21;
					ВидимостьКнопкиДокумент("План");
				КонецЕсли;
			КонецЦикла;
		Иначе
			Для ПеременнаяЦикла = 0 По Объект.ЗаполнениеФактов.Количество()-1 Цикл
				СтрокаДокумента = Объект.ЗаполнениеФактов.Получить(ПеременнаяЦикла);
				Если ((СтрокаДокумента.ДокументФакта.Дата = ДатаДокумента) И (СтрокаДокумента.ДокументФакта.Номер = НомерДокумента)) Тогда
					СтрокаДокумента.Светофор = 21;
					ВидимостьКнопкиДокумент("Факт");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура МинусПериод(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Периодичность) Тогда
		Объект.ДатаНачала 	= Неопределено;
		Объект.ДатаКонца 	= Неопределено;
	Иначе
		Если Объект.Периодичность 		= "День" Тогда
			Объект.ДатаНачала 	= НачалоДня(Объект.ДатаНачала-(60*60*24*1));
			Объект.ДатаКонца 	= КонецДня(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Неделя" Тогда
			Объект.ДатаНачала	= НачалоНедели(Объект.ДатаНачала-(60*60*24*7));
			Объект.ДатаКонца	= КонецНедели(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Месяц" Тогда
			Объект.ДатаНачала	= НачалоМесяца(ДобавитьМесяц(Объект.ДатаНачала,-1));
			Объект.ДатаКонца	= КонецМесяца(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Квартал" Тогда
			Объект.ДатаНачала	= НачалоКвартала(ДобавитьМесяц(Объект.ДатаНачала,-3));
			Объект.ДатаКонца	= КонецКвартала(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Год" Тогда
			Объект.ДатаНачала	= НачалоГода(ДобавитьМесяц(Объект.ДатаНачала,-12));
			Объект.ДатаКонца	= КонецГода(Объект.ДатаНачала);
		Иначе
			Объект.ДатаНачала	= Неопределено;
			Объект.ДатаКонца	= Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПлюсПериод(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Периодичность) Тогда
		Объект.ДатаНачала 	= Неопределено;
		Объект.ДатаКонца 	= Неопределено;
	Иначе
		Если Объект.Периодичность 		= "День" Тогда
			Объект.ДатаНачала 	= НачалоДня(Объект.ДатаНачала+(60*60*24*1));
			Объект.ДатаКонца 	= КонецДня(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Неделя" Тогда
			Объект.ДатаНачала	= НачалоНедели(Объект.ДатаНачала+(60*60*24*7));
			Объект.ДатаКонца	= КонецНедели(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Месяц" Тогда
			Объект.ДатаНачала	= НачалоМесяца(ДобавитьМесяц(Объект.ДатаНачала,1));
			Объект.ДатаКонца	= КонецМесяца(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Квартал" Тогда
			Объект.ДатаНачала	= НачалоКвартала(ДобавитьМесяц(Объект.ДатаНачала,3));
			Объект.ДатаКонца	= КонецКвартала(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Год" Тогда
			Объект.ДатаНачала	= НачалоГода(ДобавитьМесяц(Объект.ДатаНачала,12));
			Объект.ДатаКонца	= КонецГода(Объект.ДатаНачала);
		Иначе
			Объект.ДатаНачала	= Неопределено;
			Объект.ДатаКонца	= Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Периодичность) Тогда
		Объект.ДатаНачала 	= Неопределено;
		Объект.ДатаКонца 	= Неопределено;
	Иначе
		Если Объект.Периодичность 		= "День" Тогда
			Объект.ДатаНачала 	= НачалоДня(ТекущаяДата()+(60*60*24*1));
			Объект.ДатаКонца 	= КонецДня(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность 	= "Неделя" Тогда
			Объект.ДатаНачала	= НачалоНедели(ТекущаяДата()+(60*60*24*7));
			Объект.ДатаКонца	= КонецНедели(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность 	= "Месяц" Тогда
			Объект.ДатаНачала	= НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),1));
			Объект.ДатаКонца	= КонецМесяца(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Квартал" Тогда
			Объект.ДатаНачала	= НачалоКвартала(ДобавитьМесяц(ТекущаяДата(),3));
			Объект.ДатаКонца	= КонецКвартала(Объект.ДатаНачала);
		ИначеЕсли Объект.Периодичность	= "Год" Тогда
			Объект.ДатаНачала	= НачалоГода(ДобавитьМесяц(ТекущаяДата(),12));
			Объект.ДатаКонца	= КонецГода(Объект.ДатаНачала);
		Иначе
			Объект.ДатаНачала	= Неопределено;
			Объект.ДатаКонца	= Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	Для Каждого СтрокаВидаПлана Из Объект.ВидыПланов Цикл
		СтрокаВидаПлана.Светофор = УстановкаСветофоровВидаПланов(СтрокаВидаПлана.ВидПлана);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ПроверкаИзмененияДаты();
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонцаПриИзменении(Элемент)
	ПроверкаИзмененияДаты();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверкаИзмененияДаты()
	
	Если ((Объект.Периодичность = "День") И (НачалоДня(Объект.ДатаНачала) <> НачалоДня(Объект.ДатаКонца))) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Дата начала и дата конца должны находиться в одном дне.'"));
		ПериодичностьПриИзменении(25);
	КонецЕсли;
	
	Если ((Объект.Периодичность = "Неделя") И (НачалоНедели(Объект.ДатаНачала) <> НачалоНедели(Объект.ДатаКонца))) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Дата начала и дата конца должны находиться в одной недели.'"));
		ПериодичностьПриИзменении(25);
	КонецЕсли;
	
	Если ((Объект.Периодичность = "Месяц") И (НачалоМесяца(Объект.ДатаНачала) <> НачалоМесяца(Объект.ДатаКонца))) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Дата начала и дата конца должны находиться в одном месяце.'"));
   		ПериодичностьПриИзменении(25);
	КонецЕсли;
	
	Если ((Объект.Периодичность = "Квартал") И (НачалоКвартала(Объект.ДатаНачала)<>НачалоКвартала(Объект.ДатаКонца))) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Дата начала и дата конца должны находиться в одном квартале.'"));
		ПериодичностьПриИзменении(25);
	КонецЕсли;
	
	Если ((Объект.Периодичность = "Год") И (НачалоГода(Объект.ДатаНачала) <> НачалоГода(Объект.ДатаКонца))) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Дата начала и дата конца должны находиться в одном году.'"));
		ПериодичностьПриИзменении(25);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьКнопкиДокумент(ВидДокумента)
	
	Если ВидДокумента = "Плана" Тогда
		Если Объект.ЗаполнениеПланов.Количество() = 0 Тогда
			Элементы.ЗаполнениеПлановОткрытьДокументПлан.Доступность = Ложь;
		Иначе
			БлокироватьКнопку = Истина;
			Для Каждого СтрокаПлана Из Объект.ЗаполнениеПланов Цикл
				Если СтрокаПлана.Светофор <> 21 Тогда
					БлокироватьКнопку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Элементы.ЗаполнениеПлановОткрытьДокументПлан.Доступность = Не БлокироватьКнопку;
		КонецЕсли;
	Иначе
		Если Объект.ЗаполнениеФактов.Количество() = 0 Тогда
			Элементы.ЗаполнениеФактовОткрытьДокументФакт.Доступность = Ложь;
			Возврат;
		Иначе
			БлокироватьКнопку = Истина;
			Для Каждого СтрокаПлана Из Объект.ЗаполнениеФактов Цикл
				Если СтрокаПлана.Светофор <> 21 Тогда
					БлокироватьКнопку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Элементы.ЗаполнениеФактовОткрытьДокументФакт.Доступность = Не БлокироватьКнопку;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры	

&НаКлиенте
Процедура АвтоформированиеПланов(Кнопка)
	
	ОбработчикОповещения = Новый ОписаниеОповещения("РезультатОтветаНаВопрос", ЭтотОбъект, Новый Структура("ПланФакт", "Плана")); 
	
	Если Объект.ЗаполнениеПланов.Количество() <> 0 Тогда
		ПоказатьВопрос(ОбработчикОповещения, "Очистить табличную часть планов?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ОбработкаВидовПланов("Плана");
		ВидимостьКнопкиДокумент("Плана");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоформированиеФактов(Кнопка)
	
	ОбработчикОповещения = Новый ОписаниеОповещения("РезультатОтветаНаВопрос", ЭтотОбъект, Новый Структура("ПланФакт", "Факта")); 
	
	Если Объект.ЗаполнениеФактов.Количество() <> 0 Тогда
		ПоказатьВопрос(ОбработчикОповещения, "Очистить табличную часть фактов?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ОбработкаВидовПланов("Факта");
		ВидимостьКнопкиДокумент("Факта");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыПлановЗаполнить(Команда)
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОбработкаОтветаНаВопрос", ЭтотОбъект); 
	
	Если Объект.ВидыПланов.Количество() <> 0 Тогда
		ПоказатьВопрос(ОбработчикОповещения, "Очистить табличную часть виды планов?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьВидыПланов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопрос(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ВидыПланов.Очистить();
		ЗаполнитьВидыПланов();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументПлан(Команда)
	
	ОткрытьДокумент("План");
	ВидимостьКнопкиДокумент("Плана");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументФакт(Команда)
	
	ОткрытьДокумент("Факт");
	ВидимостьКнопкиДокумент("Факт");
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыПлановВидПланаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ВидыПланов.ТекущиеДанные;
	ТекущиеДанные.Светофор = УстановкаСветофоровВидаПланов(ТекущиеДанные.ВидПлана);
	
КонецПроцедуры

&НаСервере
Процедура ОткрытьДокумент(ВидДокумента)	 
	
	Если ВидДокумента = "План" Тогда
		Для ПеременнаяЦикла = 0 По Объект.ЗаполнениеПланов.Количество() - 1 Цикл
			СтрокаДокумента = Объект.ЗаполнениеПланов.Получить(ПеременнаяЦикла);
			Если Не ЗначениеЗаполнено(СтрокаДокумента.ДокументПлана) Тогда
				СтрокаДокумента.Светофор 				= 20;
				ДокументПланФакт 						= Документы.ПланФакт;
				ДокументПланФакт 						= ДокументПланФакт.СоздатьДокумент();
				ДокументПланФакт.Автор 					= Пользователи.АвторизованныйПользователь();
				ДокументПланФакт.Дата 					= Объект.ДатаНачала;
				ДокументПланФакт.Организация 			= Объект.Подразделение.Организация;
				ДокументПланФакт.ПодразделениеКомпании 	= Объект.Подразделение;
				ДокументПланФакт.ХозОперация 			= Справочники.ХозОперации.План;
				ДокументПланФакт.ВидПлана 				= СтрокаДокумента.ВидПлана;
				
				Если ЗначениеЗаполнено(СтрокаДокумента.ВидПлана.ВидОбъектаПланирования) Тогда 
					ТипОбъектаПланирования				= СтрокаДокумента.ВидПлана.ВидОбъектаПланирования.ТипЗначения.Типы()[0];
					ДокументПланФакт.ОбъектПланирования = Новый(ТипОбъектаПланирования);
				КонецЕсли;
				
				ДокументПланФакт.ДатаНачала 			= Объект.ДатаНачала;
				ДокументПланФакт.ДатаКонца 				= Объект.ДатаКонца;
				ДокументПланФакт.Записать(РежимЗаписиДокумента.Запись);
				СтрокаДокумента.ДокументПлана 			= ДокументПланФакт.Ссылка;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для ПеременнаяЦикла = 0 По Объект.ЗаполнениеФактов.Количество() - 1 Цикл
			СтрокаДокумента = Объект.ЗаполнениеФактов.Получить(ПеременнаяЦикла);
			Если Не ЗначениеЗаполнено(СтрокаДокумента.ДокументФакта) Тогда
				СтрокаДокумента.Светофор 				= 20;
				ДокументПланФакт 						= Документы.ПланФакт;
				ДокументПланФакт 						= ДокументПланФакт.СоздатьДокумент();
				ДокументПланФакт.Автор 					= Пользователи.АвторизованныйПользователь();
				ДокументПланФакт.Дата 					= Объект.ДатаНачала;
				ДокументПланФакт.Организация 			= Объект.Подразделение.Организация;
				ДокументПланФакт.ПодразделениеКомпании 	= Объект.Подразделение;
				ДокументПланФакт.ХозОперация 			= Справочники.ХозОперации.Факт;
				ДокументПланФакт.ВидПлана 				= СтрокаДокумента.ВидПлана;
				
				Если ЗначениеЗаполнено(СтрокаДокумента.ВидПлана.ВидОбъектаПланирования) Тогда 
					ТипОбъектаПланирования				= СтрокаДокумента.ВидПлана.ВидОбъектаПланирования.ТипЗначения.Типы()[0];
					ДокументПланФакт.ОбъектПланирования = Новый(ТипОбъектаПланирования);
				КонецЕсли;
				
				ДокументПланФакт.ДатаНачала 			= Объект.ДатаНачала;
				ДокументПланФакт.ДатаКонца 				= Объект.ДатаКонца;
				ДокументПланФакт.Записать(РежимЗаписиДокумента.Запись);
				СтрокаДокумента.ДокументФакта 			= ДокументПланФакт.Ссылка;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливаются светофоры видов планов
&НаСервере
Функция УстановкаСветофоровВидаПланов(СтрокаПлана) 
	
	Если Не ЗначениеЗаполнено(СтрокаПлана) Тогда
		Возврат 0;
	КонецЕсли;
	
	НайденноеПодразделение = СтрокаПлана.Подразделения.Выгрузить().Найти(Объект.Подразделение);
	Если НайденноеПодразделение = Неопределено Тогда
		// Нет плана, нет факта    
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Вид плана ""%1"" не рассчитан на работу с подразделением ""%2"".'"), СтрокаПлана, Объект.Подразделение));
		Возврат 1;
	КонецЕсли;
	
	Если ((Объект.ДатаНачала + (60*60*24 * НайденноеПодразделение.ОтсрочкаПлана) > Объект.ДатаКонца) 
		Или (Объект.ДатаНачала+(60*60*24 * НайденноеПодразделение.ОтсрочкаФакта) > Объект.ДатаКонца)) Тогда
		// Отсрочка плана или факта
		Возврат 3;
	КонецЕсли;
	
	ЗаполняетсяЧастично = Истина;
	Если СтрокаПлана.ОтчетыИОбработки.Выгрузить().Найти(Истина, "ФлагЗаполненияПлана") <> Неопределено Тогда
		Если СтрокаПлана.ОтчетыИОбработки.Выгрузить().Найти(Истина, "ФлагЗаполненияФакта") <> Неопределено Тогда
			ЗаполняетсяЧастично = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗаполняетсяЧастично = Истина Тогда
		// Заполняется или план или факт
		Возврат 3;
	КонецЕсли;
	// Всё есть и план и факт
	Возврат 2;
	
КонецФункции

&НаСервере
Процедура НайтиСоздатьДокумент(ДатаНачала, ДатаКонца, Название, СтрокаВидаПлана)

	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	План.Ссылка КАК ДокументПлан,
		|	План.Проведен КАК ДокументПроведён
		|ИЗ
		|	Документ.ПланФакт КАК План
		|ГДЕ
		|	План.ПодразделениеКомпании = &ПодразделениеКомпании
		|	И План.ДатаНачала = &ДатаНачала
		|	И План.ДатаКонца = &ДатаКонца
		|	И План.ВидПлана = &ВидПлана
		|	И План.ХозОперация = &ХозОперация
		|	И План.ПометкаУдаления = ЛОЖЬ");
	
	Запрос.УстановитьПараметр("ПодразделениеКомпании",	Объект.Подразделение);
	Запрос.УстановитьПараметр("ДатаНачала",				Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца",				Объект.ДатаКонца);
	Запрос.УстановитьПараметр("ВидПлана",				СтрокаВидаПлана.ВидПлана);
	
	Если Название = "Плана" Тогда
		Запрос.УстановитьПараметр("ХозОперация", Справочники.ХозОперации.План);
	Иначе
		Запрос.УстановитьПараметр("ХозОперация", Справочники.ХозОперации.Факт);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Если Название = "Плана" Тогда
			СтрокаЗаполнениеПланов = Объект.ЗаполнениеПланов.Добавить();
		Иначе
			СтрокаЗаполнениеПланов = Объект.ЗаполнениеФактов.Добавить();
		КонецЕсли;
		СтрокаЗаполнениеПланов.ВидПлана 			= СтрокаВидаПлана.ВидПлана;;
		СтрокаЗаполнениеПланов.ОбъектПланирования 	= СтрокаВидаПлана.ВидПлана.ВидОбъектаПланирования;
		СтрокаЗаполнениеПланов.Светофор 			= 19;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		Если Название = "Плана" Тогда
			СтрокаЗаполнениеПланов = Объект.ЗаполнениеПланов.Добавить();
			СтрокаЗаполнениеПланов.ДокументПлана = Выборка.ДокументПлан;
		Иначе
			СтрокаЗаполнениеПланов = Объект.ЗаполнениеФактов.Добавить();
			СтрокаЗаполнениеПланов.ДокументФакта = Выборка.ДокументПлан;
		КонецЕсли;
		
		СтрокаЗаполнениеПланов.ВидПлана 			= Выборка.ДокументПлан.ВидПлана;
		СтрокаЗаполнениеПланов.ОбъектПланирования 	= Выборка.ДокументПлан.ОбъектПланирования;
		
		Если Выборка.ДокументПроведён Тогда
			СтрокаЗаполнениеПланов.Светофор = 21;
		Иначе
			СтрокаЗаполнениеПланов.Светофор = 20;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОтветаНаВопрос(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ЗаполнениеПланов.Очистить();
		ОбработкаВидовПланов(Параметры.ПланФакт);
		ВидимостьКнопкиДокумент(Параметры.ПланФакт);	
	КонецЕсли;	
	
КонецПроцедуры

// Автоматическое формирование плана
&НаСервере
Процедура ОбработкаВидовПланов(ПланФакт)
	
	Если ПланФакт = "Плана" Тогда
		Объект.ЗаполнениеПланов.Очистить();
	Иначе
		Объект.ЗаполнениеФактов.Очистить();	
	КонецЕсли;
	
	Для Каждого СтрокаВидаПлана Из Объект.ВидыПланов Цикл
		Если Не ЗначениеЗаполнено(СтрокаВидаПлана.ВидПлана) Или (СтрокаВидаПлана.Светофор = 19) Тогда
			Продолжить;
		КонецЕсли;

		Если СтрокаВидаПлана.ВидПлана.ОтчетыИОбработки.Выгрузить().Найти(Истина, "ФлагЗаполнения" + ПланФакт) <> Неопределено Тогда
			НайтиСоздатьДокумент(Объект.ДатаНачала,Объект.ДатаКонца, ПланФакт, СтрокаВидаПлана);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// заполнение видов плана
&НаСервере
Процедура ЗаполнитьВидыПланов() 
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВидыПлановКомпанииПодразделения.Подразделение,
		|	ВидыПлановКомпании.Ссылка
		|ИЗ
		|	Справочник.ВидыПлановКомпании.Подразделения КАК ВидыПлановКомпанииПодразделения
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПлановКомпании КАК ВидыПлановКомпании
		|		ПО ВидыПлановКомпанииПодразделения.Ссылка = ВидыПлановКомпании.Ссылка
		|ГДЕ
		|	ВидыПлановКомпанииПодразделения.Подразделение = &ПодразделениеКомпании");
		
	Запрос.УстановитьПараметр("ПодразделениеКомпании", Объект.Подразделение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаВидовПланов 			= Объект.ВидыПланов.Добавить();
		СтрокаВидовПланов.ВидПлана	= Выборка.Ссылка;
		СтрокаВидовПланов.Светофор	= УстановкаСветофоровВидаПланов(Выборка.Ссылка)
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти