// Модуль менеджера обработки "Обновление ставки НДС".

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьПерезаполнениеСтавокНДС(ПараметрыВыполнения, АдресХранилища) Экспорт
	
	КлиентОтметитьПрогрессОбходаКоллекции(НСтр("ru = 'Переопределение основной ставки НДС'"));
	
	// 1. Заполнение ставки НДС 20% данными из предопределенной основной ставки.
	Отказ = ЗаполнитьОсновнуюСтавкуНДС(ПараметрыВыполнения.СтавкаНДС20, ПараметрыВыполнения.СтавкаНДСРасчетная20);
	
	Если Отказ Тогда
		// Не удалось ставку переназначить - дальнейшие действия не имеют смысла.
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Выполнение операции прервано.'"));
		ПоместитьВоВременноеХранилище(Неопределено, АдресХранилища);
		Возврат;
	КонецЕсли;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Опции"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ПрайсЛистыКонтрагентов"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказНаряд"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаявкаНаРемонт"));
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ТаблицаРезультат.Колонки.Добавить("ТипОбъекта",   Новый ОписаниеТипов("Строка"));
	ТаблицаРезультат.Колонки.Добавить("ИмяОбъекта",   Новый ОписаниеТипов("Строка"));
	ТаблицаРезультат.Колонки.Добавить("Объект",       Новый ОписаниеТипов(МассивТипов));
	ТаблицаРезультат.Колонки.Добавить("Перезаписано", Новый ОписаниеТипов("Булево"));
	
	// 2. Перезаполним справочники ставкой 20% вместо 18%
	КлиентОтметитьПрогрессОбходаКоллекции(НСтр("ru = 'Перезаполнение ставок НДС в справочниках'"));
	ПерезаполнитьСтавкуНДССправочников(ТаблицаРезультат, ПараметрыВыполнения.СтавкаНДС20);
	
	// 3. Обновление ставок НДС в документах.
	КлиентОтметитьПрогрессОбходаКоллекции(НСтр("ru = 'Перезаполнение ставок НДС в документах'"));
	ПерезаполнитьСтавкиНДСВДокументах(ПараметрыВыполнения.ПерерасчетСумм, ТаблицаРезультат, ПараметрыВыполнения.СтавкаНДС20);
	
	ПоместитьВоВременноеХранилище(ТаблицаРезультат, АдресХранилища);
КонецПроцедуры

Функция ЗаполнитьОсновнуюСтавкуНДС(ОсновнаяСтавкаНДС20, ОсновнаяСтавкаНДСРасчетная20)
	
	ОсновнаяСтавкаНДС          = Справочники.СтавкиНДС.ОсновнаяСтавкаНДС.ПолучитьОбъект();
	ОсновнаяСтавкаНДСРасчетная = Справочники.СтавкиНДС.ОсновнаяСтавкаНДСРасчетная.ПолучитьОбъект(); // rarus antsyu не актуально 
	
	СтавкаНДС20          = ОсновнаяСтавкаНДС20.ПолучитьОбъект();
	СтавкаНДСРасчетная20 = ОсновнаяСтавкаНДСРасчетная20.ПолучитьОбъект(); // rarus antsyu не актуально
	
	// Отменим пометку удаления если она есть на выбранных ставок НДС 20
	Если СтавкаНДС20.ПометкаУдаления Тогда
		СтавкаНДС20.ПометкаУдаления = Ложь;
	КонецЕсли;
	
	Если СтавкаНДСРасчетная20.ПометкаУдаления Тогда
		СтавкаНДСРасчетная20.ПометкаУдаления = Ложь;
	КонецЕсли;
	
	ОсновнаяСтавка18  = (ОсновнаяСтавкаНДС.Ставка = 18);
	РасчетнаяСтавка18 = (ОсновнаяСтавкаНДСРасчетная.Ставка = 18);
	
	СтавкаНДС20.ОбменДанными.Загрузка=Истина;
	СтавкаНДСРасчетная20.ОбменДанными.Загрузка=Истина;
	
	Если ОсновнаяСтавка18 Тогда
		ОсновнаяСтавкаНДС.ОбменДанными.Загрузка = Истина;
		СтавкаНДС20.ИмяПредопределенныхДанных=ОсновнаяСтавкаНДС.ИмяПредопределенныхДанных;
		ОсновнаяСтавкаНДС.ИмяПредопределенныхДанных = "";
	КонецЕсли;
	
	Если РасчетнаяСтавка18 Тогда
		ОсновнаяСтавкаНДСРасчетная.ОбменДанными.Загрузка = Истина;
		СтавкаНДСРасчетная20.ИмяПредопределенныхДанных=ОсновнаяСтавкаНДСРасчетная.ИмяПредопределенныхДанных;
		ОсновнаяСтавкаНДСРасчетная.ИмяПредопределенныхДанных = "";
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		Если ОсновнаяСтавка18 Тогда
			ОсновнаяСтавкаНДС.Записать();
		КонецЕсли;
		СтавкаНДС20.Записать();
		Если РасчетнаяСтавка18 Тогда
			ОсновнаяСтавкаНДСРасчетная.Записать();
		КонецЕсли;
		СтавкаНДСРасчетная20.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		КлиентОтметитьПрогрессОбходаКоллекции(НСтр("ru = 'Не удалось переопределелить предопределенные элементы справочника ""Ставки НДС"". Выполнение обработки прервано.'"));
		Возврат Истина;
	КонецПопытки;
	
	Возврат Ложь;
	
КонецФункции // ЗаполнитьОсновнуюСтавкуНДС()

Процедура ПерезаполнитьСтавкуНДССправочников(ТаблицаОбъектов, СтавкаНДС20)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Ссылка,
	               |	Номенклатура.СтавкаНДС КАК СтавкаНДС,
	               |	""Номенклатура"" КАК Объект
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.СтавкаНДС.Ставка = 18
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Опции.Ссылка,
	               |	Опции.СтавкаНДС,
	               |	""Опции""
	               |ИЗ
	               |	Справочник.Опции КАК Опции
	               |ГДЕ
	               |	Опции.СтавкаНДС.Ставка = 18
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПрайсЛистыКонтрагентов.Ссылка,
	               |	ПрайсЛистыКонтрагентов.СтавкаНДС,
	               |	""ПрайсЛистыКонтрагентов""
	               |ИЗ
	               |	Справочник.ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
	               |ГДЕ
	               |	ПрайсЛистыКонтрагентов.СтавкаНДС.Ставка = 18
	               |ИТОГИ ПО
	               |	Объект";
	
	ВыборкаСправочника = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	Пока ВыборкаСправочника.Следующий() Цикл
		НомерЭлемента = 0;
		Выборка = ВыборкаСправочника.Выбрать();
		Всего = Выборка.Количество();
		
		Пока Выборка.Следующий() Цикл
			
			НоменклатураОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			НоменклатураОбъект.СтавкаНДС = СтавкаНДС20;
			
			НоменклатураОбъект.ОбменДанными.Загрузка = Истина;
			
			НоваяСтрока = ТаблицаОбъектов.Добавить();
			ИмяОбъекта = Выборка.Ссылка.Метаданные().Синоним;
			НоваяСтрока.Объект     = Выборка.Ссылка;
			НоваяСтрока.ТипОбъекта = "Справочники";
			НоваяСтрока.ИмяОбъекта = ИмяОбъекта;
			
			Попытка
				НоменклатураОбъект.Записать();
				НоваяСтрока.Перезаписано = Истина;
				НомерЭлемента = НомерЭлемента + 1;
			Исключение
				НоваяСтрока.Перезаписано = Ложь;
			КонецПопытки;
			
			КлиентОтметитьПрогрессОбходаКоллекции(
			СтрШаблон(НСтр("ru = 'Справочник ""%1"". Обновлено %2 из %3 элементов'"), ИмяОбъекта, НомерЭлемента, Всего));
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // ПерезаполнитьСтавкуНДСНоменклатры()

Процедура ПерезаполнитьСтавкиНДСВДокументах(ПерерасчетСумм, ТаблицаОбъектов, СтавкаНДС20)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ВЫРАЗИТЬ(ЗаказНаряд.СводныйРемонтныйЗаказ.ДокументОснование КАК Документ.ЗаявкаНаРемонт), ЗНАЧЕНИЕ(Документ.ЗаявкаНаРемонт.ПустаяСсылка)) КАК ЗаявкаНаРемонт,
	               |	ЗаказНаряд.Ссылка КАК ЗаказНаряд
	               |ПОМЕСТИТЬ СписокЗН
	               |ИЗ
	               |	Документ.ЗаказНаряд КАК ЗаказНаряд
	               |ГДЕ
	               |	ЗаказНаряд.Состояние = ЗНАЧЕНИЕ(Справочник.ВидыСостоянийЗаказНарядов.Закрыт)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ВЫРАЗИТЬ(ЗаказНаряд.СводныйРемонтныйЗаказ.ДокументОснование КАК Документ.ЗаявкаНаРемонт), ЗНАЧЕНИЕ(Документ.ЗаявкаНаРемонт.ПустаяСсылка)),
	               |	ЗаказНаряд.Ссылка
	               |ИЗ
	               |	Документ.ЗаказНаряд КАК ЗаказНаряд
	               |ГДЕ
	               |	ЗаказНаряд.Состояние = ЗНАЧЕНИЕ(Справочник.ВидыСостоянийЗаказНарядов.Выполнен)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаявкаНаРемонтТовары.Ссылка КАК Ссылка,
	               |	ЗаявкаНаРемонтТовары.НомерСтроки КАК НомерСтроки,
	               |	""Товары"" КАК ИмяТЧ,
	               |	""ЗаявкаНаРемонт"" КАК ТипДокумента,
	               |	1 КАК ПорядокПерезаполнения
	               |ИЗ
	               |	Документ.ЗаявкаНаРемонт.Товары КАК ЗаявкаНаРемонтТовары
	               |ГДЕ
	               |	НЕ ЗаявкаНаРемонтТовары.Ссылка В
	               |				(ВЫБРАТЬ
	               |					СписокЗН.ЗаявкаНаРемонт
	               |				ИЗ
	               |					СписокЗН КАК СписокЗН)
	               |	И ЗаявкаНаРемонтТовары.СтавкаНДС.Ставка = 18
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаявкаНаРемонтРаботы.Ссылка,
	               |	ЗаявкаНаРемонтРаботы.НомерСтроки,
	               |	""Автоработы"",
	               |	""ЗаявкаНаРемонт"",
	               |	1
	               |ИЗ
	               |	Документ.ЗаявкаНаРемонт.Автоработы КАК ЗаявкаНаРемонтРаботы
	               |ГДЕ
	               |	НЕ ЗаявкаНаРемонтРаботы.Ссылка В
	               |				(ВЫБРАТЬ
	               |					СписокЗН.ЗаявкаНаРемонт
	               |				ИЗ
	               |					СписокЗН КАК СписокЗН)
	               |	И ЗаявкаНаРемонтРаботы.СтавкаНДС.Ставка = 18
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаказНарядТовары.Ссылка,
	               |	ЗаказНарядТовары.НомерСтроки,
	               |	""Товары"",
	               |	""ЗаказНаряд"",
	               |	2
	               |ИЗ
	               |	Документ.ЗаказНаряд.Товары КАК ЗаказНарядТовары
	               |ГДЕ
	               |	НЕ ЗаказНарядТовары.Ссылка В
	               |				(ВЫБРАТЬ
	               |					СписокЗН.ЗаказНаряд
	               |				ИЗ
	               |					СписокЗН КАК СписокЗН)
	               |	И ЗаказНарядТовары.СтавкаНДС.Ставка = 18
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаказНарядРаботы.Ссылка,
	               |	ЗаказНарядРаботы.НомерСтроки,
	               |	""Автоработы"",
	               |	""ЗаказНаряд"",
	               |	2
	               |ИЗ
	               |	Документ.ЗаказНаряд.Автоработы КАК ЗаказНарядРаботы
	               |ГДЕ
	               |	НЕ ЗаказНарядРаботы.Ссылка В
	               |				(ВЫБРАТЬ
	               |					СписокЗН.ЗаказНаряд
	               |				ИЗ
	               |					СписокЗН КАК СписокЗН)
	               |	И ЗаказНарядРаботы.СтавкаНДС.Ставка = 18
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПорядокПерезаполнения
	               |ИТОГИ ПО
	               |	ТипДокумента,
	               |	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПерезаполнитьТабличныеЧастиДокумента(Выборка, ПерерасчетСумм, ТаблицаОбъектов, СтавкаНДС20);
	
КонецПроцедуры // ПерезаполнитьСтавкиНДСВДокументах()

Процедура ПерезаполнитьТабличныеЧастиДокумента(ВыборкаТиповДокументов, ПерерасчетСумм, ТаблицаОбъектов, СтавкаНДС20)
	
	Пока ВыборкаТиповДокументов.Следующий() Цикл
		
		НомерДокумента  = 0;
		ВыборкаДокументов = ВыборкаТиповДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВсегоДокументов = ВыборкаДокументов.Количество();
		
		Пока ВыборкаДокументов.Следующий() Цикл
			
			НоваяСтрока = ТаблицаОбъектов.Добавить();
			НоваяСтрока.ТипОбъекта = "Документы";
			НоваяСтрока.ИмяОбъекта = ВыборкаДокументов.Ссылка.Метаданные().Синоним;
			НоваяСтрока.Объект     = ВыборкаДокументов.Ссылка;
			
			ДокументОбъект = ВыборкаДокументов.Ссылка.ПолучитьОбъект();
			
			ВыборкаСтрокТЧ = ВыборкаДокументов.Выбрать();
			
			Попытка
				
				Пока ВыборкаСтрокТЧ.Следующий() Цикл
					
					СтрокаТЧ = ДокументОбъект[ВыборкаСтрокТЧ.ИмяТЧ].Найти(ВыборкаСтрокТЧ.НомерСтроки, "НомерСтроки");
					
					Если СтрокаТЧ = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					СтрокаТЧ.СтавкаНДС = СтавкаНДС20;
					
					СтрокаТЧ.СуммаНДС = Окр((СтрокаТЧ.СуммаВсего * 20)/120, 2);
					
					Если ПерерасчетСумм = 2 Тогда
						Если ВыборкаСтрокТЧ.ИмяТЧ = "Товары" Тогда
							Документы[ВыборкаСтрокТЧ.ТипДокумента].ТоварыЦенаПриИзменении(ДокументОбъект,СтрокаТЧ);
						ИначеЕсли ВыборкаСтрокТЧ.ИмяТЧ = "Автоработы" Тогда
							Документы[ВыборкаСтрокТЧ.ТипДокумента].АвтоработыЦенаПриИзменении(ДокументОбъект,СтрокаТЧ);
						КонецЕсли;
					ИначеЕсли ПерерасчетСумм = 3 Тогда
						Если ВыборкаСтрокТЧ.ИмяТЧ = "Товары" Тогда
							Документы[ВыборкаСтрокТЧ.ТипДокумента].ТоварыСуммаВсегоПриИзменении(ДокументОбъект,СтрокаТЧ);
						ИначеЕсли ВыборкаСтрокТЧ.ИмяТЧ = "Автоработы" Тогда
							Документы[ВыборкаСтрокТЧ.ТипДокумента].АвтоработыСуммаВсегоПриИзменении(ДокументОбъект,СтрокаТЧ);
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
				
				ДокументОбъект.СуммаНоменклатурыДокумента = ДокументОбъект.Товары.Итог("СуммаВсего");
				ДокументОбъект.СуммаРаботДокумента        = ДокументОбъект.Автоработы.Итог("СуммаВсего");
				ДокументОбъект.СуммаДокумента             = ДокументОбъект.СуммаНоменклатурыДокумента+ДокументОбъект.СуммаРаботДокумента;
				
				ДокументОбъект.ОбменДанными.Загрузка = Истина;
				
				ДокументОбъект.Записать();
				НоваяСтрока.Перезаписано = Истина;
				НомерДокумента = НомерДокумента + 1;
			Исключение
				НоваяСтрока.Перезаписано = Ложь;
			КонецПопытки;
			
			КлиентОтметитьПрогрессОбходаКоллекции(
				СтрШаблон(НСтр("ru = 'Документ ""%1"". Обновлено %2 из %3 документов'"), НоваяСтрока.ИмяОбъекта, НомерДокумента, ВсегоДокументов));
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // ПерезаполнитьТабличныеЧастиДокумента()


////////////////////////////////////////////////////////////////////////////////
// Передача информации на клиент.

// Регистрирует прогресс.
Процедура КлиентОтметитьПрогрессОбходаКоллекции(Текст)
	
	// Регистрация сообщения для чтения из клиентского сеанса.
	ДлительныеОперации.СообщитьПрогресс(,Текст);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ПЕЧАТНЫХ ФОРМ

// Обработчик печати.
//
// Параметры:
//  МассивОбъектов         - Массив           - массив объектов для формирования печатных форм
//  ПараметрыПечати        - Структура        - дополнительные параметры печати
//  КоллекцияПечатныхФорм  - Таблица значений - таблица с идентификаторами печатных форм и макетами печати
//  ОбъектыПечати          - Структура        - список областей печатной формы в разрезе документов
//  ПараметрыВывода        - Структура        - дополнительные параметры вывода формы.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Отчет") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Отчет",
		НСтр("ru = 'Результат перезаполнения ставки НДС с 18% на 20%'"),
		ПечатьРезультат(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры // Печать()

// Формирует данные в табличном документе.
//
Функция ПечатьРезультат(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	// Создадим табличные документы
	ДокументРезультат = Новый ТабличныйДокумент;
	
	МакетОтчета = ПолучитьМакет("Отчет");
	
	// Необходимые параметры
	ТаблицаРезультат = ПолучитьИзВременногоХранилища(ПараметрыПечати.АдресВременногоХранилища);
	
	Шапка    = МакетОтчета.ПолучитьОбласть("Шапка");
	Группа   = МакетОтчета.ПолучитьОбласть("ГруппаОбъекта");
	ИмяОбъекта = МакетОтчета.ПолучитьОбласть("ИмяОбъекта");
	Строка   = МакетОтчета.ПолучитьОбласть("Строка");
	Подвал   = МакетОтчета.ПолучитьОбласть("Подвал");
	ДокументРезультат.Вывести(Шапка);
	
	ДокументРезультат.НачатьАвтогруппировкуСтрок();
	
	ТекущийТипОбъекта = "";
	ТекущийОбъект     = "";
	
	Для Каждого ТекущаяСтрока Из ТаблицаРезультат Цикл
		
		Если ТекущийТипОбъекта <> ТекущаяСтрока.ТипОбъекта Тогда
			Группа.Параметры.ГруппаОбъектов = ТекущаяСтрока.ТипОбъекта;
			ДокументРезультат.Вывести(Группа, 0,, Истина);
			ТекущийТипОбъекта = ТекущаяСтрока.ТипОбъекта;
		КонецЕсли;
		
		Если ТекущийОбъект <> ТекущаяСтрока.ИмяОбъекта Тогда
			ИмяОбъекта.Параметры.ИмяОбъекта = ТекущаяСтрока.ИмяОбъекта;
			ДокументРезультат.Вывести(ИмяОбъекта, 1,, Истина);
			ТекущийОбъект = ТекущаяСтрока.ИмяОбъекта;
		КонецЕсли;
		
		Строка.Параметры.Объект    = СокрЛП(Строка(ТекущаяСтрока.Объект));
		Строка.Параметры.Документ  = ТекущаяСтрока.Объект;
		Строка.Параметры.Результат = ТекущаяСтрока.Перезаписано;
		ДокументРезультат.Вывести(Строка, 2,, Истина);
		
	КонецЦикла;
	
	ДокументРезультат.ЗакончитьАвтоГруппировкуСтрок();
	
	ДокументРезультат.Вывести(Подвал);
	
	Возврат ДокументРезультат;
	
КонецФункции // ПечатьРезультат()

#КонецОбласти

#КонецЕсли