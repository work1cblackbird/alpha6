
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет запрос и получает данные для таблицы "Приемка"
//
Функция ПолучитьВыборкуПриемка(Объект, НомерПоследнейСтроки) Экспорт
	
	// формируем строку фильтров виртуальной таблицы
	СтрокаУсловия="";
	Для Каждого ЭлементОтбора Из Объект.ФильтрыОтчета.Настройки.Отбор.Элементы Цикл
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		СтрокаУсловия = СтрокаУсловия + " И " + СтрЗаменить(СтрЗаменить(
															СформироватьСтрокуВидаСравнения(ЭлементОтбора.ВидСравнения),
															"#","#ИмяТаблицы#" + Строка(ЭлементОтбора.ЛевоеЗначение)),
															"&","&"+Строка(ЭлементОтбора.ЛевоеЗначение));
	КонецЦикла;
	
	СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "#ИмяТаблицы#", "ЗаявкаНаРемонт.");
	
	// 1 пакет: получаем Заявки
	// 2 пакет: получаем СводныеРемонтныеЗаказы, на основании заявок
	// 3 пакет: для заявок, где введены СводныеРемонтныеЗаказы ставим флаг "ЕстьСРЗ"
	// 4 пакет: выбираем те заявки, по которым нет СводныхРемонтныхЗаказов
	 
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявкаНаРемонт.Ссылка КАК Заявка
	|ПОМЕСТИТЬ Заявки
	|ИЗ
	|	Документ.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт
	|ГДЕ
	|	ЗаявкаНаРемонт.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаКонца " + СтрокаУсловия + "
	|	И НЕ ЗаявкаНаРемонт.ПометкаУдаления
	|	И ЗаявкаНаРемонт.Состояние<>ЗНАЧЕНИЕ(Перечисление.СостояниеЗаявкиНаРемонт.Отклонено)
	|	И ЗаявкаНаРемонт.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводныйРемонтныйЗаказ.Ссылка КАК СводныйРемонтныйЗаказ
	|ПОМЕСТИТЬ СводныеРемонтныеЗаказы
	|ИЗ
	|	Документ.СводныйРемонтныйЗаказ КАК СводныйРемонтныйЗаказ
	|ГДЕ
	|	СводныйРемонтныйЗаказ.ДокументОснование В
	|			(ВЫБРАТЬ
	|				Заявки.Заявка
	|			ИЗ
	|				Заявки КАК Заявки)
	|	И НЕ СводныйРемонтныйЗаказ.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СводныеРемонтныеЗаказы.СводныйРемонтныйЗаказ ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьСРЗ,
	|	Заявки.Заявка КАК Заявка
	|ПОМЕСТИТЬ ЗаявкиИСводныеРемонтныеЗаказы
	|ИЗ
	|	Заявки КАК Заявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СводныеРемонтныеЗаказы КАК СводныеРемонтныеЗаказы
	|		ПО Заявки.Заявка = СводныеРемонтныеЗаказы.СводныйРемонтныйЗаказ.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 999999
	|	ЗаявкиИСводныеРемонтныеЗаказы.Заявка,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	ЗаявкиИСводныеРемонтныеЗаказы КАК ЗаявкиИСводныеРемонтныеЗаказы
	|ГДЕ
	|	НЕ ЗаявкиИСводныеРемонтныеЗаказы.ЕстьСРЗ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявкиИСводныеРемонтныеЗаказы.Заявка.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	ВТ.НомерСтроки > &НомерПоследнейСтроки
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДатаСеанса())); 
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(ТекущаяДатаСеанса())); 
	Запрос.УстановитьПараметр("НомерПоследнейСтроки", НомерПоследнейСтроки);
	
	Для Каждого ЭлементОтбора Из Объект.ФильтрыОтчета.Настройки.Отбор.Элементы Цикл
		// не используем элемент отбора
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		Запрос.УстановитьПараметр(Строка(ЭлементОтбора.ЛевоеЗначение),ЭлементОтбора.ПравоеЗначение);
	КонецЦикла;
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

// Выполняет запрос и получает данные для таблицы "Выдача"
//
Функция ПолучитьВыборкуВыдача(Объект, НомерПоследнейСтроки) Экспорт
	
	// формируем строку фильтров виртуальной таблицы
	СтрокаУсловия="";
	Для Каждого ЭлементОтбора Из Объект.ФильтрыОтчета.Настройки.Отбор.Элементы Цикл
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		СтрокаУсловия = СтрокаУсловия + " И " + СтрЗаменить(СтрЗаменить(
															СформироватьСтрокуВидаСравнения(ЭлементОтбора.ВидСравнения),
															"#","#ИмяТаблицы#" + Строка(ЭлементОтбора.ЛевоеЗначение)),
															"&","&"+Строка(ЭлементОтбора.ЛевоеЗначение));
	КонецЦикла;
	
	СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "#ИмяТаблицы#", "ЗаказНаряд.");
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 999999
	|	МАКСИМУМ(ЗаказНаряд.Ссылка) КАК ЗаказНаряд,
	|	МАКСИМУМ(ЗаказНаряд.ПлановаяДатаВыдачи) КАК Время,
	|	МАКСИМУМ(ЗаказНаряд.Мастер) КАК Мастер,
	|	МАКСИМУМ(ЗаказНаряд.Диспетчер) КАК Диспетчер,
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Автомобиль,
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Заказчик,
	|	ЗаказНаряд.Состояние,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.ЗаказНаряд КАК ЗаказНаряд
	|ГДЕ
	|	ЗаказНаряд.ПлановаяДатаВыдачи МЕЖДУ &ДатаНачала И &ДатаКонца" + СтрокаУсловия + "
	|	И ЗаказНаряд.Состояние <> &Состояние
	|	И НЕ ЗаказНаряд.ПометкаУдаления
	|	И ЗаказНаряд.ДатаОкончания < &ДатаКонца
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Автомобиль,
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Заказчик,
	|	ЗаказНаряд.Состояние
	|
	|УПОРЯДОЧИТЬ ПО
	|	Время
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	ВТ.НомерСтроки > &НомерПоследнейСтроки
	|";
	
	Если Объект.АвтоВНевыданные = 
		Перечисления.РежимыПопаданияВТаблицуНевыданные.НаСледующийДень Тогда 
		
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДатаСеанса())); 
	
	ИначеЕсли Объект.АвтоВНевыданные = 
		Перечисления.РежимыПопаданияВТаблицуНевыданные.ПослеУказанногоВремени Тогда
		
		ВремяПерехода = НачалоДня (ТекущаяДатаСеанса ()) + (Объект.ВремяКонтроляНевыданных - Дата(1,1,1));

		Запрос.УстановитьПараметр("ДатаНачала", ВремяПерехода);
			
	ИначеЕсли Объект.АвтоВНевыданные =
		Перечисления.РежимыПопаданияВТаблицуНевыданные.СразуПослеВыполненияЗаказНаряда Тогда
		
		Запрос.УстановитьПараметр("ДатаНачала", ТекущаяДатаСеанса());
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(ТекущаяДатаСеанса()));
    Запрос.УстановитьПараметр("Состояние", Справочники.ВидыСостоянийЗаказНарядов.Закрыт);
	Запрос.УстановитьПараметр("НомерПоследнейСтроки", НомерПоследнейСтроки);
	
	Для Каждого ЭлементОтбора Из Объект.ФильтрыОтчета.Настройки.Отбор.Элементы Цикл
		// не используем элемент отбора
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		Запрос.УстановитьПараметр(Строка(ЭлементОтбора.ЛевоеЗначение),ЭлементОтбора.ПравоеЗначение);
	КонецЦикла;
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

// Выполняет запрос и получает данные для таблицы "Невыданные"
//
Функция ПолучитьВыборкуНевыданные(Объект, НомерПоследнейСтроки) Экспорт
	
	// формируем строку фильтров виртуальной таблицы
	СтрокаУсловия="";
	Для Каждого ЭлементОтбора Из Объект.ФильтрыОтчета.Настройки.Отбор.Элементы Цикл
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		СтрокаУсловия = СтрокаУсловия + " И " + СтрЗаменить(СтрЗаменить(
															СформироватьСтрокуВидаСравнения(ЭлементОтбора.ВидСравнения),
															"#","#ИмяТаблицы#" + Строка(ЭлементОтбора.ЛевоеЗначение)),
															"&","&"+Строка(ЭлементОтбора.ЛевоеЗначение));


	КонецЦикла;
	
	СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "#ИмяТаблицы#", "ЗаказНаряд.");
	Запрос = Новый Запрос();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 999999
	|	МАКСИМУМ(ЗаказНаряд.Ссылка) КАК ЗаказНаряд,
	|	МАКСИМУМ(ЗаказНаряд.ПлановаяДатаВыдачи) КАК Дата,
	|	МАКСИМУМ(ЗаказНаряд.Мастер) КАК Мастер,
	|	МАКСИМУМ(ЗаказНаряд.Диспетчер) КАК Диспетчер,
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Автомобиль,
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Заказчик,
	|	ЗаказНаряд.Состояние,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.ЗаказНаряд КАК ЗаказНаряд
	|ГДЕ
	|	ЗаказНаряд.ПлановаяДатаВыдачи < &ДатаНачала" + СтрокаУсловия + "
	|	И ЗаказНаряд.Состояние = &Состояние
	|	И НЕ ЗаказНаряд.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Автомобиль,
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Заказчик,
	|	ЗаказНаряд.Состояние
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	ВТ.НомерСтроки > &НомерПоследнейСтроки
	|";
	
	Если Объект.АвтоВНевыданные = 
		Перечисления.РежимыПопаданияВТаблицуНевыданные.НаСледующийДень Тогда 
		
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДатаСеанса()));
		
	ИначеЕсли Объект.АвтоВНевыданные = 
		Перечисления.РежимыПопаданияВТаблицуНевыданные.ПослеУказанногоВремени Тогда
		
		ВремяПерехода = НачалоДня (ТекущаяДатаСеанса ()) + (Объект.ВремяКонтроляНевыданных - Дата(1,1,1));

		Запрос.УстановитьПараметр("ДатаНачала", ВремяПерехода);
		
	ИначеЕсли Объект.АвтоВНевыданные =
		Перечисления.РежимыПопаданияВТаблицуНевыданные.СразуПослеВыполненияЗаказНаряда Тогда
		
		Запрос.УстановитьПараметр("ДатаНачала", ТекущаяДатаСеанса());
		
	КонецЕсли;

	Запрос.УстановитьПараметр("Состояние", Справочники.ВидыСостоянийЗаказНарядов.Выполнен);
	Запрос.УстановитьПараметр("НомерПоследнейСтроки", НомерПоследнейСтроки);
	
	Для Каждого ЭлементОтбора Из Объект.ФильтрыОтчета.Настройки.Отбор.Элементы Цикл
		// не используем элемент отбора
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		Запрос.УстановитьПараметр(Строка(ЭлементОтбора.ЛевоеЗначение),ЭлементОтбора.ПравоеЗначение);
	КонецЦикла;

		
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

// Выполняет запрос и получает данные для таблицы "ВРаботе"
//
Функция ПолучитьВыборкуВРаботе(Объект, НомерПоследнейСтроки) Экспорт
	// формируем строку фильтров виртуальной таблицы
	СтрокаУсловия="";
	Для Каждого ЭлементОтбора Из Объект.ФильтрыОтчета.Настройки.Отбор.Элементы Цикл
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		СтрокаУсловия = СтрокаУсловия + " И " + СтрЗаменить(СтрЗаменить(
															СформироватьСтрокуВидаСравнения(ЭлементОтбора.ВидСравнения),
															"#","#ИмяТаблицы#" + Строка(ЭлементОтбора.ЛевоеЗначение)),
															"&","&"+Строка(ЭлементОтбора.ЛевоеЗначение));
	КонецЦикла;
	
	СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "#ИмяТаблицы#", "ЗаказНаряд.");
	Запрос = Новый Запрос();

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 999999
	|	МАКСИМУМ(ЗаказНаряд.Ссылка) КАК ЗаказНаряд,
	|	МАКСИМУМ(ЗаказНаряд.ПлановаяДатаВыдачи) КАК Дата,
	|	МАКСИМУМ(ЗаказНаряд.Мастер) КАК Мастер,
	|	МАКСИМУМ(ЗаказНаряд.Диспетчер) КАК Диспетчер,
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Автомобиль,
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Заказчик,
	|	ЗаказНаряд.Состояние,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.ЗаказНаряд КАК ЗаказНаряд
	|ГДЕ
	|	ЗаказНаряд.ПлановаяДатаВыдачи < &ДатаНачала" + СтрокаУсловия + "
	|	И ЗаказНаряд.Состояние <> Значение(Справочник.ВидыСостоянийЗаказНарядов.Выполнен)
	|	И ЗаказНаряд.Состояние <> Значение(Справочник.ВидыСостоянийЗаказНарядов.Заявка)
	|	И ЗаказНаряд.Состояние <> Значение(Справочник.ВидыСостоянийЗаказНарядов.Закрыт)
	|	И НЕ ЗаказНаряд.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Автомобиль,
	|	ЗаказНаряд.СводныйРемонтныйЗаказ.Заказчик,
	|	ЗаказНаряд.Состояние
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	ВТ.НомерСтроки > &НомерПоследнейСтроки
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("НомерПоследнейСтроки", НомерПоследнейСтроки);
	
	Для Каждого ЭлементОтбора Из Объект.ФильтрыОтчета.Настройки.Отбор.Элементы Цикл
		// не используем элемент отбора
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		Запрос.УстановитьПараметр(Строка(ЭлементОтбора.ЛевоеЗначение),ЭлементОтбора.ПравоеЗначение);
	КонецЦикла;
   Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

// Функция возвращает строку для подстановки в условие запроса
// #-надо заменить на имя поля, &-надо заменить на имя параметра
//
// Параметры:
//	ВидСравн - ВидСравнения - Вид сравнения
//
// Возвращаемое значение:
//	Строка - Строка подстановки в условие запроса
//
Функция СформироватьСтрокуВидаСравнения(ВидСравн) Экспорт
	
	Если ТипЗнч(ВидСравн)<>Тип("ВидСравненияКомпоновкиДанных") Тогда
		Возврат "";
	КонецЕсли; 
	
	СтрокаУсловия = "";
	Если ВидСравн = ВидСравненияКомпоновкиДанных.Равно Тогда
		СтрокаУсловия = "#=&";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.НеРавно Тогда
		СтрокаУсловия = "#<>&";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.ВСписке Тогда
		СтрокаУсловия = "# В (&)";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
		СтрокаУсловия = "# В ИЕРАРХИИ (&)";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.ВИерархии Тогда
		СтрокаУсловия = "# В ИЕРАРХИИ (&)";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.НеВСписке Тогда
		СтрокаУсловия = "НЕ # В (&)";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
		СтрокаУсловия = "НЕ # В ИЕРАРХИИ (&)";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.НеВИерархии Тогда
		СтрокаУсловия = "НЕ # В ИЕРАРХИИ (&)";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.Больше Тогда
		СтрокаУсловия = "#>&";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда
		СтрокаУсловия = "#>=&";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.Меньше Тогда
		СтрокаУсловия = "#<&";
	ИначеЕсли ВидСравн= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда
		СтрокаУсловия = "#<=&";
	КонецЕсли;
	
	Возврат СтрокаУсловия;
	
КонецФункции // СформироватьСтрокуВидаСравнения()

// Формирует HTML код отчета для таблицы "Приемка"
//
Функция СформироватьОтчетПриемка(Объект, Выборка, ПолеHTMLДокумента, ВыведеноСотрудников) Экспорт 

	НомерСтроки = 999999;
	
	Макет = ПолучитьМакет("МакетHTML");
	Текст = Макет.ПолучитьТекст();
	
	Если Объект.Идентификатор <> Справочники.ОрганизацииПрисоединенныеФайлы.ПустаяСсылка() Тогда
		Центровка = "left";
		КартинкаЛоготипа = Base64Строка(РаботаСФайлами.ДвоичныеДанныеФайла(Объект.Идентификатор));
		Логотип = "<td align=""right""><img src=""data:image/jpeg;base64,"+КартинкаЛоготипа+""" width="+Объект.ШиринаЛоготипа+
					" height="+Объект.ВысотаЛоготипа+" ></td>";
	Иначе
		Центровка = "right";     	
		Логотип = "";
	КонецЕсли;
	Текст = СтрЗаменить(Текст, "Центровка", Центровка);
	Текст = СтрЗаменить(Текст, "Логотип", Логотип);
	
	ТекстCSS = ПолучитьМакет(Объект.ЦветоваяСхема).ПолучитьТекст();
	Текст = СтрЗаменить(Текст, "<!--style-->", ТекстCSS);
	Текст = СтрЗаменить(Текст, "font-size:16px;", "font-size:"+Объект.РазмерШрифта+"px;");
	
	ТекстТЗ = "<table border=2 cellSpacing=0 cellPadding=10 width=""200px"">";
	
	//должности
	ТекстТЗ = ТекстТЗ + "<tr>";
	ЕщеВывести = ВыведеноСотрудников + Мин(Объект.Сотрудники.Количество()-ВыведеноСотрудников, Объект.ФотоНаЭкран);
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			ИмяМастера = СокрЛП(ТекущаяСтрока.Сотрудник.Наименование);
			Должность = СокрЛП(ТекущаяСтрока.Сотрудник.Должность.Наименование);
			//должность
			Если Должность="Не определена" Тогда
				Должность="-";
			КонецЕсли;
			ТекстТЗ = ТекстТЗ + "<td align=""center"" style=""font: 20px arial"">"+Должность+"</td>";
		КонецЕсли;
	КонецЦикла; 
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	//фотки
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			Если ЗначениеЗаполнено(ТекущаяСтрока.Идентификатор) Тогда
				ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ТекущаяСтрока.Идентификатор);
			Иначе
				ДвоичныеДанные = БиблиотекаКартинок.ФотографияСотрудникаПоУмолчанию.ПолучитьДвоичныеДанные();
			КонецЕсли;
			
			ФотоМастера = Base64Строка(ДвоичныеДанные);
			ТекстТЗ = ТекстТЗ + "<td align=""center""><img src=""data:image/jpeg;base64,"+ФотоМастера+""" width="
						+Объект.ШиринаФото+" height="+Объект.ВысотаФото+"></td>";
		КонецЕсли;
	КонецЦикла;
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	ТекстТЗ = ТекстТЗ + "<tr>";
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			ИмяМастера = СокрЛП(ТекущаяСтрока.Сотрудник.Наименование);
			ТекстТЗ = ТекстТЗ + "<td align=""center"" style=""font: 18px arial"">"+ИмяМастера+"</td>";
		КонецЕсли;
	КонецЦикла;
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	ТекстТЗ = ТекстТЗ + "</table>"; //закроем ТЗ
	Текст = Текст + ТекстТЗ;
	
	Текст = СтрЗаменить(Текст, "</body></html>", "");
	Текст = Текст + "<DIV class=PageHeader><span>Приемка автомобилей</span></DIV>";
	Текст = Текст + "<div class=""TableBox"">	
	|<TABLE border=2 cellSpacing=0 cellPadding=5 width=""100%"">
	|<TBODY>
	|<TR>
	|<TH scope=col>Время</TH>
	|<TH scope=col>" + ?(Объект.ВыводДиспетчера, "Диспетчер", "Мастер-приемщик") + "</TH>
	|<TH scope=col>Модель</TH>
	|<TH scope=col>Гос.номер</TH>
	|<TH scope=col>Клиент</TH>
	|<TH scope=col>Состояние</TH></TR>
	|</TR>";
	
	Если Выборка.Количество() = 0 Тогда
		ПолеHTMLДокумента =" ";
		Возврат НомерСтроки;
	КонецЕсли;
	
	СчетчикСтрок = 0;
	
	Пока  Истина  Цикл  
		
		СчетчикСтрок = СчетчикСтрок + 1;
		
		Заявка = Выборка.Заявка;
		
		Если СчетчикСтрок%2=0 Тогда
			Текст = Текст + "<TR class=""even"">";
		Иначе
			Текст = Текст + "<TR >";
		КонецЕсли;
		
		Текст = Текст + "<TD class=""nowrap"">" + ПодготовитьСтроку(Формат(Заявка.ДатаНачала,"ДФ=ЧЧ:мм:сс")) + "</TD>";
		ПолеВывода = ?(Объект.ВыводДиспетчера, Заявка.Диспетчер, Заявка.Мастер);
		Текст = Текст + "<TD>" + ПодготовитьСтроку(ПолеВывода) + "</TD>";
				
		Если  Заявка.Автомобиль <> Справочники.Автомобили.ПустаяСсылка() Тогда
			ГосНомер = Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(Заявка.Автомобиль,
						Перечисления.ДополнительнаяИнформацияАвтомобилей.ГосНомер,ТекущаяДатаСеанса());
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Заявка.Автомобиль.Модель) + "</TD>";
			Текст = Текст + "<TD class=""nowrap"">" + ПодготовитьСтроку(ГосНомер) + "</TD>";
		Иначе
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Заявка.Модель) + "</TD>";
			Текст = Текст + "<TD class=""nowrap"">" + ПодготовитьСтроку(Заявка.ГосНомер) + "</TD>";
		КонецЕсли;
		
		Если  Заявка.Заказчик <> Справочники.Контрагенты.ПустаяСсылка() Тогда
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Заявка.Заказчик) + "</TD>";
			
		Иначе
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Заявка.ОбращениеККлиенту) + "</TD>";
		КонецЕсли;
		ЗадержкаЧасов = Цел((ТекущаяДатаСеанса()-Заявка.ДатаНачала)/3600);
		Если ЗадержкаЧасов >=1  Тогда
			Если ЗадержкаЧасов=1 ИЛИ ЗадержкаЧасов=21 Тогда
				Текст = Текст + "<TD>" + "задержка на " + ЗадержкаЧасов +  " час" + "</TD>";
			ИначеЕсли (ЗадержкаЧасов>=2 И ЗадержкаЧасов<=4) ИЛИ (ЗадержкаЧасов>=22 И ЗадержкаЧасов<=24) Тогда
				Текст = Текст + "<TD>" + "задержка на " + ЗадержкаЧасов +  " часа" + "</TD>";
			Иначе
				Текст = Текст + "<TD>" + "задержка на " + ЗадержкаЧасов +  " часов" + "</TD>";
			КонецЕсли;
		Иначе
			Текст = Текст + "<TD> ожидание клиента </TD>";
		КонецЕсли;
		
		Текст = Текст + "</TR>";

		НомерСтроки = Выборка.НомерСтроки;
		
		Если СчетчикСтрок >= Объект.СтрокНаСтраницу Тогда
			Прервать;
		КонецЕсли;
		
		Если НЕ Выборка.Следующий() Тогда
			НомерСтроки = 0;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Текст = Текст + "</TABLE></DIV></BODY></HTML>";
	
	ПолеHTMLДокумента = Текст;

	Возврат НомерСтроки;
	
КонецФункции

// Формирует HTML код отчета для таблицы "Выдача"
//
Функция СформироватьОтчетВыдача(Объект, Выборка, ПолеHTMLДокумента, ВыведеноСотрудников) Экспорт 

	НомерСтроки = 999999;
	
	Макет = ПолучитьМакет("МакетHTML");
	Текст = Макет.ПолучитьТекст();
	
	Если Объект.Идентификатор <> Справочники.ОрганизацииПрисоединенныеФайлы.ПустаяСсылка() Тогда
		Центровка = "left";
		КартинкаЛоготипа = Base64Строка(РаботаСФайлами.ДвоичныеДанныеФайла(Объект.Идентификатор));
		Логотип = "<td align=""right""><img src=""data:image/jpeg;base64,"+КартинкаЛоготипа+""" width="+Объект.ШиринаЛоготипа+
					" height="+Объект.ВысотаЛоготипа+" ></td>";
	Иначе
		Центровка = "right";
		Логотип = "";
	КонецЕсли;
	Текст = СтрЗаменить(Текст, "Центровка", Центровка);
	Текст = СтрЗаменить(Текст, "Логотип", Логотип);
	
	ТекстCSS = ПолучитьМакет(Объект.ЦветоваяСхема).ПолучитьТекст();
	Текст = СтрЗаменить(Текст, "<!--style-->", ТекстCSS);
	
	Текст = СтрЗаменить(Текст, "font-size:16px;", "font-size:"+Объект.РазмерШрифта+"px;");
	
	ТекстТЗ = "<table border=2 cellSpacing=0 cellPadding=10 width=""200px"">";
	
	//должности
	ТекстТЗ = ТекстТЗ + "<tr>";
	ЕщеВывести = ВыведеноСотрудников + Мин(Объект.Сотрудники.Количество()-ВыведеноСотрудников, Объект.ФотоНаЭкран);
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			ИмяМастера = СокрЛП(ТекущаяСтрока.Сотрудник.Наименование);
			Должность = СокрЛП(ТекущаяСтрока.Сотрудник.Должность.Наименование);
			//должность
			Если Должность="Не определена" Тогда
				Должность="-";
			КонецЕсли;
			ТекстТЗ = ТекстТЗ + "<td align=""center"" style=""font: 20px arial"">"+Должность+"</td>";
		КонецЕсли;
	КонецЦикла; 
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	//фотки
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			Если ЗначениеЗаполнено(ТекущаяСтрока.Идентификатор) Тогда
				ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ТекущаяСтрока.Идентификатор);
			Иначе
				ДвоичныеДанные = БиблиотекаКартинок.ФотографияСотрудникаПоУмолчанию.ПолучитьДвоичныеДанные();
			КонецЕсли;
			
			ФотоМастера = Base64Строка(ДвоичныеДанные);
			ТекстТЗ = ТекстТЗ + "<td align=""center""><img src=""data:image/jpeg;base64,"+ФотоМастера+""" width="
						+Объект.ШиринаФото+" height="+Объект.ВысотаФото+"></td>";
		КонецЕсли;
	КонецЦикла;
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	ТекстТЗ = ТекстТЗ + "<tr>";
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			ИмяМастера = СокрЛП(ТекущаяСтрока.Сотрудник.Наименование);
			ТекстТЗ = ТекстТЗ + "<td align=""center"" style=""font: 18px arial"">"+ИмяМастера+"</td>";
		КонецЕсли;
	КонецЦикла;
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	ТекстТЗ = ТекстТЗ + "</table>"; //закроем ТЗ
	Текст = Текст + ТекстТЗ;
	
	Текст = СтрЗаменить(Текст, "</body></html>", "");
	Текст = Текст + "<DIV class=PageHeader><span>Выдача автомобилей</span></DIV>";
	Текст = Текст + "<div class=""TableBox"">	
	|<TABLE border=2 cellSpacing=0 cellPadding=5 width=""100%"">
	|<TBODY>
	|<TR>
	|<TH scope=col>Время выдачи</TH>
	|<TH scope=col>" + ?(Объект.ВыводДиспетчера, "Диспетчер", "Мастер-приемщик") + "</TH>
	|<TH scope=col>Модель</TH>
	|<TH scope=col>Гос.номер</TH>
	|<TH scope=col>Клиент</TH>
	|<TH scope=col>Состояние</TH></TR>
	|</TR>";
	
	Если Выборка.Количество() = 0 Тогда
	    ПолеHTMLДокумента = " ";
		Возврат НомерСтроки;
	КонецЕсли;
	
	СчетчикСтрок = 0;
	
	Пока  Истина  Цикл  
		
		СчетчикСтрок = СчетчикСтрок + 1;
		
		Если СчетчикСтрок%2=0 Тогда
			Текст = Текст + "<TR class=""even"">";
		Иначе
			Текст = Текст + "<TR >";
		КонецЕсли;
		
		Текст = Текст + "<TD class=""nowrap"">" + ПодготовитьСтроку(Формат(Выборка.Время,"ДФ=ЧЧ:мм:сс")) + "</TD>";
		ПолеВывода = ?(Объект.ВыводДиспетчера, Выборка.Диспетчер, Выборка.Мастер);
		Текст = Текст + "<TD>" + ПодготовитьСтроку(ПолеВывода) + "</TD>";
		Если ТипЗнч(Выборка.СводныйРемонтныйЗаказАвтомобиль) = ТипЗнч(Справочники.Автомобили.ПустаяСсылка()) Тогда
			ГосНомер = Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(Выборка.СводныйРемонтныйЗаказАвтомобиль, 
											Перечисления.ДополнительнаяИнформацияАвтомобилей.ГосНомер,ТекущаяДатаСеанса());
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.СводныйРемонтныйЗаказАвтомобиль.Модель) + "</TD>";
			Текст = Текст + "<TD class=""nowrap"">" + ПодготовитьСтроку(ГосНомер) + "</TD>";
		Иначе
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.СводныйРемонтныйЗаказАвтомобиль) + "</TD>";
			Текст = Текст + "<TD> &nbsp </TD>";
		КонецЕсли;
		Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.СводныйРемонтныйЗаказЗаказчик) + "</TD>";
		Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.Состояние) + "</TD>";
		
		Текст = Текст + "</TR>";

		НомерСтроки = Выборка.НомерСтроки;
		
		Если СчетчикСтрок >= Объект.СтрокНаСтраницу Тогда
			Прервать;
		КонецЕсли;
		
		Если НЕ Выборка.Следующий() Тогда
			НомерСтроки = 0;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Текст = Текст + "</TABLE></DIV></BODY></HTML>";
	
	ПолеHTMLДокумента = Текст;

	Возврат НомерСтроки;
	
КонецФункции

// Формирует HTML код отчета для таблицы "Невыданные"
//
Функция СформироватьОтчетНевыданные(Объект, Выборка, ПолеHTMLДокумента, ВыведеноСотрудников) Экспорт 

	НомерСтроки = 999999;
	
	Макет = ПолучитьМакет("МакетHTML");
	Текст = Макет.ПолучитьТекст();
	
	Если Объект.Идентификатор <> Справочники.ОрганизацииПрисоединенныеФайлы.ПустаяСсылка() Тогда
		Центровка = "left";
		КартинкаЛоготипа = Base64Строка(РаботаСФайлами.ДвоичныеДанныеФайла(Объект.Идентификатор));
		Логотип = "<td align=""right""><img src=""data:image/jpeg;base64,"+КартинкаЛоготипа+""" width="+Объект.ШиринаЛоготипа+
					" height="+Объект.ВысотаЛоготипа+" ></td>";
	Иначе
		Центровка = "right";
		Логотип = "";
	КонецЕсли;
	Текст = СтрЗаменить(Текст, "Центровка", Центровка);
	Текст = СтрЗаменить(Текст, "Логотип", Логотип);
	
	ТекстCSS = ПолучитьМакет(Объект.ЦветоваяСхема).ПолучитьТекст();
	Текст = СтрЗаменить(Текст, "<!--style-->", ТекстCSS);
	
	Текст = СтрЗаменить(Текст, "font-size:16px;", "font-size:"+Объект.РазмерШрифта+"px;");
	
	ТекстТЗ = "<table border=2 cellSpacing=0 cellPadding=10 width=""200px"">";
	
	//должности
	ТекстТЗ = ТекстТЗ + "<tr>";
	ЕщеВывести = ВыведеноСотрудников + Мин(Объект.Сотрудники.Количество()-ВыведеноСотрудников, Объект.ФотоНаЭкран);
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			ИмяМастера = СокрЛП(ТекущаяСтрока.Сотрудник.Наименование);
			Должность = СокрЛП(ТекущаяСтрока.Сотрудник.Должность.Наименование);
			//должность
			Если Должность="Не определена" Тогда
				Должность="-";
			КонецЕсли;
			ТекстТЗ = ТекстТЗ + "<td align=""center"" style=""font: 20px arial"">"+Должность+"</td>";
		КонецЕсли;
	КонецЦикла; 
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	//фотки
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			Если ЗначениеЗаполнено(ТекущаяСтрока.Идентификатор) Тогда
				ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ТекущаяСтрока.Идентификатор);
			Иначе
				ДвоичныеДанные = БиблиотекаКартинок.ФотографияСотрудникаПоУмолчанию.ПолучитьДвоичныеДанные();
			КонецЕсли;
			
			ФотоМастера = Base64Строка(ДвоичныеДанные);
			ТекстТЗ = ТекстТЗ + "<td align=""center""><img src=""data:image/jpeg;base64,"+ФотоМастера+""" width="
						+Объект.ШиринаФото+" height="+Объект.ВысотаФото+"></td>";
		КонецЕсли;
	КонецЦикла;
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	ТекстТЗ = ТекстТЗ + "<tr>";
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			ИмяМастера = СокрЛП(ТекущаяСтрока.Сотрудник.Наименование);
			ТекстТЗ = ТекстТЗ + "<td align=""center"" style=""font: 18px arial"">"+ИмяМастера+"</td>";
		КонецЕсли;
	КонецЦикла;
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	ТекстТЗ = ТекстТЗ + "</table>"; //закроем ТЗ
	Текст = Текст + ТекстТЗ;
	
	Текст = СтрЗаменить(Текст, "</body></html>", "");
	Текст = Текст + "<DIV class=PageHeader><span>Невыданные автомобили</span></DIV>";
	Текст = Текст + "<div class=""TableBox"">	
	|<TABLE border=2 cellSpacing=0 cellPadding=5 width=""100%"">
	|<TBODY>
	|<TR>
	|<TH scope=col>Дата</TH>
	|<TH scope=col>" + ?(Объект.ВыводДиспетчера, "Диспетчер", "Мастер-приемщик") + "</TH>
	|<TH scope=col>Модель</TH>
	|<TH scope=col>Гос.номер</TH>
	|<TH scope=col>Клиент</TH>
	|<TH scope=col>Состояние</TH></TR>
	|</TR>";
	
	Если Выборка.Количество() = 0 Тогда
	    ПолеHTMLДокумента = " ";
		Возврат НомерСтроки;
	КонецЕсли;
	
	СчетчикСтрок = 0;
	
	Пока  Истина  Цикл  
		
		СчетчикСтрок = СчетчикСтрок + 1;
		
		Если СчетчикСтрок%2=0 Тогда
			Текст = Текст + "<TR class=""even"">";
		Иначе
			Текст = Текст + "<TR >";
		КонецЕсли;
		
		Текст = Текст + "<TD class=""nowrap"">" + ПодготовитьСтроку(Формат(Выборка.Дата,"ДФ=dd.MM.yyyy")) + "</TD>";
		ПолеВывода = ?(Объект.ВыводДиспетчера, Выборка.Диспетчер, Выборка.Мастер);
		Текст = Текст + "<TD>" + ПодготовитьСтроку(ПолеВывода) + "</TD>";
		Если ТипЗнч(Выборка.СводныйРемонтныйЗаказАвтомобиль) = ТипЗнч(Справочники.Автомобили.ПустаяСсылка()) Тогда
			ГосНомер = Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(Выборка.СводныйРемонтныйЗаказАвтомобиль,
											Перечисления.ДополнительнаяИнформацияАвтомобилей.ГосНомер, ТекущаяДатаСеанса());
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.СводныйРемонтныйЗаказАвтомобиль.Модель) + "</TD>";
			Текст = Текст + "<TD class=""nowrap"">" + ПодготовитьСтроку(ГосНомер) + "</TD>";
		Иначе
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.СводныйРемонтныйЗаказАвтомобиль) + "</TD>";
			Текст = Текст + "<TD> &nbsp </TD>";
		КонецЕсли;
		Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.СводныйРемонтныйЗаказЗаказчик) + "</TD>";
		Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.Состояние) + "</TD>";
		
		Текст = Текст + "</TR>";

		НомерСтроки = Выборка.НомерСтроки;
		
		Если СчетчикСтрок >= Объект.СтрокНаСтраницу Тогда
			Прервать;
		КонецЕсли;
		
		Если НЕ Выборка.Следующий() Тогда
			НомерСтроки = 0;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Текст = Текст + "</TABLE></DIV></BODY></HTML>";
	
	ПолеHTMLДокумента = Текст;

	Возврат НомерСтроки;
	
КонецФункции

// Формирует HTML код отчета для таблицы "Невыданные"
//
Функция СформироватьОтчетВРаботе(Объект, Выборка, ПолеHTMLДокумента, ВыведеноСотрудников) Экспорт 

	НомерСтроки = 999999;
	
	Макет = ПолучитьМакет("МакетHTML");
	Текст = Макет.ПолучитьТекст();
	
	Если Объект.Идентификатор <> Справочники.ОрганизацииПрисоединенныеФайлы.ПустаяСсылка() Тогда
		Центровка = "left";
		КартинкаЛоготипа = Base64Строка(РаботаСФайлами.ДвоичныеДанныеФайла(Объект.Идентификатор));
		Логотип = "<td align=""right""><img src=""data:image/jpeg;base64,"+КартинкаЛоготипа+""" width="+Объект.ШиринаЛоготипа+
					" height="+Объект.ВысотаЛоготипа+" ></td>";
	Иначе
		Центровка = "right";
		Логотип = "";
	КонецЕсли;
	Текст = СтрЗаменить(Текст, "Центровка", Центровка);
	Текст = СтрЗаменить(Текст, "Логотип", Логотип);
	
	ТекстCSS = ПолучитьМакет(Объект.ЦветоваяСхема).ПолучитьТекст();
	Текст = СтрЗаменить(Текст, "<!--style-->", ТекстCSS);
	
	Текст = СтрЗаменить(Текст, "font-size:16px;", "font-size:"+Объект.РазмерШрифта+"px;");
	
	ТекстТЗ = "<table border=2 cellSpacing=0 cellPadding=10 width=""200px"">";
	
	//должности
	ТекстТЗ = ТекстТЗ + "<tr>";
	ЕщеВывести = ВыведеноСотрудников + Мин(Объект.Сотрудники.Количество()-ВыведеноСотрудников, Объект.ФотоНаЭкран);
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			ИмяМастера = СокрЛП(ТекущаяСтрока.Сотрудник.Наименование);
			Должность = СокрЛП(ТекущаяСтрока.Сотрудник.Должность.Наименование);
			//должность
			Если Должность="Не определена" Тогда
				Должность="-";
			КонецЕсли;
			ТекстТЗ = ТекстТЗ + "<td align=""center"" style=""font: 20px arial"">"+Должность+"</td>";
		КонецЕсли;
	КонецЦикла; 
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	//фотки
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			Если ЗначениеЗаполнено(ТекущаяСтрока.Идентификатор) Тогда
				ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ТекущаяСтрока.Идентификатор);
			Иначе
				ДвоичныеДанные = БиблиотекаКартинок.ФотографияСотрудникаПоУмолчанию.ПолучитьДвоичныеДанные();
			КонецЕсли;
			
			ФотоМастера = Base64Строка(ДвоичныеДанные);
			ТекстТЗ = ТекстТЗ + "<td align=""center""><img src=""data:image/jpeg;base64,"+ФотоМастера+""" width="
						+Объект.ШиринаФото+" height="+Объект.ВысотаФото+"></td>";
		КонецЕсли;
	КонецЦикла;
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	ТекстТЗ = ТекстТЗ + "<tr>";
	Для Счетчик = ВыведеноСотрудников По ЕщеВывести-1 Цикл
		ТекущаяСтрока = Объект.Сотрудники[Счетчик];
		Если ТекущаяСтрока.Отображать Тогда
			ИмяМастера = СокрЛП(ТекущаяСтрока.Сотрудник.Наименование);
			ТекстТЗ = ТекстТЗ + "<td align=""center"" style=""font: 18px arial"">"+ИмяМастера+"</td>";
		КонецЕсли;
	КонецЦикла;
	ТекстТЗ = ТекстТЗ + "</tr>";
	
	ТекстТЗ = ТекстТЗ + "</table>"; //закроем ТЗ
	Текст = Текст + ТекстТЗ;
	
	Текст = СтрЗаменить(Текст, "</body></html>", "");
	Текст = Текст + "<DIV class=PageHeader><span>В работе</span></DIV>";
	Текст = Текст + "<div class=""TableBox"">	
	|<TABLE border=2 cellSpacing=0 cellPadding=5 width=""100%"">
	|<TBODY>
	|<TR>
	|<TH scope=col>Дата</TH>
	|<TH scope=col>" + ?(Объект.ВыводДиспетчера, "Диспетчер", "Мастер-приемщик") + "</TH>
	|<TH scope=col>Модель</TH>
	|<TH scope=col>Гос.номер</TH>
	|<TH scope=col>Клиент</TH>
	|<TH scope=col>Состояние</TH></TR>
	|</TR>";
	
	Если Выборка.Количество() = 0 Тогда
		ПолеHTMLДокумента = " ";
		Возврат НомерСтроки;
	КонецЕсли;
	
	СчетчикСтрок = 0;
	УстановитьПривилегированныйРежим(Истина);
	Пока Истина Цикл  
		
		СчетчикСтрок = СчетчикСтрок + 1;
		
		Если СчетчикСтрок%2=0 Тогда
			Текст = Текст + "<TR class=""even"">";
		Иначе
			Текст = Текст + "<TR >";
		КонецЕсли;
		
		Текст = Текст + "<TD class=""nowrap"">" + ПодготовитьСтроку(Формат(Выборка.Дата,"ДФ=dd.MM.yyyy")) + "</TD>";
		ПолеВывода = ?(Объект.ВыводДиспетчера, Выборка.Диспетчер, Выборка.Мастер);
		Текст = Текст + "<TD>" + ПодготовитьСтроку(ПолеВывода) + "</TD>";
		Если ТипЗнч(Выборка.СводныйРемонтныйЗаказАвтомобиль) = ТипЗнч(Справочники.Автомобили.ПустаяСсылка()) Тогда
			ГосНомер = Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(Выборка.СводныйРемонтныйЗаказАвтомобиль,
										Перечисления.ДополнительнаяИнформацияАвтомобилей.ГосНомер,ТекущаяДатаСеанса());
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.СводныйРемонтныйЗаказАвтомобиль.Модель) + "</TD>";
			Текст = Текст + "<TD class=""nowrap"">" + ПодготовитьСтроку(ГосНомер) + "</TD>";
		Иначе
			Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.СводныйРемонтныйЗаказАвтомобиль) + "</TD>";
			Текст = Текст + "<TD> &nbsp </TD>";
		КонецЕсли;
		Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.СводныйРемонтныйЗаказЗаказчик) + "</TD>";
		Текст = Текст + "<TD>" + ПодготовитьСтроку(Выборка.Состояние) + "</TD>";
		
		Текст = Текст + "</TR>";

		НомерСтроки = Выборка.НомерСтроки;
		
		Если СчетчикСтрок = Объект.СтрокНаСтраницу Тогда
			Прервать;
		КонецЕсли;
		
		Если НЕ Выборка.Следующий() Тогда
			НомерСтроки = 0;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Текст = Текст + "</TABLE></DIV></BODY></HTML>";
	
	ПолеHTMLДокумента = Текст;
	
	Возврат НомерСтроки;
	
КонецФункции

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

// Возвращает строку для заполнения в ячейку HTML таблицы
//
Функция ПодготовитьСтроку(Строка) 
	Если ЗначениеЗаполнено(Строка) Тогда
		Возврат Строка;
	Иначе
		Возврат "&nbsp";
	КонецЕсли;
КонецФункции //	ПодготовитьСтроку()

#КонецОбласти

#КонецЕсли