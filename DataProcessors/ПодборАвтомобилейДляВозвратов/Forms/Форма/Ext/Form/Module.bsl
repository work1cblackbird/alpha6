
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Попытка
		Объект.ДокументВозврата = Параметры.ДокументВозврата;
	Исключение
	КонецПопытки;
	
	Если Объект.ДокументВозврата=Неопределено Тогда
		Отказ=Истина; Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ДокументПродажи") Тогда
		ИмяРеквизитаДокумент = Параметры.ДокументПродажи;
	ИначеЕсли Параметры.Свойство("ДокументПередачи") Тогда
		ИмяРеквизитаДокумент = Параметры.ДокументПередачи;
	ИначеЕсли Параметры.Свойство("ДокументПоступления") Тогда
		ИмяРеквизитаДокумент = Параметры.ДокументПоступления;
	Иначе
		ИмяРеквизитаДокумент = Параметры.Партия;
	КонецЕсли;
	
	Если Параметры.Свойство("Покупатель") Тогда
		Покупатель = Параметры.Покупатель;
	КонецЕсли;
	Если Параметры.Свойство("Поставщик") Тогда
		Поставщик = Параметры.Поставщик;
	КонецЕсли;
	Если Параметры.Свойство("ДоговорВзаиморасчетов") Тогда
		ДоговорВзаиморасчетов = Параметры.ДоговорВзаиморасчетов;
	КонецЕсли;
	Если Параметры.Свойство("ДокументОснование") Тогда
		ДокументОснование = Параметры.ДокументОснование;
	КонецЕсли;
	Если Параметры.Свойство("ВозвратНам") Тогда
		Объект.ВозвратНам = Параметры.ВозвратНам;
	КонецЕсли;
	Если Параметры.Свойство("СтатусПартии") Тогда
		СтатусПартии = Параметры.СтатусПартии;
	КонецЕсли;
	
	Объект.ДатаНачала = ?(Параметры.ДокументВозврата.Дата = '00010101', НачалоМесяца(ТекущаяДатаСеанса()), НачалоМесяца(Параметры.ДокументВозврата.Дата));
	Объект.ДатаКонца = ?(Параметры.ДокументВозврата.Дата = '00010101', ТекущаяДатаСеанса(), КонецДня(Параметры.ДокументВозврата.Дата));
	
	СхемаКомпановкиДанных = Обработки.ПодборАвтомобилейДляВозвратов.ПолучитьМакет(Параметры.ВыборМакета);
	АдресСхемыКомпановкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпановкиДанных, УникальныйИдентификатор);
	Объект.НастройкиОтбораКомпоновщикаДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпановкиДанных));
	Объект.НастройкиОтбораКомпоновщикаДанных.ЗагрузитьНастройки(СхемаКомпановкиДанных.НастройкиПоУмолчанию);
	Макет = Параметры.ВыборМакета;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// перерисовываем деревце
	ОсновныеДействияОбновить();
	ОбщегоНазначенияАвтосалонКлиент.РазвернутьДерево(ЭтаФорма, "ДеревоВозвращаемыхАвтомобилей");
	Элементы.тДокументОснование.Заголовок = Строка(Объект.ДокументВозврата);
	// заголовки колонок
	Элементы.ДеревоВозвращаемыхАвтомобилей.ПодчиненныеЭлементы.ДеревоВозвращаемыхАвтомобилейОборот.Заголовок=?(Объект.ВозвратНам,"Продали","Купили");
	Элементы.ДеревоВозвращаемыхАвтомобилей.ПодчиненныеЭлементы.ДеревоВозвращаемыхАвтомобилейЦена.Видимость=НЕ Объект.ВозвратНам;
	// если установлен фильтр по номенклатуре, тогда дадим только выбрать партию
	Попытка
		Элементы.ДеревоВозвращаемыхАвтомобилей.Колонки.Вернуть.Видимость=НЕ Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор.Автомобиль.Использование;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Модифицированность Тогда
		Отказ = Истина;
		Режим = РежимДиалогаВопрос.ДаНетОтмена;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Перенести данные в документ?';"), Режим, 0);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыборПериодаНажатие()
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПериода", ЭтаФорма, Параметры);
	Диалог.Период.ДатаНачала = Объект.ДатаНачала;
	Диалог.Период.ДатаОкончания = Объект.ДатаКонца;
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПериода(Период, ДополнительныеПараметры) Экспорт
	
	Если НЕ Период = Неопределено Тогда
		Объект.ДатаНачала = Период.ДатаНачала;
		Объект.ДатаКонца = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	Если Объект.ДатаНачала > Объект.ДатаКонца Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Дата начала не может быть больще даты конца.'"));
		Объект.ДатаНачала = Объект.ДатаКонца - 60*60*24;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонцаПриИзменении(Элемент)
	Если Объект.ДатаНачала > Объект.ДатаКонца Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Дата конца не может быть меньше даты начала.'"));
		Объект.ДатаКонца = Объект.ДатаНачала + 60*60*24;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоВозвращаемыхАвтомобилей

&НаКлиенте
Процедура ДеревоВозвращаемыхАвтомобилейВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Элементы.ДеревоВозвращаемыхАвтомобилей.ПодчиненныеЭлементы.ДеревоВозвращаемыхАвтомобилейВернуть.Видимость Тогда
		// откроем форму автомобиля или документа
		Если Колонка=Элементы.ДеревоВозвращаемыхАвтомобилей.ПодчиненныеЭлементы.ДеревоВозвращаемыхАвтомобилейОбъект Тогда
			СтандартнаяОбработка=Ложь;
			//ОткрытьЗначение(Элементы.ДеревоВозвращаемыхАвтомобилей.ТекущиеДанные.Объект);
			СсылкаНаОбъект = Элементы.ДеревоВозвращаемыхАвтомобилей.ТекущиеДанные.Объект;
			ПараметрыФормы = Новый Структура("Ключ", СсылкаНаОбъект);
			Результат = ДеревоВозвращаемыхАвтомобилейВыборНаСервере(СсылкаНаОбъект);
			Если Результат = "Автомобили" Тогда
				ОткрытьФорму("Справочник.Автомобили.ФормаОбъекта", ПараметрыФормы);
			ИначеЕсли Результат = "РеализацияАвтомобилей" Тогда
				ОткрытьФорму("Документ.РеализацияАвтомобилей.ФормаОбъекта", ПараметрыФормы);
			КонецЕсли;
		ИначеЕсли НЕ Колонка=Элементы.ДеревоВозвращаемыхАвтомобилей.ПодчиненныеЭлементы.ДеревоВозвращаемыхАвтомобилейВернуть Тогда
			СтандартнаяОбработка=Ложь;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(Элементы.ДеревоВозвращаемыхАвтомобилей.ТекущиеДанные.Объект) Тогда Возврат; КонецЕсли;
		ВладелецФормы=Элементы.ДеревоВозвращаемыхАвтомобилей.ТекущиеДанные.Объект;
		Модифицированность=Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ДеревоВозвращаемыхАвтомобилейВыборНаСервере(СсылкаНаОбъект)
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияАвтомобилей") Тогда
		Возврат "РеализацияАвтомобилей";
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Автомобили") Тогда
		Возврат "Автомобили";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ДеревоВозвращаемыхАвтомобилейПриИзменении(Элемент)
	ТекСтрока=Элементы.ДеревоВозвращаемыхАвтомобилей.ТекущиеДанные;
	Если ТекСтрока=Неопределено Тогда Возврат; КонецЕсли;
	// Если изменили количество на строке родителя, то распределим его по потомкам, иначе просуммируем родителя.
	Если ТекСтрока.Родитель=Неопределено Тогда
		// родительская строка
		ВведенноеКоличество=ТекСтрока.Вернуть;
		Для Каждого ПолученнаяСтрока Из ДеревоВозвращаемыхАвтомобилей.ПолучитьЭлементы() Цикл
			Для Каждого ПодчиненнаяСтрока Из ПолученнаяСтрока.ПолучитьЭлементы() Цикл
				Если ПодчиненнаяСтрока.Родитель = ТекСтрока.Объект Тогда
					ПодчиненнаяСтрока.Вернуть=?(ВведенноеКоличество<=0,0,Мин(ПодчиненнаяСтрока.Оборот,ВведенноеКоличество));
					Если ВведенноеКоличество > ПодчиненнаяСтрока.Оборот Тогда
						ТекСтрока.Вернуть = ПодчиненнаяСтрока.Оборот;
					КонецЕсли;
					ВведенноеКоличество=ВведенноеКоличество-ПодчиненнаяСтрока.Вернуть;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Иначе
		// подчиненная строка
		СтрокаРодитель = ТекСтрока.Родитель;
		Для Каждого ПолученнаяСтрока Из ДеревоВозвращаемыхАвтомобилей.ПолучитьЭлементы() Цикл
			Если ПолученнаяСтрока.Объект = СтрокаРодитель Тогда
				ПолученнаяСтрока.Вернуть = 0;
			КонецЕсли;
			Для Каждого ПодчиненнаяСтрока Из ПолученнаяСтрока.ПолучитьЭлементы() Цикл
				Если ПодчиненнаяСтрока.Родитель = СтрокаРодитель Тогда
					Если ТекСтрока.Вернуть > ПодчиненнаяСтрока.Оборот Тогда
						ПодчиненнаяСтрока.Вернуть = ПодчиненнаяСтрока.Оборот;
					КонецЕсли;
					ПолученнаяСтрока.Вернуть = ПолученнаяСтрока.Вернуть + ПодчиненнаяСтрока.Вернуть;
					Если ПодчиненнаяСтрока.Вернуть > 0 Тогда
						ПодчиненнаяСтрока.Картинка = 1;
					Иначе
						ПодчиненнаяСтрока.Картинка = 2;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыборПериода(Команда)
	ВыборПериодаНажатие();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОсновныеДействияОбновить();
	ОбщегоНазначенияАвтосалонКлиент.РазвернутьДерево(ЭтаФорма, "ДеревоВозвращаемыхАвтомобилей");
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Результат = ОсновныеДействияФормыОк();
	Закрыть(ДанныеВозврата);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// выполняет запрос и обновляет деревце
&НаСервере
Процедура ОсновныеДействияОбновить()
	
	СКД = Обработки.ПодборАвтомобилейДляВозвратов.ПолучитьМакет(Макет);
	ВидВыбора = Макет;
	
	Если ЗначениеЗаполнено(Покупатель) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор, 
			"Покупатель", 
			Покупатель, 
			ВидСравненияКомпоновкиДанных.Равно,,
			Истина);
	КонецЕсли;
	Если ЗначениеЗаполнено(Поставщик) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор, 
			"Поставщик", 
			Поставщик, 
			ВидСравненияКомпоновкиДанных.Равно,,
			Истина);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДоговорВзаиморасчетов) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор, 
			"ДоговорВзаиморасчетов", 
			ДоговорВзаиморасчетов, 
			ВидСравненияКомпоновкиДанных.Равно,,
			Истина);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор, 
			"Документ", 
			ДокументОснование, 
			ВидСравненияКомпоновкиДанных.Равно,,
			Истина);
	КонецЕсли;
	Если ЗначениеЗаполнено(СтатусПартии) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор, 
			"СтатусПартии", 
			СтатусПартии, 
			ВидСравненияКомпоновкиДанных.Равно,,
			Истина);
	КонецЕсли;
	
	СхемаКомпановкиДанных = ПоместитьВоВременноеХранилище(СКД);
	
	Дерево = Обработки.ПодборАвтомобилейДляВозвратов.ОбновитьНаСервереММ(Объект, СхемаКомпановкиДанных, ВидВыбора);
	
	// полезные переменные
	ВалютаУпр=Константы.ВалютаУправленческогоУчетаКомпании.Получить(); 
	Попытка
		КурсУпр=Объект.ДокументВозврата.КурсВалютыУпр;
	Исключение
		КурсУпр=Неопределено;
	КонецПопытки;
	Если КурсУпр=Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр,Объект.ДокументВозврата.Дата);
		КурсУпр		   = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;
	
	Попытка
		Если Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор.Документ.Использование Тогда
			Элементы.тДокументОснование.Видимость=Истина;
			Элементы.тДокументОснование.Заголовок=?(Объект.ВозвратНам,"Отгрузка: ","Поставка: ")+СокрЛП(Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор.Документ.Значение);
			ДатаНачала=Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор.Документ.Значение.Дата; Объект.ДатаКонца=Объект.ДатаНачала;
			Элементы.ВыборПериода.Доступность=Ложь;
			Элементы.ДатаНачала.Доступность=Ложь; 
			Элементы.ДатаКонца.Доступность=Ложь;
		Иначе
			ПерейтиВБлокИсключение = 1/0;
		КонецЕсли;
	Исключение
		Элементы.тДокументОснование.Видимость=Ложь;
	КонецПопытки;
	
	// Получим запрос для поиска цены закупки
	// идем по выборке и рисуем дерево.
	Если ДеревоВозвращаемыхАвтомобилей.ПолучитьЭлементы().Количество() > 0 Тогда
		ДеревоВозвращаемыхАвтомобилей.ПолучитьЭлементы().Очистить();
	КонецЕсли;
	СтрокаРодитель=Неопределено; СтруктураОтбора=Новый Структура("Автомобиль,"+ИмяРеквизитаДокумент);
	Если Дерево.Строки.Количество() > 0 Тогда
		Для Каждого Выборка Из Дерево.Строки Цикл
			Если СтрокаРодитель=Неопределено ИЛИ СтрокаРодитель.Объект<>Выборка.Документ Тогда
				СтрокаРодитель=ДеревоВозвращаемыхАвтомобилей.ПолучитьЭлементы().Добавить();
				СтрокаРодитель.Объект=Выборка.Документ;
				СтруктураОтбора[ИмяРеквизитаДокумент]=СтрокаРодитель.Объект;
				СтрокаРодитель.Родитель = Неопределено;
			КонецЕсли;
			НоваяСтрока=СтрокаРодитель.ПолучитьЭлементы().Добавить();
			НоваяСтрока.Объект=Выборка.Автомобиль;
			НоваяСтрока.Оборот=Выборка.Оборот;
			НоваяСтрока.Остаток=Выборка.Остаток;
			НоваяСтрока.Родитель=СтрокаРодитель.Объект;
			НоваяСтрока.Сумма=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(Выборка.СуммаУпр,ВалютаУпр,КурсУпр,Объект.ДокументВозврата.ВалютаДокумента,Объект.ДокументВозврата.КурсДокумента);
			//НоваяСтрока.СуммаРозничная=Выборка.СуммаРозн;
			// поищем в документе партии наш автомобиль и получим его цену.
			Если НЕ Объект.ВозвратНам Тогда
				Если ТипЗнч(СтрокаРодитель.Объект)=Тип("ДокументСсылка.ВводОстатковАвтомобилей") Тогда
					ЗапросЦена=Новый Запрос("
					|ВЫБРАТЬ ПЕРВЫЕ 1
					|	ВводОстатковАвтомобилейАвтомобили.Автомобиль КАК Автомобиль,
					|	ВводОстатковАвтомобилейАвтомобили.Цена КАК Цена
					|ИЗ
					|	Документ.ВводОстатковАвтомобилей.Автомобили КАК ВводОстатковАвтомобилейАвтомобили
					|ГДЕ
					|	ВводОстатковАвтомобилейАвтомобили.Ссылка=&Ссылка
					|	И ВводОстатковАвтомобилейАвтомобили.Автомобиль=&Автомобиль");
				ИначеЕсли ТипЗнч(СтрокаРодитель.Объект)=Тип("ДокументСсылка.ИнвентаризацияАвтомобилей") Тогда
					ЗапросЦена=Новый Запрос("
					|ВЫБРАТЬ ПЕРВЫЕ 1
					|	ИнвентаризацияАвтомобилейАвтомобили.Автомобиль КАК Автомобиль,
					|	ИнвентаризацияАвтомобилейАвтомобили.Цена КАК Цена
					|ИЗ
					|	Документ.ИнвентаризацияАвтомобилей.Автомобили КАК ИнвентаризацияАвтомобилейАвтомобили
					|ГДЕ
					|	ИнвентаризацияАвтомобилейАвтомобили.Ссылка=&Ссылка
					|	И ИнвентаризацияАвтомобилейАвтомобили.Автомобиль=&Автомобиль");
				Иначе
					ЗапросЦена=Новый Запрос("
					|ВЫБРАТЬ ПЕРВЫЕ 1
					|	ПоступлениеАвтомобилейАвтомобили.Автомобиль КАК Автомобиль,
					|	ПоступлениеАвтомобилейАвтомобили.Цена КАК Цена
					|ИЗ
					|	Документ.ПоступлениеАвтомобилей.Автомобили КАК ПоступлениеАвтомобилейАвтомобили
					|ГДЕ
					|	ПоступлениеАвтомобилейАвтомобили.Ссылка=&Ссылка
					|	И ПоступлениеАвтомобилейАвтомобили.Автомобиль=&Автомобиль");
				КонецЕсли; 
				ЗапросЦена.УстановитьПараметр("Ссылка", СтрокаРодитель.Объект);
				ЗапросЦена.УстановитьПараметр("Автомобиль", НоваяСтрока.Объект);
				РезультатЦена=ЗапросЦена.Выполнить();
				Если НЕ РезультатЦена.Пустой() Тогда
					ВыборкаЦена=РезультатЦена.Выбрать(); ВыборкаЦена.Следующий();
					НоваяСтрока.Цена=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаЦена.Цена,ВалютаУпр,КурсУпр,Объект.ДокументВозврата.ВалютаДокумента,Объект.ДокументВозврата.КурсДокумента);
				КонецЕсли;
			КонецЕсли;
			// поищем в документе количество возвращенного товара
			СтруктураОтбора.Автомобиль=НоваяСтрока.Объект;
			НайденныеСтроки=Объект.ДокументВозврата.Автомобили.НайтиСтроки(СтруктураОтбора);
			Если НайденныеСтроки.Количество()>0 Тогда
				Попытка
					НоваяСтрока.Вернуть=НайденныеСтроки[0].Количество;
				Исключение
				КонецПопытки;
			КонецЕсли;
			// просуммируем данные строки родителя
			СтрокаРодитель.Оборот			= СтрокаРодитель.Оборот+НоваяСтрока.Оборот;
			СтрокаРодитель.Остаток			= СтрокаРодитель.Остаток+НоваяСтрока.Остаток;
			СтрокаРодитель.Сумма			= СтрокаРодитель.Сумма+НоваяСтрока.Сумма;
			//СтрокаРодитель.СуммаРозничная	= СтрокаРодитель.СуммаРозничная+НоваяСтрока.СуммаРозничная;
			СтрокаРодитель.Вернуть			= СтрокаРодитель.Вернуть+НоваяСтрока.Вернуть;
			СтрокаРодитель.Картинка = 0;
			Если НоваяСтрока.Вернуть > 0 Тогда
				НоваяСтрока.Картинка = 1;
			Иначе
				НоваяСтрока.Картинка = 2;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// переносим данные в документ
&НаСервере
Функция ОсновныеДействияФормыОк()
	ЕстьИдентификаторАвтомобиля=(Объект.ДокументВозврата.Метаданные().ТабличныеЧасти.Автомобили.Реквизиты.Найти("ИдентификаторАвтомобиля")<>Неопределено);
	СтруктураОтбора=Новый Структура("Автомобиль,"+ИмяРеквизитаДокумент);
	
	ДокументВозврата = Объект.ДокументВозврата.ПолучитьОбъект();
	
	// идем по строкам дерева и переносим 
	Для Каждого СтрокаРодитель Из ДеревоВозвращаемыхАвтомобилей.ПолучитьЭлементы() Цикл
		// подчиненные строки
		Для Каждого ПодчиненнаяСтрока Из СтрокаРодитель.ПолучитьЭлементы() Цикл
			// поищем подобную строку в документе
			СтруктураОтбора[ИмяРеквизитаДокумент]=СтрокаРодитель.Объект;
			СтруктураОтбора.Автомобиль=ПодчиненнаяСтрока.Объект; 
			МассивНайденныхСтрок=ДокументВозврата.Автомобили.НайтиСтроки(СтруктураОтбора);
			// смотрим что нашли
			Если МассивНайденныхСтрок.Количество()>0 Тогда
				// Нашли такую строку, посмотрим, если мы определили для такой строки количество 0, то удалим ее.
				Если ПодчиненнаяСтрока.Вернуть=0 Тогда
					ТекСтрока = МассивНайденныхСтрок[0];
					Если ЕстьИдентификаторАвтомобиля Тогда
						ИдентификаторАвтомобиля = ТекСтрока.ИдентификаторАвтомобиля;
					КонецЕсли; 
					ДокументВозврата.Автомобили.Удалить(ТекСтрока);
					Попытка
						СтрокиТоваров = ДокументВозврата.Товары.НайтиСтроки(Новый Структура("ИдентификаторАвтомобиля", ИдентификаторАвтомобиля));
						Для каждого СтрокаТоваров Из СтрокиТоваров Цикл
							ДокументВозврата.Товары.Удалить(СтрокаТоваров);
						КонецЦикла;
					Исключение
					КонецПопытки;
					Продолжить;
				Иначе
					ТекСтрока=МассивНайденныхСтрок[0];
				КонецЕсли;
			ИначеЕсли ПодчиненнаяСтрока.Вернуть>0 Тогда
				// ну нет!!! нет у меня телевизора !!!
				ДанныеВозвратаСтрока = ДанныеВозврата.Добавить();
				ДанныеВозвратаСтрока.Автомобиль = ПодчиненнаяСтрока.Объект;
				ДанныеВозвратаСтрока.Документ = СтрокаРодитель.Объект;
				ДанныеВозвратаСтрока.Количество = ПодчиненнаяСтрока.Вернуть;
				ДанныеВозвратаСтрока.Цена = ПодчиненнаяСтрока.Цена;
				ДанныеВозвратаСтрока.Сумма = ПодчиненнаяСтрока.Сумма;
				Если ЕстьИдентификаторАвтомобиля Тогда
					ДанныеВозвратаСтрока.Идентификатор = Новый УникальныйИдентификатор;
				КонецЕсли;
			Иначе
				// строки такой нет, вернуть=0, а че нам тогда делать ?
				Продолжить;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	// закрываем форму
	Модифицированность=Ложь;
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Результат=КодВозвратаДиалога.Да Тогда
		ОсновныеДействияФормыОк();
	ИначеЕсли Результат=КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

