#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.ВыбКаталог) Тогда
		ИмяПути = КаталогВременныхФайлов();
		
		// В случае отсутствия подкаталога "Exchange", создадим его
		Если НайтиФайлы(ИмяПути, "Exchange").Количество() = 0 Тогда СоздатьКаталог(ИмяПути + "Exchange"); КонецЕсли;
		Объект.ВыбКаталог = ИмяПути + "Exchange";
		
		Если НЕ ПроверитьСуществованияФайла(Объект.ВыбКаталог) Тогда
			Объект.ВыбКаталог	= КаталогВременныхФайлов()+"Exchange";
		КонецЕсли;
	КонецЕсли;
	
	УправленческийУчет = Истина;
	РегламентированныйУчет = Ложь;
	Если УправленческийУчет Тогда
		перУправленческийУчет = "Упр" 
	Иначе 
		перУправленческийУчет = "Рег"; 
	КонецЕсли;
	
	// Установим вид учета
	Попытка 
		Если ПраваИНастройкиПользователя.Значение("ВидУчета") = Перечисления["ВидыУчета"].УправленческийИРегламентированный Тогда
			Элементы.перУправленческийУчет.Видимость = Истина;
			УправленческийУчет = Ложь;
		Иначе
			Элементы.перУправленческийУчет.Видимость = Ложь;
			Если ПраваИНастройкиПользователя.Значение("ВидУчета") = Перечисления["ВидыУчета"].Управленческий Тогда
				УправленческийУчет = Истина;
				РегламентированныйУчет = Ложь;
			Иначе
				УправленческийУчет = Ложь;
				РегламентированныйУчет = Истина;
			КонецЕсли;
		КонецЕсли;
	Исключение
		Элементы.перУправленческийУчет.Видимость = Ложь;
		УправленческийУчет = Ложь;
		РегламентированныйУчет = Истина;
	КонецПопытки;
	Если Объект.УправленческийУчет Тогда
		перУправленческийУчет = "Упр" 
	Иначе 
		перУправленческийУчет = "Рег"; 
	КонецЕсли;
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ИнициализироватьВидыСправочников();
	ОбработкаОбъект.ИнициализироватьВидыДокументов();
	// Инициализируем таблицу объектов к выгрузке
	Общие					= Новый ОписаниеТипов(ОбработкаОбъект.ОбщиеТипы);
	ТипыОбъектовКВыгрузке	= Новый ОписаниеТипов(Общие, ОбработкаОбъект.СпецТипы);
	Элементы.ОбъектыКВыгрузкеОбъект.ОграничениеТипа = ТипыОбъектовКВыгрузке;
	ОбработкаОбъект.ВыгружатьСправочникиПоСсылкам = Истина;  // Её снятие грозит проблемой при загурузке
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолеПериодПриИзменении(Элемент)
	Объект.НачалоПериода = Период.ДатаНачала;
	Объект.КонецПериода  = Период.ДатаОкончания;
КонецПроцедуры

&НаКлиенте
// Обработчик реквизита "Каталог выгрузки"
// вызывает диалог выбора каталога.
Процедура ВыбКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Создание объекта
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Каталог   = Объект.ВыбКаталог;
	ДиалогВыбора.Заголовок = НСтр("ru = 'Выберите каталог'") + " ...";
	
	// Вызов диалога выбора ...
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбКаталогНачалоВыбораЗавершение",
													ЭтотОбъект, Новый Структура("ДиалогВыбора", ДиалогВыбора));
	ДиалогВыбора.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбКаталогНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогВыбора = ДополнительныеПараметры.ДиалогВыбора;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		// Запоминаем выбранный каталог
		Объект.ВыбКаталог = ДиалогВыбора.Каталог;
	КонецЕсли;
	
	Элементы.кнОткрытьФайлВыгрузки.Доступность = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура перУправленческийУчетПриИзменении(Элемент)
	
	Если перУправленческийУчет = "Упр" Тогда 
		Объект.УправленческийУчет = Истина;
		Объект.РегламентированныйУчет=Ложь;
	Иначе
		Объект.УправленческийУчет = Ложь;
		Объект.РегламентированныйУчет=Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПанельОбъектовПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитьВидимостьОтСтраницы();
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьВыгруженныеПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КоманднаяПанельНизкнОткрытьФайлВыгрузки(Команда)
	ОткрытьФайлВыгрузки();
КонецПроцедуры

&НаКлиенте
Процедура КпВидыСправочниковПометитьВсе(Команда)
	УстановитьПометки(Команда);
КонецПроцедуры

&НаКлиенте
Процедура КпВидыСправочниковСнятьВсе(Команда)
	УстановитьПометки(Команда);
КонецПроцедуры

&НаКлиенте
Процедура КнВидыДокументовСнятьВсе(Команда)
	УстановитьПометки(Команда);
КонецПроцедуры

&НаКлиенте
Процедура КпВидыДокументовПометитьВсе(Команда)
	УстановитьПометки(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьСправочники(Команда)
	
	КаталогПроверки = Новый Файл(Объект.ВыбКаталог);
	КаталогПроверки.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ВыгрузитьСправочникиЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьСправочникиЗавершение(Существует, ДополнительныеПараметры) Экспорт
	
	Если НЕ Существует Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Выбранный каталог %1 не существует'"),Объект.ВыбКаталог),,"Объект.ВыбКаталог");
		Возврат;
	КонецЕсли;	
	
	ОбработкаПрерыванияПользователя();
	ПоказатьОповещениеПользователя("Ждите",, НСтр("ru = 'Идет поиск ссылок в справочниках'") + " ...",БиблиотекаКартинок.ДлительнаяОперация48);
	
	НачалоРаботы = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	СтруктураРезультатаВыгрузки = Новый Структура();
	СтруктураРезультатаВыгрузки.Вставить("Успешно", Ложь);
	
	АдресФайла = ВыгрузитьСправочникиНаСервере(СтруктураРезультатаВыгрузки);
	
	Если Объект.ЭтоКлиент Тогда
		// Передадим файл с сервера на клиента
		Если АдресФайла<>Неопределено Тогда
			ПолучитьФайл(АдресФайла, СокрЛП(Объект.ВыбКаталог)+"\"+Объект.ИмяФайла, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураРезультатаВыгрузки.Успешно Тогда
		
		Если СтруктураРезультатаВыгрузки.Свойство("Сообщить") Тогда
			
			Для Каждого Сообщение Из СтруктураРезультатаВыгрузки.Сообщить Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение);	
			КонецЦикла;
			
		КонецЕсли;
		
		Если Объект.ПоказатьВыгруженные Тогда
			Элементы.ПанельОбъектов.ТекущаяСтраница = Элементы.СтраницаВыгруженныеОбъекты;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Формирование файла выгрузки завершено.'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'ВЫГРУЗКА ЗАВЕРШЕНА. Имя файла: %1 \ %2'"),Объект.ВыбКаталог, Объект.ИмяФайла)
		);
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Начало формирования файла выгрузки: %1, окончание: %2'"),НачалоРаботы,ОбщегоНазначенияКлиент.ДатаСеанса())
		);
		
		Если Объект.ОткрыватьФайлВыгрузки Тогда
			
			ОткрытьФайлВыгрузки();
			
		КонецЕсли;
		
		
	ИначеЕсли СтруктураРезультатаВыгрузки.Свойство("Предупреждение") Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтруктураРезультатаВыгрузки.Предупреждение);
		
	КонецЕсли;
	
	Если Объект.ПоказыватьДеревоСсылок Тогда
		ОткрытьФорму("Обработка.ВыгрузкаДанныхБух.Форма.ФормаДереваСсылок", Новый Структура("ДеревоСсылок", СтруктураРезультатаВыгрузки.ДеревоСсылок), ЭтаФорма);
	КонецЕсли;
	
	Элементы.кнОткрытьФайлВыгрузки.Доступность = ЗначениеЗаполнено(Объект.ИмяФайла);

КонецПроцедуры

&НаКлиенте
Процедура КнопкаВыгрузитьНажатие(Команда)
	
	КаталогПроверки = Новый Файл(Объект.ВыбКаталог);
	КаталогПроверки.НачатьПроверкуСуществования(Новый ОписаниеОповещения("КнопкаВыгрузитьНажатиеЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВыгрузитьНажатиеЗавершение(Существует, ДополнительныеПараметры) Экспорт
	
	Если НЕ Существует Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Выбранный каталог %1 не существует'"),Объект.ВыбКаталог),,"Объект.ВыбКаталог");
		Возврат;
	КонецЕсли;	
	
	ОбработкаПрерыванияПользователя();
	ПоказатьОповещениеПользователя("Ждите",, НСтр("ru = 'Идет поиск ссылок'") + " ...",БиблиотекаКартинок.ДлительнаяОперация48);
	
	НачалоРаботы = ОбщегоНазначенияКлиент.ДатаСеанса(); 
	
	СтруктураРезультатаВыгрузки = Новый Структура();
	СтруктураРезультатаВыгрузки.Вставить("ИмяФайла");
	СтруктураРезультатаВыгрузки.Вставить("Успешно", Ложь);
	
	НачальноеИмяКаталога = Объект.ВыбКаталог;
	
	АдресФайла = Выгрузить(СтруктураРезультатаВыгрузки);
	
	Если Объект.ЭтоКлиент Тогда
		// Передадим файл с сервера на клиента
		Объект.ВыбКаталог = НачальноеИмяКаталога;
		Если АдресФайла<>Неопределено Тогда
			ПолучитьФайл(АдресФайла, СокрЛП(Объект.ВыбКаталог)+"\"+Объект.ИмяФайла, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураРезультатаВыгрузки.Успешно Тогда
		
		Если СтруктураРезультатаВыгрузки.Свойство("Сообщить") Тогда
			
			Для Каждого Сообщение Из СтруктураРезультатаВыгрузки.Сообщить Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение);	
			КонецЦикла;
			
		КонецЕсли;
		
		Если Объект.ПоказатьВыгруженные Тогда
			Элементы.ПанельОбъектов.ТекущаяСтраница = Элементы.СтраницаВыгруженныеОбъекты;	
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Формирование файла выгрузки завершено.'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'ВЫГРУЗКА ЗАВЕРШЕНА. Имя файла: %1 \ %2'"),Объект.ВыбКаталог, Объект.ИмяФайла)
		);
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Начало формирования файла выгрузки: %1, окончание: %2'"),НачалоРаботы,ОбщегоНазначенияКлиент.ДатаСеанса())
		);
		
		Если Объект.ОткрыватьФайлВыгрузки Тогда
			
			ОткрытьФайлВыгрузки();
			
		КонецЕсли;
		
	ИначеЕсли СтруктураРезультатаВыгрузки.Свойство("Предупреждение") Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтруктураРезультатаВыгрузки.Предупреждение);
		
	КонецЕсли;
	Если Объект.ПоказыватьДеревоСсылок Тогда
		ОткрытьФорму("Обработка.ВыгрузкаДанныхБух.Форма.ФормаДереваСсылок", Новый Структура("ДеревоСсылок", СтруктураРезультатаВыгрузки.ДеревоСсылок), ЭтаФорма);
	КонецЕсли;
	
	Элементы.кнОткрытьФайлВыгрузки.Доступность = ЗначениеЗаполнено(Объект.ИмяФайла);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура установки/снятия пометок на закладке Виды справочников
&НаКлиенте
Процедура УстановитьПометки(Кнопка)
	Для Каждого ТекСтрока Из ?(СтрНайти(Кнопка.Имя, "Документов")>0, Объект.ВидыДокументов, Объект.ВидыСправочников) Цикл
		ТекСтрока.Пометка = (СтрНайти(Кнопка.Имя, "ПометитьВсе"));
	КонецЦикла;
КонецПроцедуры //УстановитьПометки	

// Функция проверяет существование пути к каталогу
&НаСервере
Функция ПроверитьСуществованияФайла(ВыбКаталог)
	
	КаталогПроверки = Новый Файл(ВыбКаталог);
	
	Если НЕ КаталогПроверки.Существует() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимость();
	
	Элементы.СтраницаВыгруженныеОбъекты.Видимость = Объект.ПоказатьВыгруженные;
	Элементы.кнОткрытьФайлВыгрузки.Доступность    = Объект.ОткрыватьФайлВыгрузки;
	
	УстановитьВидимостьОтСтраницы();
	ИзменитьРежимОбработки(Объект.ЭтоКлиент);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьОтСтраницы()
	
	Если Элементы.ПанельОбъектов.ТекущаяСтраница = Элементы.СтраницаВидыДокументов Тогда
		Элементы.Выгрузить.Доступность            = Истина;
		Элементы.ВыгрузитьСправочники.Доступность = Ложь;
	ИначеЕсли Элементы.ПанельОбъектов.ТекущаяСтраница = Элементы.СтраницаВидыСправочников Тогда
		Элементы.ВыгрузитьСправочники.Доступность = Истина;
		Элементы.Выгрузить.Доступность            = Ложь;
	ИначеЕсли Элементы.ПанельОбъектов.ТекущаяСтраница = Элементы.СтраницаОбъектыКВыгрузке Тогда
		Элементы.Выгрузить.Доступность            = Истина;
		Элементы.ВыгрузитьСправочники.Доступность = Ложь;
	Иначе
		Элементы.ВыгрузитьСправочники.Доступность = Ложь;
		Элементы.Выгрузить.Доступность            = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыСправочниковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВидыДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВидыДокументовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВидыСправочниковПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НаКлиенте(Команда)
	Если НЕ Объект.ЭтоКлиент Тогда
		Объект.ЭтоКлиент = Истина;
		ИзменитьРежимОбработки(Объект.ЭтоКлиент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаСервере(Команда)
	Если Объект.ЭтоКлиент Тогда
		Объект.ЭтоКлиент = Ложь;
		ИзменитьРежимОбработки(Объект.ЭтоКлиент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРежимОбработки(РежимРаботы)
	ГруппаРежима = КоманднаяПанель.ПодчиненныеЭлементы.РежимОбработки.ПодчиненныеЭлементы;
	ГруппаРежима.НаКлиенте.Пометка = РежимРаботы;
	ГруппаРежима.НаСервере.Пометка = Не РежимРаботы;
	
	КоманднаяПанель.ПодчиненныеЭлементы.РежимОбработки.Заголовок = 
	?(РежимРаботы, НСтр("ru = 'Режим работы (на клиенте)'"), НСтр("ru = 'Режим работы (на сервере)'"));
КонецПроцедуры

&НаКлиенте
Процедура кпКопироватьОбъект(Команда)
	Если Элементы.ОбъектыКВыгрузке.ТекущаяСтрока <> Неопределено Тогда
		НовСтр = Объект.ОбъектыКВыгрузке.Добавить();
		НовСтр.Объект = Элементы.ОбъектыКВыгрузке.ТекущиеДанные.Объект;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КпУдалитьОбъект(Команда)
	Если Элементы.ОбъектыКВыгрузке.ТекущаяСтрока <> Неопределено Тогда
		УдаляемаяСтрока = Объект.ОбъектыКВыгрузке.НайтиПоИдентификатору(Элементы.ОбъектыКВыгрузке.ТекущаяСтрока);
		Объект.ОбъектыКВыгрузке.Удалить(УдаляемаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура кпДобавитьОбъект(Команда)
	НовСтр = Объект.ОбъектыКВыгрузке.Добавить();
	Элементы.ОбъектыКВыгрузке.ТекущаяСтрока = НовСтр.ПолучитьИдентификатор();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлВыгрузки()
	
	СтрСообщений = "";
	Если ПустаяСтрока(Объект.ИмяФайла) Тогда 
		СтрСообщений = НСтр("ru = 'Файл выгрузки не создан.'") + Символы.ПС;
	КонецЕсли;
	Если ПустаяСтрока(Объект.ВыбКаталог) Тогда 
		СтрСообщений = СтрСообщений + НСтр("ru = 'Файл выгрузки не создан.'") + Символы.ПС;
	КонецЕсли;
	Если НЕ ПустаяСтрока(СтрСообщений) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтрСообщений);
		Возврат;
	КонецЕсли;
	
	Попытка
		
		ФайловаяСистемаКлиент.ЗапуститьПрограмму(
			СтрШаблон(
				"%1%2%3",
				Объект.ВыбКаталог,
				ПолучитьРазделительПутиКлиента(),
				Объект.ИмяФайла
			)
		);
		
	Исключение
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Файл выгрузки открыть не удалось'"),, "кнОткрытьФайлВыгрузки");
		
	КонецПопытки;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьДокументыПоДвижениямПартийПриИзменении(Элемент)
	
	Если Объект.ВыгружатьДокументыПоДвижениямПартий Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Внимание! При установке флажка ""Выгружать документы по движениям партий"" обратите внимание
		        |на дату ввода остатков в бухгалтерии.
				| Она должна быть большей или равной дате начала работы в бухгалтерии.
				| Эта дата ограничивает перегрузку партиеобразующих документов с более ранней датой.
				| Это делается, чтобы не было задвоения остатков в случае, если работа в БП началась со ввода остатков по регистрам.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьСправочникиНаСервере(СтруктураРезультатаВыгрузки)
	
	// БЛОК КЛИЕНТ СЕРВЕРНОЙ ПЕРЕДАЧИ
	АдресФайла = Неопределено;
	Если Объект.ЭтоКлиент Тогда
		СтруктураРезультатаВыгрузки.Вставить("КаталогФайлаВыгрузки", КаталогВременныхФайлов());
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ВыгрузитьСправочники(СтруктураРезультатаВыгрузки);
	
	Если Объект.ПоказатьВыгруженные Тогда
		ЗначениеВРеквизитФормы(ОбработкаОбъект.ВыгруженныеОбъекты, "Объект.ВыгруженныеОбъекты");
	КонецЕсли;
	Объект.ИмяФайла = ОбработкаОбъект.ИмяФайла;
	Если Объект.ЭтоКлиент И СтруктураРезультатаВыгрузки.Успешно Тогда
		АдресФайла = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(КаталогВременныхФайлов()+Объект.ИмяФайла), УникальныйИдентификатор);
		УдалитьФайлы(КаталогВременныхФайлов()+Объект.ИмяФайла);
	КонецЕсли;
	Если Объект.ПоказыватьДеревоСсылок Тогда
		СтруктураРезультатаВыгрузки.Вставить("ДеревоСсылок", ПоместитьВоВременноеХранилище(ОбработкаОбъект.ДеревоСсылок, УникальныйИдентификатор));
	КонецЕсли;

	Возврат АдресФайла;
КонецФункции

&НаСервере
Функция Выгрузить(СтруктураРезультатаВыгрузки)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЦентрМониторинга") Тогда 
		
		МодульЦентрМониторинга = ОбщегоНазначения.ОбщийМодуль("ЦентрМониторинга");
		МодульЦентрМониторинга.ЗаписатьОперациюБизнесСтатистики(
			"АльфаАвтосервисАвтосалон6.ВыгрузкаДанныхБух.ВыгрузкаДанныхВБухгалтелтерию",
			1);
		
	КонецЕсли;
	
	// БЛОК КЛИЕНТ СЕРВЕРНОЙ ПЕРЕДАЧИ
	АдресФайла = Неопределено;
	Если Объект.ЭтоКлиент Тогда
		Объект.ВыбКаталог = КаталогВременныхФайлов();
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.Выгрузить(СтруктураРезультатаВыгрузки, спКонтрагенты, спПодразделения);
	
	Если Объект.ПоказатьВыгруженные Тогда
		ЗначениеВРеквизитФормы(ОбработкаОбъект.ВыгруженныеОбъекты, "Объект.ВыгруженныеОбъекты");
	КонецЕсли;
	Объект.ИмяФайла = ОбработкаОбъект.ИмяФайла;
	Если Объект.ЭтоКлиент И НЕ ПустаяСтрока(Объект.ИмяФайла) Тогда
		АдресФайла = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(КаталогВременныхФайлов()+Объект.ИмяФайла), УникальныйИдентификатор);
		УдалитьФайлы(КаталогВременныхФайлов()+Объект.ИмяФайла);
	КонецЕсли;
	
	Если Объект.ПоказыватьДеревоСсылок Тогда
		СтруктураРезультатаВыгрузки.Вставить("ДеревоСсылок", ПоместитьВоВременноеХранилище(ОбработкаОбъект.ДеревоСсылок, УникальныйИдентификатор));
	КонецЕсли;

	Возврат АдресФайла;

КонецФункции

#КонецОбласти
