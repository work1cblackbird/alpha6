#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ИмяФайла;
Перем Файл;
Перем СтруктураФайла;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Получение макета прайс-листа.
//
// Параметры:
//  ПрайсЛист  - СправочникСсылка.ПрайсЛисты - Прайс-лист, по которому берется макет.
//
// Возвращаемое значение:
//  ОбработкаОбъект.ПисательПрайсЛистаВТекстовыйФайл - Объект обработки с указанным шаблоном.
//
Функция Инициализировать(ПрайсЛист) Экспорт
	
	ИмяФайла = ИмяФайла(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПрайсЛист, "ШаблонИмениФайла"));
	СформироватьСтруктуруФайла(ПрайсЛист);
	Возврат ЭтотОбъект;
	
КонецФункции

// Вывод шапки текстового файла.
//
Процедура Начать() Экспорт
	
	Поток = Новый ФайловыйПоток(ИмяФайла, РежимОткрытияФайла.Создать, ДоступКФайлу.Запись);
	Файл = Новый ЗаписьТекста(Поток, КодировкаТекста.UTF8);
	Файл.ЗаписатьСтроку(СтруктураФайла.Шапка);
	
КонецПроцедуры

// Запись файла с результатом формирования текстового файла.
//
// Возвращаемое значение:
//  Файл - записанный файл с результатом.
//
Функция Закончить() Экспорт
	
	Файл.Закрыть();
	Файл = Неопределено;
	Возврат Новый Файл(ИмяФайла);
	
КонецФункции

// Сохранение строки в текстовый файл.
//
// Параметры:
//  Строка  - Структура - данные для заполнения строки в текстовый файл.
//
Процедура СохранитьСтроку(Строка) Экспорт
	
	ЧастиСтроки = Новый Массив;
	
	Для Каждого ИмяПараметра Из СтруктураФайла.Строка Цикл
		
		Если ИмяПараметра = "ВалютаУчета" Тогда
			ЧастиСтроки.Добавить("RUR");
			Продолжить;
		КонецЕсли;
		
		Если ИмяПараметра = "Цена" ИЛИ ИмяПараметра = "Количество" ИЛИ ИмяПараметра = "Резерв" Тогда
			ЧастиСтроки.Добавить(Формат(Строка[ИмяПараметра], "ЧН=0; ЧГ="));
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ИмяПараметра) ИЛИ НЕ Строка.Свойство(ИмяПараметра) Тогда
			ЧастиСтроки.Добавить("");
			Продолжить;
		КонецЕсли;
		
		ЧастиСтроки.Добавить(Строка[ИмяПараметра]);
		
	КонецЦикла;
	
	Файл.ЗаписатьСтроку(СтрСоединить(ЧастиСтроки, ";"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяФайла(Шаблон)
	
	Если ПустаяСтрока(Шаблон) Тогда
		
		Возврат ПолучитьИмяВременногоФайла("csv");
		
	КонецЕсли;
	
	// Доступны шаблонные значения:
	// %г: год;
	// %м: месяц;
	// %д: день;
	// %ч: час;
	// %и: минута;
	// %с: секунда.
	ДатаСеанса = ТекущаяДатаСеанса();
	Имя = СтрЗаменить(Шаблон, "%г", Формат(Год(ДатаСеанса), "ЧГ=0"));
	Имя = СтрЗаменить(Имя, "%м",  Формат(Месяц(ДатаСеанса), "ЧЦ=2; ЧВН="));
	Имя = СтрЗаменить(Имя, "%д", Формат(День(ДатаСеанса), "ЧЦ=2; ЧВН="));
	Имя = СтрЗаменить(Имя, "%ч", Формат(Час(ДатаСеанса), "ЧЦ=2; ЧВН="));
	Имя = СтрЗаменить(Имя, "%и", Формат(Минута(ДатаСеанса), "ЧЦ=2; ЧВН="));
	Имя = СтрЗаменить(Имя, "%с", Формат(Секунда(ДатаСеанса), "ЧЦ=2; ЧВН="));
	
	Возврат СтрШаблон("%1%2.%3", КаталогВременныхФайлов(), Имя, "csv");
	
КонецФункции

Процедура СформироватьСтруктуруФайла(ПрайсЛист)
	
	ХранилищеЗначенияКолонокДляВыгрузки = ПрайсЛист.Ссылка.НастройкаКолонокДляВыгрузки;
	НастройкиКолонокДляВыгрузки = Справочники.ПрайсЛисты.ПолучитьНастройкиКолонокДляВыгрузки(ХранилищеЗначенияКолонокДляВыгрузки);
	
	СтруктураФайла = Новый Структура;
	МассивПредставленийШапки = Новый Массив;
	МассивПараметровСтроки = Новый Массив;
	
	Для Каждого Настройка Из НастройкиКолонокДляВыгрузки Цикл
		Если НЕ Настройка.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПредставленийШапки.Добавить(СтрЗаменить(ВРег(Настройка.Представление), " ", "_"));
		
		НаименованиеПараметра = РассылкаПрайсЛистов.СоответствиеКолонокТаблицыЗначений(Настройка.Представление);
		МассивПараметровСтроки.Добавить(НаименованиеПараметра);
		
	КонецЦикла;
	
	СтруктураФайла.Вставить("Шапка", СтрСоединить(МассивПредставленийШапки, ";"));
	СтруктураФайла.Вставить("Строка", МассивПараметровСтроки);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли