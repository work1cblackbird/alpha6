
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЦеныПоВидуЦены = 1;
	
	ЗагрузитьНастройкиОтбораПоУмолчанию(КомпоновщикНастроек, "ПоляШаблонаПоУмолчанию");
	
	СтруктураДанных = Новый Структура;
	
	ОрганизацияУстановлена = Ложь;
	ПодразделениеУстановлено = Ложь;
	Элементы.ЦеныИзДокументаОснования.Видимость = Ложь;
		
	Если ЗначениеЗаполнено(Параметры.АдресВХранилище) Тогда
		
		СтруктураДанных = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		
		Если СтруктураДанных.Свойство("Товары") Тогда
			Объект.ИсходныеДанные.Загрузить(СтруктураДанных.Товары);
			Если Объект.ИсходныеДанные.Количество() > 0 Тогда
				Для Каждого Строка Из Объект.ИсходныеДанные Цикл
					Если Строка.Количество <> 0 Тогда
						Строка.Цена = Строка.Цена / Строка.Количество;
						Строка.СуммаНДС = Строка.СуммаНДС / Строка.Количество;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			СтраницаПриОткрытии = "СтраницаТовары";
		КонецЕсли;
		 			
		Если ЗначениеЗаполнено(СтруктураДанных.СтруктураДействий) Тогда
			
			ПараметрДействия = Неопределено;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("УстановитьРежим", ПараметрДействия) Тогда
				УстановитьРежим(ПараметрДействия);
			Иначе
				УстановитьРежим("ПечатьЭтикеток");
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьСклад", ПараметрДействия) Тогда
				УстановитьЭлементОтбораСКД("Склад", ПараметрДействия, Истина);
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьОрганизацию", ПараметрДействия) Тогда
				Если ПараметрДействия <> Неопределено Тогда
					Объект.Организация = ПараметрДействия;
					УстановитьЭлементОтбораСКД("Организация", ПараметрДействия, Истина);
				КонецЕсли;
				ОрганизацияУстановлена = Истина;
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьПодразделениеКомпании", ПараметрДействия) Тогда
				Если ПараметрДействия <> Неопределено Тогда
					Объект.ПодразделениеКомпании = ПараметрДействия;
				КонецЕсли;
				ПодразделениеУстановлено = Истина;
			КонецЕсли;
			
			СтруктураДанных.СтруктураДействий.Свойство("РежимПечатиИзОбработки", ПараметрДействия);
			Объект.ПечатьИзОбработки = ПараметрДействия;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьТипЦены", ПараметрДействия) Тогда
				Объект.ТипЦен = ПараметрДействия;
			КонецЕсли;

			Если СтруктураДанных.СтруктураДействий.Свойство("УстановитьСпособПолученияЦен", ПараметрДействия) Тогда
				Объект.ЦеныПоВидуЦены = ПараметрДействия;
				ЦеныПоВидуЦены = Число(Объект.ЦеныПоВидуЦены);
			Иначе
				ЦеныПоВидуЦены = 0;
			КонецЕсли;

			Если СтруктураДанных.СтруктураДействий.Свойство("УстановитьДатуПолученияЦен", ПараметрДействия) Тогда
				
				Объект.ЦеныНаДату = ПараметрДействия;
				Объект.ЦеныНаДатуАкционные = ПараметрДействия;
				
			Иначе
				
				Объект.ЦеныНаДату = ТекущаяДатаСеанса();
				Объект.ЦеныНаДатуАкционные = ТекущаяДатаСеанса();
				
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ПоказыватьКолонкуКоличествоВДокументе", ПараметрДействия) Тогда
				Элементы.ТоварыКоличествоВДокументе.Видимость = ПараметрДействия;
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("УстановитьРежимПечатиИзДокумента") Тогда
				Объект.ПечатьИзДокумента = Истина;
			КонецЕсли;
			
			
			ЦеныИзДокументаОснования = СтруктураДанных.СтруктураДействий.Свойство(
														"ЦеныИзДокументаОснования", ПараметрДействия);
						
			ЗаполнитьКоличествоЭтикетокПоДокументу = СтруктураДанных.СтруктураДействий.Свойство(
														"ЗаполнитьКоличествоЭтикетокПоДокументу", ПараметрДействия);
			
			Если СтруктураДанных.СтруктураДействий.Свойство("СкрыватьКомандуЗаполненияПоДокументу", ПараметрДействия) Тогда
				Элементы.ЗаполнитьКоличествоЭтикетокПоДокументу.Видимость = Ложь;
				
				СкрыватьКомандуЗаполненияПоДокументу = Истина;
			КонецЕсли;
			
			ПечатьКодовМаркировки = СтруктураДанных.СтруктураДействий.Свойство("ПечатьКодовМаркировки"); // РАРУС
			Если ПечатьКодовМаркировки Тогда
				АдресТаблицыКодовМаркировки = ПоместитьВоВременноеХранилище(СтруктураДанных.Товары.Скопировать(),
					УникальныйИдентификатор);
				УправлениеДиалогомСервер.ОбновитьПараметрВыбора(
					Элементы.ТоварыШаблонЭтикетки.ПараметрыВыбора, "Отбор.ТипШаблона", Перечисления.ТипыШаблонов.ЭтикеткаЦенник);
			КонецЕсли;
			
			Если СтруктураДанных.СтруктураДействий.Свойство("ЗаполнитьТаблицуТоваров", ПараметрДействия)
				И Объект.ИсходныеДанные.Количество() > 0 Тогда
				
				ЗаполнитьТаблицуТоваровНаСервере(Ложь, НЕ СтруктураДанных.СтруктураДействий.Свойство("НеПересчитыватьЦены"));
						
			КонецЕсли;
			
		КонецЕсли;
		
		Если Объект.ПечатьИзДокумента Тогда
			МассивДокументов = Новый Массив;
			СтруктураДанных.Свойство("МассивДокументов", МассивДокументов);
			СписокДокументов.ЗагрузитьЗначения(МассивДокументов);
		КонецЕсли;
		
	Иначе
		// Вызов обработки из интерфейса.
		
		ВосстановитьНастройкиНаСервере();
		
		Объект.ЦеныНаДату = ТекущаяДатаСеанса();
		Объект.ЦеныНаДатуАкционные = ТекущаяДатаСеанса();
		ЗаполнитьКоличествоЭтикетокПоДокументу = Ложь;
		Если НЕ ЗначениеЗаполнено(Объект.Режим) Тогда
			УстановитьРежимПечатьЦенниковИЭтикетокНаСервере();
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	ОбновитьВидимостьЭлементов();
	
	ИмяТаблицыВыборки = ИмяТаблицыВыборки(Элементы.СтраницыТиповПечати.ТекущаяСтраница.Имя);
	
	Если Не ЗначениеЗаполнено(Объект.ТипЦен) Тогда
		Объект.ТипЦен = ПравоПользователя("ОсновнойТипЦенПродажи");
	КонецЕсли;
	
	// Если отбор по организации не был установлен, надо установить его равным организации по умолчанию
	Если Не ЗначениеЗаполнено(Объект.Организация) И НЕ ОрганизацияУстановлена Тогда
		
		Объект.Организация = ПараметрыСеанса.Организация;
			
		Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация = Справочники.Организации.ОсновнаяОрганизация;
		КонецЕсли;
		
		УстановитьЭлементОтбораСКД("Организация", Объект.Организация, Истина);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПодразделениеКомпании) И НЕ ПодразделениеУстановлено Тогда
		
		Объект.ПодразделениеКомпании = ПараметрыСеанса.ПодразделениеКомпании;
			
		Если Не ЗначениеЗаполнено(Объект.ПодразделениеКомпании) Тогда
			Объект.Организация = Справочники.ПодразделенияКомпании.ОсновноеПодразделение;
		КонецЕсли;
		
	КонецЕсли;
	
	// ПодключаемоеОборудование
	Если МенеджерОборудованияВызовСервераПереопределяемый.ИспользоватьПодключаемоеОборудование()
		И ТипЗнч(Пользователи.АвторизованныйПользователь()) = Тип("СправочникСсылка.Пользователи") Тогда
		ТипыОборудования = МенеджерОборудованияКлиентСервер.ПараметрыТипыОборудования();
		ТипыОборудования.СканерШтрихкода = Истина;
		ТипыОборудования.СчитывательМагнитныхКарт = Истина;
		МенеджерОборудования.ПриСозданииНаСервере(ЭтаФорма, ТипыОборудования);
	КонецЕсли;	
	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(СтраницаПриОткрытии) Тогда
		
		Элементы.СтраницыТиповПечати.ТекущаяСтраница = Элементы[СтраницаПриОткрытии];
			  	
	КонецЕсли;
	
	Элементы.ЦеныИзДокументаОснования.Видимость = ЦеныИзДокументаОснования;
	Элементы.ТипЦен.Доступность = НЕ ЦеныИзДокументаОснования;
	Элементы.ЦеныНаДату.Доступность = НЕ ЦеныИзДокументаОснования;
	Элементы.ПодразделениеКомпании.Доступность = НЕ ЦеныИзДокументаОснования;
	
	Если НЕ ЦеныИзДокументаОснования Тогда 
		
		ПересчитатьЦены(Неопределено);
		
    КонецЕсли;
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода, СчитывательМагнитныхКарт");
	// Конец ПодключаемоеОборудование
	
	УстановитьКнопкуПоУмолчанию();
	УстановитьОбъектОрганизация();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваров.Форма.Форма" Тогда
		
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
		ПересчитатьЦены(Неопределено);
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		
		Окно.Активизировать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если (НЕ Объект.ПечатьИзДокумента)
		И (НЕ Объект.ПечатьИзОбработки) Тогда
		СохранитьНастройкиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			
			ШтрихКод = ШтрихкодированиеКлиент.ПолучитьШтрихкодИзПараметровОборудования(ИмяСобытия, Параметр);
			ПараметрыДействия = Новый Структура;
			ШтрихкодированиеКлиент.ОбработатьПолныйШтрихкод(Штрихкод, ПараметрыДействия);
			Штрихкод = ПараметрыДействия.Штрихкод;
			ПолученыШтрихкоды(Новый Структура("Штрихкод", Штрихкод));
			
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЦеныИзДокументаОснованияПриИзменении(Элемент)
	
	Если ЦеныИзДокументаОснования Тогда 
		Оповещение = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияЦеныИзДокументаОснования", ЭтотОбъект);
		ПоказатьВопрос(Оповещение,
						НСтр("ru = 'Выбрать цены из документа-основания?'"), 
						РежимДиалогаВопрос.ДаНет,
						,
						КодВозвратаДиалога.Да);
	Иначе 
		ПересчитатьЦены(Неопределено);
		ПересчитатьСуммыНДС();
	КонецЕсли;
	
	Элементы.ТипЦен.Доступность = НЕ ЦеныИзДокументаОснования;
	Элементы.ЦеныНаДату.Доступность = НЕ ЦеныИзДокументаОснования;
	Элементы.ПодразделениеКомпании.Доступность = НЕ ЦеныИзДокументаОснования;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСуммыНДС(ОчиститьНДС = Ложь)

	ТаблицаФормы = Объект.Товары.Выгрузить();
	КопияТовары = ТаблицаФормы.Скопировать();
	ТаблицаФормы.Очистить();
	
	Если ОчиститьНДС Тогда
		ПустаяСтавка = Справочники.СтавкиНДС.ПустаяСсылка();
		Для Каждого Строка Из КопияТовары Цикл
			Строка.СуммаНДС = 0;
			Строка.СтавкаНДС = ПустаяСтавка;
		КонецЦикла;
	Иначе
		Для Каждого Строка Из КопияТовары Цикл
			Если ЗначениеЗаполнено(Строка.СтавкаНДС) Тогда
				Ставка = Строка.СтавкаНДС.Ставка;
				Если Ставка = 0 Тогда
					Строка.СуммаНДС = 0;
				Иначе
					Строка.СуммаНДС = Окр((Строка.Цена * Ставка)/(100 + Ставка), 2);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Объект.Товары.Загрузить(КопияТовары);

КонецПроцедуры

&НаКлиенте
Процедура Гиперссылка1Нажатие(Элемент)
	
	ПоказатьЗначение(, СписокДокументов.Получить(0).Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура Гиперссылка2Нажатие(Элемент)

	ПоказатьЗначение(, СписокДокументов.Получить(1).Значение);

КонецПроцедуры

&НаКлиенте
Процедура Гиперссылка3Нажатие(Элемент)

	ПоказатьЗначение(, СписокДокументов.Получить(2).Значение);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеДокументыНажатие(Элемент)
	
	Обработчик = Новый ОписаниеОповещения("Подключаемый_ВыборИзСпискаДокумента", ЭтотОбъект);
	ПоказатьВыборИзСписка(Обработчик, СписокДокументов);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыборИзСпискаДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЦенПриИзменении(Элемент)
	
	ПересчитатьЦены(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеКомпанииПриИзменении(Элемент)
	
	ПересчитатьЦены(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦеныНаДатуПриИзменении(Элемент)
	
	ПересчитатьЦены(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦеныНаДатуАкционныеПриИзменении(Элемент)
	
	ПересчитатьЦены(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЦенАкционныеПриИзменении(Элемент)
	
	ПересчитатьЦены(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоличествоЭтикетокПоДокументуПриИзменении(Элемент)
	
	ЗаполнитьКоличествоЦенниковИЭтикетокПоДокументуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыТиповПечатиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитьКнопкуПоУмолчанию();
	ИмяТаблицыВыборки = ИмяТаблицыВыборки(Элементы.СтраницыТиповПечати.ТекущаяСтраница.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаСервере
Процедура ТоварыШтрихкодПриИзмененииНаСервере(ШтрихКод, СтруктураСтроки)

	ОбъектыПоШтрихкоду = ШтрихкодированиеВызовСервера.НайтиОбъектыПоШтрихкоду(ШтрихКод, , Истина);

	Для Каждого ОбъектПоШтрихкоду Из ОбъектыПоШтрихкоду Цикл
		Если ТипЗнч(ОбъектПоШтрихкоду.Объект) <> Тип("СправочникСсылка.Номенклатура") Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ОбъектПоШтрихкоду.Запрет Тогда
			СтруктураСтроки = Новый Структура;
			СтруктураСтроки.Вставить("Объект", ОбъектПоШтрихкоду.Объект);
			Если ЗначениеЗаполнено(ОбъектПоШтрихкоду.ЕдиницаИзмерения) Тогда 
				СтруктураСтроки.Вставить("ЕдиницаИзмерения", ОбъектПоШтрихкоду.ЕдиницаИзмерения);
			КонецЕсли;
			Если ЗначениеЗаполнено(ОбъектПоШтрихкоду.ХарактеристикаНоменклатуры) Тогда 
				СтруктураСтроки.Вставить("ХарактеристикаНоменклатуры", ОбъектПоШтрихкоду.ХарактеристикаНоменклатуры);
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыШтрихкодПриИзменении(Элемент)

	ШтрихКод = Элемент.ТекстРедактирования;
	ПараметрыДействия = Новый Структура;
	ШтрихкодированиеКлиент.ОбработатьПолныйШтрихкод(Штрихкод, ПараметрыДействия);
	Штрихкод = ПараметрыДействия.Штрихкод;

	Если ЗначениеЗаполнено(Штрихкод) Тогда 

		СтруктураСтроки = Неопределено;
		ТоварыШтрихкодПриИзмененииНаСервере(Штрихкод, СтруктураСтроки);
		
		Если СтруктураСтроки <> Неопределено
			 И Элементы.Товары.ТекущиеДанные <> Неопределено Тогда
			 Элементы.Товары.ТекущиеДанные.Номенклатура = СтруктураСтроки.Объект;
			 Если СтруктураСтроки.Свойство("ХарактеристикаНоменклатуры") Тогда 
			 	Элементы.Товары.ТекущиеДанные.Характеристика = СтруктураСтроки.ХарактеристикаНоменклатуры;
			 КонецЕсли;
			 Если СтруктураСтроки.Свойство("ЕдиницаИзмерения") Тогда 
			 	Элементы.Товары.ТекущиеДанные.ЕдиницаИзмерения = СтруктураСтроки.ЕдиницаИзмерения;
			 КонецЕсли;
			 ТоварыНоменклатураПриИзменении(Элементы.ТоварыНоменклатура);
			 Элементы.Товары.ТекущиеДанные.Штрихкод = ШтрихКод;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Новый Структура("Номенклатура, Характеристика, ЕдиницаИзмерения, ВладелецХарактеристики, ВладелецЕдиницыИзмерения");
	Если НЕ ЗначениеЗаполнено(Элементы.Товары.ТекущиеДанные.ЕдиницаИзмерения) Тогда
		Элементы.Товары.ТекущиеДанные.ЕдиницаИзмерения = ПолучитьЕдиницуИзмерения(Элементы.Товары.ТекущиеДанные.Номенклатура);
		Элементы.Товары.ТекущиеДанные.Коэффициент = ПолучитьКоэфЕдиницыИзмерения(Элементы.Товары.ТекущиеДанные.ЕдиницаИзмерения);
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Элементы.Товары.ТекущиеДанные);
	ЗаполнитьЗначенияСвойств(Элементы.Товары.ТекущиеДанные, ПриИзмененииНоменклатуры(ТекущиеДанные));
	
	ТоварыНоменклатураПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТоварыНоменклатураПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		УстановитьКоличествоПоУмолчаниюВСтрокеТЧНаСервере(ТекущиеДанные);
		
		ЭтоПрочийАктив = ТипЗнч(ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.ПрочиеАктивы");
		
		Если ЭтоПрочийАктив Тогда
			СтавкаНДСИзКарточки = ТекущиеДанные.Номенклатура.Номенклатура.СтавкаНДС;
		Иначе
			СтавкаНДСИзКарточки = ТекущиеДанные.Номенклатура.СтавкаНДС;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтавкаНДСИзКарточки) Тогда
			Если ЭтоПрочийАктив Тогда
				ТекущиеДанные.СтавкаНДС = СтавкаНДСИзКарточки;
				ТекущиеДанные.СуммаНДС = Окр(ТекущиеДанные.Цена * ТекущиеДанные.СтавкаНДС.Ставка / 100, 2);
			ИначеЕсли Объект.ТипЦен.ЦенаВключаетНДС Тогда
				Ставка = СтавкаНДСИзКарточки.Ставка;
				ТекЦена = ТекущиеДанные.Цена;
				ТекущиеДанные.СтавкаНДС = СтавкаНДСИзКарточки;
				ТекущиеДанные.СуммаНДС = Окр((ТекЦена * Ставка)/(100 + Ставка), 2);  
			Иначе
				Ставка = СтавкаНДСИзКарточки.Ставка;
				СуммаНДС = Окр((ТекущиеДанные.Цена * Ставка)/100, 2);
				ТекущиеДанные.Цена = ТекущиеДанные.Цена + СуммаНДС;
				ТекущиеДанные.СтавкаНДС = СтавкаНДСИзКарточки;
				ТекущиеДанные.СуммаНДС = СуммаНДС;	
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Новый Структура("Номенклатура, Характеристика, ЕдиницаИзмерения, ВладелецХарактеристики, ВладелецЕдиницыИзмерения");
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Элементы.Товары.ТекущиеДанные);
	ЗаполнитьЗначенияСвойств(Элементы.Товары.ТекущиеДанные, ПриИзмененииНоменклатуры(ТекущиеДанные));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоЦенниковПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Выбран = ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Объект.Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоЭтикетокПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Выбран = ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Объект.Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыШаблонЦенникаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Выбран = ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Объект.Режим);
	
	ОбновитьТипШаблона(ТекущиеДанные.ПолучитьИдентификатор(), "Ценник");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыШаблонЭтикеткиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Выбран = ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Объект.Режим);
	
	ОбновитьТипШаблона(ТекущиеДанные.ПолучитьИдентификатор(), "Этикетка");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущаяСтрока = ТекущиеДанные.НомерСтроки - 1;
	
	Если НЕ ТекущиеДанные.Выбран Тогда
		
	Иначе
		
		ОчиститьСообщения();
		
		ТекущиеДанные.Выбран = Истина;
		
		Если Объект.Режим = "ПечатьЦенниковИЭтикеток" Тогда
			
			Если (       ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					И ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					И ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество ценников'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЦенников";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И    ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбран шаблон ценника'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЦенника";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЭтикеток";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбран шаблон этикетки'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЭтикетки";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (   ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И    ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество ценников и(или) этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЦенников";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И    ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И    ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбраны шаблоны ценников и(или) этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЦенника";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЦенников)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоЭтикеток)) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество ценников и(или) этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЦенников";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
		ИначеЕсли Объект.Режим = "ПечатьЭтикеток" Тогда
			
			Если ТекущиеДанные.КоличествоЭтикеток = 0 Тогда
			
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество этикеток'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЭтикеток";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбран шаблон этикетки'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЭтикетки";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
		ИначеЕсли Объект.Режим = "ПечатьЦенников" Тогда
			
			Если ТекущиеДанные.КоличествоЦенников = 0 Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не заполнено количество ценников'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].КоличествоЦенников";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не выбран шаблон ценника'");
				Сообщение.Поле = "Объект.Товары["+ТекущаяСтрока+"].ШаблонЦенника";
				Сообщение.Сообщить();
				
				ТекущиеДанные.Выбран = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыШаблонЦенникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ТоварыШаблонЦенникаНачалоВыбораЗавершение", ЭтаФорма);
	
	ПараметрыОткрытия = Новый Структура();
	
	ТипыШаблонов = Новый Массив;
	ТипыШаблонов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыШаблонов.ЭтикеткаЦенник"));
	Если НЕ ПечатьКодовМаркировки Тогда // РАРУС
		ТипыШаблонов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток"));
	КонецЕсли;
	
	ПараметрыОткрытия.Вставить("Отбор", Новый Структура("ТипШаблона", ТипыШаблонов));
	
	ОткрытьФорму("Справочник.ХранилищеШаблонов.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма,,,, ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыШаблонЭтикеткиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ТоварыШаблонЭтикеткиНачалоВыбораЗавершение", ЭтаФорма);
	
	ПараметрыОткрытия = Новый Структура();
	
	ТипыШаблонов = Новый Массив;
	ТипыШаблонов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыШаблонов.ЭтикеткаЦенник"));
	Если НЕ ПечатьКодовМаркировки Тогда // РАРУС
		ТипыШаблонов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток"));
	КонецЕсли;
	
	ПараметрыОткрытия.Вставить("Отбор", Новый Структура("ТипШаблона", ТипыШаблонов));
	
	ОткрытьФорму("Справочник.ХранилищеШаблонов.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма,,,, ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыШаблонЦенникаОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.ТипШаблонаЦенника = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыШаблонЭтикеткиОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.ТипШаблонаЭтикетки = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборПриИзменении(Элемент)
	
	УстановитьОбъектОрганизация();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	ТоварыСтавкаНДСПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТоварыСтавкаНДСПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	
	Если ЗначениеЗаполнено(ТекущиеДанные.СтавкаНДС) Тогда
		Ставка = ТекущиеДанные.СтавкаНДС.Ставка;
		ТекЦена = ТекущиеДанные.Цена - ТекущиеДанные.СуммаНДС;
		Если Ставка = 0 Тогда
			ТекущиеДанные.Цена = ТекЦена;
			ТекущиеДанные.СуммаНДС = 0;
		Иначе
			ТекущиеДанные.СуммаНДС = Окр((ТекЦена * Ставка)/(100 + Ставка), 2);
			ТекущиеДанные.Цена = ТекЦена + ТекущиеДанные.СуммаНДС;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	ТоварыЦенаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТоварыЦенаПриИзмененииНаСервере()
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	
	Если ЗначениеЗаполнено(ТекущиеДанные.СтавкаНДС) Тогда
		Ставка = ТекущиеДанные.СтавкаНДС.Ставка;
			Если Ставка <> 0 И ТекущиеДанные.Цена <> 0 Тогда
				ТекущиеДанные.СуммаНДС = Окр((ТекущиеДанные.Цена * Ставка)/(100 + Ставка), 2);
			Иначе
				ТекущиеДанные.СуммаНДС = 0;
				ТекущиеДанные.СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиКомандПодключаемогоОборудования

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ТекШтрихкод = "";
	
	ОбработкаЗавершения = Новый ОписаниеОповещения(
		"ПоискПоШтрихкодуЗавершение",
		ЭтотОбъект, 
		Новый Структура("ТекШтрихкод", ТекШтрихкод)
	);
	
	Если НЕ ОбщегоНазначенияКлиентСервер.ЭтоМобильныйКлиент() Тогда
		ПоказатьВводЗначения(ОбработкаЗавершения, ТекШтрихкод, НСтр("ru = 'Введите штрихкод'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекШтрихкод = ?(Результат = Неопределено, СокрЛП(ДополнительныеПараметры.ТекШтрихкод), СокрЛП(Результат));
	
	Если НЕ ПустаяСтрока(ТекШтрихкод) Тогда
		ПолученыШтрихкоды(Новый Структура("Штрихкод, Количество", ТекШтрихкод, 1));
	КонецЕсли;
	
КонецПроцедуры // ПоискПоШтрихкоду()

#КонецОбласти

// Процедура вызывается при нажатии на кнопку "Выбрать выделенные платежи".
//
&НаКлиенте
Процедура ВыбратьВыделенныеСтроки(Команда)
	
	Количество = 0;
	ТекущаяСтраница = Элементы.СтраницыТиповПечати.ТекущаяСтраница.Имя;
	Если ТекущаяСтраница = "СтраницаТовары" Тогда
		
		МассивСтрок = Элементы.Товары.ВыделенныеСтроки;
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			
			СтрокаТЧ = Объект.Товары.НайтиПоИдентификатору(НомерСтроки);
			СтрокаТЧ.Выбран = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
			
			Если СтрокаТЧ.Выбран Тогда
				Количество = Количество + 1;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	КоличествоВсего = МассивСтрок.Количество();
	ПоказатьОповещениеПользователюОВозможнойОшибке("", Количество, КоличествоВсего);
	
КонецПроцедуры

// Процедура вызывается при нажатии на кнопку "Исключить выделенные платежи".
//
&НаКлиенте
Процедура ИсключитьВыделенныеСтроки(Команда)
	
	ТекущаяСтраница = Элементы.СтраницыТиповПечати.ТекущаяСтраница.Имя;
	Если ТекущаяСтраница = "СтраницаТовары" Тогда
		
		МассивСтрок = Элементы.Товары.ВыделенныеСтроки;
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			СтрокаТЧ = Объект.Товары.НайтиПоИдентификатору(НомерСтроки);
			СтрокаТЧ.Выбран = Ложь;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКоличествоПоУмолчанию(Команда)
	
	Количество = 0;
	
	МассивСтрок = Элементы.Товары.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		
		СтрокаТЧ = Объект.Товары.НайтиПоИдентификатору(НомерСтроки);
		
		Если Объект.Режим = "ПечатьЭтикеток" ИЛИ Объект.Режим = "ПечатьЦенниковИЭтикеток" Тогда
			
			Если ЗаполнитьКоличествоЭтикетокПоДокументу Тогда
				СтрокаТЧ.КоличествоЭтикеток = СтрокаТЧ.КоличествоВДокументе;
			Иначе
				СтрокаТЧ.КоличествоЭтикеток = ?(СтрокаТЧ.ОстатокНаСкладе > 0, СтрокаТЧ.ОстатокНаСкладе, 0);
			КонецЕсли;
			
		КонецЕсли;
		
		// Расчет количества Ценников.
		Если Объект.Режим = "ПечатьЦенников" ИЛИ Объект.Режим = "ПечатьЦенниковИЭтикеток" Тогда
			
			СтрокаТЧ.КоличествоЦенников = 1;
			
		КонецЕсли;
		
		СтрокаТЧ.Выбран              = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
		
		Количество = Количество + 1;
		
	КонецЦикла;
	
	КоличествоВсего = МассивСтрок.Количество();
	
	Текст = НСтр("ru = 'Установлено количество по умолчанию для  %Количество% строк.'");
	Текст = СтрЗаменить(Текст, "%Количество%", КоличествоВсего);
	
	ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовыйШтрихкодEAN13(Команда)
	
	Если Не ЗначениеЗаполнено(Элементы.Товары.ВыделенныеСтроки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В списке отсутствуют выделенные строки'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = "";
	Результат = УстановитьНовыеШтрихкодыEAN13НаСервере(ОписаниеОшибки);
	
	Если Результат = 0 И ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		ПоказатьПредупреждение(,ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	УстановитьОбъектОрганизация();
	
	ОчиститьСообщения();
	Объект.НажатаПечать = Истина;
	
	РежимПечати = "Ценники,Этикетки";
	Если Элементы.СтраницыТиповПечати.ТекущаяСтраница = Элементы.СтраницаТовары Тогда
		Если Объект.Товары.НайтиСтроки(Новый Структура("Выбран", Истина)).Количество() = 0 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выбрано ни одного товара'"));
			Возврат;
		КонецЕсли;
		Если Объект.Режим = "ПечатьЦенников" Тогда
			РежимПечати = "Ценники";
		ИначеЕсли Объект.Режим = "ПечатьЭтикеток" Тогда
			РежимПечати = "Этикетки";
		КонецЕсли;
		Объект.СтраницаПечати = "СтраницаТовары";
		
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПечати = Новый Массив;
	ОписаниеОбъекта = Новый Структура("ТипЦен,Организация,ЦеныПоВидуЦены,ЦеныНаДату,ЦеныНаДатуАкционные,ТипЦенАкционные");
	ЗаполнитьЗначенияСвойств(ОписаниеОбъекта, Объект);
	
	ШаблоныЭтикетокИЦенников = Новый Массив();
	ТоварыныйСостав = Новый Массив();
	КолонкиТаблицыПередаваемыеВМетодПечати = КолонкиТаблицыПередаваемыеВМетодПечати();
	
	Для Каждого Позиция Из Объект.Товары Цикл
		
		Если Позиция.Выбран Тогда
			
			ЭлементШаблонов = Новый Структура("ШаблонЭтикетки,ШаблонЦенника");
			ЗаполнитьЗначенияСвойств(ЭлементШаблонов, Позиция);
			ШаблоныЭтикетокИЦенников.Добавить(ЭлементШаблонов);
			
			ЭлементТоварногоСостава = Новый Структура(КолонкиТаблицыПередаваемыеВМетодПечати);
			ЗаполнитьЗначенияСвойств(ЭлементТоварногоСостава, Позиция);
			ТоварыныйСостав.Добавить(ЭлементТоварногоСостава);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОписаниеОбъекта.Вставить("ШаблоныЭтикетокИЦенников", ШаблоныЭтикетокИЦенников);
	ОписаниеОбъекта.Вставить("ТоварыныйСостав", ТоварыныйСостав);
	ДанныеПечати.Добавить(ОписаниеОбъекта);
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.ХранилищеШаблонов.ПустаяСсылка"));
	
	Если Элементы.СтраницыТиповПечати.ТекущаяСтраница <> Элементы.СтраницаТовары Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Обработка.ПечатьЭтикетокИЦенников",
			РежимПечати,
			ПараметрКоманды,
			ЭтотОбъект,
			Новый Структура("Режим, РежимПечати", Объект.Режим, РежимПечати)
		);
		
		Возврат;
		
	КонецЕсли;
		
	Если ПроверитьТипШаблоновЭтикеток() Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Обработка.ПечатьЭтикетокИЦенников",
			РежимПечати,
			ПараметрКоманды,
			ЭтотОбъект,
			Новый Структура(
				"Режим,РежимПечати,ДанныеПечати,ЭтоПечатьКодовМаркировки",
				Объект.Режим,
				РежимПечати,
				ДанныеПечати,
				ПечатьКодовМаркировки
			)
		);
		
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура();
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("РежимПечати", РежимПечати);
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(Объект);
	
	ПараметрыПечати.Вставить("ПараметрКоманды", ПараметрКоманды);
	ПараметрыПечати.Вставить("Форма", Объект);
	ПараметрыПечати.Вставить("ПараметрыПечати", Новый Структура("Режим, РежимПечати", Объект.Режим, РежимПечати));
	ПараметрыПечати.Вставить("ПечатьКодовМаркировки", ПечатьКодовМаркировки);
	ПараметрыОткрытия.Вставить("ПараметрыПечати", ПараметрыПечати);

	ПараметрыПечатиДляПринтераЭтикеток = Новый Структура;

	ОбъектыПечати = Новый Массив;
	ОбъектыПечати.Добавить(Объект);

	ПараметрыПечатиДляПринтераЭтикеток.Вставить("ОбъектыПечати", ОбъектыПечати);
	ПараметрыПечатиДляПринтераЭтикеток.Вставить("МенеджерПечати", "Обработка.ПечатьЭтикетокИЦенников");
	ПараметрыПечатиДляПринтераЭтикеток.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
	ПараметрыОткрытия.Вставить("ПараметрыПечатиДляПринтераЭтикеток", ПараметрыПечатиДляПринтераЭтикеток);

	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("Обработка.ПечатьЭтикетокИЦенников.Форма.ФормаПечать", ПараметрыОткрытия, ЭтаФорма, , , , , Режим);
	
	Если ПечатьКодовМаркировки Тогда
		ЗаписатьДатыПечатиКодовМаркировки();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиОтборВГруппе(КоллекцияЭлементов, ИмяПоля)
	
	Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
	НайденныйЭлемент = Неопределено;
	
	Для Каждого ЭлементОтбора Из КоллекцияЭлементов Цикл
		
		Если ТипЗнч(ЭлементОтбора)=Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			
			Если ЭлементОтбора.ЛевоеЗначение = Поле Тогда
				НайденныйЭлемент =  ЭлементОтбора;
				Прервать;
			КонецЕсли;
			
		Иначе
			
			НайденныйЭлемент = НайтиОтборВГруппе(ЭлементОтбора.Элементы, ИмяПоля);
			Если Не НайденныйЭлемент = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НайденныйЭлемент
	
КонецФункции

&НаСервере
Функция НайтиОтборВКомпоновщике(ИмяПоля)
	
	Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
	НайденныйЭлемент = Неопределено;
	
	Для Каждого ЭлементОтбора Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		
		Если ТипЗнч(ЭлементОтбора)=Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			
			Если ЭлементОтбора.ЛевоеЗначение = Поле Тогда
				НайденныйЭлемент =  ЭлементОтбора;
				Прервать;
			КонецЕсли;
			
		Иначе
			
			НайденныйЭлемент = НайтиОтборВГруппе(ЭлементОтбора.Элементы, ИмяПоля);
			Если Не НайденныйЭлемент = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НайденныйЭлемент;
	
КонецФункции

&НаКлиенте
Процедура УстановитьОбъектОрганизация()
	
	// установка объект.организация исходя из отборов
	Объект.Организация = Неопределено;
	ПолеОрганизация = НайтиОтборВКомпоновщике("Организация");
	Если Не ПолеОрганизация = Неопределено Тогда
		
		Если ПолеОрганизация.Использование Тогда
			Объект.Организация = ПолеОрганизация.ПравоеЗначение;
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.Организация = Объект.Организация;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьОтбор(Команда)
	
	Если Элементы.СтраницыТиповПечати.ТекущаяСтраница.Имя <> "СтраницаТовары" Тогда
		Возврат;
	КонецЕсли;
	
	ВидимостьОтбора = НЕ ВидимостьОтбора;
	
	УстановитьВидимостьОтбора(Элементы, ВидимостьОтбора);
	
КонецПроцедуры

// Процедура - обработчик события Действие команды Подбор
//
&НаКлиенте
Процедура Подбор(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ТипЦен) Тогда
		Объект.ТипЦен = ПредопределенноеЗначение("Справочник.ТипыЦен.НормативнаяЦена");
	КонецЕсли;
	
	ОписаниеОповещенияПриЗакрытииПодбора = Новый ОписаниеОповещения("ОповещениеПодборПроизведен", ЭтотОбъект);
	
	// Инициализируем структуру основных параметры подбора товаров в документ
	ПараметрыПодбора = Новый Структура();
	
	// Создаем и заполняем структуру параметров открытия формы номенклатуры
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("ПараметрыПодбора",      ПараметрыПодбора);
	ПараметрыОткрытия.Вставить("РежимВыбора",           Истина);
	ПараметрыОткрытия.Вставить("ПодразделениеКомпании", ПолучитьЗначениеПараметраСтруктуры(Объект, "ПодразделениеКомпании"));
	ПараметрыОткрытия.Вставить("Контрагент",            ПолучитьЗначениеПараметраСтруктуры(Объект, "Контрагент"));
	ПараметрыОткрытия.Вставить("Валюта",                ПолучитьЗначениеПараметраСтруктуры(Объект, "ВалютаДокумента"));
	ПараметрыОткрытия.Вставить("КурсВалюты",            ПолучитьЗначениеПараметраСтруктуры(Объект, "КурсДокумента"));
	ПараметрыОткрытия.Вставить("ТипЦен",                ПолучитьЗначениеПараметраСтруктуры(Объект, "ТипЦен"));
	ПараметрыОткрытия.Вставить("СкладКомпании",         ПолучитьЗначениеПараметраСтруктуры(Объект, "СкладКомпании"));
	
	ПараметрыОткрытия.Вставить("Отбор", ЗаполнитьПараметрыПодбора());
	
	// Производим открытие формы подбора номенклатуры
	ОткрытьФорму(
		"Справочник.Номенклатура.ФормаСписка",
		ПараметрыОткрытия,
		ЭтотОбъект,
		, , ,
		ОписаниеОповещенияПриЗакрытииПодбора,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);

КонецПроцедуры

// Функция получает список товаров из временного хранилища
//
&НаСервере
Процедура ПолучитьЗапасыИзХранилища(АдресЗапасовВХранилище, ИмяТабличнойЧасти)
	
	ТаблицаДляЗагрузки = ПолучитьИзВременногоХранилища(АдресЗапасовВХранилище);
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	ИспользоватьЕдиницыИзмерения = ПолучитьФункциональнуюОпцию("ИспользоватьЕдиницыИзмерения");
	
	Для Каждого СтрокаЗагрузки Из ТаблицаДляЗагрузки Цикл
		
		НоваяСтрока = Объект[ИмяТабличнойЧасти].Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗагрузки);
		Если ИспользоватьХарактеристикиНоменклатуры Тогда
			НоваяСтрока.Характеристика = СтрокаЗагрузки.ХарактеристикаНоменклатуры;
			Если ЗначениеЗаполнено(НоваяСтрока.Характеристика) Тогда
				НоваяСтрока.ХарактеристикиИспользуются = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ИспользоватьЕдиницыИзмерения Тогда
			НоваяСтрока.ЕдиницаИзмерения = СтрокаЗагрузки.ЕдиницаИзмерения;
		КонецЕсли;
		
		НоваяСтрока.КоличествоЦенников = 1;
		НоваяСтрока.КоличествоЭтикеток = СтрокаЗагрузки.Количество;
		НоваяСтрока.ОстатокНаСкладе = СтрокаЗагрузки.Остаток;
		
		Если ТипЗнч(НоваяСтрока.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			ИспользованиеХарактеристик   = НоваяСтрока.Номенклатура.ТипНоменклатуры.ИспользованиеХарактеристик;
			ИспользованиеЕдиницИзмерения = НоваяСтрока.Номенклатура.ТипНоменклатуры.ИспользованиеЕдиницИзмерения;
		Иначе
			ИспользованиеХарактеристик   = 0;
			ИспользованиеЕдиницИзмерения = 0;
		КонецЕсли;
	
		Если НоваяСтрока.Свойство("ВладелецХарактеристики") Тогда
			Если ИспользованиеХарактеристик = 1 Тогда
				НоваяСтрока.ВладелецХарактеристики = НоваяСтрока.Номенклатура.ТипНоменклатуры;
			ИначеЕсли ИспользованиеХарактеристик = 2 Тогда
				НоваяСтрока.ВладелецХарактеристики = НоваяСтрока.Номенклатура;
			Иначе
				НоваяСтрока.ВладелецХарактеристики = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если НоваяСтрока.Свойство("ВладелецЕдиницыИзмерения") Тогда
			Если ИспользованиеЕдиницИзмерения = 1 Тогда
				НоваяСтрока.ВладелецЕдиницыИзмерения = НоваяСтрока.Номенклатура.ТипНоменклатуры;
			ИначеЕсли ИспользованиеЕдиницИзмерения = 2 Тогда
				НоваяСтрока.ВладелецЕдиницыИзмерения = НоваяСтрока.Номенклатура;
			Иначе
				НоваяСтрока.ВладелецЕдиницыИзмерения = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока.Цена = ЦенообразованиеСервер.ПолучитьЦену(
			Объект.ТипЦен,
			НоваяСтрока.Номенклатура,
			, , , ,
			НоваяСтрока.Характеристика,
			НоваяСтрока.ЕдиницаИзмерения,
			Объект.ПодразделениеКомпании
		);
		
		НоваяСтрока.ШаблонЭтикетки = НоваяСтрока.Номенклатура.ТипНоменклатуры.ШаблонЭтикетки;
		НоваяСтрока.ШаблонЦенника  = НоваяСтрока.Номенклатура.ТипНоменклатуры.ШаблонЦенника;
		НоваяСтрока.Штрихкод = ШтрихкодированиеВызовСервера.ПолучитьШтрихКодОбъекта(
			НоваяСтрока.Номенклатура,
			НоваяСтрока.Характеристика,
			НоваяСтрока.ЕдиницаИзмерения
		);
		
	КонецЦикла;
	
КонецПроцедуры // ПолучитьЗапасыИзХранилища()

&НаКлиенте
Процедура УстановитьКоличествоЦенников(Команда)
	
	ВыбранноеЗначение = Неопределено;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеУстановитьКоличествоЦенников", ЭтотОбъект);
	ПоказатьВводЧисла(ОписаниеОповещения,ВыбранноеЗначение, НСтр("ru = 'Введите количество ценников'"), 10, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКоличествоЭтикеток(Команда)
	
	ВыбранноеЗначение = Неопределено;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтраница", Элементы.СтраницыТиповПечати.ТекущаяСтраница.Имя);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеУстановитьКоличествоЭтикеток", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВводЧисла(ОписаниеОповещения, ВыбранноеЗначение, НСтр("ru = 'Введите количество этикеток'"), 10, 0);
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьШаблонЦенников(Команда)
	
	ПараметрыОткрытия = Новый Структура();
	
	МассивТиповШаблонов = Новый Массив;
	МассивТиповШаблонов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыШаблонов.ЭтикеткаЦенник"));
	Если НЕ ПечатьКодовМаркировки Тогда // РАРУС
		МассивТиповШаблонов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток"));
	КонецЕсли;
	ПараметрыОткрытия.Вставить("Отбор", Новый Структура("ТипШаблона", МассивТиповШаблонов));
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОбработчикУстановкиШаблонаЦенников", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("Справочник.ХранилищеШаблонов.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма,,,, ОбработчикОповещения, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьШаблонЭтикеток(Команда)
	
	ПараметрыОткрытия = Новый Структура();
	ТекущаяСтраница = Элементы.СтраницыТиповПечати.ТекущаяСтраница.Имя;
	Если Ложь Тогда
	Иначе
		ТипыШаблонов = Новый Массив;
		ТипыШаблонов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыШаблонов.ЭтикеткаЦенник"));
		Если НЕ ПечатьКодовМаркировки Тогда // РАРУС
			ТипыШаблонов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток"));
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыОткрытия.Вставить("Отбор", Новый Структура("ТипШаблона", ТипыШаблонов));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтраница", ТекущаяСтраница);
	ОбработчикОповещения = Новый ОписаниеОповещения("ОбработчикУстановкиШаблонаЭтикеток", ЭтотОбъект, ДополнительныеПараметры);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("Справочник.ХранилищеШаблонов.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма,,,, ОбработчикОповещения, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимПечатьЦенников(Команда)
	
	УстановитьРежимПечатьЦенниковНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимПечатьЦенниковИЭтикеток(Команда)
	
	УстановитьРежимПечатьЦенниковИЭтикетокНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимПечатьЭтикеток(Команда)
	
	УстановитьРежимПечатьЭтикетокНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтбору(Команда)
	
	ОчиститьСообщения();
	Объект.НажатаПечать = Ложь;
	
	ТекущаяСтраница = Элементы.СтраницыТиповПечати.ТекущаяСтраница.Имя;
	Если ТекущаяСтраница = "СтраницаТовары" Тогда
		
		Если Объект.Товары.Количество() = 0 Тогда
			ЗаполнитьТаблицуТоваровНаСервере(Ложь);
		Иначе
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеЗаполнитьТаблицуТоваров", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, 
							НСтр("ru = 'Сохранить данные о количестве, шаблонах в табличной части при перезаполнении?'"),
							РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Да);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтандартныеНастройки(Команда)
	
	ЗагрузитьНастройкиОтбораПоУмолчанию(КомпоновщикНастроек, "ПоляШаблонаПоУмолчанию");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции  

#Область СлужебныеПроцедурыИФункцииСохраненияИВосстановленияНастроек

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ВидимостьОтбора", ВидимостьОтбора);
	ПараметрыЗакрытия.Вставить("ВидимостьРежимаЗаполнения", ВидимостьРежимаЗаполнения);
	ПараметрыЗакрытия.Вставить("ЗаполнитьКоличествоЭтикетокПоДокументу", ЗаполнитьКоличествоЭтикетокПоДокументу);
	ПараметрыЗакрытия.Вставить("СкрыватьКомандуЗаполненияПоДокументу", СкрыватьКомандуЗаполненияПоДокументу);
	ПараметрыЗакрытия.Вставить("ЦеныПоВидуЦены", ЦеныПоВидуЦены);
	ПараметрыЗакрытия.Вставить("ТипЦен", Объект.ТипЦен);
	ПараметрыЗакрытия.Вставить("ТипЦенАкционные", Объект.ТипЦенАкционные);
	ПараметрыЗакрытия.Вставить("Режим", Объект.Режим);
	ПараметрыЗакрытия.Вставить("НастройкиОтбора", Новый ХранилищеЗначения(КомпоновщикНастроек.Настройки));
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ПечатьЭтикетокИЦенниковНастройкиФормы", "", ПараметрыЗакрытия);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиНаСервере()
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ПечатьЭтикетокИЦенниковНастройкиФормы", "");
	Если Настройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеСохраненнойНастройки = Неопределено;
	Если Настройки.Свойство("ВидимостьОтбора", ЗначениеСохраненнойНастройки) Тогда
		ВидимостьОтбора = ЗначениеСохраненнойНастройки;
	КонецЕсли;
	Если Настройки.Свойство("ВидимостьРежимаЗаполнения", ЗначениеСохраненнойНастройки) Тогда
		ВидимостьРежимаЗаполнения = ЗначениеСохраненнойНастройки;
	КонецЕсли;
	Если Настройки.Свойство("ЗаполнитьКоличествоЭтикетокПоДокументу", ЗначениеСохраненнойНастройки) Тогда
		ЗаполнитьКоличествоЭтикетокПоДокументу = ЗначениеСохраненнойНастройки;
	КонецЕсли;
	Если Настройки.Свойство("СкрыватьКомандуЗаполненияПоДокументу", ЗначениеСохраненнойНастройки) Тогда
		СкрыватьКомандуЗаполненияПоДокументу = ЗначениеСохраненнойНастройки;
	КонецЕсли;
	Если Настройки.Свойство("ЦеныПоВидуЦены", ЗначениеСохраненнойНастройки) Тогда
		ЦеныПоВидуЦены = ЗначениеСохраненнойНастройки;
	КонецЕсли;
	Если Настройки.Свойство("ТипЦен", ЗначениеСохраненнойНастройки) Тогда
		Объект.ТипЦен = ЗначениеСохраненнойНастройки;
	КонецЕсли;
	
	Если Настройки.Свойство("ТипЦенАкционные", ЗначениеСохраненнойНастройки) Тогда
		Объект.ТипЦенАкционные = ЗначениеСохраненнойНастройки;
	КонецЕсли;
	
	Если Настройки.Свойство("Режим", ЗначениеСохраненнойНастройки) Тогда
		Если ЗначениеЗаполнено(ЗначениеСохраненнойНастройки) Тогда
			Объект.Режим = ЗначениеСохраненнойНастройки;
			УстановитьРежим(Объект.Режим);
		КонецЕсли;
	КонецЕсли;
	Если Настройки.Свойство("НастройкиОтбора", ЗначениеСохраненнойНастройки) Тогда
		Если ЗначениеСохраненнойНастройки <> Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(ЗначениеСохраненнойНастройки.Получить());
			УдалитьНепроверяемыеОтборыКомпоновщика(КомпоновщикНастроек);
		Иначе
			ЗагрузитьНастройкиОтбораПоУмолчанию(КомпоновщикНастроек, "ПоляШаблонаПоУмолчанию");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Процедура устанавливает шаблон ценников для выделенных строк.
//
//  Параметры:
//      ВыбранноеЗначение  	- Справочник.ХранилищеШаблонов 	- Выбранный шаблон.
//      Параметры 			- Структура 					- Структура параметров.
//
&НаКлиенте
Процедура ОбработчикУстановкиШаблонаЦенников(ВыбранноеЗначение, Параметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		Количество = 0;
		
		МассивСтрок = Элементы.Товары.ВыделенныеСтроки;
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			СтрокаТЧ = Объект.Товары.НайтиПоИдентификатору(НомерСтроки);
			СтрокаТЧ.ШаблонЦенника  = ВыбранноеЗначение;
			СтрокаТЧ.Выбран         = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
			
			Если СтрокаТЧ.Выбран Тогда
				Количество = Количество + 1;
			КонецЕсли;
			
		КонецЦикла;
		
		КоличествоВсего = МассивСтрок.Количество();
		
		Текст = НСтр("ru = 'Установлен шаблон ""%Шаблон%"".'");
		Текст = СтрЗаменить(Текст, "%Шаблон%", ВыбранноеЗначение);
		
		ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего);
		
		ОбновитьТипыПринтеров(МассивСтрок, "Ценник");
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает шаблон этикеток для выделенных строк.
//
//  Параметры:
//      ВыбранноеЗначение  		- Справочник.ХранилищеШаблонов 	- Выбранный шаблон.
//      ДополнительныеПараметры - Структура 					- Структура параметров.
//
&НаКлиенте
Процедура ОбработчикУстановкиШаблонаЭтикеток(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		Количество = 0;
		
		Если ДополнительныеПараметры.ТекущаяСтраница = "СтраницаТовары" Тогда
			МассивСтрок = Элементы.Товары.ВыделенныеСтроки;
			Для Каждого НомерСтроки Из МассивСтрок Цикл
				СтрокаТЧ = Объект.Товары.НайтиПоИдентификатору(НомерСтроки);
				СтрокаТЧ.ШаблонЭтикетки = ВыбранноеЗначение;
				СтрокаТЧ.Выбран = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
				
				Если СтрокаТЧ.Выбран Тогда
					Количество = Количество + 1;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновитьТипыПринтеров(МассивСтрок, "Этикетка");
			
		КонецЕсли;
		
		КоличествоВсего = МассивСтрок.Количество();
		
		Текст = НСтр("ru = 'Установлен шаблон ""%Шаблон%"".'");
		Текст = СтрЗаменить(Текст, "%Шаблон%", ВыбранноеЗначение);
		
		ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура оповещение заполнения таблицы товаров.
//
//  Параметры:
//      Результат  				- КодВозвратаДиалога 	- Ответ пользователя на вопрос
//      ДополнительныеПараметры - Структура 			- Структура параметров.
//
&НаКлиенте
Процедура ОповещениеЗаполнитьТаблицуТоваров(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьТаблицуТоваровНаСервере(Истина);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ЗаполнитьТаблицуТоваровНаСервере(Ложь);
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает количество ценников.
//
//  Параметры:
//      ВыбранноеЗначение  		- Число 	- Выбранное количество.
//      ДополнительныеПараметры - Структура - Структура параметров.
//
&НаКлиенте
Процедура ОповещениеУстановитьКоличествоЦенников(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если НЕ ВыбранноеЗначение = Неопределено Тогда
		
		Количество = 0;
		
		МассивСтрок = Элементы.Товары.ВыделенныеСтроки;
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			СтрокаТЧ = Объект.Товары.НайтиПоИдентификатору(НомерСтроки);
			СтрокаТЧ.КоличествоЦенников  = ВыбранноеЗначение;
			СтрокаТЧ.Выбран              = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
			
			Если СтрокаТЧ.Выбран Тогда
				Количество = Количество + 1;
			КонецЕсли;
			
		КонецЦикла;
		
		КоличествоВсего = МассивСтрок.Количество();
		
		Текст = НСтр("ru = 'Установлено количество ценников %Количество%.'");
		Текст = СтрЗаменить(Текст, "%Количество%", ВыбранноеЗначение);
		
		ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает количество этикеток.
//
//  Параметры:
//      ВыбранноеЗначение  		- Число 	- Выбранное количество.
//      ДополнительныеПараметры - Структура - Структура параметров.
//
&НаКлиенте
Процедура ОповещениеУстановитьКоличествоЭтикеток(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если НЕ ВыбранноеЗначение = Неопределено Тогда
		
		Количество = 0;
		Если ДополнительныеПараметры.ТекущаяСтраница = "СтраницаТовары" Тогда
			
			МассивСтрок = Элементы.Товары.ВыделенныеСтроки;
			Для Каждого НомерСтроки Из МассивСтрок Цикл
				СтрокаТЧ = Объект.Товары.НайтиПоИдентификатору(НомерСтроки);
				СтрокаТЧ.КоличествоЭтикеток  = ВыбранноеЗначение;
				СтрокаТЧ.Выбран              = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
				
				Если СтрокаТЧ.Выбран Тогда
					Количество = Количество + 1;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает шаблон этикеток для выделенных строк.
//
//  Параметры:
//      РезультатЗакрытия  		- Структура - Результат подбора.
//      ДополнительныеПараметры - Структура - Структура параметров.
//
&НаКлиенте
Процедура ОповещениеПодборПроизведен(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда
		
		АдресЗапасовВХранилище = РезультатЗакрытия.Корзина;
		
		Если НЕ ПустаяСтрока(АдресЗапасовВХранилище) Тогда
			
			ПолучитьЗапасыИзХранилища(АдресЗапасовВХранилище, "Товары");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНепроверяемыеОтборыВГруппе(КоллекцияЭлементов, Компоновщик)
	
	Количество = КоллекцияЭлементов.Количество();
	
	Для Индекс = 1 По Количество Цикл
		
		ЭлементОтбора = КоллекцияЭлементов[Количество - Индекс];
		
		Если ТипЗнч(ЭлементОтбора)=Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
			
			Если Компоновщик.Настройки.Отбор.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
				КоллекцияЭлементов.Удалить(ЭлементОтбора);
			КонецЕсли;
			
		Иначе
			УдалитьНепроверяемыеОтборыВГруппе(ЭлементОтбора.Элементы, Компоновщик);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНепроверяемыеОтборыКомпоновщика(Компоновщик)

	Количество = Компоновщик.Настройки.Отбор.Элементы.Количество();
	
	Для Индекс = 1 По Количество Цикл
		
		ЭлементОтбора = Компоновщик.Настройки.Отбор.Элементы[Количество - Индекс];
		
		Если ТипЗнч(ЭлементОтбора)=Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
			
			Если Компоновщик.Настройки.Отбор.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
				Компоновщик.Настройки.Отбор.Элементы.Удалить(ЭлементОтбора);
			КонецЕсли;
			
		Иначе
			УдалитьНепроверяемыеОтборыВГруппе(ЭлементОтбора.Элементы, Компоновщик);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

// Процедура выполняет загрузку настроек отбора из настроек по умолчанию.
//
&НаСервере
Процедура ЗагрузитьНастройкиОтбораПоУмолчанию(Компоновщик, ИмяМакета)
	
	// Отбор для товаров
	СхемаКомпоновкиДанных = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет(ИмяМакета);
	АдресСКД = ПоместитьВоВременноеХранилище(
					СхемаКомпоновкиДанных,
					ЭтаФорма.УникальныйИдентификатор);
	Источник = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСКД);
	Компоновщик.Инициализировать(Источник);
	Компоновщик.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	Компоновщик.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
	УдалитьНепроверяемыеОтборыКомпоновщика(Компоновщик);
	
КонецПроцедуры

&НаСервере
Функция УстановитьЭлементОтбораСКД(ИмяПараметра, ЗначениеПараметра, Использование = Истина)
	
	Поле = Новый ПолеКомпоновкиДанных(ИмяПараметра);
	
	Отбор = КомпоновщикНастроек.Настройки.Отбор;
	
	НайденныйЭлемент = Неопределено;
	
	НайденныйЭлемент = НайтиОтборВКомпоновщике(ИмяПараметра);
	
	Если НайденныйЭлемент = Неопределено Тогда
		НайденныйЭлемент = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеПараметра) = Тип("Массив") Тогда
		НайденныйЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		СписокЗначений = Новый СписокЗначений;
		СписокЗначений.ЗагрузитьЗначения(ЗначениеПараметра);
		ПравоеЗначение = СписокЗначений;
	Иначе
		НайденныйЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ПравоеЗначение = ЗначениеПараметра;
	КонецЕсли;
	
	НайденныйЭлемент.Использование  = Использование;
	НайденныйЭлемент.ЛевоеЗначение  = Поле;
	НайденныйЭлемент.ПравоеЗначение = ПравоеЗначение;
	
	Возврат НайденныйЭлемент;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьОповещениеПользователюОВозможнойОшибке(Текст, Количество, КоличествоВсего)
	
	Если Количество < КоличествоВсего Тогда
		
		Текст = Текст
		        + ?(Текст <> "", Символы.ПС, "")
		        + НСтр("ru = 'Отметка выбора установлена для %КоличествоВыбранных% строк из %КоличествоВсего%.'");
	
		Текст = Текст
		        + Символы.ПС
		        + НСтр("ru = 'Проверьте, заполнены ли все обязательные реквизиты.'");
	
		Текст = СтрЗаменить(Текст, "%КоличествоВыбранных%", Количество);
		Текст = СтрЗаменить(Текст, "%КоличествоВсего%", КоличествоВсего);
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Операция выполнена'"), , Текст);
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКоличествоПоУмолчаниюВСтрокеТЧНаСервере(СтрокаТЧ)
	
	// Расчет количества Этикеток.
	Если Объект.Режим = "ПечатьЭтикеток" ИЛИ Объект.Режим = "ПечатьЦенниковИЭтикеток" Тогда
		
		Если ЗаполнитьКоличествоЭтикетокПоДокументу Тогда
			СтрокаТЧ.КоличествоЭтикеток = СтрокаТЧ.КоличествоВДокументе;
		Иначе
			СтрокаТЧ.КоличествоЭтикеток = ?(СтрокаТЧ.ОстатокНаСкладе > 0, СтрокаТЧ.ОстатокНаСкладе, 1);
		КонецЕсли;
		
	КонецЕсли;
	
	// Расчет количества Ценников.
	Если Объект.Режим = "ПечатьЦенников" ИЛИ Объект.Режим = "ПечатьЦенниковИЭтикеток" Тогда
		
		СтрокаТЧ.КоличествоЦенников = 1;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТоваровНаСервере(Сохранять = Истина, ПересчитиватьЦены = Истина)
	
	// Сохранение выбранных позиций для их последующего восстановления.
	Если Сохранять Тогда
		ТаблицаВыбранныеПозиции = Объект.Товары.Выгрузить();
	КонецЕсли;
	
	// Поля необходимые для вывода в таблицу товаров на форме.
	НастройкиПечати = Обработки.ПечатьЭтикетокИЦенников.НовыеНастройкиПечати();
	
	НастройкиПечати.ОбязательныеПоля.Добавить("Цена");
	НастройкиПечати.ОбязательныеПоля.Добавить("Весовой");
	НастройкиПечати.ОбязательныеПоля.Добавить("Штрихкод");
	НастройкиПечати.ОбязательныеПоля.Добавить("Количество");
	НастройкиПечати.ОбязательныеПоля.Добавить("Номенклатура");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
		НастройкиПечати.ОбязательныеПоля.Добавить("Характеристика");
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЕдиницыИзмерения") Тогда
		НастройкиПечати.ОбязательныеПоля.Добавить("ЕдиницаИзмерения");
	КонецЕсли;
	НастройкиПечати.ОбязательныеПоля.Добавить("ОстатокНаСкладе");
	НастройкиПечати.ОбязательныеПоля.Добавить("Организация");
	
	НастройкиПечати.ОбязательныеПоля.Добавить("НоменклатураНаименованиеПолное");
	НастройкиПечати.ОбязательныеПоля.Добавить("СтавкаНДС");
	НастройкиПечати.ОбязательныеПоля.Добавить("СуммаНДС");
	НастройкиПечати.ОбязательныеПоля.Добавить("ПроизвольныйТекст1");
	НастройкиПечати.ОбязательныеПоля.Добавить("ПроизвольныйТекст2");
	НастройкиПечати.ОбязательныеПоля.Добавить("ПроизвольнаяДата");
	
	НастройкиПечати.ПараметрыДанных.Вставить("ТипЦен"    , Объект.ТипЦен);
	НастройкиПечати.ПараметрыДанных.Вставить("ТипЦенАкционный"    , Объект.ТипЦенАкционные);
	НастройкиПечати.ПараметрыДанных.Вставить("ЦеныПоВидуЦены" , Объект.ЦеныПоВидуЦены);
	НастройкиПечати.ПараметрыДанных.Вставить("ЦеныНаДату" , Объект.ЦеныНаДату);
	НастройкиПечати.ПараметрыДанных.Вставить("ЦеныНаДатуАкционные" , Объект.ЦеныНаДатуАкционные);
	НастройкиПечати.ПараметрыДанных.Вставить("ПодразделениеКомпании", Объект.ПодразделениеКомпании);
	НастройкиПечати.ПараметрыДанных.Вставить("Организация", Объект.Организация);
	НастройкиПечати.ПараметрыДанных.Вставить("ИспользоватьАссортимент", Ложь);
	НастройкиПечати.ПараметрыДанных.Вставить("СкладКомпании", Объект.СкладКомпании);
	
	НастройкиПечати.КомпоновщикНастроек = КомпоновщикНастроек;
	Если Объект.ИсходныеДанные.Количество() > 0 ИЛИ Объект.ПечатьИзДокумента Тогда
		НастройкиПечати.ИмяМакетаСхемыКомпоновкиДанных = "ПоляШаблонаПоУмолчанию";
		НастройкиПечати.ИсходныеДанные = Объект.ИсходныеДанные.Выгрузить();
	Иначе
		НастройкиПечати.ИмяМакетаСхемыКомпоновкиДанных = "ПоляШаблонаБД";
	КонецЕсли;
	
	Объект.Товары.Очистить();
	
	// Загрузка сформированного списка товаров.
	Если ПечатьКодовМаркировки Тогда
		НастройкиПечати.Вставить("ТаблицаКодовМаркировки",
			ПолучитьИзВременногоХранилища(АдресТаблицыКодовМаркировки));
		НастройкиПечати.Вставить("ПечатьКодовМаркировки", Истина);
	КонецЕсли;
	
	ДанныеДляПечати = Обработки.ПечатьЭтикетокИЦенников.ПодготовитьДанныеДляПечати(НастройкиПечати);
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	
	ИспользоватьЕдиницыИзмерения = ПолучитьФункциональнуюОпцию("ИспользоватьЕдиницыИзмерения");
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСкладПродажи", Новый Структура("РабочееМесто", 
				 МенеджерОборудованияВызовСервера.РабочееМестоКлиента()));
	
	Для Каждого СтрокаТЧ Из ДанныеДляПечати.ТаблицаТоваров Цикл
		
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура         = СтрокаТЧ.Номенклатура;
		
		
		Если ИспользоватьХарактеристикиНоменклатуры Тогда
			НоваяСтрока.Характеристика       = СтрокаТЧ.Характеристика;
			
			Если ЗначениеЗаполнено(НоваяСтрока.Характеристика) Тогда
				НоваяСтрока.ХарактеристикиИспользуются = Истина;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока.НаименованиеПолное = СтрокаТЧ.НоменклатураНаименованиеПолное;
		
		Если ИспользоватьЕдиницыИзмерения Тогда
			НоваяСтрока.ЕдиницаИзмерения             = СтрокаТЧ.ЕдиницаИзмерения;
			НоваяСтрока.Коэффициент  = ПолучитьКоэфЕдиницыИзмерения(НоваяСтрока.ЕдиницаИзмерения);
		КонецЕсли;
		
		НоваяСтрока.Штрихкод             = СтрокаТЧ.Штрихкод;
		
		НоваяСтрока.ТипШаблонаЦенника = 0;
		НоваяСтрока.ТипШаблонаЭтикетки = 0;
		
		НоваяСтрока.ОстатокНаСкладе      = СтрокаТЧ.ОстатокНаСкладе;
		НоваяСтрока.КоличествоВДокументе = СтрокаТЧ.Количество;
		
		Если ТипЗнч(НоваяСтрока.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			ИспользованиеХарактеристик   = НоваяСтрока.Номенклатура.ТипНоменклатуры.ИспользованиеХарактеристик;
			ИспользованиеЕдиницИзмерения = НоваяСтрока.Номенклатура.ТипНоменклатуры.ИспользованиеЕдиницИзмерения;
		Иначе
			ИспользованиеХарактеристик   = 0;
			ИспользованиеЕдиницИзмерения = 0;
		КонецЕсли;
	
		Если НоваяСтрока.Свойство("ВладелецХарактеристики") Тогда
			Если ИспользованиеХарактеристик = 1 Тогда
				НоваяСтрока.ВладелецХарактеристики = НоваяСтрока.Номенклатура.ТипНоменклатуры;
			ИначеЕсли ИспользованиеХарактеристик = 2 Тогда
				НоваяСтрока.ВладелецХарактеристики = НоваяСтрока.Номенклатура;
			Иначе
				НоваяСтрока.ВладелецХарактеристики = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если НоваяСтрока.Свойство("ВладелецЕдиницыИзмерения") Тогда
			Если ИспользованиеЕдиницИзмерения = 1 Тогда
				НоваяСтрока.ВладелецЕдиницыИзмерения = НоваяСтрока.Номенклатура.ТипНоменклатуры;
			ИначеЕсли ИспользованиеЕдиницИзмерения = 2 Тогда
				НоваяСтрока.ВладелецЕдиницыИзмерения = НоваяСтрока.Номенклатура;
			Иначе
				НоваяСтрока.ВладелецЕдиницыИзмерения = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если ПересчитиватьЦены
			И ТипЗнч(НоваяСтрока.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			НоваяСтрока.Цена = ЦенообразованиеСервер.ПолучитьЦену(
				Объект.ТипЦен,
				НоваяСтрока.Номенклатура,
				, , , ,
				НоваяСтрока.Характеристика,
				НоваяСтрока.ЕдиницаИзмерения,
				Объект.ПодразделениеКомпании
			);
			
			СтавкаНДСИзКарточки = НоваяСтрока.Номенклатура.СтавкаНДС;
			Если ЗначениеЗаполнено(СтавкаНДСИзКарточки) Тогда
				Если Объект.ТипЦен.ЦенаВключаетНДС Тогда
					Ставка = СтавкаНДСИзКарточки.Ставка;
					ТекЦена = НоваяСтрока.Цена;
					НоваяСтрока.СтавкаНДС = СтавкаНДСИзКарточки;
					НоваяСтрока.СуммаНДС = Окр((ТекЦена * Ставка)/(100 + Ставка), 2);  
				Иначе
					Ставка = СтавкаНДСИзКарточки.Ставка;
					СуммаНДС = Окр((НоваяСтрока.Цена * Ставка)/100, 2);
					НоваяСтрока.Цена = НоваяСтрока.Цена + СуммаНДС;
					НоваяСтрока.СтавкаНДС = СтавкаНДСИзКарточки;
					НоваяСтрока.СуммаНДС = СуммаНДС;	
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			НоваяСтрока.Цена = СтрокаТЧ.Цена;
			НоваяСтрока.СуммаНДС = СтрокаТЧ.СуммаНДС;
			НоваяСтрока.СтавкаНДС = СтрокаТЧ.СтавкаНДС;
			НоваяСтрока.ПроизвольныйТекст1 = СтрокаТЧ.ПроизвольныйТекст1;
			НоваяСтрока.ПроизвольныйТекст2 = СтрокаТЧ.ПроизвольныйТекст2;
			НоваяСтрока.ПроизвольнаяДата = СтрокаТЧ.ПроизвольнаяДата;
		КонецЕсли;
		
		УстановитьКоличествоПоУмолчаниюВСтрокеТЧНаСервере(НоваяСтрока);
		
		// Восстановление позиций, сохраненных перед заполнением ТЧ. 
		Если Сохранять Тогда
			ПараметрыОтбора = Новый Структура();
			ПараметрыОтбора.Вставить("Номенклатура", НоваяСтрока.Номенклатура);
			Если ИспользоватьХарактеристикиНоменклатуры Тогда
				ПараметрыОтбора.Вставить("Характеристика", НоваяСтрока.Характеристика);
			КонецЕсли;
			Если ИспользоватьЕдиницыИзмерения Тогда
				ПараметрыОтбора.Вставить("ЕдиницаИзмерения", НоваяСтрока.ЕдиницаИзмерения);
			КонецЕсли;
			НайденныеСтроки = ТаблицаВыбранныеПозиции.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныеСтроки[0],"ШаблонЦенника, ШаблонЭтикетки, КоличествоЦенников, КоличествоЭтикеток");
			КонецЕсли;
		Иначе
			НоваяСтрока.ШаблонЦенника = НоваяСтрока.Номенклатура.ТипНоменклатуры.ШаблонЦенника;
			НоваяСтрока.ШаблонЭтикетки = НоваяСтрока.Номенклатура.ТипНоменклатуры.ШаблонЭтикетки;
		КонецЕсли;
		НоваяСтрока.Выбран = ПроверитьВозможностьВыбораТовара(НоваяСтрока, Объект.Режим);
		
	КонецЦикла;
	
	Элементы.Товары.Обновить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьВозможностьВыбораТовара(ТекущиеДанные, Режим)
	
	Если Режим = "ПечатьЦенниковИЭтикеток" Тогда
	
		Если (ТекущиеДанные.КоличествоЦенников = 0)
			И ТекущиеДанные.КоличествоЭтикеток = 0 Тогда
			
			Возврат Ложь;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
			И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки) Тогда
			
			Возврат Ложь;
			
		ИначеЕсли (ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
			      И НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)) Тогда

			Возврат Ложь;
			
		ИначеЕсли (НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника)
			      И ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки)) Тогда
			
			Возврат Ложь;
			
		Иначе
			
			Возврат Истина;
			
		КонецЕсли;
	
	ИначеЕсли Режим = "ПечатьЭтикеток" Тогда
		
		Если ТекущиеДанные.КоличествоЭтикеток = 0 ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЭтикетки) Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	ИначеЕсли Режим = "ПечатьЦенников" Тогда
		
		Если ТекущиеДанные.КоличествоЦенников = 0 ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.ШаблонЦенника) Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

// Процедура устанавливает видимость элементов в зависимости от настройки параметров формы.
//
&НаСервере
Процедура ОбновитьВидимостьЭлементов()
	
	ВидимостьЭтикетки = Ложь;
	ВидимостьЦенники  = Ложь;
	
	Если Объект.Режим = "ПечатьЦенниковИЭтикеток" Тогда
		ВидимостьЭтикетки = Истина;
		ВидимостьЦенники  = Истина;
	ИначеЕсли Объект.Режим = "ПечатьЦенников" Тогда
		ВидимостьЭтикетки = Ложь;
		ВидимостьЦенники  = Истина;
	ИначеЕсли Объект.Режим = "ПечатьЭтикеток" Тогда
		ВидимостьЭтикетки = Истина;
		ВидимостьЦенники  = Ложь;
	КонецЕсли;
	
	Элементы.ТоварыКоличествоЭтикеток.Видимость               = ВидимостьЭтикетки;
	Элементы.ТоварыШаблонЭтикетки.Видимость                   = ВидимостьЭтикетки;
	Элементы.ТоварыТипШаблонаЭтикетки.Видимость               = ВидимостьЭтикетки;
	Элементы.ТоварыУстановитьШаблонЭтикеток.Видимость         = ВидимостьЭтикетки;
	Элементы.ТоварыУстановитьКоличествоЭтикеток.Видимость     = ВидимостьЭтикетки;
	Элементы.ЗаполнитьКоличествоЭтикетокПоДокументу.Видимость = ВидимостьЭтикетки И Объект.ПечатьИзДокумента И НЕ СкрыватьКомандуЗаполненияПоДокументу;
	
	Элементы.ТоварыКоличествоЦенников.Видимость               = ВидимостьЦенники;
	Элементы.ТоварыШаблонЦенника.Видимость                    = ВидимостьЦенники;
	Элементы.ТоварыТипШаблонаЦенника.Видимость                = ВидимостьЦенники;
	Элементы.ТоварыУстановитьШаблонЦенников.Видимость         = ВидимостьЦенники;
	Элементы.ТоварыУстановитьКоличествоЦенников.Видимость     = ВидимостьЦенники;
	
	Если Объект.ПечатьИзДокумента
		ИЛИ Объект.ПечатьИзОбработки Тогда
	Иначе
		Если ЗначениеЗаполнено(СтраницаПриОткрытии) Тогда
			Элементы.СтраницаТовары.Видимость = Элементы.СтраницаТовары.Имя = СтраницаПриОткрытии;
		Иначе
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимПечатьЦенниковНаСервере()
	
	ПереключениеРежима = ?(Объект.Режим <> "ПечатьЦенников", Истина, Ложь);
	Объект.Режим = "ПечатьЦенников";
	
	Элементы.УстановитьРежимПечатьЦенниковИЭтикеток.Пометка = Ложь;
	Элементы.УстановитьРежимПечатьЦенников.Пометка = Истина;
	Элементы.УстановитьРежимПечатьЭтикеток.Пометка = Ложь;
	
	ОбновитьВидимостьЭлементов();
	Если ПереключениеРежима Тогда
		ПроверитьВыборСтрокПриПереключенииРежимаПечати();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимПечатьЦенниковИЭтикетокНаСервере()
	
	ПереключениеРежима = ?(Объект.Режим <> "ПечатьЦенников", Истина, Ложь);
	Объект.Режим = "ПечатьЦенников";
	
	Элементы.УстановитьРежимПечатьЦенниковИЭтикеток.Пометка = Истина;
	Элементы.УстановитьРежимПечатьЦенников.Пометка = Ложь;
	Элементы.УстановитьРежимПечатьЭтикеток.Пометка = Ложь;
	
	ОбновитьВидимостьЭлементов();
	Если ПереключениеРежима Тогда
		ПроверитьВыборСтрокПриПереключенииРежимаПечати();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимПечатьЭтикетокНаСервере()
	
	ПереключениеРежима = ?(Объект.Режим <> "ПечатьЭтикеток", Истина, Ложь);
	Объект.Режим = "ПечатьЭтикеток";
	
	Элементы.УстановитьРежимПечатьЦенниковИЭтикеток.Пометка = Ложь;
	Элементы.УстановитьРежимПечатьЦенников.Пометка = Ложь;
	Элементы.УстановитьРежимПечатьЭтикеток.Пометка = Истина;
	
	ОбновитьВидимостьЭлементов();
	Если ПереключениеРежима Тогда
		ПроверитьВыборСтрокПриПереключенииРежимаПечати();
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет установку выбранного режима печати.
//
&НаСервере
Процедура УстановитьРежим(ПараметрРежим)
	
	Если ПараметрРежим = "ПечатьЦенниковИЭтикеток" Тогда
		УстановитьРежимПечатьЦенниковИЭтикетокНаСервере();
	ИначеЕсли ПараметрРежим = "ПечатьЦенников" Тогда
		УстановитьРежимПечатьЦенниковНаСервере();
	ИначеЕсли ПараметрРежим = "ПечатьЭтикеток" Тогда
		УстановитьРежимПечатьЭтикетокНаСервере();
	Иначе
		ВызватьИсключение НСтр("ru = 'Установленный режим печати не поддерживается'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УстановитьНовыеШтрихкодыEAN13НаСервере(ОписаниеОшибки)
	
	Количество = 0;
	МассивСтрок = Элементы.Товары.ВыделенныеСтроки;
	
	Штрихкоды = Новый Соответствие;
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			СтрокаТЧ = Объект.Товары.НайтиПоИдентификатору(НомерСтроки);
			
			Если Не ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) Тогда
				Количество = Количество + 1;
			Иначе
				Продолжить;
			КонецЕсли;
			
			НовыйШтрихкод = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
			НовыйШтрихкод.Объект = СтрокаТЧ.Номенклатура; 
			Если СтрокаТЧ.Номенклатура.ТипНоменклатуры.ИспользованиеШтрихКодов = 3 Тогда
				Если ЗначениеЗаполнено(СтрокаТЧ.Характеристика) Тогда
					НовыйШтрихкод.ХарактеристикаНоменклатуры = СтрокаТЧ.Характеристика;
				Иначе 
			        ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"Товары",
						СтрокаТЧ.НомерСтроки,
						"Характеристика"
					);
					ОбщегоНазначения.СообщитьПользователю(
						СтрШаблон(
							НСтр("ru = 'В строке № %1 у номенклатуры %2 не указана характеристика.'"),
							СтрокаТЧ.НомерСтроки, 
							СтрокаТЧ.Номенклатура
						),
						, 
						ПутьКТабличнойЧасти,
						"Объект"
					);
					Продолжить;
				КонецЕсли;
			ИначеЕсли СтрокаТЧ.Номенклатура.ТипНоменклатуры.ИспользованиеШтрихКодов = 2 Тогда
				Если ЗначениеЗаполнено(СтрокаТЧ.ЕдиницаИзмерения) Тогда
					НовыйШтрихкод.ЕдиницаИзмерения       = СтрокаТЧ.ЕдиницаИзмерения;
				Иначе
					ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"Товары",
						СтрокаТЧ.НомерСтроки,
						"ЕдиницаИзмерения"
					);
					ОбщегоНазначения.СообщитьПользователю(
						СтрШаблон(
							НСтр("ru = 'В строке № %1 у номенклатуры %2 не указана единица измерения.'"),
							СтрокаТЧ.НомерСтроки, 
							СтрокаТЧ.Номенклатура
						),
						, 
						ПутьКТабличнойЧасти,
						"Объект"
					);
					Продолжить;
				КонецЕсли;
			ИначеЕсли СтрокаТЧ.Номенклатура.ТипНоменклатуры.ИспользованиеШтрихКодов = 0 Тогда  
				ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары",
					СтрокаТЧ.НомерСтроки,
					"Номенклатура"
				);
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = 'В строке № %1 у номенклатуры %2 в настройке типа номенклатуры отключено ведение штрихкодов.'"),
						СтрокаТЧ.НомерСтроки, 
						СтрокаТЧ.Номенклатура
					),
					, 
					ПутьКТабличнойЧасти,
					"Объект"
				);
				Продолжить;
			КонецЕсли;
			
			НовыйШтрихкод.Штрихкод = ШтрихкодированиеВызовСервера.СформироватьНовыйШтрихкод(СтрокаТЧ.Номенклатура);
			НовыйШтрихкод.Записать();
			Штрихкоды.Вставить(СтрокаТЧ, НовыйШтрихкод.Штрихкод);		
		КонецЦикла;
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		
		ОписаниеОшибки = НСтр("ru = 'При записи штрихкодов произошла ошибка.
		                      |Запись штрихкодов не выполнена.
		                      |Дополнительное описание:
		                      |%ДополнительноеОписание%'");
		ОписаниеОшибки = СтрЗаменить(ОписаниеОшибки, "%ДополнительноеОписание%", ИнформацияОбОшибке().Описание);
		
		Возврат 0;
	КонецПопытки;
		
	Для Каждого КлючИЗначение Из Штрихкоды Цикл
		КлючИЗначение.Ключ.Штрихкод = КлючИЗначение.Значение;
	КонецЦикла;
	
	Возврат Количество;
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	УстановитьВидимостьПечатьИзДокумента();
	УстановитьВидимостьОтбора(Элементы, ВидимостьОтбора);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПечатьИзДокумента()
	
	Элементы.ГруппаПечатьИзДокумента.Видимость = Объект.ПечатьИзДокумента;
		
	Если Не Объект.ПечатьИзДокумента Тогда
		Возврат;
	КонецЕсли;
 
	Элементы.Гиперссылка1.Видимость = Ложь;
	Элементы.Гиперссылка2.Видимость = Ложь;
	Элементы.Гиперссылка3.Видимость = Ложь;

	КоличествоДокументов = СписокДокументов.Количество();
	МаксимальныйИндекс = Мин(2, КоличествоДокументов - 1);
	Индекс = 0;

	Пока Индекс <= МаксимальныйИндекс Цикл

		Гиперссылка = "Гиперссылка" + Строка(Индекс + 1);
		Элементы[Гиперссылка].Заголовок = СписокДокументов.Получить(Индекс);
		Элементы[Гиперссылка].Видимость = Истина;

		Индекс = Индекс + 1;
	КонецЦикла;

	Если КоличествоДокументов > 1 Тогда
		Элементы.ГруппаПечатьИзДокумента.Заголовок = НСтр("ru = 'Печать из документов'");
	КонецЕсли;

	Если КоличествоДокументов > 3 Тогда
		Элементы.ГиперссылкиНиз.Видимость = Истина;

		ЗаголовокДекорацияЕщеДокументов = НСтр("ru = '(еще %КолДок% док.)'");
		ЗаголовокДекорацияЕщеДокументов = СтрЗаменить(ЗаголовокДекорацияЕщеДокументов, "%КолДок%", КоличествоДокументов
			- (МаксимальныйИндекс + 1));
		Элементы.ДекорацияЕщеДокументов.Заголовок = ЗаголовокДекорацияЕщеДокументов;

	Иначе
		Элементы.ГиперссылкиНиз.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьОтбора(Знач Элементы, Знач ВидимостьОтбора)
	
	Если ВидимостьОтбора Тогда
		Элементы.ГруппаОтбор.Видимость = Истина;
		Элементы.Отбор.Заголовок = НСтр("ru = 'Скрыть отбор'");
	Иначе
		Элементы.ГруппаОтбор.Видимость = Ложь;
		Элементы.Отбор.Заголовок = НСтр("ru = 'Показать отбор'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКнопкуПоУмолчанию()
	
	Если Элементы.СтраницыТиповПечати.ТекущаяСтраница = Элементы.СтраницаТовары Тогда
		
		Элементы.Печать.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	ДобавитьТовары(ТаблицаТоваров);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТовары(Таблица, ИдентификаторСтроки = Неопределено)
	
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	ИспользоватьУпаковкиНоменклатуры = Ложь;
	
	НастройкиПечати = Обработки.ПечатьЭтикетокИЦенников.НовыеНастройкиПечати();
	
	НастройкиПечати.ОбязательныеПоля.Добавить("Цена");
	НастройкиПечати.ОбязательныеПоля.Добавить("Штрихкод");
	НастройкиПечати.ОбязательныеПоля.Добавить("Количество");
	НастройкиПечати.ОбязательныеПоля.Добавить("Номенклатура");
	
	Если ИспользоватьХарактеристикиНоменклатуры Тогда
		НастройкиПечати.ОбязательныеПоля.Добавить("Характеристика");
	КонецЕсли;
	Если ИспользоватьУпаковкиНоменклатуры Тогда
		НастройкиПечати.ОбязательныеПоля.Добавить("Упаковка");
	КонецЕсли;
	НастройкиПечати.ОбязательныеПоля.Добавить("ОстатокНаСкладе");
	НастройкиПечати.ОбязательныеПоля.Добавить("Организация");
	
	НастройкиПечати.ОбязательныеПоля.Добавить("НоменклатураНаименованиеПолное");
	
	ОкончаниеИмениМакетаСхемыКомпоновкиДанных="";
	
	НастройкиПечати.ИмяМакетаСхемыКомпоновкиДанных = "ПоляШаблона" + ОкончаниеИмениМакетаСхемыКомпоновкиДанных;
	НастройкиПечати.ИсходныеДанные = Таблица;
	
	СтруктураРезультата = Обработки.ПечатьЭтикетокИЦенников.ПодготовитьДанныеДляПечати(НастройкиПечати);
	Для Каждого СтрокаТЧ Из СтруктураРезультата.ТаблицаТоваров Цикл
		
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура         = СтрокаТЧ.Номенклатура;
		НоваяСтрока.НаименованиеПолное   = СтрокаТЧ.НоменклатураНаименованиеПолное;
		НоваяСтрока.Цена                 = СтрокаТЧ.Цена;
		НоваяСтрока.Штрихкод             = СтрокаТЧ.Штрихкод;
		НоваяСтрока.ОстатокНаСкладе      = СтрокаТЧ.ОстатокНаСкладе;
		
		Если ИспользоватьХарактеристикиНоменклатуры Тогда
			НоваяСтрока.Характеристика   = СтрокаТЧ.Характеристика;
		КонецЕсли;
		
		Если ИспользоватьУпаковкиНоменклатуры Тогда
			НоваяСтрока.Упаковка         = СтрокаТЧ.Упаковка;
		КонецЕсли;
		
		УстановитьКоличествоПоУмолчаниюВСтрокеТЧНаСервере(НоваяСтрока);
		ИдентификаторСтроки = НоваяСтрока.ПолучитьИдентификатор();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьВыборСтрокПриПереключенииРежимаПечати()
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
		Если СтрокаТЧ.Выбран Тогда
			
			СтрокаТЧ.Выбран = ПроверитьВозможностьВыбораТовара(СтрокаТЧ, Объект.Режим);
			
		КонецЕсли
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоЦенниковИЭтикетокПоДокументуНаСервере()
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		УстановитьКоличествоПоУмолчаниюВСтрокеТЧНаСервере(СтрокаТЧ)
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыШаблонЦенникаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если Результат<>Неопределено Тогда
		ТекущиеДанные.ШаблонЦенника = Результат;
	КонецЕсли;
	
	ОбновитьТипШаблона(ТекущиеДанные.ПолучитьИдентификатор(), "Ценник");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыШаблонЭтикеткиНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если Результат<>Неопределено Тогда
		ТекущиеДанные.ШаблонЭтикетки = Результат;
	КонецЕсли;
	
	ОбновитьТипШаблона(ТекущиеДанные.ПолучитьИдентификатор(), "Этикетка");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТипыПринтеров(СтрокиТовары, Назначение)
	
	Для Каждого ТекСтрока Из СтрокиТовары Цикл
		
		ОбновитьТипШаблона(ТекСтрока, Назначение)
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТипШаблона(ТоварыИдентификатор, Назначение)
	
	ТекущаяСтрока = Объект.Товары.НайтиПоИдентификатору(ТоварыИдентификатор);
	
	Если Назначение = "Ценник" Тогда
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.ШаблонЦенника) Тогда
			
			Если ТекущаяСтрока.ШаблонЦенника.ТипШаблона = Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
				ТекущаяСтрока.ТипШаблонаЦенника = 1;
			Иначе
				ТекущаяСтрока.ТипШаблонаЦенника = 2;
			КонецЕсли;
			
		Иначе
			ТекущаяСтрока.ТипШаблонаЦенника = 0;
		КонецЕсли;
		
	ИначеЕсли Назначение = "Этикетка" Тогда
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.ШаблонЭтикетки) Тогда
			
			Если ТекущаяСтрока.ШаблонЭтикетки.ТипШаблона = Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
				ТекущаяСтрока.ТипШаблонаЭтикетки = 1;
			Иначе
				ТекущаяСтрока.ТипШаблонаЭтикетки = 2;
			КонецЕсли;
			
		Иначе
			ТекущаяСтрока.ТипШаблонаЭтикетки = 0;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИмяТаблицыВыборки(ИмяСтраницы)
	
	ИмяТаблицыВыборки = "";
	МассивСтраниц = Новый Массив;
	МассивСтраниц.Добавить("СтраницаТовары");
	Если МассивСтраниц.Найти(ИмяСтраницы) <> Неопределено Тогда
		ИмяТаблицыВыборки = СтрЗаменить(ИмяСтраницы, "Страница", "");
	КонецЕсли;

	Возврат ИмяТаблицыВыборки;
	
КонецФункции

&НаСервере
Функция ПроверитьТипШаблоновЭтикеток()
	
	// Если в таблице товаров только шаблоны с типом "Этикетка (ценник) принтера этикеток",
	// то отправлять на печать не надо.
	
	Для Каждого СтрокаТоваров Из Объект.Товары Цикл
		
		Если Объект.Режим = "ПечатьЦенниковИЭтикеток" ИЛИ Объект.Режим = "ПечатьЦенников" Тогда
			
			Если СтрокаТоваров.Выбран
				И ЗначениеЗаполнено(СтрокаТоваров.ШаблонЦенника)
				И НЕ СтрокаТоваров.ШаблонЦенника.ТипШаблона = Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
				Возврат Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Объект.Режим = "ПечатьЦенниковИЭтикеток" ИЛИ Объект.Режим = "ПечатьЭтикеток" Тогда
			
			Если СтрокаТоваров.Выбран
				И ЗначениеЗаполнено(СтрокаТоваров.ШаблонЭтикетки)
				И НЕ СтрокаТоваров.ШаблонЭтикетки.ТипШаблона = Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
				Возврат Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ПересчитатьЦены(Параметр)
	
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.Цена = ЦенообразованиеСервер.ПолучитьЦену(
			Объект.ТипЦен,
			Строка.Номенклатура,
			Объект.ЦеныНаДату
			, , , ,
			Строка.Характеристика,
			Строка.ЕдиницаИзмерения,
			Объект.ПодразделениеКомпании
		);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает структуру параметров для октрытия обработки подбора
&НаКлиенте
Функция ЗаполнитьПараметрыПодбора()
	
	//ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	ПараметрыПодбора = Новый Структура;
	
	//ПараметрыПодбора.Вставить("Организация", ?(ЗначениеЗаполнено(Объект.Организация), Объект.Организация,
	//	УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекущийПользователь, "ОсновнаяОрганизация")));
	ПараметрыПодбора.Вставить("Дата", ТекущаяДата());
	ПараметрыПодбора.Вставить("ТипЦен", Объект.ТипЦен);
	ПараметрыПодбора.Вставить("ПериодЦен", Объект.ЦеныНаДату);
	ПараметрыПодбора.Вставить("УникальныйИдентификаторФормыВладельца", УникальныйИдентификатор);
	ПараметрыПодбора.Вставить("ПоказыватьНаборыКомплекты", Истина);
	ПараметрыПодбора.Вставить("ТипНоменклатуры", ТипыНоменклатуры());
	
	Возврат ПараметрыПодбора;
	
КонецФункции

&НаСервере
Функция ТипыНоменклатуры()
	
	ТипНоменклатуры = Новый СписокЗначений;
	
	Для каждого ЭлементМассива Из Элементы.ТоварыНоменклатура.ПараметрыВыбора Цикл
		Если ЭлементМассива.Имя = "Отбор.ТипНоменклатуры" Тогда
			Если ТипЗнч(ЭлементМассива.Значение) = Тип("ФиксированныйМассив") Тогда
				Для каждого ЭлементФиксМассива Из ЭлементМассива.Значение Цикл
					ТипНоменклатуры.Добавить(ЭлементФиксМассива);
				КонецЦикла; 
			Иначе
				ТипНоменклатуры.Добавить(ЭлементМассива.Значение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТипНоменклатуры;
	
КонецФункции

// ПодключаемоеОборудование
&НаСервере
Процедура ПолученыШтрихкоды(ДанныеШтрикодов)
	
	ОбъектыПоШтрихкоду = ШтрихкодированиеВызовСервера.НайтиОбъектыПоШтрихкоду(ДанныеШтрикодов.ШтрихКод, , Истина);
	
	Если ОбъектыПоШтрихкоду.Количество() = 0 Тогда
		СтруктураМаркировки = МаркировкаТоваровСервер.РазобратьШтриховойКодТовара(ДанныеШтрикодов.ШтрихКод);
		Если МаркировкаТоваровКлиентСервер.ЭтоКодТовараВФорматеDataMatrixGS1(
				ДанныеШтрикодов.ШтрихКод,
				СтруктураМаркировки) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Не найдена номенклатура по считанному коду %1 с кодом маркировки:'"),
					СтруктураМаркировки.EAN),,,
				"Объект");
			ОбщегоНазначения.СообщитьПользователю(
				МаркировкаТоваровКлиентСервер.СформироватьКодМаркировки(СтруктураМаркировки, Истина),,,
				"Объект");
		Иначе
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Не найдена номенклатура по считанному коду: %1'"),
					ДанныеШтрикодов.ШтрихКод
				),,,
				"Объект"
			); 

		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ОбработкаОбъектовПоШтрихкоду(ОбъектыПоШтрихкоду, ДанныеШтрикодов.ШтрихКод);
	
КонецПроцедуры // ПолученыШтрихкоды()

&НаСервере
Процедура ОбработкаОбъектовПоШтрихкоду(ОбъектыПоШтрихкоду, Штрихкод)
	
	// получим только те объекты, где штрихкод не запрещен
	НеЗапрещенныеОбъектыПоШтрихкоду = Новый Массив;
	Для Каждого ОбъектПоШтрихкоду Из ОбъектыПоШтрихкоду Цикл
		Если ТипЗнч(ОбъектПоШтрихкоду.Объект) <> Тип("СправочникСсылка.Номенклатура") Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ОбъектПоШтрихкоду.Запрет Тогда
			СтруктураСтроки = Новый Структура;
			СтруктураСтроки.Вставить("Объект",						ОбъектПоШтрихкоду.Объект);
			СтруктураСтроки.Вставить("ЕдиницаИзмерения",			ОбъектПоШтрихкоду.ЕдиницаИзмерения);
			СтруктураСтроки.Вставить("ХарактеристикаНоменклатуры",	ОбъектПоШтрихкоду.ХарактеристикаНоменклатуры);
			НеЗапрещенныеОбъектыПоШтрихкоду.Добавить(СтруктураСтроки);
		КонецЕсли;
	КонецЦикла;
	
	Если НеЗапрещенныеОбъектыПоШтрихкоду.Количество() = 0 Тогда
		
		// если все найденные объекты запрещены
		ОбъектПоШтрихкоду = ОбъектыПоШтрихкоду[0]; 
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = 'Штрихкод ""%1"" запрещен в системе'"),
				ОбъектПоШтрихкоду.ШтрихКод
			),,,
			"Объект"
		); 

		Возврат;
		
	КонецЕсли;
	
	НастройкиПечати = Обработки.ПечатьЭтикетокИЦенников.НовыеНастройкиПечати();
	
	НастройкиПечати.ОбязательныеПоля.Добавить("Цена");
	НастройкиПечати.ОбязательныеПоля.Добавить("Весовой");
	НастройкиПечати.ОбязательныеПоля.Добавить("Штрихкод");
	НастройкиПечати.ОбязательныеПоля.Добавить("Количество");
	НастройкиПечати.ОбязательныеПоля.Добавить("Номенклатура");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
		НастройкиПечати.ОбязательныеПоля.Добавить("Характеристика");
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЕдиницыИзмерения") Тогда
		НастройкиПечати.ОбязательныеПоля.Добавить("ЕдиницаИзмерения");
	КонецЕсли;
	НастройкиПечати.ОбязательныеПоля.Добавить("ОстатокНаСкладе");
	НастройкиПечати.ОбязательныеПоля.Добавить("Организация");
	
	НастройкиПечати.ОбязательныеПоля.Добавить("НоменклатураНаименованиеПолное");
	
	// Шаблоны этикеток и ценников.
	НастройкиПечати.ОбязательныеПоля.Добавить("Номенклатура.ТипНоменклатуры.ШаблонЭтикетки");
	НастройкиПечати.ОбязательныеПоля.Добавить("Номенклатура.ТипНоменклатуры.ШаблонЦенника");
	
	НастройкиПечати.ПараметрыДанных.Вставить("ТипЦен"    , Объект.ТипЦен);
	НастройкиПечати.ПараметрыДанных.Вставить("ТипЦенАкционный"    , Объект.ТипЦенАкционные);
	НастройкиПечати.ПараметрыДанных.Вставить("ЦеныПоВидуЦены" , Объект.ЦеныПоВидуЦены);
	НастройкиПечати.ПараметрыДанных.Вставить("ЦеныНаДату" , Объект.ЦеныНаДату);
	НастройкиПечати.ПараметрыДанных.Вставить("ЦеныНаДатуАкционные" , Объект.ЦеныНаДатуАкционные);
	
	НастройкиПечати.ПараметрыДанных.Вставить("ИспользоватьАссортимент", Ложь);
	
	НастройкиПечати.КомпоновщикНастроек = КомпоновщикНастроек;
	
	ДоступныеТипыНоменклатуры = Новый Массив;
	ДоступныеТипыНоменклатуры.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ДоступныеТипыНоменклатуры.Добавить(Тип("СправочникСсылка.ПрочиеАктивы"));
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Номенклатура",     Новый ОписаниеТипов(ДоступныеТипыНоменклатуры));
	Таблица.Колонки.Добавить("Характеристика",   Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Таблица.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	Таблица.Колонки.Добавить("Количество",       Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Цена",             Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Организация",      Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("СуммаНДС",         Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("СтавкаНДС",        Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС"));
	
	Для Каждого Строка Из НеЗапрещенныеОбъектыПоШтрихкоду Цикл
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Номенклатура = Строка.Объект;
		НоваяСтрока.Характеристика = Строка.ХарактеристикаНоменклатуры;
		НоваяСтрока.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;
		НоваяСтрока.Организация = Объект.Организация;
	КонецЦикла;
	
	НастройкиПечати.ИмяМакетаСхемыКомпоновкиДанных = "ПоляШаблонаПоУмолчанию";
	НастройкиПечати.ИсходныеДанные                 = Таблица;
	
	СтруктураРезультата = Обработки.ПечатьЭтикетокИЦенников.ПодготовитьДанныеДляПечати(НастройкиПечати);
	
	Если СтруктураРезультата.ТаблицаТоваров.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Данные = СтруктураРезультата.ТаблицаТоваров[0];
	
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	ИспользоватьЕдиницыИзмерения = ПолучитьФункциональнуюОпцию("ИспользоватьЕдиницыИзмерения");
	
	Для Каждого Строка Из СтруктураРезультата.ТаблицаТоваров Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура", Строка.Номенклатура);
		ПараметрыОтбора.Вставить("Характеристика", Строка.Характеристика);
		ПараметрыОтбора.Вставить("Штрихкод", Штрихкод);
		МассивСтрокТЧ = Объект.Товары.НайтиСтроки(ПараметрыОтбора);
		
		Если МассивСтрокТЧ.Количество() <> 0 Тогда
			НоваяСтрока = МассивСтрокТЧ[0];
			НоваяСтрока.КоличествоЭтикеток = НоваяСтрока.КоличествоЭтикеток + 1;
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.ОстатокНаСкладе = Строка[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров["ОстатокНаСкладе"]];
		
		Если ИспользоватьХарактеристикиНоменклатуры Тогда
			НоваяСтрока.ХарактеристикиИспользуются = Данные[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров["ХарактеристикиИспользуются"]];
		Иначе
			НоваяСтрока.ХарактеристикиИспользуются = Ложь;
		КонецЕсли;
	
		НоваяСтрока.ШаблонЦенника = Данные[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить("Номенклатура.ТипНоменклатуры.ШаблонЦенника")];
		НоваяСтрока.ШаблонЭтикетки = Данные[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить("Номенклатура.ТипНоменклатуры.ШаблонЭтикетки")];
		
		Если ИспользоватьЕдиницыИзмерения Тогда
			НоваяСтрока.ЕдиницаИзмерения = ОбъектПоШтрихкоду.ЕдиницаИзмерения;
		КонецЕсли;
		
		НоваяСтрока.КоличествоЦенников = 1;
		НоваяСтрока.КоличествоЭтикеток = 1;
		НоваяСтрока.Штрихкод = Штрихкод;
		
		Если ТипЗнч(НоваяСтрока.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			ИспользованиеХарактеристик   = НоваяСтрока.Номенклатура.ТипНоменклатуры.ИспользованиеХарактеристик;
			ИспользованиеЕдиницИзмерения = НоваяСтрока.Номенклатура.ТипНоменклатуры.ИспользованиеЕдиницИзмерения;
		Иначе
			ИспользованиеХарактеристик   = 0;
			ИспользованиеЕдиницИзмерения = 0;
		КонецЕсли;
		
		Если НоваяСтрока.Свойство("ВладелецХарактеристики") Тогда
			Если ИспользованиеХарактеристик = 1 Тогда
				НоваяСтрока.ВладелецХарактеристики = НоваяСтрока.Номенклатура.ТипНоменклатуры;
			ИначеЕсли ИспользованиеХарактеристик = 2 Тогда
				НоваяСтрока.ВладелецХарактеристики = НоваяСтрока.Номенклатура;
			Иначе
				НоваяСтрока.ВладелецХарактеристики = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если НоваяСтрока.Свойство("ВладелецЕдиницыИзмерения") Тогда
			Если ИспользованиеЕдиницИзмерения = 1 Тогда
				НоваяСтрока.ВладелецЕдиницыИзмерения = НоваяСтрока.Номенклатура.ТипНоменклатуры;
			ИначеЕсли ИспользованиеЕдиницИзмерения = 2 Тогда
				НоваяСтрока.ВладелецЕдиницыИзмерения = НоваяСтрока.Номенклатура;
			Иначе
				НоваяСтрока.ВладелецЕдиницыИзмерения = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока.Цена = ЦенообразованиеСервер.ПолучитьЦену(
			Объект.ТипЦен,
			НоваяСтрока.Номенклатура,
			, , , ,
			НоваяСтрока.Характеристика,
			НоваяСтрока.ЕдиницаИзмерения,
			Объект.ПодразделениеКомпании
		);
		
	КонецЦикла;
	
КонецПроцедуры
// Конец ПодключаемоеОборудование

// +РАРУС
&НаСервере
Функция ПриИзмененииНоменклатуры(ТекущиеДанные)
	
	НастройкиПечати = Обработки.ПечатьЭтикетокИЦенников.НовыеНастройкиПечати();
	
	НастройкиПечати.ОбязательныеПоля.Добавить("Цена");
	НастройкиПечати.ОбязательныеПоля.Добавить("Весовой");
	НастройкиПечати.ОбязательныеПоля.Добавить("Штрихкод");
	НастройкиПечати.ОбязательныеПоля.Добавить("Количество");
	НастройкиПечати.ОбязательныеПоля.Добавить("Номенклатура");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
		НастройкиПечати.ОбязательныеПоля.Добавить("Характеристика");
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЕдиницыИзмерения") Тогда
		НастройкиПечати.ОбязательныеПоля.Добавить("ЕдиницаИзмерения");
	КонецЕсли;
	НастройкиПечати.ОбязательныеПоля.Добавить("ОстатокНаСкладе");
	НастройкиПечати.ОбязательныеПоля.Добавить("Организация");
	
	НастройкиПечати.ОбязательныеПоля.Добавить("НоменклатураНаименованиеПолное");
	
	// Шаблоны этикеток и ценников.
	НастройкиПечати.ОбязательныеПоля.Добавить("Номенклатура.ТипНоменклатуры.ШаблонЭтикетки");
	НастройкиПечати.ОбязательныеПоля.Добавить("Номенклатура.ТипНоменклатуры.ШаблонЦенника");
	
	НастройкиПечати.ПараметрыДанных.Вставить("ТипЦен"    , Объект.ТипЦен);
	НастройкиПечати.ПараметрыДанных.Вставить("ТипЦенАкционный"    , Объект.ТипЦенАкционные);
	НастройкиПечати.ПараметрыДанных.Вставить("ЦеныПоВидуЦены" , Объект.ЦеныПоВидуЦены);
	НастройкиПечати.ПараметрыДанных.Вставить("ЦеныНаДату" , Объект.ЦеныНаДату);
	НастройкиПечати.ПараметрыДанных.Вставить("ЦеныНаДатуАкционные" , Объект.ЦеныНаДатуАкционные);
	
	НастройкиПечати.ПараметрыДанных.Вставить("ИспользоватьАссортимент", Ложь);
	
	НастройкиПечати.КомпоновщикНастроек = КомпоновщикНастроек;
	
	ДоступныеТипыНоменклатуры = Новый Массив;
	ДоступныеТипыНоменклатуры.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ДоступныеТипыНоменклатуры.Добавить(Тип("СправочникСсылка.ПрочиеАктивы"));
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Номенклатура",     Новый ОписаниеТипов(ДоступныеТипыНоменклатуры));
	Таблица.Колонки.Добавить("Характеристика",   Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Таблица.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	Таблица.Колонки.Добавить("Количество",       Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Цена",             Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Организация",      Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("СуммаНДС",         Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("СтавкаНДС",        Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС"));
	Таблица.Колонки.Добавить("НомерСтроки",      Новый ОписаниеТипов("Число"));
	
	НоваяСтрока = Таблица.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные);
	НоваяСтрока.Организация = Объект.Организация;
	
	КоллекцияЭлементовОтбора 	= НастройкиПечати.КомпоновщикНастроек.Настройки.Отбор.Элементы; 	
	МассивИндексовОтборов 		= Новый Массив;
	// отключим отборы при изменении номенклатуры
	Для Каждого ЭлементОтбора Из КоллекцияЭлементовОтбора Цикл
		Если ЭлементОтбора.Использование Тогда
			МассивИндексовОтборов.Добавить(КоллекцияЭлементовОтбора.Индекс(ЭлементОтбора));
			ЭлементОтбора.Использование = Ложь;
		КонецЕсли;
	КонецЦикла;
	НастройкиПечати.ИмяМакетаСхемыКомпоновкиДанных = "ПоляШаблонаПоУмолчанию";
	НастройкиПечати.ИсходныеДанные                 = Таблица;
	
	СтруктураРезультата = Обработки.ПечатьЭтикетокИЦенников.ПодготовитьДанныеДляПечати(НастройкиПечати);
	Данные = СтруктураРезультата.ТаблицаТоваров[0];
	
	Для Каждого Элемент Из МассивИндексовОтборов Цикл
		ЭлементОтбора 				= КоллекцияЭлементовОтбора.Получить(Элемент);
		ЭлементОтбора.Использование = Истина;	
	КонецЦикла;
	
	Если ТипЗнч(ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.ПрочиеАктивы") Тогда
		ПараметрыЦены = Новый Структура;
		ПараметрыЦены.Вставить("Актив", ТекущиеДанные.Номенклатура);
		ТаблицаАктивов = УправлениеПрочимиАктивами.ПолучитьОстаткиАктивов(ПараметрыЦены);
		Если ТаблицаАктивов.Количество() > 0 Тогда
			Цена = ТаблицаАктивов[0].БалансоваяСтоимостьРегл - ТаблицаАктивов[0].АмортизацияРегл;
		КонецЕсли;
	Иначе
		Цена = ЦенообразованиеСервер.ПолучитьЦену(
			Объект.ТипЦен,
			ТекущиеДанные.Номенклатура, , , , , ,
			ТекущиеДанные.ЕдиницаИзмерения,
			Объект.ПодразделениеКомпании);
	КонецЕсли;
	
	ВозвращаемоеЗначение = Новый Структура("Штрихкод, Весовой, ОстатокНаСкладе, Цена, ШаблонЭтикетки, ШаблонЦенника, ХарактеристикиИспользуются, КоличествоЭтикеток, КоличествоЦенников");
	ВозвращаемоеЗначение.Штрихкод        = Данные[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров["Штрихкод"]];
	ВозвращаемоеЗначение.Цена            = Цена;
	ВозвращаемоеЗначение.Весовой         = Данные[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров["Весовой"]];
	ВозвращаемоеЗначение.ОстатокНаСкладе = Данные[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров["ОстатокНаСкладе"]];
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
		ВозвращаемоеЗначение.ХарактеристикиИспользуются = Данные[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров["ХарактеристикиИспользуются"]];
	Иначе
		ВозвращаемоеЗначение.ХарактеристикиИспользуются = Ложь;
	КонецЕсли;
	
	ШаблонЦенникаТипаНоменклатуры      = Данные[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить("Номенклатура.ТипНоменклатуры.ШаблонЦенника")];
	ВозвращаемоеЗначение.ШаблонЦенника = ШаблонЦенникаТипаНоменклатуры;
	
	ШаблонЦенникаТипаНоменклатуры       = Данные[СтруктураРезультата.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить("Номенклатура.ТипНоменклатуры.ШаблонЭтикетки")];
	ВозвращаемоеЗначение.ШаблонЭтикетки = ШаблонЦенникаТипаНоменклатуры;
	
	Если ТекущиеДанные.Свойство("СтараяЕдиницаИзмерения") Тогда
		КоличествоВДокументе = ТекущиеДанные.СтароеКоличествоВДокументе
		/ ?(ЗначениеЗаполнено(ТекущиеДанные.ЕдиницаИзмерения.Коэффициент), ТекущиеДанные.ЕдиницаИзмерения.Коэффициент, 1)
		* ?(ЗначениеЗаполнено(ТекущиеДанные.СтараяЕдиницаИзмерения.Коэффициент), ТекущиеДанные.СтараяЕдиницаИзмерения.Коэффициент, 1);
		ВозвращаемоеЗначение.Вставить("КоличествоВДокументе", КоличествоВДокументе);
		ВозвращаемоеЗначение.Вставить("Коэффициент", ?(ЗначениеЗаполнено(ТекущиеДанные.ЕдиницаИзмерения.Коэффициент), ТекущиеДанные.ЕдиницаИзмерения.Коэффициент, 1));
	КонецЕсли;
	
	Если ТипЗнч(НоваяСтрока.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		ИспользованиеХарактеристик   = ТекущиеДанные.Номенклатура.ТипНоменклатуры.ИспользованиеХарактеристик;
		ИспользованиеЕдиницИзмерения = ТекущиеДанные.Номенклатура.ТипНоменклатуры.ИспользованиеЕдиницИзмерения;
	Иначе
		ИспользованиеХарактеристик   = 0;
		ИспользованиеЕдиницИзмерения = 0;
	КонецЕсли;
	
	Если ТекущиеДанные.Свойство("ВладелецХарактеристики") Тогда
		Если ИспользованиеХарактеристик = 1 Тогда
			ВозвращаемоеЗначение.Вставить("ВладелецХарактеристики",ТекущиеДанные.Номенклатура.ТипНоменклатуры); 
		ИначеЕсли ИспользованиеХарактеристик = 2 Тогда
			ВозвращаемоеЗначение.Вставить("ВладелецХарактеристики",ТекущиеДанные.Номенклатура);
		Иначе
			ВозвращаемоеЗначение.Вставить("ВладелецХарактеристики",Неопределено);
		КонецЕсли;
	КонецЕсли;
		
	Если ТекущиеДанные.Свойство("ВладелецЕдиницыИзмерения") Тогда
		Если ИспользованиеЕдиницИзмерения = 1 Тогда
			ВозвращаемоеЗначение.Вставить("ВладелецЕдиницыИзмерения",ТекущиеДанные.Номенклатура.ТипНоменклатуры);
		ИначеЕсли ИспользованиеЕдиницИзмерения = 2 Тогда
			ВозвращаемоеЗначение.Вставить("ВладелецЕдиницыИзмерения",ТекущиеДанные.Номенклатура);
		Иначе
			ВозвращаемоеЗначение.Вставить("ВладелецЕдиницыИзмерения",Неопределено);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ФормаОбработки,
	ИмяПоляВводаХарактеристики = "ТоварыХарактеристика",
	ПутьКПолюОтбора = "Объект.Товары.ВладелецХарактеристики")
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
		Возврат;
	КонецЕсли;
	
	УсловноеОформлениеФормы = ФормаОбработки.УсловноеОформление;
	ЭлементыФормы = ФормаОбработки.Элементы;
	
	ЭлементУсловногоОформления = УсловноеОформлениеФормы.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаХарактеристики].Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюОтбора);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<без характеристик>'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЕдиницуИзмерения(Номенклатура)
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		Возврат Номенклатура.ОсновнаяЕдиницаИзмерения;
	Иначе
		Возврат Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьКоэфЕдиницыИзмерения(ЕдиницаИзмерения)
	Возврат ЕдиницаИзмерения.Коэффициент;
КонецФункции

&НаКлиенте
Процедура ТоварыПриАктивизацииЯчейки(Элемент)
	
	Если Не Элемент.ТекущийЭлемент = Элементы.ТоварыШтрихкод Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.ТоварыШтрихкод.СписокВыбора.Очистить();
		Возврат;
	КонецЕсли;
	
	Структура = Новый Структура;
	Структура.Вставить("Номенклатура",   ТекущиеДанные.Номенклатура);
	Структура.Вставить("Характеристика", ТекущиеДанные.Характеристика);
	Структура.Вставить("ЕдиницаИзмерения",ТекущиеДанные.ЕдиницаИзмерения);
	
	Элементы.ТоварыШтрихкод.СписокВыбора.ЗагрузитьЗначения(ПолучитьШтрихкодыНоменклатуры(Структура));

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьШтрихкодыНоменклатуры(Структура)
	
	МассивШтрихкодов = Новый Массив();
	
	Если Не ЗначениеЗаполнено(Структура.Номенклатура) Тогда
		Возврат МассивШтрихкодов;
	КонецЕсли;
	
	ТабШтрихкодов = ШтрихкодированиеВызовСервера.ПолучитьШтрихКодОбъекта(Структура.Номенклатура, Структура.Характеристика,Структура.ЕдиницаИзмерения,Истина);
	МассивШтрихкодов = ТабШтрихкодов.ВыгрузитьКолонку("Штрихкод");	
	Возврат МассивШтрихкодов;
	
КонецФункции

&НаСервере
Процедура ЗаписатьДатыПечатиКодовМаркировки()
	
	ТаблицаКодовМаркировки = ПолучитьИзВременногоХранилища(АдресТаблицыКодовМаркировки);
	ТаблицаКодовМаркировки.Свернуть("ДокументОснование");
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого Строка Из ТаблицаКодовМаркировки Цикл
		
		Набор = РегистрыСведений.КодыМаркировкиДляПечати.СоздатьНаборЗаписей();
		Набор.Отбор.ДокументОснование.Установить(Строка.ДокументОснование);
		Набор.Прочитать();
		
		Для Каждого СтрокаНабора Из Набор Цикл
			
			Строки = Объект.Товары.НайтиСтроки(Новый Структура("Штрихкод", СтрокаНабора.КодМаркировки));
			Если Строки.Количество() > 0 Тогда
				Если Строки[0].Выбран И НЕ ЗначениеЗаполнено(СтрокаНабора.ДатаПечати) Тогда
					СтрокаНабора.ДатаПечати = ТекущаяДатаСеанса();
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Набор.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияЦеныИзДокументаОснования (РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		Для Каждого Строка Из Объект.Товары Цикл
			Отбор = Новый Структура();
			Отбор.Вставить("Номенклатура",Строка.Номенклатура);
			Отбор.Вставить ("Характеристика", Строка.Характеристика);
			Отбор.Вставить("ЕдиницаИзмерения", Строка.ЕдиницаИзмерения);
			НайденныеСтроки = Объект.ИсходныеДанные.НайтиСтроки (Отбор);
			Если НайденныеСтроки.Количество() > 0 Тогда
				Строка.Цена = НайденныеСтроки[0].Цена;
				Попытка
					Строка.СтавкаНДС = НайденныеСтроки[0].СтавкаНДС;
					Строка.СуммаНДС = НайденныеСтроки[0].СуммаНДС;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;

	Иначе
		
		ЦеныИзДокументаОснования = Ложь;
		Элементы.ТипЦен.Доступность = НЕ ЦеныИзДокументаОснования;
		Элементы.ЦеныНаДату.Доступность = НЕ ЦеныИзДокументаОснования;
		Элементы.ПодразделениеКомпании.Доступность = НЕ ЦеныИзДокументаОснования;
		ПересчитатьСуммыНДС(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция КолонкиТаблицыПередаваемыеВМетодПечати()
	
	Результат = Новый Массив;
	Результат.Добавить("Номенклатура");
	Результат.Добавить("Характеристика");
	Результат.Добавить("ЕдиницаИзмерения");
	Результат.Добавить("КоличествоЭтикеток");
	Результат.Добавить("КоличествоЦенников");
	Результат.Добавить("ШаблонЭтикетки");
	Результат.Добавить("ШаблонЦенника");
	Результат.Добавить("Организация");
	Результат.Добавить("Штрихкод");
	Результат.Добавить("Цена");
	Результат.Добавить("СуммаНДС");
	Результат.Добавить("СтавкаНДС");
	Результат.Добавить("ПроизвольныйТекст1");
	Результат.Добавить("ПроизвольныйТекст2");
	Результат.Добавить("ПроизвольнаяДата");
	Результат.Добавить("НомерСтроки");
	Возврат СтрСоединить(Результат, ",");
	
КонецФункции

//-РАРУС
#КонецОбласти