#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Функция формирует текст запроса
Функция ПолучитьТекстЗапросаОсновныхТаблиц(Объект, ШаблонЦена, ТекстСоединенийПроцентыСкидкиНаценки)
	РезультатТекстЗапроса = "";
	
	ДатаКонцаАнализа = ?(НЕ ЗначениеЗаполнено(Объект.ДатаКонцаАнализа), ТекущаяДатаСеанса(), Объект.ДатаКонцаАнализа);
	Если Объект.УчитыватьОтсутствиеНаСкладе Тогда
		РезультатТекстЗапроса = "
		|ВЫБРАТЬ
		|	ОстаткиТоваровКомпании.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ОстаткиТоваровКомпании.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			НАЧАЛОПЕРИОДА(ОстаткиТоваровКомпании.Период, ДЕНЬ)
		|		ИНАЧЕ
		|			КОНЕЦПЕРИОДА(ОстаткиТоваровКомпании.Период, ДЕНЬ)
		|	КОНЕЦ КАК Период,
		|	СУММА(ВЫБОР
		|			КОГДА ОстаткиТоваровКомпании.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА ОстаткиТоваровКомпании.Количество
		|			ИНАЧЕ -ОстаткиТоваровКомпании.Количество
		|		КОНЕЦ) КАК Количество
		|ПОМЕСТИТЬ
		|	ТаблицаОборотовТовара
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваровКомпании КАК ОстаткиТоваровКомпании
		|ГДЕ
		|	ОстаткиТоваровКомпании.Период МЕЖДУ &ДатаНачалаАнализа И &ДатаКонцаАнализа
		|{ГДЕ
		|	ОстаткиТоваровКомпании.СкладКомпании.ПодразделениеКомпании.Организация.* КАК Организация,
		|	ОстаткиТоваровКомпании.СкладКомпании.ПодразделениеКомпании.* КАК ПодразделениеКомпании,
		|	ОстаткиТоваровКомпании.СкладКомпании.* КАК СкладКомпании}
		|	
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиТоваровКомпании.Номенклатура,
		|	ВЫБОР
		|		КОГДА ОстаткиТоваровКомпании.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			НАЧАЛОПЕРИОДА(ОстаткиТоваровКомпании.Период, ДЕНЬ)
		|		ИНАЧЕ
		|			КОНЕЦПЕРИОДА(ОстаткиТоваровКомпании.Период, ДЕНЬ)
		|	КОНЕЦ
		|;
		|
		|ВЫБРАТЬ
		|	ПродажиОбороты.Номенклатура КАК Номенклатура,
		|	ПродажиОбороты.КоличествоОборот КАК КоличествоПродажи,
		|	ПродажиОбороты.СуммаОборот КАК СуммаПродажи,
		|	ТаблицаОборотовТовара.Период КАК Период,
		|	ТаблицаОборотовТовара.Количество КАК ОборотЗаДень,
		|	ЕСТЬNULL(ОстаткиТоваровКомпанииОстатки.КоличествоОстаток, 0) КАК Остаток
		|ПОМЕСТИТЬ
		|	ТаблицаОборотов
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(&ДатаНачалаАнализа, &ДатаКонцаАнализа, , 
		|													Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)
		|										{
		|										ПодразделениеКомпании.Организация.* КАК Организация,
		|										ПодразделениеКомпании.* КАК ПодразделениеКомпании,
		|										СкладКомпании.* КАК СкладКомпании}
		|										) КАК ПродажиОбороты
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрНакопления.ОстаткиТоваровКомпании.Остатки(&ДатаФормированияЗаказа,
		|						Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)
		|						{СкладКомпании.* КАК СкладКомпании}) КАК ОстаткиТоваровКомпанииОстатки
		|ПО
		|	ПродажиОбороты.Номенклатура = ОстаткиТоваровКомпанииОстатки.Номенклатура
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ТаблицаОборотовТовара КАК ТаблицаОборотовТовара
		|ПО
		|	ПродажиОбороты.Номенклатура = ТаблицаОборотовТовара.Номенклатура
		|ГДЕ
		|	ПродажиОбороты.КоличествоОборот > 0
		|;
		|
		|ВЫБРАТЬ
		|	ИтоговаяТаблица.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ИтоговаяТаблица.КоличествоПродажи) КАК КоличествоПродажи,
		|	МАКСИМУМ(ИтоговаяТаблица.СуммаПродажи) КАК СуммаПродажи,
		|	СУММА(ИтоговаяТаблица.ДлинаПериодаАнализа)+1 КАК ДлинаПериодаАнализа,
		|	МАКСИМУМ(ИтоговаяТаблица.Остаток) КАК Остаток,
		|	МАКСИМУМ(ИтоговаяТаблица.ЦенаПоставщика) КАК ЦенаПоставщика,
		|	МАКСИМУМ(ИтоговаяТаблица.МинимальнаяЦена) КАК МинимальнаяЦена,
		|	МАКСИМУМ(ИтоговаяТаблица.ДатаПоступления) КАК ДатаПоступления,
		|	СУММА(ИтоговаяТаблица.Заказано) КАК Заказано
		|ПОМЕСТИТЬ
		|	ИтоговаяТаблица
		|ИЗ (
		|ВЫБРАТЬ
		|	ОбъединенныйЗапрос.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ОбъединенныйЗапрос.КоличествоПродажи) КАК КоличествоПродажи,
		|	МАКСИМУМ(ОбъединенныйЗапрос.СуммаПродажи) КАК СуммаПродажи,
		|	РАЗНОСТЬДАТ(ОбъединенныйЗапрос.Период, МИНИМУМ(ОбъединенныйЗапрос.БлижайшаяДата), ДЕНЬ) КАК ДлинаПериодаАнализа,
		|	МАКСИМУМ(ОбъединенныйЗапрос.Остаток) КАК Остаток,
		|	0 КАК ЦенаПоставщика,
		|	0 КАК МинимальнаяЦена,
		|	ДатаВремя(1,1,1) КАК ДатаПоступления,
		|	0 КАК Заказано
		|ИЗ (
		|	ВЫБРАТЬ
		|		ТаблицаПродажи.Номенклатура КАК Номенклатура,
		|		ТаблицаПродажи.КоличествоПродажи КАК КоличествоПродажи,
		|		ТаблицаПродажи.СуммаПродажи КАК СуммаПродажи,
		|		ТаблицаПродажи.Период КАК Период,
		|		НАЧАЛОПЕРИОДА(&ДатаКонцаАнализа, ДЕНЬ) КАК БлижайшаяДата,
		|		ТаблицаПродажи.Остаток КАК ОстатокНаДень,
		|		ТаблицаПродажи.Остаток КАК Остаток
		|	ИЗ
		|		ТаблицаОборотов КАК ТаблицаПродажи
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаПродажи.Номенклатура,
		|		0,
		|		0,
		|		ТаблицаПродажи.Период,
		|		ТаблицаОборотов.Период,
		|		- ТаблицаОборотов.ОборотЗаДень,
		|		0
		|	ИЗ
		|		ТаблицаОборотов КАК ТаблицаПродажи
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаОборотов КАК ТаблицаОборотов
		|	ПО
		|		ТаблицаПродажи.Номенклатура = ТаблицаОборотов.Номенклатура
		|		И ТаблицаПродажи.Период < ТаблицаОборотов.Период
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТаблицаПродажи.Номенклатура,
		|		МАКСИМУМ(ТаблицаПродажи.КоличествоПродажи),
		|		МАКСИМУМ(ТаблицаПродажи.СуммаПродажи),
		|		НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, ДЕНЬ),
		|		МИНИМУМ(ТаблицаПродажи.Период),
		|		МАКСИМУМ(ТаблицаПродажи.Остаток) - СУММА(ТаблицаПродажи.ОборотЗаДень),
		|		МАКСИМУМ(ТаблицаПродажи.Остаток)
		|	ИЗ
		|		ТаблицаОборотов КАК ТаблицаПродажи
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаПродажи.Номенклатура
		|	ИМЕЮЩИЕ
		|		МИНИМУМ(ТаблицаПродажи.Период) > &ДатаНачалаАнализа) КАК ОбъединенныйЗапрос
		|СГРУППИРОВАТЬ ПО
		|	ОбъединенныйЗапрос.Номенклатура,
		|	ОбъединенныйЗапрос.Период
		|ИМЕЮЩИЕ
		|	СУММА(ОбъединенныйЗапрос.ОстатокНаДень) > 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаЦен.Номенклатура КАК Номенклатура,
		|	0 КАК КоличествоПродажи,
		|	0 КАК СуммаПродажи,
		|	0 КАК ДлинаПериодаАнализа,
		|	0 КАК Остаток,
		|	("+ШаблонЦена+")*ТаблицаПересчета.Коэффициент,
		|	0,
		|	ДатаВремя(1,1,1),
		|	0
		|ИЗ
		|	СрезПоследних КАК СрезПоследних
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	ТаблицаЦенПодразделений КАК ТаблицаЦен
		|ПО 
		|	СрезПоследних.Контрагент   = ТаблицаЦен.Контрагент
		|	И СрезПоследних.Номенклатура = ТаблицаЦен.Номенклатура
		|	И СрезПоследних.Уровень      = ТаблицаЦен.Уровень
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ТаблицаПересчета КАК ТаблицаПересчета
		|ПО"+?(Объект.ТипЦен.ВВалютеУчета, "
		|	ТаблицаЦен.Номенклатура.ВалютаУчета = ТаблицаПересчета.Валюта","
		|	ИСТИНА") + " 
		|" + ТекстСоединенийПроцентыСкидкиНаценки + "
		|ГДЕ
		|	ТаблицаЦен.Контрагент = &Контрагент
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|	ТаблицаЦен.Номенклатура КАК Номенклатура,
		|	0 КАК КоличествоПродажи,
		|	0 КАК СуммаПродажи,
		|	0 КАК ДлинаПериодаАнализа,
		|	0 КАК Остаток,
		|	0,
		|	МИНИМУМ(("+ШаблонЦена+")*ТаблицаПересчета.Коэффициент),
		|	ДатаВремя(1,1,1),
		|	0
		|ИЗ
		|	СрезПоследних КАК СрезПоследних
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	ТаблицаЦенПодразделений КАК ТаблицаЦен
		|ПО
		|	СрезПоследних.Контрагент   = ТаблицаЦен.Контрагент
		|	И СрезПоследних.Номенклатура = ТаблицаЦен.Номенклатура
		|	И СрезПоследних.Уровень      = ТаблицаЦен.Уровень
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ТаблицаПересчета КАК ТаблицаПересчета
		|ПО"+?(Объект.ТипЦен.ВВалютеУчета, "
		|	ТаблицаЦен.Номенклатура.ВалютаУчета = ТаблицаПересчета.Валюта","
		|	ИСТИНА") + " 
		|" + ТекстСоединенийПроцентыСкидкиНаценки + "
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаЦен.Номенклатура
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СрокПоставки,
		|	ЗаказыПоставщикамОстатки.ЗаказаноОстаток
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДатаФормированияЗаказа, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК ЗаказыПоставщикамОстатки
		|ГДЕ
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СрокПоставки <= &ДатаСледующегоЗаказа) КАК ИтоговаяТаблица
		|СГРУППИРОВАТЬ ПО
		|	ИтоговаяТаблица.Номенклатура
		|;
		|
		|УНИЧТОЖИТЬ
		|	ТаблицаОборотовТовара
		|;
		|
		|УНИЧТОЖИТЬ
		|	ТаблицаОборотов
		|;
		|
		|УНИЧТОЖИТЬ
		|	СрезПоследних
		|;
		|
		|УНИЧТОЖИТЬ
		|	ТаблицаЦенПодразделений
		|;
		|
		|ВЫБРАТЬ
		|	ИтоговаяТаблица.Номенклатура КАК Номенклатура,
		|	ИтоговаяТаблица.КоличествоПродажи КАК Оборот,
		|	ВЫБОР
		|		КОГДА ИтоговаяТаблица.КоличествоПродажи=0 ТОГДА
		|			ИтоговаяТаблица.СуммаПродажи
		|		ИНАЧЕ
		|			ИтоговаяТаблица.СуммаПродажи / ИтоговаяТаблица.КоличествоПродажи
		|	КОНЕЦ КАК ЦенаПродажи,
		|	ИтоговаяТаблица.ДлинаПериодаАнализа КАК ДлинаПериодаАнализа,
		|	ИтоговаяТаблица.Остаток КАК ОстатокЗаказ,
		|	ИтоговаяТаблица.ЦенаПоставщика КАК ЦенаПоставщика,
		|	ИтоговаяТаблица.МинимальнаяЦена КАК МинимальнаяЦена,
		|	ИтоговаяТаблица.ДатаПоступления КАК ДатаПоступления,
		|	ИтоговаяТаблица.Заказано КАК Заказано,
		|	ЕСТЬNULL(МинимальныйОстатокСрезПоследних.ЗначениеРеквизита, 0) КАК МинимальныйОстаток,
		|	ЕСТЬNULL(МаксимальныйЗапасСрезПоследних.ЗначениеРеквизита, 0) КАК МаксимальныйЗапас
		|ИЗ
		|	ИтоговаяТаблица КАК ИтоговаяТаблица
		|////////////////////// МИНИМАЛЬНЫЙ ЗАПАС //////////////////
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ДополнительныеРеквизитыНоменклатуры.СрезПоследних(&ДатаТекущегоЗаказа, 
		|			ПодразделениеКомпании = &ПодразделениеКомпании
		|			И ДополнительныйРеквизит = ЗНАЧЕНИЕ(Перечисление.ДополнительныеРеквизитыНоменклатуры.МинимальныйОстаток)
		|						И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК МинимальныйОстатокСрезПоследних
		|ПО
		|	ИтоговаяТаблица.Номенклатура = МинимальныйОстатокСрезПоследних.Номенклатура
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ДополнительныеРеквизитыНоменклатуры.СрезПоследних(&ДатаТекущегоЗаказа, 
		|			ПодразделениеКомпании  = ЗНАЧЕНИЕ(Справочник.ПодразделенияКомпании.ПустаяСсылка)
		|			И ДополнительныйРеквизит = ЗНАЧЕНИЕ(Перечисление.ДополнительныеРеквизитыНоменклатуры.МинимальныйОстаток)
		|						И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК МинимальныйОстатокСрезПоследнихОбщ
		|ПО
		|	ИтоговаяТаблица.Номенклатура = МинимальныйОстатокСрезПоследнихОбщ.Номенклатура
		|////////////////////// МАКСИМАЛЬНЫЙ ЗАПАС //////////////////
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ДополнительныеРеквизитыНоменклатуры.СрезПоследних(&ДатаТекущегоЗаказа, 
		|			ПодразделениеКомпании = &ПодразделениеКомпании
		|			И ДополнительныйРеквизит = ЗНАЧЕНИЕ(Перечисление.ДополнительныеРеквизитыНоменклатуры.МаксимальныйЗапас)
		|						И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК МаксимальныйЗапасСрезПоследних
		|ПО
		|	ИтоговаяТаблица.Номенклатура = МаксимальныйЗапасСрезПоследних.Номенклатура
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ДополнительныеРеквизитыНоменклатуры.СрезПоследних(&ДатаТекущегоЗаказа, 
		|			ПодразделениеКомпании  = ЗНАЧЕНИЕ(Справочник.ПодразделенияКомпании.ПустаяСсылка)
		|			И ДополнительныйРеквизит = ЗНАЧЕНИЕ(Перечисление.ДополнительныеРеквизитыНоменклатуры.МаксимальныйЗапас)
		|						И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК МаксимальныйЗапасСрезПоследнихОбщ
		|ПО
		|	ИтоговаяТаблица.Номенклатура = МаксимальныйЗапасСрезПоследнихОбщ.Номенклатура
		|";
	Иначе
		РезультатТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаЦен.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ТаблицаЦен.Цена) КАК Цена,
		|	МАКСИМУМ(ТаблицаЦен.МинимальнаяЦена) КАК МинимальнаяЦена
		|ПОМЕСТИТЬ
		|	ТаблицаЦен
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаЦен.Номенклатура КАК Номенклатура,
		|		("+ШаблонЦена+")*ТаблицаПересчета.Коэффициент КАК Цена,
		|		0 КАК МинимальнаяЦена
		|	ИЗ
		|		СрезПоследних КАК СрезПоследних
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаЦенПодразделений КАК ТаблицаЦен
		|	ПО
		|		СрезПоследних.Номенклатура = ТаблицаЦен.Номенклатура
		|		И СрезПоследних.Уровень = ТаблицаЦен.Уровень
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаПересчета КАК ТаблицаПересчета
		|	ПО"+?(Объект.ТипЦен.ВВалютеУчета, "
		|		ТаблицаЦен.Номенклатура.ВалютаУчета = ТаблицаПересчета.Валюта","
		|		ИСТИНА") + " 
		|	" + ТекстСоединенийПроцентыСкидкиНаценки + "
		|	ГДЕ
		|		ТаблицаЦен.Контрагент = &Контрагент
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТаблицаЦен.Номенклатура КАК Номенклатура,
		|		0,
		|		МИНИМУМ(("+ШаблонЦена+")*ТаблицаПересчета.Коэффициент)
		|	ИЗ
		|		СрезПоследних КАК СрезПоследних
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаЦенПодразделений КАК ТаблицаЦен
		|	ПО
		|		СрезПоследних.Номенклатура = ТаблицаЦен.Номенклатура
		|		И СрезПоследних.Уровень = ТаблицаЦен.Уровень
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаПересчета КАК ТаблицаПересчета
		|	ПО"+?(Объект.ТипЦен.ВВалютеУчета, "
		|		ТаблицаЦен.Номенклатура.ВалютаУчета = ТаблицаПересчета.Валюта","
		|		ИСТИНА") + " 
		|	" + ТекстСоединенийПроцентыСкидкиНаценки + "
		|	ГДЕ
		|		НЕ ТаблицаЦен.Контрагент = &Контрагент
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаЦен.Номенклатура) КАК ТаблицаЦен
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаЦен.Номенклатура
		|;
		|
		|УНИЧТОЖИТЬ
		|	ТаблицаЦенПодразделений
		|;
		|
		|УНИЧТОЖИТЬ
		|	СрезПоследних
		|;
		|
		|ВЫБРАТЬ
		|	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ЗаказыПоставщикамОстатки.ЗаказПоставщику.СрокПоставки) КАК ДатаПоступления,
		|	СУММА(ЗаказыПоставщикамОстатки.ЗаказаноОстаток) КАК Заказано
		|ПОМЕСТИТЬ
		|	ТаблицаЗаказов
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДатаФормированияЗаказа, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК ЗаказыПоставщикамОстатки
		|ГДЕ
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СрокПоставки <= &ДатаСледующегоЗаказа
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамОстатки.Номенклатура
		|;
		|
		|ВЫБРАТЬ
		|	ПродажиОбороты.Номенклатура КАК Номенклатура,
		|	ПродажиОбороты.КоличествоОборот КАК Оборот,
		|	ПродажиОбороты.СуммаОборот / ПродажиОбороты.КоличествоОборот КАК ЦенаПродажи,
		|	ЕСТЬNULL(ОстаткиТоваровКомпанииОстатки.КоличествоОстаток, 0) КАК ОстатокЗаказ,
		|	ЕСТЬNULL(ТаблицаЦен.Цена, 0) КАК ЦенаПоставщика,
		|	ЕСТЬNULL(ТаблицаЗаказов.ДатаПоступления, ДатаВремя(1,1,1)) КАК ДатаПоступления,
		|	ЕСТЬNULL(ТаблицаЗаказов.Заказано, 0) КАК Заказано,
		|	ЕСТЬNULL(ТаблицаЦен.МинимальнаяЦена, 0) КАК МинимальнаяЦена,
		|	ЕСТЬNULL(МинимальныйОстатокСрезПоследних.ЗначениеРеквизита, 0) КАК МинимальныйОстаток,
		|	ЕСТЬNULL(МаксимальныйЗапасСрезПоследних.ЗначениеРеквизита, 0) КАК МаксимальныйЗапас
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(&ДатаНачалаАнализа, &ДатаКонцаАнализа, ,
		|													Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)
		|										{
		|										ПодразделениеКомпании.Организация.* КАК Организация,
		|										ПодразделениеКомпании.* КАК ПодразделениеКомпании,
		|										СкладКомпании.* КАК СкладКомпании}
		|										) КАК ПродажиОбороты
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрНакопления.ОстаткиТоваровКомпании.Остатки(&ДатаФормированияЗаказа,
		|						Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)
		|						{
		|							СкладКомпании.ПодразделениеКомпании.Организация.* КАК Организация,
		|							СкладКомпании.ПодразделениеКомпании.* КАК ПодразделениеКомпании,
		|							СкладКомпании.* КАК СкладКомпании}) КАК ОстаткиТоваровКомпанииОстатки
		|ПО
		|	ПродажиОбороты.Номенклатура = ОстаткиТоваровКомпанииОстатки.Номенклатура
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ТаблицаЗаказов КАК ТаблицаЗаказов
		|ПО
		|	ПродажиОбороты.Номенклатура = ТаблицаЗаказов.Номенклатура
		|
		|////////////////////// МИНИМАЛЬНЫЙ ЗАПАС //////////////////
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ДополнительныеРеквизитыНоменклатуры.СрезПоследних(&ДатаТекущегоЗаказа, 
		|			ПодразделениеКомпании = &ПодразделениеКомпании
		|			И ДополнительныйРеквизит = ЗНАЧЕНИЕ(Перечисление.ДополнительныеРеквизитыНоменклатуры.МинимальныйОстаток)
		|						И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК МинимальныйОстатокСрезПоследних
		|ПО
		|	ПродажиОбороты.Номенклатура = МинимальныйОстатокСрезПоследних.Номенклатура
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ДополнительныеРеквизитыНоменклатуры.СрезПоследних(&ДатаТекущегоЗаказа, 
		|			ПодразделениеКомпании  = ЗНАЧЕНИЕ(Справочник.ПодразделенияКомпании.ПустаяСсылка)
		|			И ДополнительныйРеквизит = ЗНАЧЕНИЕ(Перечисление.ДополнительныеРеквизитыНоменклатуры.МинимальныйОстаток)
		|						И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК МинимальныйОстатокСрезПоследнихОбщ
		|ПО
		|	ПродажиОбороты.Номенклатура = МинимальныйОстатокСрезПоследнихОбщ.Номенклатура
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ТаблицаЦен КАК ТаблицаЦен
		|ПО
		|	ПродажиОбороты.Номенклатура = ТаблицаЦен.Номенклатура
		|////////////////////// МАКСИМАЛЬНЫЙ ЗАПАС //////////////////
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ДополнительныеРеквизитыНоменклатуры.СрезПоследних(&ДатаТекущегоЗаказа, 
		|			ПодразделениеКомпании = &ПодразделениеКомпании
		|			И ДополнительныйРеквизит = ЗНАЧЕНИЕ(Перечисление.ДополнительныеРеквизитыНоменклатуры.МаксимальныйЗапас)
		|						И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК МаксимальныйЗапасСрезПоследних
		|ПО
		|	ПродажиОбороты.Номенклатура = МаксимальныйЗапасСрезПоследних.Номенклатура
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ДополнительныеРеквизитыНоменклатуры.СрезПоследних(&ДатаТекущегоЗаказа, 
		|			ПодразделениеКомпании  = ЗНАЧЕНИЕ(Справочник.ПодразделенияКомпании.ПустаяСсылка)
		|			И ДополнительныйРеквизит = ЗНАЧЕНИЕ(Перечисление.ДополнительныеРеквизитыНоменклатуры.МаксимальныйЗапас)
		|						И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)) КАК МаксимальныйЗапасСрезПоследнихОбщ
		|ПО
		|	ПродажиОбороты.Номенклатура = МаксимальныйЗапасСрезПоследнихОбщ.Номенклатура
		|";
	КонецЕсли;
	
	Возврат РезультатТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаОсновныхТаблиц()

// Процедура формирования результатов заказа поставщику
Процедура СформироватьРезультат(Объект,ДополнительныйОтбор) Экспорт
	
	ТекПостроитель = Новый ПостроительОтчета;
	ТекРодитель = Объект.Подразделение;
	ТекстОбъединенияУровней = "";
	Уровень = 0;
	Пока ЗначениеЗаполнено(ТекРодитель) Цикл
		ТекПостроитель.Параметры.Вставить("Подразделение"+Уровень, ТекРодитель);
		ТекстОбъединенияУровней = ТекстОбъединенияУровней+"
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	&Подразделение"+Уровень+",
		|	"+Уровень;
		ТекРодитель = ТекРодитель.Родитель;
		Уровень=Уровень+1;
	КонецЦикла;
	
	ТекстОбъединенияУровней = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПодразделений.Родитель КАК Подразделение,
	|	ТаблицаПодразделений.Уровень КАК Уровень
	|ПОМЕСТИТЬ
	|	ТаблицаПодразделений
	|ИЗ (
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Справочник.ПодразделенияКомпании.ПустаяСсылка) КАК Родитель,
	|		"+Уровень+" КАК Уровень
	|	"+ТекстОбъединенияУровней+") КАК ТаблицаПодразделений
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение
	|;";
	
	РабочийТипЦен = Объект.ТипЦен;
	ШаблонЦена = "ТаблицаЦен.Цена";
		
	ТекстСоединенийПроцентыСкидкиНаценки = "";
		
	// Если расчетная цена получим базовую цену
	Счетчик = 1;
	Пока РабочийТипЦен.Рассчитывается Цикл
		
		Если РабочийТипЦен.ПроцентыСкидкиНаценки.Количество()>0 Тогда
			
			ИмяТаблицы = "ПроцентыСкидкиНаценки" + Строка(Счетчик);
			ТекстСоединенийПроцентыСкидкиНаценки = ТекстСоединенийПроцентыСкидкиНаценки + "
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Справочник.ТипыЦен.ПроцентыСкидкиНаценки КАК " + ИмяТаблицы + "
			|ПО
			|	" + ИмяТаблицы + ".Ссылка = &ТипЦены" + Строка(Счетчик) + "
			|	И ТаблицаЦен.Номенклатура.ТипНоменклатуры = " + ИмяТаблицы + ".ТипНоменклатуры";
			
			ШаблонЦена = "("+ШаблонЦена + "+" + ШаблонЦена + "*ЕСТЬNULL(" + ИмяТаблицы + ".ПроцентСкидкиНаценки/100, " + Формат(РабочийТипЦен.ПроцентСкидкиНаценки/100,"ЧРД=.; ЧН=0")+"))";
			
			ТекПостроитель.Параметры.Вставить("ТипЦены" + Строка(Счетчик), РабочийТипЦен);
			
			Счетчик = Счетчик + 1;
			
		ИначеЕсли РабочийТипЦен.ПроцентСкидкиНаценки <> 0 Тогда
			
			ШаблонЦена = "("+ШаблонЦена+"+"+ШаблонЦена+"*"+Формат(РабочийТипЦен.ПроцентСкидкиНаценки/100, "ЧРД=.")+")";
			
		КонецЕсли;
		
		РабочийТипЦен = РабочийТипЦен.БазовыйТипЦен;
		
	КонецЦикла;
	
	ТекстЗапроса = "
	| " + ТекстОбъединенияУровней + "
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	(КурсыВалютСрезПоследних.Курс/ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)/&КурсПрайсЛиста) КАК Коэффициент
	|ПОМЕСТИТЬ
	|	ТаблицаПересчета
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаТекущегоЗаказа, " + ?(Объект.ТипЦен.ВВалютеУчета, "", "Валюта=&ВалютаТипаЦен") + ") КАК КурсыВалютСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровКомпании.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ
	|	ТаблицаТоваров
	|ИЗ
	|	РегистрНакопления.ПартииТоваровКомпании КАК ПартииТоваровКомпании
	|ГДЕ
	|	ПартииТоваровКомпании.Период <= &ДатаКонцаАнализа
	|	И ПартииТоваровКомпании.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ПартииТоваровКомпании.Количество > 0
	|	И ПартииТоваровКомпании.Партия.Контрагент = &Контрагент
	|{ГДЕ
	|	ПартииТоваровКомпании.СкладКомпании КАК СкладКомпании,
	|	ПартииТоваровКомпании.СкладКомпании.Организация КАК Организация,
	|	ПартииТоваровКомпании.СкладКомпании.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|	ПартииТоваровКомпании.Номенклатура.* КАК Номенклатура
	|}
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровКомпании.Номенклатура
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаЦен.Номенклатура КАК Номенклатура,
	|	ТаблицаЦен.Контрагент КАК Контрагент,
	|	ТаблицаЦен.Период КАК Период,
	|	ТаблицаПодразделений.Уровень КАК Уровень,
	|	ТаблицаЦен.Цена КАК Цена
	|ПОМЕСТИТЬ
	|	ТаблицаЦен
	|ИЗ
	|	РегистрСведений.Цены КАК ТаблицаЦен
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ТаблицаПодразделений КАК ТаблицаПодразделений
	|ПО 
	|	ТаблицаЦен.ПодразделениеКомпании = ТаблицаПодразделений.Подразделение
	|ГДЕ
	|	ТаблицаЦен.Период <= &ДатаТекущегоЗаказа
	|	И ТаблицаЦен.ТипЦен = &ВыбТипЦен
	|	И (НЕ ТаблицаЦен.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И ТаблицаЦен.ХарактеристикаНоменклатуры=ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И ТаблицаЦен.ЕдиницаИзмерения=ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|	И ТаблицаЦен.Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаТоваров)
	|ИНДЕКСИРОВАТЬ ПО
	|	Уровень,
	|	Контрагент,
	|	Номенклатура
	|;
	|
	|УНИЧТОЖИТЬ
	|	ТаблицаПодразделений
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаЦен.Уровень,
	|	ТаблицаЦен.Контрагент КАК Контрагент,
	|	ТаблицаЦен.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ТаблицаЦен.Период) КАК Период
	|ПОМЕСТИТЬ
	|	СрезПоследних
	|ИЗ
	|	ТаблицаЦен КАК ТаблицаЦен
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦен.Уровень,
	|	ТаблицаЦен.Контрагент,
	|	ТаблицаЦен.Номенклатура
	|ИНДЕКСИРОВАТЬ ПО
	|	Уровень,
	|	Контрагент,
	|	Номенклатура
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаЦен.Контрагент КАК Контрагент,
	|	ТаблицаЦен.Номенклатура КАК Номенклатура,
	|	ТаблицаЦен.Уровень КАК Уровень,
	|	МИНИМУМ(ТаблицаЦен.Цена) КАК Цена
	|ПОМЕСТИТЬ
	|	ТаблицаЦенПодразделений
	|ИЗ
	|	СрезПоследних КАК СрезПоследних
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ТаблицаЦен КАК ТаблицаЦен
	|ПО
	|	СрезПоследних.Уровень      = ТаблицаЦен.Уровень
	|	И СрезПоследних.Контрагент   = ТаблицаЦен.Контрагент
	|	И СрезПоследних.Номенклатура = ТаблицаЦен.Номенклатура
	|	И СрезПоследних.Период       = ТаблицаЦен.Период
	|ГДЕ
	|	НЕ ТаблицаЦен.Цена = 0
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦен.Контрагент,
	|	ТаблицаЦен.Номенклатура,
	|	ТаблицаЦен.Уровень
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Номенклатура
	|;
	|
	|УНИЧТОЖИТЬ
	|	ТаблицаЦен
	|;
	|
	|УНИЧТОЖИТЬ
	|	СрезПоследних
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаЦен.Контрагент КАК Контрагент,
	|	ТаблицаЦен.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(ТаблицаЦен.Уровень) КАК Уровень
	|ПОМЕСТИТЬ
	|	СрезПоследних
	|ИЗ
	|	ТаблицаЦенПодразделений КАК ТаблицаЦен
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦен.Контрагент,
	|	ТаблицаЦен.Номенклатура
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Номенклатура
	|;
	|" + ПолучитьТекстЗапросаОсновныхТаблиц(Объект, ШаблонЦена, ТекстСоединенийПроцентыСкидкиНаценки);
	
	ТекПостроитель.Текст = ТекстЗапроса;
	ТекПостроитель.Отбор.Сбросить();
	Для Каждого ОтборПараметров Из ДополнительныйОтбор.ПолучитьЭлементы() Цикл
		Если ЗначениеЗаполнено(ОтборПараметров.ПравоеЗначение) Тогда 
			ТекПостроитель.Отбор.Добавить(ОтборПараметров.ЛевоеЗначение);
			ТекПостроитель.Отбор[ОтборПараметров.ЛевоеЗначение].Использование = Истина;
			ТекПостроитель.Отбор[ОтборПараметров.ЛевоеЗначение].ВидСравнения  = ОтборПараметров.ВидСравнения;
			Если ТипЗнч(ТекПостроитель.Отбор[ОтборПараметров.ЛевоеЗначение].Значение) = Тип("СписокЗначений") И ТипЗнч(ОтборПараметров.ПравоеЗначение) <> Тип("СписокЗначений") Тогда
				СписокВыбора = Новый СписокЗначений;
				СписокВыбора.Добавить(ОтборПараметров.ПравоеЗначение);
				ТекПостроитель.Отбор[ОтборПараметров.ЛевоеЗначение].Значение = СписокВыбора;
			Иначе
				ТекПостроитель.Отбор[ОтборПараметров.ЛевоеЗначение].Значение = ОтборПараметров.ПравоеЗначение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекПостроитель.Параметры.Вставить("ВыбТипЦен", РабочийТипЦен);
	ТекПостроитель.Параметры.Вставить("ДатаНачалаАнализа",      НачалоДня(Объект.ДатаНачалаАнализа));
	ТекПостроитель.Параметры.Вставить("ДатаКонцаАнализа",       КонецДня(?(НЕ ЗначениеЗаполнено(Объект.ДатаКонцаАнализа), ТекущаяДатаСеанса(),Объект.ДатаКонцаАнализа)));
	ТекПостроитель.Параметры.Вставить("ДатаТекущегоЗаказа",     КонецДня(Объект.ДатаТекущегоЗаказа));
	ТекПостроитель.Параметры.Вставить("ДатаСледующегоЗаказа",   КонецДня(Объект.ДатаСледующегоЗаказа));
	ТекПостроитель.Параметры.Вставить("ДатаФормированияЗаказа", КонецДня(Объект.ДатаФормированияЗаказа));
	ТекПостроитель.Параметры.Вставить("Контрагент",             Объект.Контрагент);
	ТекПостроитель.Параметры.Вставить("ПодразделениеКомпании",  Объект.Подразделение);
	ТекПостроитель.Параметры.Вставить("ВалютаТипаЦен",          Объект.ТипЦен.ВалютаЦены);
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.ТипЦен.ВалютаЦены, ТекущаяДатаСеанса());
	КурсПрайсЛиста = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	ТекПостроитель.Параметры.Вставить("КурсПрайсЛиста", ?(КурсПрайсЛиста=0,1,КурсПрайсЛиста));

	// чистим таблицу
	Объект.Товары.Очистить();
	
	// выполняем запрос
	ТекПостроитель.Выполнить();
	
	ДлинаПериодаАнализа=Цел((НачалоДня(Объект.ДатаКонцаАнализа)-НачалоДня(Объект.ДатаНачалаАнализа))/86400)+1;
	
	// открываем выборку
	Выборка = ТекПостроитель.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// подсчитаем количество дней в периоде
		Если Объект.УчитыватьОтсутствиеНаСкладе Тогда
			ДлинаПериодаАнализа = Выборка.ДлинаПериодаАнализа;
			Если ДлинаПериодаАнализа = Null Тогда
				ДлинаПериодаАнализа = 0;
			КонецЕсли;
		КонецЕсли;
		
		// Считаем сколько рекомендуется заказать
		МинимальныйОстаток = Выборка.МинимальныйОстаток;
		МаксимальныйЗапас  = Выборка.МаксимальныйЗапас;
		КвантПоставки      = Выборка.Номенклатура.КратностьПоставок;
		
		// СредняяПродажа - количество проданное в день за период анализа
		Оборот = ?(Выборка.Оборот = Null, 0, Выборка.Оборот);
		СредняяПродажа = ?(ДлинаПериодаАнализа=0, 0, Оборот/ДлинаПериодаАнализа);
		
		РасходЗапасаДоСледующейПоставки = Окр(СредняяПродажа*(Цел((Объект.ДатаСледующегоЗаказа - НачалоДня(Объект.ДатаФормированияЗаказа))/86400)+1), 2);
		Рекомендуем = Макс((РасходЗапасаДоСледующейПоставки - Выборка.ОстатокЗаказ) + МинимальныйОстаток, 0);
		
		// не больше максимального
		Если МаксимальныйЗапас>0 Тогда
			Рекомендуем = ?(Рекомендуем > МаксимальныйЗапас, МаксимальныйЗапас, Рекомендуем);
		КонецЕсли;
		
		// CASE по округлениям
		Если Объект.Режим_Округления="ДробноеКоличествоВМеньшуюСторону" Тогда
			Рекомендуем=ЦЕЛ(Рекомендуем);
		ИначеЕсли Объект.Режим_Округления="ДробноеКоличествоВБольшуюСторону" Тогда
			Рекомендуем=?(ЦЕЛ(Рекомендуем)=Рекомендуем,Рекомендуем,ЦЕЛ(Рекомендуем)+1);
		ИначеЕсли Объект.Режим_Округления="КвантПоставкиВМеньшуюСторону" Тогда
			Если КвантПоставки<>0 Тогда
				Рекомендуем=ЦЕЛ(Рекомендуем/КвантПоставки)*КвантПоставки;
			КонецЕсли;
		ИначеЕсли Объект.Режим_Округления="КвантПоставкиВБольшуюСторону" Тогда
			Если КвантПоставки<>0 Тогда
				ЦелРекомендуем=ЦЕЛ(Рекомендуем/КвантПоставки);
				Рекомендуем=?(Рекомендуем/КвантПоставки<>ЦелРекомендуем,(ЦелРекомендуем+1)*КвантПоставки,ЦелРекомендуем*КвантПоставки);
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура               = Выборка.Номенклатура;
		НоваяСтрока.Количество                 = Окр(Рекомендуем,0);
		НоваяСтрока.ЦенаПродажи                = Выборка.ЦенаПродажи;
		НоваяСтрока.КоличествоПродажВДень      = СредняяПродажа;
		НоваяСтрока.КоличествоПродажЗаПериод   = Оборот;
		НоваяСтрока.МаксимальныйЗапас          = Выборка.МаксимальныйЗапас;
		НоваяСтрока.МинимальнаяЦена            = Выборка.МинимальнаяЦена;
		НоваяСтрока.МинимальныйЗапас           = Выборка.МинимальныйОстаток;
		НоваяСтрока.ТекущийОстаток             = Выборка.ОстатокЗаказ;
		НоваяСтрока.УжеЗаказано                = Выборка.Заказано;
		НоваяСтрока.ЦенаПоставщика             = Выборка.ЦенаПоставщика;
		НоваяСтрока.ДатаПоступленияЗаказанного = Выборка.ДатаПоступления;
		НоваяСтрока.Использование              = (НоваяСтрока.Количество > 0);
		
	КонецЦикла;
	
КонецПроцедуры // СформироватьРезультат()

#КонецОбласти

#КонецЕсли