// Модуль менеджера обработки "Календарь пользователя"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Процедура предназначена для формирования планировщика
Процедура СформироватьПланировщик(Объект, Планировщик, РасписаниеСобытий, АдресРезультата)
	
	ЭлементыПланировщика = Планировщик.Элементы;
	ЭлементыПланировщика.Очистить();
	
	ЕстьФильтр = ЗначениеЗаполнено(Объект.ФильтрКонтрагент) ИЛИ ЗначениеЗаполнено(Объект.ФильтрМенеджер);
	
	СтруктураКартинок = Новый Структура;
	СтруктураКартинок.Вставить("ЛичнаяВстреча", БиблиотекаКартинок.ЛичнаяВстреча);
	СтруктураКартинок.Вставить("ТелефонныйЗвонок", БиблиотекаКартинок.ТелефонныйЗвонокСобытие);
	СтруктураКартинок.Вставить("ЭлектронноеПисьмо", БиблиотекаКартинок.ЭлектронноеПисьмоСобытие);
	СтруктураКартинок.Вставить("Событие", БиблиотекаКартинок.Событие);
	СтруктураКартинок.Вставить("Документ", БиблиотекаКартинок.Документ);

	Для каждого СтрокаСобытий Из РасписаниеСобытий Цикл
		
		Если СтрокаСобытий.ВидДокумента = "Напоминание" И Объект.СписокОтображаемыхДокументов.НайтиПоЗначению("Напоминание")=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// Проверим фильтры.
		Если ЕстьФильтр И НЕ СтрокаСобытий.ВидДокумента = "Напоминание" Тогда
			
			// Фильтр по контрагенту.
			Если ЗначениеЗаполнено(Объект.ФильтрКонтрагент) И ЕстьРеквизит(СтрокаСобытий.Событие, "Контрагент") Тогда
				Если НЕ СтрокаСобытий.Событие.Контрагент = Объект.ФильтрКонтрагент Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			// Фильтр по менеджеру.
			//Если ЗначениеЗаполнено(Объект.ФильтрМенеджер) И ЕстьРеквизит(СтрокаСобытий.Событие, "Менеджер") Тогда
			//	Если НЕ СтрокаСобытий.Менеджер = Объект.ПользовательКалендаря Тогда
			//		Продолжить;
			//	КонецЕсли;
			//КонецЕсли;
			
		КонецЕсли;
		
		// Добавление новой записи в промежуток времени.
		НовыйЭлемент = ЭлементыПланировщика.Добавить(СтрокаСобытий.НачалоСобытия, СтрокаСобытий.ОкончаниеСобытия);
		Если СтрокаСобытий.ВидДокумента = "Напоминание" Тогда
			СтруктураСобытия = Новый Структура();
			СтруктураСобытия.Вставить("ВидДокумента",СтрокаСобытий.ВидДокумента);
			СтруктураСобытия.Вставить("Пользователь",СтрокаСобытий.Пользователь);
			СтруктураСобытия.Вставить("Автор",СтрокаСобытий.Автор);
			СтруктураСобытия.Вставить("ВремяСобытия",СтрокаСобытий.НачалоСобытияДата);
			СтруктураСобытия.Вставить("Источник",СтрокаСобытий.Объект);
			НовыйЭлемент.Значение = СтруктураСобытия; 
			НаименованиеСобытия = "Дата: " + СтрокаСобытий.НачалоСобытияДата + Символы.ПС 
										+ "Вид документа: " + СтрокаСобытий.ВидДокумента;
		Иначе
			СтруктураСобытия = Новый Структура();
			СтруктураСобытия.Вставить("ВидДокумента",СтрокаСобытий.ВидДокумента);
			СтруктураСобытия.Вставить("Событие",СтрокаСобытий.Событие);
			НовыйЭлемент.Значение = СтруктураСобытия;   
			ВидДокумента = ?(ТипЗнч(СтрокаСобытий.Событие) = Тип("ДокументСсылка.Событие"), "Вид события: ", "Вид документа: ");
			НаименованиеСобытия =   "Номер: " + СтрокаСобытий.Номер + Символы.ПС 
									+ "Дата: " + СтрокаСобытий.НачалоСобытия + Символы.ПС 
									+ ВидДокумента + СтрокаСобытий.ВидСобытия;
		КонецЕсли;            

		//НовыйЭлемент.Текст = СтрокаСобытий.Событие; 
		НовыйЭлемент.Текст = НаименованиеСобытия;
		
		// Добавим картинку. 
		Если СтрокаСобытий.ВидДокумента = "Напоминание" Тогда
			НовыйЭлемент.Картинка = БиблиотекаКартинок.Напоминание;
		ИначеЕсли СтрокаСобытий.ВидДокумента = "Событие" Тогда
			
			ТипСобытия = СтрокаСобытий.ВидСобытия;
			
			Если ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.Встреча") Тогда
				НовыйЭлемент.Картинка = СтруктураКартинок.ЛичнаяВстреча;
			ИначеЕсли ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.Звонок") Тогда
				НовыйЭлемент.Картинка = СтруктураКартинок.ТелефонныйЗвонок;
			ИначеЕсли ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.ЭлектронноеОбращение") Тогда
				НовыйЭлемент.Картинка = СтруктураКартинок.ЭлектронноеПисьмо;
			Иначе
				НовыйЭлемент.Картинка = СтруктураКартинок.Событие;
			КонецЕсли;
			
		Иначе
			НовыйЭлемент.Картинка = СтруктураКартинок.Документ;
		КонецЕсли;
		
		// Раскрасим события по цвету.
		СтрокиЦвета = Объект.ЦветаСобытий.НайтиСтроки(Новый Структура("ВидДокумента",СтрокаСобытий.ВидДокумента));
		Если СтрокиЦвета.Количество() > 0 Тогда
			НовыйЭлемент.ЦветФона = СтрокиЦвета[0].Цвет;
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Планировщик, АдресРезультата);
КонецПроцедуры

// Процедура предназначена для получения таблицы расписания и формирования планировщика
Процедура ПолучитьТаблицуРасписаний(ПараметрыОперации, АдресРезультата) Экспорт
	Запрос = Новый Запрос;

	Запрос.Текст = ПолучитьТекстЗапросаРасписания(ПараметрыОперации.Данные, ПараметрыОперации.ТекстДляПоиска);
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыОперации.Данные.ПользовательКалендаря);
	Запрос.УстановитьПараметр("Менеджер", ПараметрыОперации.Данные.ПользовательКалендаря.Сотрудник);
	
	ДатаНачала = ПолучитьПериод(ПараметрыОперации.Данные.ДатаКалендаря, ПараметрыОперации.Периодичность);
	ДатаОкончания = ПолучитьПериод(ПараметрыОперации.Данные.ДатаКалендаря, ПараметрыОперации.Периодичность, Истина);

	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	Запрос.УстановитьПараметр("Описание", "%" + ПараметрыОперации.ТекстДляПоиска + "%");

	Если ЗначениеЗаполнено(ПараметрыОперации.Данные.ФильтрАвтор) Тогда
		Запрос.УстановитьПараметр("Автор", ПараметрыОперации.Данные.ФильтрАвтор);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОперации.Данные.ФильтрПодразделение) Тогда
		Запрос.УстановитьПараметр("Подразделение", ПараметрыОперации.Данные.ФильтрПодразделение); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОперации.Данные.ФильтрМенеджер) Тогда
		Запрос.УстановитьПараметр("Менеджер", ПараметрыОперации.Данные.ФильтрМенеджер);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОперации.Данные.ФильтрКонтрагент) Тогда
		Запрос.УстановитьПараметр("Контрагент", ПараметрыОперации.Данные.ФильтрКонтрагент);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОперации.Данные.ФильтрСостояние) Тогда
		Запрос.УстановитьПараметр("Состояние", ПараметрыОперации.Данные.ФильтрСостояние);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОперации.Данные.ФильтрАвтомобиль) Тогда
		Запрос.УстановитьПараметр("Автомобиль", ПараметрыОперации.Данные.ФильтрАвтомобиль);
	КонецЕсли;
	
	РасписаниеСобытий = Запрос.Выполнить().Выгрузить(); 	
	СформироватьПланировщик(ПараметрыОперации.Данные, ПараметрыОперации.Планировщик, РасписаниеСобытий, АдресРезультата);  
	
КонецПроцедуры // ПолучитьТаблицуРасписаний()

// Функция предназначена для получения периода
Функция ПолучитьПериод(Дата, Периодичность, КонечнаяДата = Ложь) 
	Если КонечнаяДата Тогда
		Если Периодичность = "День" Тогда
			Возврат КонецДня(Дата);
		ИначеЕсли Периодичность = "Неделя" Тогда
			Возврат КонецНедели(Дата);
		Иначе
			Возврат КонецМесяца(Дата);
		КонецЕсли;
	Иначе
		Если Периодичность = "День" Тогда
			Возврат НачалоДня(Дата);
		ИначеЕсли Периодичность = "Неделя" Тогда
			Возврат НачалоНедели(Дата);
		Иначе
			Возврат НачалоМесяца(Дата);
		КонецЕсли;
	КонецЕсли;
КонецФункции	

// Функция предназначена для получения текста запроса для процедуры "ПолучитьТаблицуРасписаний"
Функция ПолучитьТекстЗапросаРасписания(Объект, ТекстДляПоиска) Экспорт	
	// Формирование текста запроса по отображаемым документам
	Если Объект.СписокОтображаемыхДокументов.Количество()=0 Тогда
		ЗаполнитьСписокОтображаемыхДокументовИзМакета(Объект);
	КонецЕсли;
	
	// Сформируем массив документов, не содержащих реквизит "Контрагент"
	МассивДокументовБезКонтрагента = СформироватьМассивДокументовБезКонтрагента();
	МассивДокументовБезПодразделения = СформироватьМассивДокументовБезПодразделения();
	МассивДокументовСАвтоВШапке = СформироватьМассивДокументовСАвтоВШапке();
	МассивДокументовСМенеджером = СформироватьМассивДокументовСМенеджером();
	
	ОтборПоСостояниюСобытия = ЗначениеЗаполнено(Объект.ФильтрСостояние);
	ОтборПоАвтомобилю = ЗначениеЗаполнено(Объект.ФильтрАвтомобиль);
	
	ТекстЗапросаПоОтображаемымДокументам = "";
	Если ОтборПоСостояниюСобытия Тогда
		ТекстЗапросаПоОтображаемымДокументам = ТекстЗапросаПоОтображаемымДокументам 
			+ ПолучитьТекстЗапросаОбъединить(
			Объект, 
			"Событие", 
			ТекстДляПоиска, 
			МассивДокументовБезКонтрагента, 
			МассивДокументовБезПодразделения,
			МассивДокументовСМенеджером);
			
	ИначеЕсли ОтборПоАвтомобилю Тогда
		Для Каждого Документ Из МассивДокументовСАвтоВШапке Цикл
						
			ТекстЗапросаПоОтображаемымДокументам = ТекстЗапросаПоОтображаемымДокументам 
				+ ПолучитьТекстЗапросаОбъединить(
				Объект, 
				Документ, 
				ТекстДляПоиска, 
				МассивДокументовБезКонтрагента,
				МассивДокументовБезПодразделения,
				МассивДокументовСМенеджером);
			
		КонецЦикла;	
	Иначе
		Для Каждого Документ Из Объект.СписокОтображаемыхДокументов Цикл
			
			// Пропустим напоминания
			Если Документ.Значение = "Напоминание" Тогда
				Продолжить;
			КонецЕсли;
			
			Документ = Документ.Значение;
			
			ТекстЗапросаПоОтображаемымДокументам = ТекстЗапросаПоОтображаемымДокументам 
				+ ПолучитьТекстЗапросаОбъединить(
					Объект, 
					Документ, 
					ТекстДляПоиска, 
					МассивДокументовБезКонтрагента,
					МассивДокументовБезПодразделения,
					МассивДокументовСМенеджером);
					
		КонецЦикла;
	КонецЕсли;
	
	УсловиеГде =  ?(ТекстДляПоиска="","И Напоминания.СрокНапоминания МЕЖДУ &ДатаНачала И &ДатаОкончания","И Напоминания.Описание ПОДОБНО &Описание");
	
	Если ЗначениеЗаполнено(Объект.ФильтрАвтор) Тогда
		ТекстОтбораАвтор = " И ВТДанные.Автор <> Неопределено ";
	Иначе
		ТекстОтбораАвтор = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФильтрПодразделение) Тогда
		ТекстОтбораПодразделение = " И ВТДанные.Подразделение <> Неопределено ";
	Иначе
		ТекстОтбораПодразделение = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФильтрМенеджер) Тогда
		ТекстОтбораМенеджер = " И ВТДанные.Менеджер <> Неопределено ";
	Иначе
		ТекстОтбораМенеджер = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФильтрКонтрагент) Тогда
		ТекстОтбораКонтрагент = " И ВТДанные.Контрагент <> Неопределено ";
	Иначе
		ТекстОтбораКонтрагент = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФильтрСостояние) Тогда
		ТекстОтбораСостояние = " И ВТДанные.СостояниеСобытия <> Неопределено ";
	Иначе
		ТекстОтбораСостояние = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФильтрАвтомобиль) Тогда
		ТекстОтбораАвтомобиль = " И ВТДанные.Автомобиль <> Неопределено ";
	Иначе
		ТекстОтбораАвтомобиль = "";
	КонецЕсли;

	УсловиеПоПустым = "Где Истина " 
		+ ТекстОтбораАвтор 
		+ ТекстОтбораКонтрагент 
		+ ТекстОтбораСостояние 
		+ ТекстОтбораПодразделение
		+ ТекстОтбораАвтомобиль
		+ ТекстОтбораМенеджер;
	
	// Сформируем текст запроса по напоминаниям и объединим с запросом по документам
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(Напоминания.СрокНапоминания, ДЕНЬ) КАК ДатаСобытия,
	|	ИСТИНА КАК Напоминание,
	|	Напоминания.ВремяСобытия КАК НачалоСобытияДата,
	|	Напоминания.СрокНапоминания КАК НачалоСобытия,
	|	Напоминания.СрокНапоминания КАК ОкончаниеСобытия,
	|	""Напоминание"" КАК ВидДокумента,
	| 	""Номер"" КАК Номер,	
	|	""Напоминание"" КАК ВидСобытия,
	|	""Напоминание"" КАК Событие,
	|	Напоминания.Описание КАК Тема,
	|	Напоминания.Пользователь КАК Пользователь,
	|	Напоминания.Автор КАК Автор,
	|	Напоминания.Источник КАК Объект,
	|	NULL КАК Контрагент,
	|	NULL КАК СостояниеСобытия,	
	|	NULL КАК Менеджер,
	|	NULL КАК Подразделение,
	|	NULL КАК Автомобиль,
	|	NULL КАК ОбращениеККлиенту
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	РегистрСведений.НапоминанияПользователя КАК Напоминания
	|ГДЕ
	|	Напоминания.Пользователь = &Пользователь
	|    " + УсловиеГде + ТекстЗапросаПоОтображаемымДокументам + " 
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.ДатаСобытия КАК ДатаСобытия,
	|	ВТДанные.Напоминание КАК Напоминание,
	|	ВТДанные.НачалоСобытияДата КАК НачалоСобытияДата,
	|	ВТДанные.НачалоСобытия КАК НачалоСобытия,
	|	ВТДанные.ОкончаниеСобытия КАК ОкончаниеСобытия,
	|	ВТДанные.ВидДокумента КАК ВидДокумента,   
	|	ВТДанные.Номер КАК Номер,
	|	ВТДанные.ВидСобытия КАК ВидСобытия,
	|	ВТДанные.Событие КАК Событие,
	|	ВТДанные.Тема КАК Тема,
	|	ВТДанные.Пользователь КАК Пользователь,
	|	ВТДанные.Автор КАК Автор,
	|	ВТДанные.Объект КАК Объект,
	|	ВТДанные.Контрагент КАК Контрагент,
	|	ВТДанные.СостояниеСобытия КАК СостояниеСобытия,	
	|	ВТДанные.Менеджер КАК Менеджер,
	|	ВТДанные.Подразделение КАК Подразделение,
	|	ВТДанные.Автомобиль КАК Автомобиль,
	|	ВТДанные.ОбращениеККлиенту КАК ОбращениеККлиенту
	|ИЗ
	|	ВТДанные КАК ВТДанные " + УсловиеПоПустым + "
	|УПОРЯДОЧИТЬ ПО
	|	НачалоСобытия";
			
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьТаблицуРасписаний()

// Получить текст запроса объединить
Функция ПолучитьТекстЗапросаОбъединить(Объект, Документ, ТекстДляПоиска, МассивДокументовБезКонтрагента, МассивДокументовБезПодразделения, МассивДокументовСМенеджером)
	
	// Документ будет выведен, если этому не помешают настройки принадлежности пользователю.
	ВыводитьДокумент = Истина;
	
	Если Документ = "Событие" Тогда 
		ПолеНачалоСобытия = Документ+".ДатаНачала";
		ПолеОкончаниеСобытия = Документ+".ДатаОкончания"; 
	Иначе
		ПолеНачалоСобытия = Документ+".Дата";
		ПолеОкончаниеСобытия = Документ+".Дата";
	КонецЕсли;
	
	// у событий есть тема, у других документов ее нет
	Если Документ = "Событие" ИЛИ Документ = "Рассылка" ИЛИ Документ = "СообщениеSMS"  ИЛИ Документ = "ЭлектронноеПисьмоВходящее" ИЛИ Документ = "ЭлектронноеПисьмоИсходящее" Тогда
		ПолеТема = Документ+".Тема";
		УсловиеГде =  ?(ТекстДляПоиска="",ПолеНачалоСобытия + " МЕЖДУ &ДатаНачала И &ДатаОкончания",ПолеТема + " ПОДОБНО &Описание");
	Иначе
		ПолеТема = Документ+".Представление";
		УсловиеГде =  ?(ТекстДляПоиска="",Документ + ".Дата МЕЖДУ &ДатаНачала И &ДатаОкончания",""""+Документ+""" ПОДОБНО &Описание");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПользовательКалендаря) И МассивДокументовСМенеджером.Найти(Документ) = Неопределено Тогда
		ТекстОтбораАвтор = " И " + Документ +".Автор = &Пользователь ";
	Иначе
		ТекстОтбораАвтор = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФильтрСостояние) Тогда
		ПолеСостояние = Документ +".Состояние";
		Обращение = Документ +".ОбращениеККлиенту";
		ТекстОтбораСостояние = " И " + Документ +".Состояние = &Состояние "
	Иначе
		ПолеСостояние = "NULL";
		Обращение = "NULL";
		ТекстОтбораСостояние = "";
	КонецЕсли;
	
	Если МассивДокументовБезПодразделения.Найти(Документ) <> Неопределено Тогда
		ПолеПодразделение = "NULL";
		ТекстОтбораПодразделение = ""; 	
	Иначе
		ПолеПодразделение = Документ+".ПодразделениеКомпании";
		Если ЗначениеЗаполнено(Объект.ФильтрПодразделение) Тогда
			ТекстОтбораПодразделение = " И " + Документ +".ПодразделениеКомпании = &Подразделение ";
		Иначе
			ТекстОтбораПодразделение = "";
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФильтрАвтомобиль) Тогда
		ПолеАвтомобиль = Документ+".Автомобиль";
		ТекстОтбораАвтомобиль = " И " + Документ +".Автомобиль = &Автомобиль ";
	Иначе
		ПолеАвтомобиль = "NULL";
		ТекстОтбораАвтомобиль = "";
	КонецЕсли;
	
	Если МассивДокументовСМенеджером.Найти(Документ) = Неопределено Тогда
		ПолеМенеджер = "NULL";
		ТекстОтбораМенеджер = "";
	Иначе
		ПолеМенеджер = Документ+".Менеджер";
		Если ЗначениеЗаполнено(Объект.ПользовательКалендаря) Тогда
			ТекстОтбораМенеджер = " И " + Документ +".Менеджер = &Менеджер";
		Иначе
			ТекстОтбораМенеджер = "";
		КонецЕсли;
	КонецЕсли;
	
	Если МассивДокументовБезКонтрагента.Найти(Документ) <> Неопределено Тогда
		Если Документ = "ЗаявкаНаАвтомобиль" ИЛИ Документ = "РабочийЛистКредитногоОтдела" Тогда
			ПолеКонтрагент = Документ+".Клиент";
			Если ЗначениеЗаполнено(Объект.ФильтрКонтрагент) Тогда
				ТекстОтбораКонтрагент = " И " + Документ +".Клиент = &Контрагент ";
			Иначе
				ТекстОтбораКонтрагент = "";
			КонецЕсли;
		ИначеЕсли  Документ = "СводныйРемонтныйЗаказ" Тогда
			ПолеКонтрагент = Документ+".Заказчик";
			Если ЗначениеЗаполнено(Объект.ФильтрКонтрагент) Тогда
				ТекстОтбораКонтрагент = " И " + Документ +".Заказчик = &Контрагент ";
			Иначе
				ТекстОтбораКонтрагент = "";
			КонецЕсли;
		ИначеЕсли  Документ = "ПриходныйСкладскойОрдер" 
			ИЛИ Документ = "ПриходныйСкладскойОрдерНаАвтомобили" 
			ИЛИ Документ = "РасходныйСкладскойОрдер"
			ИЛИ Документ = "РасходныйСкладскойОрдерНаАвтомобили" Тогда
			ПолеКонтрагент = Документ+".ВладелецТовара";
			Если ЗначениеЗаполнено(Объект.ФильтрКонтрагент) Тогда
				ТекстОтбораКонтрагент = " И " + Документ +".ВладелецТовара = &Контрагент ";
			Иначе
				ТекстОтбораКонтрагент = "";
			КонецЕсли;	
		Иначе
			ПолеКонтрагент = "NULL";
			ТекстОтбораКонтрагент = "";
		КонецЕсли;
	Иначе
		ПолеКонтрагент = Документ+".Контрагент";
		Если ЗначениеЗаполнено(Объект.ФильтрКонтрагент) Тогда
			ТекстОтбораКонтрагент = " И " + Документ +".Контрагент = &Контрагент ";
		Иначе
			ТекстОтбораКонтрагент = "";
		КонецЕсли;
	КонецЕсли;
				
	ТекстЗапросаГдеДляДокумента = "Где " + Документ +".ПометкаУдаления = ЛОЖЬ И " + УсловиеГде 
		+ ТекстОтбораАвтор 
		+ ТекстОтбораКонтрагент 
		+ ТекстОтбораСостояние 
		+ ТекстОтбораПодразделение
		+ ТекстОтбораАвтомобиль
		+ ТекстОтбораМенеджер;
	
	// собираем текст запроса по документам
	Если ВыводитьДокумент Тогда
		ТекстЗапросаПоОтображаемымДокументам = " 
		|ОБЪЕДИНИТЬ ВСЕ 
		|	ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА("+СтрЗаменить(Документ,".","")+".Дата, ДЕНЬ),
		|	ЛОЖЬ,
		|	НАЧАЛОПЕРИОДА("+ПолеНачалоСобытия+", ДЕНЬ),
		|	"+ПолеНачалоСобытия+",
		|	"+ПолеОкончаниеСобытия+",
		|	"""+Документ+""", 
		|	"+Документ+".Номер,
		|   "+?(Документ = "Событие", ".ВидСобытия", """" + Документ + """")+",
		|	"+Документ+".Ссылка,
		|	"+ПолеТема+",
		|	NULL,
		|	"+Документ+".Автор,
		|	NULL,
		|	"+ПолеКонтрагент+",
		|	"+ПолеСостояние+",
		|	"+ПолеМенеджер+",
		|	"+ПолеПодразделение+",
		|	"+ПолеАвтомобиль+",
		|	"+Обращение+"
		
		|ИЗ
		|	Документ."+Документ+" КАК "+Документ+" " + ТекстЗапросаГдеДляДокумента +  "";
	КонецЕсли;
	
	Возврат ТекстЗапросаПоОтображаемымДокументам;
	
КонецФункции // ПолучитьТекстЗапросаОбъединить()

// Заполнение списка отображаемых документов из макета
Процедура ЗаполнитьСписокОтображаемыхДокументовИзМакета(Объект)
	
	Объект.СписокОтображаемыхДокументов.Очистить();
	МакетДокументов = ПолучитьМакет("МакетДокументов");
	ОбластьДокументовПросмотра = МакетДокументов.ПолучитьОбласть("ДокументыПросмотр");
	Для ПеременнаяЦикла = 1 По ОбластьДокументовПросмотра.ВысотаТаблицы Цикл
		ИмяДокумента = ОбластьДокументовПросмотра.Область(ПеременнаяЦикла, 1).Текст;
		ПредставлениеДокумента = ОбластьДокументовПросмотра.Область(ПеременнаяЦикла, 2).Текст;
		Если ИмяДокумента <> "" Тогда 
			Если Объект.СписокОтображаемыхДокументов.НайтиПоЗначению(ИмяДокумента) = Неопределено Тогда
				Объект.СписокОтображаемыхДокументов.Добавить(ИмяДокумента,ПредставлениеДокумента);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСписокОтображаемыхДокументовИзМакета()

Функция СформироватьМассивДокументовБезКонтрагента()
	
	МассивДокументовБезКонтрагента = Новый Массив();
	МассивДокументовБезКонтрагента.Добавить("Амортизация");
	МассивДокументовБезКонтрагента.Добавить("Анкета");
	МассивДокументовБезКонтрагента.Добавить("БюджетДДС");
	МассивДокументовБезКонтрагента.Добавить("БюджетДоходовИРасходов");
	МассивДокументовБезКонтрагента.Добавить("БюджетЗакупок");
	МассивДокументовБезКонтрагента.Добавить("БюджетЗакупокАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("БюджетОказанияУслугПоАвтоработам");
	МассивДокументовБезКонтрагента.Добавить("БюджетПродаж");
	МассивДокументовБезКонтрагента.Добавить("БюджетПродажАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("ВводВОборотКодовМаркировки");
	МассивДокументовБезКонтрагента.Добавить("ВводВЭксплуатацию");
	МассивДокументовБезКонтрагента.Добавить("ВводВЭксплуатациюАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("ВводОстатковВзаиморасчетов");
	МассивДокументовБезКонтрагента.Добавить("ВводОстатковНакопительныхСумм");
	МассивДокументовБезКонтрагента.Добавить("ВводОстатковПрочихАктивов");
	МассивДокументовБезКонтрагента.Добавить("Взаимозачет");
	МассивДокументовБезКонтрагента.Добавить("ВозвратВОборотКодовМаркировки");
	МассивДокументовБезКонтрагента.Добавить("Встреча");
	МассивДокументовБезКонтрагента.Добавить("ВыводИзОборотаКодовМаркировки");
	МассивДокументовБезКонтрагента.Добавить("ВыводИзЭксплуатацииАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("ВыплатаЗарплаты");
	МассивДокументовБезКонтрагента.Добавить("ЗаказВнутренний");
	МассивДокументовБезКонтрагента.Добавить("ЗакрытиеПериода");
	МассивДокументовБезКонтрагента.Добавить("ЗакрытиеСмены");
	МассивДокументовБезКонтрагента.Добавить("ЗапланированноеВзаимодействие");
	МассивДокументовБезКонтрагента.Добавить("ЗаявкаНаАвтомобиль");
	МассивДокументовБезКонтрагента.Добавить("ИзвлечениеТоваровИзПроизводства");
	МассивДокументовБезКонтрагента.Добавить("ИзменениеАссортиментаПодразделения");
	МассивДокументовБезКонтрагента.Добавить("ИзменениеДоговораАренды");
	МассивДокументовБезКонтрагента.Добавить("ИзменениеЦенАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("ИзменениеЦенАренды");
	МассивДокументовБезКонтрагента.Добавить("ИзменениеЦенОпций");
	МассивДокументовБезКонтрагента.Добавить("ИнвентаризацияОрдерногоСклада");
	МассивДокументовБезКонтрагента.Добавить("Инкассация");
	МассивДокументовБезКонтрагента.Добавить("КассоваяСмена");
	МассивДокументовБезКонтрагента.Добавить("КассовыйЧекКоррекции");
	МассивДокументовБезКонтрагента.Добавить("Комплектация");
	МассивДокументовБезКонтрагента.Добавить("КорректировкаБонусов");
	МассивДокументовБезКонтрагента.Добавить("КорректировкаДвижений");
	МассивДокументовБезКонтрагента.Добавить("КорректировкаОпцийАвтомобиля");
	МассивДокументовБезКонтрагента.Добавить("КорректировкаСтатусовКодовМаркировки");
	МассивДокументовБезКонтрагента.Добавить("НазначениеОпросов");
	МассивДокументовБезКонтрагента.Добавить("НазначениеСкидокСтроки");
	МассивДокументовБезКонтрагента.Добавить("НазначениеСкидокШапки");
	МассивДокументовБезКонтрагента.Добавить("НачислениеЗарплаты");
	МассивДокументовБезКонтрагента.Добавить("ОтзывСогласияНаОбработкуПерсональныхДанных");
	МассивДокументовБезКонтрагента.Добавить("Перемаркировка");
	МассивДокументовБезКонтрагента.Добавить("ПеремещениеАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("ПеремещениеАктивов");
	МассивДокументовБезКонтрагента.Добавить("ПеремещениеДенежныхСредств");
	МассивДокументовБезКонтрагента.Добавить("ПеремещениеНезавершенногоПроизводства");
	МассивДокументовБезКонтрагента.Добавить("ПеремещениеТоваров");
	МассивДокументовБезКонтрагента.Добавить("ПеремещениеТоваровВПроизводство");
	МассивДокументовБезКонтрагента.Добавить("ПереоценкаВалютныхСредств");
	МассивДокументовБезКонтрагента.Добавить("ПереразмещениеАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("ПереразмещениеТоваров");
	МассивДокументовБезКонтрагента.Добавить("ПересортицаТоваров");
	МассивДокументовБезКонтрагента.Добавить("ПланФакт");
	МассивДокументовБезКонтрагента.Добавить("ПриходныйСкладскойОрдер");
	МассивДокументовБезКонтрагента.Добавить("ПриходныйСкладскойОрдерНаАвтомобили");
	МассивДокументовБезКонтрагента.Добавить("РабочийЛистКредитногоОтдела");
	МассивДокументовБезКонтрагента.Добавить("РабочийЛистОтделаСтрахования");
	МассивДокументовБезКонтрагента.Добавить("Разукомплектация");
	МассивДокументовБезКонтрагента.Добавить("РазукомплектацияАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("Рассылка");
	МассивДокументовБезКонтрагента.Добавить("РасходныйСкладскойОрдер");
	МассивДокументовБезКонтрагента.Добавить("РасходныйСкладскойОрдерНаАвтомобили");
	МассивДокументовБезКонтрагента.Добавить("РезервированиеАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("СводныйРемонтныйЗаказ");
	МассивДокументовБезКонтрагента.Добавить("СнятиеРезервовАвтомобилей");
	МассивДокументовБезКонтрагента.Добавить("СогласиеНаОбработкуПерсональныхДанных");
	МассивДокументовБезКонтрагента.Добавить("СообщениеSMS");
	МассивДокументовБезКонтрагента.Добавить("СписаниеАктивов");
	МассивДокументовБезКонтрагента.Добавить("СписаниеКодовМаркировки");
	МассивДокументовБезКонтрагента.Добавить("СтраховойПолис");
	МассивДокументовБезКонтрагента.Добавить("Табель");
	МассивДокументовБезКонтрагента.Добавить("ТелефонныйЗвонок");
	МассивДокументовБезКонтрагента.Добавить("ТЦТест");
	МассивДокументовБезКонтрагента.Добавить("ЭлектронноеПисьмоВходящее");
	МассивДокументовБезКонтрагента.Добавить("ЭлектронноеПисьмоИсходящее");
	
	Возврат МассивДокументовБезКонтрагента;
	
КонецФункции

Функция СформироватьМассивДокументовБезПодразделения()
	
	МассивДокументовБезПодразделения = Новый Массив();
	МассивДокументовБезПодразделения.Добавить("ПакетЭД");
	МассивДокументовБезПодразделения.Добавить("СправкиСПАРКРиски");
	МассивДокументовБезПодразделения.Добавить("УдалитьПроизвольныйЭД");
	МассивДокументовБезПодразделения.Добавить("ЭлектронныйДокументВходящийЭДО");
	МассивДокументовБезПодразделения.Добавить("ЭлектронныйДокументИсходящийЭДО");
	МассивДокументовБезПодразделения.Добавить("ТЦТест");
	
	Возврат МассивДокументовБезПодразделения;
	
КонецФункции

Функция СформироватьМассивДокументовСАвтоВШапке()
	
	МассивДокументовСАвтоВШапке = Новый Массив();
	МассивДокументовСАвтоВШапке.Добавить("АктОценкиАвтомобиля");
	МассивДокументовСАвтоВШапке.Добавить("АктРазногласий");
	МассивДокументовСАвтоВШапке.Добавить("ДефектовочнаяВедомость");
	МассивДокументовСАвтоВШапке.Добавить("ЗаказНаАвтомобиль");
	МассивДокументовСАвтоВШапке.Добавить("ЗаказПокупателя");
	МассивДокументовСАвтоВШапке.Добавить("ЗаказПоставщикуНаАвтомобиль");
	МассивДокументовСАвтоВШапке.Добавить("ЗаявкаНаРемонт");
	МассивДокументовСАвтоВШапке.Добавить("ЗаявкаНаХранениеШин");
	МассивДокументовСАвтоВШапке.Добавить("КорректировкаОпцийАвтомобиля");
	МассивДокументовСАвтоВШапке.Добавить("КорректировкаРеализации");
	МассивДокументовСАвтоВШапке.Добавить("ПереносИстории");
	МассивДокументовСАвтоВШапке.Добавить("РабочийЛист");
	МассивДокументовСАвтоВШапке.Добавить("РабочийЛистВыкупаАвтомобиля");
	МассивДокументовСАвтоВШапке.Добавить("РеализацияТоваров");
	МассивДокументовСАвтоВШапке.Добавить("РеестрДокументов");
	МассивДокументовСАвтоВШапке.Добавить("СводныйРемонтныйЗаказ");
	МассивДокументовСАвтоВШапке.Добавить("СтраховойПолис");
	МассивДокументовСАвтоВШапке.Добавить("ТестДрайв");
	
	Возврат МассивДокументовСАвтоВШапке;
	
КонецФункции

Функция СформироватьМассивДокументовСМенеджером()
	
	МассивДокументовСМенеджером = Новый Массив();
	МассивДокументовСМенеджером.Добавить("АктОценкиАвтомобиля");
	МассивДокументовСМенеджером.Добавить("АктРазногласий");
	МассивДокументовСМенеджером.Добавить("ВозвратОтПокупателя");
	МассивДокументовСМенеджером.Добавить("ВозвратОтПокупателяАвтомобилей");
	МассивДокументовСМенеджером.Добавить("ВозвратПоставщику");
	МассивДокументовСМенеджером.Добавить("ВозвратПоставщикуАвтомобилей");
	МассивДокументовСМенеджером.Добавить("ВыводИзЭксплуатацииАвтомобилей");
	МассивДокументовСМенеджером.Добавить("ДефектовочнаяВедомость");
	МассивДокументовСМенеджером.Добавить("ДоговорАренды");
	МассивДокументовСМенеджером.Добавить("ЗаказНаАвтомобиль");
	МассивДокументовСМенеджером.Добавить("ЗаказНаряд");
	МассивДокументовСМенеджером.Добавить("ЗаказПокупателя");
	МассивДокументовСМенеджером.Добавить("ЗаменаВЗаказеПокупателя");
	МассивДокументовСМенеджером.Добавить("ЗаменаВЗаказеПоставщику");
	МассивДокументовСМенеджером.Добавить("ЗаявкаНаАвтомобиль");
	МассивДокументовСМенеджером.Добавить("ЗаявкаНаАренду");
	МассивДокументовСМенеджером.Добавить("ЗаявкаНаКомпенсациюПоМаркетинговойПрограмме");
	МассивДокументовСМенеджером.Добавить("ЗаявкаНаРемонт");
	МассивДокументовСМенеджером.Добавить("ЗаявкаНаХранениеШин");
	МассивДокументовСМенеджером.Добавить("ИзменениеДоговораАренды");
	МассивДокументовСМенеджером.Добавить("ИзменениеЦенАренды");
	МассивДокументовСМенеджером.Добавить("КорректировкаКомпенсацииПоМаркетинговойПрограмме");
	МассивДокументовСМенеджером.Добавить("КорректировкаОпцийАвтомобиля");
	МассивДокументовСМенеджером.Добавить("КорректировкаПоступления");
	МассивДокументовСМенеджером.Добавить("КорректировкаПоступленияАвтомобилей");
	МассивДокументовСМенеджером.Добавить("КорректировкаРеализации");
	МассивДокументовСМенеджером.Добавить("КорректировкаРеализацииАвтомобилей");
	МассивДокументовСМенеджером.Добавить("ПоступлениеАвтомобилей");
	МассивДокументовСМенеджером.Добавить("ПоступлениеТоваров");
	МассивДокументовСМенеджером.Добавить("РабочийЛист");
	МассивДокументовСМенеджером.Добавить("РабочийЛистВыкупаАвтомобиля");
	МассивДокументовСМенеджером.Добавить("Рассылка");
	МассивДокументовСМенеджером.Добавить("РеализацияАвтомобилей");
	МассивДокументовСМенеджером.Добавить("РеализацияАктивов");
	МассивДокументовСМенеджером.Добавить("РеализацияТоваров");
	МассивДокументовСМенеджером.Добавить("СводныйРемонтныйЗаказ");
	МассивДокументовСМенеджером.Добавить("Событие");
	МассивДокументовСМенеджером.Добавить("СообщениеSMS");
	МассивДокументовСМенеджером.Добавить("ТестДрайв");
	МассивДокументовСМенеджером.Добавить("ТЦТест");
	МассивДокументовСМенеджером.Добавить("ЭлектронноеПисьмоВходящее");
	МассивДокументовСМенеджером.Добавить("ЭлектронноеПисьмоИсходящее");
	
	Возврат МассивДокументовСМенеджером;
	
КонецФункции

#КонецОбласти

#КонецЕсли