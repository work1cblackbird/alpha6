//
// Форма предназначена для установки параметров по умолчанию для автоматического планирования в АРМ "Запись на ремонт".
// Доступ для редактирования есть только у администратора информационной базы.
//

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	РежимРаботы = ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы();
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// редактирование доступно только администратору
	ЭтотОбъект.ТолькоПросмотр = НЕ РежимРаботы.ЭтоАдминистраторПрограммы;
	Элементы.Предупреждение.Видимость = НЕ РежимРаботы.ЭтоАдминистраторПрограммы;
	
	// заполним список подразделений
	ЗаполнитьПодразделенияКомпании();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаборКонстантПланированиеВПределахОдногоДняПриИзменении(Элемент)
	
	ОбработкаИзмененияРеквизита(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантНеУчитыватьПерерывыПриИзменении(Элемент)
	
	ОбработкаИзмененияРеквизита(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантПланироватьБезРазбиенияПриИзменении(Элемент)
	
	ОбработкаИзмененияРеквизита(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияКомпанииСрокРасчетаПриИзменении(Элемент)
	
	ОбработкаИзмененияРеквизита(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПодразделенияКомпании()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПодразделенияКомпании.Ссылка КАК ПодразделениеКомпании,
	|	ПодразделенияКомпании.СрокРасчетаАвтоматическогоПланирования КАК СрокРасчета
	|ИЗ
	|	Справочник.ПодразделенияКомпании КАК ПодразделенияКомпании
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодразделенияКомпании.Ссылка ИЕРАРХИЯ УБЫВ");
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ПодразделенияКомпании.Загрузить(Результат.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаИзмененияКонстантыНаСервере(Имя)
	
	Если Константы[Имя].Получить() <> НаборКонстант[Имя] Тогда
		Константы[Имя].Установить(НаборКонстант[Имя]);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаИзмененияСправочникаНаСервере(Идентификатор)
	
	ТекущиеДанные = ПодразделенияКомпании.НайтиПоИдентификатору(Идентификатор);
	Если ТекущиеДанные <> Неопределено
		И ТекущиеДанные.ПодразделениеКомпании.СрокРасчетаАвтоматическогоПланирования <> ТекущиеДанные.СрокРасчета Тогда
		
		СправочникОбъект = ТекущиеДанные.ПодразделениеКомпании.ПолучитьОбъект();
		СправочникОбъект.СрокРасчетаАвтоматическогоПланирования = ТекущиеДанные.СрокРасчета;
		
		СправочникОбъект.ОбменДанными.Загрузка = Истина;
		
		СправочникОбъект.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаИзмененияРеквизита(ИмяРеквизита)
	
	Если СтрНачинаетсяС(ИмяРеквизита, "НаборКонстант") Тогда
		ОбработкаИзмененияКонстантыНаСервере(Сред(ИмяРеквизита, 14));
	ИначеЕсли ИмяРеквизита = "ПодразделенияКомпанииСрокРасчета" Тогда
		ОбработкаИзмененияСправочникаНаСервере(Элементы.ПодразделенияКомпании.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


