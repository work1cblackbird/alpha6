#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

// BSLLS:MissingVariablesDescription-off
Перем ДокументыДляПечати;
Перем ПараметрыПечати;
Перем ОбластиПечатиОбъектов;
Перем ПечатнаяФорма;
Перем Макет;
Перем ПервыйДокумент;
Перем ФорматВыводаСуммы;
Перем ВалютаПечатногоДокумента;
// BSLLS:MissingVariablesDescription-on

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Сохраняет в объекте список печатаемых документов
//
// Параметры:
//  Документы - Массив Из ДокументСсылка.ПоступлениеАвтомобилей - перечень документов
// 
// Возвращаемое значение:
//   ОбработкаОбъект.ПечатьДоговорКуплиПродажи
//
Функция ПечатаемДокументы(Документы) Экспорт
	
	ДокументыДляПечати = Документы;
	Возврат ЭтотОбъект;
	
КонецФункции

// Сохраняет в объекте параметры печати
//
// Параметры:
//  Параметры - Структура - параметры печати
// 
// Возвращаемое значение:
//   ОбработкаОбъект.ПечатьДоговорКуплиПродажи
//
Функция СПараметрами(Параметры) Экспорт
	
	ПараметрыПечати = Параметры;
	ВалютаПечатногоДокумента = ПолучитьЗначениеПараметраСтруктуры(ПараметрыПечати, "ВалютаПечатногоДокумента");
	Возврат ЭтотОбъект;
	
КонецФункции

// Сохраняет в объекте соответствие объектов и областей в табличном документе
//
// Параметры:
//  ОбъектыПечати - Соответствие
// 
// Возвращаемое значение:
//   ОбработкаОбъект.ПечатьДоговорКуплиПродажи
//
Функция СохранятьСвязьОбластейИОбъектовВ(ОбъектыПечати) Экспорт
	
	ОбластиПечатиОбъектов = ОбъектыПечати;
	Возврат ЭтотОбъект;
	
КонецФункции

// Формирует печатную форму договора купли продажи
// 
// Возвращаемое значение:
//   ТабличныйДокумент
//
Функция Печать() Экспорт
	
	УстановитьПараметрыПечати();
	ДанныеДляПечати = ПодготовитьДанныеДокументов();
	
	Для Каждого Документ Из ДанныеДляПечати Цикл
	
		НачатьНовыйДокументСНовогоЛиста();
		НачалоОбластиДокумента = НачалоОбластиДокумента();
		ВывестиЗаголовокВПечатнуюФорму(Документ.Значение);
		ВывестиПриложение1ВПечатнуюФорму(Документ.Значение);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ПечатнаяФорма,
			НачалоОбластиДокумента, 
			ОбластиПечатиОбъектов,
			Документ.Ключ
		);
		
	КонецЦикла;
	
	Возврат ПечатнаяФорма;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодготовкаданныхКВыводу

Функция ПодготовитьДанныеДокументов()
	
	ДанныеДляПечати = БазовыеДанныеИзДокумента();
	ДанныеДляПечати = ПодготовитьДанныеДоговораКВыводу(ДанныеДляПечати);
	ДанныеДляПечати = ПодготовитьДанныеПродавцаКВыводу(ДанныеДляПечати);
	ДанныеДляПечати = ПодготовитьДанныеПокупателяКВыводу(ДанныеДляПечати);
	ДанныеДляПечати = ПодготовитьДанныеАвтомобиляКВыводу(ДанныеДляПечати);
	ДанныеДляПечати = ПодготовитьСуммовыеПоказателиУВыводу(ДанныеДляПечати);
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция БазовыеДанныеИзДокумента()
	
	ДанныеДляПечати = Новый Соответствие;
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПоступлениеАвтомобилей.Ссылка КАК Ссылка,
		|	ПоступлениеАвтомобилей.Номер КАК Номер,
		|	ПоступлениеАвтомобилей.Дата КАК Дата,
		|	ПоступлениеАвтомобилей.ДоговорВзаиморасчетов.НомерДоговора КАК НомерДоговора,
		|	ПоступлениеАвтомобилей.ДоговорВзаиморасчетов.ДатаСоздания КАК ДатаДоговора,
		|	ПоступлениеАвтомобилей.Контрагент КАК Контрагент,
		|	ПоступлениеАвтомобилей.Организация КАК Организация,
		|	ПоступлениеАвтомобилей.ПодразделениеКомпании КАК ПодразделениеКомпании,
		|	ПоступлениеАвтомобилей.Автомобили.(
		|		Автомобиль КАК Автомобиль,
		|		Автомобиль.Марка КАК Марка,
		|		Автомобиль.Модель КАК Модель,
		|		Автомобиль.ВариантКомплектации КАК Комплектация,
		|		СтавкаНДС.Ставка КАК СтавкаНДС,
		|		СуммаНДС КАК СуммаНДС,
		|		СуммаВсего КАК СуммаВсего,
		|		Автомобиль.VIN КАК VIN,
		|		Автомобиль.ГодВыпуска КАК ГодВыпуска,
		|		Автомобиль.НомерКузова КАК НомерКузова,
		|		Автомобиль.НомерШасси КАК НомерШасси,
		|		Автомобиль.Цвет КАК Цвет,
		|		Автомобиль.ТипКПП КАК ТипКПП,
		|		Автомобиль.НомерДвигателя КАК НомерДвигателя,
		|		ПоступлениеАвтомобилей.Автомобили.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС) КАК БезНДС
		|	) КАК Автомобили,
		|	ПоступлениеАвтомобилей.ВалютаДокумента КАК ВалютаДокумента,
		|	ПоступлениеАвтомобилей.КурсДокумента КАК КурсДокумента,
		|	ПоступлениеАвтомобилей.КурсВалютыУпр КАК КурсВалютыУпр,
		|	ПоступлениеАвтомобилей.ХозОперация = ЗНАЧЕНИЕ(Справочник.ХозОперации.ПоступлениеАвтомобилейКомиссия) КАК ЭтоКомиссия,
		|	ПоступлениеАвтомобилей.Контрагент.ОсновнойБанковскийСчет КАК КонтрагентБанковскийСчет,
		|	ПоступлениеАвтомобилей.Контрагент.ОсновнойБанковскийСчет.Банк КАК КонтрагентБанк,
		|	ПоступлениеАвтомобилей.Контрагент.ОсновнойБанковскийСчет.НомерСчета КАК КонтрагентНомерСчета,
		|	ПоступлениеАвтомобилей.Контрагент.ОсновнойБанковскийСчет.Банк.КоррСчет КАК КонтрагентКоррСчет,
		|	ПоступлениеАвтомобилей.Контрагент.ДатаРождения КАК КонтрагентДатаРождения,
		|	ПоступлениеАвтомобилей.Контрагент.Пол КАК КонтрагентПол
		|ИЗ
		|	Документ.ПоступлениеАвтомобилей КАК ПоступлениеАвтомобилей
		|ГДЕ
		|	ПоступлениеАвтомобилей.Ссылка В(&Ссылки)
		|ИТОГИ ПО
		|	Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылки", ДокументыДляПечати);
	РезультатЗапроса = Запрос.Выполнить();
	// Для создания структуры со всеми колонками
	Колонки = КолонкиСтрокой(РезультатЗапроса);
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		ВыборкаДетали = Выборка.Выбрать();
		ВыборкаДетали.Следующий();
		
		Значение = Новый Структура(Колонки);
		ЗаполнитьЗначенияСвойств(Значение, ВыборкаДетали);
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(
			Значение,
			РазложитьДанныеАвтомобиля(ВыборкаДетали.Автомобили),
			Истина
		);
		
		ДанныеДляПечати.Вставить(Выборка.Ссылка, Значение);
		
	КонецЦикла;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция КолонкиСтрокой(РезультатЗапроса)
	
	Колонки = Новый Массив;
	
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		
		Колонки.Добавить(Колонка.Имя);
		
	КонецЦикла;
	
	Возврат СтрСоединить(Колонки, ",");
	
КонецФункции

Функция РазложитьДанныеАвтомобиля(АвтомобилиДокумента)
	
	Значение = Новый Структура(КолонкиСтрокой(АвтомобилиДокумента));
	Значение.Вставить("Автомобили", АвтомобилиДокумента.Выгрузить());
	ЗаполнитьЗначенияСвойств(Значение, Значение.Автомобили[0]);
	Возврат Значение;
	
КонецФункции

Функция ПодготовитьДанныеДоговораКВыводу(ДанныеДляПечати)
	
	СокращенныйНомер = НЕ Константы.ПолныйНомерДокументаВПечатныхФормах.Получить();
	
	Для Каждого КлючЗначение Из ДанныеДляПечати Цикл
		
		Если СокращенныйНомер Тогда
			
			КлючЗначение.Значение.НомерДоговора = ПрефиксацияОбъектов.ПолучитьНомерНаПечать(
				КлючЗначение.Значение.НомерДоговора,
				Истина,
				Истина
			);
			
		КонецЕсли;
		
		КлючЗначение.Значение.ДатаДоговора = Формат(КлючЗначение.Значение.ДатаДоговора, "ДЛФ=D");
		
	КонецЦикла;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ПодготовитьДанныеПродавцаКВыводу(ДанныеДляПечати)
		
	Для Каждого КлючЗначение Из ДанныеДляПечати Цикл
		
		Наименование = УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(КлючЗначение.Значение.Контрагент, КлючЗначение.Значение.Дата);
		КлючЗначение.Значение.Вставить("КонтрагентПолноеНаименование", Наименование);
		
		КонтрагентАдрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			КлючЗначение.Значение.Контрагент,
			Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента, ТекущаяДатаСеанса()
		);
		КлючЗначение.Значение.Вставить("КонтрагентАдрес", КонтрагентАдрес);
		
		КонтрагентАдресЮР = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			КлючЗначение.Значение.Контрагент,
			Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, ТекущаяДатаСеанса()
		);
		КлючЗначение.Значение.Вставить("КонтрагентАдресЮР", КонтрагентАдресЮР);
		
		КонтрагентТелефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			КлючЗначение.Значение.Контрагент,
			Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента, ТекущаяДатаСеанса()
		);
		КлючЗначение.Значение.Вставить("КонтрагентТелефон", КонтрагентТелефон);
		
		КонтрагентEmail = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			КлючЗначение.Значение.Контрагент,
			Справочники.ВидыКонтактнойИнформации.EmailКонтрагента, ТекущаяДатаСеанса()
		);
		КлючЗначение.Значение.Вставить("КонтрагентEmail", КонтрагентEmail);
		
		БанковскиеРеквизиты = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			КлючЗначение.Значение.Контрагент,
			Новый Структура("БАНК, БАНКОВСКИЙСЧЕТ, КОРРСЧЕТ, БИК", "", "р/сч ", "к/с ", "БИК ")
		);
		КлючЗначение.Значение.Вставить("БанковскиеРеквизиты", БанковскиеРеквизиты);
		
		Пункт33 = НСтр("ru = 'Для оплаты по Договору Продавец открывает счет в %1 через операционную кассу вне кассового узла, расположенную в месте передачи Товара.'");
		
		Если КлючЗначение.Значение.ЭтоКомиссия Тогда
		
			Пункт33 = НСтр("ru = 'Для оплаты по настоящему Договору Принципал обязуется открыть счет в %1 (далее - ''Банк'') через операционную кассу вне кассового узла, расположенную в Месте передачи Автомобиля.'");
			
		КонецЕсли;
		
		КлючЗначение.Значение.Вставить("Пункт33", СтрШаблон(Пункт33, КлючЗначение.Значение.КонтрагентБанк));
		
	КонецЦикла;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ПодготовитьДанныеПокупателяКВыводу(ДанныеДляПечати)
	
	СтруктураПредставленияОрганизации = Новый Структура();
	СтруктураПредставленияОрганизации.Вставить("АдресЮридический", "");
	СтруктураПредставленияОрганизации.Вставить("ТелефонРабочий", "тел.:");
	СтруктураПредставленияОрганизации.Вставить("ИНН", "ИНН:");
	СтруктураПредставленияОрганизации.Вставить("КПП", "КПП:");
	СтруктураПредставленияОрганизации.Вставить("ОКПО", "Код ОКПО:");
	СтруктураПредставленияОрганизации.Вставить("АДРЕСФАКТИЧЕСКИЙ", Символы.ПС + "физ. адрес:");
	СтруктураПредставленияОрганизации.Вставить("БАНК", Символы.ПС + "Банк ");
	СтруктураПредставленияОрганизации.Вставить("БАНКОВСКИЙСЧЕТ", "р/сч ");
	СтруктураПредставленияОрганизации.Вставить("КОРРСЧЕТ", "к/с ");
	СтруктураПредставленияОрганизации.Вставить("БИК", "БИК:");
	
	Для Каждого КлючЗначение Из ДанныеДляПечати Цикл
		
		ПредставлениеОрганизации = УправлениеПечатьюПлатформа
			.ПолучитьНаименованиеСправочника(КлючЗначение.Значение.Организация, КлючЗначение.Значение.Дата);
		КлючЗначение.Значение.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		
		ДопПоляОрганизации = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			КлючЗначение.Значение.Организация,
			СтруктураПредставленияОрганизации,
			Новый Структура("ПодразделениеКомпании", КлючЗначение.Значение.ПодразделениеКомпании)
		);
		КлючЗначение.Значение.Вставить("ДопПоляОрганизации", ДопПоляОрганизации);
		
		Руководитель = УправлениеПечатьюПлатформа.ДанныеОтветственногоЛица(
			КлючЗначение.Ключ,
			"Руководитель",
			"Руководитель"
		);
		КлючЗначение.Значение.Вставить("РуководительДолжность", Руководитель.РуководительДолжность);
		КлючЗначение.Значение.Вставить("РуководительПредставление", Руководитель.РуководительПредставление);
		
	КонецЦикла;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ПодготовитьДанныеАвтомобиляКВыводу(ДанныеДляПечати)
	
	ФорматГода = АвтомобилиСервер.ПолучитьФорматПредставленияГодаВыпускаАвтомобиля(Неопределено);
	
	Для Каждого КлючЗначение Из ДанныеДляПечати Цикл
		
		ПредставлениеАвтомобиля = СформироватьПредставлениеАвтомобиля(
			КлючЗначение.Значение.Модель,
			КлючЗначение.Значение.Комплектация,
			КлючЗначение.Значение.VIN
		);
		КлючЗначение.Значение.Вставить("ПредставлениеАвтомобиля", ПредставлениеАвтомобиля);
		КлючЗначение.Значение.Вставить("ГодВыпуска", Формат(КлючЗначение.Значение.ГодВыпуска, ФорматГода));
		Пробег = Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(
			КлючЗначение.Значение.Автомобиль,
			Перечисления.ДополнительнаяИнформацияАвтомобилей.Пробег
		);
		КлючЗначение.Значение.Вставить("Пробег", Пробег);
		ГосНомер = Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(
			КлючЗначение.Значение.Автомобиль,
			Перечисления.ДополнительнаяИнформацияАвтомобилей.ГосНомер
		);
		КлючЗначение.Значение.Вставить("ГосНомер", ГосНомер);
		
		ПодтверждающийДокумент = Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(
			КлючЗначение.Значение.Автомобиль,
			Перечисления.ДополнительнаяИнформацияАвтомобилей.ТехПаспорт
		);
		
		Если Не ЗначениеЗаполнено(ПодтверждающийДокумент) Тогда
			
			ПодтверждающийДокумент = Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(
				КлючЗначение.Значение.Автомобиль,
				Перечисления.ДополнительнаяИнформацияАвтомобилей.СвидетельствоОРегистрацииТС
			);
			
			Если Не ЗначениеЗаполнено(ПодтверждающийДокумент) Тогда
			
				ПодтверждающийДокумент = НСтр("ru = 'Нет данных о документе на автомобиль'");
				
			КонецЕсли;
			
		КонецЕсли;
		
		КлючЗначение.Значение.Вставить("ПодтверждающийДокумент", ПодтверждающийДокумент);
		
	КонецЦикла;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ПодготовитьСуммовыеПоказателиУВыводу(ДанныеДляПечати)
	
	Для Каждого КлючЗначение Из ДанныеДляПечати Цикл
		
		ВалютаПечатногоДокумента = ?(
			ЗначениеЗаполнено(ВалютаПечатногоДокумента),
			ВалютаПечатногоДокумента,
			КлючЗначение.Значение.ВалютаДокумента
		);
		Дата = КлючЗначение.Значение.Дата;
		Автомобили = КлючЗначение.Значение.Автомобили;
		
		СуммаВсегоНаАвтомобиль = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
			Автомобили.Итог("СуммаВсего"),
			КлючЗначение.Значение.ВалютаДокумента,
			Дата,
			ВалютаПечатногоДокумента,
			Дата,
			РежимОкругления.Окр15как20
		);
		СуммаНДСНаАвтомобиль = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
			Автомобили.Итог("СуммаНДС"),
			КлючЗначение.Значение.ВалютаДокумента,
			Дата,
			ВалютаПечатногоДокумента,
			Дата,
			РежимОкругления.Окр15как20
		);
		СуммаВсегоНаАвтомобильПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
			СуммаВсегоНаАвтомобиль,
			ВалютаПечатногоДокумента
		);
		СуммаНДСНаАвтомобильПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
			СуммаНДСНаАвтомобиль,
			ВалютаПечатногоДокумента
		);
		
		Если НЕ Автомобили[0].БезНДС Тогда
			
			ПредставлениеЦеныАвтомобиля = СтрШаблон(
				НСтр("ru = '%1 %2 (%3), в т.ч. НДС %4 - %5 %2(%6)'"),
				СуммаВсегоНаАвтомобиль,
				ВалютаПечатногоДокумента,
				СуммаВсегоНаАвтомобильПрописью,
				Автомобили[0].СтавкаНДС,
				СуммаНДСНаАвтомобиль, 
				СуммаНДСНаАвтомобильПрописью
			);
			
		Иначе
			
			ПредставлениеЦеныАвтомобиля = СтрШаблон(
				НСтр("ru = '%1 %2 (%3)'"),
				СуммаВсегоНаАвтомобиль,
				ВалютаПечатногоДокумента,
				СуммаВсегоНаАвтомобильПрописью
			);
			
		КонецЕсли;
		
		КлючЗначение.Значение.Вставить("ПредставлениеЦеныАвтомобиля", ПредставлениеЦеныАвтомобиля);
		
	КонецЦикла;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция СформироватьПредставлениеАвтомобиля(Модель, Комплектация, VIN)
	
	ЧастиПредставления = Новый Массив;
	ЧастиПредставления.Добавить(СтрШаблон(
		НСтр("ru = 'модель ""%1""'"),
		УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(Модель)
	));
	
	Если ЗначениеЗаполнено(Комплектация) Тогда
		
		ЧастиПредставления.Добавить(СтрШаблон(
			НСтр("ru = 'в комплектации ""%1""'"),
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(Комплектация)
		));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(VIN) Тогда
		
		ЧастиПредставления.Добавить(СтрШаблон(НСтр("ru = 'VIN ""%1""'"), VIN));
		
	КонецЕсли;
	
	Возврат СтрСоединить(ЧастиПредставления, " ");
	
КонецФункции

#КонецОбласти

Процедура УстановитьПараметрыПечати()

	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеАвтомобилей_ПоступлениеАвтомобилей";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ПечатнаяФорма);
	ПечатнаяФорма.ИмяПараметровПечати = ИмяПараметровПечати;

КонецПроцедуры

Процедура НачатьНовыйДокументСНовогоЛиста()
	
	Если ПервыйДокумент Тогда
		
		ПервыйДокумент = Ложь;
		Возврат;
		
	КонецЕсли;
	
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
КонецПроцедуры

Функция НачалоОбластиДокумента()
	
	Возврат ПечатнаяФорма.ВысотаТаблицы + 1;
	
КонецФункции

Процедура ВывестиЗаголовокВПечатнуюФорму(ДанныеДляПечати)
	
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	Заголовок.Параметры.Заполнить(ДанныеДляПечати);
	ПечатнаяФорма.Вывести(Заголовок);
	
КонецПроцедуры

Процедура ВывестиПриложение1ВПечатнуюФорму(ДанныеДляПечати)
	
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	ПриложениеШапка = Макет.ПолучитьОбласть("ПриложениеШапка");
	ПриложениеШапка.Параметры.Заполнить(ДанныеДляПечати);
	ПечатнаяФорма.Вывести(ПриложениеШапка);
	Спецификация = Макет.ПолучитьОбласть("Спецификация");
	Спецификация.Параметры.Заполнить(ДанныеДляПечати);
	ПечатнаяФорма.Вывести(Спецификация);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ПечатнаяФорма = Новый ТабличныйДокумент;
Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьДоговорКуплиПродажи.ПФ_MXL_ДоговорВыкупа");
ПервыйДокумент = Истина;
ФорматВыводаСуммы = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Неопределено);

#КонецОбласти
	
#Иначе
  
  ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
  
#КонецЕсли
