
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ВидКонтрагентаВОтчете = Параметры.ВидКонтрагентаВОтчете;
	
	Если НЕ Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка() Тогда
		Объект.ВыводитьКонтактнуюИнформациюКонтактныхЛиц = Параметры.ВыводитьКонтактнуюИнформациюКонтактныхЛиц;
		Объект.ВидыКонтактнойИнформации.Очистить();
		Объект.ВидыПодтверждающихДокументов.Очистить();
		Объект.Объекты.Очистить();
		Для Каждого Строка Из Параметры.ВидыКонтактнойИнформации Цикл
			НоваяСтрока = Объект.ВидыКонтактнойИнформации.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла;
		Для Каждого Строка Из Параметры.ВидыПодтверждающихДокументов Цикл
			НоваяСтрока = Объект.ВидыПодтверждающихДокументов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла;
		Для Каждого Строка Из Параметры.Объекты Цикл
			НоваяСтрока = Объект.Объекты.Добавить();
			НоваяСтрока.Контрагент = Строка.Контрагент;
		КонецЦикла;
		ПоУмолчанию = Ложь;
		Если Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты Тогда
			ВидКонтрагента = "Контрагенты";
		ИначеЕсли Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации Тогда
			ВидКонтрагента = "Организации";
		Иначе
			ВидКонтрагента = "Сотрудники";
		КонецЕсли;
		Если Объект.Объекты.Количество() = 0 Тогда
			ПоУмолчанию = Истина;
		КонецЕсли;
	Иначе
		Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
		ОбъектОтчетаПриИзмененииНаСервере();
	КонецЕсли;
	
	Если Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты Тогда
		СхемаКомпоновкиДанных = Обработки.ОтчетОКонтактнойИнформации.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	ИначеЕсли Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникСотрудники Тогда
		СхемаКомпоновкиДанных = Обработки.ОтчетОКонтактнойИнформации.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанныхСотрудники");
	Иначе
		СхемаКомпоновкиДанных = Обработки.ОтчетОКонтактнойИнформации.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанныхОрганизации");
	КонецЕсли;
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	Объект.НастройкиОтбораКомпоновщикаДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	Объект.НастройкиОтбораКомпоновщикаДанных.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ПоУмолчанию = Истина Тогда
		ОбновитьНаСервере();
	КонецЕсли;
	Если ВидКонтрагента = "Контрагенты" Тогда
		Элементы.ОбъектыЗаполнитьПоКуратору.Видимость = Истина;
		Элементы.ОбъектыЗаполнитьПоПодразделению.Видимость = Ложь;
		Элементы.ВыводитьКонтактнуюИнформациюКонтактныхЛиц.Видимость = Истина;
	ИначеЕсли ВидКонтрагента = "Сотрудники" Тогда
		Элементы.ОбъектыЗаполнитьПоКуратору.Видимость = Ложь;
		Элементы.ОбъектыЗаполнитьПоПодразделению.Видимость = Истина;
		Элементы.ВыводитьКонтактнуюИнформациюКонтактныхЛиц.Видимость = Истина;
	Иначе
		Элементы.ОбъектыЗаполнитьПоКуратору.Видимость = Ложь;
		Элементы.ОбъектыЗаполнитьПоПодразделению.Видимость = Ложь;
		Элементы.ВыводитьКонтактнуюИнформациюКонтактныхЛиц.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбработкаВыбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации Тогда
		
		Если Объект.Объекты.НайтиСтроки(Новый Структура("Контрагент", ВыбранноеЗначение)).Количество() = 0 Тогда
			НоваяСтрока = Объект.Объекты.Добавить();
			НоваяСтрока.Контрагент = ВыбранноеЗначение;
		КонецЕсли;
		
	ИначеЕсли Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникСотрудники Тогда
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ПодразделенияКомпании") Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Сотрудники.Ссылка
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|ГДЕ
			|	Сотрудники.ПодразделениеКомпании = &ПодразделениеКомпании
			|
			|УПОРЯДОЧИТЬ ПО
			|	Сотрудники.Наименование";
			Запрос.УстановитьПараметр("ПодразделениеКомпании", ВыбранноеЗначение);
			РезультатЗапроса = Запрос.Выполнить().Выбрать();
			Пока РезультатЗапроса.Следующий() Цикл
				Если Объект.Объекты.НайтиСтроки(Новый Структура("Контрагент", РезультатЗапроса.Ссылка)).Количество() = 0 Тогда 
					НоваяСтрока = Объект.Объекты.Добавить();
					НоваяСтрока.Контрагент = РезультатЗапроса.Ссылка;
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли Объект.Объекты.НайтиСтроки(Новый Структура("Контрагент", ВыбранноеЗначение)).Количество() = 0 Тогда
			НоваяСтрока = Объект.Объекты.Добавить();
			НоваяСтрока.Контрагент = ВыбранноеЗначение;
		КонецЕсли;
		
	ИначеЕсли Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты Тогда
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Сотрудники") Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Кураторы.Контрагент КАК Контрагент
			|ИЗ
			|	РегистрСведений.Кураторы КАК Кураторы
			|ГДЕ
			|	Кураторы.Куратор = &Куратор
			|
			|УПОРЯДОЧИТЬ ПО
			|	Контрагент";
			Запрос.УстановитьПараметр("Куратор", ВыбранноеЗначение);
			РезультатЗапроса = Запрос.Выполнить().Выбрать();
			Пока РезультатЗапроса.Следующий() Цикл
				Если Объект.Объекты.НайтиСтроки(Новый Структура("Контрагент", РезультатЗапроса.Контрагент)).Количество() = 0 Тогда
					НоваяСтрока = Объект.Объекты.Добавить();
					НоваяСтрока.Контрагент = РезультатЗапроса.Контрагент;
				КонецЕсли;
			КонецЦикла;
			Объект.Куратор = ВыбранноеЗначение;
		ИначеЕсли Объект.Объекты.НайтиСтроки(Новый Структура("Контрагент", ВыбранноеЗначение)).Количество() = 0 Тогда
			НоваяСтрока = Объект.Объекты.Добавить();
			НоваяСтрока.Контрагент = ВыбранноеЗначение;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбъектОтчетаПриИзменении(Элемент)
	ОбъектОтчетаПриИзмененииНаСервере();
	Если ВидКонтрагента = "Контрагенты" Тогда
		Элементы.ОбъектыЗаполнитьПоКуратору.Видимость = Истина;
		Элементы.ОбъектыЗаполнитьПоПодразделению.Видимость = Ложь;
		Элементы.ВыводитьКонтактнуюИнформациюКонтактныхЛиц.Видимость = Истина;
	ИначеЕсли ВидКонтрагента = "Сотрудники" Тогда
		Элементы.ОбъектыЗаполнитьПоКуратору.Видимость = Ложь;
		Элементы.ОбъектыЗаполнитьПоПодразделению.Видимость = Истина;
		Элементы.ВыводитьКонтактнуюИнформациюКонтактныхЛиц.Видимость = Истина;
	Иначе
		Элементы.ОбъектыЗаполнитьПоКуратору.Видимость = Ложь;
		Элементы.ОбъектыЗаполнитьПоПодразделению.Видимость = Ложь;
		Элементы.ВыводитьКонтактнуюИнформациюКонтактныхЛиц.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбъектОтчетаПриИзмененииНаСервере()
	
	Объект.НастройкиОтбораКомпоновщикаДанных.Настройки.Отбор.Элементы.Очистить();
	
	Если Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка()
		ИЛИ Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты Тогда
		ВидКонтрагента = "Контрагенты";
		СхемаКомпоновкиДанных = Обработки.ОтчетОКонтактнойИнформации.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
		АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
		Объект.НастройкиОтбораКомпоновщикаДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
		Объект.НастройкиОтбораКомпоновщикаДанных.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	ИначеЕсли Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации Тогда
		ВидКонтрагента = "Организации";
		СхемаКомпоновкиДанных = Обработки.ОтчетОКонтактнойИнформации.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанныхОрганизации");
		АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
		Объект.НастройкиОтбораКомпоновщикаДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
		Объект.НастройкиОтбораКомпоновщикаДанных.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	Иначе
		ВидКонтрагента = "Сотрудники";
		СхемаКомпоновкиДанных = Обработки.ОтчетОКонтактнойИнформации.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанныхСотрудники");
		АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
		Объект.НастройкиОтбораКомпоновщикаДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
		Объект.НастройкиОтбораКомпоновщикаДанных.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КонецЕсли;
	
	Объект.Объекты.Очистить();
	Обработки.ОтчетОКонтактнойИнформации.ЗаполнитьНачальныеНастройки(Объект);
	ОбновитьНаСервере();
	ПоУмолчанию = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтбораКомпоновщикаДанныхНастройкиОтборПриИзменении(Элемент)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъекты

&НаКлиенте
Процедура ОбъектыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекСтрока = Объект.Объекты.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ПоказатьЗначение(, ТекСтрока.Контрагент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	Закрыть(Объект);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеИстинаКонтактнаяИнформация(Команда)
	Для Каждого Строка Из Объект.ВидыКонтактнойИнформации Цикл
		Строка.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВсеЛожьКонтактнаяИнформация(Команда)
	Для Каждого Строка Из Объект.ВидыКонтактнойИнформации Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВсеИстинаДокументы(Команда)
	Для Каждого Строка Из Объект.ВидыПодтверждающихДокументов Цикл
		Строка.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВсеЛожьДокументы(Команда)
	Для Каждого Строка Из Объект.ВидыПодтверждающихДокументов Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	ОчиститьЗадатьВопрос(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗадатьВопрос(Команда)
	Режим = РежимДиалогаВопрос.ДаНет;
	ПараметрыВопроса = Новый Структура();
	ПараметрыВопроса.Вставить("Команда",Команда);
	Если Объект.Объекты.Количество() = 0 Тогда
		ОчиститьОбъекты(КодВозвратаДиалога.Нет, ПараметрыВопроса);
	Иначе
		Оповещение = Новый ОписаниеОповещения("ОчиститьОбъекты", ЭтотОбъект, ПараметрыВопроса);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Очистить список?';"), Режим, 0);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКуратору(Команда)
	ОчиститьЗадатьВопрос(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПодразделению(Команда)
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("Справочник.ПодразделенияКомпании.ФормаВыбора", ПараметрыВыбора, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура УпорядочитьВидыКонтактнойИнформации(Команда)
	
	Объект.ВидыКонтактнойИнформации.Сортировать("Порядок, ВидыКонтактнойИнформации");
	
КонецПроцедуры

&НаКлиенте
Процедура УпорядочитьВидыПодтверждающихДокументов(Команда)
	
	Объект.ВидыПодтверждающихДокументов.Сортировать("Порядок, ВидыПодтверждающихДокументов");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбъекты(Команда)
	
	ОткрытьПодбор(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ОткрытьПодбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеЗаписи(Команда)
	ОчиститьЗадатьВопрос(Команда);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьНаСервере()
	
	ВидВыбора = 0;
	Если ВидКонтрагента = "" Тогда
		Возврат;
	ИначеЕсли ВидКонтрагента = "Контрагенты" Тогда
		ВидВыбора = 1;
	ИначеЕсли ВидКонтрагента = "Организации" Тогда
		ВидВыбора = 2;
	ИначеЕсли ВидКонтрагента = "Сотрудники" Тогда
		ВидВыбора = 3;
	КонецЕсли;
	
	Таблица = Обработки.ОтчетОКонтактнойИнформации.ОбновитьНаСервереММ(Объект, ВидВыбора);
	
	Объект.Объекты.Очистить();
	
	Для Каждого Строка Из Таблица Цикл
		НоваяСтрока = Объект.Объекты.Добавить();
		НоваяСтрока.Контрагент = Строка.Ссылка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодбор(ЗакрыватьПриВыборе = Ложь)
	
	Если НЕ ЗначениеЗаполнено(ВидКонтрагента) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбора",        Истина);
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", ЗакрыватьПриВыборе);
	
	ОткрытьФорму(
		"Справочник." + ВидКонтрагента + ".ФормаСписка",
		ПараметрыОткрытия,
		ЭтотОбъект,
		,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОбъекты(Результат, ПараметрыВопроса) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Объекты.Очистить();
	КонецЕсли;
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("РежимВыбора", Истина);
	Если ПараметрыВопроса.Команда.Имя = "ЗаполнитьПоКуратору" Тогда
		ОткрытьФорму("Справочник.Сотрудники.ФормаВыбора", ПараметрыВыбора, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ПараметрыВопроса.Команда.Имя = "ВсеЗаписи" Тогда
		ВсеЗаписиНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВсеЗаписиНаСервере()
	Если Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты Тогда
		ВидИнформации = "Контрагенты";
	ИначеЕсли Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникСотрудники Тогда
		ВидИнформации = "Сотрудники";
	Иначе
		ВидИнформации = "Организации";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	"+ВидИнформации+".Ссылка
		|ИЗ
		|	Справочник."+ВидИнформации+" КАК "+ВидИнформации+"
		|
		|УПОРЯДОЧИТЬ ПО
		|	"+ВидИнформации+".Наименование";
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаЗапроса Из РезультатЗапроса Цикл
		НоваяСтрока = Объект.Объекты.Добавить();
		НоваяСтрока.Контрагент = СтрокаЗапроса.Ссылка;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти






