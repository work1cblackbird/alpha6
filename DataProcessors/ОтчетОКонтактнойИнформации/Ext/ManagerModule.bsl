#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Производит перезаполнение отборов для настройки отчета.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ВидВыбора - Число - Признак получения макета данных.
//
// Возвращаемое значение:
//  ТаблицаЗначений - результат выполнения запроса с указанными параметрами.
//
Функция ОбновитьНаСервереММ(Объект, ВидВыбора) Экспорт
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	
	Если ВидВыбора = 0 Тогда
		Возврат ТаблицаРезультат;
	ИначеЕсли ВидВыбора = 1 Тогда
		СхемаКомпоновкиДанных = Обработки.ОтчетОКонтактнойИнформации.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	ИначеЕсли ВидВыбора = 2 Тогда
		СхемаКомпоновкиДанных = Обработки.ОтчетОКонтактнойИнформации.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанныхОрганизации");
	Иначе
		СхемаКомпоновкиДанных = Обработки.ОтчетОКонтактнойИнформации.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанныхСотрудники");
	КонецЕсли;
	
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СхемаКомпоновкиДанных, Объект.НастройкиОтбораКомпоновщикаДанных.Настройки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
	ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
	ПроцессорВывода.ЗакончитьВывод();
	
	Возврат ТаблицаРезультат;
	
КонецФункции

// Процедура заполнения начальных настроек отчета
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется обработка.
//
Процедура ЗаполнитьНачальныеНастройки(Объект) Экспорт
	
	Запрос = Новый Запрос;
	ЗапросПД = Новый Запрос;
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникВидыКонтактнойИнформации.Ссылка КАК ВидыКонтактнойИнформации,
	|	СправочникВидыКонтактнойИнформации.Тип.Порядок КАК Порядок,
	|	ИСТИНА КАК Пометка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК СправочникВидыКонтактнойИнформации
	|ГДЕ
	|	СправочникВидыКонтактнойИнформации.Родитель = &Родитель";
	
	ТекстЗапросаПД ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидыДокументов.Ссылка КАК ВидыПодтверждающихДокументов,
	|	ВидыДокументов.Порядок КАК Порядок,
	|	ИСТИНА КАК Пометка
	|ИЗ
	|	Перечисление.ВидыДокументов КАК ВидыДокументов";
	
	Объект.ВидыПодтверждающихДокументов.Очистить();
	Объект.ВидыКонтактнойИнформации.Очистить();
	
	Запрос.Текст = ТекстЗапроса;
	Если Объект.ВидКонтрагентаВОтчете <> Справочники.ВидыКонтактнойИнформации.ПустаяСсылка() Тогда
		Запрос.УстановитьПараметр("Родитель", Объект.ВидКонтрагентаВОтчете);
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		Для Каждого Строка Из РезультатЗапроса Цикл
			НоваяСтрока = Объект.ВидыКонтактнойИнформации.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла;
		Объект.ВидыКонтактнойИнформации.Сортировать("Порядок, ВидыКонтактнойИнформации");
	КонецЕсли;
	
	ЗапросПД.Текст = ТекстЗапросаПД;
	РезультатЗапроса = ЗапросПД.Выполнить().Выгрузить();
	Для Каждого Строка Из РезультатЗапроса Цикл
		НоваяСтрока = Объект.ВидыПодтверждающихДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	Объект.ВидыПодтверждающихДокументов.Сортировать("Порядок, ВидыПодтверждающихДокументов");
	
КонецПроцедуры

// Формирует отчет в виде табличного документа.
//
// Параметры:
//  Объект       - ДанныеФормыСтруктура - Объект, для которого выполняется обработка события.
//  ДокРезультат - ТабличныйДокумент, ПолеТабличногоДокумента - Табличный документ вывода результата.
//
// Возвращаемое значение:
//  ТабличныйДокумент - результат формирования отчета.
//
Функция СформироватьТабличныйДокумент (Объект, ДокРезультат=Неопределено) Экспорт
	Если ТипЗнч(ДокРезультат) <> Тип("ТабличныйДокумент") Тогда
		ДокРезультат = Новый ТабличныйДокумент();
	Иначе ДокРезультат.Очистить();
	КонецЕсли;
	
	ДокРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетОКонтактнойИнформации";
	
	// Получим макеты для результата и оформления.
	МакетОтчета = ПолучитьМакет("Макет");
	МакетПараметровОтчета = ПолучитьОбщийМакет(Метаданные.ОбщиеМакеты.МакетОформлениеОтчета);
	ОформлениеШапки  = МакетПараметровОтчета.ПолучитьОбласть("ОформлениеШапки").Область(1, 1);
	ОформлениеСтроки = МакетПараметровОтчета.ПолучитьОбласть("ОформлениеИзмерений").Область(6,1);
	
	ОбластьЗаголовокОсновная = МакетОтчета.ПолучитьОбласть("Заголовок|Основная");
	МояОбласть = ДокРезультат.Вывести(ОбластьЗаголовокОсновная);
	
	КоличествоФиксированныхСтрок = 4;
	Если ЗначениеЗаполнено(Объект.Куратор) Тогда
		ОбластьКураторОсновная = МакетОтчета.ПолучитьОбласть("Куратор|Основная");
		ОбластьКураторОсновная.Параметры.Куратор = Объект.Куратор;
		МояОбласть = ДокРезультат.Вывести(ОбластьКураторОсновная);
		КоличествоФиксированныхСтрок = 6;
	КонецЕсли;
	// Построим заголовок
	ОбластьШапкаОсновная = МакетОтчета.ПолучитьОбласть("Шапка|Основная");
	ОбластьШапкаОсновная.Параметры.Объект = Объект.ВидКонтрагентаВОтчете;
	МояОбласть = ДокРезультат.Вывести(ОбластьШапкаОсновная);
	
	Если Объект.Объекты.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(СокрЛП(Объект.ВидКонтрагентаВОтчете)+":" + НСтр("ru = 'Список не заполнен.'"));
		Возврат ДокРезультат;
	КонецЕсли;
	
	НомерОбласти = 3;
	ОбластьШапкаКонтактнаяИнформация = МакетОтчета.ПолучитьОбласть("Шапка|КонтактнаяИнформация");
	СтруктураКоличество = Новый Структура;
	СтруктураКоличество.Вставить("Телефон", 0);
	СтруктураКоличество.Вставить("Факс", 0);
	СтруктураКоличество.Вставить("АдресЭлектроннойПочты", 0);
	
	Если Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты Тогда
		ВидИнформации = "Контрагенты";
	ИначеЕсли Объект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникСотрудники Тогда
		ВидИнформации = "Сотрудники";
	Иначе
		ВидИнформации = "Организации";
	КонецЕсли;
	
	Для Каждого СтрокаКонтактнойИнформации Из Объект.ВидыКонтактнойИнформации Цикл
		Если СтрокаКонтактнойИнформации.Пометка Тогда
			ОбластьШапкаКонтактнаяИнформация.Параметры.Заполнить(СтрокаКонтактнойИнформации);
			Если СтрокаКонтактнойИнформации.ВидыКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
				Количество = КоличествоВидовИнформацииКонтрагента(Объект, ВидИнформации, "Телефон");
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				Начало = НомерОбласти;
				Для х = 1 По Количество Цикл
					ДокРезультат.Присоединить(ОбластьШапкаКонтактнаяИнформация);
					НомерОбласти = НомерОбласти + 1;
				КонецЦикла;
				Окончание = НомерОбласти - 1;
				Область = ДокРезультат.Область(4,Начало,4,Окончание);
				Область.Объединить();
				СтруктураКоличество.Телефон = Количество;
			ИначеЕсли СтрокаКонтактнойИнформации.ВидыКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда
				Количество = КоличествоВидовИнформацииКонтрагента(Объект, ВидИнформации, "Факс");
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				Начало = НомерОбласти;
				Для х = 1 По Количество Цикл
					ДокРезультат.Присоединить(ОбластьШапкаКонтактнаяИнформация);
					НомерОбласти = НомерОбласти + 1;
				КонецЦикла;
				Окончание = НомерОбласти - 1;
				Область = ДокРезультат.Область(4,Начало,4,Окончание);
				Область.Объединить();
				СтруктураКоличество.Факс = Количество;
			ИначеЕсли СтрокаКонтактнойИнформации.ВидыКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
				Количество = КоличествоВидовИнформацииКонтрагента(Объект, ВидИнформации, "АдресЭлектроннойПочты");
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				Начало = НомерОбласти;
				Для х = 1 По Количество Цикл
					ДокРезультат.Присоединить(ОбластьШапкаКонтактнаяИнформация);
					НомерОбласти = НомерОбласти + 1;
				КонецЦикла;
				Окончание = НомерОбласти - 1;
				Область = ДокРезультат.Область(4,Начало,4,Окончание);
				Область.Объединить();
				СтруктураКоличество.АдресЭлектроннойПочты = Количество;
			Иначе
				ДокРезультат.Присоединить(ОбластьШапкаКонтактнаяИнформация);
				НомерОбласти = НомерОбласти + 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	"ВЫБРАТЬ
	               	|	ОбъектКонтрагент.Контрагент КАК Контрагент
	               	|ПОМЕСТИТЬ ВТ_Объекты
	               	|ИЗ
	               	|	&ПереченьВладельцев КАК ОбъектКонтрагент
	               	|
	               	|ИНДЕКСИРОВАТЬ ПО
	               	|	Контрагент
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	ПодтверждающиеДокументы.ВидПодтверждающегоДокумента КАК ВидПодтверждающегоДокумента,
	               	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПодтверждающиеДокументы.Ссылка) КАК КоличествоПД,
	               	|	ВТ_Объекты.Контрагент КАК Контрагент
	               	|ИЗ
	               	|	ВТ_Объекты КАК ВТ_Объекты
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодтверждающиеДокументы КАК ПодтверждающиеДокументы
	               	|		ПО ВТ_Объекты.Контрагент = ПодтверждающиеДокументы.Владелец
	               	|
	               	|СГРУППИРОВАТЬ ПО
	               	|	ПодтверждающиеДокументы.ВидПодтверждающегоДокумента,
	               	|	ВТ_Объекты.Контрагент
	               	|ИТОГИ
	               	|	МАКСИМУМ(КоличествоПД)
	               	|ПО
	               	|	ВидПодтверждающегоДокумента";

	Запрос.УстановитьПараметр("ПереченьВладельцев", Объект.Объекты.Выгрузить(,"Контрагент"));
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ОбластьШапкаПодтверждающиеДокументы = МакетОтчета.ПолучитьОбласть("Шапка|ПодтверждающиеДокументы");
	
	КоличествоДокументовПоВидам = Новый ТаблицаЗначений;
	КоличествоДокументовПоВидам.Колонки.Добавить("ВидПодтверждающегоДокумента", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДокументов"));
	КоличествоДокументовПоВидам.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));

	Для Каждого СтрокаПодтверждающиеДокументы Из Объект.ВидыПодтверждающихДокументов Цикл
		Если СтрокаПодтверждающиеДокументы.Пометка Тогда
			ОбластьШапкаПодтверждающиеДокументы.Параметры.Заполнить(СтрокаПодтверждающиеДокументы);
			
			Отбор = Новый Структура("ВидПодтверждающегоДокумента",СтрокаПодтверждающиеДокументы.ВидыПодтверждающихДокументов);
			Выборка.Сбросить();
			КоличествоПД = Выборка.НайтиСледующий(Отбор);
			ЧислоДокументов = ?(КоличествоПД,Выборка.КоличествоПД,1);
			Начало = НомерОбласти;
			Для х = 1 По ЧислоДокументов Цикл
				ДокРезультат.Присоединить(ОбластьШапкаПодтверждающиеДокументы);
				НомерОбласти = НомерОбласти + 1;
			КонецЦикла;
			Окончание = НомерОбласти - 1;
			Область = ДокРезультат.Область(4,Начало,4,Окончание);
			Область.Объединить();
			
			ВидДокумента = КоличествоДокументовПоВидам.Добавить();
			ВидДокумента.ВидПодтверждающегоДокумента = СтрокаПодтверждающиеДокументы.ВидыПодтверждающихДокументов;
			ВидДокумента.Количество = ЧислоДокументов;

		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаКонтрагентов Из Объект.Объекты Цикл
		ВывестиКонтактнуюИнформациюОбъекта(СтрокаКонтрагентов.Контрагент, ДокРезультат, МакетОтчета,Объект, СтруктураКоличество, ,КоличествоДокументовПоВидам);
		Если Объект.ВыводитьКонтактнуюИнформациюКонтактныхЛиц Тогда
			ТаблицаКонтактныхЛиц = Неопределено;
			Если ПолучитьВедомых(СтрокаКонтрагентов.Контрагент, ТаблицаКонтактныхЛиц) Тогда
				ДокРезультат.НачатьГруппуСтрок(, Ложь);
				
				Для Каждого СтрокаВедущего Из ТаблицаКонтактныхЛиц Цикл
					ВывестиКонтактнуюИнформациюОбъекта(СтрокаВедущего.Ведомый, ДокРезультат, МакетОтчета, Объект, СтруктураКоличество, Истина, КоличествоДокументовПоВидам);
				КонецЦикла;
				
				ДокРезультат.ЗакончитьГруппуСтрок();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ДокРезультат.ОтображатьСетку = Ложь;
	ДокРезультат.ПолеСверху = 10;
	ДокРезультат.ПолеСлева = 20;
	ДокРезультат.ПолеСнизу = 10;
	ДокРезультат.ПолеСправа = 10;
	ДокРезультат.ОтображатьЗаголовки = Ложь;
	ДокРезультат.ФиксацияСлева = 2;
	ДокРезультат.ФиксацияСверху = КоличествоФиксированныхСтрок;
	
	Возврат ДокРезультат;
КонецФункции // РаскраситьОбластьПоШаблону()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КоличествоВидовИнформацииКонтрагента(Объект, СправочникИсточник, ВидИнформации)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	"+СправочникИсточник+"КонтактнаяИнформация.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО("+СправочникИсточник+"КонтактнаяИнформация.Вид) КАК Вид
	|ИЗ
	|	Справочник."+СправочникИсточник+".КонтактнаяИнформация КАК "+СправочникИсточник+"КонтактнаяИнформация
	|ГДЕ
	|	"+СправочникИсточник+"КонтактнаяИнформация.Вид.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации."+ВидИнформации+")
	|	И "+СправочникИсточник+"КонтактнаяИнформация.Ссылка В(&СписокКонтрагентов)
	|
	|СГРУППИРОВАТЬ ПО
	|	"+СправочникИсточник+"КонтактнаяИнформация.Ссылка
	|ИТОГИ
	|	МАКСИМУМ(Вид)
	|ПО
	|	ОБЩИЕ";
	Запрос.УстановитьПараметр("СписокКонтрагентов", Объект.Объекты.Выгрузить(,"Контрагент"));
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Вид;
	КонецЦикла;
	Возврат 0;
КонецФункции

// Возвращает ведомых контрагентов.
//
// Параметры:
//	Ведомый - ссылка на ведомого контрагента
//	Типы - типы получаемых ведомых
//	ВидыОтношений - виды получаемых отношений.
//
// Возвращает таблицу с ведущими контрагентами.
//
Функция ПолучитьВедомых(Ведущий, Результат)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактныеЛица.КонтактноеЛицо КАК Ведомый,
	|	КонтактныеЛица.Взаимоотношение КАК ВидОтношений,
	|	КонтактныеЛица.КонтактноеЛицо.Должность
	|ИЗ
	|	РегистрСведений.КонтактныеЛица КАК КонтактныеЛица
	|ГДЕ
	|	КонтактныеЛица.Владелец = &Ведущий";
	Запрос.УстановитьПараметр("Ведущий", Ведущий);
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выгрузить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

// Выводит контактную информацию в табличный документ.
//
// Параметры:
//	Объект - СправочникСсылка - Ссылка на контрагента или контактное лицо, контактная информация которого выводится;
//	ТабличныйДокумент - табличный документ, в который выводятся строки контактной информации;
//	Макет - макет, с помощью которого формируются строки с контактной информацией;
//
// Возвращаемое значение
//	Булево - "Ложь", если не было выведено ни одной строки контактной информации.
//
Процедура ВывестиКонтактнуюИнформациюОбъекта(Объект, ТабличныйДокумент, Макет, ВходнойОбъект, СтруктураКоличество, ЭтоКонтакт = Ложь, КоличествоДокументовПоВидам)
	
	ИмяМетаданныхОбъекта = Объект.Метаданные().Имя;
	ОбластьОбъектаОсновная = Макет.ПолучитьОбласть(ИмяМетаданныхОбъекта+"|Основная");
	ОбластьОбъектаОсновная.Параметры.Объект = Объект;
	
	ТабличныйДокумент.Вывести(ОбластьОбъектаОсновная);
	
	Если ВходнойОбъект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты Тогда
		ВидИнформации = "Контрагенты";
		ДополнительныйТекст = "";
	ИначеЕсли ВходнойОбъект.ВидКонтрагентаВОтчете = Справочники.ВидыКонтактнойИнформации.СправочникСотрудники Тогда
		ВидИнформации = "Сотрудники";
		ДополнительныйТекст = "
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КонтактнаяИнформацияКонтрагент.Вид,
			|	КонтактнаяИнформацияКонтрагент.Представление,
			|	NULL КАК Комментарий,
			|	NULL КАК ПредставлениеПД,
			|	NULL КАК Ссылка
			|ИЗ
			|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформацияКонтрагент
			|ГДЕ
			|	КонтактнаяИнформацияКонтрагент.Ссылка = &Объект";
	Иначе
		ВидИнформации = "Организации";
		ДополнительныйТекст = "";
	КонецЕсли;
	
	ОбластьОбъектаКонтактнаяИнформация = Макет.ПолучитьОбласть(ИмяМетаданныхОбъекта+"|КонтактнаяИнформация");
	Запрос = Новый Запрос;
	ТекстЗапроса = 	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Вид КАК Вид,
	|	КонтактнаяИнформация.Представление КАК Представление,
	|	NULL КАК Комментарий,
	|	NULL КАК ПредставлениеПД,
	|	NULL КАК Ссылка
	|ИЗ
	|	Справочник."+ВидИнформации+".КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Ссылка = &Объект
	|%1
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПодтверждающиеДокументы.ВидПодтверждающегоДокумента КАК Вид,
	|	NULL КАК Представление,
	|	ПодтверждающиеДокументы.Комментарий КАК Комментарий,
	|	ПодтверждающиеДокументы.Наименование КАК ПредставлениеПД,
	|	ПодтверждающиеДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПодтверждающиеДокументы КАК ПодтверждающиеДокументы
	|ГДЕ
	|	ПодтверждающиеДокументы.Владелец = &Объект";
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.Текст = СтрШаблон(ТекстЗапроса, ДополнительныйТекст);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	СтрокиДляОбхода = ВходнойОбъект.ВидыКонтактнойИнформации.НайтиСтроки(Новый Структура("Пометка",истина));
	Если СтрокиДляОбхода.Количество() > 0 Тогда
		ТаблицаЗначенийКонтактнойИнформации = РезультатЗапроса[0].Выгрузить();
		Для Каждого СтрокаКонтактнойИнформации Из СтрокиДляОбхода Цикл
			Если СтрокаКонтактнойИнформации.Пометка Тогда
				Если СтрокаКонтактнойИнформации.ВидыКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
					Количество = СтруктураКоличество.Телефон;
					Для Каждого Строка Из ТаблицаЗначенийКонтактнойИнформации Цикл
						Если ЗначениеЗаполнено(Строка.Вид) И ЕстьРеквизит(Строка.Вид, "Тип") Тогда
							Если Строка.Вид.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
								ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = Строка.Представление;
								ОбластьОбъектаКонтактнаяИнформация.ТекущаяОбласть.Шрифт = 
								Новый Шрифт (ОбластьОбъектаКонтактнаяИнформация.ТекущаяОбласть.Шрифт);
								ТабличныйДокумент.Присоединить(ОбластьОбъектаКонтактнаяИнформация);
								Количество = Количество - 1;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					Если Количество > 0 Тогда
						Для Сч = 1 По Количество Цикл
							ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = "";
							ТабличныйДокумент.Присоединить(ОбластьОбъектаКонтактнаяИнформация);
						КонецЦикла;
					КонецЕсли;
					Продолжить;
				ИначеЕсли СтрокаКонтактнойИнформации.ВидыКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда
					Количество = СтруктураКоличество.Факс;
					Для Каждого Строка Из ТаблицаЗначенийКонтактнойИнформации Цикл
						Если ЗначениеЗаполнено(Строка.Вид) И ЕстьРеквизит(Строка.Вид, "Тип") Тогда
							Если Строка.Вид.Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда
								ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = Строка.Представление;
								ОбластьОбъектаКонтактнаяИнформация.ТекущаяОбласть.Шрифт = 
								Новый Шрифт (ОбластьОбъектаКонтактнаяИнформация.ТекущаяОбласть.Шрифт);
								ТабличныйДокумент.Присоединить(ОбластьОбъектаКонтактнаяИнформация);
								Количество = Количество - 1;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					Если Количество > 0 Тогда
						Для Сч = 1 По Количество Цикл
							ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = "";
							ТабличныйДокумент.Присоединить(ОбластьОбъектаКонтактнаяИнформация);
						КонецЦикла;
					КонецЕсли;
					Продолжить;
				ИначеЕсли СтрокаКонтактнойИнформации.ВидыКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
					Количество = СтруктураКоличество.АдресЭлектроннойПочты;
					Для Каждого Строка Из ТаблицаЗначенийКонтактнойИнформации Цикл
						Если ЗначениеЗаполнено(Строка.Вид) И ЕстьРеквизит(Строка.Вид, "Тип") Тогда
							Если Строка.Вид.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
								ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = Строка.Представление;
								ОбластьОбъектаКонтактнаяИнформация.ТекущаяОбласть.Шрифт = 
								Новый Шрифт (ОбластьОбъектаКонтактнаяИнформация.ТекущаяОбласть.Шрифт);
								ТабличныйДокумент.Присоединить(ОбластьОбъектаКонтактнаяИнформация);
								Количество = Количество - 1;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					Если Количество > 0 Тогда
						Для Сч = 1 По Количество Цикл
							ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = "";
							ТабличныйДокумент.Присоединить(ОбластьОбъектаКонтактнаяИнформация);
						КонецЦикла;
					КонецЕсли;
					Продолжить;
				Иначе
					СтрокаТаблицыЗначений = ТаблицаЗначенийКонтактнойИнформации.Найти(СтрокаКонтактнойИнформации.ВидыКонтактнойИнформации,"Вид");
					Если СтрокаТаблицыЗначений = Неопределено Тогда
						КонтактнаяИнформация = "";
					Иначе
						КонтактнаяИнформация = СтрокаТаблицыЗначений.Представление;
						Если ЗначениеЗаполнено(СтрокаТаблицыЗначений.Комментарий) Тогда
							КонтактнаяИнформация = КонтактнаяИнформация + " (" + СтрокаТаблицыЗначений.Комментарий + ")";
						КонецЕсли;
					КонецЕсли;
					ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = КонтактнаяИнформация;
					ОбластьОбъектаКонтактнаяИнформация.ТекущаяОбласть.Шрифт = 
					Новый Шрифт (ОбластьОбъектаКонтактнаяИнформация.ТекущаяОбласть.Шрифт);
					ТабличныйДокумент.Присоединить(ОбластьОбъектаКонтактнаяИнформация);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = "";
	
	СтрокиДляОбхода = ВходнойОбъект.ВидыПодтверждающихДокументов.НайтиСтроки(Новый Структура("Пометка",истина));
	Если СтрокиДляОбхода.Количество() > 0 ТОгда

		ТаблицаЗначенийКонтактнойИнформации = РезультатЗапроса[1].Выгрузить();
		
		Для Каждого СтрокаПодтверждающийДокумент Из СтрокиДляОбхода Цикл
			Если СтрокаПодтверждающийДокумент.Пометка Тогда
				
				Отбор = Новый Структура("Вид",СтрокаПодтверждающийДокумент.ВидыПодтверждающихДокументов);
				СтрокаТаблицыЗначений = ТаблицаЗначенийКонтактнойИнформации.НайтиСтроки(Отбор);
				
				СтрокаТаблицыЧислоВидовПодтверждающихДокументов = КоличествоДокументовПоВидам.Найти(СтрокаПодтверждающийДокумент.ВидыПодтверждающихДокументов);
				Если СтрокаТаблицыЧислоВидовПодтверждающихДокументов <> Неопределено Тогда
					
					КоличествоПД = СтрокаТаблицыЧислоВидовПодтверждающихДокументов.Количество;
					
					Если КоличествоПД Тогда
						Для х = 0 По КоличествоПД-1 Цикл
							Если х<СтрокаТаблицыЗначений.Количество() Тогда
								СтрокаТаблицы = СтрокаТаблицыЗначений.Получить(х);
							Иначе
								СтрокаТаблицы = Неопределено
							КонецЕсли;
							
							Если СтрокаТаблицы = Неопределено Тогда
								КонтактнаяИнформация = "";
							Иначе
								КонтактнаяИнформация = СтрокаТаблицы.ПредставлениеПД;
								Если ЗначениеЗаполнено(СтрокаТаблицы.Комментарий) Тогда
									КонтактнаяИнформация = КонтактнаяИнформация + " (" + СтрокаТаблицы.Комментарий + ")";
								КонецЕсли;
							КонецЕсли;
							ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = КонтактнаяИнформация;
							
							ТабличныйДокумент.Присоединить(ОбластьОбъектаКонтактнаяИнформация);
						КонецЦикла;
					Иначе
						ТабличныйДокумент.Присоединить(ОбластьОбъектаКонтактнаяИнформация);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;		
			ОбластьОбъектаКонтактнаяИнформация.Параметры.КонтактнаяИнформация = "";
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры// ВывестиКонтактнуюИнформацию()

#КонецОбласти

#КонецЕсли