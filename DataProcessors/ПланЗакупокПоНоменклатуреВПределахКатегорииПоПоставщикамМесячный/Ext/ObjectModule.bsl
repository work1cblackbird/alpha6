#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ДокументОбъект Экспорт; // Документ объект

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьИнтервалПрошлогоПериода(ВидПлана,ДатаНачала,ДатаКонца)
	ДатаНачалаПланирования = ДокументОбъект.ДатаНачала;
	ДатаКонцаПланирования = ДокументОбъект.ДатаКонца;
	Если ВидПлана=Неопределено Тогда
		ДатаНачала=Неопределено;
		ДатаКонца=Неопределено;
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.День Тогда
		ДатаНачала = НачалоДня(ДатаНачалаПланирования-1);
		ДатаКонца = КонецДня(ДатаКонцаПланирования-1);
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.Неделя Тогда
		ДатаНачала = НачалоНедели(ДатаНачалаПланирования-7);
		ДатаКонца = КонецНедели(ДатаКонцаПланирования-7);
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.Месяц Тогда
		ДатаНачала = НачалоМесяца(ДобавитьМесяц(ДатаНачалаПланирования,-1));
		ДатаКонца = КонецМесяца(ДобавитьМесяц(ДатаКонцаПланирования,-1));
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.Квартал Тогда
		ДатаНачала = НачалоКвартала(ДобавитьМесяц(ДатаНачалаПланирования,-3));
		ДатаКонца = КонецКвартала(ДобавитьМесяц(ДатаКонцаПланирования,-3));
	ИначеЕсли ВидПлана.ПериодичностьПланирования=Перечисления.ПериодичностьАнализаНакопительныхСкидок.Год Тогда
		ДатаНачала = НачалоГода(ДобавитьМесяц(ДатаНачалаПланирования,-12));
		ДатаКонца = КонецГода(ДобавитьМесяц(ДатаКонцаПланирования,-12));
	КонецЕсли;
КонецПроцедуры

// Заполнение документа план операция: планирование.
Процедура ЗаполнитьПлан() Экспорт
	ДокументОбъект.Показатели.Очистить();
	Если НЕ ДокументОбъект <> Документы.ПланФакт.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	
	// Кэшируем параметры запросов.
	ВидПлана = Справочники.ВидыПлановКомпании.ПланПродажПоНоменклатуреВПределахКатегорииМесячный;
	ТипНоменклатуры=ДокументОбъект.ОбъектПланирования;
	ПодразделениеКомпании=ДокументОбъект.ПодразделениеКомпании;
	ДатаНачала = Неопределено;
	ДатаКонца = Неопределено;
	ПолучитьИнтервалПрошлогоПериода(ВидПлана,ДатаНачала,ДатаКонца);	
	
	// Определим необходимость ограничения по ассортименту.	
	ШиринаАссортимента=Документы.ПланФакт.ПолучитьПараметрПлана(ДокументОбъект, НСтр("ru = 'Ширина ассортимента'"));
	ОграничиватьПоШиринеАссортимента=(ШиринаАссортимента<>Неопределено И ШиринаАссортимента>0);
	
	// Сначала попробуем поискать существующие планы закупок.
	ТекстЗапроса="ВЫБРАТЬ ";
	Если ОграничиватьПоШиринеАссортимента Тогда
		ТекстЗапроса=ТекстЗапроса+"ПЕРВЫЕ "+ШиринаАссортимента+" ";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
		 |	ПланированиеОбороты.ВидАналитикиПланирования1,
		 |	ПланированиеОбороты.ПоказательПлана1Оборот КАК ПоказательПлана1,
		 |	ПланированиеОбороты.ПоказательПлана2Оборот КАК ПоказательПлана2,
		 |	ПланированиеОбороты.ПоказательПлана3Оборот КАК ПоказательПлана3
		 |ИЗ
		 |	РегистрНакопления.Планирование.Обороты(&ДатаНачала, &ДатаКонца, , ВидПлана = &ВидПлана И ПодразделениеКомпании = &ПодразделениеКомпании И ВидАналитикиПланирования1.ТипНоменклатуры = &ТипНоменклатуры) КАК ПланированиеОбороты";
	 
	Если ОграничиватьПоШиринеАссортимента Тогда
		ТекстЗапроса=ТекстЗапроса+"
		| УПОРЯДОЧИТЬ ПО ПоказательПлана3 УБЫВ";
	КонецЕсли;		 
		 
	Запрос=Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВидПлана", Справочники.ВидыПлановКомпании.ПланЗакупокПоНоменклатуреВПределахКатегорииМесячный);
	Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
	Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца", ДатаКонца);
	
	РезультатЗапроса=Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		// Выгружаем уже готовые данные планирования.
		ДокументОбъект.Показатели.Загрузить(РезультатЗапроса.Выгрузить());
	Иначе
		// Рассчитываем данные планирования сами.
		
		// Получим результаты продаж за предыдущий период по данному типу номенклатуры.
		ТекстЗапроса="ВЫБРАТЬ ";
		Если ОграничиватьПоШиринеАссортимента Тогда
			ТекстЗапроса=ТекстЗапроса+"ПЕРВЫЕ "+ШиринаАссортимента+" ";
		КонецЕсли;
		
		ТекстЗапроса=ТекстЗапроса+"
		 |	Необх.ВидАналитикиПланирования1 КАК ВидАналитикиПланирования1,
		 |	СУММА(ВЫБОР 
		 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА Необх.ПоказательПлана1Оборот 
		 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток >= Необх.ПоказательПлана1Оборот ТОГДА 0 
		 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток < Необх.ПоказательПлана1Оборот ТОГДА Необх.ПоказательПлана1Оборот - Ост.КоличествоОстаток 
		 |
		 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА МинОст.ЗначениеРеквизита 
		 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток >= МинОст.ЗначениеРеквизита ТОГДА 0 
		 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток < МинОст.ЗначениеРеквизита ТОГДА МинОст.ЗначениеРеквизита - Ост.КоличествоОстаток 
		 |	КОНЕЦ) КАК ПоказательПлана1,
		 |	СУММА(ВЫБОР
		 |		КОГДА Партии.КоличествоПриход<>0 ТОГДА Партии.СуммаУпрПриход / Партии.КоличествоПриход
		 |		ИНАЧЕ 0
		 |	КОНЕЦ) КАК ПоказательПлана2,
		 |
		 |	СУММА(ВЫБОР 
		 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА Необх.ПоказательПлана1Оборот 
		 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток >= Необх.ПоказательПлана1Оборот ТОГДА 0 
		 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток < Необх.ПоказательПлана1Оборот ТОГДА Необх.ПоказательПлана1Оборот - Ост.КоличествоОстаток 
		 |
		 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА МинОст.ЗначениеРеквизита 
		 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток >= МинОст.ЗначениеРеквизита ТОГДА 0 
		 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток < МинОст.ЗначениеРеквизита ТОГДА МинОст.ЗначениеРеквизита - Ост.КоличествоОстаток 
		 |	КОНЕЦ)
		 |	* СУММА(ВЫБОР
		 |		КОГДА Партии.КоличествоПриход<>0 ТОГДА Партии.СуммаУпрПриход / Партии.КоличествоПриход
		 |		ИНАЧЕ 0
		 |	КОНЕЦ) КАК ПоказательПлана3
		 |
		 |ИЗ
		 |	РегистрНакопления.Планирование.Обороты(&ДатаНачала, &ДатаКонца, , ВидПлана = &ВидПлана И ВидАналитикиПланирования1.ТипНоменклатуры = &ТипНоменклатуры И ПодразделениеКомпании В ИЕРАРХИИ(&ПодразделениеКомпании)) КАК Необх
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваровКомпании.Остатки(&ДатаКонца, СкладКомпании.ПодразделениеКомпании=&ПодразделениеКомпании) КАК Ост
		 |		ПО Необх.ВидАналитикиПланирования1 = Ост.Номенклатура
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеРеквизитыНоменклатуры КАК МинОст
		 |		ПО Необх.ВидАналитикиПланирования1 = МинОст.Номенклатура И (МинОст.ДополнительныйРеквизит = &МинимальныйОстатокСсылка) И Необх.ПодразделениеКомпании=МинОст.ПодразделениеКомпании
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровКомпании.Обороты(&ДатаНачала, &ДатаКонца, , СкладКомпании.ПодразделениеКомпании=&ПодразделениеКомпании) КАК Партии
		 |		ПО Необх.ВидАналитикиПланирования1 = Партии.Номенклатура
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	Необх.ВидАналитикиПланирования1, Партии.Номенклатура, Ост.Номенклатура
		 |
		 |ИМЕЮЩИЕ
		 |	СУММА(ВЫБОР 
		 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА Необх.ПоказательПлана1Оборот 
		 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток >= Необх.ПоказательПлана1Оборот ТОГДА 0 
		 |		КОГДА ((МинОст.ЗначениеРеквизита) ЕСТЬ NULL  ИЛИ МинОст.ЗначениеРеквизита <= Необх.ПоказательПлана1Оборот) И Ост.КоличествоОстаток < Необх.ПоказательПлана1Оборот ТОГДА Необх.ПоказательПлана1Оборот - Ост.КоличествоОстаток 
		 |
		 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И (Ост.КоличествоОстаток) ЕСТЬ NULL  ТОГДА МинОст.ЗначениеРеквизита 
		 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток >= МинОст.ЗначениеРеквизита ТОГДА 0 
		 |		КОГДА МинОст.ЗначениеРеквизита > Необх.ПоказательПлана1Оборот И Ост.КоличествоОстаток < МинОст.ЗначениеРеквизита ТОГДА МинОст.ЗначениеРеквизита - Ост.КоличествоОстаток 
		 |	КОНЕЦ) > 0
		 |";
		 
		Если ОграничиватьПоШиринеАссортимента Тогда
			ТекстЗапроса=ТекстЗапроса+"
			| УПОРЯДОЧИТЬ ПО ПоказательПлана3 УБЫВ";
		КонецЕсли;
		 		
		Запрос=Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ВидПлана", ВидПлана);
		Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
		Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
		Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
		Запрос.УстановитьПараметр("ДатаКонца", ДатаКонца);
		Запрос.УстановитьПараметр("МинимальныйОстатокСсылка", Перечисления.ДополнительныеРеквизитыНоменклатуры.МинимальныйОстаток);
		
		ДокументОбъект.Показатели.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	
	// Определим поставщиков товаров по одному из трех алгоритмов.
	
	Для Каждого ТекущаяСтрока Из ДокументОбъект.Показатели Цикл
		
		// Пробуем реализовать первый алгоритм - выбираем поставщика
		// по максимальному объему поставок за предшествующий период.
		
		ТекстЗапроса="ВЫБРАТЬ
		|	СУММА(ПартииТоваровКомпанииОбороты.КоличествоПриход) КАК КоличествоПриход,
		|	ПартииТоваровКомпанииОбороты.Партия.Контрагент КАК Контрагент
		|ИЗ
		|	РегистрНакопления.ПартииТоваровКомпании.Обороты(&ДатаНачала, &ДатаКонца, , Партия.ХозОперация = &ХозОперация И СкладКомпании.ПодразделениеКомпании=&ПодразделениеКомпании) КАК ПартииТоваровКомпанииОбороты
		|
		|ГДЕ
		|	ПартииТоваровКомпанииОбороты.Номенклатура = &Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровКомпанииОбороты.Партия.Контрагент
		|
		|УПОРЯДОЧИТЬ ПО
		|	КоличествоПриход УБЫВ";
		 
		Запрос=Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ХозОперация", Справочники.ХозОперации.ПоступлениеТоваров);
		Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.ВидАналитикиПланирования1);
		Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
		Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
		Запрос.УстановитьПараметр("ДатаКонца", ДатаКонца);
		
		РезультатЗапроса=Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			// Первый алгоритм подлежит реализации.
			НаборЗаписей=РезультатЗапроса.Выбрать();
			НаборЗаписей.Следующий();
			ТекущаяСтрока.ВидАналитикиПланирования2=НаборЗаписей.Контрагент;
		Иначе
			// Пробуем реализовать второй алгоритм - выбираем поставщика по минимальной цене в регистре сведений.
			
			// Сначала определим границу актуальности цен поставщиков.
			ГраницаАктуальности=Документы.ПланФакт.ПолучитьПараметрПлана(ДокументОбъект,
																			НСтр("ru = 'Граница актуальности цен'"));
			Если ГраницаАктуальности=Неопределено Тогда
				ГраницаАктуальности=ДобавитьМесяц(ДатаКонца,-12);	
			КонецЕсли;
			
			ТекстЗапроса="ВЫБРАТЬ
			|	ЦеныСрезПоследних.Цена КАК Цена,
			|	ЦеныСрезПоследних.Контрагент КАК Контрагент
			|ИЗ
			|	РегистрСведений.Цены.СрезПоследних(&ДатаКонца, Номенклатура = &Номенклатура) КАК ЦеныСрезПоследних
			|
			|ГДЕ
			|	ЦеныСрезПоследних.Период > &ГраницаАктуальности
			|
			|УПОРЯДОЧИТЬ ПО
			|	Цена";
		 
			Запрос=Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.ВидАналитикиПланирования1);
			Запрос.УстановитьПараметр("ГраницаАктуальности", ГраницаАктуальности);
			Запрос.УстановитьПараметр("ДатаКонца", ДатаКонца);
			
			РезультатЗапроса=Запрос.Выполнить();
			
			Если НЕ РезультатЗапроса.Пустой() Тогда
				// Второй алгоритм подлежит реализации.
				НаборЗаписей=РезультатЗапроса.Выбрать();
				НаборЗаписей.Следующий();
				ТекущаяСтрока.ВидАналитикиПланирования2=НаборЗаписей.Контрагент;
				ТекущаяСтрока.ПоказательПлана2=НаборЗаписей.Цена;
				ТекущаяСтрока.ПоказательПлана3=ТекущаяСтрока.ПоказательПлана1*ТекущаяСтрока.ПоказательПлана2;
			Иначе
				// Пробуем реализовать третий алгоритм - выбираем первого попавшегося поставщика из регистра
				// прайс-листов контрагентов.
				ТекстЗапроса="ВЫБРАТЬ ПЕРВЫЕ 1
				|	ПрайсЛистыКонтрагентов.ПрайсЛист.Владелец КАК Контрагент
				|ИЗ
				|	РегистрСведений.ПрайсЛистыКонтрагентов КАК ПрайсЛистыКонтрагентов
				|ГДЕ
				|	ПрайсЛистыКонтрагентов.Номенклатура = &Номенклатура";
				Запрос=Новый Запрос(ТекстЗапроса);
				Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.ВидАналитикиПланирования1);
				
				РезультатЗапроса=Запрос.Выполнить();
				
				Если НЕ РезультатЗапроса.Пустой() Тогда
					// Третий алгоритм подлежит реализации.
					НаборЗаписей=РезультатЗапроса.Выбрать();
					НаборЗаписей.Следующий();
					ТекущаяСтрока.ВидАналитикиПланирования2=НаборЗаписей.Контрагент;
				Иначе
					// Ни один алгоритм не позволяет определить поставщика - сообщаем предупреждение.
					ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Для товара'") + ТекущаяСтрока.ВидАналитикиПланирования1 + " "
						+ НСтр("ru = 'невозможно определить поставщика'"));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла;
	
	Если ОграничиватьПоШиринеАссортимента Тогда
		Если ДокументОбъект.Показатели.Количество()<ШиринаАссортимента Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'ВНИМАНИЕ! Заданная ширина ассортимента превосходит количество видов товаров, проданных за предыдущий период.'")
			);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Заполнение документа план операция: фактически.
Процедура ЗаполнитьФакт() Экспорт
	ДокументОбъект.Показатели.Очистить();
	Если НЕ ДокументОбъект <> Документы.ПланФакт.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	
	// Кэшируем параметры запроса.
	ВидПлана = Справочники.ВидыПлановКомпании.ПланПродажПоТоварнымКатегориямМесячный;
	ТипНоменклатуры=ДокументОбъект.ОбъектПланирования;
	ПодразделениеКомпании=ДокументОбъект.ПодразделениеКомпании;
	ДатаНачала = Неопределено;
	ДатаКонца = Неопределено;
	ПолучитьИнтервалПрошлогоПериода(ВидПлана,ДатаНачала,ДатаКонца);
	
	ТекстЗапроса="ВЫБРАТЬ
	|	СУММА(ПартииТоваровКомпанииОбороты.КоличествоПриход) КАК ПоказательПлана1,
	|	СУММА(ПартииТоваровКомпанииОбороты.СуммаУпрПриход) / СУММА(ПартииТоваровКомпанииОбороты.КоличествоПриход) КАК ПоказательПлана2,
	|	СУММА(ПартииТоваровКомпанииОбороты.СуммаУпрПриход) КАК ПоказательПлана3,
	|	ПартииТоваровКомпанииОбороты.Номенклатура КАК ВидАналитикиПланирования1,
	|	ПартииТоваровКомпанииОбороты.Партия.Контрагент КАК ВидАналитикиПланирования2
	|ИЗ
	|	РегистрНакопления.ПартииТоваровКомпании.Обороты(&ДатаНачала, &ДатаКонца, , Партия.ХозОперация = &ХозОперация И СкладКомпании.ПодразделениеКомпании = &ПодразделениеКомпании) КАК ПартииТоваровКомпанииОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровКомпанииОбороты.Номенклатура,
	|	ПартииТоваровКомпанииОбороты.Партия.Контрагент";
	
	Запрос=Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
	Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
	Запрос.УстановитьПараметр("ХозОперация", Справочники.ХозОперации.ПоступлениеТоваров);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца", ДатаКонца);

	ДокументОбъект.Показатели.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

#КонецОбласти

#КонецЕсли