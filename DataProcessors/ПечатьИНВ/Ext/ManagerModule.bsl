#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Процедура обработки печати
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ИНВ3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ИНВ3",
															НСтр("ru = 'ИНВ3 (Инвентаризационная опись)'"),
															ПечатьИНВ3Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ИНВ19") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ИНВ19",
															НСтр("ru = 'ИНВ19 (Сличительная ведомость)'"),
															ПечатьИНВ19Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;												
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ИНВ22") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ИНВ22",
															НСтр("ru = 'ИНВ22 (Приказ о проведении инвентаризации)'"),
															ПечатьИНВ22Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;													
КонецПроцедуры

Функция ПечатьИНВ3Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		
		// Зададим параметры макета.
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		// Получим данные из документа.
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиИНВ3(Документ);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьИНВ.ПФ_MXL_ИНВ3");
		
		ОбластьЗаголовок        = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвалСтраницы   = Макет.ПолучитьОбласть("ПодвалСтраницы");
		ОбластьПодвалОписи      = Макет.ПолучитьОбласть("ПодвалОписи");
		ОбластьПодвалОписи2      = Макет.ПолучитьОбласть("ПодвалОписи2");
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		
		СтруктураПредставления = УправлениеПечатьюПлатформа.СформироватьСтруктуруПредставления();
		
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = Документ.Дата;
		ОбластьЗаголовок.Параметры.ОрганизацияПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ОбластьЗаголовок.Параметры.Организация, СтруктураПредставления, ДополнительныеПараметры);
		
		ОбластьЗаголовок.Параметры.ПодразделениеКомпании = 
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ОбластьЗаголовок.Параметры.ПодразделениеКомпании);
		
		ОбластьЗаголовок.Параметры.ОрганизацияПоОКПО     = ОбластьЗаголовок.Параметры.Организация.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ВидДеятельностиПоОКДП = ОбластьЗаголовок.Параметры.Организация.КодПоОКДП;
		ОбластьЗаголовок.Параметры.МОЛДолжность          = ДанныеДокумента.МОЛ.Должность;
		ОбластьЗаголовок.Параметры.МОЛПредставление      = ДанныеДокумента.МОЛ.Представление;		
		ОбластьЗаголовок.Параметры.Номер = УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(Документ);
		
		Если ЕстьРеквизит(Документ, "ДатаНачалаИнвентаризации") Тогда
			ОбластьЗаголовок.Параметры.ДатаНачалаИнвентаризации = Документ.ДатаНачалаИнвентаризации;
		КонецЕсли;
		Если ЕстьРеквизит(Документ, "ДатаОкончанияИнвентаризации") Тогда
			ОбластьЗаголовок.Параметры.ДатаОкончанияИнвентаризации = Документ.ДатаОкончанияИнвентаризации;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		СтрокНаСтранице	= 24;
		СтрокШапки		= 5;
		СтрокПодвала	= 5;
		НомерСтраницы	= 2;
		Ном				= 1;
		
		ИтогКоличество		= 0;
		ИтогКоличествоУчет	= 0;
		ИтогСумма			= 0;
		ИтогСуммаУчет		= 0;
		
		
		КолвоСтрокПоСтранице	= 0;
		КолвоПоСтранице			= 0;
		СуммаЛиста				= 0;
		
		// Выводим заголовок таблицы.
		ОбластьЗаголовокТаблицы.Параметры.Заполнить(ДанныеДокумента);
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница" + " " + НомерСтраницы;
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		ВыборкаСтрокТовары = ДанныеДокумента.ВыборкаТабличнойЧасти;
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();

		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		// Определим, что показывать в колонке кода - код или артикул.
		ИмяКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
		
		ПроверяемыеОбласти = Новый Структура("Шапка, Подвал");
		
		// Выводим многострочную часть документа.
		Для Каждого СтрокаТоваров Из ВыборкаСтрокТовары Цикл
			ОбластьСтрока.Параметры.Заполнить(СтрокаТоваров);
			ОбластьСтрока.Параметры.КоличествоУчет					= Формат(СтрокаТоваров.КоличествоФакт, ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.Количество						= Формат(СтрокаТоваров.КоличествоКнижн, ФорматВыводаКоличества);
			Если ЕстьРеквизит(ВыборкаСтрокТовары, "ХарактеристикаНоменклатуры") Тогда
				Характеристика										= Строка(СтрокаТоваров.ХарактеристикаНоменклатуры);
			Иначе
				Характеристика										= "";
			КонецЕсли;
			ОбластьСтрока.Параметры.ТоварНаименование =
				УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(СтрокаТоваров.Номенклатура)
				+ ?(Характеристика = "", "", ", " + Характеристика);
			
			Если ЕстьРеквизит(ВыборкаСтрокТовары, "ТоварКод") Тогда
				ОбластьСтрока.Параметры.ТоварКод = СтрокаТоваров.ТоварКод;
			Иначе
				ОбластьСтрока.Параметры.ТоварКод = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(
					СтрокаТоваров.Номенклатура);
			КонецЕсли;
			Если ЕстьРеквизит(СтрокаТоваров.Номенклатура, "БазоваяЕдиницаИзмерения") Тогда
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения;
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияКодПоОКЕИ    = СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения.Код;
			КонецЕсли;
			ОбластьСтрока.Параметры.Номер     = СтрокаТоваров.НомерСтроки;
			ОбластьСтрока.Параметры.Цена      = ?(СтрокаТоваров.Цена <> 0, Формат(СтрокаТоваров.Цена, ФорматВыводаСуммы), "-");
			ОбластьСтрока.Параметры.СуммаУчет = ?(СтрокаТоваров.СуммаФакт <> 0,
				Формат(СтрокаТоваров.СуммаФакт, ФорматВыводаСуммы), "-");
			ОбластьСтрока.Параметры.Сумма     = ?(СтрокаТоваров.СуммаКнижн <> 0,
				Формат(СтрокаТоваров.СуммаКнижн, ФорматВыводаСуммы), "-");
			
			ОбластьПодвалСтраницы.Параметры.ИтогоКоличество     = Формат(ИтогКоличество, ФорматВыводаКоличества);
			ОбластьПодвалСтраницы.Параметры.ИтогоКоличествоУчет = Формат(ИтогКоличествоУчет, ФорматВыводаКоличества);
			ОбластьПодвалСтраницы.Параметры.ИтогоСумма          = Формат(ИтогСумма, ФорматВыводаСуммы);
			ОбластьПодвалСтраницы.Параметры.ИтогоСуммаУчет      = Формат(ИтогСуммаУчет, ФорматВыводаСуммы);

			ОбластьПодвалСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     =
				ЧислоПрописью(КолвоСтрокПоСтранице, , ",,,,,,,,0");
			// выводим число прописью, в зависимости от наличия дробной части
			Если КолвоПоСтранице - Цел(КолвоПоСтранице) > 0 Тогда
				ОбластьПодвалСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
					ЧислоПрописью(КолвоПоСтранице, "ДП=Истина", "целых,целых,целых,,тысячных,тысячных,тысячных,,3");
			Иначе
				ОбластьПодвалСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
					ЧислоПрописью(КолвоПоСтранице, , ",,,,,,,,0");
			КонецЕсли;
			ОбластьПодвалСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью				  =
				ЧислоПрописью(ИтогСуммаУчет, , "руб.,руб.,руб.,м,коп.,коп.,коп.,ж,2");
				
			НомерПредыдущейСтраницы 	= НомерСтраницы;
			ПроверяемыеОбласти.Шапка 	= ОбластьЗаголовокТаблицы;
			ПроверяемыеОбласти.Подвал 	= ОбластьПодвалСтраницы;
			ВывестиГоризонтальнуюОбластьИНВ19(ТабличныйДокумент, ОбластьСтрока, ПроверяемыеОбласти, Документ, НомерСтраницы);
			
			Если НомерПредыдущейСтраницы <> НомерСтраницы Тогда // Если строка была перенесена на новую страницу
				ИтогКоличество 		= 0;
				ИтогКоличествоУчет  = 0;
				ИтогСумма     		= 0;
				ИтогСуммаУчет       = 0;
				
				КолвоСтрокПоСтранице = 0;
				КолвоПоСтранице      = 0;
				СуммаЛиста           = 0;
			КонецЕсли;
				
			ИтогКоличество     = ИтогКоличество     + СтрокаТоваров.КоличествоКнижн;
			ИтогКоличествоУчет = ИтогКоличествоУчет + СтрокаТоваров.КоличествоФакт;
			ИтогСумма          = ИтогСумма          + СтрокаТоваров.СуммаКнижн;
			ИтогСуммаУчет      = ИтогСуммаУчет      + СтрокаТоваров.СуммаФакт;
			
			КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
			КолвоПоСтранице      = КолвоПоСтранице      + СтрокаТоваров.КоличествоФакт;
			СуммаЛиста           = СуммаЛиста           + СтрокаТоваров.СуммаФакт;
		КонецЦикла;
		
		// Выводим итоги по последней странице.
		ОбластьПодвалСтраницы.Параметры.ИтогоКоличество     = Формат(ИтогКоличество, ФорматВыводаКоличества);
		ОбластьПодвалСтраницы.Параметры.ИтогоКоличествоУчет = Формат(ИтогКоличествоУчет, ФорматВыводаКоличества);
		ОбластьПодвалСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью =
			ЧислоПрописью(КолвоСтрокПоСтранице, , ",,,,,,,,0");
		// выводим число прописью, в зависимости от наличия дробной части
		Если КолвоПоСтранице - Цел(КолвоПоСтранице) > 0 Тогда
			ОбластьПодвалСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
				ЧислоПрописью(КолвоПоСтранице, "ДП=Истина", "целых,целых,целых,,тысячных,тысячных,тысячных,,3");
		Иначе
			ОбластьПодвалСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
				ЧислоПрописью(КолвоПоСтранице, , ",,,,,,,,0");
		КонецЕсли;
		ОбластьПодвалСтраницы.Параметры.ИтогоСумма = ?(ИтогСумма <> 0, Формат(ИтогСумма, ФорматВыводаСуммы), "-");
		ОбластьПодвалСтраницы.Параметры.ИтогоКоличествоУчет = Формат(ИтогКоличествоУчет, ФорматВыводаКоличества);
		ОбластьПодвалСтраницы.Параметры.ИтогоСуммаУчет = ?(ИтогСуммаУчет <> 0,
			Формат(ИтогСуммаУчет, ФорматВыводаСуммы), "-");
		ОбластьПодвалСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью = ?(ИтогСуммаУчет <> 0,
			ЧислоПрописью(ИтогСуммаУчет, , "руб.,руб.,руб.,м,коп.,коп.,коп.,ж,2"), "");
		
		ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
		
		// Выводим подвал документа.
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьПодвалОписи.Параметры.Заполнить(ДанныеДокумента);
		ОбластьПодвалОписи2.Параметры.НачальныйНомерПоПорядку = 1;
		ОбластьПодвалОписи2.Параметры.НомерКонца = ВыборкаСтрокТовары.Количество();
		// выводим число прописью, в зависимости от наличия дробной части
		ИтоговоеКоличествоФакт = ВыборкаСтрокТовары.Итог("КоличествоФакт");
		Если ИтоговоеКоличествоФакт - Цел(ИтоговоеКоличествоФакт) > 0 Тогда
			ОбластьПодвалОписи.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
				ЧислоПрописью(ИтоговоеКоличествоФакт, "ДП=Истина", "целых,целых,целых,,тысячных,тысячных,тысячных,,3");
		Иначе
			ОбластьПодвалОписи.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
				ЧислоПрописью(ИтоговоеКоличествоФакт, , ",,,,,,,,0");
		КонецЕсли;
		ОбластьПодвалОписи.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью =
			ЧислоПрописью(ВыборкаСтрокТовары.Количество(), , ",,,,,,,,0");
		
		// Если нет движений по регистрам, то печатаем сумму документа.
		СуммаНаПечать = ВыборкаСтрокТовары.Итог("СуммаФакт");
		ОбластьПодвалОписи.Параметры.СуммаФактическиНаСтраницеПрописью = ?(СуммаНаПечать <> 0,
			ЧислоПрописью(СуммаНаПечать, , "руб.,руб.,руб.,м,коп.,коп.,коп.,ж,2"), "");
		
		// Заполним информацию о руководителях и ответственных.
		ОбластьПодвалОписи2.Параметры.МОЛДолжность     = ДанныеДокумента.МОЛ.Должность;
		ОбластьПодвалОписи2.Параметры.МОЛПредставление = ДанныеДокумента.МОЛ.Представление;			
	
		ПорядковыйНомер = 1;
		Для Каждого Строка ИЗ ДанныеДокумента.ИнвентаризационнаяКомиссия Цикл
			Если Строка.Председатель Тогда  
				ОбластьПодвалОписи.Параметры.Заполнить(
					УправлениеПечатьюПлатформа.ДанныеСотрудникаДляПечати("ПредседательКомиссии",Строка.ЧленКомиссии)
				); 
			ИначеЕсли ПорядковыйНомер = 1 Тогда 
				ОбластьПодвалОписи.Параметры.Заполнить(
					УправлениеПечатьюПлатформа.ДанныеСотрудникаДляПечати("ЧленКомиссии1", Строка.ЧленКомиссии)
				);
				ПорядковыйНомер = 2;
			Иначе  
				ТабличныйДокумент.Вывести(ОбластьПодвалОписи); 
		
				ОбластьПодвалОписи = Макет.ПолучитьОбласть("ДопЧленКомиссии");
                ОбластьПодвалОписи.Параметры.Заполнить(
					УправлениеПечатьюПлатформа.ДанныеСотрудникаДляПечати("ЧленКомиссии", Строка.ЧленКомиссии)
				);
			КонецЕсли;
		КонецЦикла;
				
		ТабличныйДокумент.Вывести(ОбластьПодвалОписи); 
		
		// добавляем пустые графы для членов комиссии
		КоличествоСтрок =  ДанныеДокумента.ИнвентаризационнаяКомиссия.Количество();
		Если КоличествоСтрок = 0 Тогда 
			КоличествоСтрок = КоличествоСтрок + 2;
		ИначеЕсли КоличествоСтрок = 1 Тогда 
			КоличествоСтрок = КоличествоСтрок + 1;
		КонецЕсли;
	
		Пока КоличествоСтрок < 4 Цикл
			
			ОбластьПодвалОписи = Макет.ПолучитьОбласть("ДопЧленКомиссии");
			ТабличныйДокумент.Вывести(ОбластьПодвалОписи);
			КоличествоСтрок = КоличествоСтрок + 1;
			
		КонецЦикла;  
		
		ТабличныйДокумент.Вывести(ОбластьПодвалОписи2);     
		
		// Отметим конец области документа.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНВ3Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьИНВ3Общая()

Функция ПечатьИНВ19Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
				
		// Зададим параметры макета.
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		// Получим данные из документа.
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиИНВ19(Документ);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьИНВ.ПФ_MXL_ИНВ19");
		
		ОбластьЗаголовок        = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьИтогоТаблицы     = Макет.ПолучитьОбласть("ИтогоТаблицы");
		ОбластьИтогиПоСтранице  = Макет.ПолучитьОбласть("ИтогоТаблицыИтогиПоСтранице");
		ОбластьИтогоТаблицы2    = Макет.ПолучитьОбласть("ИтогоТаблицы2");
		ОбластьПодвал           = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		
		СтруктураПредставления = УправлениеПечатьюПлатформа.СформироватьСтруктуруПредставления();
		
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = Документ.Дата;
		ОбластьЗаголовок.Параметры.ОрганизацияПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ОбластьЗаголовок.Параметры.Организация, СтруктураПредставления, ДополнительныеПараметры);
		
		ОбластьЗаголовок.Параметры.ПодразделениеКомпании = 
		УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ОбластьЗаголовок.Параметры.ПодразделениеКомпании);
		
		ОбластьЗаголовок.Параметры.ОрганизацияПоОКПО		= ОбластьЗаголовок.Параметры.Организация.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ВидДеятельностиПоОКДП	= ОбластьЗаголовок.Параметры.Организация.КодПоОКДП;
		ОбластьЗаголовок.Параметры.МОЛДолжность          = ДанныеДокумента.МОЛ.Должность;
		ОбластьЗаголовок.Параметры.МОЛПредставление      = ДанныеДокумента.МОЛ.Представление;		
		ОбластьЗаголовок.Параметры.Номер = УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(Документ);
			
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		СтрокНаСтранице = 27;
		СтрокШапки      = 5;
		СтрокПодвала    = 5;
		НомерСтраницы   = 2;
		Ном             = 1;
		Сч              = 1;
		
		ИтогоРезультатИзлишекКолво   		= 0;
		ИтогоРезультатИзлишекСумма   		= 0;
		ИтогоРезультатНедостачаКолво 		= 0;
		ИтогоРезультатНедостачаСумма 		= 0;
		ИтогоПриходИзлишковКолво 	 		= 0;
		ИтогоПриходИзлишковСумма 	 		= 0;
		ИтогоСписаниеНедостачКолонка1Колво  = 0;
		ИтогоСписаниеНедостачКолонка1Сумма  = 0;
		
		// Выводим заголовок таблицы
		ОбластьЗаголовокТаблицы.Параметры.Заполнить(ДанныеДокумента);
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		ВыборкаСтрокТовары = ДанныеДокумента.ВыборкаТабличнойЧасти;
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		// Определим, что показывать в колонке кода - код или артикул.
		ИмяКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
		
		// Структура итогов по странице
		СтруктураИтогов = Новый Структура;
		СтруктураИтогов.Вставить("ИтогоРезультатИзлишекКолво",         0);
		СтруктураИтогов.Вставить("ИтогоРезультатИзлишекСумма",         0);
		СтруктураИтогов.Вставить("ИтогоРезультатНедостачаКолво",       0);
		СтруктураИтогов.Вставить("ИтогоРезультатНедостачаСумма",       0);
		СтруктураИтогов.Вставить("ИтогоПриходИзлишковКолво",           0);
		СтруктураИтогов.Вставить("ИтогоПриходИзлишковСумма",           0);
		СтруктураИтогов.Вставить("ИтогоСписаниеНедостачКолонка1Колво", 0);
		СтруктураИтогов.Вставить("ИтогоСписаниеНедостачКолонка1Сумма", 0);
		
		мсвДопОбластиПодвала = Новый Массив;
		мсвДопОбластиПодвала.Добавить(ОбластьИтогоТаблицы);
		мсвДопОбластиПодвала.Добавить(ОбластьПодвал);
		
		// Выводим многострочную часть документа.
		Для Каждого СтрокаТоваров Из ВыборкаСтрокТовары Цикл
		
			// Начинаем новую страницу, если предыдущая строка была последней на странице
			// или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница	= (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				ИЛИ ((ПереноситьПоследнююСтроку = 1) И (Ном = КоличествоСтрок)) Тогда
				
				УправлениеПечатьюПлатформа.ВывестиИтогиПоСтранице(
					ТабличныйДокумент,
					ОбластьИтогиПоСтранице,
					СтруктураИтогов,Документ
					);
				СтруктураИтогов = Новый Структура;
				СтруктураИтогов.Вставить("ИтогоРезультатИзлишекКолво",         0);
				СтруктураИтогов.Вставить("ИтогоРезультатИзлишекСумма",         0);
				СтруктураИтогов.Вставить("ИтогоРезультатНедостачаКолво",       0);
				СтруктураИтогов.Вставить("ИтогоРезультатНедостачаСумма",       0);
				СтруктураИтогов.Вставить("ИтогоПриходИзлишковКолво",           0);
				СтруктураИтогов.Вставить("ИтогоПриходИзлишковСумма",           0);
				СтруктураИтогов.Вставить("ИтогоСписаниеНедостачКолонка1Колво", 0);
				СтруктураИтогов.Вставить("ИтогоСписаниеНедостачКолонка1Сумма", 0);
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоСтранице);
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				Ном =1;
			КонецЕсли;
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(СтрокаТоваров);
			
			Если ЕстьРеквизит(ВыборкаСтрокТовары, "ХарактеристикаНоменклатуры") Тогда
				Характеристика = Строка(СтрокаТоваров.ХарактеристикаНоменклатуры);
			Иначе
				Характеристика = "";
			КонецЕсли;
			// +Альфа
			Если ТипЗНЧ(ВыборкаСтрокТовары) = Тип("РегистрНакопленияНаборЗаписей.ОстаткиАвтомобилей")
				ИЛИ ТипЗНЧ(ВыборкаСтрокТовары) = Тип("РегистрНакопленияНаборЗаписей.АвтомобилиОтданные")
				ИЛИ (ТипЗНЧ(ВыборкаСтрокТовары) = Тип("ТаблицаЗначений")
					И  ВыборкаСтрокТовары.Колонки.Найти("Автомобиль") <> Неопределено ) Тогда
				
				ОбластьСтрокаТаблицы.Параметры.ТоварНаименование =
					УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(СтрокаТоваров.Автомобиль)
					+ ?(Характеристика = "", "", ", " + Характеристика);
				ОбластьСтрокаТаблицы.Параметры.ТоварКод =
					УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Автомобиль);
				ОбластьСтрокаТаблицы.Параметры.ЕдиницаИзмеренияНаименование = Справочники.КлассификаторЕдиницИзмерения.шт;
				ОбластьСтрокаТаблицы.Параметры.ЕдиницаИзмеренияКодПоОКЕИ    = Справочники.КлассификаторЕдиницИзмерения.шт.Код;
			Иначе 
				ОбластьСтрокаТаблицы.Параметры.ТоварНаименование =
					УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(СтрокаТоваров.Номенклатура)
					+ ?(Характеристика = "", "", ", " + Характеристика);
				ОбластьСтрокаТаблицы.Параметры.ТоварКод =
					УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура);
				ОбластьСтрокаТаблицы.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения;
				ОбластьСтрокаТаблицы.Параметры.ЕдиницаИзмеренияКодПоОКЕИ = СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения.Код;
			КонецЕсли;
			// -Альфа
			ОбластьСтрокаТаблицы.Параметры.Номер = Сч;
			
			Разница     = 0;
			РазницаСумм = 0;
			
			НеТребуетсяПересчетИзУпр = (ДанныеДокумента.Валюта = Константы.ВалютаУправленческогоУчетаКомпании.Получить());
			НеТребуетсяПересчетИзРегл =
				(ДанныеДокумента.Валюта = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить());
			
			Если ДанныеДокумента.ЕстьДвиженияПоРегистру Тогда
				Если ДанныеДокумента.ПростоеСписание Тогда
					Если СтрокаТоваров.СкладКомпании.Розничный Тогда
						РазницаСумм = СтрокаТоваров.СуммаРозн;
						Если Не НеТребуетсяПересчетИзРегл Тогда
							РазницаСумм = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(РазницаСумм, 
								Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(), Документ.Дата, 
								ДанныеДокумента.ВалютаДокумента, Документ.КурсДокумента);
						КонецЕсли;
					Иначе
						Если НеТребуетсяПересчетИзРегл Тогда
							РазницаСумм = СтрокаТоваров.Сумма;
						Иначе
							РазницаСумм = СтрокаТоваров.СуммаУпр;
							Если НЕ НеТребуетсяПересчетИзУпр Тогда
								РазницаСумм = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(РазницаСумм, 
									Константы.ВалютаУправленческогоУчетаКомпании.Получить(), Документ.Дата, 
									ДанныеДокумента.ВалютаДокумента, Документ.КурсДокумента);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если НеТребуетсяПересчетИзРегл Тогда
						РазницаСумм = СтрокаТоваров.Сумма;
					Иначе
						РазницаСумм = СтрокаТоваров.СуммаУпр;
						Если НЕ НеТребуетсяПересчетИзУпр Тогда
							РазницаСумм = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(РазницаСумм, 
								Константы.ВалютаУправленческогоУчетаКомпании.Получить(), Документ.Дата, 
								ДанныеДокумента.ВалютаДокумента, Документ.КурсДокумента);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли; 
				Разница = СтрокаТоваров.Количество;
				Если СтрокаТоваров.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
					Разница     = -Разница;
					РазницаСумм = -РазницаСумм;
				КонецЕсли; 
		Иначе
			Разница     = СтрокаТоваров.КоличествоФакт - СтрокаТоваров.КоличествоКнижн;
			РазницаСумм = СтрокаТоваров.СуммаФакт - СтрокаТоваров.СуммаКнижн;
		КонецЕсли;
			
			Если Разница = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если Разница < 0 Тогда
			ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекКолво   = 0;
			ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекСумма   = 0;
			ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаКолво = Формат(- Разница, ФорматВыводаКоличества);
			ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаСумма = Формат(- РазницаСумм, ФорматВыводаСуммы);
			ОбластьСтрокаТаблицы.Параметры.ПриходИзлишковКолво = 0;
			ОбластьСтрокаТаблицы.Параметры.ПриходИзлишковСумма = 0;
			ОбластьСтрокаТаблицы.Параметры.СписаниеНедостачКолонка1Колво   = Формат(- Разница, ФорматВыводаКоличества);
			ОбластьСтрокаТаблицы.Параметры.СписаниеНедостачКолонка1Сумма   = Формат(- РазницаСумм, ФорматВыводаСуммы);
			
			ИтогоРезультатИзлишекКолво   		= ИтогоРезультатИзлишекКолво   + 0;
			ИтогоРезультатИзлишекСумма   		= ИтогоРезультатИзлишекСумма   + 0;
			ИтогоРезультатНедостачаКолво 		= ИтогоРезультатНедостачаКолво + (- Разница);
			ИтогоРезультатНедостачаСумма 		= ИтогоРезультатНедостачаСумма + (- РазницаСумм);
			ИтогоПриходИзлишковКолво 	 		= ИтогоПриходИзлишковКолво 	+ 0;
			ИтогоПриходИзлишковСумма 	 		= ИтогоПриходИзлишковСумма + 0;
			ИтогоСписаниеНедостачКолонка1Колво  = ИтогоСписаниеНедостачКолонка1Колво + (- Разница);
			ИтогоСписаниеНедостачКолонка1Сумма  = ИтогоСписаниеНедостачКолонка1Сумма + (- РазницаСумм);
		Иначе
			ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекКолво   = Формат(Разница, ФорматВыводаКоличества);
			ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекСумма   = Формат(РазницаСумм, ФорматВыводаСуммы);
			ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаКолво = 0;
			ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаСумма = 0;
			ОбластьСтрокаТаблицы.Параметры.ПриходИзлишковКолво = Формат(Разница, ФорматВыводаКоличества);
			ОбластьСтрокаТаблицы.Параметры.ПриходИзлишковСумма = Формат(РазницаСумм, ФорматВыводаСуммы);
			ОбластьСтрокаТаблицы.Параметры.СписаниеНедостачКолонка1Колво   = 0;
			ОбластьСтрокаТаблицы.Параметры.СписаниеНедостачКолонка1Сумма   = 0;
			
			ИтогоРезультатИзлишекКолво   		= ИтогоРезультатИзлишекКолво  + Разница;
			ИтогоРезультатИзлишекСумма  		= ИтогоРезультатИзлишекСумма  + РазницаСумм;
			ИтогоРезультатНедостачаКолво 		= ИтогоРезультатНедостачаКолво + 0;
			ИтогоРезультатНедостачаСумма		= ИтогоРезультатНедостачаСумма + 0;
			ИтогоПриходИзлишковКолво 	 		= ИтогоПриходИзлишковКолво + Разница;
			ИтогоПриходИзлишковСумма 	 		= ИтогоПриходИзлишковСумма + РазницаСумм;
			ИтогоСписаниеНедостачКолонка1Колво  = ИтогоСписаниеНедостачКолонка1Колво   + 0;
			ИтогоСписаниеНедостачКолонка1Сумма  = ИтогоСписаниеНедостачКолонка1Сумма   + 0;
		КонецЕсли; 
			Ном = Ном + 1;
		
		СтраницаДоВывода = НомерСтраницы;
		Области = Новый Структура;
		Области.Вставить("Шапка",  ОбластьЗаголовокТаблицы);
		Области.Вставить("Подвал", ОбластьИтогиПоСтранице);
		НомерСтраницы = ВывестиГоризонтальнуюОбластьИНВ19(ТабличныйДокумент, ОбластьСтрокаТаблицы,
			Области, Документ, НомерСтраницы, СтруктураИтогов, мсвДопОбластиПодвала);
		Если СтраницаДоВывода <> НомерСтраницы Тогда
			СтруктураИтогов = Новый Структура;
			СтруктураИтогов.Вставить("ИтогоРезультатИзлишекКолво",         0);
			СтруктураИтогов.Вставить("ИтогоРезультатИзлишекСумма",         0);
			СтруктураИтогов.Вставить("ИтогоРезультатНедостачаКолво",       0);
			СтруктураИтогов.Вставить("ИтогоРезультатНедостачаСумма",       0);
			СтруктураИтогов.Вставить("ИтогоПриходИзлишковКолво",           0);
			СтруктураИтогов.Вставить("ИтогоПриходИзлишковСумма",           0);
			СтруктураИтогов.Вставить("ИтогоСписаниеНедостачКолонка1Колво", 0);
			СтруктураИтогов.Вставить("ИтогоСписаниеНедостачКолонка1Сумма", 0);
		КонецЕсли;
		
		Если Разница < 0 Тогда
			СтруктураИтогов.ИтогоРезультатИзлишекКолво   		= СтруктураИтогов.ИтогоРезультатИзлишекКолво + 0;
			СтруктураИтогов.ИтогоРезультатИзлишекСумма  		= СтруктураИтогов.ИтогоРезультатИзлишекСумма + 0;
			СтруктураИтогов.ИтогоРезультатНедостачаКолво 		= СтруктураИтогов.ИтогоРезультатНедостачаКолво + ( - Разница);
			СтруктураИтогов.ИтогоРезультатНедостачаСумма 		= СтруктураИтогов.ИтогоРезультатНедостачаСумма + ( - РазницаСумм);
			СтруктураИтогов.ИтогоПриходИзлишковКолво   			= СтруктураИтогов.ИтогоПриходИзлишковКолво + 0;
			СтруктураИтогов.ИтогоПриходИзлишковСумма   			= СтруктураИтогов.ИтогоПриходИзлишковСумма + 0;
			СтруктураИтогов.ИтогоСписаниеНедостачКолонка1Колво  = 
				СтруктураИтогов.ИтогоСписаниеНедостачКолонка1Колво + ( - Разница);
			СтруктураИтогов.ИтогоСписаниеНедостачКолонка1Сумма  = 
				СтруктураИтогов.ИтогоСписаниеНедостачКолонка1Сумма + ( - РазницаСумм);
		Иначе
			СтруктураИтогов.ИтогоРезультатИзлишекКолво   		= СтруктураИтогов.ИтогоРезультатИзлишекКолво + Разница;
			СтруктураИтогов.ИтогоРезультатИзлишекСумма  		= СтруктураИтогов.ИтогоРезультатИзлишекСумма + РазницаСумм;
			СтруктураИтогов.ИтогоРезультатНедостачаКолво 		= СтруктураИтогов.ИтогоРезультатНедостачаКолво + 0;
			СтруктураИтогов.ИтогоРезультатНедостачаСумма 		= СтруктураИтогов.ИтогоРезультатНедостачаСумма + 0;
			СтруктураИтогов.ИтогоПриходИзлишковКолво   			= СтруктураИтогов.ИтогоПриходИзлишковКолво + Разница;
			СтруктураИтогов.ИтогоПриходИзлишковСумма   			= СтруктураИтогов.ИтогоПриходИзлишковСумма + РазницаСумм;
			СтруктураИтогов.ИтогоСписаниеНедостачКолонка1Колво  = СтруктураИтогов.ИтогоСписаниеНедостачКолонка1Колво + 0;
			СтруктураИтогов.ИтогоСписаниеНедостачКолонка1Сумма  = СтруктураИтогов.ИтогоСписаниеНедостачКолонка1Сумма + 0;
		КонецЕсли;	
			Сч = Сч + 1;
	КонецЦикла;
	
		// Выведем область итогов по странице.
		Если НомерСтраницы > 2 Тогда
			УправлениеПечатьюПлатформа.
			ВывестиИтогиПоСтранице(ТабличныйДокумент, ОбластьИтогиПоСтранице, СтруктураИтогов, Документ);
			ОбластьИтогиПоСтранице.Параметры.Заполнить(СтруктураИтогов);
			ТабличныйДокумент.Вывести(ОбластьИтогиПоСтранице);
		КонецЕсли;
	
		ОбластьИтогоТаблицы.Параметры.ИтогоРезультатИзлишекКолво = Формат(
			ИтогоРезультатИзлишекКолво, ФорматВыводаКоличества);
		ОбластьИтогоТаблицы.Параметры.ИтогоРезультатИзлишекСумма = Формат(ИтогоРезультатИзлишекСумма, ФорматВыводаСуммы);
		ОбластьИтогоТаблицы.Параметры.ИтогоРезультатНедостачаКолво = Формат(
			ИтогоРезультатНедостачаКолво, ФорматВыводаКоличества);
		ОбластьИтогоТаблицы.Параметры.ИтогоРезультатНедостачаСумма = Формат(ИтогоРезультатНедостачаСумма, ФорматВыводаСуммы);
		ОбластьИтогоТаблицы.Параметры.ИтогоПриходИзлишковКолво = Формат(ИтогоПриходИзлишковКолво, ФорматВыводаКоличества);
		ОбластьИтогоТаблицы.Параметры.ИтогоПриходИзлишковСумма = Формат(ИтогоПриходИзлишковСумма, ФорматВыводаСуммы);
		ОбластьИтогоТаблицы.Параметры.ИтогоСписаниеНедостачКолонка1Колво = Формат(
			ИтогоСписаниеНедостачКолонка1Колво, ФорматВыводаКоличества);
		ОбластьИтогоТаблицы.Параметры.ИтогоСписаниеНедостачКолонка1Сумма = Формат(ИтогоСписаниеНедостачКолонка1Сумма,
			ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьИтогоТаблицы);
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента);
		
		// Заполним информацию о руководителях и ответственных.
		ОбластьПодвал.Параметры.ГлавныйБухгалтерПредставление = ДанныеДокумента.ГлавныйБухгалтер.Представление;
		ОбластьПодвал.Параметры.МОЛДолжность          = ДанныеДокумента.МОЛ.Должность;
		ОбластьПодвал.Параметры.МОЛПредставление      = ДанныеДокумента.МОЛ.Представление;		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// Отметим конец области документа.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНВ19Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьИНВ19Общая()

Функция ПечатьИНВ22Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
			
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		ТабДокумент.АвтоМасштаб				= Истина;
		ТабДокумент.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
		
		Шапка =  ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиИНВ22(Документ);
        Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьИНВ.ПФ_MXL_ИНВ22");
		
		Пока Шапка.Следующий() Цикл
			
			ЗаголовокРазделаПодписей = Новый Структура();
			ЗаголовокРазделаПодписей.Вставить("ПредседательКомиссии", "Председатель комиссии");
			ЗаголовокРазделаПодписей.Вставить("ЧленыКомиссии",        "Члены комиссии");
			
			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
			ЧленКомиссии = Шапка.ИнвентаризационнаяКомиссия.Выбрать();
		
			// Получаем области макета для вывода в табличный документ
			ШапкаОтчета	= Макет.ПолучитьОбласть("Шапка");
			Подпись 	= Макет.ПолучитьОбласть("Подпись");
			Подвал  	= Макет.ПолучитьОбласть("Подвал");
				
			// Выведем шапку документа
			ШапкаОтчета.Параметры.Заполнить(Шапка);
			
			ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
			ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Шапка.ПодразделениеКомпании);
			ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
			ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
			ДополнительныеПараметры.НаДату = Шапка.Дата;
			ШапкаОтчета.Параметры.Организация			= УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(Шапка.Организация, , ДополнительныеПараметры);
			ШапкаОтчета.Параметры.ОрганизацияКодПоОКПО	= Шапка.ОрганизацияКодПоОКПО;
			ШапкаОтчета.Параметры.Подразделение			= Шапка.ПодразделениеКомпании;
			
			ШапкаОтчета.Параметры.НомерДокумента = Шапка.ОснованиеНомер;
			ШапкаОтчета.Параметры.ДатаДокумента  = Шапка.ОснованиеДата;
			
			ШапкаОтчета.Параметры.НаименованиеИмуществаОбязательств = "";
					
			ТабДокумент.Вывести(ШапкаОтчета);
			
			// Выведем подпись председателя инвентаризационной комиссии
			ПредседательКомиссии = Неопределено;
			Если ЧленКомиссии.Следующий() Тогда
				Если ЧленКомиссии.Председатель Тогда
					ПредседательКомиссии = ЧленКомиссии;
				КонецЕсли; 
			КонецЕсли;
			
			СтруктураПараметровПодписи = Новый Структура("ЗаголовокРазделаПодписей, Должность, НаименованиеЧленаКомиссии");
			Если НЕ (ПредседательКомиссии = Неопределено) Тогда
				
				СтруктураПараметровПодписи.ЗаголовокРазделаПодписей  = ЗаголовокРазделаПодписей.ПредседательКомиссии;
				СтруктураПараметровПодписи.Должность                 = ПредседательКомиссии.ЧленКомиссии.Должность;
				СтруктураПараметровПодписи.НаименованиеЧленаКомиссии = ПредседательКомиссии.ЧленКомиссии.Наименование;
				
			Иначе
				
				СтруктураПараметровПодписи.ЗаголовокРазделаПодписей  = ЗаголовокРазделаПодписей.ПредседательКомиссии;
				СтруктураПараметровПодписи.Должность                 = "";
				СтруктураПараметровПодписи.НаименованиеЧленаКомиссии = "";
				
			КонецЕсли;
			
			Подпись.Параметры.Заполнить(СтруктураПараметровПодписи);
			
			ТабДокумент.Вывести(Подпись);
			
			// Выведем подписи членов комиссии
			ВыводитьЗаголовок = Истина;
			
			КоличествоЧленовКомиссии = 0;
			
			// Сначала выведем членов комиссии из выборки
			Пока ЧленКомиссии.Следующий() Цикл
				
				Если ЧленКомиссии.Председатель Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
					
					// Выведем разрыв страницы
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
				КонецЕсли;
				
				КоличествоЧленовКомиссии = КоличествоЧленовКомиссии + 1;
				
				СтруктураПараметровПодписи.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
				                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
															   "");
				СтруктураПараметровПодписи.Должность                 = ЧленКомиссии.ЧленКомиссии.Должность;
				СтруктураПараметровПодписи.НаименованиеЧленаКомиссии = ЧленКомиссии.ЧленКомиссии.Наименование;
				
				Подпись.Параметры.Заполнить(СтруктураПараметровПодписи);
				
				ТабДокумент.Вывести(Подпись);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
			
			// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
			// подписей, как в форме, утвержденной Госкомстатом)
			Если КоличествоЧленовКомиссии < 3 Тогда
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
					
					// Выведем разрыв страницы
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
				КонецЕсли;
				
				Для Итератор = (КоличествоЧленовКомиссии + 1) По 3 Цикл
					
					СтруктураПараметровПодписи.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
					                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
																   "");
					СтруктураПараметровПодписи.Должность                 = "";
					СтруктураПараметровПодписи.НаименованиеЧленаКомиссии = "";
					
					Подпись.Параметры.Заполнить(СтруктураПараметровПодписи);
					
					ТабДокумент.Вывести(Подпись);
					
					ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
					
				КонецЦикла;
			
			КонецЕсли;
			
			// Выведем подвал приказа
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подвал) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
			Подвал.Параметры.НаименованиеИмуществаОбязательств = "";
			Подвал.Параметры.ДатаНачалаИнвентаризации          = Формат(Шапка.ДатаНачалаИнвентаризации, "ДЛФ=DD");
			Подвал.Параметры.ДатаОкончанияИнвентаризации       = Формат(Шапка.ДатаОкончанияИнвентаризации, "ДЛФ=DD");
			Подвал.Параметры.ПричинаПроведенияИнвентаризации   = Шапка.ПричинаПроведенияИнвентаризации;
			
			Руководители = УправлениеПечатьюПлатформа.ДанныеОтветственногоЛица(Шапка.Ссылка, "Руководитель");
					
			Подвал.Параметры.ДолжностьРуководителя          = Руководители.РуководительДолжность;
			Подвал.Параметры.РасшифровкаПодписиРуководителя = Руководители.РуководительПредставление;
			
			ТабДокумент.Вывести(Подвал);
			
			// Отметим конец области документа.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
				НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

		КонецЦикла;	//Шапки.Следующий() 
		
	КонецЦикла;	
	
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНВ22Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабДокумент);
	ТабДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция проверяет попадание текущей области и области подвала на страницу.
//
// Параметры:
//  ТабДокумент 			 - табличный документ, в который выводится информация, подготовленная к печати,
//  Область 				 - текущая или массив текущих областей, предназначенных для вывода в данный момент,
//  Области 				 - Структура - области шапки и подвала:
// 	* Шапка 			 - область или массив областей, выступающих в качестве шапки и
// 								которые будут выводиться на каждой странице.
// 	* Подвал 			 - область, которая будет выводиться в качестве подвала на каждой странице
//  Документ 				 - печатаемый документ,
//  НомерСтраницы 			 - номер печатаемой страницы
//  СтруктураИтоговПоСтранице - структура содержащая, накопленные итоги по текущей странице
//					 	 	 значение ключа структуры должно совпадать с идентификатором реквизита табличной части документа
//  мсвДопОбластиПодвала  - подвальная часть макета. Проверка попадания последней строки таблицы на страницу
//							общего подвала Если = Неопределено, то проверка не осуществляется
//
// Возвращаемое значение:
//  Число - текущий номер страницы.
//
Функция ВывестиГоризонтальнуюОбластьИНВ19(ТабДокумент, Область, Области, Документ, НомерСтраницы = 1,
	СтруктураИтоговПоСтранице = Неопределено, мсвДопОбластиПодвала = Неопределено) Экспорт
	
	ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
	ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
	
	// Запишем их в один массив
	МассивОбластейДляПроверки = Новый Массив;
	МассивОбластейДляПроверки.Добавить(Область);

	Если Области.Подвал <> Неопределено Тогда
		МассивОбластейДляПроверки.Добавить(Области.Подвал);
	КонецЕсли;
	Если мсвДопОбластиПодвала <> Неопределено Тогда
		Для Каждого ТекОбласть Из мсвДопОбластиПодвала Цикл
			МассивОбластейДляПроверки.Добавить(ТекОбласть);
		КонецЦикла;
	КонецЕсли;
	
	Попытка
		// Проверим, помещаются ли на странице.
		РезультатПроверки = ТабДокумент.ПроверитьВывод(МассивОбластейДляПроверки);
		
		// Если не помещаются, то ...
		Если НЕ РезультатПроверки Тогда
			// Выводим итог по странице
			ВывестиИтогиПоСтраницеИНВ19(ТабДокумент,Области.Подвал, СтруктураИтоговПоСтранице, Документ); 
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц(); // переходим на следующую страницу
			НомерСтраницы = НомерСтраницы + 1;
			Если Области.Шапка <> Неопределено Тогда
				Области.Шапка.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(Области.Шапка); // выводим шапку таблицы
			КонецЕсли;
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Возникли проблемы с получением информации о текущем принтере'", 
			ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,,, 
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	// Выводим текущую область
	ТабДокумент.Вывести(Область);
	
	Возврат НомерСтраницы;
КонецФункции

// Вывод итогов по странице печатной формы документа.
//
// Параметры:
// ТабДокумент - табличный документ, печатная форма документа
// ОбластьПодвал - область табличного документа, область куда выводятся итоги
// СтруктураИтоговПоСтранице - структура, сравнит данные для вывода
// Права   - структура, права текущего пользователя или объект документа.
//
Процедура ВывестиИтогиПоСтраницеИНВ19(ТабДокумент, ОбластьПодвал, СтруктураИтоговПоСтранице, Документ) Экспорт 
	
	ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
	ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
	Если ОбластьПодвал <> Неопределено Тогда
		Если СтруктураИтоговПоСтранице <> Неопределено Тогда
			Для Каждого ЭлементИтога Из СтруктураИтоговПоСтранице Цикл
				Если СтрНайти(ЭлементИтога.Ключ,"Сум") <> 0 Тогда
					ЗначениеПараметра = Формат(ЭлементИтога.Значение, ФорматВыводаСуммы);
				Иначе
					ЗначениеПараметра = Формат(ЭлементИтога.Значение, ФорматВыводаКоличества);
				КонецЕсли;
				Попытка
					ОбластьПодвал.Параметры[ЭлементИтога.Ключ] = ЗначениеПараметра;
				Исключение  
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка заполнения параметра'"),
       				УровеньЖурналаРегистрации.Ошибка,,,
       				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьПодвал);
	КонецЕсли;
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#КонецЕсли