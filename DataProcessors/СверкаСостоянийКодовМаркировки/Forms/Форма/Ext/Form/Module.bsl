
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МаркировкаТоваровСервер.ИнициализироватьСлужебныеРеквизиты(ЭтотОбъект);
	Организация = ПараметрыСеанса.Организация;
	ОтборПоРазличным = 1;
	ЗаполнитьСтатусы();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Организация = Организация;
КонецПроцедуры

&НаКлиенте
Процедура СверкаСостоянияКМПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда	
		Возврат;
	Иначе
		
		ТекущийЭлементСписка = Элемент.ТекущаяСтрока;
		ПодключитьОбработчикОжидания("Подключаемый_СписокПриАктивизацииСтроки", 1, Истина);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СверкаСостоянияКМВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) Тогда
		СсылкаНаНоменклатуру = Элемент.ТекущиеДанные.Номенклатура;
		ПоказатьЗначение(, СсылкаНаНоменклатуру);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоРазличнымПриИзменении(Элемент)
	Если ОтборПоРазличным = 2 Тогда
		Элементы.СверкаСостоянияКМ.ОтборСтрок = Новый ФиксированнаяСтруктура("Расхождение", истина);
	ИначеЕсли ОтборПоРазличным = 3 Тогда
		Элементы.СверкаСостоянияКМ.ОтборСтрок = Новый ФиксированнаяСтруктура("Расхождение", Ложь);
	Иначе
		Элементы.СверкаСостоянияКМ.ОтборСтрок = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборGTINПриИзменении(Элемент)
	GTIN = Элемент.ТекстРедактирования;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы 

&НаКлиенте
Процедура ПолучитьКодыМаркировкиИзЧестногоЗнака(Команда)
	
	Если ТоварныеГруппы.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Для получения кодов маркировки укажите товарные группы, которые зарегистрированы в Честном знаке'"),,
			"ТоварныеГруппы",
			ЭтотОбъект);
		Возврат;
	КонецЕсли;
	
	Если ДатаНачалоПериода > ДатаКонецПериода И ДатаКонецПериода <> Дата(1,1,1) Тогда
		ДатаНачалоПериода = ДатаКонецПериода;		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отбор по дате эмиссии установлен некорректно";
		Сообщение.Сообщить();
		Возврат; 	
	ИначеЕсли ДатаНачалоПериода > ТекущаяДата() Тогда
		ДатаНачалоПериода = НачалоДня(ТекущаяДата());
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отбор по дате эмиссии установлен некорректно";
		Сообщение.Сообщить();
		Возврат;	
	КонецЕсли;
	
	ИмяДействия = "ОтправкаЗапросаСверкиКодовМаркировки";
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Действие", ИмяДействия);
	ДополнительныеПараметры.Вставить("Организация", Организация);
	ДополнительныеПараметры.Вставить("НеТребуетсяКлючСессии", Ложь);
	ОбработчикОповещения = Новый ОписаниеОповещения("ПолучитьЗапросЗавершение", ЭтотОбъект);
	ДополнительныеПараметры.Вставить("ОбработкаРезультата", ОбработчикОповещения);
	ДополнительныеПараметры.Вставить("ПараметрыОтбора", ЗаполнитьПараметрыОтбора());
	МаркировкаТоваровКлиент.ОтправитьПолучитьЗапрос(ЭтотОбъект, Объект, ДополнительныеПараметры);

КонецПроцедуры

&НаКлиенте
Процедура СортировкаВОЗР(Команда)
	
	СортировкаВОЗРНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СортировкаВОЗРНаСервере()
	
	ТЭ = Элементы.СверкаСостоянияКМ.ТекущийЭлемент;
	Если ТЭ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеДляСортировки = СтрЗаменить(СокрЛП(ТЭ.ПутьКДанным), "СверкаСостоянияКМ.", "");
	СверкаСостоянияКМ.Сортировать(ПолеДляСортировки + " ВОЗР");
	
КонецПроцедуры

&НаКлиенте
Процедура СортировкаУБЫВ(Команда)

	СортировкаУБЫВНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СортировкаУБЫВНаСервере()

	ТЭ = Элементы.СверкаСостоянияКМ.ТекущийЭлемент;
	Если ТЭ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеДляСортировки = СтрЗаменить(СокрЛП(ТЭ.ПутьКДанным), "СверкаСостоянияКМ.", "");
	СверкаСостоянияКМ.Сортировать(ПолеДляСортировки + " УБЫВ");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПолучитьЗапросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуСверки(Результат.Данные);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСверки(ПолученныеДанные)
	
	Если ЗначениеЗаполнено(ДатаНачалоПериода) И ЗначениеЗаполнено(ДатаКонецПериода) Тогда
		ОтборПоПериоду = " ГДЕ ВТСостКММаксДата.Период >= &ПериодНачало И ВТСостКММаксДата.Период <= &ПериодКонец";
	ИначеЕсли ЗначениеЗаполнено(ДатаНачалоПериода) Тогда
		ОтборПоПериоду = " ГДЕ ВТСостКММаксДата.Период >= &ПериодНачало";
	ИначеЕсли ЗначениеЗаполнено(ДатаКонецПериода) Тогда
		ОтборПоПериоду = " ГДЕ ВТСостКММаксДата.Период <= &ПериодКонец";
	Иначе
		ОтборПоПериоду = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборGTIN) Тогда
		ОтборПоGTIN = " И СостоянияКодовМаркировки.GTIN = &ОтборПоGTIN";
	Иначе
		ОтборПоGTIN = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборНоменклатура) Тогда
		ОтборПоНоменклатуре = " И СостоянияКодовМаркировки.Номенклатура = &Номенклатура";
		ОтборПоНоменклатуреШК = " ГДЕ ВТШтрихкоды.Объект = &Номенклатура";
	КонецЕсли;
	
	Если НЕ ВыводитьКМПереданныеДругомуСобственнику Тогда
		ОтборПоПереданым = " ГДЕ ВТСверкаБезСкладов.СостояниеИзБазы <> &ЗначениеСостояния";
	Иначе
		ОтборПоПереданым = "";
	КонецЕсли;
	
	ОтборПоГруппамТоваров =
		"ГДЕ ВЫБОР КОГДА НЕ ЕСТЬNULL(ВТСост.Номенклатура, ВТЧЗСтатусыКМ.Номенклатура) ССЫЛКА Справочник.Номенклатура ТОГДА
		| ИСТИНА
		|КОГДА ЕСТЬNULL(ВТСост.Номенклатура, ВТЧЗСтатусыКМ.Номенклатура) = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА
		| ИСТИНА
		|ИНАЧЕ
		|ВЫРАЗИТЬ(ЕСТЬNULL(ВТСост.Номенклатура, ВТЧЗСтатусыКМ.Номенклатура) КАК Справочник.Номенклатура).ТипНоменклатуры.ТипМаркировки В (&ТоварныеГруппы)
		|КОНЕЦ";
	
	ТаблицаПолученных = Новый ТаблицаЗначений();
	
	ТаблицаПолученных.Колонки.Добавить("GTIN", Новый ОписаниеТипов("Строка"));
	ТаблицаПолученных.Колонки.Добавить("АктуальныйСтатус", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(20)));
	ТаблицаПолученных.Колонки.Добавить("Владелец", Новый ОписаниеТипов("Строка"));
	ТаблицаПолученных.Колонки.Добавить("ДатаЭмиссии", Новый ОписаниеТипов("Дата"));
	ТаблицаПолученных.Колонки.Добавить("КодМаркировки", Новый ОписаниеТипов("Строка"));
	ТаблицаПолученных.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ТаблицаПолученных.Колонки.Добавить("ПричинаВыводаИзОборота", Новый ОписаниеТипов("Строка"));
	ТаблицаПолученных.Колонки.Добавить("Производитель", Новый ОписаниеТипов("Строка"));
	ТаблицаПолученных.Колонки.Добавить("СерийныйНомер", Новый ОписаниеТипов("Строка"));
	ТаблицаПолученных.Колонки.Добавить("ШтрихКодБезНоля", Новый ОписаниеТипов("Строка"));
	
	Для Каждого СтруктураДанных Из ПолученныеДанные Цикл                   
		НоваяСтрока = ТаблицаПолученных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанных);
		СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(НоваяСтрока.КодМаркировки);
		НоваяСтрока.КодМаркировки = СокрЛП(НоваяСтрока.КодМаркировки);
		НоваяСтрока.ШтрихКодБезНоля = Прав(СтруктураМаркировки.GTIN, 13);
		НоваяСтрока.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
		НоваяСтрока.АктуальныйСтатус = СокрЛП(НоваяСтрока.АктуальныйСтатус);
		Если СтруктураДанных.ДатаЭмиссии <> Неопределено Тогда
			НоваяСтрока.ДатаЭмиссии = XMLЗначение(Тип("Дата"), СтруктураДанных.ДатаЭмиссии);
		КонецЕсли;
	КонецЦикла;           
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаПолученных.GTIN КАК СТРОКА(50)) КАК GTIN,
		|	ТаблицаПолученных.Владелец КАК Владелец,
		|	ТаблицаПолученных.ДатаЭмиссии КАК ДатаЭмиссии,
		|	ВЫРАЗИТЬ(ТаблицаПолученных.КодМаркировки КАК СТРОКА(50)) КАК КодМаркировки,
		|	ТаблицаПолученных.Наименование КАК Наименование,
		|	ТаблицаПолученных.ПричинаВыводаИзОборота КАК ПричинаВыводаИзОборота,
		|	ТаблицаПолученных.Производитель КАК Производитель,
		|	ВЫБОР
		|		КОГДА ТаблицаПолученных.АктуальныйСтатус = ""EMITTED""
		|			ТОГДА ""Эмитирован""
		|		КОГДА ТаблицаПолученных.АктуальныйСтатус = ""APPLIED""
		|			ТОГДА ""Эмитирован""
		|		КОГДА ТаблицаПолученных.АктуальныйСтатус = ""INTRODUCED""
		|			ТОГДА ""Введен в оборот""
		|		КОГДА ТаблицаПолученных.АктуальныйСтатус = ""WRITTEN_OFF""
		|			ТОГДА ""Списан""
		|		КОГДА ТаблицаПолученных.АктуальныйСтатус = ""RETIRED""
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА ТаблицаПолученных.АктуальныйСтатус = ""DISAGGREGATION""
		|			ТОГДА ""Расформирован""
		|		КОГДА ТаблицаПолученных.АктуальныйСтатус = ""WITHDRAWN""
		|			ТОГДА ""Выведен из оборота""
		|	КОНЕЦ КАК АктуальныйСтатус,
		|	ВЫРАЗИТЬ(ТаблицаПолученных.СерийныйНомер КАК СТРОКА(50)) КАК СерийныйНомер,
		|	ВЫРАЗИТЬ(ТаблицаПолученных.ШтрихКодБезНоля КАК СТРОКА(50)) КАК ШтрихКодБезНоля
		|ПОМЕСТИТЬ ВТПолученные
		|ИЗ
		|	&ТаблицаПолученных КАК ТаблицаПолученных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Штрихкоды.Штрихкод КАК СТРОКА(50)) КАК Штрихкод,
		|	Штрихкоды.Объект КАК Объект,
		|	Штрихкоды.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
		|ПОМЕСТИТЬ ВТШтрихкоды
		|ИЗ
		|	РегистрСведений.Штрихкоды КАК Штрихкоды
		|ГДЕ
		|	Штрихкоды.GTIN = ИСТИНА
		|	И Штрихкоды.Объект ССЫЛКА Справочник.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(СостоянияКодовМаркировки.Период) КАК Период,
		|	СостоянияКодовМаркировки.Номенклатура КАК Номенклатура,
		|	СостоянияКодовМаркировки.GTIN КАК GTIN,
		|	СостоянияКодовМаркировки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СостоянияКодовМаркировки.СерийныйНомер КАК СерийныйНомер,
		|	СостоянияКодовМаркировки.Организация КАК Организация
		|ПОМЕСТИТЬ ВТСостКММаксДата
		|ИЗ
		|	РегистрСведений.СостоянияКодовМаркировки КАК СостоянияКодовМаркировки
		|ГДЕ
		|	СостоянияКодовМаркировки.Организация = &Организация " + ОтборПоGTIN + "
		|
		|СГРУППИРОВАТЬ ПО
		|	СостоянияКодовМаркировки.Номенклатура,
		|	СостоянияКодовМаркировки.GTIN,
		|	СостоянияКодовМаркировки.ХарактеристикаНоменклатуры,
		|	СостоянияКодовМаркировки.СерийныйНомер,
		|	СостоянияКодовМаркировки.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСостКММаксДата.Номенклатура КАК Номенклатура,
		|	ВТСостКММаксДата.GTIN КАК GTIN,
		|	ВТСостКММаксДата.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ВТСостКММаксДата.СерийныйНомер КАК СерийныйНомер,
		|	ВЫБОР
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКодовМаркировки.Эмитирован)
		|			ТОГДА ""Эмитирован. Нанесен""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКодовМаркировки.ЭмитированВыпущен)
		|			ТОГДА ""Эмитирован. Выпущен""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКодовМаркировки.ВведенВОборот)
		|			ТОГДА ""Введен в оборот""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКодовМаркировки.ВведенВОборотПриВозврате)
		|			ТОГДА ""Введен в оборот""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКодовМаркировки.ВведенВОборотОжидаетПеремаркировки)
		|			ТОГДА ""Введен в оборот""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКодовМаркировки.Разагрегирован)
		|			ТОГДА ""Расформирован""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКодовМаркировки.Списан)
		|			ТОГДА ""Списан""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборота)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаРозничнаяПродажа)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаЭкспортированВСтраныЕАЭС)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаЭкспортированЗаПределыСтранЕАЭС)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаВозвращенФизическомуЛицу)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаПриУтратеИлиПовреждении)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаКонфискация)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаЛиквидацияПредприятия)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаИспользованДляСобственныхНуждПредприятия)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаПоДоговоруРассрочки)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаПриПеремаркировке)
		|			ТОГДА ""Выведен из оборота""
		|		КОГДА СостоянияКодовМаркировки.Состояние = ЗНАЧЕНИЕ(Перечисление.состояниякодовмаркировки.ВыведенИзОборотаВРезультатеСписания)
		|			ТОГДА ""Выведен из оборота""
		|		ИНАЧЕ СостоянияКодовМаркировки.Состояние
		|	КОНЕЦ КАК Состояние,
		|	СостоянияКодовМаркировки.КодМаркировки КАК КодМаркировки,
		|	ВТСостКММаксДата.Период КАК Дата1С
		|ПОМЕСТИТЬ ВТСост
		|ИЗ
		|	ВТСостКММаксДата КАК ВТСостКММаксДата
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияКодовМаркировки КАК СостоянияКодовМаркировки
		|		ПО ВТСостКММаксДата.Период = СостоянияКодовМаркировки.Период
		|			И ВТСостКММаксДата.Номенклатура = СостоянияКодовМаркировки.Номенклатура
		|			И ВТСостКММаксДата.ХарактеристикаНоменклатуры = СостоянияКодовМаркировки.ХарактеристикаНоменклатуры
		|			И ВТСостКММаксДата.GTIN = СостоянияКодовМаркировки.GTIN
		|			И ВТСостКММаксДата.СерийныйНомер = СостоянияКодовМаркировки.СерийныйНомер
		|			И ВТСостКММаксДата.Организация = СостоянияКодовМаркировки.Организация " + ОтборПоПериоду + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	GTIN,
		|	ХарактеристикаНоменклатуры,
		|	СерийныйНомер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСостКММаксДата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПолученные.GTIN КАК GTIN,
		|	ВТПолученные.КодМаркировки КАК КодМаркировки,
		|	ВТПолученные.Наименование КАК Наименование,
		|	ВТПолученные.АктуальныйСтатус КАК АктуальныйСтатус,
		|	ЕСТЬNULL(ВТШтрихкоды.Объект, ЗНАЧЕНИЕ(Справочник.Номенклатура.Пустаяссылка)) КАК Номенклатура,
		|	ЕСТЬNULL(ВТШтрихкоды.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.Пустаяссылка)) КАК ХарактеристикаНоменклатуры,
		|	ВТПолученные.СерийныйНомер КАК СерийныйНомер,
		|	ВТПолученные.ДатаЭмиссии КАК ДатаЧЗ
		|ПОМЕСТИТЬ ВТЧЗСтатусыКМ
		|ИЗ
		|	ВТПолученные КАК ВТПолученные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтрихкоды КАК ВТШтрихкоды
		|		ПО ВТПолученные.ШтрихКодБезНоля = ВТШтрихкоды.Штрихкод
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	GTIN,
		|	ХарактеристикаНоменклатуры,
		|	КодМаркировки,
		|	Номенклатура,
		|	СерийныйНомер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТШтрихкоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТСост.Номенклатура, ВТЧЗСтатусыКМ.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(ВТСост.ХарактеристикаНоменклатуры, ВТЧЗСтатусыКМ.ХарактеристикаНоменклатуры) КАК Характеристика,
		|	ЕСТЬNULL(ВТСост.GTIN, ВТЧЗСтатусыКМ.GTIN) КАК GTIN,
		|	ЕСТЬNULL(ВТСост.Состояние, """") КАК СостояниеИзБазы,
		|	ЕСТЬNULL(ВТЧЗСтатусыКМ.АктуальныйСтатус, """") КАК СостояниеИзЧЗ,
		|	ЕСТЬNULL(ВТСост.КодМаркировки, """") КАК КМИзБазы,
		|	ЕСТЬNULL(ВТЧЗСтатусыКМ.КодМаркировки, """") КАК КМИзЧЗ,
		|	ЕСТЬNULL(ВТЧЗСтатусыКМ.Наименование, """") КАК НаименованиеЧЗ,
		|	ВТСост.Дата1С КАК Дата1С,
		|	ВТЧЗСтатусыКМ.ДатаЧЗ КАК ДатаЧЗ
		|ПОМЕСТИТЬ ВТСверкаБезСкладов
		|ИЗ
		|	ВТЧЗСтатусыКМ КАК ВТЧЗСтатусыКМ
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТСост КАК ВТСост
		|		ПО ВТЧЗСтатусыКМ.GTIN = ВТСост.GTIN
		|			И ВТЧЗСтатусыКМ.СерийныйНомер = ВТСост.СерийныйНомер
		|			И ВТЧЗСтатусыКМ.Номенклатура = ВТСост.Номенклатура
		|			И ВТЧЗСтатусыКМ.ХарактеристикаНоменклатуры = ВТСост.ХарактеристикаНоменклатуры " + ОтборПоГруппамТоваров + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТЧЗСтатусыКМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСост.GTIN КАК GTIN,
		|	СУММА(1) КАК СуммаБаза
		|ПОМЕСТИТЬ ВТСуммаКМБаза
		|ИЗ
		|	ВТСост КАК ВТСост
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТСост.GTIN
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПолученные.GTIN КАК GTIN,
		|	СУММА(1) КАК СуммаЧЗ
		|ПОМЕСТИТЬ ВТСуммаЧЗ
		|ИЗ
		|	ВТПолученные КАК ВТПолученные
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТПолученные.GTIN
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСверкаБезСкладов.Номенклатура КАК Номенклатура,
		|	ВТСверкаБезСкладов.Характеристика КАК Характеристика,
		|	ВТСверкаБезСкладов.GTIN КАК GTIN,
		|	ВТСверкаБезСкладов.СостояниеИзБазы КАК СостояниеИзБазы,
		|	ВТСверкаБезСкладов.КМИзБазы КАК КМИзБазы,
		|	ВТСверкаБезСкладов.СостояниеИзЧЗ КАК СостояниеИзЧЗ,
		|	ВТСверкаБезСкладов.КМИзЧЗ КАК КМИзЧЗ,
		|	ВТСверкаБезСкладов.НаименованиеЧЗ КАК НаименованиеЧЗ,
		|	ВЫБОР
		|		КОГДА ВТСверкаБезСкладов.СостояниеИзБазы = ВТСверкаБезСкладов.СостояниеИзЧЗ
		|				И ВТСверкаБезСкладов.СостояниеИзБазы <> """"
		|				И ВТСверкаБезСкладов.СостояниеИзЧЗ <> """"
		|			ТОГДА Ложь
		|		ИНАЧЕ Истина
		|	КОНЕЦ КАК Расхождение,
		|	ВТСверкаБезСкладов.Номенклатура.Артикул КАК Артикул,
		|	ВТСуммаКМБаза.СуммаБаза КАК СуммаБаза,
		|	ВТСуммаЧЗ.СуммаЧЗ КАК СуммаЧЗ,
		|	ВТСверкаБезСкладов.Дата1С КАК Дата1С,
		|	ВТСверкаБезСкладов.ДатаЧЗ КАК ДатаЧЗ
		|ИЗ
		|	ВТСверкаБезСкладов КАК ВТСверкаБезСкладов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммаЧЗ КАК ВТСуммаЧЗ
		|		ПО ВТСверкаБезСкладов.GTIN = ВТСуммаЧЗ.GTIN
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммаКМБаза КАК ВТСуммаКМБаза
		|		ПО ВТСверкаБезСкладов.GTIN = ВТСуммаКМБаза.GTIN " + ОтборПоПереданым;
	
	Если НЕ ВыводитьКМПереданныеДругомуСобственнику Тогда
		Запрос.УстановитьПараметр("ЗначениеСостояния", Перечисления.СостоянияКодовМаркировки.ПередачаДругомуСобственнику);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборGTIN) Тогда
		Запрос.УстановитьПараметр("ОтборПоGTIN", ОтборGTIN);	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборНоменклатура) Тогда
		Запрос.УстановитьПараметр("Номенклатура", ОтборНоменклатура);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборСтатус) Тогда
		Запрос.УстановитьПараметр("Статус", ОтборСтатус);
	КонецЕсли;

	Если ЗначениеЗаполнено(ДатаНачалоПериода) И ЗначениеЗаполнено(ДатаКонецПериода) Тогда
		Запрос.УстановитьПараметр("ПериодНачало", ДатаНачалоПериода);
		Запрос.УстановитьПараметр("ПериодКонец", ДатаКонецПериода);
	ИначеЕсли ЗначениеЗаполнено(ДатаНачалоПериода) Тогда
		Запрос.УстановитьПараметр("ПериодНачало", ДатаНачалоПериода);
	ИначеЕсли ЗначениеЗаполнено(ДатаКонецПериода) Тогда
		Запрос.УстановитьПараметр("ПериодКонец", ДатаКонецПериода);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТоварныеГруппы", ТоварныеГруппы);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТаблицаПолученных", ТаблицаПолученных);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(РезультатЗапроса, "СверкаСостоянияКМ");	
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПараметрыОтбора()
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ТоварныеГруппы", ТоварныеГруппы.ВыгрузитьЗначения());
	
	Если ЗначениеЗаполнено(GTIN) Тогда
		ПараметрыОтбора.Вставить("GTIN", GTIN);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КодТНВЭД) Тогда
		ПараметрыОтбора.Вставить("КодТНВЭД", КодТНВЭД);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Статусы) Тогда
		ПараметрыОтбора.Вставить("Статус", Статусы);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипЭмиссии) Тогда
		ПараметрыОтбора.Вставить("ТипЭмиссии", ТипЭмиссии);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачалоПериода) Тогда
		ПараметрыОтбора.Вставить("НачалоПериода", ДатаНачалоПериода);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаКонецПериода) Тогда
		ПараметрыОтбора.Вставить("КонецПериода", ДатаКонецПериода);
	КонецЕсли;
	
	Возврат ПараметрыОтбора;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтатусы()
	
	Статусы.ДоступныеЗначения = Новый СписокЗначений;
	Статусы.ДоступныеЗначения.Добавить("EMITTED", "Эмитирован. Нанесен");
	Статусы.ДоступныеЗначения.Добавить("APPLIED", "Эмитирован. Выпущен");
	Статусы.ДоступныеЗначения.Добавить("INTRODUCED", "Введён в оборот");
	Статусы.ДоступныеЗначения.Добавить("WRITTEN_OFF", "Списан");
	Статусы.ДоступныеЗначения.Добавить("RETIRED", "Выведен из оборота");
	Статусы.ДоступныеЗначения.Добавить("DISAGGREGATION", "Расформирован");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СписокПриАктивизацииСтроки()
	
	Номенклатура = Элементы.СверкаСостоянияКМ.ТекущиеДанные.Номенклатура;
	СуммаЧЗ = Элементы.СверкаСостоянияКМ.ТекущиеДанные.СуммаЧЗ;
	СуммаБаза = Элементы.СверкаСостоянияКМ.ТекущиеДанные.СуммаБаза;
	
    ПолучитьДетализациюСервер(Номенклатура, СуммаЧЗ, СуммаБаза);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДетализациюСервер(ДанныеНоменклатуры, СуммаЧЗ, СуммаБаза)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ОстаткиТоваровКомпанииОстатки.КоличествоОстаток) КАК НаСкладах
		|ПОМЕСТИТЬ ВТОстатки
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваровКомпании.Остатки(, Номенклатура = &Номенклатура) КАК ОстаткиТоваровКомпанииОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ТоварыВПроизводствеОстатки.КоличествоОстаток) КАК КоличествоОстаток
		|ПОМЕСТИТЬ ВТПроизводство
		|ИЗ
		|	РегистрНакопления.ТоварыВПроизводстве.Остатки(, Номенклатура = &Номенклатура) КАК ТоварыВПроизводствеОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОстатки.НаСкладах КАК НаСкладах,
		|	ВТПроизводство.КоличествоОстаток КАК ВПроизводстве,
		|	&СуммаЧЗ КАК СуммаЧЗ,
		|	&СуммаБаза КАК СуммаБаза,
		|	ВТОстатки.НаСкладах + ВТПроизводство.КоличествоОстаток КАК ОбщийОстаток
		|ИЗ
		|	ВТОстатки КАК ВТОстатки,
		|	ВТПроизводство КАК ВТПроизводство";
	
	Запрос.УстановитьПараметр("Номенклатура", ДанныеНоменклатуры);
	Запрос.УстановитьПараметр("СуммаЧЗ", СуммаЧЗ);
	Запрос.УстановитьПараметр("СуммаБаза", СуммаБаза);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ЗначениеВРеквизитФормы(РезультатЗапроса, "ДанныеУчета");
	
КонецПроцедуры

#КонецОбласти
