
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьОсновныеПараметры(Параметры);
	УстановитьКонтекст(Параметры);
	УстановитьПараметрыСписка();
	УстановитьОтборы(Параметры);
	ОбновитьОтборы(ЭтотОбъект);
	УстановитьОтборПоЗаказНарядам(ЭтотОбъект);
	
	Элементы.ВыбратьВДокумент.Видимость = Параметры.РежимВыбора;
	ОбновитьВидимостьЭлементовСвязанныхСКомплектацией(ЭтотОбъект);
	
	Элементы.ГруппаСозданиеНаОсновании.Видимость = НЕ Параметры.РежимВыбора;
	Если Параметры.Свойство("ПодборИзЗаказаНаАвтомобиль") Тогда
		Элементы.СписокВыбратьАвтомобиль.Видимость = Истина;
		Элементы.ГруппаСозданиеНаОсновании.Видимость = Ложь;
	КонецЕсли;   
	
	УстановитьВидимостьОтбораПодразделение();
		
КонецПроцедуры 

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки) 

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СтраницыОтборов",
		"Видимость",
		НЕ ПанельОтборовСкрыта
	);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СтраницыПодробнойИнформации",
		"Видимость",
		НЕ ПанельПодробнойИнформацииСкрыта
	);
		
	УстановитьВидимостьОтбораПодразделение();
    ОбновитьОтборы(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеКомпанииПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ПодразделениеКомпании) Тогда
		Объект.ПодразделениеКомпанииСписок = Неопределено;
	КонецЕсли;
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры   

&НаКлиенте
Процедура ПодразделениеКомпанииСписокПриИзменении(Элемент)
	
	Если Объект.ПодразделениеКомпанииСписок.Количество()> 0 Тогда
		Объект.ПодразделениеКомпании =
			ПредопределенноеЗначение("Справочник.ПодразделенияКомпании.ПустаяСсылка");
	КонецЕсли;

	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидАвтомобиляПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборАвтомобильНаСкладеЗначениеПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборАвтомобильВРезервеЗначениеПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОстатокПоОплатеПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязиПараметровВыбораМодели()
	
	НовыеСвязи = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.Марка) Тогда
		
		НовыеСвязи.Добавить(Новый СвязьПараметраВыбора("Отбор.Марка", "Объект.Марка"));
		
	КонецЕсли;
	
	Элементы.Модель.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыеСвязи);
	
КонецПроцедуры

&НаКлиенте
Процедура МаркаПриИзменении(Элемент = Неопределено)
	
	УстановитьСвязиПараметровВыбораМодели();
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Марка) Тогда
		
		Объект.Марка = МаркаМодели(Объект.Модель);
		МаркаПриИзменении();
		
	КонецЕсли;
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантКомплектацииПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	ОбновитьВидимостьЭлементовСвязанныхСКомплектацией(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСалонаПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура МенеджерПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидКПППриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКПППриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКППНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",            Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	ПараметрыФормы.Вставить("ВыборГруппИЭлементов",          ГруппыИЭлементы.Элементы);
	ПараметрыФормы.Вставить("МножественныйВыбор",            Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",                   Истина);
	ПараметрыФормы.Вставить("ОписаниеТипов",                 Новый ОписаниеТипов("СправочникСсылка.ТипыКПП"));
	ПараметрыФормы.Вставить("ЗначенияДляВыбора",             Объект.ТипКПП);
	
	СписокОтмеченных = Новый СписокЗначений;
	Для Каждого ТекущееЗначение Из Объект.ТипКПП Цикл
		Если ТекущееЗначение.Пометка Тогда
			СписокОтмеченных.Добавить(ТекущееЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы.Вставить("Отмеченные", СписокОтмеченных);
	
	ОткрытьФорму(
		"ОбщаяФорма.ВводЗначенийСпискомСФлажками",
		ПараметрыФормы,
		Элемент,
		, , , ,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКузоваПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипТопливаПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъемДвигателяНачалоПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъемДвигателяКонецПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГодВыпускаНачалоПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГодВыпускаКонецПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПробегНачалоПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПробегКонецПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаНачалоПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаКонецПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыСАвтоработамиПриИзменении(Элемент)
	
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключательОтбораЗаказНарядовПриИзменении(Элемент)
	
	УстановитьОтборПоЗаказНарядам(ЭтотОбъект);	
		
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеКомпанииСписокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",            Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	ПараметрыФормы.Вставить("ВыборГруппИЭлементов",          ГруппыИЭлементы.Элементы);
	ПараметрыФормы.Вставить("МножественныйВыбор",            Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",                   Истина);
	ПараметрыФормы.Вставить("ОписаниеТипов",                 Новый ОписаниеТипов("СправочникСсылка.ПодразделенияКомпании"));
	ПараметрыФормы.Вставить("ЗначенияДляВыбора",             Объект.ПодразделениеКомпанииСписок);
	
	СписокОтмеченных = Новый СписокЗначений;
	Для Каждого ТекущееЗначение Из  Объект.ПодразделениеКомпанииСписок Цикл
		Если ТекущееЗначение.Пометка Тогда
			СписокОтмеченных.Добавить(ТекущееЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы.Вставить("Отмеченные", СписокОтмеченных);
	
	ОткрытьФорму(
		"ОбщаяФорма.ВводЗначенийСпискомСФлажками",
		ПараметрыФормы,
		Элемент,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодразделениеВСпискеПриИзменении(Элемент)
	
	Если НЕ Объект.ИспользоватьПодразделениеВСписке Тогда
		Объект.ПодразделениеКомпании =
			ПредопределенноеЗначение("Справочник.ПодразделенияКомпании.ПустаяСсылка");
	Иначе 
		Объект.ПодразделениеКомпанииСписок = Неопределено; 
	КонецЕсли;

	УстановитьВидимостьОтбораПодразделение();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// Установим отбор на список базовых опций
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		ТекущаяКомплектация = Элемент.ТекущиеДанные.ВариантКомплектации;
		ТекущийАвтомобиль = Элемент.ТекущиеДанные.Автомобиль;
		
	Иначе
		
		ТекущаяКомплектация = ПредопределенноеЗначение("Справочник.ВариантыКомплектации.ПустаяСсылка");
		ТекущийАвтомобиль = ПредопределенноеЗначение("Справочник.Автомобили.ПустаяСсылка");
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		БазовыеОпцииКомплектации,
		"ВариантКомплектации",
		ТекущаяКомплектация,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		ОборудованиеАвтомобиля,
		"Автомобиль",
		ТекущийАвтомобиль,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		ОпцииАвтомобиля,
		"Автомобиль",
		ТекущийАвтомобиль,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		ЗаказНарядыАвтомобиля,
		"Автомобиль",
		ТекущийАвтомобиль,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);	
	
КонецПроцедуры

&НаСервере
Процедура СписокПриСохраненииПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Настройки.ДополнительныеСвойства, УпаковатьОтборыДляСохранения(), Истина);
	
КонецПроцедуры

&НаСервере
Процедура СписокПриЗагрузкеПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	СброситьЗначенияБыстрыхОтборов(ЭтотОбъект);
	СброситьЗначениеОтбораПоОпциям(ЭтотОбъект);
	СброситьЗначениеОтбораПоОборудованию(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Настройки.ДополнительныеСвойства) Тогда
		
		Если Настройки.ДополнительныеСвойства.Свойство("БыстрыеОтборы") Тогда
			
			ЗаполнитьЗначенияСвойств(Объект, Настройки.ДополнительныеСвойства.БыстрыеОтборы);
			
		КонецЕсли;
		
		Если Настройки.ДополнительныеСвойства.Свойство("Опции") Тогда
			
			КэшОтборПоОпциям = Настройки.ДополнительныеСвойства.Опции.Кэш;
			
			Для Каждого Строка Из Настройки.ДополнительныеСвойства.Опции.Таблица Цикл
				
				ЗаполнитьЗначенияСвойств(Объект.ОтборПоОпциям.Добавить(), Строка);
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Настройки.ДополнительныеСвойства.Свойство("Оборудование") Тогда
			
			КэшОтборПоОборудованию = Настройки.ДополнительныеСвойства.Оборудование.Кэш;
			
			Для Каждого Строка Из Настройки.ДополнительныеСвойства.Оборудование.Таблица Цикл
				
				ЗаполнитьЗначенияСвойств(Объект.ОтборыПоОборудованию.Добавить(), Строка);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьОтборы(ЭтотОбъект);
	ОбновитьВидимостьЭлементовСвязанныхСКомплектацией(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элементы.Список.ТекущаяСтрока = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыБазовыеОпции

&НаКлиенте
Процедура БазовыеОпцииКомплектацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтборПоОпциям

&НаКлиенте
Процедура ОтборПоОпциямПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьКэшОтбораПоОпциям();
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоОпциямПослеУдаления(Элемент)
	
	ОбновитьКэшОтбораПоОпциям();
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоОпциямОпцияПриИзменении(Элемент)
	
	Если Элементы.ОтборПоОпциям.ТекущиеДанные.Количество = 0 Тогда
		
		Элементы.ОтборПоОпциям.ТекущиеДанные.Количество = 1;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтборыПоОборудованию

&НаКлиенте
Процедура ОтборыПоОборудованиюНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОтборыПоОборудованию.ТекущиеДанные;
	
	Если ТекущиеДанные.Количество = 0 Тогда
		
		ТекущиеДанные.Количество = 1;
		
	КонецЕсли;
	
	// Получим данные номенклатуры для подстановки в строку.
	ДанныеНоменклатуры = ?(ТекущиеДанные.Номенклатура.Пустая(),
		ДанныеПустойНоменклатуры(),
		ДанныеНоменклатуры(ТекущиеДанные.Номенклатура));
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыПоОборудованиюПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьКэшОтбораПоОборудованию();
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыПоОборудованиюПослеУдаления(Элемент)
	
	ОбновитьКэшОтбораПоОборудованию();
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВДокумент(Команда)
	
	// TODO: Доработать выбор в документ
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		
		ПоказатьПредупреждение(,НСтр("ru = 'Не выбран автомобиль!'"));
		Возврат;
		
	КонецЕсли;
	
	Закрыть(Элементы.Список.ТекущиеДанные.Автомобиль);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьОтборы(Команда)
	
	ПанельОтборовСкрыта = НЕ ПанельОтборовСкрыта;
	ОбщегоНазначенияКлиентСервер
		.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницыОтборов", "Видимость", НЕ ПанельОтборовСкрыта);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьПодробнуюИнформацию(Команда)
	
	ПанельПодробнойИнформацииСкрыта = НЕ ПанельПодробнойИнформацииСкрыта;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "СтраницыПодробнойИнформации", "Видимость", НЕ ПанельПодробнойИнформацииСкрыта);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВсеОтборы(Команда)
	
	СброситьЗначенияБыстрыхОтборов(ЭтотОбъект);
	ОбновитьВидимостьЭлементовСвязанныхСКомплектацией(ЭтотОбъект);
	СброситьЗначениеОтбораПоОпциям(ЭтотОбъект);
	СброситьЗначениеОтбораПоОборудованию(ЭтотОбъект);
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьБыстрыеОтборы(Команда)
	
	СброситьЗначенияБыстрыхОтборов(ЭтотОбъект);
	ОбновитьВидимостьЭлементовСвязанныхСКомплектацией(ЭтотОбъект);
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьОтборПоОпциям(Команда)
	
	СброситьЗначениеОтбораПоОпциям(ЭтотОбъект);
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьОтборПоОборудованию(Команда)
	
	СброситьЗначениеОтбораПоОборудованию(ЭтотОбъект);
	ОбновитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказНаАвтомобиль(Команда)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ТекСтрока = Элементы.Список.ТекущиеДанные;
		Авто = ТекСтрока.Автомобиль;
		ЕстьЗаказ = ПроверитьЗаказ(Авто);
		Если НЕ ЕстьЗаказ Тогда
			Парам =  Новый Структура;
			Парам.Вставить("Основание", Авто);		
			ОткрытьФорму("Документ.ЗаказНаАвтомобиль.ФормаОбъекта", Парам, ЭтотОбъект);
		Иначе
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'На данный автомобиль уже оформлен заказ.' ");
			Сообщение.Сообщить();	
		КонецЕсли;
	Иначе
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Автомобиль не выбран.' ");
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаказ(Авто)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыАвтомобилейОстатки.Заказ КАК Заказ,
		|	ЗаказыАвтомобилейОстатки.КоличествоОстаток КАК Количество,
		|	ЗаказыАвтомобилейОстатки.РезервОстаток КАК Резерв
		|ИЗ
		|	РегистрНакопления.ЗаказыАвтомобилей.Остатки(, Автомобиль = &Автомобиль) КАК ЗаказыАвтомобилейОстатки";
	
	Запрос.УстановитьПараметр("Автомобиль", Авто);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		Строка = Результат[0];
		Заказ = Строка.Количество;
		Резерв = Строка.Резерв;
		Возврат ?((Заказ = 1 И Резерв = 1), Истина, Ложь);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СоздатьРезервированиеАвтомобиля(Команда)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ТекСтрока = Элементы.Список.ТекущиеДанные;
		Авто = ТекСтрока.Автомобиль;
		ЕстьРезервирование = ПроверитьРезервирование(Авто);
		Если НЕ ЕстьРезервирование Тогда
			Парам =  Новый Структура;
			Парам.Вставить("Автомобиль", Авто);
			Парам.Вставить("ЗаполнениеИзПодбора", Истина);
			ОткрытьФорму("Документ.РезервированиеАвтомобилей.ФормаОбъекта", Парам, ЭтотОбъект);	
		КонецЕсли;
	Иначе
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Автомобиль не выбран.' ");
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьРезервирование(Авто)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыАвтомобилейОстатки.Заказ КАК Заказ,
		|	ЗаказыАвтомобилейОстатки.КоличествоОстаток КАК Количество,
		|	ЗаказыАвтомобилейОстатки.РезервОстаток КАК Резерв
		|ИЗ
		|	РегистрНакопления.ЗаказыАвтомобилей.Остатки(, Автомобиль = &Автомобиль) КАК ЗаказыАвтомобилейОстатки";
	
	Запрос.УстановитьПараметр("Автомобиль", Авто);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		Строка = Результат[0];
		Заказ = Строка.Количество;
		Резерв = Строка.Резерв;
		Если Заказ = 1 И Резерв = 1 Тогда
			СтрокаСообщения = "ru = 'На данный автомобиль уже оформлен заказ.' ";	
		ИначеЕсли Заказ = 0 И Резерв = 1 Тогда
			СтрокаСообщения = "ru = 'Данный автомобиль уже зарезервирован.' ";
		КонецЕсли;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр(СтрокаСообщения);//);
		Сообщение.Сообщить();
		Возврат ?(Резерв = 1, Истина, Ложь)
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьАвтомобиль(Команда)
	
	Если НЕ Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Закрыть(Элементы.Список.ТекущиеДанные.Автомобиль);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НачальнаяНастройкаПодбора

&НаСервере
Процедура УстановитьОсновныеПараметры(ПараметрыПодбора)
	
	Объект.Организация = ПараметрыПодбора.Организация;
	
	Если Объект.Организация.Пустая() Тогда 
		
		Объект.Организация = ПараметрыСеанса.Организация;
		
	КонецЕсли;  
			
	Объект.ПодразделениеКомпании = ПараметрыПодбора.ПодразделениеКомпании;
		
	Если Объект.ПодразделениеКомпании.Пустая() Тогда
			
		Объект.ПодразделениеКомпании = ПараметрыСеанса.ПодразделениеКомпании;
			
	КонецЕсли;  
		
		
	ТипЦен = ПараметрыПодбора.ТипЦен;
	
	Если ТипЦен.Пустая() Тогда
		
		ТипЦен = ПравоПользователя(ПланыВидовХарактеристик.ПраваИНастройки.ОсновнойТипЦенПродажиАвтомобилей);
		
	КонецЕсли;   
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКонтекст(ПараметрыПодбора)
	
	Если НЕ ПараметрыПодбора.РежимВыбора Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЧастиПредставления = Новый Массив();
	
	Документ = ПолучитьЗначениеПараметраСтруктуры(ПараметрыПодбора.Контекст, "Документ");
	Клиент = ПолучитьЗначениеПараметраСтруктуры(ПараметрыПодбора.Контекст, "Контрагент");
	Телефон = ПолучитьЗначениеПараметраСтруктуры(ПараметрыПодбора.Контекст, "Телефон");
	
	Если Документ <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(Документ) Тогда
			
			ЧастиПредставления.Добавить(СтрШаблон("%1 №%2", Документ.Метаданные().Синоним,
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Номер")));
			
		Иначе
			
			ЧастиПредставления.Добавить(СтрШаблон(НСтр("ru = 'Новый %1'"), НРег(Документ.Метаданные().Синоним)));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Клиент) Тогда
		
		ЧастиПредставления.Добавить(Клиент);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Телефон) Тогда
		
		ЧастиПредставления.Добавить(СтрШаблон("тел. %1", Телефон));
		
	КонецЕсли;
	
	Заголовок = Заголовок + ". " + СтрСоединить(ЧастиПредставления, " / ");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборы(ПараметрыПодбора)
	
	Если Параметры.Свойство("ПодборИзЗаказаНаАвтомобиль") Тогда		
		ЗаполнитьЗначенияСвойств(Объект, ПараметрыПодбора);		
	Иначе	
		Если НЕ ПараметрыПодбора.РежимВыбора Тогда
			Возврат;	
		КонецЕсли;	
		ЗаполнитьЗначенияСвойств(Объект, ПараметрыПодбора.Отборы);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСписка()
	
	КоэфЦены = БазовыйТипЦен(ТипЦен);
	ДанныеТипаЦены = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТипЦен, "ВалютаЦены,ВВалютеУчета");
	ПараметрыСписка = Список.КомпоновщикНастроек.Настройки.ПараметрыДанных;
	ПараметрыСписка.УстановитьЗначениеПараметра("Момент", Неопределено);
	ПараметрыСписка.УстановитьЗначениеПараметра("ДатаРасчетаПоступления", ТекущаяДатаСеанса());
	ПараметрыСписка.УстановитьЗначениеПараметра("КоэфЦены", КоэфЦены);
	ПараметрыСписка.УстановитьЗначениеПараметра("ТипЦенПродажи", ТипЦен);
	ПараметрыСписка.УстановитьЗначениеПараметра("ВалютаТипаЦен", ДанныеТипаЦены.ВалютаЦены);
	ПараметрыСписка.УстановитьЗначениеПараметра("РабочийТипЦенВВалютеУчета" , ДанныеТипаЦены.ВВалютеУчета);
	
	ВалютаДокумента = ДанныеТипаЦены.ВалютаЦены;
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДатаСеанса());
	
	КурсДокументаОснования = ?(
		СтруктураКурса.Курс = 0,
		1,
		СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность)
	);
	ПараметрыСписка.УстановитьЗначениеПараметра("КурсДокументаОснования", КурсДокументаОснования);
	
	ОборудованиеАвтомобиля
		.КомпоновщикНастроек
		.Настройки
		.ПараметрыДанных
		.УстановитьЗначениеПараметра("Курс", КурсДокументаОснования);
	
	ОпцииАвтомобиля
		.КомпоновщикНастроек
		.Настройки
		.ПараметрыДанных
		.УстановитьЗначениеПараметра("ТипЦен", ТипЦен);
	ОпцииАвтомобиля
		.КомпоновщикНастроек
		.Настройки
		.ПараметрыДанных
		.УстановитьЗначениеПараметра("КоэфЦены", КоэфЦены);
	ОпцииАвтомобиля
		.КомпоновщикНастроек
		.Настройки
		.ПараметрыДанных
		.УстановитьЗначениеПараметра("Курс", КурсДокументаОснования);
	
КонецПроцедуры

#КонецОбласти

#Область Отборы

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтборы(Форма)
	
	УстановитьПростыеОтборы(Форма);
	УстановитьПарныеОтборы(Форма);
	УстановитьОтборАвтомобильНаСкладе(Форма);
	УстановитьОтборАвтомобильВРезерве(Форма);
	УстановитьОтборЗаказовСАвтоработами(Форма);
	УстановитьОтборПоОпциямИОборудованию(Форма);
	
	#Если НаКлиенте Тогда
		Обработчик = Новый ОписаниеОповещения("Подключаемый_СписокПриАктивизацииСтроки", Форма);
		ВыполнитьОбработкуОповещения(Обработчик);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПростыеОтборы(Форма)
	
	Для Каждого КлючЗначение Из РеквизитыОтборов() Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Форма.Список,
			КлючЗначение.Значение,
			Форма.Объект[КлючЗначение.Ключ],
			ВидСравненияКомпоновкиДанных.Равно,
			,
			ЗначениеЗаполнено(Форма.Объект[КлючЗначение.Ключ]),
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
		
	КонецЦикла; 
	
	Для Каждого КлючЗначение Из РеквизитыОтборовСписок() Цикл
		
		СписокОтбора = Новый СписокЗначений;
		Для Каждого ТекущаяСтрока Из Форма.Объект[КлючЗначение.Ключ] Цикл
			Если ТекущаяСтрока.Пометка Тогда
				СписокОтбора.Добавить(ТекущаяСтрока.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Форма.Список,
			КлючЗначение.Значение,
			СписокОтбора,
			ВидСравненияКомпоновкиДанных.ВСписке,
			,
			СписокОтбора.Количество() > 0,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
		
	КонецЦикла;
	
	Для Каждого КлючЗначение Из РеквизитыОтборовЗависимыеОтКомплектации() Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Форма.Список,
			КлючЗначение.Значение,
			Форма.Объект[КлючЗначение.Ключ],
			ВидСравненияКомпоновкиДанных.Равно,
			,
			Форма.Объект.ВариантКомплектации.Пустая() И ЗначениеЗаполнено(Форма.Объект[КлючЗначение.Ключ]),
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
		
	КонецЦикла;
	
	Для Каждого КлючЗначение Из РеквизитыОтборовСписокЗависимыеОтКомплектации() Цикл
		
		СписокОтбора = Новый СписокЗначений;
		Для Каждого ТекущаяСтрока Из Форма.Объект[КлючЗначение.Ключ] Цикл
			Если ТекущаяСтрока.Пометка Тогда
				СписокОтбора.Добавить(ТекущаяСтрока.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Форма.Список,
			КлючЗначение.Значение,
			СписокОтбора,
			ВидСравненияКомпоновкиДанных.ВСписке,
			,
			Форма.Объект.ВариантКомплектации.Пустая() И СписокОтбора.Количество() > 0,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыОтборов()
	
	РеквизитыОтборов = Новый Структура;
	РеквизитыОтборов.Вставить("ПодразделениеКомпании", "ПодразделениеКомпании");
	РеквизитыОтборов.Вставить("Организация", "Организация");
	РеквизитыОтборов.Вставить("ВидАвтомобиля", "ВидАвтомобиля");
	РеквизитыОтборов.Вставить("Марка", "Автомобиль.Марка");
	РеквизитыОтборов.Вставить("Модель", "Автомобиль.Модель");
	РеквизитыОтборов.Вставить("Цвет", "Цвет");
	РеквизитыОтборов.Вставить("ТипСалона", "Автомобиль.ТипСалона");
	РеквизитыОтборов.Вставить("ОстатокПоОплате", "ОстатокПоОплате");
	РеквизитыОтборов.Вставить("ВариантКомплектации", "Автомобиль.ВариантКомплектации");
	РеквизитыОтборов.Вставить("Менеджер", "Менеджер");
	
	Возврат РеквизитыОтборов;
	
КонецФункции    

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыОтборовСписок()
	
	РеквизитыОтборов = Новый Структура;
	РеквизитыОтборов.Вставить("ПодразделениеКомпанииСписок", "ПодразделениеКомпанииСписок");
	
	Возврат РеквизитыОтборов;
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыОтборовЗависимыеОтКомплектации()
	
	РеквизитыОтборов = Новый Структура;
	
	РеквизитыОтборов.Вставить("ВидКПП", "ВидКПП");
	РеквизитыОтборов.Вставить("ТипКузова", "ТипКузова");
	РеквизитыОтборов.Вставить("ТипТоплива", "Автомобиль.МодельДвигателя.ТипТоплива");
	Возврат РеквизитыОтборов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыОтборовСписокЗависимыеОтКомплектации()
	
	РеквизитыОтборов = Новый Структура;
	
	РеквизитыОтборов.Вставить("ТипКПП", "ТипКПП");
	Возврат РеквизитыОтборов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПарныеОтборы(Форма)
	
	Для Каждого ПарныйОтбор Из ПоляПарныхОтборов() Цикл
		
		УстановитьПарныйОтбор(ПарныйОтбор, Форма);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПоляПарныхОтборов()
	
	ПоляПарныхОтборов = Новый Структура();
	ПоляПарныхОтборов.Вставить("ГодВыпуска", "Автомобиль.ГодВыпуска");
	ПоляПарныхОтборов.Вставить("ОбъемДвигателя", "Автомобиль.МодельДвигателя.Объем");
	ПоляПарныхОтборов.Вставить("Цена", "ОбщаяСтоимость");
	ПоляПарныхОтборов.Вставить("Пробег", "Пробег");
	Возврат ПоляПарныхОтборов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПарныйОтбор(ПарныйОтбор, Форма)
	
	Начало = Форма.Объект[ПарныйОтбор.Ключ + "Начало"];
	Конец = Форма.Объект[ПарныйОтбор.Ключ + "Конец"];
	ОбластьПоиска = Форма.Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор;
	
	КоличествоОбработанныхЗаписей = ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(
		ОбластьПоиска,
		,
		ПарныйОтбор.Ключ + "Начало",
		Начало,
		ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
		ЗначениеЗаполнено(Начало),
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
	);
	
	Если КоличествоОбработанныхЗаписей = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ОбластьПоиска,
			ПарныйОтбор.Значение,
			ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
			Начало,
			ПарныйОтбор.Ключ + "Начало",
			ЗначениеЗаполнено(Начало),
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
		
	КонецЕсли;
	
	КоличествоОбработанныхЗаписей = ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(
		ОбластьПоиска,
		,
		ПарныйОтбор.Ключ + "Конец",
		Конец,
		ВидСравненияКомпоновкиДанных.МеньшеИлиРавно,
		ЗначениеЗаполнено(Конец),
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
	);
	
	Если КоличествоОбработанныхЗаписей = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ОбластьПоиска,
			ПарныйОтбор.Значение,
			ВидСравненияКомпоновкиДанных.МеньшеИлиРавно,
			Конец,
			ПарныйОтбор.Ключ + "Конец",
			ЗначениеЗаполнено(Конец),
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборАвтомобильНаСкладе(Форма)
	
	Использование = Истина;
	Значение = Форма.Объект.АвтомобильНаСкладе;
	ВидСравления = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	
	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		
		Использование = Ложь;
		
	КонецЕсли;
	
	Если Значение = 2 Тогда
		
		ВидСравления = ВидСравненияКомпоновкиДанных.Меньше;
		Значение = 1;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"АвтомобильНаСкладе",
		Значение,
		ВидСравления,
		,
		Использование,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
	);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборАвтомобильВРезерве(Форма)
	
	// Значение по умолчание настроено для режима "Свободные"
	АвтомобильПодЗаказ = Новый Структура();
	АвтомобильПодЗаказ.Вставить("Поле", "АвтомобильПодЗаказ");
	АвтомобильПодЗаказ.Вставить("Использование", Истина);
	АвтомобильПодЗаказ.Вставить("Значение", Ложь);
	АвтомобильПодЗаказ.Вставить("ВидСравления", ВидСравненияКомпоновкиДанных.Равно);
	
	АвтомобильВРезерве = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(АвтомобильПодЗаказ);
	АвтомобильВРезерве.Поле = "АвтомобильВРезерве";
	
	// Режим "Все"
	Если НЕ ЗначениеЗаполнено(Форма.Объект.АвтомобильВРезерве) Тогда
		
		АвтомобильПодЗаказ.Использование = Ложь;
		АвтомобильВРезерве.Использование = Ложь;
		
	КонецЕсли;
	
	// Режим "В заказе"
	Если Форма.Объект.АвтомобильВРезерве = 1 Тогда
		
		АвтомобильПодЗаказ.Значение = Истина;
		АвтомобильВРезерве.Использование = Ложь;
		
	КонецЕсли;
	
	// Режим "В резерве"
	Если Форма.Объект.АвтомобильВРезерве = 2 Тогда
		
		АвтомобильПодЗаказ.Использование = Ложь;
		АвтомобильВРезерве.Значение = Истина;
		
	КонецЕсли;
	
	Отборы = Новый Массив(2);
	Отборы[0] = АвтомобильПодЗаказ;
	Отборы[1] = АвтомобильВРезерве;
	
	Для Каждого Отбор Из Отборы Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Форма.Список,
			Отбор.Поле,
			Отбор.Значение,
			Отбор.ВидСравления,
			,
			Отбор.Использование,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборЗаказовСАвтоработами(Форма)
	
	Если Форма.Объект.ЗаказыСАвтоработами Тогда
		
		СписокЗаказовСАвтоработами = ЗаказыСЗапланированнымРемонтом();
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"Заказ",
		СписокЗаказовСАвтоработами,
		ВидСравненияКомпоновкиДанных.ВСписке,
		,
		(СписокЗаказовСАвтоработами <> Неопределено),
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаказыСЗапланированнымРемонтом()
	
	УстановитьПривилегированныйРежим(Истина);
	
	СписокЗаказов = Новый  Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаявкаНаРемонт.ДокументОснование КАК Заказ
	|ИЗ
	|	Документ.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт
	|ГДЕ
	|	ЗаявкаНаРемонт.ДокументОснование ССЫЛКА Документ.ЗаказНаАвтомобиль
	|	И ЗаявкаНаРемонт.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ЗаказНаАвтомобиль.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СводныйРемонтныйЗаказ.ДокументОснование
	|ИЗ
	|	Документ.СводныйРемонтныйЗаказ КАК СводныйРемонтныйЗаказ
	|ГДЕ
	|	СводныйРемонтныйЗаказ.ДокументОснование ССЫЛКА Документ.ЗаказНаАвтомобиль
	|	И СводныйРемонтныйЗаказ.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ЗаказНаАвтомобиль.ПустаяСсылка)");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СписокЗаказов.Добавить(Выборка.Заказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокЗаказов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоОпциямИОборудованию(Форма)
	
	ОтборВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	
	Если Форма.КэшОтборПоОпциям = Неопределено Тогда
		
		Форма.КэшОтборПоОпциям = ПустойОтборПоТаблице();
		
	КонецЕсли;
	
	Если Форма.КэшОтборПоОборудованию = Неопределено Тогда
		
		Форма.КэшОтборПоОборудованию = ПустойОтборПоТаблице();
		
	КонецЕсли;
	
	Если Форма.КэшОтборПоОборудованию.ТолькоИсключения И Форма.КэшОтборПоОпциям.ТолькоИсключения Тогда
		
		ОтборВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
		ОтборЗначение = Новый Массив;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОтборЗначение, Форма.КэшОтборПоОборудованию.Автомобили, Истина);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОтборЗначение, Форма.КэшОтборПоОпциям.Автомобили, Истина);
		
		Если НЕ ЗначениеЗаполнено(ОтборЗначение) Тогда
			
			ОтборЗначение = Неопределено;
			
		КонецЕсли;
		
	ИначеЕсли НЕ Форма.КэшОтборПоОборудованию.ТолькоИсключения И НЕ Форма.КэшОтборПоОпциям.ТолькоИсключения Тогда
		
		ОтборЗначение = Новый Массив;
		
		Для Каждого Значение Из Форма.КэшОтборПоОборудованию.Автомобили Цикл
			
			Если Форма.КэшОтборПоОпциям.Автомобили.Найти(Значение) <> Неопределено Тогда
				
				ОтборЗначение.Добавить(Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Если НЕ Форма.КэшОтборПоОборудованию.ТолькоИсключения Тогда
			
			Основной = Новый Массив(Форма.КэшОтборПоОборудованию.Автомобили);
			Вычетаемый = Новый Массив(Форма.КэшОтборПоОпциям.Автомобили);
			
		Иначе
			
			Основной = Новый Массив(Форма.КэшОтборПоОпциям.Автомобили);
			Вычетаемый = Новый Массив(Форма.КэшОтборПоОборудованию.Автомобили);
			
		КонецЕсли;
		
		ОтборЗначение = ОбщегоНазначенияКлиентСервер.СократитьМассив(Основной, Вычетаемый);
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"Автомобиль",
		ОтборЗначение,
		ОтборВидСравнения,
		,
		ОтборЗначение <> Неопределено,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СброситьЗначенияБыстрыхОтборов(Форма)
	
	Для Каждого КлючЗначение Из РеквизитыОтборов() Цикл
		
		Форма.Объект[КлючЗначение.Ключ] = Неопределено;
		
	КонецЦикла; 
	
	Для Каждого КлючЗначение Из РеквизитыОтборовСписок() Цикл
		
		Форма.Объект[КлючЗначение.Ключ] = Неопределено;
		
	КонецЦикла;
	
	Для Каждого КлючЗначение Из РеквизитыОтборовСписокЗависимыеОтКомплектации() Цикл
		
		Форма.Объект[КлючЗначение.Ключ] = Неопределено;
		
	КонецЦикла;
	
	Для Каждого КлючЗначение Из ПоляПарныхОтборов() Цикл
		
		Форма.Объект[КлючЗначение.Ключ + "Начало"] = Неопределено;
		Форма.Объект[КлючЗначение.Ключ + "Конец"] = Неопределено;
		
	КонецЦикла;
	
	Форма.Объект.АвтомобильНаСкладе = 0;
	Форма.Объект.АвтомобильВРезерве = 0;
	Форма.Объект.ЗаказыСАвтоработами = Ложь;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СброситьЗначениеОтбораПоОпциям(Форма)
	
	Форма.Объект.ОтборПоОпциям.Очистить();
	Форма.КэшОтборПоОпциям = Неопределено;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СброситьЗначениеОтбораПоОборудованию(Форма)
	
	Форма.Объект.ОтборыПоОборудованию.Очистить();
	Форма.КэшОтборПоОборудованию = Неопределено;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПустойОтборПоТаблице()
	
	Возврат Новый ФиксированнаяСтруктура("ТолькоИсключения,Автомобили", Истина, Новый ФиксированныйМассив(Новый Массив));
	
КонецФункции

&НаСервереБезКонтекста
Функция АвтомобилиОтбораПоОпциям(Знач Опции)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТЗ.Опция КАК Опция,
		|	ТЗ.Количество КАК Количество,
		|	ТЗ.Исключать КАК Исключать
		|ПОМЕСТИТЬ ОпцииОтбор
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОпцииВариантовКомплектации.ВариантКомплектации КАК ВариантКомплектации,
		|	ОпцииВариантовКомплектации.Опция КАК Опция,
		|	ОпцииВариантовКомплектации.Количество КАК Количество
		|ПОМЕСТИТЬ БазовыеОпцииКомплектаций
		|ИЗ
		|	РегистрСведений.ОпцииВариантовКомплектации КАК ОпцииВариантовКомплектации
		|ГДЕ
		|	ОпцииВариантовКомплектации.ВидОпции = ЗНАЧЕНИЕ(Перечисление.ВидыОпцийАвтомобилей.БазоваяОпция)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Автомобили.Ссылка КАК Автомобиль,
		|	БазовыеОпцииКомплектаций.Опция КАК Опция,
		|	БазовыеОпцииКомплектаций.Количество КАК Количество
		|ПОМЕСТИТЬ БазовыеОпцииКомплектацийАвтомобилей
		|ИЗ
		|	Справочник.Автомобили КАК Автомобили
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БазовыеОпцииКомплектаций КАК БазовыеОпцииКомплектаций
		|		ПО Автомобили.ВариантКомплектации = БазовыеОпцииКомплектаций.ВариантКомплектации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ БазовыеОпцииКомплектаций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОпцииАвтомобилей.Автомобиль КАК Автомобиль,
		|	ОпцииАвтомобилей.Опция КАК Опция,
		|	ОпцииАвтомобилей.Количество КАК Количество
		|ПОМЕСТИТЬ ОпцииАвтомобилей
		|ИЗ
		|	РегистрСведений.ОпцииАвтомобилей КАК ОпцииАвтомобилей
		|ГДЕ
		|	ОпцииАвтомобилей.ЗаписьАктивна
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОпцииАвтомобилей.Автомобиль КАК Автомобиль
		|ПОМЕСТИТЬ АвтомобилиСОпциями
		|ИЗ
		|	ОпцииАвтомобилей КАК ОпцииАвтомобилей
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	БазовыеОпцииКомплектацийАвтомобилей.Автомобиль
		|ИЗ
		|	БазовыеОпцииКомплектацийАвтомобилей КАК БазовыеОпцииКомплектацийАвтомобилей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвтомобилиСОпциями.Автомобиль КАК Автомобиль,
		|	ОпцииОтбор.Опция КАК Опция,
		|	ОпцииОтбор.Количество КАК Количество,
		|	ОпцииОтбор.Исключать КАК Исключать
		|ПОМЕСТИТЬ ОпцииОтборСАвтомобилями
		|ИЗ
		|	АвтомобилиСОпциями КАК АвтомобилиСОпциями,
		|	ОпцииОтбор КАК ОпцииОтбор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОпцииОтбор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АвтомобилиСОпциями
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединенныйЗапрос.Автомобиль КАК Автомобиль,
		|	ОбъединенныйЗапрос.Опция КАК Опция,
		|	СУММА(ОбъединенныйЗапрос.Количество) КАК ВНаличии,
		|	СУММА(ОбъединенныйЗапрос.КоличествоТребуется) КАК Требуется,
		|	МАКСИМУМ(ОбъединенныйЗапрос.Исключать) КАК Исключать
		|ПОМЕСТИТЬ СгруппированныеОпции
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОпцииАвтомобилей.Автомобиль КАК Автомобиль,
		|		ОпцииАвтомобилей.Опция КАК Опция,
		|		ОпцииАвтомобилей.Количество КАК Количество,
		|		0 КАК КоличествоТребуется,
		|		ЛОЖЬ КАК Исключать
		|	ИЗ
		|		ОпцииАвтомобилей КАК ОпцииАвтомобилей
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		БазовыеОпцииКомплектацийАвтомобилей.Автомобиль,
		|		БазовыеОпцииКомплектацийАвтомобилей.Опция,
		|		БазовыеОпцииКомплектацийАвтомобилей.Количество,
		|		0,
		|		ЛОЖЬ
		|	ИЗ
		|		БазовыеОпцииКомплектацийАвтомобилей КАК БазовыеОпцииКомплектацийАвтомобилей
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОпцииОтборСАвтомобилями.Автомобиль,
		|		ОпцииОтборСАвтомобилями.Опция,
		|		0,
		|		ОпцииОтборСАвтомобилями.Количество,
		|		ОпцииОтборСАвтомобилями.Исключать
		|	ИЗ
		|		ОпцииОтборСАвтомобилями КАК ОпцииОтборСАвтомобилями) КАК ОбъединенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединенныйЗапрос.Автомобиль,
		|	ОбъединенныйЗапрос.Опция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОпцииАвтомобилей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОпцииОтборСАвтомобилями
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СгруппированныеОпции.Автомобиль КАК Автомобиль,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА СгруппированныеОпции.Исключать
		|				ТОГДА СгруппированныеОпции.ВНаличии < СгруппированныеОпции.Требуется
		|			ИНАЧЕ СгруппированныеОпции.ВНаличии >= СгруппированныеОпции.Требуется
		|		КОНЕЦ) КАК Подходит
		|ПОМЕСТИТЬ ИтоговаяТаблица
		|ИЗ
		|	СгруппированныеОпции КАК СгруппированныеОпции
		|
		|СГРУППИРОВАТЬ ПО
		|	СгруппированныеОпции.Автомобиль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СгруппированныеОпции
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИтоговаяТаблица.Автомобиль КАК Автомобиль
		|ИЗ
		|	ИтоговаяТаблица КАК ИтоговаяТаблица
		|ГДЕ
		|	ИтоговаяТаблица.Подходит
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтоговаяТаблица.Автомобиль КАК Автомобиль
		|ИЗ
		|	ИтоговаяТаблица КАК ИтоговаяТаблица
		|ГДЕ
		|	НЕ ИтоговаяТаблица.Подходит"
	);
	
	Запрос.УстановитьПараметр("ТЗ", Опции.Выгрузить());
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура;
	Результат.Вставить(
		"ТолькоИсключения",
		Опции.НайтиСтроки(Новый Структура("Исключать", Истина)).Количество() = Опции.Количество()
	);
	
	Если Результат.ТолькоИсключения Тогда
		
		Список = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выгрузить().ВыгрузитьКолонку("Автомобиль");
		
	Иначе
		
		Список = РезультатыЗапроса[РезультатыЗапроса.ВГраница() - 1].Выгрузить().ВыгрузитьКолонку("Автомобиль");
		
	КонецЕсли;
	
	Результат.Вставить("Автомобили", Новый ФиксированныйМассив(Список));
	Возврат Новый ФиксированнаяСтруктура(Результат);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьКэшОтбораПоОпциям()
	
	Если ЗначениеЗаполнено(Объект.ОтборПоОпциям) Тогда
		
		КэшОтборПоОпциям = АвтомобилиОтбораПоОпциям(Объект.ОтборПоОпциям);
		Возврат;
		
	КонецЕсли;
	
	КэшОтборПоОпциям = ПустойОтборПоТаблице();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АвтомобилиОтбораПоОборудованию(Знач Оборудование)
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТЗ.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	ТЗ.Колонки.Добавить("Исключать", Новый ОписаниеТипов("Булево"));
	ТолькоИсключения = Истина;
	
	Для Каждого Номенклатура Из Оборудование Цикл
		
		ТолькоИсключения = ТолькоИсключения И Номенклатура.Исключать;
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Номенклатура);
		НоваяСтрока.Количество = Номенклатура.Количество * Номенклатура.Коэффициент;
		
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТЗ.Номенклатура КАК Номенклатура,
	|	ТЗ.Количество КАК Количество,
	|	ТЗ.Исключать КАК Исключать
	|ПОМЕСТИТЬ ОборудованиеОтбор
	|ИЗ
	|	&ТЗОборудование КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КомплектацияАвтомобилейОстатки.Автомобиль КАК Автомобиль,
	|	КомплектацияАвтомобилейОстатки.Номенклатура КАК Номенклатура,
	|	КомплектацияАвтомобилейОстатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ОбрудованиеАвтомобилей
	|ИЗ
	|	РегистрНакопления.КомплектацияАвтомобилей.Остатки КАК КомплектацияАвтомобилейОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбрудованиеАвтомобилей.Автомобиль КАК Автомобиль
	|ПОМЕСТИТЬ АвтомобилиСОборудованием
	|ИЗ
	|	ОбрудованиеАвтомобилей КАК ОбрудованиеАвтомобилей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвтомобилиСОборудованием.Автомобиль КАК Автомобиль,
	|	ОборудованиеОтбор.Номенклатура КАК Номенклатура,
	|	ОборудованиеОтбор.Количество КАК Количество,
	|	ОборудованиеОтбор.Исключать КАК Исключать
	|ПОМЕСТИТЬ ОборудованиеОтборСАвтомобилями
	|ИЗ
	|	АвтомобилиСОборудованием КАК АвтомобилиСОборудованием,
	|	ОборудованиеОтбор КАК ОборудованиеОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОборудованиеОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АвтомобилиСОборудованием
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Автомобиль КАК Автомобиль,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	СУММА(ВложенныйЗапрос.Количество) КАК ВНаличии,
	|	СУММА(ВложенныйЗапрос.КоличествоТребуется) КАК Требуется,
	|	ВложенныйЗапрос.Исключать КАК Исключать
	|ПОМЕСТИТЬ СгруппированоеОборудование
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбрудованиеАвтомобилей.Автомобиль КАК Автомобиль,
	|		ОбрудованиеАвтомобилей.Номенклатура КАК Номенклатура,
	|		ОбрудованиеАвтомобилей.Количество КАК Количество,
	|		0 КАК КоличествоТребуется,
	|		ЛОЖЬ КАК Исключать
	|	ИЗ
	|		ОбрудованиеАвтомобилей КАК ОбрудованиеАвтомобилей
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборудованиеОтборСАвтомобилями.Автомобиль,
	|		ОборудованиеОтборСАвтомобилями.Номенклатура,
	|		0,
	|		ОборудованиеОтборСАвтомобилями.Количество,
	|		ОборудованиеОтборСАвтомобилями.Исключать
	|	ИЗ
	|		ОборудованиеОтборСАвтомобилями КАК ОборудованиеОтборСАвтомобилями) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Автомобиль,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Исключать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбрудованиеАвтомобилей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОборудованиеОтборСАвтомобилями
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СгруппированоеОборудование.Автомобиль КАК Автомобиль,
	|	МИНИМУМ(ВЫБОР
	|		КОГДА СгруппированоеОборудование.Исключать
	|			ТОГДА СгруппированоеОборудование.ВНаличии < СгруппированоеОборудование.Требуется
	|		ИНАЧЕ СгруппированоеОборудование.ВНаличии >= СгруппированоеОборудование.Требуется
	|	КОНЕЦ) КАК Подходит
	|ПОМЕСТИТЬ ИтоговаяТаблицаОборудование
	|ИЗ
	|	СгруппированоеОборудование КАК СгруппированоеОборудование
	|СГРУППИРОВАТЬ ПО
	|	СгруппированоеОборудование.Автомобиль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СгруппированоеОборудование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИтоговаяТаблицаОборудование.Автомобиль КАК Автомобиль
	|ИЗ
	|	ИтоговаяТаблицаОборудование КАК ИтоговаяТаблицаОборудование
	|ГДЕ
	|	ИтоговаяТаблицаОборудование.Подходит
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТаблицаОборудование.Автомобиль КАК Автомобиль
	|ИЗ
	|	ИтоговаяТаблицаОборудование КАК ИтоговаяТаблицаОборудование
	|ГДЕ
	|	НЕ ИтоговаяТаблицаОборудование.Подходит");
	
	Запрос.УстановитьПараметр("ТЗОборудование", ТЗ);
	РезультатыЗапроса = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	Результат = Новый Структура;
	Результат.Вставить("ТолькоИсключения", ТолькоИсключения);
	
	Если ТолькоИсключения Тогда
		
		Список = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выгрузить().ВыгрузитьКолонку("Автомобиль");
		
	Иначе
		
		Список = РезультатыЗапроса[РезультатыЗапроса.ВГраница() - 1].Выгрузить().ВыгрузитьКолонку("Автомобиль");
		
	КонецЕсли;
	
	Результат.Вставить("Автомобили", Новый ФиксированныйМассив(Список));
	Возврат Новый ФиксированнаяСтруктура(Результат);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьКэшОтбораПоОборудованию()
	
	Если ЗначениеЗаполнено(Объект.ОтборыПоОборудованию) Тогда
		
		КэшОтборПоОборудованию = АвтомобилиОтбораПоОборудованию(Объект.ОтборыПоОборудованию);
		Возврат;
		
	КонецЕсли;
	
	КэшОтборПоОборудованию = ПустойОтборПоТаблице();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьОтбораПодразделение() 
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПодразделениеКомпании",
		"Видимость",
		НЕ Объект.ИспользоватьПодразделениеВСписке
	); 

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПодразделениеКомпанииСписок",
		"Видимость",
		Объект.ИспользоватьПодразделениеВСписке
	);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьВидимостьЭлементовСвязанныхСКомплектацией(Форма)
	
	ОтображатьПараметрыИзКомплектации = НЕ Форма.Объект.ВариантКомплектации.Пустая();
	
	Форма.Элементы.ТипКПП.Видимость                                       = НЕ ОтображатьПараметрыИзКомплектации;
	Форма.Элементы.ВариантКомплектацииТипКПП.Видимость                    = ОтображатьПараметрыИзКомплектации;
	Форма.Элементы.ВидКПП.Видимость                                       = НЕ ОтображатьПараметрыИзКомплектации;
	Форма.Элементы.ВариантКомплектацииТипКППВид.Видимость                 = ОтображатьПараметрыИзКомплектации;
	Форма.Элементы.ТипКузова.Видимость                                    = НЕ ОтображатьПараметрыИзКомплектации;
	Форма.Элементы.ВариантКомплектацииТипКузова.Видимость                 = ОтображатьПараметрыИзКомплектации;
	Форма.Элементы.ТипТоплива.Видимость                                   = НЕ ОтображатьПараметрыИзКомплектации;
	Форма.Элементы.ВариантКомплектацииМодельДвигателяТипТоплива.Видимость = ОтображатьПараметрыИзКомплектации;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоЗаказНарядам(Форма)
	
	НеактивныеСостояния = Новый Массив;
	НеактивныеСостояния.Добавить(ПредопределенноеЗначение("Справочник.ВидыСостоянийЗаказНарядов.Выполнен"));
	НеактивныеСостояния.Добавить(ПредопределенноеЗначение("Справочник.ВидыСостоянийЗаказНарядов.Закрыт"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.ЗаказНарядыАвтомобиля,
		"Состояние",
		НеактивныеСостояния,
		ВидСравненияКомпоновкиДанных.НеВСписке,
		,
		Форма.ОтборПоЗаказНарядам = 0, // Использовать, если выбраны только активные ЗН 
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция МаркаМодели(Модель)
	
	Если ЗначениеЗаполнено(Модель) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Модель, "Марка");
	КонецЕсли;
	
	Возврат Справочники.Марки.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция БазовыйТипЦен(ТипЦен)
	
	КоэффициентРасчетаЦены = 1;
	
	// Если расчетная цена получим базовую цену
	Пока ТипЦен.Рассчитывается Цикл
		
		ВрКоэф = 1;
		Если ТипЦен.ПроцентСкидкиНаценки <> 0 Тогда
			
			ВрКоэф = 1 + ТипЦен.ПроцентСкидкиНаценки / 100;
			
		КонецЕсли;
		
		КоэффициентРасчетаЦены = КоэффициентРасчетаЦены * ВрКоэф;
		ТипЦен = ТипЦен.БазовыйТипЦен;
		
	КонецЦикла;
	
	Возврат КоэффициентРасчетаЦены;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныеНоменклатуры(Номенклатура)
	
	Результат = ДанныеПустойНоменклатуры();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Номенклатура.ОсновнаяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Номенклатура.ОсновнаяЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|	ВЫБОР
	|		КОГДА Номенклатура.ТипНоменклатуры.ИспользованиеЕдиницИзмерения = 1
	|			ТОГДА Номенклатура.ТипНоменклатуры
	|		ИНАЧЕ Номенклатура.Ссылка
	|	КОНЕЦ КАК ВладелецЕдиницыИзмерения
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура");
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДанныеПустойНоменклатуры()
	
	Возврат Новый Структура("ЕдиницаИзмерения,Коэффициент,ВладелецЕдиницыИзмерения", Неопределено, 0, Неопределено);
	
КонецФункции

&НаСервере
Функция УпаковатьОтборыДляСохранения()
	
	БыстрыеОтборы = Новый Структура;
	
	Для Каждого Реквизит Из РеквизитыОтборов() Цикл
		
		Если ЗначениеЗаполнено(Объект[Реквизит.Ключ]) Тогда
			
			БыстрыеОтборы.Вставить(Реквизит.Ключ, Объект[Реквизит.Ключ]);
			
		КонецЕсли;
		
	КонецЦикла; 
	
	Для Каждого Реквизит Из РеквизитыОтборовСписок() Цикл
		
		Если ЗначениеЗаполнено(Объект[Реквизит.Ключ]) Тогда
			
			БыстрыеОтборы.Вставить(Реквизит.Ключ, Объект[Реквизит.Ключ]);
			
		КонецЕсли;
		
	КонецЦикла; 
	
		Для Каждого Реквизит Из РеквизитыОтборовСписокЗависимыеОтКомплектации() Цикл
		
		Если ЗначениеЗаполнено(Объект[Реквизит.Ключ]) Тогда
			
			БыстрыеОтборы.Вставить(Реквизит.Ключ, Объект[Реквизит.Ключ]);
			
		КонецЕсли;
		
	КонецЦикла;
	
	БыстрыеОтборы.Вставить("ЗаказыСАвтоработами", Объект.ЗаказыСАвтоработами);
	БыстрыеОтборы.Вставить("АвтомобильНаСкладе", Объект.АвтомобильНаСкладе);
	БыстрыеОтборы.Вставить("АвтомобильВРезерве", Объект.АвтомобильВРезерве);
	
	Опции = Новый Структура;
	Опции.Вставить("Таблица", ОбщегоНазначения.ТаблицаЗначенийВМассив(Объект.ОтборПоОпциям.Выгрузить()));
	Опции.Вставить("Кэш", КэшОтборПоОпциям);
	
	Оборудование = Новый Структура;
	Оборудование.Вставить("Таблица", ОбщегоНазначения.ТаблицаЗначенийВМассив(Объект.ОтборыПоОборудованию.Выгрузить()));
	Оборудование.Вставить("Кэш", КэшОтборПоОборудованию);
	
	Возврат Новый Структура("БыстрыеОтборы,Опции,Оборудование", БыстрыеОтборы, Опции, Оборудование);
	
КонецФункции

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элементы.ГруппаСозданиеНаОсновании.Видимость = Ложь Тогда
		Если НЕ Элементы.Список.ТекущиеДанные = Неопределено Тогда
			Закрыть(Элементы.Список.ТекущиеДанные.Автомобиль);
		КонецЕсли;
	Иначе
		ПараметрыФормы = Новый Структура("Ключ", Элементы.Список.ТекущиеДанные.Автомобиль);
		ОткрытьФорму("Справочник.Автомобили.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуАвто(Команда)
	
	Если НЕ Элементы.Список.ТекущиеДанные = Неопределено Тогда
		ПараметрыФормы = Новый Структура("Ключ", Элементы.Список.ТекущиеДанные.Автомобиль);
		ОткрытьФорму("Справочник.Автомобили.ФормаОбъекта", ПараметрыФормы); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СписокПриАктивизацииСтроки(Результат, ДополнительныеПараметры) Экспорт
	
	СписокПриАктивизацииСтроки(Элементы.Список);
	
КонецПроцедуры

#КонецОбласти
