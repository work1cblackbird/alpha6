
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрошлыйМесяц = ДобавитьМесяц(ТекущаяДатаСеанса(), -1);
	Период.ДатаНачала 		= НачалоМесяца(ПрошлыйМесяц);
	Период.ДатаОкончания	= КонецМесяца(ПрошлыйМесяц);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ВариантОформления = 1; // По дням
	
	ЗаполнитьКОформлению();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	Период.ДатаНачала		= НачалоДня(Период.ДатаНачала);
	Период.ДатаОкончания	= ?(ЗначениеЗаполнено(Период.ДатаОкончания),
		КонецДня(Период.ДатаОкончания),
		Период.ДатаОкончания);
	
	Если Период.ДатаНачала > Период.ДатаОкончания
		И ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		
		ТекстСообщения = НСтр("ru = 'Дата начала периода не может быть больше даты окончания периода'");
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "Период");
		
		Период.ДатаОкончания = КонецМесяца(Период.ДатаНачала);
		
	КонецЕсли;
	
	ЗаполнитьКОформлению();

КонецПроцедуры

&НаКлиенте
Процедура ВариантОформленияПриИзменении(Элемент)
	
	ЗаполнитьКОформлению();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияОтправительПриИзменении(Элемент)

	ЗаполнитьКОформлению();

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПолучательПриИзменении(Элемент)

	ЗаполнитьКОформлению();

КонецПроцедуры

&НаКлиенте
Процедура СкладКомпанииПриИзменении(Элемент)
	
	ЗаполнитьКОформлению();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЗапретаИзмененияДанныхОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ИспользоватьДатыЗапретаИзменения() Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Перед настройкой требуется включить функционал в пункте меню:
			|""Администрирование"" -> ""Настройки пользователей и прав"" -> ""Даты запрета изменения"".'"));
		
		Возврат;
		
	КонецЕсли;
	
	МодульДатыЗапретаИзмененияСлужебныйКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ДатыЗапретаИзмененияСлужебныйКлиент");
	МодульДатыЗапретаИзмененияСлужебныйКлиент.ОткрытьДатыЗапретаИзмененияДанных(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПоВосстановлениюПоследовательности(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Обработка.ВосстановлениеПоследовательностей.Форма");

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЕстьПередачиЗаБолееРанниеПериоды(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОтключитьВсеОтборы();
	
	ЗаполнитьКОформлению();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияИсправитьОтрицательныеОстатки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДлительнаяОперация = ИсправитьОтрицательныеОстаткиПоТоварамКПередачеНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ИсправитьОтрицательныеОстаткиПоТоварамКПередачеЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКОформлению

&НаКлиенте
Процедура КОформлениюПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьКОформлению();

КонецПроцедуры

&НаКлиенте
Процедура ОформитьДокумент(Команда)
	
	Строка = Элементы.КОформлению.ТекущиеДанные;
	
	Если Строка = Неопределено Тогда
		ПоказатьПредупреждение( , НСтр("ru = 'Выберите документ для оформления'"));
		Возврат;
	КонецЕсли;
	
	Если ВариантОформления = 1 Тогда // По дням
		НачалоПериода 	= Строка.Период;
		КонецПериода 	= Мин(КонецДня(Строка.Период), ОбщегоНазначенияКлиент.ДатаСеанса());
	Иначе // По месяцам
		НачалоПериода 	= НачалоМесяца(Строка.Период);
		КонецПериода 	= Мин(КонецМесяца(Строка.Период), ОбщегоНазначенияКлиент.ДатаСеанса());
	КонецЕсли;
	
	НастройкаИнтеркампани = ПолучитьНастройкуПередачиТоваровМеждуОрганизациями(КонецПериода, Строка.ОрганизацияОтправитель, Строка.ОрганизацияПолучатель);
	
	Если НастройкаИнтеркампани = Неопределено Тогда
		
		ПоказатьПредупреждение( , СтрШаблон(НСтр("ru = 'Не заданы настройки передачи товаров между организациями <%1> и <%2> на дату <%3>'"),
			Строка.ОрганизацияОтправитель,
			Строка.ОрганизацияПолучатель,
			Формат(КонецПериода, "ДЛФ=Д")));
			
			Возврат;
		
	КонецЕсли;
	
	СтруктураПолейШапки = Новый Структура();
	СтруктураПолейШапки.Вставить("НачалоПериода", НачалоПериода);
	СтруктураПолейШапки.Вставить("КонецПериода", КонецПериода);
	СтруктураПолейШапки.Вставить("ХозОперация", Строка.ХозОперация);
	СтруктураПолейШапки.Вставить("СкладКомпании", Строка.СкладКомпании);
	СтруктураПолейШапки.Вставить("ОрганизацияОтправитель", Строка.ОрганизацияОтправитель);
	СтруктураПолейШапки.Вставить("ОрганизацияПолучатель", Строка.ОрганизацияПолучатель);
	СтруктураПолейШапки.Вставить("Контрагент", НастройкаИнтеркампани.Контрагент);
	СтруктураПолейШапки.Вставить("ДоговорВзаиморасчетов", НастройкаИнтеркампани.ДоговорВзаиморасчетов);
	СтруктураПолейШапки.Вставить("КонтрагентПоставки", НастройкаИнтеркампани.КонтрагентПоставки);
	СтруктураПолейШапки.Вставить("ДоговорВзаиморасчетовПоставки", НастройкаИнтеркампани.ДоговорВзаиморасчетовПоставки);
	СтруктураПолейШапки.Вставить("ПодразделениеКомпании", НастройкаИнтеркампани.ПодразделениеКомпании);
	СтруктураПолейШапки.Вставить("ТипЦен", НастройкаИнтеркампани.ТипЦен);
	СтруктураПолейШапки.Вставить("Валюта", НастройкаИнтеркампани.Валюта);
	
	Основание = Новый Структура;
	Основание.Вставить("ПоляШапки", СтруктураПолейШапки);
		
	ДопПараметры = Новый Структура("Основание", Основание); 
	
	СуществующиеДокументыПередачиТоваров = ПолучитьДокументыПередачиТоваровЗаВыбранныйПериод(
		СтруктураПолейШапки.НачалоПериода,
		СтруктураПолейШапки.КонецПериода, 
		СтруктураПолейШапки.СкладКомпании,
		СтруктураПолейШапки.ОрганизацияОтправитель,
		СтруктураПолейШапки.ОрганизацияПолучатель);
		
	ЭтоВозврат = СтруктураПолейШапки.ХозОперация <> ПредопределенноеЗначение("Справочник.ХозОперации.ПередачаТоваровМеждуОрганизациями");
		
	Если СуществующиеДокументыПередачиТоваров.Количество() = 0 Тогда
		
		Если ЭтоВозврат Тогда
			
			// Что-то пошло не так (должен быть существующий документ)
			ПоказатьПредупреждение( , НСтр("ru = 'Требуется перезаполнить уже существующий документ передачи товаров'"));
			Возврат;
			
		Иначе
			
			ОткрытьФорму("Документ.ПередачаТоваровМеждуОрганизациями.ФормаОбъекта", ДопПараметры, ЭтотОбъект);
			
		КонецЕсли;
		
	Иначе
		
		ЗаголовокДиалога = НСтр("ru = 'Оформление документа передачи товаров'");
		
		КолВоСуществующихДокументов = СуществующиеДокументыПередачиТоваров.Количество();
		
		Кнопки = Новый СписокЗначений;
		
		Если КолВоСуществующихДокументов > 1 Тогда
			Кнопки.Добавить(КодВозвратаДиалога.Прервать, НСтр("ru = 'Выбрать из списка'"));
			КнопкаПоУмолчанию = КодВозвратаДиалога.Прервать; // Выбрать из списка
		Иначе
			КнопкаПоУмолчанию = КодВозвратаДиалога.Да; // Открыть документ
		КонецЕсли;
		
		Если ЭтоВозврат Тогда
			
			ТекстВопроса = СтрШаблон(НСтр("ru = 'Требуется перезаполнить уже существующий документ передачи товаров, а не создавать новый
												|Уже создано документов: %1'"), КолВоСуществующихДокументов);
		
			Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Открыть документ'"));
			Кнопки.Добавить(КодВозвратаДиалога.Отмена);
			
		Иначе
		
			ТекстВопроса = СтрШаблон(НСтр("ru = 'Можно перезаполнить существующий документ, а не создавать новый
												|Уже создано документов: %1'"), КолВоСуществующихДокументов);
			
			Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Открыть документ'"));
			Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Создать новый'"));
			Кнопки.Добавить(КодВозвратаДиалога.Отмена);
			
		КонецЕсли;
		
		ДопПараметры.Вставить("СуществующийДокументПередачиТоваров", СуществующиеДокументыПередачиТоваров[0]);
				
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ОформитьДокументПослеВопроса",
			ЭтотОбъект, ДопПараметры),
		ТекстВопроса, Кнопки, , КнопкаПоУмолчанию, ЗаголовокДиалога);
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИсправитьОтрицательныеОстатки

&НаСервере
Функция ИсправитьОтрицательныеОстаткиПоТоварамКПередачеНаСервере()
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("ДатаНачала", Период.ДатаНачала);
	ПараметрыЗапуска.Вставить("ДатаОкончания", ?(ЗначениеЗаполнено(Период.ДатаОкончания), КонецДня(Период.ДатаОкончания), Период.ДатаОкончания));
	ПараметрыЗапуска.Вставить("СкладКомпании", СкладКомпании);
	ПараметрыЗапуска.Вставить("ОрганизацияОтправитель", ОрганизацияОтправитель);
	ПараметрыЗапуска.Вставить("ОрганизацияПолучатель", ОрганизацияПолучатель);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "Обработки.ПередачиТоваровМеждуОрганизациямиКОформлению.ИсправитьОтрицательныеОстаткиПоТоварамКПередаче",
		ПараметрыЗапуска);
		
КонецФункции

&НаКлиенте
Процедура ИсправитьОтрицательныеОстаткиПоТоварамКПередачеЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Или Результат.Статус = "Отменено" Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, Результат.КраткоеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если РезультатВыполнения.Ошибки <> Неопределено Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(РезультатВыполнения.Ошибки);	
	
	КонецЕсли;	
	
	ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Перепроведено документов %1 из %2'"),
		РезультатВыполнения.ПроведеноДокументов,
		РезультатВыполнения.ВсегоДокументов
	));
	
	ЗаполнитьКОформлению();
	
КонецПроцедуры
	
#КонецОбласти

&НаКлиенте
Процедура ОформитьДокументПослеВопроса(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда // Открыть существующий
		
		СуществующийДокументПередачиТоваров = ДопПараметры.СуществующийДокументПередачиТоваров;
		ПоказатьЗначение(, СуществующийДокументПередачиТоваров);
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда // Создать новый
		
		ОткрытьФорму("Документ.ПередачаТоваровМеждуОрганизациями.ФормаОбъекта", ДопПараметры, ЭтотОбъект);
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Прервать Тогда // Выбрать из списка
		
		ОткрытьФорму("Документ.ПередачаТоваровМеждуОрганизациями.ФормаСписка", ДопПараметры, ЭтотОбъект);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНастройкуПередачиТоваровМеждуОрганизациями(Период, ОрганизацияОтправитель, ОрганизацияПолучатель)
	
	Результат = Неопределено;
	
	Отбор = Новый Структура();
	Отбор.Вставить("ОрганизацияОтправитель", ОрганизацияОтправитель);
	Отбор.Вставить("ОрганизацияПолучатель", ОрганизацияПолучатель);
	
	НастройкаИнтеркампани = РегистрыСведений.НастройкиПередачиТоваровМеждуОрганизациями.ПолучитьПоследнее(Период, Отбор);
	
	Если НастройкаИнтеркампани.Количество() > 0
		И НастройкаИнтеркампани.СпособПередачиТоваров = Перечисления.СпособыПередачиТоваров.Продажа Тогда
		
		Результат = НастройкаИнтеркампани;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьКОформлению()
	
	НачалоПериода 	= НачалоДня(Период.ДатаНачала);
	КонецПериода 	= ?(ЗначениеЗаполнено(Период.ДатаОкончания), КонецДня(Период.ДатаОкончания), Период.ДатаОкончания);
	
	Запрос = Новый Запрос;	
	Запрос.УстановитьПараметр("ОрганизацияОтправитель", ОрганизацияОтправитель);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("СкладКомпании", СкладКомпании);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("ПоВсемСкладам", НЕ ЗначениеЗаполнено(СкладКомпании));
	Запрос.УстановитьПараметр("ПоВсемОтправителям", НЕ ЗначениеЗаполнено(ОрганизацияОтправитель));
	Запрос.УстановитьПараметр("ПоВсемПолучателям", НЕ ЗначениеЗаполнено(ОрганизацияПолучатель));
	
	Запрос.Текст = ТекстЗапросаКОформлению(ВариантОформления);
	
	ТаблКОформлению = Запрос.Выполнить().Выгрузить();
	КОформлению.Загрузить(ТаблКОформлению);
	
	ОбновитьДекорации();

КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстЗапросаКОформлению(ВариантОформления)

	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТоварыОрганизацийКПередачеОбороты.ПериодДень КАК Период,
		|	ТоварыОрганизацийКПередачеОбороты.ОрганизацияОтправитель КАК ОрганизацияОтправитель,
		|	ТоварыОрганизацийКПередачеОбороты.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
		|	ТоварыОрганизацийКПередачеОбороты.СкладКомпании КАК СкладКомпании,
		|	ТоварыОрганизацийКПередачеОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацийКПередачеОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ТоварыОрганизацийКПередачеОбороты.ГТД КАК ГТД,
		|	СУММА(ТоварыОрганизацийКПередачеОбороты.КоличествоОборот) КАК КоличествоОборот
		|ПОМЕСТИТЬ втКОформлениюПоНоменклатуре
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			(&ПоВсемСкладам
		|				ИЛИ СкладКомпании = &СкладКомпании)
		|				И (&ПоВсемОтправителям
		|					ИЛИ ОрганизацияОтправитель = &ОрганизацияОтправитель)
		|				И (&ПоВсемПолучателям
		|					ИЛИ ОрганизацияПолучатель = &ОрганизацияПолучатель)) КАК ТоварыОрганизацийКПередачеОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыОрганизацийКПередачеОбороты.ПериодДень,
		|	ТоварыОрганизацийКПередачеОбороты.ХарактеристикаНоменклатуры,
		|	ТоварыОрганизацийКПередачеОбороты.ОрганизацияОтправитель,
		|	ТоварыОрганизацийКПередачеОбороты.Номенклатура,
		|	ТоварыОрганизацийКПередачеОбороты.СкладКомпании,
		|	ТоварыОрганизацийКПередачеОбороты.ОрганизацияПолучатель,
		|	ТоварыОрганизацийКПередачеОбороты.ГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.ХозОперации.ПередачаТоваровМеждуОрганизациями) КАК ХозОперация,
		|	втКОформлениюПоНоменклатуре.Период КАК Период,
		|	втКОформлениюПоНоменклатуре.ОрганизацияОтправитель КАК ОрганизацияОтправитель,
		|	втКОформлениюПоНоменклатуре.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
		|	втКОформлениюПоНоменклатуре.СкладКомпании КАК СкладКомпании
		|ИЗ
		|	втКОформлениюПоНоменклатуре КАК втКОформлениюПоНоменклатуре
		|ГДЕ
		|	втКОформлениюПоНоменклатуре.КоличествоОборот > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	втКОформлениюПоНоменклатуре.ОрганизацияОтправитель,
		|	втКОформлениюПоНоменклатуре.Период,
		|	втКОформлениюПоНоменклатуре.СкладКомпании,
		|	втКОформлениюПоНоменклатуре.ОрганизацияПолучатель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗНАЧЕНИЕ(Справочник.ХозОперации.ВозвратТоваровПоставщику),
		|	втКОформлениюПоНоменклатуре.Период,
		|	втКОформлениюПоНоменклатуре.ОрганизацияОтправитель,
		|	втКОформлениюПоНоменклатуре.ОрганизацияПолучатель,
		|	втКОформлениюПоНоменклатуре.СкладКомпании
		|ИЗ
		|	втКОформлениюПоНоменклатуре КАК втКОформлениюПоНоменклатуре
		|ГДЕ
		|	втКОформлениюПоНоменклатуре.КоличествоОборот < 0
		|
		|СГРУППИРОВАТЬ ПО
		|	втКОформлениюПоНоменклатуре.ОрганизацияОтправитель,
		|	втКОформлениюПоНоменклатуре.ОрганизацияПолучатель,
		|	втКОформлениюПоНоменклатуре.СкладКомпании,
		|	втКОформлениюПоНоменклатуре.Период";
	
	Если ВариантОформления = 0 Тогда // По месяцам
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".ПериодДень", ".ПериодМесяц");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТребуетсяВосстановлениеГраницыПоследовательности(ДатаОкончания)
	
	ВсеГраницы = Обработки.ВосстановлениеПоследовательностей.КонфигурацияПоследовательностей();
	ГраницыКВосстановлению = Новый Структура;
	ГраницыКВосстановлению.Вставить("ГраницыПартий");
	ГраницыКВосстановлению.Вставить("ГраницыПроизводство");
		
	МинимальнаяДатаГраниц = Обработки.ВосстановлениеПоследовательностей.ПолучитьМинимальнуюДатуГраниц(ВсеГраницы, ГраницыКВосстановлению);
	
	Если МинимальнаяДатаГраниц = Null
		ИЛИ МинимальнаяДатаГраниц = Дата(1, 1, 1) Тогда
		Возврат Ложь;
	ИначеЕсли ДатаОкончания = Дата(1, 1, 1) Тогда
		Возврат Истина;
	Иначе
		Возврат МинимальнаяДатаГраниц < КонецДня(ДатаОкончания);
	КонецЕсли;

КонецФункции

&НаСервере
Процедура ОбновитьДекорации()
	
	Элементы.ГруппаПоОформлениюДокументовЗаМесяц.Видимость = (ВариантОформления = 0);
	
	Элементы.ГруппаПоВосстановлениюПоследовательности.Видимость = ТребуетсяВосстановлениеГраницыПоследовательности(Период.ДатаОкончания);
	
	Элементы.ГруппаЕстьПередачиЗаБолееРанниеПериоды.Видимость = 
		ЕстьБолееРанниеОстаткиПоТоварамОрганизацийКПередаче(Период.ДатаНачала, ВариантОформления);
		
	Элементы.ГруппаИсправитьОтрицательныеОстатки.Видимость = Обработки.ПередачиТоваровМеждуОрганизациямиКОформлению.ЕстьОтрицательныеОстаткиПоТоварамКПередаче(
		Период.ДатаНачала,
		?(ЗначениеЗаполнено(Период.ДатаОкончания), КонецДня(Период.ДатаОкончания), Период.ДатаОкончания),
		СкладКомпании,
		ОрганизацияОтправитель,
		ОрганизацияПолучатель);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьБолееРанниеОстаткиПоТоварамОрганизацийКПередаче(ДатаПроверки, ВариантОформления)
	
	Если ДатаПроверки = Дата(1, 1, 1) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТоварыОрганизацийКПередачеОбороты.КоличествоОборот КАК КоличествоОборот
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче.Обороты(, &ДатаПроверки, День, ) КАК ТоварыОрганизацийКПередачеОбороты
		|ГДЕ
		|	ТоварыОрганизацийКПередачеОбороты.КоличествоОборот <> 0";
	
	Если ВариантОформления = 0 Тогда // По месяцам
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "День", "Месяц");
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаПроверки", ДатаПроверки);
	
	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции

&НаСервере
Процедура ОтключитьВсеОтборы()

	Период.ДатаНачала		= Дата(1, 1, 1);
	Период.ДатаОкончания	= Дата(1, 1, 1);
	СкладКомпании			= Неопределено;
	ОрганизацияОтправитель	= Неопределено;
	ОрганизацияПолучатель	= Неопределено;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользоватьДатыЗапретаИзменения()

	Возврат Константы.ИспользоватьДатыЗапретаИзменения.Получить();

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДокументыПередачиТоваровЗаВыбранныйПериод(НачалоПериода, КонецПериода, СкладКомпании, ОрганизацияОтправитель, ОрганизацияПолучатель)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(ТоварыОрганизацийКПередачеОбороты.Регистратор КАК Документ.ПередачаТоваровМеждуОрганизациями) КАК Ссылка
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			СкладКомпании = &СкладКомпании
		|				И ОрганизацияОтправитель = &ОрганизацияОтправитель
		|				И ОрганизацияПолучатель = &ОрганизацияПолучатель) КАК ТоварыОрганизацийКПередачеОбороты
		|ГДЕ
		|	ТоварыОрганизацийКПередачеОбороты.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СкладКомпании", СкладКомпании);
	Запрос.УстановитьПараметр("ОрганизацияОтправитель", ОрганизацияОтправитель);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", ОрганизацияПолучатель);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции

#КонецОбласти
