#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда 
 
#Область ПрограммныйИнтерфейс

Функция ЕстьОтрицательныеОстаткиПоТоварамКПередаче(ДатаНачала, ДатаОкончания, СкладКомпании, ОрганизацияОтправитель, ОрганизацияПолучатель) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);
	Запрос.УстановитьПараметр("СкладКомпании", СкладКомпании);
	Запрос.УстановитьПараметр("ОрганизацияОтправитель", ОрганизацияОтправитель);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ПоВсемСкладам", НЕ ЗначениеЗаполнено(СкладКомпании));
	Запрос.УстановитьПараметр("ПоВсемОтправителям", НЕ ЗначениеЗаполнено(ОрганизацияОтправитель));
	Запрос.УстановитьПараметр("ПоВсемПолучателям", НЕ ЗначениеЗаполнено(ОрганизацияПолучатель));
	
	Запрос.Текст = ТекстЗапросаЕстьОтрицательныеОстаткиПоТоварамКПередаче();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

Функция ИсправитьОтрицательныеОстаткиПоТоварамКПередаче(Параметры) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", Параметры.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Параметры.ДатаОкончания);
	Запрос.УстановитьПараметр("СкладКомпании", Параметры.СкладКомпании);
	Запрос.УстановитьПараметр("ОрганизацияОтправитель", Параметры.ОрганизацияОтправитель);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", Параметры.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ПоВсемСкладам", НЕ ЗначениеЗаполнено(Параметры.СкладКомпании));
	Запрос.УстановитьПараметр("ПоВсемОтправителям", НЕ ЗначениеЗаполнено(Параметры.ОрганизацияОтправитель));
	Запрос.УстановитьПараметр("ПоВсемПолучателям", НЕ ЗначениеЗаполнено(Параметры.ОрганизацияПолучатель));
	
	Запрос.Текст = ТекстЗапросаОтрицательныеОстаткиПоТоварамКПередаче();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Ошибки = Неопределено;
	
	ТекДок = 0;
	ВсегоДокументов = Выборка.Количество();
	ДатаНачала = ТекущаяДатаСеанса();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
		
		Если НЕ ПерепровестиДокумент(ДокументОбъект, Ошибки) Тогда
			
			ТекстОшибки = СтрШаблон(НСтр("ru = 'Документ «%1» не удалось провести.'"), Выборка.Регистратор);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстОшибки);
			
			//Прервать;
		
		КонецЕсли;
		
		ТекДок = ТекДок + 1;
		
		ПроцентВыполнения = Окр((ТекДок / ВсегоДокументов) * 100, 0);
		
		ВыполняетсяСек		 = ТекущаяДатаСеанса() - ДатаНачала;
		ОсталосьВыполнятьСек = ВыполняетсяСек / ТекДок * (ВсегоДокументов - ТекДок);
		ДатаГотовности		 = ТекущаяДатаСеанса() + ОсталосьВыполнятьСек;
		
		ВыполняетсяМин 		 = Окр(ВыполняетсяСек / 60, 0);
		ОсталосьВыполнятьМин = Окр(ОсталосьВыполнятьСек / 60, 0);
		
		СтрокаСостояния = СтрШаблон("Осталось: %1 мин
									|Будет готово: %2
									|
									|%3",
			ОсталосьВыполнятьМин,
			ДатаГотовности,
			Строка(Выборка.Регистратор));
		
		ДлительныеОперации.СообщитьПрогресс(ПроцентВыполнения, СтрокаСостояния);
		
	КонецЦикла;
	
	РезультатВыполнения = Новый Структура();
	РезультатВыполнения.Вставить("Ошибки", Ошибки);
	РезультатВыполнения.Вставить("ПроведеноДокументов", ТекДок);
	РезультатВыполнения.Вставить("ВсегоДокументов", ВсегоДокументов);
	
	Возврат РезультатВыполнения; 
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПерепровестиДокумент(Документ, Ошибки)
	
	// Если документ не был проведен или не проводится его проводить не нужно.
	Если НЕ Документ.Проведен Тогда
		Возврат Истина;
	КонецЕсли;
	
	ЗаполнитьДополнительныеСвойства(Документ.ДополнительныеСвойства);
	
	Если НЕ Документ.ПроверитьЗаполнение() Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Попытка
		
		Документ.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		
	Исключение
		
		Возврат Ложь;
		
	КонецПопытки;
		
	Возврат Истина;
	
КонецФункции

Процедура ЗаполнитьДополнительныеСвойства(ДополнительныеСвойства)
	
	ДополнительныеСвойства.Вставить("ПроверкаДатыЗапретаИзменения",           Ложь);
	ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения",     Истина);
	ДополнительныеСвойства.Вставить("ПроверкаПроведенияЗаднимЧислом",         Ложь);
	ДополнительныеСвойства.Вставить("ИспользоватьВерсионированиеОбъектов",    Ложь);
	ДополнительныеСвойства.Вставить("ИспользоватьЗначимыеСобытия",            Ложь);
	ДополнительныеСвойства.Вставить("ПроверкаПродажиНижеСебестоимости",       Ложь);
	ДополнительныеСвойства.Вставить("ПроверкаВводаДокументовПоКураторам",     Ложь);
	ДополнительныеСвойства.Вставить("ПроверкаИзмененияПриНаличииПодчиненных", Ложь);
	ДополнительныеСвойства.Вставить("ПроверкаУдаленияПриНаличииПодчиненных",  Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаОтрицательныеОстаткиПоТоварамКПередаче()

	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТоварыОрганизацийКПередачеОбороты.Период КАК ПериодДень,
		|	ТоварыОрганизацийКПередачеОбороты.ОрганизацияОтправитель КАК ОрганизацияОтправитель,
		|	ТоварыОрганизацийКПередачеОбороты.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
		|	ТоварыОрганизацийКПередачеОбороты.СкладКомпании КАК СкладКомпании,
		|	ТоварыОрганизацийКПередачеОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацийКПередачеОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ТоварыОрганизацийКПередачеОбороты.ГТД КАК ГТД,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаОборот КАК СуммаОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаНДСОборот КАК СуммаНДСОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаБезНДСОборот КАК СуммаБезНДСОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаУпрОборот КАК СуммаУпрОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаНДСУпрОборот КАК СуммаНДСУпрОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаБезНДСУпрОборот КАК СуммаБезНДСУпрОборот
		|ПОМЕСТИТЬ втЗависшиеОстаткиПоВсемАналитикам
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			День,
		|			(&ПоВсемСкладам
		|				ИЛИ СкладКомпании = &СкладКомпании)
		|				И (&ПоВсемОтправителям
		|					ИЛИ ОрганизацияОтправитель = &ОрганизацияОтправитель)
		|				И (&ПоВсемПолучателям
		|					ИЛИ ОрганизацияПолучатель = &ОрганизацияПолучатель)) КАК ТоварыОрганизацийКПередачеОбороты
		|ГДЕ
		|	ТоварыОрганизацийКПередачеОбороты.КоличествоОборот = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втЗависшиеОстаткиПоВсемАналитикам.ПериодДень КАК ПериодДень,
		|	втЗависшиеОстаткиПоВсемАналитикам.ОрганизацияОтправитель КАК ОрганизацияОтправитель,
		|	втЗависшиеОстаткиПоВсемАналитикам.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
		|	втЗависшиеОстаткиПоВсемАналитикам.СкладКомпании КАК СкладКомпании,
		|	втЗависшиеОстаткиПоВсемАналитикам.Номенклатура КАК Номенклатура,
		|	втЗависшиеОстаткиПоВсемАналитикам.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	втЗависшиеОстаткиПоВсемАналитикам.ГТД КАК ГТД
		|ПОМЕСТИТЬ втАналитикиДокументовПередачиДляПерепроводки
		|ИЗ
		|	втЗависшиеОстаткиПоВсемАналитикам КАК втЗависшиеОстаткиПоВсемАналитикам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(ТоварыОрганизацийКПередачеОбороты.Регистратор КАК Документ.ПередачаТоваровМеждуОрганизациями) КАК Регистратор,
		|	ТоварыОрганизацийКПередачеОбороты.ПериодСекунда КАК ПериодСекунда
		|ИЗ
		|	втАналитикиДокументовПередачиДляПерепроводки КАК втАналитикиДокументовПередачиДляПерепроводки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче.Обороты(
		|				&НачалоПериода,
		|				&КонецПериода,
		|				Авто,
		|				(&ПоВсемСкладам
		|					ИЛИ СкладКомпании = &СкладКомпании)
		|					И (&ПоВсемОтправителям
		|						ИЛИ ОрганизацияОтправитель = &ОрганизацияОтправитель)
		|					И (&ПоВсемПолучателям
		|						ИЛИ ОрганизацияПолучатель = &ОрганизацияПолучатель)) КАК ТоварыОрганизацийКПередачеОбороты
		|		ПО втАналитикиДокументовПередачиДляПерепроводки.ПериодДень = ТоварыОрганизацийКПередачеОбороты.ПериодДень
		|			И втАналитикиДокументовПередачиДляПерепроводки.ОрганизацияОтправитель = ТоварыОрганизацийКПередачеОбороты.ОрганизацияОтправитель
		|			И втАналитикиДокументовПередачиДляПерепроводки.ОрганизацияПолучатель = ТоварыОрганизацийКПередачеОбороты.ОрганизацияПолучатель
		|			И втАналитикиДокументовПередачиДляПерепроводки.СкладКомпании = ТоварыОрганизацийКПередачеОбороты.СкладКомпании
		|			И втАналитикиДокументовПередачиДляПерепроводки.Номенклатура = ТоварыОрганизацийКПередачеОбороты.Номенклатура
		|			И втАналитикиДокументовПередачиДляПерепроводки.ХарактеристикаНоменклатуры = ТоварыОрганизацийКПередачеОбороты.ХарактеристикаНоменклатуры
		|			И втАналитикиДокументовПередачиДляПерепроводки.ГТД = ТоварыОрганизацийКПередачеОбороты.ГТД
		|			И (ТоварыОрганизацийКПередачеОбороты.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодСекунда,
		|	Регистратор";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЕстьОтрицательныеОстаткиПоТоварамКПередаче()

	ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТоварыОрганизацийКПередачеОбороты.Период КАК Период,
		|	ТоварыОрганизацийКПередачеОбороты.ОрганизацияОтправитель КАК ОрганизацияОтправитель,
		|	ТоварыОрганизацийКПередачеОбороты.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
		|	ТоварыОрганизацийКПередачеОбороты.СкладКомпании КАК СкладКомпании,
		|	ТоварыОрганизацийКПередачеОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацийКПередачеОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ТоварыОрганизацийКПередачеОбороты.ГТД КАК ГТД,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаОборот КАК СуммаОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаНДСОборот КАК СуммаНДСОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаБезНДСОборот КАК СуммаБезНДСОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаУпрОборот КАК СуммаУпрОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаНДСУпрОборот КАК СуммаНДСУпрОборот,
		|	ТоварыОрганизацийКПередачеОбороты.СуммаБезНДСУпрОборот КАК СуммаБезНДСУпрОборот
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			День,
		|			(&ПоВсемСкладам
		|				ИЛИ СкладКомпании = &СкладКомпании)
		|				И (&ПоВсемОтправителям
		|					ИЛИ ОрганизацияОтправитель = &ОрганизацияОтправитель)
		|				И (&ПоВсемПолучателям
		|					ИЛИ ОрганизацияПолучатель = &ОрганизацияПолучатель)) КАК ТоварыОрганизацийКПередачеОбороты
		|ГДЕ
		|	ТоварыОрганизацийКПередачеОбороты.КоличествоОборот = 0";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#КонецЕсли