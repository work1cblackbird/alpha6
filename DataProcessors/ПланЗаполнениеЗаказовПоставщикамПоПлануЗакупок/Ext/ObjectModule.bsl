#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

//@skip-check object-module-export-variable
Перем ДокументОбъект Экспорт; // Документ объект

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполнение документа план операция: планирование.
Процедура ЗаполнитьПлан() Экспорт
	Перем Заказ;
	
	ТаблицаЗначений=ДокументОбъект.Показатели.Выгрузить();

	ЧислоСтрок=ТаблицаЗначений.Количество()-1;
	Если ЧислоСтрок=-1 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Нет данных, на основании которых должно производиться заполнение заказов. Заполните план и затем попробуйте снова.'")
		);
		Возврат;
	КонецЕсли;
		
	ТаблицаЗначений.Сортировать("ВидАналитикиПланирования2");	
	ТекущийКонтрагент=Неопределено;
	ЭтоПервыйДокумент=Истина;
	ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Начало автоматического заполнения заказов поставщикам...'"));
	
	ШаблонСообщения = НСтр("ru = 'Создание документа ""%1"", поставщик: ""%2""...'");
	
	Для Счетчик = 0 По ЧислоСтрок Цикл
		ТекущаяСтрока=ТаблицаЗначений.Получить(Счетчик);
		Если ТекущаяСтрока.ВидАналитикиПланирования2=Неопределено Тогда
			ТекущаяСтрока.ВидАналитикиПланирования2=Справочники.Контрагенты.ОсновнойПоставщик;
			Если ЭтоПервыйДокумент Тогда
				ОбщегоНазначения.СообщитьПользователю(
					НСтр("ru = 'В следующий документ объединяются товары, поставщик которых неизвестен (подставляется «Основной поставщик»)'")
				);
			КонецЕсли;
		КонецЕсли;
		
		Если ТекущаяСтрока.ВидАналитикиПланирования2<>ТекущийКонтрагент Тогда
			Если НЕ ЭтоПервыйДокумент Тогда
				Заказ.Записать();
				ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Документ создан.'"));
			КонецЕсли;
			
			ТекущийКонтрагент=ТекущаяСтрока.ВидАналитикиПланирования2;
			
			// Заполнение шапки документа ЗаказПоставщику.
			Заказ = Документы.ЗаказПоставщику.СоздатьДокумент();
			Заказ.Дата = ТекущаяДатаСеанса();
			Заказ.УстановитьВремя();
			Заказ.УстановитьНовыйНомер();
			ЭтоПервыйДокумент = Ложь;
			
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонСообщения, Заказ, ТекущийКонтрагент));
			
			Заказ.Заполнить(Неопределено);
			Заказ.ХозОперация=Справочники.ХозОперации.ЗаказПоставщику;
			Документы.ЗаказПоставщику.ХозОперацияПриИзменении(Заказ);
			
			Заказ.ВалютаДокумента=Константы.ВалютаУправленческогоУчетаКомпании.Получить();
			Документы.ЗаказПоставщику.ВалютаДокументаПриИзменении(Заказ);
			
			Заказ.Контрагент=ТекущийКонтрагент;
			Документы.ЗаказПоставщику.КонтрагентПриИзменении(Заказ);
			
			Заказ.Организация=ДокументОбъект.Организация;
			Заказ.ПодразделениеКомпании=ДокументОбъект.ПодразделениеКомпании;
			Заказ.СрокПоставки=ДокументОбъект.ДатаКонца;
		КонецЕсли;
		
		// Заполнение ТЧ Товары документа ЗаказПоставщику.
		НоваяСтрокаЗаказа = Заказ.Товары.Добавить();
		
		НоваяСтрокаЗаказа.Номенклатура = ТекущаяСтрока.ВидАналитикиПланирования1;
		Документы.ЗаказПоставщику.ТоварыНоменклатураПриИзменении(НоваяСтрокаЗаказа, Заказ);
		
		НоваяСтрокаЗаказа.Количество = ТекущаяСтрока.ПоказательПлана1;
		Документы.ЗаказПоставщику.ТоварыКоличествоПриИзменении(НоваяСтрокаЗаказа, Заказ);
		
		НоваяСтрокаЗаказа.Цена=ТекущаяСтрока.ПоказательПлана2;
		Документы.ЗаказПоставщику.ТоварыЦенаПриИзменении(НоваяСтрокаЗаказа, Заказ);
		
	КонецЦикла;
	
	Заказ.Записать();
	ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Документ создан.'"));
	
	ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Окончание автоматического заполнения заказов поставщикам.'"));
КонецПроцедуры

#КонецОбласти

#КонецЕсли