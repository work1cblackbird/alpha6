#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Процедура обработки печати.
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ12")
		Или УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ12_Развернутая")
		Или УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ12СФаксимиле") 
		Или УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ12_РазвернутаяСФаксимиле") Тогда
		
		Для каждого Дк Из МассивОбъектов Цикл
		
			Если ЕстьРеквизит(Дк, "ЭтоУниверсальныйДокумент") 
				И Дк.ЭтоУниверсальныйДокумент Тогда
				
				ВывестиСообщение(
				НСтр("ru = 'У документа %1 установлен признак УПД, не рекомендуется печатать ТОРГ-12!'"),
				,,,, Дк);
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ12") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ТОРГ12",
															НСтр("ru = 'ТОРГ-12 (Товарная накладная)'"),
															ПечатьТОРГ12Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ12_Развернутая") Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "ПФ_MXL_ТОРГ12";
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "ПФ_MXL_ТОРГ12";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ТОРГ12",
															НСтр("ru = 'ТОРГ-12 (Товарная накладная)'"),
															ПечатьТОРГ12Общая(МассивОбъектов, ОбъектыПечати, Истина));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ16") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ТОРГ16",
															НСтр("ru = 'ТОРГ-16 (Акт списания товаров)'"),
															ПечатьТОРГ16Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ13") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ТОРГ13",
															НСтр("ru = 'ТОРГ-13 (Накладная на внутреннее перемещение)'"),
															ПечатьТОРГ13Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ТОРГ1",
															НСтр("ru = 'ТОРГ-1 (Акт о приемке товара)'"),
															ПечатьТОРГ1Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ТОРГ2",
															НСтр("ru = 'ТОРГ-2 (Акт о расхождении по количеству и качеству)'"),
															ПечатьТОРГ2Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;													
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ТОРГ4",
															НСтр("ru = 'ТОРГ-4 (Акт о приемке товаров без счета поставщика)'"),
															ПечатьТОРГ4Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;													
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТТН30122011_Приложение4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ТТН30122011_Приложение4",
															НСтр("ru = 'Приложение №4 (Транспортная накладная)'"),
															ПечатьТТНОбщая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТТН") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ПФ_MXL_ТТН",
															НСтр("ru = '1-Т (Товарно-транспортная накладная)'"),
															ПечатьТ1Общая(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
														
КонецПроцедуры 

Функция ПечатьТОРГ12Общая(МассивОбъектов, ОбъектыПечати, ПечататьРазвернутуюВерсию = Ложь, ПараметрыПечати = Неопределено)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Получим валюту регламентированного учета для перерасчета цены и суммы
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		
		// Зададим параметры макета
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб        = Истина;
		
		// получим данные из документа
		Если ПечататьРазвернутуюВерсию Тогда
			ДанныеДокумента =
				ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиТОРГ12Развернутая(Документ);
		Иначе
			ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиТОРГ12(Документ);
		КонецЕсли;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТОРГ12");
		
		НакладнаяЗаПоставщика = ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваров") Или ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеАвтомобилей")
								Или ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеДопРасходов");		
		
		ОбластьЗаголовок        = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги            = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
		Если НакладнаяЗаПоставщика Тогда	
			ОбластьПодвал       = Макет.ПолучитьОбласть("ПодвалЗаПоставщика");
		Иначе
			ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		
		СтруктураПредставления1=Новый Структура;
		СтруктураПредставления1.Вставить("Наименование",     "");
		СтруктураПредставления1.Вставить("ИНН",              "ИНН ");
		СтруктураПредставления1.Вставить("КПП",              "КПП ");
		СтруктураПредставления1.Вставить("АдресЮридический", "");
		СтруктураПредставления1.Вставить("ТелефонРабочий",   "тел.: ");
		СтруктураПредставления1.Вставить("Факс",             "Факс ");
		СтруктураПредставления1.Вставить("БанковскийСчет",   "р/с ");
		СтруктураПредставления1.Вставить("Банк",             НСтр("ru = 'в банке'") + " ");
		СтруктураПредставления1.Вставить("БИК",              "БИК ");
		СтруктураПредставления1.Вставить("КоррСчет",         "к/с ");
		
		СтруктураПредставления2=Новый Структура;
		СтруктураПредставления2.Вставить("Наименование",     "");
		СтруктураПредставления2.Вставить("ИНН",              "ИНН ");
		СтруктураПредставления2.Вставить("КПП",              "КПП ");
		СтруктураПредставления2.Вставить("АдресФактический", "");
		СтруктураПредставления2.Вставить("ТелефонРабочий",   "тел.: ");
		СтруктураПредставления2.Вставить("Факс",             "Факс ");
		СтруктураПредставления2.Вставить("БанковскийСчет",   "р/с ");
		СтруктураПредставления2.Вставить("Банк",             НСтр("ru = 'в банке'") + " ");
		СтруктураПредставления2.Вставить("БИК",              "БИК ");
		СтруктураПредставления2.Вставить("КоррСчет",         "к/с ");
		
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = ДанныеДокумента.Дата;
		Если НЕ ДанныеДокумента.Свойство("Грузоотправитель") Тогда
			ОбластьЗаголовок.Параметры.ПредставлениеОрганизации = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Организация, СтруктураПредставления2, ДополнительныеПараметры);
		Иначе
			ОбластьЗаголовок.Параметры.ПредставлениеОрганизации = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ДанныеДокумента.Грузоотправитель, СтруктураПредставления2, ДополнительныеПараметры);	
		КонецЕсли;
			
		// Подразделение полное наименование
		ОбластьЗаголовок.Параметры.ПодразделениеКомпании = 
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ОбластьЗаголовок.Параметры.ПодразделениеКомпании,
				ДанныеДокумента.Дата);
			
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Поставщик, СтруктураПредставления1, ДополнительныеПараметры);
				
		ОбластьЗаголовок.Параметры.ПредставлениеПлательщика =  УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ОбластьЗаголовок.Параметры.Плательщик, СтруктураПредставления1, ДополнительныеПараметры);
		
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.РасчетныйСчетДокумента = ДанныеДокумента.РасчетныйСчетДокумента;
		ДополнительныеПараметры.ДляПечати = Истина;
		ДополнительныеПараметры.НаДату = ДанныеДокумента.Дата;
		ОбластьЗаголовок.Параметры.ПредставлениеГрузополучателя =
			УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(ОбластьЗаголовок.Параметры.Грузополучатель,
				СтруктураПредставления2, ДополнительныеПараметры);
				
		Если ЗначениеЗаполнено(ОбластьЗаголовок.Параметры.ДокументОснование) Тогда
			Если ОбщегоНазначения.ВидОбъектаПоСсылке(ОбластьЗаголовок.Параметры.ДокументОснование) = "Документ" Тогда
				ОбластьЗаголовок.Параметры.ДокументОснованиеПредставление = 
					УправлениеПечатьюПлатформа.ПолучитьПредставлениеДокумента(ОбластьЗаголовок.Параметры.ДокументОснование);
			Иначе
				ОбластьЗаголовок.Параметры.ДокументОснованиеПредставление = 
					ОбластьЗаголовок.Параметры.ДокументОснование.Наименование;
			КонецЕсли;
		КонецЕсли;
		
		Если ДанныеДокумента.Свойство("ВхДокНомер") И ЗначениеЗаполнено(ДанныеДокумента.ВхДокНомер) Тогда
			ОбластьЗаголовок.Параметры.НомерДокумента 	= ДанныеДокумента.ВхДокНомер;
			ОбластьЗаголовок.Параметры.Дата				= ДанныеДокумента.ВхДокДата;
		Иначе
			ОбластьЗаголовок.Параметры.НомерДокумента = УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(Документ);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Готовим шапку
		НомерСтраницы = 2; НомерСтраницыПредыдущий = 2;
		СтруктураИтоговНаСтранице = Новый Структура;
		СтруктураИтоговНаСтранице.Вставить("ИтогоКоличествоМестНаСтранице", 0);
		СтруктураИтоговНаСтранице.Вставить("ИтогоКоличествоНаСтранице",     0);
		СтруктураИтоговНаСтранице.Вставить("ИтогоСуммаБезНДСНаСтранице",    0);
		СтруктураИтоговНаСтранице.Вставить("ИтогоСуммаНДСНаСтранице",       0);
		СтруктураИтоговНаСтранице.Вставить("ИтогоСуммаСНДСНаСтранице",      0);
		СтруктураИтоговНаСтранице.Вставить("ИтогоМассаБруттоНаСтранице",    0);
		СтруктураИтоговПоСтраницеДополнительно = Новый Структура;
		СтруктураИтоговПоСтраницеДополнительно.Вставить("ИтогоСуммаНДСНаСтранице", "");
		
		ОбластьЗаголовокТаблицы.Параметры.Валюта = ВалютаРегл;
		
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница: 1";

		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница:" + " " + НомерСтраницы;

				
		// Инициализация итогов по документу.
		ИтогоКоличество = 0;
		ИтогоСумма      = 0;
		ИтогоНДС        = 0;
		ИтогоСуммаСНДС  = 0;
		ИтогоКоличествоМест = 0;
		ИтогоМассаБрутто = 0;
		
		ЕстьКоличествоБазовое = Ложь;
		Если ЕстьРеквизит(ДанныеДокумента, "КоличествоБазовое", "ВыборкаТабличнойЧасти") Тогда
			ЕстьКоличествоБазовое = Истина;
		КонецЕсли;

		Если ЕстьРеквизит(ДанныеДокумента.ВыборкаТабличнойЧасти, "СтавкаНДС") Тогда
			ЕстьРеквизитСтавкаНДС = Истина;
		Иначе 
			ЕстьРеквизитСтавкаНДС = Ложь;
		КонецЕсли;
		ЕстьСтрокиСНДС = Ложь;
		ЕстьСтрокиСНДСНаСтранице = Ложь;
		
		НеВыводитьНоменклатуруСНулевымКоличеством = ПолучитьЗначениеПараметраСтруктуры(
			ДанныеДокумента,
			"НеВыводитьНоменклатуруСНулевымКоличеством",
			Ложь);
		
		ПерерасчетВВалюте = Ложь;
		Если ДанныеДокумента.ВалютаДокумента <> ВалютаРегл Тогда
			
			ДокументОбъектСтруктура = УправлениеПечатьюПлатформа.ДанныеДокументаДляПерерасчетаТаблицы();
			ЗаполнитьЗначенияСвойств(ДокументОбъектСтруктура, ДанныеДокумента);
			ДокументОбъектСтруктура.Документ = Документ;
			
			ЗащищенныеФункцииАльфаАвтоСервер.ПерерасчетТаблицыТоваров(ДанныеДокумента.ВыборкаТабличнойЧасти,
				ДокументОбъектСтруктура,
				ВалютаРегл);
			ПерерасчетВВалюте = Истина;
			
		КонецЕсли;
		
		СоответствиеИтоговПоставкамНДС = Новый Соответствие();
		Для Каждого СтрокаТоваров Из ДанныеДокумента.ВыборкаТабличнойЧасти Цикл
			
			Если НеВыводитьНоменклатуруСНулевымКоличеством
				И СтрокаТоваров.Количество = 0 Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			ДанныеСтрокиСтроки = УправлениеПечатьюПлатформа.ЗаполнитьПредставлениеДанныхТоварнойСтроки(
				СтрокаТоваров, Документ, ПолучитьЗначениеПараметраСтруктуры(ДанныеДокумента, "ИмяТабличнойЧасти", "Товары"));
			Если ЕстьРеквизитСтавкаНДС Тогда
				ДанныеСтрокиСтроки.Вставить("СтавкаНДС", УправлениеПечатьюПлатформа.ПолучитьПредставлениеСтавкиНДС(СтрокаТоваров.СтавкаНДС, "%"));
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ДанныеСтрокиСтроки);
			
			// Пересчитаем сумму в соответствии с регламентированной валютой
			Если ПерерасчетВВалюте Тогда
				
				СуммаВсего = СтрокаТоваров.СуммаВсего;
				СуммаНДС = СтрокаТоваров.СуммаНДС;
				
			Иначе
					
				СуммаВсего = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
					СтрокаТоваров.СуммаВсего,
					ДанныеДокумента.ВалютаДокумента,
					ДанныеДокумента.КурсДокумента,
					ВалютаРегл,
					ДанныеДокумента.Дата,
					РежимОкругления.Окр15как20);
				
				ПроцентНДС	= СтрокаТоваров.СтавкаНДС.Ставка;	
				
				Если ЕстьРеквизит(ДанныеДокумента.ВыборкаТабличнойЧасти, "Себестоимость") Тогда

					СуммаНДС = Окр((СуммаВсего - СтрокаТоваров.Себестоимость)* ПроцентНДС / (100 + ПроцентНДС), 2); 
					
				ИначеЕсли ЕстьРеквизит(ДанныеДокумента.ВыборкаТабличнойЧасти, "СуммаНДС") Тогда

					
					// Пересчитаем сумму НДС в соответствии с регламентированной валютой
					СуммаНДС = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
						СтрокаТоваров.СуммаНДС,
						ДанныеДокумента.ВалютаДокумента,
						ДанныеДокумента.КурсДокумента,
						ВалютаРегл,
						ДанныеДокумента.Дата,
						РежимОкругления.Окр15как20
					);
					
				Иначе
					
					СуммаНДС = Окр(СуммаВсего * ПроцентНДС / (100 + ПроцентНДС), 2);   
					
				КонецЕсли;
				
			КонецЕсли;
			
			СуммаБезНДС = СуммаВсего - СуммаНДС;
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТоваров.Номенклатура, "Артикул") Тогда
				ОбластьСтрока.Параметры.ТоварНаименование = ДанныеСтрокиСтроки.ТоварНаименование
					+ ?(ЗначениеЗаполнено(СтрокаТоваров.Номенклатура.Артикул), ", " + СтрокаТоваров.Номенклатура.Артикул, "");
			Иначе
				ОбластьСтрока.Параметры.ТоварНаименование = ДанныеСтрокиСтроки.ТоварНаименование;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТоваров.ЕдиницаИзмерения;
			Если ТипЗнч(СтрокаТоваров.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = СтрокаТоваров.ЕдиницаИзмерения.Код;
			Иначе
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = СтрокаТоваров.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
			КонецЕсли;
			
			Если ЕстьКоличествоБазовое Тогда
				ОбластьСтрока.Параметры.Количество = Формат(СтрокаТоваров.КоличествоБазовое, ФорматВыводаКоличества);
			Иначе
				ОбластьСтрока.Параметры.Количество = Формат(СтрокаТоваров.Количество, ФорматВыводаКоличества);
			КонецЕсли;
			
			ОбластьСтрока.Параметры.КоличествоМест        = Формат(СтрокаТоваров.Количество, ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.КоличествоВОдномМесте = Формат(
				?(СтрокаТоваров.Количество = 0, 0, СтрокаТоваров.Коэффициент), ФорматВыводаКоличества);
			
			ОбластьСтрока.Параметры.МассаБрутто = Формат(ДанныеСтрокиСтроки.МассаБрутто, ФорматВыводаКоличества);
			
			СтрокаТоваровКоэффициент = ?(СтрокаТоваров.Коэффициент = 0, 1, СтрокаТоваров.Коэффициент);
			ЦенаБезНДС = ?(СтрокаТоваров.Количество = 0, 0,
				(СуммаВсего - СуммаНДС) / (СтрокаТоваров.Количество * СтрокаТоваровКоэффициент));
			
			ОбластьСтрока.Параметры.ЦенаБезНДС  = Формат(ЦенаБезНДС,  ФорматВыводаСуммы);
			ОбластьСтрока.Параметры.СуммаБезНДС = Формат(СуммаБезНДС, ФорматВыводаСуммы);
			ОбластьСтрока.Параметры.СуммаВсего  = Формат(СуммаВсего,  ФорматВыводаСуммы);
			Если ЕстьРеквизитСтавкаНДС И СтрокаТоваров.СтавкаНДС = Справочники.СтавкиНДС.БезНДС Тогда 
				ОбластьСтрока.Параметры.СуммаНДС = "";
			Иначе
				ОбластьСтрока.Параметры.СуммаНДС = Формат(СуммаНДС, ФорматВыводаСуммы);
            КонецЕсли;
			
			мсвДопОбластиПодвала = Неопределено;
			ИндексСтроки = ДанныеДокумента.ВыборкаТабличнойЧасти.Индекс(СтрокаТоваров);
			Если ИндексСтроки = ДанныеДокумента.ВыборкаТабличнойЧасти.Количество() - 1 Тогда
				мсвДопОбластиПодвала = Новый Массив;
				мсвДопОбластиПодвала.Добавить(ОбластьВсего);
				мсвДопОбластиПодвала.Добавить(ОбластьПодвал);
			КонецЕсли;
			
			Если ЕстьСтрокиСНДСНаСтранице Тогда
				СтруктураИтоговДополнительно = Неопределено;
			Иначе
				СтруктураИтоговДополнительно = СтруктураИтоговПоСтраницеДополнительно;
			КонецЕсли;
			НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(
				ТабличныйДокумент,
				ОбластьСтрока,
				ОбластьЗаголовокТаблицы,
				ОбластьИтоги,
				НомерСтраницы,
				СтруктураИтоговНаСтранице,
				Документ,
				мсвДопОбластиПодвала,
				СтруктураИтоговДополнительно
			);
			
			// Увеличим итоги по странице
			СтруктураСтрокиИтогов = Новый Структура;
			СтруктураСтрокиИтогов.Вставить("ИтогоКоличествоМестНаСтранице", 0);
			СтруктураСтрокиИтогов.Вставить("ИтогоКоличествоНаСтранице",     0);
			СтруктураСтрокиИтогов.Вставить("ИтогоСуммаБезНДСНаСтранице",    0);
			СтруктураСтрокиИтогов.Вставить("ИтогоСуммаНДСНаСтранице",       0);
			СтруктураСтрокиИтогов.Вставить("ИтогоСуммаСНДСНаСтранице",      0);
			СтруктураСтрокиИтогов.Вставить("ИтогоМассаБруттоНаСтранице",    0);
			
			Если ЕстьКоличествоБазовое Тогда
				СтруктураСтрокиИтогов.ИтогоКоличествоНаСтранице = СтрокаТоваров.КоличествоБазовое;
			Иначе
				СтруктураСтрокиИтогов.ИтогоКоличествоНаСтранице = СтрокаТоваров.Количество;
			КонецЕсли;
			СтруктураСтрокиИтогов.ИтогоМассаБруттоНаСтранице    = ДанныеСтрокиСтроки.МассаБрутто;
			СтруктураСтрокиИтогов.ИтогоКоличествоМестНаСтранице = СтрокаТоваров.Количество;
			СтруктураСтрокиИтогов.ИтогоСуммаБезНДСНаСтранице    = СуммаБезНДС;
			СтруктураСтрокиИтогов.ИтогоСуммаНДСНаСтранице       = СуммаНДС;
			СтруктураСтрокиИтогов.ИтогоСуммаСНДСНаСтранице      = СуммаВсего;
			ИтогоМассаБрутто = ИтогоМассаБрутто + ДанныеСтрокиСтроки.МассаБрутто;
			
			// Инициализация итогов по странице
			Если НомерСтраницы <> НомерСтраницыПредыдущий Тогда
				
				СтруктураИтоговНаСтранице = Новый Структура;
				СтруктураИтоговНаСтранице.Вставить("ИтогоКоличествоМестНаСтранице", 0);
				СтруктураИтоговНаСтранице.Вставить("ИтогоКоличествоНаСтранице",     0);
				СтруктураИтоговНаСтранице.Вставить("ИтогоСуммаБезНДСНаСтранице",    0);
				СтруктураИтоговНаСтранице.Вставить("ИтогоСуммаНДСНаСтранице",       0);
				СтруктураИтоговНаСтранице.Вставить("ИтогоСуммаСНДСНаСтранице",      0);
				СтруктураИтоговНаСтранице.Вставить("ИтогоМассаБруттоНаСтранице",    0);
				
				НомерСтраницыПредыдущий = НомерСтраницы;
				КоличествоСтрокНаТекущейСтранице=0;
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница:" + " " + НомерСтраницы;

				ЕстьСтрокиСНДСНаСтранице = Ложь;
				
			КонецЕсли;

			Если ЕстьРеквизитСтавкаНДС И СтрокаТоваров.СтавкаНДС <> Справочники.СтавкиНДС.БезНДС Тогда 
				ЕстьСтрокиСНДС = Истина;
				ЕстьСтрокиСНДСНаСтранице = Истина;
            КонецЕсли;
			
			// Сформируем итоги по документу
			ИтогоСумма      = ИтогоСумма + СуммаБезНДС;
			ИтогоНДС        = ИтогоНДС + СуммаНДС;
			ИтогоСуммаСНДС  = ИтогоСуммаСНДС + СуммаВсего;
			
			// Добавляем итоги
			УправлениеПечатьюПлатформа.ДобавитьИтогиПоСтранице(СтруктураСтрокиИтогов, СтруктураИтоговНаСтранице);
		КонецЦикла;
		
		// Выводим последний подвал, если страниц больше единицы.
		Если ЕстьСтрокиСНДСНаСтранице = Ложь Тогда
			СтруктураИтоговНаСтранице.ИтогоСуммаНДСНаСтранице = "";
		КонецЕсли;
		УправлениеПечатьюПлатформа.ВывестиИтогиПоСтранице(
				ТабличныйДокумент, ОбластьИтоги, СтруктураИтоговНаСтранице, Документ);
				
		// Выводим итоги по документу в целом.
		Если ЕстьКоличествоБазовое Тогда
			ОбластьВсего.Параметры.ИтогоКоличество = Формат(
				ДанныеДокумента.ВыборкаТабличнойЧасти.Итог("КоличествоБазовое"), ФорматВыводаКоличества);
		Иначе
			ОбластьВсего.Параметры.ИтогоКоличество = Формат(
				ДанныеДокумента.ВыборкаТабличнойЧасти.Итог("Количество"), ФорматВыводаКоличества);
		КонецЕсли;
		ОбластьВсего.Параметры.ИтогоКоличествоМест = Формат(
			ДанныеДокумента.ВыборкаТабличнойЧасти.Итог("Количество"), ФорматВыводаКоличества);
		ОбластьВсего.Параметры.ИтогоМассаБрутто    = Формат(ИтогоМассаБрутто, ФорматВыводаКоличества);
		ОбластьВсего.Параметры.ИтогоСуммаБезНДС    = Формат(ИтогоСумма, ФорматВыводаСуммы);
		Если ЕстьСтрокиСНДС Тогда
			ОбластьВсего.Параметры.ИтогоСуммаНДС       = Формат(ИтогоНДС, ФорматВыводаСуммы);
		Иначе
			ОбластьВсего.Параметры.ИтогоСуммаНДС       = "";
		КонецЕсли;
		ОбластьВсего.Параметры.ИтогоСуммаСНДС      = Формат(ИтогоСуммаСНДС, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьВсего);
		
		// Выводим подвал документа.
		
		Доверенность = ПолучитьСтруктуруОснования(
			ДанныеДокумента.Принял,
			ДанныеДокумента.Дата,
			ДанныеДокумента.Организация
		);
		Если ЗначениеЗаполнено(Доверенность) Тогда
			
			ДанныеДокумента.Вставить("ДоверенностьНомер"  , 
				?(ПустаяСтрока(Доверенность.Серия),"",Доверенность.Серия + "-") + Доверенность.Номер);
			ДанныеДокумента.Вставить("ДоверенностьДата"   , Доверенность.Дата);
			ДанныеДокумента.Вставить("ДоверенностьВыдана"   , Доверенность.ВладелецОснования);
			ДанныеДокумента.Вставить("ДоверенностьЧерезКого" , Доверенность.КемВыдан); 
			
	    КонецЕсли;

		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента);
		ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(
			ДанныеДокумента.ВыборкаТабличнойЧасти.Количество(), , ",,,,,,,,0");
		ОбластьПодвал.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтогоСуммаСНДС, ВалютаРегл);
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента);
		ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(
			ДанныеДокумента.ВыборкаТабличнойЧасти.Количество(), , ",,,,,,,,0");
		ОбластьПодвал.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтогоСуммаСНДС, ВалютаРегл);
		
		Если Не НакладнаяЗаПоставщика Тогда	
			ОбластьПодвал.Параметры.РуководительПредставление = ДанныеДокумента.Руководитель.Представление + 
					 ПолучитьПредставлениеОснования(
					 	ПолучитьСтруктуруОснования( ДанныеДокумента.Руководитель, ДанныеДокумента.Дата, Документ.Организация)
					 ); 	
	        ОбластьПодвал.Параметры.РуководительДолжность = ДанныеДокумента.Руководитель.Должность; 
			ОбластьПодвал.Параметры.ГлавныйБухгалтерПредставление = ДанныеДокумента.ГлавныйБухгалтер.Представление +
				 	 ПолучитьПредставлениеОснования(
					 	ПолучитьСтруктуруОснования( ДанныеДокумента.ГлавныйБухгалтер, ДанныеДокумента.Дата, Документ.Организация)
				   	); 
			
	        ОбластьПодвал.Параметры.ОтпустилПредставление = ДанныеДокумента.Отпустил.Представление + 
					ПолучитьПредставлениеОснования(
						ПолучитьСтруктуруОснования( ДанныеДокумента.Отпустил, ДанныеДокумента.Дата, Документ.Организация)
					);		
			ОбластьПодвал.Параметры.ОтпустилДолжность = ДанныеДокумента.Отпустил.Должность;
		КонецЕсли;
		
		ОбластьПодвал.Параметры.ДатаДокументаДень  = """" + Формат(Документ.Дата,"ДФ=d") + """";
		ОбластьПодвал.Параметры.ДатаДокументаМесяц = Сред(Формат(Документ.Дата, "ДФ=ddММММ"), 3); 
		ОбластьПодвал.Параметры.ДатаДокументаГод   = Формат(Документ.Дата,"ДФ=yyyy") + " года";

		ОбластьПодвал.Параметры.ПринялПредставление = ДанныеДокумента.Принял.Представление; 
		ОбластьПодвал.Параметры.ПринялДолжность = ДанныеДокумента.Принял.Должность;
		
		ОбластьПодвал.Параметры.ПолучилПредставление = ДанныеДокумента.Получил.Представление;  	
		ОбластьПодвал.Параметры.ПолучилДолжность = ДанныеДокумента.Получил.Должность;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);

		// Отметим конец области документа.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ12Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьТОРГ12Общая()

Функция ПечатьТОРГ1Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	
	ПервыйДокумент = Истина; 
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		
		// Зададим параметры макета
		ТабличныйДокумент.ПолеСлева  		 = 15;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабличныйДокумент.АвтоМасштаб        = Истина;
		
		// Получим данные из документа
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиТОРГ1(Документ);
	
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТОРГ1");
		
		ОбластьЗаголовок         = Макет.ПолучитьОбласть("Шапка");
		ОбластьВведение          = Макет.ПолучитьОбласть("Введение");
		ОбластьТаблицаВремени    = Макет.ПолучитьОбласть("ТаблицаВремени");
		ОбластьШапкаТаблицы      = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрока			 = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрокаСертификата = Макет.ПолучитьОбласть("СтрокаСертификата");
		ОбластьИтоги             = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего             = Макет.ПолучитьОбласть("Всего");
		ОбластьПодвал            = Макет.ПолучитьОбласть("Подвал");
		ОбластьСтрока2           = Макет.ПолучитьОбласть("СтрокаТаблицы2");
		ОбластьИтоги2            = Макет.ПолучитьОбласть("ИтогоПоСтранице2");
		ОбластьВсего2            = Макет.ПолучитьОбласть("Всего2");
		ОбластьОсмотрТовара      = Макет.ПолучитьОбласть("ОсмотрТовара");
		ОбластьШапкаТаблицы2     = Макет.ПолучитьОбласть("ЗаголовокТаблицы2");
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		
		СтруктураПредставления1 = Новый Структура;
		СтруктураПредставления1.Вставить("Наименование",     "");
		СтруктураПредставления1.Вставить("ИНН",              "ИНН ");
		СтруктураПредставления1.Вставить("КПП",              "КПП ");
		СтруктураПредставления1.Вставить("АдресЮридический", "");
		СтруктураПредставления1.Вставить("ТелефонРабочий",   "тел.: ");
		
		СтруктураПредставления2 = Новый Структура;
		СтруктураПредставления2.Вставить("Наименование",     "");
		СтруктураПредставления2.Вставить("ИНН",              "ИНН ");
		СтруктураПредставления2.Вставить("КПП",              "КПП ");
		СтруктураПредставления2.Вставить("АдресФактический", "");
		СтруктураПредставления2.Вставить("ТелефонРабочий",   "тел.: ");
		
		// Правим, что автоматом не заполнилось, или заполнилось неправильно.
		
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = Документ.Дата;
		ОбластьЗаголовок.Параметры.ОрганизацияПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ОбластьЗаголовок.Параметры.Организация, СтруктураПредставления1, ДополнительныеПараметры);
			
		ОбластьЗаголовок.Параметры.КодПоОКПО             = ОбластьЗаголовок.Параметры.Организация.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ВидДеятельностиПоОКДП = ОбластьЗаголовок.Параметры.Организация.КодПоОКДП;
		
		// Подразделение полное наименование
		ОбластьЗаголовок.Параметры.ПодразделениеКомпании = 
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ДанныеДокумента.ПодразделениеКомпании, Документ.Дата);
		
		ОбластьЗаголовок.Параметры.Номер = ?(НЕ ЗначениеЗаполнено(ДанныеДокумента.ВхДокНомер),
			ДанныеДокумента.Номер, ДанныеДокумента.ВхДокНомер);
		ОбластьЗаголовок.Параметры.Дата = ?(НЕ ЗначениеЗаполнено(ДанныеДокумента.ВхДокНомер),
			ДанныеДокумента.Дата, ДанныеДокумента.ВхДокДата);
		ОбластьЗаголовок.Параметры.МестоПриемки = ДанныеДокумента.СкладКомпании;
		
		// Заполним информацию о руководителе организации.
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента.Руководитель);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Область введение
		ОбластьВведение.Параметры.Заполнить(ДанныеДокумента);
		ОбластьВведение.Параметры.Грузоотправитель = ДанныеДокумента.Грузоотправитель;
		ОбластьВведение.Параметры.ГрузоотправительПредставление =
			УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(ОбластьВведение.Параметры.Грузоотправитель,
				СтруктураПредставления2, ДополнительныеПараметры);
		
		ОбластьВведение.Параметры.Поставщик = ДанныеДокумента.Контрагент;
		ОбластьВведение.Параметры.ПоставщикПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ОбластьВведение.Параметры.Поставщик, СтруктураПредставления1, ДополнительныеПараметры);
		ТабличныйДокумент.Вывести(ОбластьВведение);
		
		// Область таблица времени
		ОбластьТаблицаВремени.Параметры.Заполнить(ДанныеДокумента);
		ТабличныйДокумент.Вывести(ОбластьТаблицаВремени);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Переменные управляющие постраничным выводом.
		НомерСтраницы = 2;
		
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
		ОбластьШапкаТаблицы.Параметры.Валюта = ВалютаРегл;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаСтрок = ДанныеДокумента.ВыборкаТабличнойЧасти;
		НеВыводитьНоменклатуруСНулевымКоличеством = ПолучитьЗначениеПараметраСтруктуры(
			ДанныеДокумента,
			"НеВыводитьНоменклатуруСНулевымКоличеством",
			Ложь);
		
		// Определим имя показываемой колонки кода.
		ИмяКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
		
		// Инициализация итогов по странице.
		ИтогоКоличествоНаСтранице  = 0;
		ИтогоСуммаНаСтранице       = 0;
		ИтогоНДСНаСтранице         = 0;
		ИтогоСНДСНаСтранице        = 0;
		ИтогоМассаБруттоНаСтранице = 0;
		
		// Инициализация итогов по документу
		ИтогоКоличество  = 0;
		ИтогоСумма       = 0;
		ИтогоНДС         = 0;
		ИтогоСНДС        = 0;
		Ном              = 0;
		ИтогоМассаБрутто = 0;
		
		// Пересчет в регл. валюту
		Если ВалютаРегл <> Документ.ВалютаДокумента Тогда
			ДокументОбъектСтруктура = УправлениеПечатьюПлатформа.ДанныеДокументаДляПерерасчетаТаблицы();
			ЗаполнитьЗначенияСвойств(ДокументОбъектСтруктура, ДанныеДокумента);
			ДокументОбъектСтруктура.Документ = Документ;
			
			ЗащищенныеФункцииАльфаАвтоСервер.ПерерасчетТаблицыТоваров(ВыборкаСтрок,
				ДокументОбъектСтруктура,
				ВалютаРегл);
		КонецЕсли;
		
		// Выводим многострочную часть документа.
		Для Каждого СтрокаТоваров Из ВыборкаСтрок Цикл
			
			Если НеВыводитьНоменклатуруСНулевымКоличеством
				И СтрокаТоваров.Количество = 0 Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если Не (ТабличныйДокумент.ПроверитьВывод(ОбластьСтрока)) Тогда
				
				ОбластьИтоги.Параметры.ПоставкаКоличествоПоСтранице  = Формат(ИтогоКоличествоНаСтранице, ФорматВыводаКоличества);
				ОбластьИтоги.Параметры.ПоставкаМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
				ОбластьИтоги.Параметры.ПоставкаСтоимостьПоСтранице   = Формат(ИтогоСуммаНаСтранице, ФорматВыводаСуммы);
				ОбластьИтоги.Параметры.СуммаНДСПоСтранице            = Формат(ИтогоНДСНаСтранице,   ФорматВыводаСуммы);
				ОбластьИтоги.Параметры.СуммаСНДСПоСтранице           = Формат(ИтогоСНДСНаСтранице,  ФорматВыводаСуммы);
				ТабличныйДокумент.Вывести(ОбластьИтоги);
				
				// Очистим итоги по странице
				ИтогоКоличествоНаСтранице	= 0;
				ИтогоМассаБруттоНаСтранице	= 0;
				ИтогоСуммаНаСтранице		= 0;
				ИтогоНДСНаСтранице			= 0;
				ИтогоСуммаСНДСНаСтранице	= 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаТоваров);
			ОбластьСтрока.Параметры.ТоварНаименование = 
				УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(СтрокаТоваров.Номенклатура);
			ОбластьСтрока.Параметры.ТоварКод =
				УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура);
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТоваров.ЕдиницаИзмерения;
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияКодПоОКЕИ    = СтрокаТоваров.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
			
			ВесСтр												 = Справочники.Номенклатура.ПолучитьВесНоменклатуры(СтрокаТоваров.Номенклатура, 
																		СтрокаТоваров.ЕдиницаИзмерения); 
			МассаБруттоСтр										 = ВесСтр * СтрокаТоваров.Количество;
			
			ОбластьСтрока.Параметры.ПоставкаКоличествоВОдномМесте	= Формат(СтрокаТоваров.Коэффициент, ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.ПоставкаКоличествоМест			= Формат(СтрокаТоваров.КоличествоБазовое, ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.ПоставкаМассаБрутто				= МассаБруттоСтр;
			ОбластьСтрока.Параметры.ПоставкаСтоимость				= Формат(СтрокаТоваров.Сумма, ФорматВыводаСуммы);
			Коэффициент = ?(СтрокаТоваров.Коэффициент = 0 , 1, СтрокаТоваров.Коэффициент);
			ОбластьСтрока.Параметры.Цена							= Формат(?(СтрокаТоваров.Количество = 0, 0, 
				СтрокаТоваров.Сумма / (СтрокаТоваров.Количество * Коэффициент)), ФорматВыводаСуммы);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			// Увеличим итоги по странице
			ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + СтрокаТоваров.КоличествоБазовое;
			ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице + МассаБруттоСтр;
			ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице       + СтрокаТоваров.Сумма;
			ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + СтрокаТоваров.СуммаНДС;
			ИтогоСНДСНаСтранице        = ИтогоСНДСНаСтранице        + СтрокаТоваров.СуммаВсего;
			
			// Увеличим итоги по странице
			ИтогоКоличество  = ИтогоКоличество  + СтрокаТоваров.КоличествоБазовое;
			ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБруттоСтр;
			ИтогоСумма       = ИтогоСумма       + СтрокаТоваров.Сумма;
			ИтогоНДС         = ИтогоНДС         + СтрокаТоваров.СуммаНДС;
			ИтогоСНДС        = ИтогоСНДС        + СтрокаТоваров.СуммаВсего;
		КонецЦикла;
		
		// Выводим итоги по последней странице.
		ОбластьИтоги.Параметры.ПоставкаКоличествоПоСтранице  = Формат(ИтогоКоличествоНаСтранице, ФорматВыводаКоличества);
		ОбластьИтоги.Параметры.ПоставкаМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
		ОбластьИтоги.Параметры.ПоставкаСтоимостьПоСтранице   = Формат(ИтогоСуммаНаСтранице, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьИтоги);
		
		// Выводим итоги по всему документу.
		ОбластьВсего.Параметры.ПоставкаКоличество  = Формат(ИтогоКоличество, ФорматВыводаКоличества);
		ОбластьВсего.Параметры.ПоставкаМассаБрутто = ИтогоМассаБрутто;
		ОбластьВсего.Параметры.ПоставкаСтоимость   = Формат(ИтогоСумма, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьВсего);

		
		ОбластьОсмотрТовара.Параметры.Заполнить(ДанныеДокумента);
		ТабличныйДокумент.Вывести(ОбластьОсмотрТовара);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьШапкаТаблицы2.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
		ОбластьШапкаТаблицы2.Параметры.Валюта = ВалютаРегл;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы2);
		
		ИтогоКоличествоНаСтранице	= 0;
		ИтогоСуммаНаСтранице		= 0;
		ИтогоНДСНаСтранице			= 0;
		ИтогоСНДСНаСтранице			= 0;
		ИтогоМассаБруттоНаСтранице 	= 0;
		
		ИтогоНДС  = 0;
		ИтогоСНДС = 0;
		
		// По второй части таблицы
		Для Каждого СтрокаТоваров Из ВыборкаСтрок Цикл
			
			Если НЕ (ТабличныйДокумент.ПроверитьВывод(ОбластьСтрока)) Тогда
				
				ОбластьИтоги2.Параметры.СуммаНДСПоСтранице  = Формат(ИтогоНДСНаСтранице,  ФорматВыводаСуммы);
				ОбластьИтоги2.Параметры.СуммаСНДСПоСтранице = Формат(ИтогоСНДСНаСтранице, ФорматВыводаСуммы);
				ТабличныйДокумент.Вывести(ОбластьИтоги2);
				
				// Очистим итоги по странице
				ИтогоКоличествоНаСтранице	= 0;
				ИтогоМассаБруттоНаСтранице	= 0;
				ИтогоСуммаНаСтранице		= 0;
				ИтогоНДСНаСтранице			= 0;
				ИтогоСуммаСНДСНаСтранице	= 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьШапкаТаблицы2.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы2);
			КонецЕсли;
			
			ОбластьСтрока2.Параметры.Заполнить(СтрокаТоваров);
			ОбластьСтрока2.Параметры.СуммаСНДС = Формат(СтрокаТоваров.СуммаВсего, ФорматВыводаСуммы);//2
			ОбластьСтрока2.Параметры.СуммаНДС  = Формат(СтрокаТоваров.СуммаНДС, ФорматВыводаСуммы);
			ТабличныйДокумент.Вывести(ОбластьСтрока2);
			
			// Увеличим итоги по странице
			ИтогоНДСНаСтранице  = ИтогоНДСНаСтранице   + СтрокаТоваров.СуммаНДС;
			ИтогоСНДСНаСтранице = ИтогоСНДСНаСтранице  + СтрокаТоваров.СуммаВсего;
			
			// Увеличим итоги по странице
			ИтогоНДС = ИтогоНДС + СтрокаТоваров.СуммаНДС;
			ИтогоСНДС = ИтогоСНДС + СтрокаТоваров.СуммаВсего;
		КонецЦикла;
		
		ОбластьИтоги2.Параметры.СуммаНДСПоСтранице  = Формат(ИтогоНДСНаСтранице,  ФорматВыводаСуммы);
		ОбластьИтоги2.Параметры.СуммаСНДСПоСтранице = Формат(ИтогоСНДСНаСтранице, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьИтоги2);
		
		ОбластьВсего2.Параметры.СуммаНДС  = Формат(ИтогоНДС,  ФорматВыводаСуммы);
		ОбластьВсего2.Параметры.СуммаСНДС = Формат(ИтогоСНДС, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьВсего2);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Выводим подвал документа.
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ГлавныйБухгалтер);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.МОЛ);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ПредседательКомиссии);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ЧленКомиссии1);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ЧленКомиссии2);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// Отметим конец области документа.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ1Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьТОРГ1Общая()

Функция ПечатьТОРГ2Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Получим валюту регламентированного учета для перерасчета цены и суммы
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	
	ПервыйДокумент = Истина;
	Для Каждого Документ Из МассивОбъектов Цикл
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		ЭтоПоступление = (ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваров")); 
						
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		
		// получим данные из документа
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиТОРГ2(Документ);
		
		// Получим табличную часть за исключением услуг
		// +Альфа
		Если ТипЗнч(ДанныеДокумента.ВыборкаТабличнойЧасти) = Тип("ТаблицаЗначений") Тогда
			тзТовары = ДанныеДокумента.ВыборкаТабличнойЧасти.Скопировать();
		Иначе
			тзТовары = ДанныеДокумента.ВыборкаТабличнойЧасти.Выгрузить();
		КонецЕсли;
		// -Альфа
		ОписаниеТипаБрутто = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный));
		тзТовары.Колонки.Добавить("Брутто", ОписаниеТипаБрутто);
		тзТовары.Колонки.Добавить("БруттоПоНакладной", ОписаниеТипаБрутто);
		мсвУдалить = Новый Массив;
		
		// Пересчет сумм по регл. валюте.
		Если ВалютаРегл <> Документ.ВалютаДокумента Тогда
			ДокументОбъектСтруктура = УправлениеПечатьюПлатформа.ДанныеДокументаДляПерерасчетаТаблицы();
			ЗаполнитьЗначенияСвойств(ДокументОбъектСтруктура, ДанныеДокумента);
			ДокументОбъектСтруктура.Документ = Документ;
			
			ЗащищенныеФункцииАльфаАвтоСервер.ПерерасчетТаблицыТоваров(тзТовары,
				ДокументОбъектСтруктура,
				ВалютаРегл);
		КонецЕсли;
		
		ВсегоПоНакладной = 0;
		
		Для Каждого ТекСтрока Из тзТовары Цикл
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
				Если ТекСтрока.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга Тогда
					мсвУдалить.Добавить(ТекСтрока);
					Продолжить;
				КонецЕсли;
				КонецЕсли;

				Вес	= Справочники.Номенклатура.ПолучитьВесНоменклатуры(ТекСтрока.Номенклатура, ТекСтрока.ЕдиницаИзмерения);
				ТекСтрока.БруттоПоНакладной = ТекСтрока.КоличествоПоНакладной * Вес;
				ТекСтрока.Брутто = ТекСтрока.Количество * Вес;
				
				ВсегоПоНакладной = ВсегоПоНакладной + ТекСтрока.КоличествоПоНакладной * ТекСтрока.Коэффициент;
				
		КонецЦикла;
		
		Для Каждого ТекСтрока Из мсвУдалить Цикл
			тзТовары.Удалить(ТекСтрока);
		КонецЦикла;
		
		// Зададим параметры макета
		ТабличныйДокумент.ПолеСлева          = 15;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабличныйДокумент.АвтоМасштаб        = Истина;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТОРГ2");
		
		ОбластьЗаголовокСтр1 = Макет.ПолучитьОбласть("ШапкаСтраница1");
		ОбластьНомерСтраницы = Макет.ПолучитьОбласть("НомерСтраницы");
		ОбластьЗаголовокСтр2 = Макет.ПолучитьОбласть("ШапкаСтраница2");
		ОбластьШапкаТаблицы1 = Макет.ПолучитьОбласть("ШапкаТабличнойЧасти");
		ОбластьСтрока1       = Макет.ПолучитьОбласть("Строка1");
		ОбластьЗаголовокСтр3 = Макет.ПолучитьОбласть("ШапкаСтраница3");
		ОбластьШапкаТаблицы2 = Макет.ПолучитьОбласть("ШапкаТабличнойЧасти2");
		ОбластьСтрока2       = Макет.ПолучитьОбласть("Строка2");
		ОбластьПодвал        = Макет.ПолучитьОбласть("ШапкаСтраница4");
		
		Параметры = Новый Структура;
		
		СтруктураПредставления1=Новый Структура;
		СтруктураПредставления1.Вставить("Наименование",     "");
		СтруктураПредставления1.Вставить("ИНН",              "ИНН ");
		СтруктураПредставления1.Вставить("КПП",              "КПП ");
		СтруктураПредставления1.Вставить("АдресЮридический", "");
		СтруктураПредставления1.Вставить("ТелефонРабочий",   "тел.: ");
		
		СтруктураПредставления2=Новый Структура;
		СтруктураПредставления2.Вставить("Наименование",     "");
		СтруктураПредставления2.Вставить("ИНН",              "ИНН ");
		СтруктураПредставления2.Вставить("КПП",              "КПП ");
		СтруктураПредставления2.Вставить("АдресФактический", "");
		СтруктураПредставления2.Вставить("ТелефонРабочий",   "тел.: ");
		
		ОбластьЗаголовокСтр1.Параметры.Заполнить(ДанныеДокумента);
		ОбластьЗаголовокСтр1.Параметры.Заполнить(ДанныеДокумента.Руководитель);
		
		// Правим, что автоматом не заполнилось, или заполнилось неправильно
		
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = Документ.Дата;
		ОрганизацияПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(ДанныеДокумента.Организация,
			СтруктураПредставления1, ДополнительныеПараметры);
		Параметры.Вставить("ОрганизацияПредставление", ОрганизацияПредставление);
		
		Параметры.Вставить("КодПоОКПО",             ДанныеДокумента.Организация.КодПоОКПО);
		Параметры.Вставить("ВидДеятельностиПоОКДП", ДанныеДокумента.Организация.КодПоОКДП);
		
		// Подразделение полное наименование
		ОбластьЗаголовокСтр1.Параметры.ПодразделениеКомпании = 
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ДанныеДокумента.ПодразделениеКомпании, Документ.Дата);
		
		Параметры.Вставить("ПредставлениеДокумента", УправлениеПечатьюПлатформа.ПолучитьПредставлениеДокумента(Документ));
		Параметры.Вставить("Номер",
			?(НЕ ЗначениеЗаполнено(ДанныеДокумента.ВхДокНомер), ДанныеДокумента.Номер, ДанныеДокумента.ВхДокНомер));
		Параметры.Вставить("Дата",
			?(НЕ ЗначениеЗаполнено(ДанныеДокумента.ВхДокДата) , ДанныеДокумента.Дата , ДанныеДокумента.ВхДокДата));
		
		Параметры.Вставить("МестоПриемки", ДанныеДокумента.СкладКомпании);
		Параметры.Вставить("ГрузоотправительПредставление",
			УправлениеПечатьюПлатформа.
			ПолучитьПредставлениеСправочника(ДанныеДокумента.Грузоотправитель, СтруктураПредставления2, ДополнительныеПараметры));
		Параметры.Вставить("ПоставщикПредставление",
			УправлениеПечатьюПлатформа.
			ПолучитьПредставлениеСправочника(ДанныеДокумента.Поставщик, СтруктураПредставления1, ДополнительныеПараметры));
		Параметры.Вставить("ПроизводительПредставление",     ДанныеДокумента.Производитель);
		Параметры.Вставить("СтраховаяКомпанияПредставление", ДанныеДокумента.СтраховаяКомпания);
		Параметры.Вставить("СпособДоставкиПредставление",    ДанныеДокумента.СпособДоставки);
		
		ДатаОтправления = ДанныеДокумента.ДатаОтправления;
		Если ДатаОтправления <> "" Тогда
			ДатаОтправления = НСтр("ru = 'Дата отправления товара:'") + " " + Формат(ДатаОтправления, "ДЛФ=DD");
		Иначе
			ДатаОтправления = НСтр("ru = 'Дата отправления товара'") + " "
				+ " ""_______""  _____________________ _______ г.";
		КонецЕсли;
		
		Параметры.Вставить("ДатаОтправления", ДатаОтправления);
		
		Параметры.Вставить("НомерДоговора", СокрЛП(ДанныеДокумента.НомерДоговора));
		Параметры.Вставить("ДатаДоговора",  Формат(ДанныеДокумента.ДатаДоговора, "ДЛФ=DD"));
		
		// Счет-фактура, если есть.
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СчетФактураПолученный.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
			|ГДЕ
			|	СчетФактураПолученный.ДокументОснование = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
				Выборка.Следующий();
				СФ = Выборка.Ссылка;
				Попытка
					НомерСФ = УправлениеПечатьюПлатформа.ПолучитьНомерДляПечати(СФ);
					ДатаСФ  = Формат(СФ.Дата, "ДЛФ=DD");
				Исключение
					НомерСФ = "";
					ДатаСФ  = """" + "_______"  + """" + "  __________________________  " + "__________ г.";
				КонецПопытки; 
		Иначе
				НомерСФ = "";
				ДатаСФ  = """" + "_______"  + """" + "  __________________________  " + "__________ г.";
		КонецЕсли;
		Параметры.Вставить("НомерСФ", НомерСФ);
		Параметры.Вставить("ДатаСФ",  ДатаСФ);
		
		ОбластьЗаголовокСтр1.Параметры.Заполнить(Параметры);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокСтр1);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		// ВТОРАЯ СТРАНИЦА
		НомерСтраницы     = 3;
		НомерСтраницыПред = НомерСтраницы;
		
		ОбластьНомерСтраницы.Параметры.НомерСтраницы = "Страница: " + 2;
		ТабличныйДокумент.Вывести(ОбластьНомерСтраницы);
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
			
			КоличествоВсегоПоДокументу = тзТовары.Итог("КоличествоБазовое");
			КоличествоВсегоПоНакладной = ВсегоПоНакладной;
			БруттоВсегоПоДокументу = тзТовары.Итог("Брутто");
			БруттоВсегоПоНакладной = тзТовары.Итог("БруттоПоНакладной");
			
			// разница
			РазницаКоличество = КоличествоВсегоПоДокументу - КоличествоВсегоПоНакладной;
			РазницаКоличество = Макс(РазницаКоличество, -РазницаКоличество);
			РазницаБрутто = БруттоВсегоПоДокументу -БруттоВсегоПоНакладной;
			РазницаБрутто = Макс(РазницаБрутто, -РазницаБрутто);
			
			КоличествоМестПоДокументу = Формат(КоличествоВсегоПоДокументу, ФорматВыводаКоличества);
			ОбластьЗаголовокСтр2.Параметры.КоличествоМестПоДокументу = КоличествоМестПоДокументу;
			ОбластьЗаголовокСтр2.Параметры.Брутто                    = Формат(БруттоВсегоПоДокументу, ФорматВыводаКоличества);
			КоличествоМестПоНакладной = Формат(КоличествоВсегоПоНакладной, ФорматВыводаКоличества);
			ОбластьЗаголовокСтр2.Параметры.КоличествоМестПоНакладной = КоличествоМестПоНакладной;
			ОбластьЗаголовокСтр2.Параметры.БруттоПоНакладной         = Формат(БруттоВсегоПоНакладной, ФорматВыводаКоличества);
			ОбластьЗаголовокСтр2.Параметры.РазницаКоличество         = Формат(РазницаКоличество, ФорматВыводаКоличества);
			ОбластьЗаголовокСтр2.Параметры.РазницаБрутто             = Формат(РазницаБрутто, ФорматВыводаКоличества);
		Иначе 
			
			ОбластьЗаголовокСтр2.Параметры.КоличествоМестПоНакладной = Формат(ВсегоПоНакладной, ФорматВыводаКоличества);
						
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокСтр2);
		
		// ВЫВОДИМ ТАБЛИЧНУЮ ЧАСТЬ
		
		ОбластьШапкаТаблицы1.Параметры.Валюта = ВалютаРегл;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы1);
		// Для последующего вывода
		ОбластьШапкаТаблицы1.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы;
		
		// временная таблица для вычислений
		ТаблицаНоменклатуры = Новый ТаблицаЗначений;
		ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаНоменклатуры.Колонки.Добавить("Количество",   Новый ОписаниеТипов("Число"));
		ТаблицаНоменклатуры.Колонки.Добавить("Сумма",        Новый ОписаниеТипов("Число"));
		ТаблицаНоменклатуры.Колонки.Добавить("НомерСтроки",  Новый ОписаниеТипов("Число"));
		
		// перебор строк
		Для Каждого СтрокаТЧ Из тзТовары Цикл
			
			// заполняем данные строки
			ЗаполнитьЗначенияСвойств(ОбластьСтрока1.Параметры,
				УправлениеПечатьюПлатформа.ЗаполнитьПредставлениеДанныхТоварнойСтроки(СтрокаТЧ, Документ));
			
			// Рассчитаем цену.
			Если СтрокаТЧ.Количество = 0 Тогда
				ОбластьСтрока1.Параметры.Цена = СтрокаТЧ.Цена;
			Иначе
				ОбластьСтрока1.Параметры.Цена = Формат(СтрокаТЧ.СуммаВсего / СтрокаТЧ.Количество, ФорматВыводаСуммы);
			КонецЕсли;
			ОбластьСтрока1.Параметры.ЕдиницаИзмерения = СтрокаТЧ.ЕдиницаИзмерения;

			ОбластьСтрока1.Параметры.КодЕдиницыПоОКЕИ = "" + СокрЛП(СтрокаТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код);
			
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеАвтомобилей") Тогда
				ОбластьСтрока1.Параметры.Артикул          = "" + СтрокаТЧ.Артикул;
				ОбластьСтрока1.Параметры.Количество = СтрокаТЧ.Количество;
				
			Иначе
				ОбластьСтрока1.Параметры.Артикул          = "" + СтрокаТЧ.Номенклатура.Артикул;
			конецЕсли;
			
				// Определяем признак необходимости отражения данных в основных единицах измерения.
				ОтражаемВОсновныхЕдиницах = (СтрокаТЧ.Количество * СтрокаТЧ.Коэффициент = СтрокаТЧ.КоличествоБазовое)
					ИЛИ СтрокаТЧ.Коэффициент = 1;
				
				// заполняем параметры
				КоличествоДляВывода = ?(ОтражаемВОсновныхЕдиницах,
					СтрокаТЧ.КоличествоПоНакладной, СтрокаТЧ.КоличествоПоНакладной * СтрокаТЧ.Коэффициент);
				КоличествоПоФакту = ?(ОтражаемВОсновныхЕдиницах, СтрокаТЧ.Количество, СтрокаТЧ.КоличествоБазовое);
				ОбластьСтрока1.Параметры.Количество = КоличествоДляВывода;
				Если СтрокаТЧ.КоличествоПоНакладной = 0 ИЛИ КоличествоПоФакту = 0 Тогда
					ОбластьСтрока1.Параметры.Цена = СтрокаТЧ.Цена;
					ОбластьСтрока1.Параметры.СуммаВсего = 0;
				Иначе
					Если КоличествоДляВывода = КоличествоПоФакту Тогда
						ОбластьСтрока1.Параметры.СуммаВсего = Формат(СтрокаТЧ.СуммаВсего, ФорматВыводаСуммы);
						ОбластьСтрока1.Параметры.Цена = Формат(СтрокаТЧ.СуммаВсего / КоличествоДляВывода, ФорматВыводаСуммы);
					Иначе
						ЦенаЗаЕдиницу = СтрокаТЧ.СуммаВсего / КоличествоПоФакту;
						
						ОбластьСтрока1.Параметры.Цена = Формат(ЦенаЗаЕдиницу, ФорматВыводаСуммы);
						ОбластьСтрока1.Параметры.СуммаВсего = Формат(КоличествоДляВывода * ЦенаЗаЕдиницу, ФорматВыводаСуммы);
					КонецЕсли;
				КонецЕсли;
				
				НоваяСтрока = ТаблицаНоменклатуры.Добавить();
				НоваяСтрока.Номенклатура = СтрокаТЧ.Номенклатура;
				НоваяСтрока.Количество = КоличествоДляВывода;
				НоваяСтрока.Сумма = ОбластьСтрока1.Параметры.СуммаВсего;
				НоваяСтрока.НомерСтроки = тзТовары.Индекс(СтрокаТЧ);
					
			// выводим строку, делая проверку попадания на лист
			НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока1,
				ОбластьШапкаТаблицы1, , НомерСтраницы, , Документ);
			
			// инициализация итогов по странице
			Если НомерСтраницы <> НомерСтраницыПред Тогда
				НомерСтраницыПред = НомерСтраницы;
				ОбластьШапкаТаблицы1.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы;
			КонецЕсли;
		КонецЦикла;
		
		// ВЫВОДИМ 3-Ю СТРАНИЦУ
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьНомерСтраницы.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы;
		ТабличныйДокумент.Вывести(ОбластьНомерСтраницы);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокСтр3);
		
		НомерСтраницы = НомерСтраницы + 1;
		
		// ВЫВОДИМ ПРОДОЛЖЕНИЕ ТАБЛИЧНОЙ ЧАСТИ
		ОбластьШапкаТаблицы2.Параметры.Валюта = ВалютаРегл;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы2);
		// Для последующего вывода
		ОбластьШапкаТаблицы2.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы;
		
		// строка поиска в таблице номенклатура
		СтрокаПоиска = Новый Структура("НомерСтроки");
		
		// перебор строк
		Для каждого СтрокаТЧ Из тзТовары Цикл
			// заполняем данные строки
			СтруктураСтроки = УправлениеПечатьюПлатформа.ЗаполнитьПредставлениеДанныхТоварнойСтроки(СтрокаТЧ, Документ);
			ОбластьСтрока2.Параметры.Заполнить(СтруктураСтроки);
			
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеАвтомобилей") Тогда
				ОбластьСтрока2.Параметры.Артикул          = "" + СтрокаТЧ.Артикул;
			Иначе
				ОбластьСтрока2.Параметры.Артикул          = "" + СтрокаТЧ.Номенклатура.Артикул;
			конецЕсли;

			
			Если ЭтоПоступление Тогда
				// Определяем признак необходимости отражения данных в основных единицах измерения.
				ОтражаемВОсновныхЕдиницах = (СтрокаТЧ.Количество * СтрокаТЧ.Коэффициент = СтрокаТЧ.КоличествоБазовое)
					ИЛИ СтрокаТЧ.Коэффициент = 1;
				
				КоличествоПоФакту = ?(ОтражаемВОсновныхЕдиницах, СтрокаТЧ.Количество, СтрокаТЧ.КоличествоБазовое);
				ОбластьСтрока2.Параметры.КоличествоФакт = КоличествоПоФакту;
				
				Если КоличествоПоФакту <> 0 Тогда
					ОбластьСтрока2.Параметры.СуммаФакт = Формат(СтрокаТЧ.СуммаВсего, ФорматВыводаСуммы);
					ОбластьСтрока2.Параметры.ЦенаФакт  = Формат(СтрокаТЧ.СуммаВсего / КоличествоПоФакту, ФорматВыводаСуммы);
				КонецЕсли;
				
				// определяем разницу
				СтрокаПоиска.НомерСтроки = тзТовары.Индекс(СтрокаТЧ);
				
				ПереченьСтрок = ТаблицаНоменклатуры.НайтиСтроки(СтрокаПоиска);
				
				Если ПереченьСтрок.Количество() > 0 Тогда
					Если ПереченьСтрок[0].Количество <> КоличествоПоФакту Тогда
						ЭтоНедостача = ПереченьСтрок[0].Количество > КоличествоПоФакту;
						
						КоличествоРазница = ПереченьСтрок[0].Количество - КоличествоПоФакту;
						КоличествоРазница = Макс(КоличествоРазница, - КоличествоРазница);
						
						СуммаРазница = ПереченьСтрок[0].Сумма - СтрокаТЧ.СуммаВсего;
						СуммаРазница = Макс(СуммаРазница, - СуммаРазница);
				
						
						Если ЭтоНедостача Тогда
							ОбластьСтрока2.Параметры.КоличествоНедостача = КоличествоРазница;
							ОбластьСтрока2.Параметры.СуммаНедостача = Формат (СуммаРазница, ФорматВыводаСуммы);
						Иначе
							ОбластьСтрока2.Параметры.КоличествоЛишнее = КоличествоРазница;
							ОбластьСтрока2.Параметры.СуммаЛишнее = Формат(СуммаРазница, ФорматВыводаСуммы);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			// выводим строку, делая проверку попадания на лист
			НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока2,
				ОбластьШапкаТаблицы2, , НомерСтраницы, , Документ);
			
			ОбластьСтрока2.Параметры.КоличествоНедостача = 0;
			ОбластьСтрока2.Параметры.СуммаНедостача      = 0;
			ОбластьСтрока2.Параметры.КоличествоЛишнее    = 0;
			ОбластьСтрока2.Параметры.СуммаЛишнее         = 0;
			
			// инициализация итогов по странице
			Если НомерСтраницы <> НомерСтраницыПред Тогда
				НомерСтраницыПред = НомерСтраницы;
				ОбластьШапкаТаблицы2.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы; 
			КонецЕсли; 		
		КонецЦикла;
		
		// ВЫВОДИМ 4-Ю СТРАНИЦУ
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьНомерСтраницы.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы;
		ТабличныйДокумент.Вывести(ОбластьНомерСтраницы);
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ГлавныйБухгалтер);
		
		// Комиссия
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ПредседательКомиссии);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ЧленКомиссии1);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ЧленКомиссии2);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал); 
		
		// отметим конец области документа
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ2Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьТОРГ2Общая()

Функция ПечатьТОРГ4Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Получим валюту регламентированного учета для перерасчета цены и суммы
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	
	ПервыйДокумент = Истина; 
	Для Каждого Документ Из МассивОбъектов Цикл
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		
		// Зададим параметры макета
		ТабличныйДокумент.ПолеСлева  = 15;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		// Получим данные из документа
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиТОРГ4(Документ);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТОРГ4");
		
		ОбластьЗаголовок    = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги        = Макет.ПолучитьОбласть("ИтогиПоСтранице");
		ОбластьВсего        = Макет.ПолучитьОбласть("Всего");
		ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПредставления1 = УправлениеПечатьюПлатформа.СформироватьСтруктуруПредставления();
		СтруктураПредставления2 = УправлениеПечатьюПлатформа.СформироватьСтруктуруПредставления();
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.НаДату = Документ.Дата;
		ОбластьЗаголовок.Параметры.ОрганизацияПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ОбластьЗаголовок.Параметры.Организация, СтруктураПредставления1, ДополнительныеПараметры);
		
		ОбластьЗаголовок.Параметры.ОрганизацияПоОКПО 				= ДанныеДокумента.Организация.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ПодразделениеКомпании			= 
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ДанныеДокумента.ПодразделениеКомпании, Документ.Дата);
		ОбластьЗаголовок.Параметры.Поставщик						= ДанныеДокумента.Поставщик;
		ОбластьЗаголовок.Параметры.ПоставщикПоОКПО 					= ДанныеДокумента.Поставщик.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ПоставщикПредставление			= 
			УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(ОбластьЗаголовок.Параметры.Поставщик,
				СтруктураПредставления1, ДополнительныеПараметры);
		ОбластьЗаголовок.Параметры.Грузоотправитель					= ДанныеДокумента.Грузоотправитель;
		ОбластьЗаголовок.Параметры.ГрузополучательПоОКПО			= ДанныеДокумента.Грузоотправитель.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ГрузоотправительПредставление = 
			УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(ОбластьЗаголовок.Параметры.Грузоотправитель,
				СтруктураПредставления2, ДополнительныеПараметры);
		
		ОбластьЗаголовок.Параметры.Номер = ?(НЕ ЗначениеЗаполнено(ДанныеДокумента.ВхДокНомер), ДанныеДокумента.Номер,
			ДанныеДокумента.ВхДокНомер);
		ОбластьЗаголовок.Параметры.Дата = ?(НЕ ЗначениеЗаполнено(ДанныеДокумента.ВхДокНомер), ДанныеДокумента.Дата,
			ДанныеДокумента.ВхДокДата);
		ОбластьЗаголовок.Параметры.МестоПриемки = ДанныеДокумента.СкладКомпании;
		
		// Заполним информацию о руководителе организации.
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента.Руководитель);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Переменные управляющие постраничным выводом.
		СтрокНаСтранице = 23;
		СтрокШапки      = 20;
		СтрокПодвала    = 7;
		НомерСтраницы   = 1;
		
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
		ОбластьШапкаТаблицы.Параметры.Валюта = ВалютаРегл;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаСтрок = ДанныеДокумента.ВыборкаТабличнойЧасти;
		НеВыводитьНоменклатуруСНулевымКоличеством = ПолучитьЗначениеПараметраСтруктуры(
			ДанныеДокумента,
			"НеВыводитьНоменклатуруСНулевымКоличеством",
			Ложь);
		
		// Пересчет сумм по регл. валюте.
		Если ВалютаРегл <> Документ.ВалютаДокумента Тогда
			ДокументОбъектСтруктура = УправлениеПечатьюПлатформа.ДанныеДокументаДляПерерасчетаТаблицы();
			ЗаполнитьЗначенияСвойств(ДокументОбъектСтруктура, ДанныеДокумента);
			ДокументОбъектСтруктура.Документ = Документ;
			
			ЗащищенныеФункцииАльфаАвтоСервер.ПерерасчетТаблицыТоваров(ДанныеДокумента.ВыборкаТабличнойЧасти,
				ДокументОбъектСтруктура,
				ВалютаРегл);
		КонецЕсли;
		
		КоличествоСтрок = ВыборкаСтрок.Количество();
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		// Определим имя показываемой колонки кода.
		ИмяКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
		
		// Инициализация итогов по странице
		ИтогоМассаБруттоПоСтранице = 0;
		ИтогоКоличествоПоСтранице  = 0;
		ИтогоСуммаПоСтранице       = 0;
		
		// Инициализация итогов по документу
		ИтогоМассаБрутто = 0;
		ИтогоКоличество  = 0;
		ИтогоСумма       = 0;
		Ном              = 0;
		
		ЕстьСодержание = ВыборкаСтрок.Колонки.Найти("Содержание") <> Неопределено;
		
		// Выводим многострочную часть документа.
		Для каждого СтрокаТоваров Из ВыборкаСтрок Цикл
			
			Если НеВыводитьНоменклатуруСНулевымКоличеством
				И СтрокаТоваров.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Ном = Ном + 1;
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				ИЛИ ((ПереноситьПоследнююСтроку = 1) И (Ном = КоличествоСтрок)) Тогда
				ОбластьИтоги.Параметры.ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице;
				ОбластьИтоги.Параметры.ИтогоШтукПоСтранице        = Формат(ИтогоКоличествоПоСтранице, ФорматВыводаКоличества);
				ОбластьИтоги.Параметры.ИтогоСтоимостьПоСтранице   = Формат(ИтогоСуммаПоСтранице, ФорматВыводаСуммы);
				ТабличныйДокумент.Вывести(ОбластьИтоги);
				
				// Очистим итоги по странице.
				ИтогоБруттоПоСтранице     = 0;
				ИтогоКоличествоПоСтранице = 0;
				ИтогоСуммаПоСтранице      = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаТоваров);
			// +Альфа
			Если ВыборкаСтрок.Колонки.Найти("Характеристика") <> Неопределено Тогда
				Характеристика = Строка(СтрокаТоваров.ХарактеристикаНоменклатуры);
			КонецЕсли;
			// -Альфа
			
			Если ЕстьРеквизит(СтрокаТоваров.Номенклатура, "Артикул")
				И ЗначениеЗаполнено(СтрокаТоваров.Номенклатура.Артикул) Тогда
				
				Артикул = ", " + СтрокаТоваров.Номенклатура.Артикул;
			Иначе
				Артикул = "";
			КонецЕсли;
			
			Если ЕстьСодержание И ЗначениеЗаполнено(СтрокаТоваров.Содержание) Тогда
				ОбластьСтрока.Параметры.ТоварНаименование = СтрокаТоваров.Содержание;
			Иначе
				
				ОбластьСтрока.Параметры.ТоварНаименование =
					УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(СтрокаТоваров.Номенклатура)
					+ ?(НЕ ЗначениеЗаполнено(Характеристика), "", ", " + Характеристика)
					+ Артикул;
			КонецЕсли;
			ОбластьСтрока.Параметры.ТоварКод = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(
				СтрокаТоваров.Номенклатура);
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТоваров.ЕдиницаИзмерения;
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияКодПоОКЕИ    = СтрокаТоваров.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
			
			СуммаРегл = СтрокаТоваров.Сумма;
			
			ВесСтр											= Справочники.Номенклатура.ПолучитьВесНоменклатуры(СтрокаТоваров.Номенклатура, 
																СтрокаТоваров.ЕдиницаИзмерения);					
			МассаБруттоСтр									= ВесСтр * СтрокаТоваров.Количество;
			ОбластьСтрока.Параметры.МассаБрутто				= МассаБруттоСтр;
			ОбластьСтрока.Параметры.КоличествоМест			= Формат(СтрокаТоваров.Количество, ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.КоличествоВОдномМесте	= Формат(СтрокаТоваров.Коэффициент, ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.КоличествоШтук			= Формат(СтрокаТоваров.КоличествоБазовое, ФорматВыводаКоличества);
			Коэффициент 									= ?(СтрокаТоваров.Коэффициент = 0, 1, СтрокаТоваров.Коэффициент);
			ОбластьСтрока.Параметры.Цена					= Формат(?(СтрокаТоваров.Количество = 0, 0,
				СуммаРегл / (СтрокаТоваров.Количество * Коэффициент)), ФорматВыводаСуммы);
			ОбластьСтрока.Параметры.Стоимость = Формат(СуммаРегл, ФорматВыводаСуммы);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			// Увеличим итоги по странице
			ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице + МассаБруттоСтр;
			ИтогоКоличествоПоСтранице  = ИтогоКоличествоПоСтранице  + СтрокаТоваров.КоличествоБазовое;
			ИтогоСуммаПоСтранице       = ИтогоСуммаПоСтранице       + СуммаРегл;
			
			// Увеличим итоги по документу
			ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБруттоСтр;
			ИтогоКоличество  = ИтогоКоличество  + СтрокаТоваров.КоличествоБазовое;
			ИтогоСумма       = ИтогоСумма       + СуммаРегл;
		КонецЦикла;
		
		// Выводим итоги по последней странице.
		ОбластьИтоги.Параметры.ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице;
		ОбластьИтоги.Параметры.ИтогоШтукПоСтранице        = Формат(ИтогоКоличествоПоСтранице, ФорматВыводаКоличества);
		ОбластьИтоги.Параметры.ИтогоСтоимостьПоСтранице   = Формат(ИтогоСуммаПоСтранице, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьИтоги);
		
		// Выводим итоги по документу в целом.
		ОбластьВсего.Параметры.ИтогоМассаБрутто = ИтогоМассаБрутто;
		ОбластьВсего.Параметры.ИтогоШтук        = Формат(ИтогоКоличество, ФорматВыводаКоличества);
		ОбластьВсего.Параметры.ИтогоСтоимость   = Формат(ИтогоСумма, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьВсего);
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента);
		// Комиссия.
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ПредседательКомиссии);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ЧленКомиссии1);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ЧленКомиссии2);
		// Кладовщик.
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.МОЛ);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// Отметим конец области документа.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ4Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьТОРГ4Общая()

Функция ПечатьТОРГ16Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина; 
	Для Каждого Документ Из МассивОбъектов Цикл
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
		ВалютаУпр = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
		
		// Зададим параметры макета
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		// Получим данные из документа
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиТОРГ16(Документ);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТОРГ16");
		
		ОбластьЗаголовок    = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыПервогоЛиста");
		ОбластьСтрока       = Макет.ПолучитьОбласть("СтрокаПервогоЛиста");
		ОбластьИтого        = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		
		СтруктураПредставления = УправлениеПечатьюПлатформа.СформироватьСтруктуруПредставления();
		
		// Выводим общие реквизиты шапки.
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = Документ.Дата;
		ОбластьЗаголовок.Параметры.ОрганизацияПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ДанныеДокумента.Организация, СтруктураПредставления, ДополнительныеПараметры);
		ОбластьЗаголовок.Параметры.ПодразделениеКомпании = УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(
			ДанныеДокумента.ПодразделениеКомпании, Документ.Дата);
		ОбластьЗаголовок.Параметры.ОрганизацияПоОКПО = ДанныеДокумента.Организация.КодПоОКПО;
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента.Руководитель);
		ОбластьЗаголовок.Параметры.Номер = ДанныеДокумента.Номер;
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтраницеПервогоЛиста");
		НомерСтраницы = 2;
		НомерСтраницыПред = НомерСтраницы;
		
		// Теперь выводим шапку
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы;
		
		// Таблица партий - преобразование
		тблПартий = ДанныеДокумента.ВыборкаСтрокТовары.Скопировать();
		Если тблПартий.Колонки.Найти("ДокументПередачи") = Неопределено Тогда
			тблПартий.Свернуть("Партия");	
		Иначе
			тблПартий.Свернуть("Партия, ДокументПередачи");
		КонецЕсли;
		
		Если ДанныеДокумента.ЕстьДвиженияПоРегистру И НЕ ДанныеДокумента.ПростоеСписание Тогда
			Если тблПартий.Колонки.Найти("Партия") <> Неопределено Тогда
				тблПартий.Колонки.Партия.Имя = "ПартияСтарый";
			КонецЕсли;
			тблПартий.Колонки.ДокументПередачи.Имя = "Партия";
		КонецЕсли;
		тблПартий.Колонки.Добавить("ДатаПоступленияТовара", Новый ОписаниеТипов("Дата"));
		тблПартий.Колонки.Добавить("ТоварнаяНакладнаяНомер", Новый ОписаниеТипов("Строка"));
		тблПартий.Колонки.Добавить("ТоварнаяНакладнаяДата", Новый ОписаниеТипов("Дата"));
		тблПартий.Колонки.Добавить("ДатаСписанияТовара", Новый ОписаниеТипов("Дата"));
		Для Каждого ТекПартия Из тблПартий Цикл
			ТекПартия.ДатаСписанияТовара = ДанныеДокумента.Дата;
			Если ТекПартия.Партия <> Неопределено Тогда
				ТекПартия.ДатаПоступленияТовара = ТекПартия.Партия.Дата;
				ТекПартия.ТоварнаяНакладнаяНомер = ТекПартия.Партия.Номер;
				ТекПартия.ТоварнаяНакладнаяДата = ТекПартия.Партия.Дата; //OkoE - а так ли это? //тут вопрос о разнице ДатаПоступленияТовара и ТоварнаяНакладнаяДата KOZT
			КонецЕсли;
		КонецЦикла;
		тблПартий.Сортировать("ДатаПоступленияТовара, ДатаСписанияТовара, ТоварнаяНакладнаяДата");
		
		Для каждого СтрокаПартия Из тблПартий Цикл
			ОбластьСтрока.Параметры.Заполнить(СтрокаПартия);
			
			// Выводим строку, делая проверку попадания на лист.
			НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока,
				ОбластьШапкаТаблицы, ОбластьИтогоПоСтранице, НомерСтраницы, , Документ);
			
			// Инициализация итогов по странице
			Если НомерСтраницы <> НомерСтраницыПред Тогда
				НомерСтраницыПред = НомерСтраницы;
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы;
			КонецЕсли;
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ЗаголовокТаблицыВторогоЛиста");
		ОбластьСтрока 			= Макет.ПолучитьОбласть("СтрокаВторогоЛиста");
		ОбластьИтогоПоСтранице	= Макет.ПолучитьОбласть("ИтогоПоСтранице");
		
		НомерСтраницы = 2;
		НомерСтраницыПред = НомерСтраницы;
		
		// Теперь выводим шапку
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы;
		
		СтруктураИтоговПоСтранице = Новый Структура("Сумма", 0);
		
		// Определим, что показывать в колонке кода - код или артикул.
		ИмяКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
		СуммаПечатногоДокумента = 0;
		
		// Выводим многострочную часть документа.
		ДанныеДокумента.ВыборкаСтрокТовары.Свернуть(
			ДанныеДокумента.СтрокаСвертки,
			ДанныеДокумента.СтрокаСуммирования);
		
		Для Каждого СтрокаТовар Из ДанныеДокумента.ВыборкаСтрокТовары Цикл
			Если ДанныеДокумента.ЕстьДвиженияПоРегистру Тогда
				Если ДанныеДокумента.ПростоеСписание Тогда
					Если Документ.СкладКомпании.Розничный Тогда
						СтрокаТовар.Сумма = СтрокаТовар.СуммаРозничная;
						СтрокаТовар.Цена = СтрокаТовар.СуммаРозничная / СтрокаТовар.Количество;
					Иначе
						СтрокаТовар.Цена = СтрокаТовар.Сумма / СтрокаТовар.Количество;
					КонецЕсли; 
				Иначе
					СтрокаТовар.Цена = СтрокаТовар.Сумма / СтрокаТовар.Количество;
				КонецЕсли; 
			Иначе
				СтрокаТовар.НоменклатураПредставление = Строка(СтрокаТовар.Номенклатура);
				СтрокаТовар.ХарактеристикаНоменклатурыПредставление = Строка(СтрокаТовар.ХарактеристикаНоменклатуры);
				СтрокаТовар.Цена = СтрокаТовар.ЦенаРозничная;
				СтрокаТовар.Сумма = СтрокаТовар.ЦенаРозничная * СтрокаТовар.Количество;
				Если ДанныеДокумента.ВалютаДокумента <> ВалютаРегл Тогда
					СтрокаТовар.Сумма = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.Сумма, 
						ДанныеДокумента.ВалютаДокумента, ДанныеДокумента.Дата, ВалютаРегл, ДанныеДокумента.Дата);
					СтрокаТовар.Цена = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.Цена,
						ДанныеДокумента.ВалютаДокумента, ДанныеДокумента.Дата, ВалютаРегл, ДанныеДокумента.Дата);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаТовар Из ДанныеДокумента.ВыборкаСтрокТовары Цикл
			ОбластьСтрока.Параметры.Заполнить(СтрокаТовар);
			ОбластьСтрока.Параметры.ТоварНаименование = СтрокаТовар.НоменклатураПредставление
				+ ?(СтрокаТовар.ХарактеристикаНоменклатурыПредставление = "", "",
						", " + СтрокаТовар.ХарактеристикаНоменклатурыПредставление);
			// Вывод кода товаров
			ОбластьСтрока.Параметры.ТоварКод = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТовар.Номенклатура);
			ОбластьСтрока.Параметры.КоличествоМест = Формат(СтрокаТовар.Количество, ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.Цена           = Формат(СтрокаТовар.Цена,       ФорматВыводаСуммы);
			ОбластьСтрока.Параметры.Сумма          = Формат(СтрокаТовар.Сумма,      ФорматВыводаСуммы);
			
			Если ДанныеДокумента.ЕстьДвиженияПоРегистру Тогда
				Если ЕстьРеквизит(СтрокаТовар.Номенклатура,"БазоваяЕдиницаИзмерения") Тогда
					ОбластьСтрока.Параметры.ЕдиницаИзмерения = СтрокаТовар.Номенклатура.БазоваяЕдиницаИзмерения;
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияКодПоОКЕИ = СтрокаТовар.Номенклатура.БазоваяЕдиницаИзмерения.Код;
				Иначе
					ОбластьСтрока.Параметры.ЕдиницаИзмерения = СтрокаТовар.ЕдиницаИзмерения;
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияКодПоОКЕИ = СтрокаТовар.ЕдиницаИзмеренияКодПоОКЕИ;
				КонецЕсли; 
			Иначе
				ОбластьСтрока.Параметры.ЕдиницаИзмерения = СтрокаТовар.ЕдиницаИзмерения;
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияКодПоОКЕИ = СтрокаТовар.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
			КонецЕсли;
			
			// Доп. области
			мсвДопОбластиПодвала = Неопределено;
			Если 
				ДанныеДокумента.ВыборкаСтрокТовары.Индекс(СтрокаТовар) = ДанныеДокумента.ВыборкаСтрокТовары.Количество() - 1 Тогда
				
				мсвДопОбластиПодвала = Новый Массив;
				мсвДопОбластиПодвала.Добавить(ОбластьИтого);
				мсвДопОбластиПодвала.Добавить(ОбластьПодвал);
				
			КонецЕсли;
			
			// Выводим строку, делая проверку попадания на лист.
			НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока,
				ОбластьШапкаТаблицы, ОбластьИтогоПоСтранице, НомерСтраницы, СтруктураИтоговПоСтранице,
				Документ, мсвДопОбластиПодвала);
			
			// Инициализация итогов по странице
		Если НомерСтраницы <> НомерСтраницыПред Тогда
				СтруктураИтоговПоСтранице = Новый Структура("Сумма", 0);
				НомерСтраницыПред = НомерСтраницы;
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница:" + " " + НомерСтраницы;
		КонецЕсли;
			
			// Добавляем итоги
			УправлениеПечатьюПлатформа.ДобавитьИтогиПоСтранице(СтрокаТовар, СтруктураИтоговПоСтранице);
		КонецЦикла;
		
		// Выводим последний подвал, если страниц больше единицы.
		Если НомерСтраницы > 2 Тогда
			УправлениеПечатьюПлатформа.
			ВывестиИтогиПоСтранице(ТабличныйДокумент, ОбластьИтогоПоСтранице, СтруктураИтоговПоСтранице, Документ);
		КонецЕсли;
		
		// Выводим итоги по документу в общем
		СуммаИтого = ДанныеДокумента.ВыборкаСтрокТовары.Итог("Сумма");
		ОбластьИтого.Параметры.Сумма = Формат(СуммаИтого, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьИтого);

		// Выводим подвал документа
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента);
		// Форма регламентированная, все суммы в руб., итого - тоже в руб.
		ОбластьПодвал.Параметры.СуммаСписанияПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаИтого,
			Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить());
		
		// Комиссия
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ПредседательКомиссии);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ЧленКомиссии1);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ЧленКомиссии2);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.МОЛ);
		
		УправлениеПечатьюПлатформа.
		ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьПодвал, , , НомерСтраницы, , Документ);
		
		// Отметим конец области документа
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ16Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьТОРГ16Общая()

Функция ПечатьТОРГ13Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина; 
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		
		// Получим данные из документа
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиТОРГ13(Документ);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТОРГ13");
		
		ОбластьЗаголовок        = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы     = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
		ОбластьПодвал           = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПредставления = УправлениеПечатьюПлатформа.СформироватьСтруктуруПредставления();
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", Документ.ПодразделениеКомпании);
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = Документ.Дата;
		ОбластьЗаголовок.Параметры.ОрганизацияПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ДанныеДокумента.Организация, СтруктураПредставления, ДополнительныеПараметры);
		
		ОбластьЗаголовок.Параметры.ОрганизацияПоОКПО = ДанныеДокумента.Организация.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ОтправительПодразделение = 
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ДанныеДокумента.Грузоотправитель, Документ.Дата);
		ОбластьЗаголовок.Параметры.ПолучательПодразделение = 
			УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ДанныеДокумента.Грузополучатель, Документ.Дата);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ВалютаРегл   = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
		КурсРегл     = РаботаСКурсамиВалютПлатформа.ПолучитьКурсВалюты(ВалютаРегл, ДанныеДокумента.Дата);
		ВалютаУпр    = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
		ВалютаОтчета = ?(ДанныеДокумента.Розничный, ВалютаРегл, ДанныеДокумента.ВалютаДокумента);
		КурсОтчета   = ?(ДанныеДокумента.Розничный, КурсРегл, ДанныеДокумента.КурсДокумента);
		
		Если НЕ ЗначениеЗаполнено(ДанныеДокумента.КурсВалютыУпр) Тогда
			КурсУпр = РаботаСКурсамиВалютПлатформа.ПолучитьКурсВалюты(ВалютаУпр, ДанныеДокумента.Дата);
		Иначе
			КурсУпр = ДанныеДокумента.КурсВалютыУпр; 
		КонецЕсли; 
		
		ПерерасчетВВалюте = Ложь;
		
		НеВыводитьНоменклатуруСНулевымКоличеством = ПолучитьЗначениеПараметраСтруктуры(
			ДанныеДокумента,
			"НеВыводитьНоменклатуруСНулевымКоличеством",
			Ложь);
		
		Если ВалютаОтчета <> ВалютаРегл Тогда
			
			ДокументОбъектСтруктура = УправлениеПечатьюПлатформа.ДанныеДокументаДляПерерасчетаТаблицы();
			ЗаполнитьЗначенияСвойств(ДокументОбъектСтруктура, ДанныеДокумента);
			ДокументОбъектСтруктура.Документ = Документ;
			
			ЗащищенныеФункцииАльфаАвтоСервер.ПерерасчетТаблицыТоваров(ДанныеДокумента.ТаблицаСуммСписания,
				ДокументОбъектСтруктура,
				ВалютаРегл);
			ПерерасчетВВалюте = Истина;
			
		КонецЕсли;
		
		СтрокНаСтранице = 25;
		СтрокШапки      = 12;
		СтрокПодвала    = 5;
		НомерСтраницы   = 1;
		
		// Определим, что показывать в колонке кода - код или артикул.
		НазваниеПоНастройке = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Синоним;
		ОбластьШапкаТаблицы.Параметры.ИмяКолонкиКода = СтрЗаменить(НазваниеПоНастройке, "/", " / ");
		
		// Выводим заголовок таблицы
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ОбластьШапкаТаблицы.Параметры.Валюта = ВалютаРегл;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		КоличествоСтрок = ДанныеДокумента.КоличествоСтрок;
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
				
		// Инициализация итогов по странице.
		ИтогКоличествоМестПоСтранице = 0;
		ИтогМассаБруттоПоСтранице    = 0;
		ИтогМассыНеттоПоСтранице     = 0;
		ИтогСуммыПоСтранице          = 0;
		
		// Инициализация итогов по документу.
		ИтогоКоличество  = 0;
		ИтогоМассаБрутто = 0;
		ИтогоМассаНетто  = 0;
		ИтогоСумма       = 0;
		Ном              = 0;
		Для Каждого ТекСтрока Из ДанныеДокумента.ТаблицаСуммСписания Цикл
			
			Если НеВыводитьНоменклатуруСНулевымКоличеством
				И ТекСтрока.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Ном = Ном + 1;
			ЦелаяСтраница	= (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				ИЛИ ((ПереноситьПоследнююСтроку = 1) И (Ном = КоличествоСтрок)) Тогда
				ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = Формат(
					ИтогКоличествоМестПоСтранице, ФорматВыводаКоличества);
				ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогМассаБруттоПоСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице  = ИтогМассыНеттоПоСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = Формат(ИтогСуммыПоСтранице, ФорматВыводаСуммы);
				ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				// Инициализация итогов по странице.
				ИтогКоличествоМестПоСтранице = 0;
				ИтогМассаБруттоПоСтранице    = 0;
				ИтогМассаНеттоПоСтранице     = 0;
				ИтогСуммыПоСтранице          = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница" + " " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			КонецЕсли;
			
			Если ДанныеДокумента.ТребуетсяПересчет Тогда
				Если ДанныеДокумента.Розничный Тогда
					Сумма = ТекСтрока.СуммаРозн;
				Иначе
					Если ВалютаОтчета = ВалютаРегл
						ИЛИ ПерерасчетВВалюте Тогда
						Сумма = ТекСтрока.Сумма - ТекСтрока.СуммаНДС;
					Иначе
						Сумма =
							РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрока.Сумма, ВалютаОтчета, КурсОтчета, ВалютаРегл, КурсРегл)
							- ?(ТекСтрока.СуммаНДС <> 0,
								РаботаСКурсамиВалютПлатформа.
								ПересчетПоВалюте(ТекСтрока.СуммаНДС, ВалютаОтчета, КурсОтчета, ВалютаРегл, КурсРегл),
							0);
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если ВалютаОтчета = ВалютаРегл
					ИЛИ ПерерасчетВВалюте Тогда
					Сумма = ТекСтрока.Сумма - ТекСтрока.СуммаНДС;
				Иначе
					Сумма = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрока.Сумма, ВалютаОтчета,
						КурсОтчета, ВалютаРегл, КурсРегл);
					СуммаНДС = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрока.СуммаНДС, ВалютаОтчета,
						КурсОтчета, ВалютаРегл, КурсРегл);
					Сумма = Сумма - СуммаНДС;
				КонецЕсли;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ТекСтрока);
			Характеристика = Строка(ТекСтрока.ХарактеристикаНоменклатуры);
			ОбластьСтрока.Параметры.ТоварНаименование =
				УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ТекСтрока.Номенклатура)
				+ ?(Характеристика = "", "", ", " + Характеристика);
			ОбластьСтрока.Параметры.ТоварКод = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(ТекСтрока.Номенклатура);
			ОбластьСтрока.Параметры.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения;
			ОбластьСтрока.Параметры.ЕдиницаИзмеренияКодПоОКЕИ = ТекСтрока.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
			
			ОбластьСтрока.Параметры.КоличествоВОдномМесте = Формат(ТекСтрока.ЕдиницаИзмерения.Коэффициент,
				ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.КоличествоМест = Формат(ТекСтрока.Количество, ФорматВыводаКоличества);
			
			Вес									   = Справочники.Номенклатура.ПолучитьВесНоменклатуры(ТекСтрока.Номенклатура, 
														ТекСтрока.ЕдиницаИзмерения);
			МассаБрутто                            = ТекСтрока.Количество * Вес;
			ОбластьСтрока.Параметры.МассаБрутто    = МассаБрутто;
			ОбластьСтрока.Параметры.Цена           = Формат(Сумма / ТекСтрока.Количество, ФорматВыводаСуммы);
			ОбластьСтрока.Параметры.Сумма          = Формат(Сумма, ФорматВыводаСуммы);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			// Обновим итоги по странице
			ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + ТекСтрока.Количество;
			ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице    + МассаБрутто;
			ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице     + 0;
			ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + Сумма;
			
			// Обновим итоги по документу
			ИтогоКоличество  = ИтогоКоличество  + ТекСтрока.Количество;
			ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБрутто;
			ИтогоМассаНетто  = ИтогоМассаНетто  + 0;
			ИтогоСумма       = ИтогоСумма       + Сумма;
		КонецЦикла;
		
		ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = Формат(ИтогКоличествоМестПоСтранице,
			ФорматВыводаКоличества);
		ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогМассаБруттоПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице  = ИтогМассыНеттоПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = Формат(ИтогСуммыПоСтранице, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);

		// Выводим итоги по документу в целом
		ОбластьВсего.Параметры.ИтогоКоличествоМест = Формат(ИтогоКоличество, ФорматВыводаКоличества);
		ОбластьВсего.Параметры.ИтогоМассаБрутто    = ИтогоМассаБрутто;
		ОбластьВсего.Параметры.ИтогоМассаНетто     = ИтогоМассаНетто;
		ОбластьВсего.Параметры.ИтогоСумма          = Формат(ИтогоСумма, ФорматВыводаСуммы);
		ТабличныйДокумент.Вывести(ОбластьВсего);
		
		// Выводим подвал документа
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента);
		
		// Текст без копеек (не Сто 00   , а   просто Сто).
		ПараметрыПрописиОбщ = ВалютаРегл.ПараметрыПрописи;
		ПараметрыПрописи = СтрЗаменить(ПараметрыПрописиОбщ, "1", "0");
		ПараметрыПрописи = СтрЗаменить(ПараметрыПрописи, "2", "0");
		ПараметрыПрописи = СтрЗаменить(ПараметрыПрописи, "3", "0");
		ФорматнаяСтрока = "НП=Ложь; НД=Ложь";
		ОбластьПодвал.Параметры.ИтогоСуммаПрописью = ЧислоПрописью(Цел(ИтогоСумма), ФорматнаяСтрока,
			ПараметрыПрописи);
		ОбластьПодвал.Параметры.Валюта = ВалютаРегл;
		ФорматнаяСтрока = "НП=Ложь; НД=Истина";
		ОбщаяСумма = ЧислоПрописью(ИтогоСумма, ФорматнаяСтрока, ПараметрыПрописиОбщ);
		ОбластьПодвал.Параметры.ИтогоСуммаКоп = СокрЛП(
			СтрЗаменить(ОбщаяСумма, ОбластьПодвал.Параметры.ИтогоСуммаПрописью, ""));
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.Отпустил);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.Получил);
		
		УправлениеПечатьюПлатформа.
		ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьПодвал, , , НомерСтраницы, , Документ);
		
		// Зададим параметры макета.
		ТабличныйДокумент.ПолеСлева  = 15;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		// Отметим конец области документа.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ13Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьТОРГ13Общая()

Функция ПечатьТТНОбщая(МассивОбъектов, ОбъектыПечати)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина; 
	Для Каждого Документ Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДатаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Дата");
		
		ДанныеПечати = ПолучитьДанныеПечатиТТН(Документ);
		
		Макет = ПолучитьМакетТТН(ДатаДокумента);
		
		ОбластьВесьМакет = Макет.ПолучитьОбласть("ВесьМакет");
		ОбластьВесьМакет.Параметры.Заполнить(ДанныеПечати);
		
		// выведем или удалим ШК
		УправлениеПечатьюПлатформа.ОбработатьШтрихКодОбъекта(ОбластьВесьМакет, Документ);
		
		СтруктураОбластей = ПолучитьСтруктурыОбластейМакета(ДатаДокумента);
		
		НачалоВторогоЛиста = Макет.ПолучитьОбласть("ВторойЛист");
		НомерСтраницы = 2;
		НомерСтраницыПред = 2;
		Для Каждого Обл Из СтруктураОбластей Цикл
			ОбластьПункт = ОбластьВесьМакет.ПолучитьОбласть(Обл.Ключ);
			НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьПункт,
				НачалоВторогоЛиста, , НомерСтраницы, , Документ);
		КонецЦикла;
	
		// Отметим конец области документа.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТНОбщая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьТТНОбщая()

Функция ПечатьТ1Общая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина; 
	Для Каждого Документ Из МассивОбъектов Цикл
		Если НЕ ПервыйДокумент Тогда // новый документ должен быть на отдельной странице
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ФорматВыводаСуммы      = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(Документ);
		ФорматВыводаКоличества = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаКоличества(Документ);
		
		// Зададим параметры макета
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		// Получим данные из документа
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиТ1(Документ);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТТН");
		
		ОбластьЗаголовок        	= Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы			= Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрока				= Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице		= Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего				= Макет.ПолучитьОбласть("Всего");
		ОбластьПодвал           	= Макет.ПолучитьОбласть("Подвал");
		ОбластьТранспортныйРаздел   = Макет.ПолучитьОбласть("ТранспортныйРаздел");
		ОбластьСведенияОГрузе	    = Макет.ПолучитьОбласть("СведенияОГрузе");
		ОбластьПодвалСведенийОГрузе	= Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
		ОбластьПогрузочныеОперации	= Макет.ПолучитьОбласть("ПогрузочныеОперации");
		ОбластьПрочиеСведения		= Макет.ПолучитьОбласть("ПрочиеСведения");
		
		СтруктураПредставления1 = УправлениеПечатьюПлатформа.СформироватьСтруктуруПредставления();
		СтруктураПредставления2 = ПолучитьСтруктуруПредставленияТОРГ_АдресФактический();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Шапка");
		ОбластьЗаголовок.Параметры.НомерДокумента   = ДанныеДокумента.Номер;
		ОбластьЗаголовок.Параметры.ДатаДокумента    = Формат(ДанныеДокумента.Дата, "ДЛФ=D");
		ОбластьЗаголовок.Параметры.Плательщик       = ДанныеДокумента.Плательщик;
		
		Если ЗначениеЗаполнено(ДанныеДокумента.Плательщик) Тогда
			
			ДополнительныеПараметры = Новый Структура("НаДату", ДанныеДокумента.Дата);
			ОбластьЗаголовок.Параметры.ПлательщикПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Плательщик,
				СтруктураПредставления1,
				ДополнительныеПараметры
			);
			
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Грузоотправитель = ДанныеДокумента.Грузоотправитель;
		
		Если ТипЗнч(ОбластьЗаголовок.Параметры.Грузоотправитель) = Тип("СправочникСсылка.СкладыКомпании") Тогда
			
			ОбластьЗаголовок.Параметры.ГрузоотправительПоОКПО = ОбластьЗаголовок
				.Параметры
				.Грузоотправитель
				.Организация
				.КодПоОКПО;
			ОбластьЗаголовок.Параметры.ГрузоотправительПредставление = ДанныеДокумента.Грузоотправитель;
			
		ИначеЕсли ТипЗнч(ОбластьЗаголовок.Параметры.Грузоотправитель) = Тип("СправочникСсылка.ПодразделенияКомпании") Тогда
			
			ОбластьЗаголовок.Параметры.ГрузоотправительПоОКПО = ОбластьЗаголовок.Параметры.Грузоотправитель.Организация.КодПоОКПО;
			ДополнительныеПараметры = Новый Структура(
				"ПодразделениеКомпании,ИспользоватьКИПодразделения,НаДату",
				ОбластьЗаголовок.Параметры.Грузоотправитель,
				Истина,
				ДанныеДокумента.Дата
			);
			ГрузоотправительПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Грузоотправитель.Организация,
				СтруктураПредставления2,
				ДополнительныеПараметры
			);
			ОбластьЗаголовок.Параметры.ГрузоотправительПредставление = ГрузоотправительПредставление;
			
		ИначеЕсли
			ТипЗнч(ОбластьЗаголовок.Параметры.Грузоотправитель) = Тип("СправочникСсылка.Контрагенты")
			Или ТипЗнч(ОбластьЗаголовок.Параметры.Грузоотправитель) = Тип("СправочникСсылка.Организации")
		Тогда
			
			ОбластьЗаголовок.Параметры.ГрузоотправительПоОКПО = ОбластьЗаголовок.Параметры.Грузоотправитель.КодПоОКПО;
			ДополнительныеПараметры = Новый Структура(
				"ПодразделениеКомпании,ИспользоватьКИПодразделения,НаДату",
				ДанныеДокумента.ПодразделениеКомпании,
				Истина,
				ДанныеДокумента.Дата
			);
			ГрузоотправительПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Грузоотправитель,
				СтруктураПредставления2,
				ДополнительныеПараметры
			);
			ОбластьЗаголовок.Параметры.ГрузоотправительПредставление = ГрузоотправительПредставление;
			
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Грузополучатель  = ДанныеДокумента.Грузополучатель;
		
		Если ТипЗнч(ОбластьЗаголовок.Параметры.Грузополучатель) = Тип("СправочникСсылка.СкладыКомпании") Тогда
			
			ОбластьЗаголовок.Параметры.ГрузополучательПоОКПО = ОбластьЗаголовок.Параметры.Грузополучатель.Организация.КодПоОКПО;
			ОбластьЗаголовок.Параметры.ГрузополучательПредставление = ДанныеДокумента.Грузополучатель;
			
		ИначеЕсли ТипЗнч(ОбластьЗаголовок.Параметры.Грузополучатель) = Тип("СправочникСсылка.ПодразделенияКомпании") Тогда
			
			ОбластьЗаголовок.Параметры.ГрузополучательПоОКПО = ОбластьЗаголовок.Параметры.Грузополучатель.Организация.КодПоОКПО;
			ДополнительныеПараметры = Новый Структура(
				"ПодразделениеКомпании,ИспользоватьКИПодразделения,НаДату",
				ОбластьЗаголовок.Параметры.Грузополучатель,
				Истина,
				ДанныеДокумента.Дата
			);
			ГрузополучательПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Грузополучатель.Организация,
				СтруктураПредставления2,
				ДополнительныеПараметры
			);
			ОбластьЗаголовок.Параметры.ГрузополучательПредставление = ГрузополучательПредставление;
			
		ИначеЕсли
			ТипЗнч(ОбластьЗаголовок.Параметры.Грузополучатель) = Тип("СправочникСсылка.Контрагенты")
			Или ТипЗнч(ОбластьЗаголовок.Параметры.Грузополучатель) = Тип("СправочникСсылка.Организации")
		Тогда
			
			ОбластьЗаголовок.Параметры.ГрузополучательПоОКПО = ОбластьЗаголовок.Параметры.Грузополучатель.КодПоОКПО;
			ДополнительныеПараметры = Новый Структура(
				"ПодразделениеКомпании,ИспользоватьКИПодразделения,НаДату",
				ДанныеДокумента.ПодразделениеКомпании,
				Истина,
				ДанныеДокумента.Дата
			);
			ГрузополучательПредставление = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Грузополучатель,
				СтруктураПредставления2,
				ДополнительныеПараметры
			);
			ОбластьЗаголовок.Параметры.ГрузополучательПредставление = ГрузополучательПредставление;
			
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.ПлательщикПоОКПО = ?(ЗначениеЗаполнено(ДанныеДокумента.Плательщик),
			ОбластьЗаголовок.Параметры.Плательщик.КодПоОКПО, "");
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Выводим заголовок таблицы
		ОбластьШапкаТаблицы.Параметры.Валюта = ДанныеДокумента.ВалютаДокумента;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		НомерСтраницы	= 2;
		НомерСтраницыПред = НомерСтраницы;
		
		// Инициализация итогов по документу.
		Ном       = 0;
		ИтогоМест = 0;
		ИтогоВес  = 0;
		
		// Инициализация итогов по странице.
		СтруктураИтоговПоСтранице = Новый Структура("Количество, СуммаВсего", 0, 0);
		
		// Заполним параметры шапки таблицы для следующего листа.
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы  = "Страница:" + " " + НомерСтраницы;
		ОбластьШапкаТаблицы.Параметры.ТекстЗаголовка = НСтр("ru = 'Товарно-транспортная накладная товарный раздел'") + " ";
	
		ВыборкаСтрок = ДанныеДокумента.ВыборкаТабличнойЧасти;
		КоличествоСтрок = ВыборкаСтрок.Количество();
		
		// Доп. области
		мсвДопОбластиПодвала = Новый Массив;
		мсвДопОбластиПодвала.Добавить(ОбластьВсего);
		мсвДопОбластиПодвала.Добавить(ОбластьПодвал);
		
		Для Каждого СтрокаТоваров Из ВыборкаСтрок Цикл
			// Заполняем данные строки
			Ном = Ном + 1;
			ТоварНаименование = УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(СтрокаТоваров.Номенклатура);
			Характеристика = СтрокаТоваров.ХарактеристикаНоменклатуры;
			// Характеристику выводим в строке с наименованием.
			ТоварНаименование = ТоварНаименование 
									+ ?(ЗначениеЗаполнено(Характеристика),", " 
									+ УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(Характеристика), "");
			
			Цена = СтрокаТоваров.СуммаВсего / (СтрокаТоваров.КоличествоБазовое);
			
			МассаБрутто = 0;
			Если ЕстьРеквизит(ВыборкаСтрок, "КодПродукции") Тогда
				ОбластьСтрока.Параметры.КодПродукции = СтрокаТоваров.КодПродукции;
			Иначе
				ОбластьСтрока.Параметры.КодПродукции = СтрокаТоваров.Номенклатура.Код;
			КонецЕсли;
			
			Если ЕстьРеквизит(ВыборкаСтрок, "Артикул") Тогда
				ОбластьСтрока.Параметры.Артикул = СтрокаТоваров.Артикул;
			Иначе
				ОбластьСтрока.Параметры.Артикул = СтрокаТоваров.Номенклатура.Артикул;
			КонецЕсли;
			ОбластьСтрока.Параметры.Количество = Формат(СтрокаТоваров.КоличествоБазовое, ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.Цена = Формат(Цена, ФорматВыводаСуммы);
			ОбластьСтрока.Параметры.ТоварНаименование = ТоварНаименование;
			ОбластьСтрока.Параметры.Номенклатура = СтрокаТоваров.Номенклатура;
			Если ЕстьРеквизит(ВыборкаСтрок, "ЕдиницаИзмерения") Тогда
				МассаБрутто = Справочники.Номенклатура.ПолучитьВесНоменклатуры(СтрокаТоваров.Номенклатура, СтрокаТоваров.ЕдиницаИзмерения)
								* СтрокаТоваров.Количество;
				ОбластьСтрока.Параметры.БазоваяЕдиницаНаименование = УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(
					СтрокаТоваров.ЕдиницаИзмерения);
				ОбластьСтрока.Параметры.ВидУпаковки = СтрокаТоваров.ЕдиницаИзмерения.ЕдиницаПоКлассификатору;
			Иначе
				МассаБрутто = Справочники.Номенклатура.ПолучитьВесНоменклатуры(СтрокаТоваров.Номенклатура)
								* СтрокаТоваров.Количество;	
			КонецЕсли;
			ОбластьСтрока.Параметры.КоличествоМест = Формат(СтрокаТоваров.Количество, ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.Масса          = Формат(МассаБрутто,              ФорматВыводаКоличества);
			ОбластьСтрока.Параметры.СуммаВсего     = Формат(СтрокаТоваров.СуммаВсего, ФорматВыводаСуммы);
			
			ИтогоМест = ИтогоМест + СтрокаТоваров.Количество;
			ИтогоВес  = ИтогоВес + МассаБрутто;
			
			// Выводим строку, делая проверку попадания на лист
			НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока,
				ОбластьШапкаТаблицы, ОбластьИтоговПоСтранице, НомерСтраницы, СтруктураИтоговПоСтранице, Документ, 
				мсвДопОбластиПодвала);
			
			// Инициализация итогов по странице
			Если НомерСтраницы <> НомерСтраницыПред Тогда
				СтруктураИтоговПоСтранице = Новый Структура("Количество, СуммаВсего", 0, 0);
				НомерСтраницыПред = НомерСтраницы;
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Страница: " + НомерСтраницы;
			КонецЕсли;
			
			// Обновим итоги по странице
			СтруктураИтоговПоСтранице.Количество = СтруктураИтоговПоСтранице.Количество + СтрокаТоваров.КоличествоБазовое;
			СтруктураИтоговПоСтранице.СуммаВсего = СтруктураИтоговПоСтранице.СуммаВсего + (СтрокаТоваров.СуммаВсего);
		КонецЦикла;
		
			// Выводим последний подвал, если страниц больше единицы.
		Если НомерСтраницы > 2 Тогда
			УправлениеПечатьюПлатформа.
			ВывестиИтогиПоСтранице(ТабличныйДокумент, ОбластьИтоговПоСтранице, СтруктураИтоговПоСтранице, Документ);
		КонецЕсли;
		
		ИтогоКоличество = ДанныеДокумента.ВыборкаТабличнойЧасти.Итог("КоличествоБазовое");
		ИтогоСуммаСНДС  = ДанныеДокумента.ВыборкаТабличнойЧасти.Итог("СуммаВсего");
		
		// Выводим итоги по документу в целом.
		ОбластьВсего.Параметры.Количество = Формат(ИтогоКоличество, ФорматВыводаКоличества);
		ОбластьВсего.Параметры.СуммаВсего = Формат(ИтогоСуммаСНДС, ФорматВыводаСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьВсего);
		
		// Выводим подвал документа.
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.Руководитель);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.ГлавныйБухгалтер);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.Отпустил);
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента.Получил);
		ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, , ",,,,,,,,0");
		ОбластьПодвал.Параметры.КоличествоСтрок = КоличествоСтрок;
		ОбластьПодвал.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтогоМест, , ",,,,,,,,3");
		ОбластьПодвал.Параметры.ВсегоНаименований = ЧислоПрописью(КоличествоСтрок, , ",,,,,,,,0");
		ОбластьПодвал.Параметры.ОтпущеноНаСуммуПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтогоСуммаСНДС,
			ДанныеДокумента.ВалютаДокумента);
		ОбластьПодвал.Параметры.ВсегоКОплате = Формат(ИтогоСуммаСНДС, ФорматВыводаСуммы);
		Если НЕ Цел(ИтогоМест) = ИтогоМест Тогда
			Если ИтогоВес <> 0 Тогда
				ОбластьПодвал.Параметры.МассаГрузаБрутто = ЧислоПрописью(ИтогоВес, , ",,,,,,,,3");
			КонецЕсли;
			ОбластьПодвал.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтогоМест, , ",,,,,,,,3");
		Иначе
			Если ИтогоВес <> 0 Тогда
				ОбластьПодвал.Параметры.МассаГрузаБрутто = ЧислоПрописью(ИтогоВес, , ",,,,,,,,0");
			КонецЕсли;
			ОбластьПодвал.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтогоМест, , ",,,,,,,,0");
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Область Транс. раздел.
		Если ТипЗнч(ДанныеДокумента.ЛицензионнаяКарточка) = Тип("Булево") Тогда
			Зачеркнутый = ДанныеДокумента.ЛицензионнаяКарточка;
			ШрифтСтандарт   = Новый Шрифт(ОбластьТранспортныйРаздел.Области.Стандарт.Шрифт, , , , , , НЕ Зачеркнутый);
			ШрифтОграничено = Новый Шрифт(ОбластьТранспортныйРаздел.Области.Стандарт.Шрифт, , , , , , Зачеркнутый);
			ОбластьТранспортныйРаздел.Области.Стандарт.Шрифт   = ШрифтСтандарт;
			ОбластьТранспортныйРаздел.Области.Ограничено.Шрифт = ШрифтОграничено;
		КонецЕсли;
		
		ОбластьТранспортныйРаздел.Параметры.СрокДоставки              = ДанныеДокумента.СрокДоставки;
		ОбластьТранспортныйРаздел.Параметры.Номер                     = ДанныеДокумента.Номер;
		ОбластьТранспортныйРаздел.Параметры.ОрганизацияПеревозчик     = УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ДанныеДокумента.Перевозчик, ДанныеДокумента.Дата);
		ОбластьТранспортныйРаздел.Параметры.МаркаАвтомобиля           = ДанныеДокумента.МаркаАвтомобиля;
		ОбластьТранспортныйРаздел.Параметры.ГосНомерАвтомобиля        = ДанныеДокумента.ГосНомерАвтомобиля;
		ОбластьТранспортныйРаздел.Параметры.ОрганизацияЗаказчик       = УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ДанныеДокумента.Заказчик, ДанныеДокумента.Дата);
		ОбластьТранспортныйРаздел.Параметры.ФИОВодителя               = ДанныеДокумента.Водитель;
		ОбластьТранспортныйРаздел.Параметры.ВодительскоеУдостоверение = ДанныеДокумента.ВодительскоеУдостоверение;
		ОбластьТранспортныйРаздел.Параметры.ВидПеревозки              = ДанныеДокумента.ВидПеревозки;
		ОбластьТранспортныйРаздел.Параметры.ПунктПогрузки             = ДанныеДокумента.ПунктПогрузки;
		ОбластьТранспортныйРаздел.Параметры.ПунктРазгрузки            = ДанныеДокумента.ПунктРазгрузки;
		ОбластьТранспортныйРаздел.Параметры.Прицеп                    = ДанныеДокумента.МаркаПрицепа;
		ОбластьТранспортныйРаздел.Параметры.ГосНомерПрицепа           = ДанныеДокумента.ГосНомерПрицепа;
		
		ОбластьСведенияОГрузе.Параметры.КраткоеНаименованиеГруза	  = ДанныеДокумента.ОписаниеГруза;
		
		ТабличныйДокумент.Вывести(ОбластьТранспортныйРаздел);
		ТабличныйДокумент.Вывести(ОбластьСведенияОГрузе);
		ТабличныйДокумент.Вывести(ОбластьПодвалСведенийОГрузе);
		ТабличныйДокумент.Вывести(ОбластьПогрузочныеОперации);
		
		ОбластьПрочиеСведения.Параметры.Валюта = ДанныеДокумента.ВалютаДокумента;
		ТабличныйДокумент.Вывести(ОбластьПрочиеСведения);
		
		ТабличныйДокумент.АвтоМасштаб = Истина;
		
		// Отметим конец области документа
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	КонецЦикла;
	
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Т1Общая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьТ1Общая()

#КонецОбласти

Функция ПолучитьДанныеПечатиТТН(Документ)
	
	ДанныеДокумента = ПолучитьДанныеДокументаДляПечатиТТН(Документ);
	
	ДанныеПечати = ПолучитьСтруктуруДанныхДляПечатиТТН();
	ЗаполнитьЗначенияСвойств(ДанныеПечати, ДанныеДокумента);
	ДобавитьПроизводныеДанные(ДанныеПечати, ДанныеДокумента);
	ЗаменитьСсылкиПредставлениями(ДанныеПечати, ДанныеДокумента.ДатаДокумента);
	
	Возврат ДанныеПечати;

КонецФункции

Функция ПолучитьДанныеДокументаДляПечатиТТН(Документ)
	
	Объект = Документ.ПолучитьОбъект();
	ДанныеОбъекта = ПолучитьСтруктуруДанныхДляПечатиТТН();
	
	ДанныеОбъекта.Вставить("ДатаДокумента", Объект.Дата);
	ДанныеОбъекта.Вставить("НомерДокумента", Объект.Номер);
	
	ДанныеОбъекта.АдресДоставки = Объект.АдресДоставки;
	ДанныеОбъекта.ОрганизацияПеревозчик = Объект.Перевозчик; 
	ДанныеОбъекта.Водитель = Объект.Водитель;
	ДанныеОбъекта.МаркаАвтомобиля = Объект.МодельАвтомобиля;
	ДанныеОбъекта.ГосНомерАвтомобиля = Объект.ГосНомерАвтомобиля;
	
	ЗаполнитьУчастниковПеревозки(Объект, ДанныеОбъекта);
	ЗаполнитьДанныеОГрузе(Объект, ДанныеОбъекта); 
	ЗаполнитьДокументОбОтгрузке(Объект, ДанныеОбъекта);
	ЗаполнитьДоговорОПеревозке(Объект, ДанныеОбъекта);
	
	Возврат ДанныеОбъекта;
	
КонецФункции

Процедура ЗаполнитьУчастниковПеревозки(Объект, ДанныеОбъекта)
	
	ТипОбъекта = ТипЗнч(Объект);
	
	РеквизитГрузоотправителя = "";
	РеквизитГрузополучателя = "";
	
	Если ТипОбъекта = Тип("ДокументОбъект.РеализацияАвтомобилей") 
		ИЛИ ТипОбъекта = Тип("ДокументОбъект.РеализацияТоваров") Тогда
		
		РеквизитГрузоотправителя = ?(ЗначениеЗаполнено(Объект.Грузоотправитель),
											"Грузоотправитель",
											"СкладКомпании");
		РеквизитГрузополучателя = ?(ЗначениеЗаполнено(Объект.Грузополучатель),
											"Грузополучатель",
											"Контрагент");
		
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ИзвлечениеТоваровИзПроизводства") Тогда
		
		РеквизитГрузоотправителя = "Цех";
		РеквизитГрузополучателя = "СкладКомпании";
		
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ПеремещениеТоваровВПроизводство") Тогда
		
		РеквизитГрузоотправителя = "СкладКомпании";
		РеквизитГрузополучателя = "Цех";
		
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ПеремещениеАвтомобилей") Тогда
		
		РеквизитГрузоотправителя = "СкладКомпании";
		РеквизитГрузополучателя = "СкладПолучатель";
		
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ПеремещениеНезавершенногоПроизводства") Тогда
		
		РеквизитГрузоотправителя = "Цех";
		РеквизитГрузополучателя = "ЦехПолучатель";
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(РеквизитГрузоотправителя) Тогда
		ДанныеОбъекта.Грузоотправитель = Объект[РеквизитГрузоотправителя];
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(РеквизитГрузополучателя) Тогда
		ДанныеОбъекта.Грузополучатель = Объект[РеквизитГрузополучателя];
	КонецЕсли;
	
	Если ЕстьРеквизит(Объект, "Заказчик") Тогда
		Если ТипЗнч(Объект.Заказчик) = Тип("СправочникСсылка.Контрагенты") Тогда
			ДанныеОбъекта.Заказчик = Объект.Заказчик;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеОГрузе(Объект, ДанныеОбъекта)
	
	КоличествоГруза = 0;
	МассаГруза = 0; 
	НаименованиеГруза = "";
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Объект));
	
	Если ОбъектМетаданных.ТабличныеЧасти.Найти("Товары") <> Неопределено Тогда
		КоличествоГруза = КоличествоГруза + Объект["Товары"].Итог("Количество");
		Для каждого Товар Из Объект["Товары"] Цикл
			МассаГруза = МассаГруза + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Товар.Номенклатура, "Вес");
		КонецЦикла;
		НаименованиеГруза = "Части запасные к автомобилям, прицепам автомобильным";
	КонецЕсли;
	
	Если ОбъектМетаданных.ТабличныеЧасти.Найти("Автомобили") <> Неопределено Тогда
		КоличествоГруза = КоличествоГруза + Объект["Автомобили"].Итог("Количество");
		МассаГруза = 0; // нельзя выводить массу только товаров, а реквизита вес у авто пока нет
		
		Если НЕ ПустаяСтрока(НаименованиеГруза) Тогда
			НаименованиеГруза = ", части запасные к автомобилям, прицепам автомобильным";
		КонецЕсли;
		НаименованиеГруза = "Автомобиль" + НаименованиеГруза;
	КонецЕсли;
	
	ДанныеОбъекта.КоличествоГруза = КоличествоГруза;
	Если МассаГруза > 0 Тогда
		ДанныеОбъекта.МассаГруза = МассаГруза;
	КонецЕсли;
	
	ДанныеОбъекта.НаименованиеГруза = НаименованиеГруза;
	ДанныеОбъекта.ОбъявленнаяСтоимостьГруза = Объект.СуммаДокумента;
	
КонецПроцедуры

Процедура ЗаполнитьДокументОбОтгрузке(Объект, ДанныеОбъекта)
	
	Если НЕ ЭтоДокументРеализация(ТипЗнч(Объект)) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СчетФактураВыданный.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	               |ГДЕ
	               |	СчетФактураВыданный.ДокументОснование = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДанныеОбъекта.ДокументОбОтгрузке = Выборка.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДоговорОПеревозке(Объект, ДанныеОбъекта)
	
	Если НЕ ЭтоДокументРеализация(ТипЗнч(Объект)) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеОбъекта.Грузополучатель = Объект.Контрагент Тогда
		ДанныеОбъекта.ДоговорОПеревозке = Объект.ДоговорВзаиморасчетов;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПроизводныеДанные(ДанныеПечати, ДанныеДокумента)
	
	ДатаДокумента = ДанныеДокумента.ДатаДокумента;
	НомерДокумента = ДанныеДокумента.НомерДокумента;
	
	ДатаДляПечати = Формат(ДатаДокумента,"ДЛФ=D");
		
	Если ДатаДокумента < '20120313' Тогда
		ДанныеПечати.Вставить("ДатаСоставления", ДатаДляПечати + " /");
	ИначеЕсли ДатаДокумента >= '20120313' И ДатаДокумента < '20220301' Тогда
		ДанныеПечати.Вставить("ДатаСоставления", ДатаДляПечати);
	КонецЕсли;
	
	Если ДатаДокумента >= '20210101' Тогда
		ДанныеПечати.Вставить("ТранспортнаяНакладнаяДата", ДатаДокумента);
	КонецЕсли;
	
	ДанныеПечати.Вставить("ЗаказДата", ДатаДокумента);
	ДанныеПечати.Вставить("ТННомер", НомерДокумента);
	ДанныеПечати.Вставить("ЗаказНомер", НомерДокумента);
	
КонецПроцедуры

Процедура ЗаменитьСсылкиПредставлениями(ДанныеПечати, НаДату)
	
	ДанныеПечати.ОрганизацияПеревозчик = УправлениеПечатьюПлатформа.
		ПолучитьНаименованиеСправочника(ДанныеПечати.ОрганизацияПеревозчик, НаДату);
	ДанныеПечати.Заказчик = УправлениеПечатьюПлатформа.
		ПолучитьНаименованиеСправочника(ДанныеПечати.Заказчик, НаДату);
	
	СтруктураПредставления = ПолучитьСтруктуруПредставленияТОРГ_АдресФактический();
	ДанныеПечати.Грузоотправитель = ПолучитьПредставлениеПоСтруктуре(ДанныеПечати.Грузоотправитель, СтруктураПредставления, НаДату);
	ДанныеПечати.Грузополучатель = ПолучитьПредставлениеПоСтруктуре(ДанныеПечати.Грузополучатель, СтруктураПредставления, НаДату);
	
КонецПроцедуры

Функция ПолучитьПредставлениеПоСтруктуре(Значение, СтруктураПредставления, НаДату)
	
	Если ТипЗнч(Значение) = Тип("СправочникСсылка.СкладыКомпании") 
		ИЛИ ТипЗнч(Значение) = Тип("СправочникСсылка.Цеха") Тогда
		
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.Вставить("ПодразделениеКомпании", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Значение, "ПодразделениеКомпании"));
		ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
		ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
		ДополнительныеПараметры.НаДату = НаДату;
		Возврат УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Значение, "Организация"),
			СтруктураПредставления,
			ДополнительныеПараметры);
			
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.ПодразделенияКомпании") Тогда
			
		ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
		ДополнительныеПараметры.НаДату = НаДату;
		Возврат УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
			Значение,
			СтруктураПредставления,
			ДополнительныеПараметры);
			
	Иначе
			
		Возврат УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(Значение, НаДату);
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьМакетТТН(Дата)
	
	Если Дата < '20120313' Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТТН25072011");
	ИначеЕсли Дата < '20210101' Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТТН30122011_Приложение4");
	ИначеЕсли Дата < '20220301' Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТТН21122020_Приложение4");
	Иначе 
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТОРГ.ПФ_MXL_ТН01032022_Приложение4");
	КонецЕсли;
		
	Возврат Макет;
	
КонецФункции

Функция ПолучитьСтруктурыОбластейМакета(Дата)
	
	Если Дата < '20220301' Тогда
		Ключи = "Шапка,Пункт12,Пункт3,Пункт4,Пункт5,Пункт67,Пункт8,Пункт9,Пункт10,"
				+ "Пункт11,Пункт12,Пункт_12,Пункт13,Пункт14,Пункт15,Пункт16,Пункт17";
	Иначе 
		Ключи = "Шапка,Пункт1,Пункт2,Пункт3,Пункт4,Пункт5,Пункт6,Пункт7,Пункт8,Пункт9,Пункт10,Пункт11,Пункт12";
	КонецЕсли;
			
	Возврат Новый Структура(Ключи);
	
КонецФункции

Функция ПолучитьСтруктуруДанныхДляПечатиТТН()
	
	ДанныеПечати = Новый Структура;
	
	ДанныеПечати.Вставить("Грузоотправитель");
	ДанныеПечати.Вставить("Грузополучатель");
	ДанныеПечати.Вставить("Заказчик");
	ДанныеПечати.Вставить("ДоговорОПеревозке");
	ДанныеПечати.Вставить("АдресДоставки");
	ДанныеПечати.Вставить("НаименованиеГруза");
	ДанныеПечати.Вставить("КоличествоГруза");
	ДанныеПечати.Вставить("МассаГруза");
	ДанныеПечати.Вставить("ОбъявленнаяСтоимостьГруза"); 
	ДанныеПечати.Вставить("ДокументОбОтгрузке");
	ДанныеПечати.Вставить("ОрганизацияПеревозчик");
	ДанныеПечати.Вставить("Водитель");
	ДанныеПечати.Вставить("МаркаАвтомобиля");
	ДанныеПечати.Вставить("ГосНомерАвтомобиля");
	
	Возврат ДанныеПечати;
	
КонецФункции

Функция ПолучитьСтруктуруПредставленияТОРГ_АдресФактический()
	
	СтруктураПредставления = Новый Структура;
	СтруктураПредставления.Вставить("Наименование",     "");
	СтруктураПредставления.Вставить("ИНН",              "ИНН ");
	СтруктураПредставления.Вставить("КПП",              "КПП ");
	СтруктураПредставления.Вставить("АдресФактический", "");
	СтруктураПредставления.Вставить("ТелефонРабочий",   "тел.: ");
	СтруктураПредставления.Вставить("БанковскийСчет",   "р/с ");
	СтруктураПредставления.Вставить("Банк",             НСтр("ru = 'в банке'") + " ");
	СтруктураПредставления.Вставить("БИК",              "БИК ");
	СтруктураПредставления.Вставить("КоррСчет",         "к/с ");
	Возврат СтруктураПредставления;
	
КонецФункции

Функция ПолучитьСтруктуруОснования(ВладелецОснования,ДатаДокумента, ОрганизацияДокумента) 
		
   Основание = Новый Структура();  
	
	Если  ЗначениеЗаполнено(ВладелецОснования.Основание) Тогда
				
		ДокументОснование = ВладелецОснования.Основание;
		
		Если ДокументОснование.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Доверенность ИЛИ 
			ДокументОснование.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Приказ Тогда
					
			Если ДокументОснование.ДатаВыдачи <= ДатаДокумента  И ДокументОснование.Организация = ОрганизацияДокумента Тогда
						
				Основание.Вставить("ВидДокумента", ДокументОснование.ВидПодтверждающегоДокумента);
				Основание.Вставить("Серия", ДокументОснование.Серия);
				Основание.Вставить("Номер", ДокументОснование.Номер);
				Основание.Вставить("Дата", Формат(ДокументОснование.ДатаВыдачи,"ДФ=dd.MM.yyyy; ДЛФ=D" )); 
				Если ВладелецОснования.Свойство("Принял") ИЛИ ВладелецОснования.Свойство("Получил") Тогда 
					Основание.Вставить("КемВыдан", ДокументОснование.Контрагент); 
				Иначе 
				    Основание.Вставить("КемВыдан", ДокументОснование.Организация);
				КонецЕсли;
				Основание.Вставить("ВладелецОснования", ВладелецОснования.Представление);
			КонецЕсли;          
					
		КонецЕсли;	
		
	КонецЕсли;	
	
	Возврат Основание; 

КонецФункции 

Функция ПолучитьПредставлениеОснования(Основание)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(Основание) Тогда
		
		Представление = Строка(Основание.ВидДокумента)
			+ " " + Основание.Серия
			+ " № " + Основание.Номер 
			+ " от " + Формат(Основание.Дата,"ДФ=dd.MM.yyyy; ДЛФ=D" ); 			
	КонецЕсли; 
	
	Возврат Представление; 
	
КонецФункции

Функция ЭтоДокументРеализация(ТипОбъекта)
	Возврат ТипОбъекта = Тип("ДокументОбъект.РеализацияАвтомобилей") 
		ИЛИ ТипОбъекта = Тип("ДокументОбъект.РеализацияТоваров");
КонецФункции

#КонецОбласти

#КонецЕсли