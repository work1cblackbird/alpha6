
#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Если ПроверитьВозможностьДобавления(ПараметрКоманды) Тогда
		ДобавитьЗаписьВФайл(ПараметрКоманды);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ПослеВводаПутиКФайлуЗаданий(Путь, ЗаказНаряд) Экспорт
	
	Если ЗначениеЗаполнено(Путь) Тогда
		ДобавитьЗаписьВФайл(ЗаказНаряд, Путь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ДобавитьЗаписьВФайл(ЗаказНаряд, ПутьКФайлу = "")
	#Если НЕ ВебКлиент Тогда
	ДанныеДляДобавления = ДанныеДляДобавления(ЗаказНаряд, ПутьКФайлу);
	
	Попытка
		ЧтениеТекста = Новый ТекстовыйДокумент;
		ЧтениеТекста.Прочитать(ДанныеДляДобавления.Путь);
		ТекстXML = ЧтениеТекста.ПолучитьТекст();
		
		ЗаписьФайл = Новый ЗаписьXML;
		ЗаписьФайл.ОткрытьФайл(ДанныеДляДобавления.Путь);
		ЧтениеФайла = Новый ЧтениеXML;
		ЧтениеФайла.УстановитьСтроку(ТекстXML);
		ЕстьТакойЗН = Ложь;
		Пока ЧтениеФайла.Прочитать() Цикл
			Если ЧтениеФайла.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеФайла.Имя = "Jobs" Тогда
				Если НЕ ЕстьТакойЗН Тогда
					// запишем наши данные
					ЗаписьФайл.ЗаписатьНачалоЭлемента("Job");
						ЗаписьФайл.ЗаписатьНачалоЭлемента("JobNumber");
							ЗаписьФайл.ЗаписатьТекст(ДанныеДляДобавления.НомерЗаказНаряда);
						ЗаписьФайл.ЗаписатьКонецЭлемента();
						ЗаписьФайл.ЗаписатьНачалоЭлемента("Customer");
							ЗаписьФайл.ЗаписатьТекст(ДанныеДляДобавления.Контрагент);
						ЗаписьФайл.ЗаписатьКонецЭлемента();
						ЗаписьФайл.ЗаписатьНачалоЭлемента("VINnumber");
							ЗаписьФайл.ЗаписатьТекст(ДанныеДляДобавления.VIN);
						ЗаписьФайл.ЗаписатьКонецЭлемента();
						ЗаписьФайл.ЗаписатьНачалоЭлемента("CreatedDate");
							ЗаписьФайл.ЗаписатьТекст(ДанныеДляДобавления.Дата);
						ЗаписьФайл.ЗаписатьКонецЭлемента();
						ЗаписьФайл.ЗаписатьНачалоЭлемента("JobStatus");
							ЗаписьФайл.ЗаписатьТекст(ДанныеДляДобавления.Статус);
						ЗаписьФайл.ЗаписатьКонецЭлемента();
					ЗаписьФайл.ЗаписатьКонецЭлемента();
				Иначе
					ПоказатьПредупреждение(,НСтр("ru = 'Запись об этом заказ-наряде уже есть в файле обмена.'"));
				КонецЕсли;
				ЗаписьФайл.ЗаписатьКонецЭлемента();
			ИначеЕсли ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеФайла.Имя = "Jobs" Тогда
				ЗаписьФайл.ЗаписатьНачалоЭлемента("Jobs");
			ИначеЕсли ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеФайла.Имя = "Job"  Тогда
				ЗаписьФайл.ЗаписатьНачалоЭлемента("Job");
			ИначеЕсли ЧтениеФайла.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				ЗаписьФайл.ЗаписатьНачалоЭлемента(ЧтениеФайла.Имя);
			ИначеЕсли ЧтениеФайла.ТипУзла = ТипУзлаXML.Текст Тогда
				ЗаписьФайл.ЗаписатьТекст(ЧтениеФайла.Значение);
				Если ЧтениеФайла.Значение = ДанныеДляДобавления.НомерЗаказНаряда Тогда
					ЕстьТакойЗН = Истина;
				КонецЕсли;
			ИначеЕсли ЧтениеФайла.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
				ЗаписьФайл.ЗаписатьКонецЭлемента();
			КонецЕсли;
		КонецЦикла;
		ЗаписьФайл.Закрыть();
		ЧтениеТекста.Прочитать(ДанныеДляДобавления.Путь);
		ЧтениеТекста.Записать(ДанныеДляДобавления.Путь, КодировкаТекста.ANSI);
		ПоказатьОповещениеПользователя(НСтр("ru = 'Успех.'"),, НСтр("ru = 'Добавление записи в файл заданий прошло успешно.'"));
	Исключение
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'При добавление данных в файл обмена произошла ошибка. %1'"),
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));
	КонецПопытки;
	#Иначе
	ПоказатьПредупреждение(, НСтр("ru = 'Операция не доступна в вэб клиенте.'"));
	#КонецЕсли
КонецФункции

&НаКлиенте
Функция ПроверитьВозможностьДобавления(ЗаказНаряд)
	КодОшибки = Неопределено; ТекстОшибки = Неопределено;
	
	Если НЕ ПроверитьВозможностьДобавленияНаСервере(ЗаказНаряд, КодОшибки, ТекстОшибки) Тогда
		Если КодОшибки = 1 Тогда
			ПоказатьПредупреждение(, ТекстОшибки);
			Возврат Ложь;
		ИначеЕсли КодОшибки = 2 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ПослеВводаПутиКФайлуЗаданий", ЭтотОбъект, ЗаказНаряд);
			ОткрытьФорму("Обработка.ОбменСAxalta.Форма.ФормаВыбораПути",,, Новый УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаСервере
Функция ПроверитьВозможностьДобавленияНаСервере(ЗаказНаряд, КодОшибки, ТекстОшибки)
	КодОшибки = 0; ТекстОшибки = "";
	
	Если НЕ ЗначениеЗаполнено(ЗаказНаряд) Тогда
		КодОшибки = 1;
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Не указан заказ-наряд.'"));
		Возврат Ложь;
	КонецЕсли;
	
	Если ЗаказНаряд.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Выполнен ИЛИ ЗаказНаряд.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Закрыт Тогда
		КодОшибки = 1;
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Нельзя добавить заказ-наряд находящийся в состоянии <%1>.'"), ЗаказНаряд.Состояние);
		Возврат Ложь;
	КонецЕсли;
	
	СохраненныеНастройки =
		ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить("ОбменСAxalta","Режим"+Строка(Перечисления.ОбменСAxaltaРежимыЗагрузки.Glasurit), Новый Структура);
		
	ПутьКФайлуЗаданий = ПолучитьЗначениеПараметраСтруктуры(СохраненныеНастройки, "ФайлЗаданий", "");
	Если ПустаяСтрока(ПутьКФайлуЗаданий) Тогда
		КодОшибки = 2;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаСервере
Функция ДанныеДляДобавления(ЗаказНаряд, Путь)
	Данные = Новый Структура();
	
	Данные.Вставить("НомерЗаказНаряда", СтроковыеФункции.СтрокаЛатиницей(ЗаказНаряд.Номер));
	Если ПустаяСтрока(Путь) Тогда
		СохраненныеНастройки =
		ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить("ОбменСAxalta","Режим"+Строка(Перечисления.ОбменСAxaltaРежимыЗагрузки.Glasurit), Новый Структура);
		
		Данные.Вставить("Путь", ПолучитьЗначениеПараметраСтруктуры(СохраненныеНастройки, "ФайлЗаданий", ""));
	Иначе
		Данные.Вставить("Путь", Путь);
	КонецЕсли;
	
	Данные.Вставить("Контрагент", СтроковыеФункции.СтрокаЛатиницей(Строка(ЗаказНаряд.Контрагент)));
	Данные.Вставить("VIN"       , ЗаказНаряд.СводныйРемонтныйЗаказ.Автомобиль.VIN);
	Данные.Вставить("Дата"      , Строка(ЗаказНаряд.Дата));
	Данные.Вставить("Статус"    , ?(ЗаказНаряд.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Закрыт,"2","1"));
	Возврат Данные;
КонецФункции

#КонецОбласти