#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
                                                                                                   
// Обработчик события формирования печатной формы.
//
// Параметры:
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - содержит табличные документы и дополнительную информацию;
//  ОбъектыПечати - СписокЗначений - соответствие между объектами и именами областей в табличных документах, где
//                                   значение - Объект, представление - имя области с объектом в табличных документах;
//  ПараметрыВывода - Структура - параметры, связанные с выводом табличных документов:
//   * ПараметрыОтправки - Структура - информация для заполнения письма при отправке печатной формы электронной почтой.
//                                     Содержит следующие поля:
//    ** Получатель - Строка, СписокЗначений, Массив - список получателей письма;
//    ** Тема - Строка - Тема письма,
//    ** Текст - Строка - Текст письма.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_УКД") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПФ_MXL_УКД",
			НСтр("ru = 'Универсальный корректировочный документ'"),
			ПечатьУКДОбщая(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
		);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

Функция ПечатьУКДОбщая(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина;
	
	Для Каждого Документ Из МассивОбъектов Цикл
		
		// Каждый новый документ должен быть на отдельной странице
		Если НЕ ПервыйДокумент Тогда 
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		Иначе
			
			ПервыйДокумент = Ложь;
			
		КонецЕсли;
		
		Если Документ.Дата > Дата('20210701000000')Тогда
			ПечатьУКД2021(Документ, ТабличныйДокумент, ОбъектыПечати, ПараметрыПечати);
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ВыводитьКодТНВЭД  = ПраваИНастройкиПользователя.Значение("ВыводитьКодТНВЭД");
		
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб		 = Истина;
		
		ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиУКД(Документ);
		
		Если ЗначениеЗаполнено(ДанныеДокумента) Тогда 
			
			ВыводитьКодВидаТовара = (ДанныеДокумента.Дата >= Дата('20171001'));
			Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьУКД.ПФ_MXL_УКД");
			
			ОбластьЗаголовок        = Макет.ПолучитьОбласть("Шапка");
			ОбластьЗаголовокТаблицы	= Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьСтрока			= Макет.ПолучитьОбласть("Строка");
			ОбластьИтого			= Макет.ПолучитьОбласть("Итого");
			ОбластьПодвал      		= Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвалНакладной  = Макет.ПолучитьОбласть("ПодвалНакладной");
			
			ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
			ОбластьЗаголовок.Параметры.СтатусУКД = ДанныеДокумента.Статус;
			Статус = ДанныеДокумента.Статус;
			
			ВыборкаТабличнойЧасти = ДанныеДокумента.Товары;
			КоличествоСтрок = ВыборкаТабличнойЧасти.Количество();
			
			ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
			Если ДанныеДокумента.ВалютаДокумента <> ВалютаРегл Тогда
				
				ДокументОбъектСтруктура = УправлениеПечатьюПлатформа.ДанныеДокументаДляПерерасчетаТаблицы();
				ЗаполнитьЗначенияСвойств(ДокументОбъектСтруктура, ДанныеДокумента);
				ДокументОбъектСтруктура.Документ = ?(Статус = 1, ДанныеДокумента.ДокументОснование, Документ);;
				
				ЗащищенныеФункцииАльфаАвтоСервер.ПерерасчетТаблицыТоваров(ВыборкаТабличнойЧасти,
					ДокументОбъектСтруктура,
					ВалютаРегл);
				
			КонецЕсли;
			
			ОбластьЗаголовок.Параметры.Номер = ДанныеДокумента.Номер;
			ОбластьЗаголовок.Параметры.Дата = Формат(ДанныеДокумента.Дата, "ДЛФ=DD");
			
			Если ДанныеДокумента.Свойство("НомерИсправления") Тогда
				
				ОбластьЗаголовок.Параметры.НомерИсправления = ДанныеДокумента.НомерИсправления;
				ОбластьЗаголовок.Параметры.ДатаИсправления = Формат(ДанныеДокумента.ДатаИсправления, "ДЛФ=DD");
			Иначе
				
				ОбластьЗаголовок.Параметры.НомерИсправления = "--";
				ОбластьЗаголовок.Параметры.ДатаИсправления = "--";
			КонецЕсли;
			
			Если ДанныеДокумента.Свойство("НомерИсправленияИсходногоДокумента") Тогда
				
				ОбластьЗаголовок.Параметры.НомерИсправленияКорректировочного = ДанныеДокумента.НомерИсправленияИсходногоДокумента;
				ОбластьЗаголовок.Параметры.ДатаИсправленияКорректировочного = Формат(
					ДанныеДокумента.ДатаИсправленияИсходногоДокумента, "ДЛФ=DD");
			Иначе
				
				ОбластьЗаголовок.Параметры.НомерИсправленияКорректировочного = "--";
				ОбластьЗаголовок.Параметры.ДатаИсправленияКорректировочного = "--";
			КонецЕсли;
			
			Если ДанныеДокумента.Свойство("НомерИсходногоДокумента") Тогда
				
				ОбластьЗаголовок.Параметры.НомерСчетаФактуры = ДанныеДокумента.НомерИсходногоДокумента;
				ОбластьЗаголовок.Параметры.ДатаСчетаФактуры = Формат(ДанныеДокумента.ДатаИсходногоДокумента, "ДЛФ=DD");
			Иначе
				
				ОбластьЗаголовок.Параметры.НомерСчетаФактуры = "--";
				ОбластьЗаголовок.Параметры.ДатаСчетаФактуры = "--";
			КонецЕсли;
			
			ОбластьЗаголовок.Параметры.Валюта = 
				?(ЗначениеЗаполнено(ВалютаРегл.НаименованиеПолное), 
					ВалютаРегл.НаименованиеПолное,ВалютаРегл.Наименование) 
				+ ", " + ВалютаРегл.Код;
			
			Если ТипЗнч(ДанныеДокумента.Поставщик) = Тип("СправочникСсылка.Контрагенты") Тогда
				ДанныеПоставщика = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеДокумента.Поставщик,
					"ФормаСобственности,ГоловнойКонтрагент");
				Если ДанныеПоставщика.ФормаСобственности = Перечисления.ФормыСобственности.ОбособленноеПодразделение Тогда
					Поставщик = ДанныеПоставщика.ГоловнойКонтрагент;
				Иначе
					Поставщик = ДанныеДокумента.Поставщик;
				КонецЕсли;
			Иначе
				Поставщик = ДанныеДокумента.Поставщик;
			КонецЕсли;
			
			ОбластьЗаголовок.Параметры.Поставщик = Поставщик;
			ОбластьЗаголовок.Параметры.ПредставлениеПоставщика	= УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Поставщик,
				Новый Структура("Наименование"," ")
			);
			ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
			ДополнительныеПараметры.ДляПечати = Истина;
			// Будем использовать КИ подразделения.
			ДополнительныеПараметры.Вставить("ПодразделениеКомпании", ДанныеДокумента.ПодразделениеКомпании);
			ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
			ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
			ДополнительныеПараметры.НаДату = Документ.Дата;
			АдресПоставщика = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Поставщик,
				Новый Структура("АдресЮридический"," "),
				ДополнительныеПараметры
			);
			ОбластьЗаголовок.Параметры.АдресПоставщика = ?(ЗначениеЗаполнено(АдресПоставщика), АдресПоставщика, "--");
			
			КПП = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(
				ДанныеДокумента.Поставщик,
				ДанныеДокумента.ПодразделениеКомпании,
				ДанныеДокумента.Дата
			);
			ОбластьЗаголовок.Параметры.ИННПоставщика = СтрШаблон(
				"%1/%2",
				?(ЗначениеЗаполнено(Поставщик.ИНН), Поставщик.ИНН, "--"),
				?(ЗначениеЗаполнено(КПП), КПП, "--")
			);
			
			Если КоличествоСтрок > 0 Тогда
				ЕстьТовары = Ложь;
				Для Каждого СтрокаТоваров Из ВыборкаТабличнойЧасти Цикл
					Если ТипЗнч(СтрокаТоваров.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
						Если СтрокаТоваров.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Услуга Тогда
							ЕстьТовары = Истина;
							Прервать;
						КонецЕсли; 
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ТипЗнч(ДанныеДокумента.Покупатель) = Тип("СправочникСсылка.Контрагенты") Тогда
				ДанныеПокупателя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеДокумента.Покупатель,
					"ФормаСобственности,ГоловнойКонтрагент");
				Если ДанныеПокупателя.ФормаСобственности = Перечисления.ФормыСобственности.ОбособленноеПодразделение Тогда
					Покупатель = ДанныеПокупателя.ГоловнойКонтрагент;
				Иначе
					Покупатель = ДанныеДокумента.Покупатель;
				КонецЕсли;
			Иначе
				Покупатель = ДанныеДокумента.Покупатель;
			КонецЕсли;
			
			ОбластьЗаголовок.Параметры.Покупатель = Покупатель;
			ОбластьЗаголовок.Параметры.ПредставлениеПокупателя = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Покупатель, Новый Структура("Наименование", ""), ДополнительныеПараметры);
				
			// Будем использовать КИ подразделения.
			ДополнительныеПараметры = Новый Структура("ПодразделениеКомпании", ДанныеДокумента.ПодразделениеКомпании);
			ДополнительныеПараметры.Вставить("ИспользоватьКИПодразделения", Истина);
			
			АдресПокупателя = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
				ОбластьЗаголовок.Параметры.Покупатель,
				Новый Структура("АдресЮридический", ""),
				ДополнительныеПараметры
			);
			ОбластьЗаголовок.Параметры.АдресПокупателя = ?(ЗначениеЗаполнено(АдресПокупателя), АдресПокупателя, "--");
			
			КПП = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(ДанныеДокумента.Покупатель,
				ДанныеДокумента.ПодразделениеКомпании, ДанныеДокумента.Дата);
			ОбластьЗаголовок.Параметры.ИННПокупателя = ?(ЗначениеЗаполнено(Покупатель.ИНН),
				Покупатель.ИНН, "--") + "/" + ?(ЗначениеЗаполнено(КПП), КПП, "--");
			
			// Если дата документа позднее 01.07.2017.
			Если ВыводитьКодВидаТовара Тогда
				ОбластьЗаголовок.Параметры.Редакция = 
					НСтр("ru = '(в редакции постановления Правительства Российской Федерации от 19 августа 2017 № 981)'");
			ИначеЕсли ДанныеДокумента.Дата >= Дата('20170701') Тогда
				ОбластьЗаголовок.Параметры.Редакция = 
					НСтр("ru = '(в редакции постановления Правительства Российской Федерации от 25 мая 2017 г. № 625)'");
			КонецЕсли;
			
			// Выводим область.
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			
			// Если дата документа позднее 01.07.2017.
			Если ДанныеДокумента.Дата >= Дата('20170701') Тогда
				ОбластьШапкаИдГосКонтракта = Макет.ПолучитьОбласть("ШапкаИдГосКонтракта");
				ЗаголовокИдентификатораГосударственногоКонтракта = 
						НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения)'")
						+ ?(ВыводитьКодВидаТовара, " (" + НСтр("ru = 'при наличии'") + ")", "") + ": ";
				
				ОбластьШапкаИдГосКонтракта.Параметры.ИдентификаторГосударственногоКонтракта = 
					ЗаголовокИдентификатораГосударственногоКонтракта + ДанныеДокумента.ИдентификаторГосударственногоКонтракта;
				ТабличныйДокумент.Вывести(ОбластьШапкаИдГосКонтракта);
			КонецЕсли;
			
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			// Уберем колонку, вывод которой утвержден с 1 октября 2017 г.
			ОбластьКодВидаТовара = Макет.Область("КодВидаТовара");
			Если НЕ ВыводитьКодВидаТовара Тогда
				ОбластьСтрока.Область(1, ОбластьКодВидаТовара.Лево - 1, 1, ОбластьКодВидаТовара.Право).Объединить();
				ОбластьСтрока.Область(2, ОбластьКодВидаТовара.Лево - 1, 2, ОбластьКодВидаТовара.Право).Объединить();
				ОбластьСтрока.Область(3, ОбластьКодВидаТовара.Лево - 1, 3, ОбластьКодВидаТовара.Право).Объединить();
				ОбластьСтрока.Область(4, ОбластьКодВидаТовара.Лево - 1, 4, ОбластьКодВидаТовара.Право).Объединить();
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			Смещать = ТипСмещенияТабличногоДокумента.ПоВертикали;
			Область = ТабличныйДокумент.Область(?(ДанныеДокумента.Дата >= Дата('20170701'), "R17", "R16"));
			ТабличныйДокумент.УдалитьОбласть(Область, Смещать);
			НомерСтраницы = 2;
			НомерСтраницыПред = НомерСтраницы;
			
			// Заполним параметры шапки таблицы для следующего листа
			ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы  = "Лист" + " " + НомерСтраницы;
			Если ОбластьЗаголовок.Параметры.Номер <> "--" И ОбластьЗаголовок.Параметры.Дата <> "--" Тогда
				ОбластьЗаголовокТаблицы.Параметры.ТекстЗаголовка = НСтр("ru = 'Универсальный корректировочный документ'") + " № "
						+ ОбластьЗаголовок.Параметры.Номер + " от " + ОбластьЗаголовок.Параметры.Дата;
			Иначе
				ОбластьЗаголовокТаблицы.Параметры.ТекстЗаголовка = НСтр("ru = 'Универсальный корректировочный документ'") + " № " 
						+ ОбластьЗаголовок.Параметры.НомерИсправления + " от " + ОбластьЗаголовок.Параметры.ДатаИсправления;
			КонецЕсли;
			
			// Уберем колонку, вывод которой утвержден с 1 октября 2017 г.
			Если НЕ ВыводитьКодВидаТовара Тогда
				НовыйПараметр = ОбластьСтрока.Область(1, ОбластьКодВидаТовара.Лево - 1, 1, ОбластьКодВидаТовара.Лево - 1).Параметр;
				ОбластьВыреза = ОбластьСтрока.Область(1, ОбластьКодВидаТовара.Лево - 1, 1, ОбластьКодВидаТовара.Право);
				ОбластьВыреза.Объединить();
				ОбластьВыреза.Параметр = НовыйПараметр;
			КонецЕсли;
			
			ИтогоСтоимостьУвеличение = 0;
			ИтогоСтоимостьУменьшение = 0;
			ИтогоСуммаНДСУвеличение = 0;
			ИтогоСуммаНДСУменьшение = 0;
			ИтогоВсегоУвеличение = 0;
			ИтогоВсегоУменьшение = 0;
			КоличествоСтрок = ВыборкаТабличнойЧасти.Количество();
			ОбластиДляПроверкиВывода = Неопределено;
		    СтруктураИтоговПоСтранице = Новый Структура("Сумма", 0);

			ЕстьСтрокиСНДС = Ложь;
			
			Если КоличествоСтрок > 0 Тогда                             
				ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.ДоговорВзаиморасчетов, "ЕдиницаИзмеренияАвтоработВПечатныхФормах, ЕдиницаИзмеренияАвтоработВПечатныхФормах.Код");
				Для Каждого ТекСтрока Из ВыборкаТабличнойЧасти Цикл
					
					ОбластьСтрока.Параметры.Заполнить(ТекСтрока);
					
					ОбластьСтрока.Параметры.ТоварКод = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(
						ТекСтрока.Номенклатура);  

					Если ТекСтрока.СтавкаНДС <> Справочники.СтавкиНДС.БезНДС Тогда
						ЕстьСтрокиСНДС = Истина;
					КонецЕсли;
					
					КоличествоТовара = ТекСтрока.Количество;
										
					Если ВыводитьКодВидаТовара	
						И (ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Номенклатура")
						ИЛИ ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Автомобили")) Тогда
							
						КодТНВЭД = ТекСтрока.Номенклатура.КодТНВЭД;
						
						Если ЗначениеЗаполнено(КодТНВЭД) И ВыводитьКодТНВЭД Тогда
							
							ОбластьСтрока.Параметры.КодВидаТовара = СокрЛП(КодТНВЭД);
						Иначе
							
							ОбластьСтрока.Параметры.КодВидаТовара = "--";
						КонецЕсли;
						
					КонецЕсли;
					
					Если ЕстьРеквизит(ВыборкаТабличнойЧасти, "Содержание") И ЗначениеЗаполнено(ТекСтрока.Содержание) Тогда
						
						Наименование = ТекСтрока.Содержание;
						
					ИначеЕсли ЕстьРеквизит(ВыборкаТабличнойЧасти, "ТоварНаименование") Тогда
						
						Наименование = ТекСтрока.ТоварНаименование;
						
					Иначе
						
						Наименование = ?(ЗначениеЗаполнено(ТекСтрока.Номенклатура.НаименованиеПолное),
								ТекСтрока.Номенклатура.НаименованиеПолное, ТекСтрока.Номенклатура.Наименование);
					КонецЕсли;
					
					Если Документ.Дата >= Дата(2016, 07, 01) И НЕ ВыводитьКодВидаТовара Тогда
						
						Если ЕстьРеквизит(СтрокаТоваров.Номенклатура, "КодТНВЭД") Тогда
							
							Если СтрокаТоваров.СтавкаНДС = Справочники.СтавкиНДС.БезНДС 
								И СокрЛП(СтрокаТоваров.Номенклатура.КодТНВЭД) <> "" Тогда
								
								Наименование = Наименование + ", " + НСтр("ru='код ТН ВЭД'") + " " + СтрокаТоваров.Номенклатура.КодТНВЭД;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ОбластьСтрока.Параметры.ТоварНаименование = Наименование;
					
					КоличествоДоИзменения = ТекСтрока.Количество - ТекСтрока.КоличествоРазница;
					КоличествоПослеИзменения = ТекСтрока.Количество;
					Если ЕстьРеквизит(ТекСтрока.Номенклатура, "ВидНоменклатуры")
						И ТекСтрока.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Услуга Тогда
						
						ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод  = ТекСтрока.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
						ОбластьСтрока.Параметры.ЕдиницаИзмерения     = ТекСтрока.ЕдиницаИзмерения;
						
					ИначеЕсли
						ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Автоработы")
						И ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормах <> Справочники.КлассификаторЕдиницИзмерения.прочерк
					Тогда
						
						ОбластьСтрока.Параметры.ЕдиницаИзмерения = ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормах;
						
						Если ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормах <>
							ПредопределенноеЗначение("Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка") Тогда
							
							ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормахКод;
							
						Иначе
							
							ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = "--";
							
						КонецЕсли;
						
						Если ЕстьРеквизит(ВыборкаТабличнойЧасти, "Коэффициент") Тогда
							КоличествоДоИзменения = (ТекСтрока.Количество - ТекСтрока.КоличествоРазница)
								* (ТекСтрока.Коэффициент - ТекСтрока.КоэффициентПоДокументуРеализации);
							КоличествоПослеИзменения = ТекСтрока.Количество * ТекСтрока.Коэффициент;
						КонецЕсли;
						
					Иначе
						
						ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = "--";
						ОбластьСтрока.Параметры.ЕдиницаИзмерения = "--";
						
					КонецЕсли;
					
					Если ДанныеДокумента.Статус = 1 Тогда
						ОбластьСтрока.Параметры.Акциз = НСтр("ru = 'без акциза'");
					ИначеЕсли ДанныеДокумента.Статус = 2 Тогда
						ОбластьСтрока.Параметры.Акциз = НСтр("ru = '--'");
					КонецЕсли;
					ОбластьСтрока.Параметры.Всего =  ТекСтрока.СуммаВсего;
					
					ОбластьСтрока.Параметры.КоличествоДоИзменения = КоличествоДоИзменения;
					ОбластьСтрока.Параметры.КоличествоПослеИзменения = КоличествоПослеИзменения;
					
					Если ТекСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС Тогда
						СуммаНДСДоИзменения = 0;
						СуммаНДСПослеИзменения = 0;
						СуммаНДСУвеличение = 0;
						СуммаНДСУменьшение = 0;
						Если ДанныеДокумента.Статус = 1 Тогда
							ОбластьСтрока.Параметры.СтавкаНДС = НСтр("ru = 'без НДС'");
							ОбластьСтрока.Параметры.СтавкаНДСДоИзменения = НСтр("ru = 'без НДС'");
							ОбластьСтрока.Параметры.СуммаНДСДоИзменения = НСтр("ru = '0.00'");
							ОбластьСтрока.Параметры.СуммаНДСПослеИзменения = НСтр("ru = '0.00'");
							ОбластьСтрока.Параметры.СуммаНДСУвеличение = НСтр("ru = '0.00'");
							ОбластьСтрока.Параметры.СуммаНДСУменьшение = НСтр("ru = '0.00'");
						ИначеЕсли ДанныеДокумента.Статус = 2 Тогда
							ОбластьСтрока.Параметры.СтавкаНДС = НСтр("ru = '--'");
							ОбластьСтрока.Параметры.СтавкаНДСДоИзменения = НСтр("ru = '--'");
							ОбластьСтрока.Параметры.СуммаНДСДоИзменения = НСтр("ru = '--'");
							ОбластьСтрока.Параметры.СуммаНДСПослеИзменения = НСтр("ru = '--'");
							ОбластьСтрока.Параметры.СуммаНДСУвеличение = НСтр("ru = '--'");
							ОбластьСтрока.Параметры.СуммаНДСУменьшение = НСтр("ru = '--'");
						КонецЕсли;
					Иначе
						СуммаНДСДоИзменения = ТекСтрока.СуммаНДСПоДокументуРеализации;
						СуммаНДСПослеИзменения = ТекСтрока.СуммаНДС;
						СуммаНДСУвеличение = ?(ТекСтрока.СуммаНДС > ТекСтрока.СуммаНДСПоДокументуРеализации,
							ТекСтрока.СуммаНДС - ТекСтрока.СуммаНДСПоДокументуРеализации,
							0);
						СуммаНДСУменьшение = ?(ТекСтрока.СуммаНДСПоДокументуРеализации > ТекСтрока.СуммаНДС,
							ТекСтрока.СуммаНДСПоДокументуРеализации - ТекСтрока.СуммаНДС,
							0);
						ОбластьСтрока.Параметры.СтавкаНДС = ТекСтрока.СтавкаНДС;
						ОбластьСтрока.Параметры.СуммаНДСДоИзменения = СуммаНДСДоИзменения;
						ОбластьСтрока.Параметры.СуммаНДСПослеИзменения = СуммаНДСПослеИзменения;
						ОбластьСтрока.Параметры.СуммаНДСУвеличение = СуммаНДСУвеличение; 
						ОбластьСтрока.Параметры.СуммаНДСУменьшение = СуммаНДСУменьшение;
						ЕстьСтрокиСНДС = Истина;
					КонецЕсли;
					
					ОбластьСтрока.Параметры.ВсегоДоИзменения = ТекСтрока.СуммаВсегоПоДокументуРеализации;
					ОбластьСтрока.Параметры.ВсегоПослеИзменения = ТекСтрока.СуммаВсего;
					ОбластьСтрока.Параметры.ВсегоУвеличение = 
						?(ОбластьСтрока.Параметры.ВсегоПослеИзменения > ОбластьСтрока.Параметры.ВсегоДоИзменения,
						ОбластьСтрока.Параметры.ВсегоПослеИзменения - ОбластьСтрока.Параметры.ВсегоДоИзменения,
						0);
					ОбластьСтрока.Параметры.ВсегоУменьшение = 
						?(ОбластьСтрока.Параметры.ВсегоДоИзменения > ОбластьСтрока.Параметры.ВсегоПослеИзменения,
						ОбластьСтрока.Параметры.ВсегоДоИзменения - ОбластьСтрока.Параметры.ВсегоПослеИзменения,
						0);
					
					ОбластьСтрока.Параметры.СтоимостьДоИзменения =
						ОбластьСтрока.Параметры.ВсегоДоИзменения - СуммаНДСДоИзменения;
					ОбластьСтрока.Параметры.СтоимостьПослеИзменения =
						ОбластьСтрока.Параметры.ВсегоПослеИзменения - СуммаНДСПослеИзменения;
					ОбластьСтрока.Параметры.СтоимостьУвеличение = 
						?(ОбластьСтрока.Параметры.СтоимостьПослеИзменения > ОбластьСтрока.Параметры.СтоимостьДоИзменения,
							ОбластьСтрока.Параметры.СтоимостьПослеИзменения - ОбластьСтрока.Параметры.СтоимостьДоИзменения,
							0);
					ОбластьСтрока.Параметры.СтоимостьУменьшение = 
						?(ОбластьСтрока.Параметры.СтоимостьДоИзменения > ОбластьСтрока.Параметры.СтоимостьПослеИзменения,
							ОбластьСтрока.Параметры.СтоимостьДоИзменения - ОбластьСтрока.Параметры.СтоимостьПослеИзменения,
							0);
					
					ОбластьСтрока.Параметры.ЦенаДоИзменения = 
						?(ОбластьСтрока.Параметры.КоличествоДоИзменения <> 0, 
							ОбластьСтрока.Параметры.СтоимостьДоИзменения / ОбластьСтрока.Параметры.КоличествоДоИзменения, 
							0);
					ОбластьСтрока.Параметры.ЦенаПослеИзменения = 
						?(ОбластьСтрока.Параметры.КоличествоПослеИзменения <> 0, 
							ОбластьСтрока.Параметры.СтоимостьПослеИзменения / КоличествоПослеИзменения, 
							0);
					
					ИтогоСтоимостьУвеличение = ИтогоСтоимостьУвеличение + ОбластьСтрока.Параметры.СтоимостьУвеличение;
					ИтогоСтоимостьУменьшение = ИтогоСтоимостьУменьшение + ОбластьСтрока.Параметры.СтоимостьУменьшение;
					
					ИтогоСуммаНДСУвеличение = ИтогоСуммаНДСУвеличение + СуммаНДСУвеличение;
					ИтогоСуммаНДСУменьшение = ИтогоСуммаНДСУменьшение + СуммаНДСУменьшение;
					
					ИтогоВсегоУвеличение = ИтогоВсегоУвеличение + ОбластьСтрока.Параметры.ВсегоУвеличение;
					ИтогоВсегоУменьшение = ИтогоВсегоУменьшение + ОбластьСтрока.Параметры.ВсегоУменьшение;
					
					// При выводе последней строки будем проверять, что вмещается подвал.
					Если ВыборкаТабличнойЧасти[КоличествоСтрок - 1] = ТекСтрока Тогда
						
						ОбластиДляПроверкиВывода = Новый Массив;
						ОбластиДляПроверкиВывода.Добавить(ОбластьИтого);
						ОбластиДляПроверкиВывода.Добавить(ОбластьПодвал);
						ОбластиДляПроверкиВывода.Добавить(ОбластьПодвалНакладной);

					КонецЕсли;
					
					// Выводим строку, делая проверку попадания на лист.
					НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока,
						ОбластьЗаголовокТаблицы,, НомерСтраницы, , Документ, ОбластиДляПроверкиВывода);
					
					// Инициализация итогов по странице.
					Если НомерСтраницы <> НомерСтраницыПред Тогда
						
						НомерСтраницыПред = НомерСтраницы;
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Лист:" + " " + НомерСтраницы; 
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ОбластьИтого.Параметры.ИтогоСтоимостьУвеличение = ИтогоСтоимостьУвеличение;
			ОбластьИтого.Параметры.ИтогоСтоимостьУменьшение = ИтогоСтоимостьУменьшение;
			
			Если ЕстьСтрокиСНДС Тогда
				ОбластьИтого.Параметры.ИтогоСуммаНДСУвеличение = ИтогоСуммаНДСУвеличение;
				ОбластьИтого.Параметры.ИтогоСуммаНДСУменьшение = ИтогоСуммаНДСУменьшение;
			Иначе
				Если ДанныеДокумента.Статус = 1 Тогда
					ОбластьИтого.Параметры.ИтогоСуммаНДСУвеличение = "без НДС";
					ОбластьИтого.Параметры.ИтогоСуммаНДСУменьшение = "без НДС";
				ИначеЕсли ДанныеДокумента.Статус = 2 Тогда
					ОбластьИтого.Параметры.ИтогоСуммаНДСУвеличение = "--";
					ОбластьИтого.Параметры.ИтогоСуммаНДСУменьшение = "--";
				КонецЕсли;
			КонецЕсли;
			
			ОбластьИтого.Параметры.ИтогоВсегоУвеличение = ИтогоВсегоУвеличение;
			ОбластьИтого.Параметры.ИтогоВсегоУменьшение = ИтогоВсегоУменьшение;  
			
			ТабличныйДокумент.Вывести(ОбластьИтого);
			
			// Заполним информацию о руководителях организации.
			ЭтоИП = ДанныеДокумента.Организация.ФормаСобственности = Перечисления.ФормыСобственности.ИндивидуальныйПредприниматель;
			Если ЭтоИП Тогда
				ОбластьПодвал.Параметры.ФИОПБОЮЛ = ДанныеДокумента.Руководитель.РуководительПредставление;
				ОбластьПодвал.Параметры.Свидетельство = 
				Справочники.ПодтверждающиеДокументы.ПолучитьПодтверждающийДокументОбъектаПоВиду(ДанныеДокумента.Поставщик,
					Перечисления.ВидыДокументов.Свидетельство);
			Иначе
				ОбластьПодвал.Параметры.ФИОРуководителя = ДанныеДокумента.Руководитель.Представление + 
				  ПолучитьПредставлениеОснования(
				 	ПолучитьСтруктуруОснования(ДанныеДокумента.Руководитель, Документ.Дата, Документ.Организация)); 

			КонецЕсли;
			ОбластьПодвал.Параметры.ФИОГлавногоБухгалтера = ДанныеДокумента.ГлавныйБухгалтер.Представление +
			 	 ПолучитьПредставлениеОснования(
						ПолучитьСтруктуруОснования(ДанныеДокумента.ГлавныйБухгалтер, Документ.Дата, Документ.Организация));

			ОбластьПодвал.Параметры.КоличествоЛистов = НСтр("ru = 'Документ 
			|составлен на'")
			+ Символы.ПС + ТабличныйДокумент.КоличествоСтраниц() + " " + "листах";
			
			ОбластьПодвал.Параметры.ТекстИндивидуальныйПредприниматель = ?(ВыводитьКодВидаТовара,
				НСтр("ru = 'Индивидуальный предприниматель или иное уполномоченное лицо'"),
				НСтр("ru = 'Индивидуальный предприниматель'"));
			
			ОбластьПодвалНакладной.Параметры.Основание = ?(ЗначениеЗаполнено(ДанныеДокумента.ДоговорВзаиморасчетов),
				ДанныеДокумента.ДоговорВзаиморасчетов, "--");
						
			ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи = ДанныеДокумента.ДатаОтгрузки;
			
			Если ДанныеДокумента.Свойство("НомерИсходногоДокумента") Тогда
				ДатаИсходногоДокумента = ДанныеДокумента.ДатаИсходногоДокумента;
				ШаблонПередаточныхДокументов = "Универсальный передаточный документ";
				Если ДатаИсходногоДокумента >= Дата(2018, 1, 1) Тогда
					ТекстПередаточныхДокументов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2, № %3",
						ШаблонПередаточныхДокументов,
						Формат(ДатаИсходногоДокумента, "ДЛФ=D"),
						ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.НомерИсходногоДокумента, Истина, Ложь));
				Иначе
					ТекстПередаточныхДокументов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 № %2 от %3",
						ШаблонПередаточныхДокументов,
						ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.НомерИсходногоДокумента, Истина, Ложь),
						Формат(ДатаИсходногоДокумента, "ДЛФ=D"));
				КонецЕсли;
				ОбластьПодвалНакладной.Параметры.РеквизитыПередаточныхДокументов = ТекстПередаточныхДокументов;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи) Тогда
				ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи = ДанныеДокумента.Дата;
			КонецЕсли;
			ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи = Формат(
				ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи, "ДЛФ=ДД");
			
			ОбластьПодвалНакладной.Параметры.ДолжностьМенеджера = ДанныеДокумента.Менеджер.МенеджерДолжность;
			ОбластьПодвалНакладной.Параметры.ФИОМенеджера       = ДанныеДокумента.Менеджер.МенеджерПредставление;
			
			ОбластьПодвалНакладной.Параметры.ПредставлениеОрганизации = ОбластьЗаголовок.Параметры.ПредставлениеПоставщика 
					+ ", " + "ИНН/КПП" + " " + ОбластьЗаголовок.Параметры.ИННПоставщика;
			
			ОбластьПодвалНакладной.Параметры.ПредставлениеКонтрагента = ОбластьЗаголовок.Параметры.ПредставлениеПокупателя
						+ ", " + "ИНН/КПП" + " " + ОбластьЗаголовок.Параметры.ИННПокупателя;
			
			ТабличныйДокумент.Вывести (ОбластьПодвал);
			ТабличныйДокумент.Вывести (ОбластьПодвалНакладной);
			
			// Отметим конец области документа для выделения в форме
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УКДОбщая";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	Возврат ТабличныйДокумент;
		
КонецФункции

Процедура ПечатьУКД2021(Документ, ТабличныйДокумент, ОбъектыПечати, ПараметрыПечати)
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	ВыводитьКодТНВЭД  = ПраваИНастройкиПользователя.Значение("ВыводитьКодТНВЭД");
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб		 = Истина;
	
	ДанныеДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ).ПолучитьДанныеДляПечатиУКД(Документ);
	
	Если НЕ ЗначениеЗаполнено(ДанныеДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаТабличнойЧасти = ДанныеДокумента.Товары;
	
	ЕстьРеквизит_ГТДПослеИзменения = ЕстьРеквизит(ВыборкаТабличнойЧасти, "ГТДПослеИзменения");

	Прослеживаемость = Ложь;
	ЕстьСтоимостьТовараПрослеживания = Ложь;
	Если ЕстьПрослеживаемыйТовар(ВыборкаТабличнойЧасти, ЕстьРеквизит_ГТДПослеИзменения) Тогда
		Прослеживаемость = Истина;
		Если Документ.Дата >= Дата('20231001') Тогда
			ЕстьСтоимостьТовараПрослеживания = Истина;
			ИмяМакета = "Обработка.ПечатьУКД.ПФ_MXL_УКД_01_10_2023_Прослеживаемость";
		Иначе
			ИмяМакета = "Обработка.ПечатьУКД.ПФ_MXL_УКД_02_04_2021_Прослеживаемость";
		КонецЕсли;
		Макет = УправлениеПечатью.МакетПечатнойФормы(ИмяМакета);
	Иначе
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьУКД.ПФ_XML_УКД_02_04_2021");
	КонецЕсли;

	Исправление = Ложь;
	Если ЕстьРеквизит(Документ, "Исправление") Тогда 
		Исправление = Документ.Исправление И Документ.ДатаИсходногоДокумента >= Дата('20241001');
	Иначе
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаРеализации")
			ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаРеализацииАвтомобилей") 
			ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаПоступления")
			ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаПоступленияАвтомобилей") Тогда 
			Если Документ.Дата >= Дата('20241001') Тогда 
				Исправление = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Документ.Дата >= Дата('20241001') ИЛИ Исправление Тогда
		НомерРедакции = 1096;
	Иначе
		НомерРедакции = 534;
	КонецЕсли;
	
	ОбластьЗаголовок        = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокТаблицы	= Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрока			= Макет.ПолучитьОбласть("Строка");
	ОбластьИтого			= Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал      		= Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалНакладной  = Макет.ПолучитьОбласть("ПодвалНакладной");

	Если НомерРедакции = 1096 Тогда 
		ОбластьЗаголовок.Параметры.Редакция = НСтр("ru = '(в редакции постановления Правительства Российской Федерации от 16 августа 2024 г. № 1096)'");
	Иначе 
		ОбластьЗаголовок.Параметры.Редакция = НСтр("ru = '(в редакции постановления Правительства Российской Федерации от 2 апреля 2021 г. № 534)'");
	КонецЕсли;
	
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокумента);
	ОбластьЗаголовок.Параметры.СтатусУКД = ДанныеДокумента.Статус;
	
	КоличествоСтрок = ВыборкаТабличнойЧасти.Количество();
	
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	Если КоличествоСтрок > 0 И Документ.ВалютаДокумента <> ВалютаРегл Тогда
		
		ДокументОбъектСтруктура = УправлениеПечатьюПлатформа.ДанныеДокументаДляПерерасчетаТаблицы();
		ЗаполнитьЗначенияСвойств(ДокументОбъектСтруктура, ДанныеДокумента);
		ДокументОбъектСтруктура.Документ = ?(ДанныеДокумента.Статус = 1, ДанныеДокумента.ДокументОснование, Документ);
		
		ЗащищенныеФункцииАльфаАвтоСервер.ПерерасчетТаблицыТоваров(ВыборкаТабличнойЧасти,
			ДокументОбъектСтруктура,
			ВалютаРегл);
		
	КонецЕсли;
	
	Если ДанныеДокумента.Свойство("НомерИсправляемогоКорректировочногоДокумента") Тогда
		ОбластьЗаголовок.Параметры.Номер = ДанныеДокумента.НомерИсправляемогоКорректировочногоДокумента;
		ОбластьЗаголовок.Параметры.Дата  = Формат(ДанныеДокумента.ДатаИсправляемогоКорректировочногоДокумента, "ДЛФ=DD");
	Иначе
		ОбластьЗаголовок.Параметры.Номер = ДанныеДокумента.Номер;
		ОбластьЗаголовок.Параметры.Дата  = Формат(ДанныеДокумента.Дата, "ДЛФ=DD");
	КонецЕсли;
	
	Если ДанныеДокумента.Свойство("НомерИсправления") Тогда
		ОбластьЗаголовок.Параметры.НомерИсправленияКорректировочного = ДанныеДокумента.НомерИсправления;
		ОбластьЗаголовок.Параметры.ДатаИсправленияКорректировочного = Формат(ДанныеДокумента.ДатаИсправления, "ДЛФ=DD");
	Иначе
		ОбластьЗаголовок.Параметры.НомерИсправленияКорректировочного = "--";
		ОбластьЗаголовок.Параметры.ДатаИсправленияКорректировочного = "--";
	КонецЕсли;
	
	Если ДанныеДокумента.Свойство("НомерИсправленияИсходногоДокумента") Тогда
		ОбластьЗаголовок.Параметры.НомерИсправления = ДанныеДокумента.НомерИсправленияИсходногоДокумента;
		ОбластьЗаголовок.Параметры.ДатаИсправления = Формат(ДанныеДокумента.ДатаИсправленияИсходногоДокумента, "ДЛФ=DD");
	Иначе
		ОбластьЗаголовок.Параметры.НомерИсправления = "--";
		ОбластьЗаголовок.Параметры.ДатаИсправления = "--";
	КонецЕсли;
	
	Если ДанныеДокумента.Свойство("НомерИсходногоДокумента") Тогда
		ОбластьЗаголовок.Параметры.НомерСчетаФактуры = ДанныеДокумента.НомерИсходногоДокумента;
		ОбластьЗаголовок.Параметры.ДатаСчетаФактуры = Формат(ДанныеДокумента.ДатаИсходногоДокумента, "ДЛФ=DD");
	Иначе
		ОбластьЗаголовок.Параметры.НомерСчетаФактуры = "--";
		ОбластьЗаголовок.Параметры.ДатаСчетаФактуры = "--";
	КонецЕсли;
	
	ОбластьЗаголовок.Параметры.Валюта = 
		?(ЗначениеЗаполнено(ВалютаРегл.НаименованиеПолное),
			ВалютаРегл.НаименованиеПолное, ВалютаРегл.Наименование)
		+ ", " + ВалютаРегл.Код;
	
	Если ТипЗнч(ДанныеДокумента.Поставщик) = Тип("СправочникСсылка.Контрагенты") Тогда
		ДанныеПоставщика = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеДокумента.Поставщик,
			"ФормаСобственности,ГоловнойКонтрагент");
		Если ДанныеПоставщика.ФормаСобственности = Перечисления.ФормыСобственности.ОбособленноеПодразделение Тогда
			Поставщик = ДанныеПоставщика.ГоловнойКонтрагент;
		Иначе
			Поставщик = ДанныеДокумента.Поставщик;
		КонецЕсли;
	Иначе
		Поставщик = ДанныеДокумента.Поставщик;
	КонецЕсли;
	
	ДополнительныеПараметры = УправлениеПечатьюПлатформа.ПолучитьПараметрыВызоваПредставленияСправочника();
	ДополнительныеПараметры.ДляПечати = Истина;
	// Будем использовать КИ подразделения.
	ДополнительныеПараметры.Вставить("ПодразделениеКомпании", ДанныеДокумента.ПодразделениеКомпании);
	ДополнительныеПараметры.ИспользоватьКИПодразделения = Истина;
	ДополнительныеПараметры.ИспользоватьКПППодразделения = Истина;
	ДополнительныеПараметры.НаДату = Документ.Дата;
	
	ОбластьЗаголовок.Параметры.Поставщик = Поставщик;
	ОбластьЗаголовок.Параметры.ПредставлениеПоставщика	= УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
		ОбластьЗаголовок.Параметры.Поставщик,
		Новый Структура("Наименование"," "),
		ДополнительныеПараметры
	);
	
	АдресПоставщика = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
		ОбластьЗаголовок.Параметры.Поставщик,
		Новый Структура("АдресЮридический"," "),
		ДополнительныеПараметры
	);
	ОбластьЗаголовок.Параметры.АдресПоставщика = ?(ЗначениеЗаполнено(АдресПоставщика), АдресПоставщика, "--");
	
	КПП = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(
		ДанныеДокумента.Поставщик,
		ДанныеДокумента.ПодразделениеКомпании,
		ДанныеДокумента.Дата
	);
	ОбластьЗаголовок.Параметры.ИННПоставщика = СтрШаблон(
		"%1/%2",
		?(ЗначениеЗаполнено(Поставщик.ИНН), Поставщик.ИНН, "--"),
		?(ЗначениеЗаполнено(КПП), КПП, "--")
	);
	
	Если ТипЗнч(ДанныеДокумента.Покупатель) = Тип("СправочникСсылка.Контрагенты") Тогда
		ДанныеПокупателя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДанныеДокумента.Покупатель,
			"ФормаСобственности,ГоловнойКонтрагент"
		);
		Если ДанныеПокупателя.ФормаСобственности = Перечисления.ФормыСобственности.ОбособленноеПодразделение Тогда
			Покупатель = ДанныеПокупателя.ГоловнойКонтрагент;
		Иначе
			Покупатель = ДанныеДокумента.Покупатель;
		КонецЕсли;
	Иначе
		Покупатель = ДанныеДокумента.Покупатель;
	КонецЕсли;
	
	ОбластьЗаголовок.Параметры.Покупатель = Покупатель;
	ОбластьЗаголовок.Параметры.ПредставлениеПокупателя = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
		ОбластьЗаголовок.Параметры.Покупатель,
		Новый Структура("Наименование", ""),
		ДополнительныеПараметры
	);
	
	// Будем использовать КИ подразделения.
	ДополнительныеПараметры = Новый Структура("ПодразделениеКомпании", ДанныеДокумента.ПодразделениеКомпании);
	ДополнительныеПараметры.Вставить("ИспользоватьКИПодразделения", Истина);
	ДополнительныеПараметры.Вставить("ИспользоватьКПППодразделения", Истина);
	
	АдресПокупателя = УправлениеПечатьюПлатформа.ПолучитьПредставлениеСправочника(
		ОбластьЗаголовок.Параметры.Покупатель,
		Новый Структура("АдресЮридический", ""),
		ДополнительныеПараметры
	);
	ОбластьЗаголовок.Параметры.АдресПокупателя = ?(ЗначениеЗаполнено(АдресПокупателя), АдресПокупателя, "--");
	
	КПП = УправлениеПечатьюПлатформа.ПолучитьКППДляПечати(
		ДанныеДокумента.Покупатель,
		ДанныеДокумента.ПодразделениеКомпании,
		ДанныеДокумента.Дата
	);
	ОбластьЗаголовок.Параметры.ИННПокупателя = СтрШаблон(
		"%1/%2",
		?(ЗначениеЗаполнено(Покупатель.ИНН), Покупатель.ИНН, "--"),
		?(ЗначениеЗаполнено(КПП), КПП, "--")
	);
	
	// Выводим область.
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ОбластьШапкаИдГосКонтракта = Макет.ПолучитьОбласть("ШапкаИдГосКонтракта");
	ЗаполнитьЗначенияСвойств(ОбластьШапкаИдГосКонтракта.Параметры, ДанныеДокумента);
		
	ТабличныйДокумент.Вывести(ОбластьШапкаИдГосКонтракта);
	
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");

	Если ЕстьСтоимостьТовараПрослеживания Тогда 
		Если НомерРедакции = 1096 Тогда 
			ОбластьЗаголовокТаблицы.Параметры.ЗаголовокТаблицы14 = НСтр("ru = 'Стоимость товара, подлежащего прослежива-
			|емости, без налога на добавленную стоимость, в рублях'");
		Иначе 
			ОбластьЗаголовокТаблицы.Параметры.ЗаголовокТаблицы14 = НСтр("ru = 'Стоимость товара, подлежащего прослежива-
			|емости, без налога'");
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
	Смещать = ТипСмещенияТабличногоДокумента.ПоВертикали;
	Область = ТабличныйДокумент.Область(?(ДанныеДокумента.Дата >= Дата('20170701'), "R17", "R16"));
	ТабличныйДокумент.УдалитьОбласть(Область, Смещать);
	НомерСтраницы = 2;
	НомерСтраницыПред = НомерСтраницы;
	
	// Заполним параметры шапки таблицы для следующего листа
	ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы  = "Лист" + " " + НомерСтраницы;
	Если ОбластьЗаголовок.Параметры.Номер <> "--" И ОбластьЗаголовок.Параметры.Дата <> "--" Тогда
		ОбластьЗаголовокТаблицы.Параметры.ТекстЗаголовка = СтрШаблон(
			НСтр("ru = 'Универсальный корректировочный документ № %1 от %2'"),
			ОбластьЗаголовок.Параметры.Номер,
			ОбластьЗаголовок.Параметры.Дата
		);
	Иначе
		ОбластьЗаголовокТаблицы.Параметры.ТекстЗаголовка = СтрШаблон(
			НСтр("ru = 'Универсальный корректировочный документ № %1 от %2'"),
			ОбластьЗаголовок.Параметры.НомерИсправления,
			ОбластьЗаголовок.Параметры.ДатаИсправления
		);
	КонецЕсли;
	
	ИтогоСтоимостьУвеличение = 0;
	ИтогоСтоимостьУменьшение = 0;
	ИтогоСуммаНДСУвеличение = 0;
	ИтогоСуммаНДСУменьшение = 0;
	ИтогоВсегоУвеличение = 0;
	ИтогоВсегоУменьшение = 0;
	ИтогоКоличествоПрослежУвеличение = 0;
	ИтогоКоличествоПрослежУменьшение = 0;
	СтоимПрослежУвеличениеВсего = 0;
	СтоимПрослежУменьшениеВсего = 0;
	
	КоличествоСтрок = ВыборкаТабличнойЧасти.Количество();
	ОбластиДляПроверкиВывода = Неопределено;
	
	СтруктураИтоговПоСтранице = Новый Структура("Сумма", 0);
	
	ЕстьСтрокиСНДС = Ложь;
	
	Если КоличествоСтрок > 0 Тогда
		
		ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.ДоговорВзаиморасчетов, "ЕдиницаИзмеренияАвтоработВПечатныхФормах, ЕдиницаИзмеренияАвтоработВПечатныхФормах.Код");
		
		Для Каждого ТекСтрока Из ВыборкаТабличнойЧасти Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ТекСтрока);
			
			ОбластьСтрока.Параметры.ТоварКод = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(
						ТекСтрока.Номенклатура);  

			Если ТекСтрока.СтавкаНДС <> Справочники.СтавкиНДС.БезНДС Тогда
				ЕстьСтрокиСНДС = Истина;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьСтрока.Параметры.ИсходныйНомерСтроки) Тогда
				ОбластьСтрока.Параметры.ИсходныйНомерСтроки = "--";
			КонецЕсли;
			
			КоличествоТовара = ТекСтрока.Количество;
			
			Если ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Номенклатура")
				ИЛИ ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Автомобили") Тогда
			
				КодТНВЭД = ТекСтрока.Номенклатура.КодТНВЭД;
				Если ЗначениеЗаполнено(КодТНВЭД) И ВыводитьКодТНВЭД Тогда
					ОбластьСтрока.Параметры.КодВидаТовара = СокрЛП(КодТНВЭД);
				Иначе
					ОбластьСтрока.Параметры.КодВидаТовара = "--";
				КонецЕсли;
			
			КонецЕсли;

			Если ЗначениеЗаполнено(ТекСтрока.ГТД) Тогда
				ОбластьСтрока.Параметры.ПредставлениеГТДДоИзменения = 
					УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ТекСтрока.ГТД);
				ОбластьСтрока.Параметры.ПредставлениеСтраныДоИзменения = ТекСтрока.ГТД.Страна.Наименование;
				ОбластьСтрока.Параметры.СтранаПроисхожденияДоИзменения = ТекСтрока.ГТД.Страна.Код;
			Иначе
				ОбластьСтрока.Параметры.ПредставлениеГТДДоИзменения = "--";
				ОбластьСтрока.Параметры.ПредставлениеСтраныДоИзменения = "--";
				ОбластьСтрока.Параметры.СтранаПроисхожденияДоИзменения = "--";
			КонецЕсли; 
			
			Если ЕстьРеквизит_ГТДПослеИзменения Тогда
				
				Если ЗначениеЗаполнено(ТекСтрока.ГТДПослеИзменения) Тогда
					
					ОбластьСтрока.Параметры.ПредставлениеГТДПослеИзменения = 
						УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(ТекСтрока.ГТДПослеИзменения);
					ОбластьСтрока.Параметры.ПредставлениеСтраныПослеИзменения = ТекСтрока.ГТДПослеИзменения.Страна.Наименование;
					ОбластьСтрока.Параметры.СтранаПроисхожденияПослеИзменения = ТекСтрока.ГТДПослеИзменения.Страна.Код;
					
				Иначе
					
					ОбластьСтрока.Параметры.ПредставлениеГТДПослеИзменения = "--";
					ОбластьСтрока.Параметры.ПредставлениеСтраныПослеИзменения = "--";
					ОбластьСтрока.Параметры.СтранаПроисхожденияПослеИзменения = "--";
					
				КонецЕсли;
				                                                                                                 
			Иначе
				
				ОбластьСтрока.Параметры.ПредставлениеГТДПослеИзменения = ОбластьСтрока.Параметры.ПредставлениеГТДДоИзменения;
				ОбластьСтрока.Параметры.ПредставлениеСтраныПослеИзменения = ОбластьСтрока.Параметры.ПредставлениеСтраныДоИзменения;
				ОбластьСтрока.Параметры.СтранаПроисхожденияПослеИзменения = ОбластьСтрока.Параметры.СтранаПроисхожденияДоИзменения;
				
			КонецЕсли;
			
			Если ЕстьРеквизит(ВыборкаТабличнойЧасти, "Содержание") И ЗначениеЗаполнено(ТекСтрока.Содержание) Тогда
				Наименование = ТекСтрока.Содержание;
			ИначеЕсли ЕстьРеквизит(ВыборкаТабличнойЧасти, "ТоварНаименование") Тогда
				Наименование = ТекСтрока.ТоварНаименование;
			Иначе
				Наименование = ?(ЗначениеЗаполнено(ТекСтрока.Номенклатура.НаименованиеПолное),
						ТекСтрока.Номенклатура.НаименованиеПолное, ТекСтрока.Номенклатура.Наименование);
			КонецЕсли;
			
			ОбластьСтрока.Параметры.ТоварНаименование = Наименование;
			
			КоличествоДоИзменения = ТекСтрока.Количество - ТекСтрока.КоличествоРазница;
			КоличествоПослеИзменения = ТекСтрока.Количество;
			
			Если ЕстьРеквизит(ТекСтрока.Номенклатура, "ВидНоменклатуры")
				И ТекСтрока.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Услуга Тогда
				
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод  = ТекСтрока.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
				ОбластьСтрока.Параметры.ЕдиницаИзмерения     = ТекСтрока.ЕдиницаИзмерения;
				
			ИначеЕсли
				ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Автоработы")
				И ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормах <> Справочники.КлассификаторЕдиницИзмерения.прочерк
			Тогда
				
				ОбластьСтрока.Параметры.ЕдиницаИзмерения = ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормах;
				
				Если ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормах <>
					ПредопределенноеЗначение("Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка") Тогда
					
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = ДанныеЕдиницыИзмеренияАвтоработВПечатныхФормах.ЕдиницаИзмеренияАвтоработВПечатныхФормахКод;
					
				Иначе
					
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = "--";
					
				КонецЕсли;
				
				Если ЕстьРеквизит(ВыборкаТабличнойЧасти, "Коэффициент") Тогда
					КоличествоДоИзменения = (ТекСтрока.Количество - ТекСтрока.КоличествоРазница)
					* ТекСтрока.КоэффициентПоДокументуРеализации;
					КоличествоПослеИзменения = ТекСтрока.Количество * ТекСтрока.Коэффициент;
				КонецЕсли;
				
				ЗаполнитьСтрокуПоПрослеживаемостиПрочерк(ОбластьСтрока, Прослеживаемость);
				
			Иначе
				
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод = "--";
				ОбластьСтрока.Параметры.ЕдиницаИзмерения = "--";
				
			КонецЕсли;
			
			Если ДанныеДокумента.Статус = 1 Тогда
				ОбластьСтрока.Параметры.Акциз = НСтр("ru = 'без акциза'");
			ИначеЕсли ДанныеДокумента.Статус = 2 Тогда
				ОбластьСтрока.Параметры.Акциз = НСтр("ru = '--'");
			КонецЕсли;
			
			ОбластьСтрока.Параметры.КоличествоДоИзменения = КоличествоДоИзменения;
			ОбластьСтрока.Параметры.КоличествоПослеИзменения = КоличествоПослеИзменения;
			
			Если ТекСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС Тогда
				СуммаНДСДоИзменения = 0;
				СуммаНДСПослеИзменения = 0;
				СуммаНДСУвеличение = 0;
				СуммаНДСУменьшение = 0;
				Если ДанныеДокумента.Статус = 1 Тогда
					ОбластьСтрока.Параметры.СтавкаНДС = НСтр("ru = 'без НДС'");
					ОбластьСтрока.Параметры.СтавкаНДСДоИзменения = НСтр("ru = 'без НДС'");
					ОбластьСтрока.Параметры.СуммаНДСДоИзменения = НСтр("ru = '0.00'");
					ОбластьСтрока.Параметры.СуммаНДСПослеИзменения = НСтр("ru = '0.00'");
					ОбластьСтрока.Параметры.СуммаНДСУвеличение = НСтр("ru = '0.00'");
					ОбластьСтрока.Параметры.СуммаНДСУменьшение = НСтр("ru = '0.00'");
				ИначеЕсли ДанныеДокумента.Статус = 2 Тогда
					ОбластьСтрока.Параметры.СтавкаНДС = НСтр("ru = '--'");
					ОбластьСтрока.Параметры.СтавкаНДСДоИзменения = НСтр("ru = '--'");
					ОбластьСтрока.Параметры.СуммаНДСДоИзменения = НСтр("ru = '--'");
					ОбластьСтрока.Параметры.СуммаНДСПослеИзменения = НСтр("ru = '--'");
					ОбластьСтрока.Параметры.СуммаНДСУвеличение = НСтр("ru = '--'");
					ОбластьСтрока.Параметры.СуммаНДСУменьшение = НСтр("ru = '--'");
				КонецЕсли;
			Иначе
				СуммаНДСДоИзменения = ?(
					ДанныеДокумента.ЭтоПродажа,
					ТекСтрока.СуммаНДСПоДокументуРеализации,
					ТекСтрока.СуммаНДСПоДокументуПоступления);
				СуммаНДСПослеИзменения = ТекСтрока.СуммаНДС;
				СуммаНДСУвеличение = ?(СуммаНДСПослеИзменения > СуммаНДСДоИзменения,
					СуммаНДСПослеИзменения - СуммаНДСДоИзменения,
					0);
				СуммаНДСУменьшение = ?(СуммаНДСДоИзменения > СуммаНДСПослеИзменения,
					СуммаНДСДоИзменения - СуммаНДСПослеИзменения,
					0);
				ОбластьСтрока.Параметры.СтавкаНДС = ТекСтрока.СтавкаНДС;
				ОбластьСтрока.Параметры.СуммаНДСДоИзменения = СуммаНДСДоИзменения;
				ОбластьСтрока.Параметры.СуммаНДСПослеИзменения = СуммаНДСПослеИзменения;
				ОбластьСтрока.Параметры.СуммаНДСУвеличение = СуммаНДСУвеличение; 
				ОбластьСтрока.Параметры.СуммаНДСУменьшение = СуммаНДСУменьшение;
				ЕстьСтрокиСНДС = Истина;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.ВсегоДоИзменения =  ?(
				ДанныеДокумента.ЭтоПродажа,
				ТекСтрока.СуммаВсегоПоДокументуРеализации,
				ТекСтрока.СуммаВсегоПоДокументуПоступления);
			ОбластьСтрока.Параметры.ВсегоПослеИзменения = ТекСтрока.СуммаВсего;
			
			ОбластьСтрока.Параметры.ВсегоУвеличение = 
				?(ОбластьСтрока.Параметры.ВсегоПослеИзменения > ОбластьСтрока.Параметры.ВсегоДоИзменения,
				ОбластьСтрока.Параметры.ВсегоПослеИзменения - ОбластьСтрока.Параметры.ВсегоДоИзменения,
				0);
			ОбластьСтрока.Параметры.ВсегоУменьшение = 
				?(ОбластьСтрока.Параметры.ВсегоДоИзменения > ОбластьСтрока.Параметры.ВсегоПослеИзменения,
				ОбластьСтрока.Параметры.ВсегоДоИзменения - ОбластьСтрока.Параметры.ВсегоПослеИзменения,
				0);
			СтоимостьДоИзменения = ОбластьСтрока.Параметры.ВсегоДоИзменения - СуммаНДСДоИзменения;
			ОбластьСтрока.Параметры.СтоимостьДоИзменения = СтоимостьДоИзменения;
			СтоимостьПослеИзменения = ОбластьСтрока.Параметры.ВсегоПослеИзменения - СуммаНДСПослеИзменения;
			ОбластьСтрока.Параметры.СтоимостьПослеИзменения = СтоимостьПослеИзменения;
			СтоимостьУвеличение = ?(СтоимостьПослеИзменения > СтоимостьДоИзменения,
				СтоимостьПослеИзменения - СтоимостьДоИзменения,
				0);
			ОбластьСтрока.Параметры.СтоимостьУвеличение = СтоимостьУвеличение;
			СтоимостьУменьшение = ?(СтоимостьДоИзменения > СтоимостьПослеИзменения,
				СтоимостьДоИзменения - СтоимостьПослеИзменения,
				0);
			ОбластьСтрока.Параметры.СтоимостьУменьшение = СтоимостьУменьшение;
			
			ОбластьСтрока.Параметры.ЦенаДоИзменения = 
				?(ОбластьСтрока.Параметры.КоличествоДоИзменения <> 0, 
					СтоимостьДоИзменения / ОбластьСтрока.Параметры.КоличествоДоИзменения, 
					0);
			ОбластьСтрока.Параметры.ЦенаПослеИзменения = 
				?(ОбластьСтрока.Параметры.КоличествоПослеИзменения <> 0, 
					СтоимостьПослеИзменения / ОбластьСтрока.Параметры.КоличествоПослеИзменения, 
					0);
					
			Если ((ЗначениеЗаполнено(ТекСтрока.ГТД) И ТекСтрока.ГТД.РНПТ) 
				ИЛИ (ЕстьРеквизит_ГТДПослеИзменения И ЗначениеЗаполнено(ТекСтрока.ГТДПослеИзменения) И ТекСтрока.ГТДПослеИзменения.РНПТ))
				И ЕстьСтоимостьТовараПрослеживания Тогда
				ОбластьСтрока.Параметры.СтоимПрослежДо = СтоимостьДоИзменения;
				ОбластьСтрока.Параметры.СтоимПрослежПосле = СтоимостьПослеИзменения;
				ОбластьСтрока.Параметры.СтоимПрослежУвеличение = СтоимостьУвеличение;
				ОбластьСтрока.Параметры.СтоимПрослежУменьшение = СтоимостьУменьшение;
				СтоимПрослежУвеличениеВсего = СтоимПрослежУвеличениеВсего + СтоимостьУвеличение;
				СтоимПрослежУменьшениеВсего = СтоимПрослежУменьшениеВсего + СтоимостьУменьшение;
			ИначеЕсли ЕстьСтоимостьТовараПрослеживания Тогда 
				ОбластьСтрока.Параметры.СтоимПрослежДо = "--";
				ОбластьСтрока.Параметры.СтоимПрослежПосле = "--";
				ОбластьСтрока.Параметры.СтоимПрослежУвеличение = "--";
				ОбластьСтрока.Параметры.СтоимПрослежУменьшение = "--";
			КонецЕсли;

			Если ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
											
				ЗаполнитьСтрокуПоПрослеживаемостиНоменклатура(
					ОбластьСтрока,
					ТекСтрока,
					Прослеживаемость,
					ИтогоКоличествоПрослежУвеличение,
					ИтогоКоличествоПрослежУменьшение,
					ЕстьРеквизит_ГТДПослеИзменения,
					НомерРедакции
				);
				
			Иначе

				ЗаполнитьСтрокуПоПрослеживаемостиАвтомобиль(
					ОбластьСтрока,
					ТекСтрока,
					Прослеживаемость,
					ИтогоКоличествоПрослежУвеличение,
					ИтогоКоличествоПрослежУменьшение,
					НомерРедакции
				);
				
			КонецЕсли;
			
			ИтогоСтоимостьУвеличение = ИтогоСтоимостьУвеличение + СтоимостьУвеличение;
			ИтогоСтоимостьУменьшение = ИтогоСтоимостьУменьшение + СтоимостьУменьшение;
			ИтогоСуммаНДСУвеличение = ИтогоСуммаНДСУвеличение + СуммаНДСУвеличение;
			ИтогоСуммаНДСУменьшение = ИтогоСуммаНДСУменьшение + СуммаНДСУменьшение;
			ИтогоВсегоУвеличение = ИтогоВсегоУвеличение + ОбластьСтрока.Параметры.ВсегоУвеличение;
			ИтогоВсегоУменьшение = ИтогоВсегоУменьшение + ОбластьСтрока.Параметры.ВсегоУменьшение;
			
			// При выводе последней строки будем проверять, что вмещается подвал.
			Если ВыборкаТабличнойЧасти[КоличествоСтрок - 1] = ТекСтрока Тогда
				ОбластиДляПроверкиВывода = Новый Массив;
				ОбластиДляПроверкиВывода.Добавить(ОбластьИтого);
				ОбластиДляПроверкиВывода.Добавить(ОбластьПодвал);
				ОбластиДляПроверкиВывода.Добавить(ОбластьПодвалНакладной);
			КонецЕсли;
			
			// Выводим строку, делая проверку попадания на лист.
			НомерСтраницы = УправлениеПечатьюПлатформа.ВывестиГоризонтальнуюОбласть(ТабличныйДокумент, ОбластьСтрока,
				ОбластьЗаголовокТаблицы,, НомерСтраницы, , Документ, ОбластиДляПроверкиВывода);
			
			// Инициализация итогов по странице.
			Если НомерСтраницы <> НомерСтраницыПред Тогда
				НомерСтраницыПред = НомерСтраницы;
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Лист:" + " " + НомерСтраницы;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОбластьИтого.Параметры.ИтогоСтоимостьУвеличение = ИтогоСтоимостьУвеличение;
	ОбластьИтого.Параметры.ИтогоСтоимостьУменьшение = ИтогоСтоимостьУменьшение;
	Если ЕстьСтрокиСНДС Тогда
		ОбластьИтого.Параметры.ИтогоСуммаНДСУвеличение = ИтогоСуммаНДСУвеличение;
		ОбластьИтого.Параметры.ИтогоСуммаНДСУменьшение = ИтогоСуммаНДСУменьшение;
	Иначе
		Если ДанныеДокумента.Статус = 1 Тогда
			ОбластьИтого.Параметры.ИтогоСуммаНДСУвеличение = "без НДС";
			ОбластьИтого.Параметры.ИтогоСуммаНДСУменьшение = "без НДС";
		ИначеЕсли ДанныеДокумента.Статус = 2 Тогда
			ОбластьИтого.Параметры.ИтогоСуммаНДСУвеличение = "--";
			ОбластьИтого.Параметры.ИтогоСуммаНДСУменьшение = "--";
		КонецЕсли;
	КонецЕсли;
	ОбластьИтого.Параметры.ИтогоВсегоУвеличение = ИтогоВсегоУвеличение;
	ОбластьИтого.Параметры.ИтогоВсегоУменьшение = ИтогоВсегоУменьшение;
	Если Прослеживаемость Тогда
		Если НомерРедакции = 1096 Тогда 
			ОбластьИтого.Параметры.КоличествоПрослежУвеличениеВсего =  "Х";
			ОбластьИтого.Параметры.КоличествоПрослежУменьшениеВсего =  "Х";
        Иначе
			ОбластьИтого.Параметры.КоличествоПрослежУвеличениеВсего = ИтогоКоличествоПрослежУвеличение;
			ОбластьИтого.Параметры.КоличествоПрослежУменьшениеВсего = ИтогоКоличествоПрослежУменьшение;
		КонецЕсли;
	КонецЕсли;
	Если ЕстьСтоимостьТовараПрослеживания Тогда
		Если НомерРедакции = 1096 Тогда 
			ОбластьИтого.Параметры.СтоимПрослежУвеличениеВсего =  "Х";
			ОбластьИтого.Параметры.СтоимПрослежУменьшениеВсего =  "Х";
        Иначе
			ОбластьИтого.Параметры.СтоимПрослежУвеличениеВсего = СтоимПрослежУвеличениеВсего;
			ОбластьИтого.Параметры.СтоимПрослежУменьшениеВсего = СтоимПрослежУменьшениеВсего;
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьИтого);
	// Заполним информацию о руководителях организации.
	ЭтоИП = Документ.Организация.ФормаСобственности = Перечисления.ФормыСобственности.ИндивидуальныйПредприниматель;
	Если ЭтоИП Тогда
		ОбластьПодвал.Параметры.ФИОПБОЮЛ = ДанныеДокумента.Руководитель.Представление;
		ОбластьПодвал.Параметры.Свидетельство = 
		Справочники.ПодтверждающиеДокументы.ПолучитьПодтверждающийДокументОбъектаПоВиду(ДанныеДокумента.Поставщик,
			Перечисления.ВидыДокументов.Свидетельство);
	Иначе
		ОбластьПодвал.Параметры.ФИОРуководителя = ДанныеДокумента.Руководитель.Представление + 
			ПолучитьПредставлениеОснования(
				ПолучитьСтруктуруОснования(ДанныеДокумента.Руководитель, Документ.Дата, Документ.Организация)); 
				
		ОбластьПодвал.Параметры.ФИОГлавногоБухгалтера = ДанныеДокумента.ГлавныйБухгалтер.Представление +
			ПолучитьПредставлениеОснования(
				ПолучитьСтруктуруОснования(ДанныеДокумента.ГлавныйБухгалтер, Документ.Дата, Документ.Организация));

	КонецЕсли;
	
				
	ОбластьПодвал.Параметры.КоличествоЛистов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Документ %1составлен на%1%2 листах'"),
		Символы.ПС,
		ТабличныйДокумент.КоличествоСтраниц()
	);
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	Если ДанныеДокумента.Свойство("НомерИсходногоДокумента") Тогда
		ДатаИсходногоДокумента = ДанныеДокумента.ДатаИсходногоДокумента;
		ШаблонПередаточныхДокументов = "Универсальный передаточный документ";
		Если ДатаИсходногоДокумента >= Дата(2018, 1, 1) Тогда
			ТекстПередаточныхДокументов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2, № %3",
				ШаблонПередаточныхДокументов,
				Формат(ДатаИсходногоДокумента, "ДЛФ=D"),
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.НомерИсходногоДокумента, Истина, Ложь));
		Иначе
			ТекстПередаточныхДокументов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 № %2 от %3",
				ШаблонПередаточныхДокументов,
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.НомерИсходногоДокумента, Истина, Ложь),
				Формат(ДатаИсходногоДокумента, "ДЛФ=D"));
		КонецЕсли;
		ОбластьПодвалНакладной.Параметры.РеквизитыПередаточныхДокументов = ТекстПередаточныхДокументов;
	КонецЕсли;
	
	ОбластьПодвалНакладной.Параметры.Основание = ЗначениеОснованияОтгрузкиТоваров(ДанныеДокумента, Документ);
		
	ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи = ДанныеДокумента.ДатаОтгрузки;
	
	Если НЕ ЗначениеЗаполнено(ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи) Тогда
		ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи = ДанныеДокумента.Дата;
	КонецЕсли;
	ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи = Формат(
		ОбластьПодвалНакладной.Параметры.ДатаОтгрузкиПередачи, "ДЛФ=ДД");

	Если ДанныеДокумента.ЭтоПродажа Тогда
		ОбластьПодвалНакладной.Параметры.ДолжностьМенеджера = ДанныеДокумента.Менеджер.МенеджерДолжность;
		ОбластьПодвалНакладной.Параметры.ФИОМенеджера       = ДанныеДокумента.Менеджер.МенеджерПредставление; 
	КонецЕсли;
	
	ОбластьПодвалНакладной.Параметры.ПредставлениеОрганизации = ОбластьЗаголовок.Параметры.ПредставлениеПоставщика 
		+ ", " + "ИНН/КПП" + " " + ОбластьЗаголовок.Параметры.ИННПоставщика;
	
	ОбластьПодвалНакладной.Параметры.ПредставлениеКонтрагента = ОбластьЗаголовок.Параметры.ПредставлениеПокупателя
				+ ", " + "ИНН/КПП" + " " + ОбластьЗаголовок.Параметры.ИННПокупателя;
					
	ТабличныйДокумент.Вывести(ОбластьПодвалНакладной);

	// Отметим конец области документа для выделения в форме
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ);
	УправлениеПечатьюАльфаАвто.ДублирующиеФаксимиле(ТабличныйДокумент, ОбъектыПечати, Документ, Документ.Организация);
	
КонецПроцедуры 

Функция ЗначениеОснованияОтгрузкиТоваров(ДанныеДокумента, Документ)

	ОснованиеОтгрузкиТоваров = "";
	ЗначениеНезаполненногоОснования = НСтр("ru = 'Без документа-основания'");
	
	ДоговорВзаиморасчетов = ДанныеДокумента.ДоговорВзаиморасчетов;
	
	Если ЗначениеЗаполнено(ДоговорВзаиморасчетов)
		И ТипЗнч(ДоговорВзаиморасчетов) = Тип("СправочникСсылка.ДоговорыВзаиморасчетов") Тогда
		
		ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДоговорВзаиморасчетов, "ДатаНачала, НомерДоговора, Наименование");
		
		Если ЗначениеЗаполнено(ДанныеДоговора.НомерДоговора) И ЗначениеЗаполнено(ДанныеДоговора.ДатаНачала) Тогда
			
			ОснованиеОтгрузкиТоваров = ДанныеДоговора.Наименование;			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОснованиеОтгрузкиТоваров) Тогда

		ОснованиеОтгрузкиТоваров = ЗначениеНезаполненногоОснования;
		
	КонецЕсли;
	
	Возврат ОснованиеОтгрузкиТоваров;

КонецФункции

Функция ПолучитьСтруктуруОснования(ВладелецОснования,ДатаДокумента, ОрганизацияДокумента) 
		
   Основание = Новый Структура();  
	
	Если  ЗначениеЗаполнено(ВладелецОснования.Основание) Тогда
				
		ДокументОснование = ВладелецОснования.Основание;
		
		Если ДокументОснование.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Доверенность ИЛИ 
			ДокументОснование.ВидПодтверждающегоДокумента = Перечисления.ВидыДокументов.Приказ Тогда
					
			Если ДокументОснование.ДатаВыдачи <= ДатаДокумента  И ДокументОснование.Организация = ОрганизацияДокумента Тогда
						
				Основание.Вставить("ВидДокумента", ДокументОснование.ВидПодтверждающегоДокумента);
				Основание.Вставить("Серия", ДокументОснование.Серия);
				Основание.Вставить("Номер", ДокументОснование.Номер);
				Основание.Вставить("Дата", Формат(ДокументОснование.ДатаВыдачи,"ДФ=dd.MM.yyyy; ДЛФ=D" )); 
				Если ВладелецОснования.Свойство("Принял") ИЛИ ВладелецОснования.Свойство("Получил") Тогда 
					Основание.Вставить("КемВыдан", ДокументОснование.Контрагент); 
				Иначе 
				    Основание.Вставить("КемВыдан", ДокументОснование.Организация);
				КонецЕсли;
				Основание.Вставить("ВладелецОснования", ВладелецОснования.Представление);
			КонецЕсли;          
					
		КонецЕсли;	
		
	КонецЕсли;	
	
	Возврат Основание; 

КонецФункции 

Функция ПолучитьПредставлениеОснования(Основание)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(Основание) Тогда
		
		Представление = Строка(Основание.ВидДокумента)
			+ " " + Основание.Серия
			+ " № " + Основание.Номер 
			+ " от " + Формат(Основание.Дата,"ДФ=dd.MM.yyyy; ДЛФ=D" ); 			
	КонецЕсли; 
	
	Возврат Представление; 
	
КонецФункции

#КонецОбласти

#Область ПрослеживаемыйТовар

Функция ЕстьПрослеживаемыйТовар(Товары, ЕстьРеквизит_ГТДПослеИзменения)
	
	Для Каждого ТекущаяСтрока Из Товары Цикл
		Если (ЗначениеЗаполнено(ТекущаяСтрока.ГТД) И ТекущаяСтрока.ГТД.РНПТ)
			ИЛИ (ЕстьРеквизит_ГТДПослеИзменения И ЗначениеЗаполнено(ТекущаяСтрока.ГТДПослеИзменения) И ТекущаяСтрока.ГТДПослеИзменения.РНПТ) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура ЗаполнитьСтрокуПоПрослеживаемостиНоменклатура(
		ОбластьСтрока,
		ТекСтрока,
		Прослеживаемость,
		ИтогоКоличествоПрослежУвеличение,
		ИтогоКоличествоПрослежУменьшение,
		ЕстьРеквизит_ГТДПослеИзменения,
		НомерРедакции
	)
	
	Если НЕ Прослеживаемость Тогда
		Возврат;
	КонецЕсли;
	
	Если (ЗначениеЗаполнено(ТекСтрока.ГТД) И ТекСтрока.ГТД.РНПТ) 
		ИЛИ (ЕстьРеквизит_ГТДПослеИзменения И ЗначениеЗаполнено(ТекСтрока.ГТДПослеИзменения) И ТекСтрока.ГТДПослеИзменения.РНПТ) Тогда
		
		ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослежКод = ТекСтрока.Номенклатура.БазоваяЕдиницаИзмерения.Код;
		ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослеж = ТекСтрока.Номенклатура.БазоваяЕдиницаИзмерения.Наименование;
		ОбластьСтрока.Параметры.КоличествоПрослежДо = ТекСтрока.КоличествоДо;
		ОбластьСтрока.Параметры.КоличествоПрослежПосле = ОбластьСтрока.Параметры.КоличествоПрослежДо + ТекСтрока.КоличествоРазница * ТекСтрока.Коэффициент;
		Разница = ОбластьСтрока.Параметры.КоличествоПрослежПосле - ОбластьСтрока.Параметры.КоличествоПрослежДо;
		ОбластьСтрока.Параметры.КоличествоПрослежУвеличение = ?(Разница > 0, Разница, 0);
		ОбластьСтрока.Параметры.КоличествоПрослежУменьшение = ?(Разница < 0, - Разница, 0);

		Если НомерРедакции = 1096 Тогда

			Если ОбластьСтрока.Параметры.СтоимПрослежУвеличение > 0 ИЛИ ОбластьСтрока.Параметры.КоличествоПрослежУвеличение > 0 Тогда 
				ОбластьСтрока.Параметры.ПредставлениеГТДУвеличение = ОбластьСтрока.Параметры.ПредставлениеГТДПослеИзменения;
			Иначе
				ОбластьСтрока.Параметры.ПредставлениеГТДУвеличение = "";
			КонецЕсли;

			Если ОбластьСтрока.Параметры.СтоимПрослежУменьшение > 0 ИЛИ ОбластьСтрока.Параметры.КоличествоПрослежУменьшение > 0 Тогда 
				ОбластьСтрока.Параметры.ПредставлениеГТДУменьшение = ОбластьСтрока.Параметры.ПредставлениеГТДДоИзменения;
			Иначе
				ОбластьСтрока.Параметры.ПредставлениеГТДУменьшение = "";
			КонецЕсли;

		Иначе

			ОбластьСтрока.Параметры.ПредставлениеГТДУвеличение = "--";
			ОбластьСтрока.Параметры.ПредставлениеГТДУменьшение = "--";
			
		КонецЕсли;
			
		ИтогоКоличествоПрослежУвеличение = ИтогоКоличествоПрослежУвеличение
			+ ОбластьСтрока.Параметры.КоличествоПрослежУвеличение;
		ИтогоКоличествоПрослежУменьшение = ИтогоКоличествоПрослежУменьшение
			+ ОбластьСтрока.Параметры.КоличествоПрослежУменьшение;
		
	Иначе
		
		ЗаполнитьСтрокуПоПрослеживаемостиПрочерк(ОбластьСтрока, Прослеживаемость);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуПоПрослеживаемостиАвтомобиль(
		ОбластьСтрока,
		ТекСтрока,
		Прослеживаемость,
		ИтогоКоличествоПрослежУвеличение,
		ИтогоКоличествоПрослежУменьшение,
		НомерРедакции
	)
	
	Если Не Прослеживаемость Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.Автомобили")
		И ЗначениеЗаполнено(ТекСтрока.ГТД)
		И ТекСтрока.ГТД.РНПТ Тогда
		
		ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослежКод = "796";
		ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослеж = "шт";
		ОбластьСтрока.Параметры.КоличествоПрослежДо = ТекСтрока.КоличествоДо;
		ОбластьСтрока.Параметры.КоличествоПрослежПосле = ТекСтрока.КоличествоПосле;
		Разница = ТекСтрока.КоличествоПосле - ТекСтрока.КоличествоДо;
		ОбластьСтрока.Параметры.КоличествоПрослежУвеличение = ?(Разница > 0, Разница, 0);
		ОбластьСтрока.Параметры.КоличествоПрослежУменьшение = ?(Разница < 0, - Разница, 0);

		Если НомерРедакции = 1096 Тогда

			Если ОбластьСтрока.Параметры.СтоимПрослежУвеличение > 0 ИЛИ ОбластьСтрока.Параметры.КоличествоПрослежУвеличение > 0 Тогда 
				ОбластьСтрока.Параметры.ПредставлениеГТДУвеличение = ОбластьСтрока.Параметры.ПредставлениеГТДПослеИзменения;
			Иначе
				ОбластьСтрока.Параметры.ПредставлениеГТДУвеличение = "";
			КонецЕсли;

			Если ОбластьСтрока.Параметры.СтоимПрослежУменьшение > 0 ИЛИ ОбластьСтрока.Параметры.КоличествоПрослежУменьшение > 0 Тогда 
				ОбластьСтрока.Параметры.ПредставлениеГТДУменьшение = ОбластьСтрока.Параметры.ПредставлениеГТДДоИзменения;
			Иначе
				ОбластьСтрока.Параметры.ПредставлениеГТДУменьшение = "";
			КонецЕсли;

		Иначе

			ОбластьСтрока.Параметры.ПредставлениеГТДУвеличение = "--";
			ОбластьСтрока.Параметры.ПредставлениеГТДУменьшение = "--";
			
		КонецЕсли;
		
		ИтогоКоличествоПрослежУвеличение = ИтогоКоличествоПрослежУвеличение
			+ ОбластьСтрока.Параметры.КоличествоПрослежУвеличение;
		ИтогоКоличествоПрослежУменьшение = ИтогоКоличествоПрослежУменьшение
			+ ОбластьСтрока.Параметры.КоличествоПрослежУменьшение;
			
	Иначе
		
		ЗаполнитьСтрокуПоПрослеживаемостиПрочерк(ОбластьСтрока, Прослеживаемость);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуПоПрослеживаемостиПрочерк(ОбластьСтрока, Прослеживаемость)
	
	Если НЕ Прослеживаемость Тогда
		Возврат;
	КонецЕсли;

	ОбластьСтрока.Параметры.ПредставлениеГТДУвеличение = "--";
	ОбластьСтрока.Параметры.ПредставлениеГТДУменьшение = "--";
	
	ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослежКод = "--";
	ОбластьСтрока.Параметры.ЕдиницаИзмеренияПрослеж = "--";
	ОбластьСтрока.Параметры.КоличествоПрослежДо = "--";
	ОбластьСтрока.Параметры.КоличествоПрослежПосле = "--";
	ОбластьСтрока.Параметры.КоличествоПрослежУвеличение = "--";
	ОбластьСтрока.Параметры.КоличествоПрослежУменьшение = "--";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли