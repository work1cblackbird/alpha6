///////////////////////////////////////////////////////////////////////////////
// Модуль формы обработки "Помощник закрытия договора аренды"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ДоговорАренды", ДоговорАренды) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДанныеВидаАренды = АрендаАвтомобилей.ДанныеВидаАренды(ДоговорАренды.ВидАренды);
	
	Если ДанныеВидаАренды.ТипАренды = Перечисления.ТипыРемонта.Платный Тогда
		Контрагент = ДоговорАренды.Контрагент;
	Иначе
		Контрагент = ДоговорАренды.Заказчик;
	КонецЕсли;
	
	ЗаполнитьСуммуОстаткаДепозита();
	ЗаполнитьТаблицуСделок();
	ЗаполнитьСписокВыбораДоговора();
	
	КассаКомпании   = ПраваИНастройкиПользователя.Значение("ОсновнаяКассаКомпании");
	СчетКонтрагента = Контрагент.ОсновнойБанковскийСчет;
	КассаККМ        = ПолучитьСчетНаОплатуДепозита("КассаККМ");
	
	ПроверитьУсловияВозможностиЗакрытияДоговора(ДанныеВидаАренды);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(СообщениеПользователю) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПользователю);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НастроитьПомощникПередРаспределением();
	УстановитьДоступностьПолей();
	УстановитьВидимостьРеквизитовСпособаВозврата();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияЗановоНажатие(Элемент)
	
	ДекорацияЗановоНажатиеНаСервере();
	
	НастроитьПомощникПередРаспределением();
	УстановитьДоступностьПолей();
	УстановитьВидимостьРеквизитовСпособаВозврата();
	
КонецПроцедуры

&НаСервере
Процедура ДекорацияЗановоНажатиеНаСервере()
	
	ЗаполнитьСуммуОстаткаДепозита();
	ЗаполнитьТаблицуСделок();
	ЗаполнитьСписокВыбораДоговора();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособВозвратаПриИзменении(Элемент)
	
	УстановитьВидимостьРеквизитовСпособаВозврата();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаВозвратаПриИзменении(Элемент)
	
	РассчитатьНеРаспределено();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПереносаПриИзменении(Элемент)
	
	РассчитатьНеРаспределено();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиНаДругойДоговорАрендыПриИзменении(Элемент)
	
	Если ПеренестиНаДругойДоговорАренды И СуммаПереноса = 0 Тогда
		СуммаПереноса = НеРаспределено;
	КонецЕсли;
	
	УстановитьДоступностьПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЗадолженностиКонтрагентаПриИзменении(Элемент)
	
	УстановитьДоступностьПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьКлиентуПриИзменении(Элемент)
	
	Если ВернутьКлиенту И СуммаВозврата = 0 Тогда
		СуммаВозврата = НеРаспределено;
	КонецЕсли;
	
	УстановитьДоступностьПолей();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСделки

&НаКлиенте
Процедура СделкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элементы.Сделки.ТекущиеДанные;
	Если ТекущиеДанные.Сумма > ТекущиеДанные.СуммаДолга Тогда
		ТекущиеДанные.Сумма = ТекущиеДанные.СуммаДолга;
	КонецЕсли;
	
	РассчитатьНеРаспределено();
	
	ИтогоСделкиПометка     = 0;
	ИтогоСделкиСуммаОплаты = 0;
	Для Каждого Строка Из Сделки Цикл
		Если Строка.Пометка Тогда
			ИтогоСделкиПометка     = ИтогоСделкиПометка     + 1;
			ИтогоСделкиСуммаОплаты = ИтогоСделкиСуммаОплаты + Строка.Сумма;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#Область ОбработчикиСобытийПолейТаблицыФормыСделки

&НаКлиенте
Процедура СделкиПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Сделки.ТекущиеДанные;
	
	Если ТекущиеДанные.Пометка И ТекущиеДанные.Сумма = 0 Тогда
		ТекущиеДанные.Сумма = Мин(ТекущиеДанные.СуммаДолга, НеРаспределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДокументов

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.Документ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СброситьРаспределение(Команда)
	
	ДекорацияЗановоНажатие(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьДепозит(Команда)
	
	Отказ = Ложь;
	
	Если НеРаспределено < 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Сумма распределения превышает сумму остатка депозита.'"),
			ЭтотОбъект,
			"НеРаспределено"
		);
		Отказ = Истина;
	КонецЕсли;
	
	Если ВернутьКлиенту Тогда
		Если НЕ ЗначениеЗаполнено(СпособВозврата) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не указан способ возврата остатка депозита клиенту.'"), 
				,
				"СпособВозврата"
			);
			Отказ = Истина;
		КонецЕсли;
		СпособВозвратаДепозита = ?(СпособВозврата = 2, "СчетКонтрагента", "КассаККМ");
		Реквизит = ?(СпособВозврата = 1, "КассаКомпании", СпособВозвратаДепозита);
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект[Реквизит]) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не заполнены необходимые данные.'"),
				,
				Реквизит
			);
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ПеренестиНаДругойДоговорАренды И НЕ ЗначениеЗаполнено(НовыйДоговор) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Не указан договор для переноса средств.'"),
			,
			"НовыйДоговор"
		);
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НеРаспределено > 0 Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтотОбъект, "Вопрос_РаспределитьДепозит"),
			НСтр("ru = 'Распределен не весь остаток депозита.
				|Вернуть нераспределенный остаток клиенту?'"),
			РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		НастроитьПомощникПослеРаспределения(РаспределитьДепозитНаСервере());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры = "Вопрос_РаспределитьДепозит" Тогда
		Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
			СуммаВозврата  = ?(ВернутьКлиенту, СуммаВозврата, 0) + НеРаспределено;
			ВернутьКлиенту = Истина;
			УстановитьДоступностьПолей();
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВозврат;
		ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
			НастроитьПомощникПослеРаспределения(РаспределитьДепозитНаСервере());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииКлиент

&НаКлиенте
Процедура НастроитьПомощникПередРаспределением()
	
	Элементы.СтраницаРезультат.Видимость        = Ложь;
	Элементы.Страницы.ТекущаяСтраница           = Элементы.СтраницаДепозит;
	Элементы.Страницы.ОтображениеСтраниц        = ОтображениеСтраницФормы.ЗакладкиСверху;
	Элементы.ФормаРаспределитьДепозит.Видимость = Истина;
	Элементы.СброситьРаспределение.Видимость    = Истина;
	
	ИтогоСделкиПометка     = 0;
	ИтогоСделкиСуммаОплаты = 0;
	СуммаПереноса          = 0;
	СуммаВозврата          = 0;
	СпособВозврата         = 0;
	НовыйДоговор           = Неопределено;
	
	ПеренестиНаДругойДоговорАренды  = Ложь;
	ВернутьКлиенту                  = Ложь;
	ЗакрытьЗадолженностиКонтрагента = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПомощникПослеРаспределения(Отказ)
	
	Элементы.ДекорацияЗаново.Видимость = (Отказ ИЛИ НеРаспределено > 0);
	
	Элементы.СтраницаРезультат.Видимость        = Истина;
	Элементы.Страницы.ТекущаяСтраница           = Элементы.СтраницаРезультат;
	Элементы.Страницы.ОтображениеСтраниц        = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницаРезультат.ЦветФона         = Новый Цвет();
	Элементы.ФормаРаспределитьДепозит.Видимость = Ложь;
	Элементы.СброситьРаспределение.Видимость    = Ложь;
	Элементы.СтраницыРезультат.ТекущаяСтраница  = ?(Отказ, Элементы.СтраницаРезультатНеОк, Элементы.СтраницаРезультатОк);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьПолей()
	
	Элементы.НовыйДоговор.ТолькоПросмотр  = НЕ ПеренестиНаДругойДоговорАренды;
	Элементы.СуммаПереноса.ТолькоПросмотр = НЕ ПеренестиНаДругойДоговорАренды;
	Элементы.ГруппаВозврат.ТолькоПросмотр = НЕ ВернутьКлиенту;
	Элементы.Сделки.ТолькоПросмотр        = НЕ ЗакрытьЗадолженностиКонтрагента;
	
	Если НЕ ВернутьКлиенту Тогда
		СпособВозврата = 0;
	КонецЕсли;
	
	РассчитатьНеРаспределено();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВозможностьПродолжения()
	
	ВсеОК = (НеРаспределено >= 0);
	
	Элементы.ФормаРаспределитьДепозит.Доступность = ВсеОК;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНеРаспределено()
	
	ПолучитьСуммуСделок();
	
	Элементы.НеРаспределено.РасширеннаяПодсказка.Заголовок =
		СтрШаблон(НСтр("ru = 'Возврат клиенту (%1): %2
			|Перенос на другой договор аренды: %3
			|Закрытие задолженностей: %4'"),
		Элементы["СпособВозврата" + СпособВозврата].СписокВыбора.НайтиПоЗначению(СпособВозврата).Представление,
		Формат(?(ВернутьКлиенту,                  СуммаВозврата, 0), "ЧДЦ=2; ЧН="),
		Формат(?(ПеренестиНаДругойДоговорАренды,  СуммаПереноса, 0), "ЧДЦ=2; ЧН="),
		Формат(?(ЗакрытьЗадолженностиКонтрагента, СуммаСделок,   0), "ЧДЦ=2; ЧН="));
	
	НеРаспределено = ОстатокДепозита
		- ?(ЗакрытьЗадолженностиКонтрагента, СуммаСделок,   0)
		- ?(ПеренестиНаДругойДоговорАренды,  СуммаПереноса, 0)
		- ?(ВернутьКлиенту,                  СуммаВозврата, 0);
	
	ПроверитьВозможностьПродолжения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСуммуСделок()
	
	СуммаСделок = 0;
	Для Каждого Строка Из Сделки Цикл
		Если Строка.Пометка Тогда
			СуммаСделок = СуммаСделок + Строка.Сумма;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьРеквизитовСпособаВозврата()
	
	Элементы.КассаКомпании.Видимость   = (СпособВозврата = 1);
	Элементы.СчетКонтрагента.Видимость = (СпособВозврата = 2);
	Элементы.КассаККМ.Видимость        = (СпособВозврата = 3);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииСервер

&НаСервере
Процедура ЗаполнитьСписокВыбораДоговора()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДоговорАренды_Документ.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(АрендаСостоянияДоговоровСрезПоследних.Состояние, &ТекстПустоеСостояние) КАК Состояние,
		|	ПРЕДСТАВЛЕНИЕ(ДоговорАренды_Документ.Ссылка) КАК СсылкаПредставление
		|ИЗ
		|	Документ.ДоговорАренды КАК ДоговорАренды_Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АрендаСостоянияДоговоров.СрезПоследних КАК АрендаСостоянияДоговоровСрезПоследних
		|		ПО ДоговорАренды_Документ.Ссылка = АрендаСостоянияДоговоровСрезПоследних.ДоговорАренды
		|ГДЕ
		|	(ДоговорАренды_Документ.Контрагент = &Контрагент
		|			ИЛИ ДоговорАренды_Документ.Заказчик = &Контрагент)
		|	И НЕ АрендаСостоянияДоговоровСрезПоследних.Состояние В (&Состояния)";
	Состояния = Новый Массив;
	Состояния.Добавить(Перечисления.СостоянияДоговораАренды.Закрыт);
	Состояния.Добавить(Перечисления.СостоянияДоговораАренды.Расторгнут);
	Состояния.Добавить(Перечисления.СостоянияДоговораАренды.Удален);
	Запрос.УстановитьПараметр("Состояния",  Состояния);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ТекстПустоеСостояние", НСтр("ru = 'Состояние не указано'"));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Элементы.НовыйДоговор.СписокВыбора.Очистить();
	Пока Выборка.Следующий() Цикл
		НовыйЭлемент = Элементы.НовыйДоговор.СписокВыбора.Добавить();
		НовыйЭлемент.Значение      = Выборка.Ссылка;
		НовыйЭлемент.Представление = СтрШаблон(НСтр("ru = '%1, %2'"), Выборка.СсылкаПредставление, Выборка.Состояние);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСделок()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
		|	РасчетыСКонтрагентамиОстатки.ДокументРасчетов КАК Сделка,
		|	ЕСТЬNULL(РасчетыСКонтрагентамиОстатки.СуммаОстаток, 0) КАК СуммаДолга,
		|	РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов.ДатаНачала КАК ДатаНачалаДоговора
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(
		|			,
		|			Контрагент = &Контрагент
		|				И НЕ ДоговорВзаиморасчетов.ДляДепозитаАренды
		|				И ТипРасчета = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Оплата)) КАК РасчетыСКонтрагентамиОстатки
		|ГДЕ
		|	ЕСТЬNULL(РасчетыСКонтрагентамиОстатки.СуммаОстаток, 0) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВзаиморасчетыКомпанииОстатки.ДоговорВзаиморасчетов,
		|	ВзаиморасчетыКомпанииОстатки.Сделка,
		|	ЕСТЬNULL(ВзаиморасчетыКомпанииОстатки.СуммаОстаток, 0),
		|	ВзаиморасчетыКомпанииОстатки.ДоговорВзаиморасчетов.ДатаНачала
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыКомпании.Остатки(
		|			,
		|			Контрагент = &Контрагент
		|				И НЕ ДоговорВзаиморасчетов.ДляДепозитаАренды) КАК ВзаиморасчетыКомпанииОстатки
		|ГДЕ
		|	ЕСТЬNULL(ВзаиморасчетыКомпанииОстатки.СуммаОстаток, 0) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаНачалаДоговора УБЫВ";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	ДанныеЗапроса = Запрос.Выполнить().Выгрузить();
	ДанныеЗапроса.Сортировать("ДатаНачалаДоговора Убыв");
	
	Сделки.Загрузить(ДанныеЗапроса);
	
	ИтогоСделкиСуммаДолга = Сделки.Итог("СуммаДолга");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСуммуОстаткаДепозита()
	
	Если НЕ ДоговорАренды.ВидАренды.ДепозитИспользование Тогда
		Элементы.ГруппаДепозитШапка.Видимость = Ложь;
		Элементы.ГруппаДепозит.ТекущаяСтраница = Элементы.ГруппаДепозитНет;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(СУММА(РасчетыСКонтрагентамиОбороты.СуммаРасход), 0) КАК Внесено,
		|	ЕСТЬNULL(СУММА(РасчетыСКонтрагентамиОбороты.СуммаПриход), 0) КАК Потрачено
		|ПОМЕСТИТЬ ОстаткиДепозита
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентами.Обороты(
		|			,
		|			,
		|			Период,
		|			ДоговорВзаиморасчетов = &ДоговорДепозит
		|				И ДокументРасчетов = &ДоговорАренды) КАК РасчетыСКонтрагентамиОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВзаиморасчетыКомпанииОбороты.СуммаРасход), 0),
		|	ЕСТЬNULL(СУММА(ВзаиморасчетыКомпанииОбороты.СуммаПриход), 0)
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыКомпании.Обороты(
		|			,
		|			,
		|			Период,
		|			ДоговорВзаиморасчетов = &ДоговорДепозит
		|				И Сделка = &ДоговорАренды) КАК ВзаиморасчетыКомпанииОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ОстаткиДепозита.Внесено) КАК Внесено,
		|	СУММА(ОстаткиДепозита.Потрачено) КАК Потрачено
		|ИЗ
		|	ОстаткиДепозита КАК ОстаткиДепозита";
	Запрос.УстановитьПараметр("ДоговорДепозит", ДоговорАренды.ДоговорДепозита);
	Запрос.УстановитьПараметр("ДоговорАренды",  ДоговорАренды);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ОстатокДепозита = Выборка.Внесено - Выборка.Потрачено;
	
	Элементы.ОстатокДепозита.РасширеннаяПодсказка.Заголовок =
		СтрШаблон(НСтр("ru = 'Начальная сумма депозита: %1
			|Было внесено: %2
			|Было потрачено: %3'"),
		Формат(ДоговорАренды.СуммаДепозита, "ЧДЦ=2; ЧН="),
		Формат(Выборка.Внесено,             "ЧДЦ=2; ЧН="),
		Формат(Выборка.Потрачено,           "ЧДЦ=2; ЧН="));
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьУсловияВозможностиЗакрытияДоговора(ДанныеВидаАренды)
	
	Если НЕ ДанныеВидаАренды.ДепозитИспользование Тогда
		СообщениеПользователю = НСтр("ru = 'Договор аренды не использует депозит.
			|Использование помощника запрещено.'");
		Возврат;
	КонецЕсли;
	
	Если НЕ ДоговорАренды.Проведен Тогда
		СообщениеПользователю = НСтр("ru = 'Договор аренды не проведен.
			|Использование помощника запрещено.'");
		Возврат;
	КонецЕсли;
	
	Если ОстатокДепозита <= 0 Тогда
		СообщениеПользователю = НСтр("ru = 'На договоре депозита отсутствуют средства.
			|Использование помощника запрещено.'");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДоговорАрендыАвтомобили.Автомобиль.VIN КАК Автомобиль,
		|	ЕСТЬNULL(АрендаСостоянияАвтомобилейСрезПоследних.Состояние, НЕОПРЕДЕЛЕНО) КАК Состояние
		|ИЗ
		|	Документ.ДоговорАренды.Автомобили КАК ДоговорАрендыАвтомобили
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АрендаСостоянияАвтомобилей.СрезПоследних КАК АрендаСостоянияАвтомобилейСрезПоследних
		|		ПО ДоговорАрендыАвтомобили.Автомобиль = АрендаСостоянияАвтомобилейСрезПоследних.Автомобиль
		|			И ДоговорАрендыАвтомобили.Ссылка = АрендаСостоянияАвтомобилейСрезПоследних.ДоговорАренды
		|ГДЕ
		|	АрендаСостоянияАвтомобилейСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.АрендаСостоянияАвтомобилей.ПолученОтКлиента)
		|	И ДоговорАрендыАвтомобили.Ссылка.ВидАренды.ВыдачаПриемкаКонтролировать
		|	И ДоговорАрендыАвтомобили.Ссылка = &ДоговорАренды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РеализацияТоваров.Ссылка КАК Акт
		|ИЗ
		|	Документ.РеализацияТоваров КАК РеализацияТоваров
		|ГДЕ
		|	РеализацияТоваров.Проведен
		|	И РеализацияТоваров.ДокументОснование = &ДоговорАренды";
	Запрос.УстановитьПараметр("ДоговорАренды", ДоговорАренды);
	Выборка = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	ВыборкаАвтомобиль = Выборка[0].Выбрать();
	ВыборкаРеализации = Выборка[1].Выбрать();
	
	СообщенияПользователю = Новый Массив;
	
	Если ДанныеВидаАренды.ВыдачаПриемкаКонтролировать Тогда
		Пока ВыборкаАвтомобиль.Следующий() Цикл
			СообщенияПользователю.Добавить(
			СтрШаблон(НСтр("ru = '- вернуть из аренды автомобиль [VIN %1] (%2)'"),
				ВыборкаАвтомобиль.Автомобиль, ВыборкаАвтомобиль.Состояние));
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеВидаАренды.ТипАренды = Перечисления.ТипыРемонта.Платный Тогда
		Если НЕ ВыборкаРеализации.Количество() Тогда
			СообщенияПользователю.Добавить(
				НСтр("ru = '- провести акт об оказании услуг по текущему договору аренды'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СообщенияПользователю.Количество() Тогда
		СообщениеПользователю = СтрШаблон("%1%2%3.",
			НСтр("ru = 'Для закрытия договора аренды необходимо:'"),
			Символы.ПС,
			СтрСоединить(СообщенияПользователю, ";" + Символы.ПС));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РаспределитьДепозитНаСервере()
	
	Отказ = Ложь;
	
	Если ПеренестиНаДругойДоговорАренды Тогда
		ТЗ = Сделки.Выгрузить();
		ТЗ.Очистить();
		НоваяСтрока = ТЗ.Добавить();
		НоваяСтрока.ДоговорВзаиморасчетов = НовыйДоговор.ДоговорВзаиморасчетов;
		НоваяСтрока.Сделка                = НовыйДоговор;
		НоваяСтрока.Сумма                 = СуммаПереноса;
		НоваяСтрока.Пометка               = Истина;
		Отказ = Отказ ИЛИ СоздатьКорректировкуДолга(ТЗ, СуммаПереноса);
	КонецЕсли;
	
	Если ЗакрытьЗадолженностиКонтрагента Тогда
		Отказ = Отказ ИЛИ СоздатьКорректировкуДолга(Сделки, СуммаСделок);
	КонецЕсли;
	
	Если ВернутьКлиенту Тогда
		Отказ = Отказ ИЛИ СоздатьВозвратКлиенту();
	КонецЕсли;
	
	Если НЕ Отказ И НеРаспределено = 0 Тогда
		РегистрыСведений.АрендаСостоянияДоговоров.ЗаписатьСостояние(
			ДоговорАренды,
			Перечисления.СостоянияДоговораАренды.Закрыт);
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаСервере
Функция СоздатьВозвратКлиенту()
	
	Отказ = Ложь;
	
	Счет = ПолучитьСчетНаОплатуДепозита();
	Если НЕ ЗначениеЗаполнено(Счет) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если СпособВозврата = 1 Тогда
		
		// создаем РКО
		Документ = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
		Документ.Заполнить(Неопределено);
		
		Документ.ДокументОснование = Счет;
		
		Документ.Выдать      = "";
		Документ.ПоДокументу = "";
		Документ.Приложение  = "";
		Документ.Основание   = "";
		
		Документ.Контрагент = Контрагент;
		Документы.РасходныйКассовыйОрдер.КонтрагентПриИзменении(Документ);
		Документ.ДоговорВзаиморасчетов = ДоговорАренды.ДоговорДепозита;
		Документы.РасходныйКассовыйОрдер.ДоговорВзаиморасчетовПриИзменении(Документ);
		Документ.СтавкаНДС      = Справочники.СтавкиНДС.БезНДС;
		Документ.СуммаДокумента = СуммаВозврата;
		Документы.РасходныйКассовыйОрдер.СуммаДокументаПриИзменении(Документ);
		Документ.КассаКомпании = КассаКомпании;
		Документы.РасходныйКассовыйОрдер.КассаКомпанииПриИзменении(Документ);
		Документ.Сделка = ДоговорАренды;
		
		Документ.СтатьяДДС = Справочники.СтатьиДДС.ВозвратПокупателю;
		Документ.Основание = СтрШаблон(НСтр("ru = 'Возврат депозита по договору аренды %1 от %2'"),
			ДоговорАренды.Номер, Формат(ДоговорАренды.Дата, "ДЛФ=D"));
		
		Попытка
			Документ.Записать(РежимЗаписиДокумента.Запись);
			НоваяСтрока = СписокДокументов.Добавить();
			НоваяСтрока.Документ = Документ.Ссылка;
		Исключение
			Отказ = Истина;
			Элементы.ДекорацияНеОкНадпись.Заголовок = Элементы.ДекорацияНеОкНадпись.Заголовок
				+ СтрШаблон(НСтр("ru = 'Не удалось выполнить возврат средств по причине: %1.'"),
					ОписаниеОшибки());
		КонецПопытки;
		
	ИначеЕсли СпособВозврата = 2 Тогда
		
		// создаем платежное поручение
		Документ = Документы.ПлатежноеПоручение.СоздатьДокумент();
		Документ.Заполнить(Неопределено);
		
		Документ.ДокументОснование = Счет;
		
		Документ.Контрагент = Контрагент;
		Документы.ПлатежноеПоручение.КонтрагентПриИзменении(Документ);
		
		Документ.НазначениеПлатежа = "";
		
		Документ.ДоговорВзаиморасчетов = ДоговорАренды.ДоговорДепозита;
		Документы.ПлатежноеПоручение.ДоговорВзаиморасчетовПриИзменении(Документ);
		
		Документ.СчетКонтрагента = СчетКонтрагента;
		Документ.СтавкаНДС       = Справочники.СтавкиНДС.БезНДС;
		Документ.СуммаДокумента  = СуммаВозврата;
		Документы.ПлатежноеПоручение.СуммаДокументаПриИзменении(Документ);
		
		Документ.НазначениеПлатежа = СтрЗаменить(
			Документ.НазначениеПлатежа,
			НСтр("ru = 'Оплата по договору'"),
			НСтр("ru = 'Возврат по договору'"));
		
		Попытка
			Документ.Записать(РежимЗаписиДокумента.Запись);
			НоваяСтрока = СписокДокументов.Добавить();
			НоваяСтрока.Документ = Документ.Ссылка;
		Исключение
			Отказ = Истина;
			Элементы.ДекорацияНеОкНадпись.Заголовок = Элементы.ДекорацияНеОкНадпись.Заголовок
				+ СтрШаблон(НСтр("ru = 'Не удалось выполнить возврат средств по причине: %1.'"),
					ОписаниеОшибки());
		КонецПопытки;
		
	ИначеЕсли СпособВозврата = 3 Тогда
		
		// создаем возврат по чеку на оплату
		Документ = Документы.ЧекНаОплату.СоздатьДокумент();
		Документ.Заполнить(Счет);
		
		Документ.ДокументОснование = Счет;
		
		Документ.ХозОперация = Справочники.ХозОперации.ЧекНаОплатуВозврат;
		Документы.ЧекНаОплату.ХозОперацияПриИзменении(Документ);
		
		Для Каждого Строка Из Документ.Товары Цикл
			Строка.СуммаВсего = СуммаВозврата;
			Строка.СтавкаНДС  = Справочники.СтавкиНДС.БезНДС;
			Документы.ЧекНаОплату.ТоварыСуммаВсегоПриИзменении(Документ, Строка);
		КонецЦикла;
		
		Документ.СуммаДокумента = Документ.Товары.Итог("СуммаВсего");
		Документ.КассаККМ       = КассаККМ;
		
		Документ.Оплаты.Очистить();
		НоваяСтрока = Документ.Оплаты.Добавить();
		НоваяСтрока.ТипОплаты = Перечисления.ТипыОплатыККТ.Наличные;
		НоваяСтрока.Сумма     = СуммаВозврата;
		Документы.ЧекНаОплату.ОплатыСуммаПриИзменении(Документ, НоваяСтрока);
		Документы.ЧекНаОплату.ПроизвестиРаспределениеСуммыОплаты(Документ.СуммаДокумента, Документ.Товары);
		
		Попытка
			Документ.Записать(РежимЗаписиДокумента.Запись);
			НоваяСтрока = СписокДокументов.Добавить();
			НоваяСтрока.Документ = Документ.Ссылка;
		Исключение
			Отказ = Истина;
			Элементы.ДекорацияНеОкНадпись.Заголовок = Элементы.ДекорацияНеОкНадпись.Заголовок
				+ СтрШаблон(НСтр("ru = 'Не удалось выполнить возврат средств по причине: %1.'"),
					ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаСервере
Функция СоздатьКорректировкуДолга(ТаблицаСтрок, СуммаПереноса)
	
	Отказ = Ложь;
	
	Счет = ПолучитьСчетНаОплатуДепозита();
	Если НЕ ЗначениеЗаполнено(Счет) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Документ = Документы.КорректировкаДолга.СоздатьДокумент();
		Документ.Заполнить(Неопределено);
		
		Документ.ДокументОснование = Счет;
		
		Документ.Контрагент = Контрагент;
		Документы.КорректировкаДолга.КонтрагентПриИзменении(Документ);
		
		Документ.СтатьяДохода  = Справочники.СтатьиДоходовИРасходов.ЗачетДепозитаАренды;
		Документ.СтатьяРасхода = Справочники.СтатьиДоходовИРасходов.ЗачетДепозитаАренды;
		
		НоваяСтрока = Документ.Состав.Добавить();
		НоваяСтрока.ДоговорВзаиморасчетов = ДоговорАренды.ДоговорДепозита;
		Документы.КорректировкаДолга.СоставДоговорВзаиморасчетовПриИзменении(Документ, НоваяСтрока);
		НоваяСтрока.Сделка = ДоговорАренды;
		Документы.КорректировкаДолга.СоставСделкаПриИзменении(Документ, НоваяСтрока);
		Если НоваяСтрока.СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.ПустаяСсылка() Тогда
			НоваяСтрока.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.НеЗачитывать;
		КонецЕсли;
		НоваяСтрока.УвеличениеДолга    = СуммаПереноса;
		НоваяСтрока.УменьшениеДолга    = 0;
		
		Для Каждого Строка Из ТаблицаСтрок Цикл
			Если НЕ Строка.Пометка ИЛИ Строка.Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = Документ.Состав.Добавить();
			НоваяСтрока.ДоговорВзаиморасчетов = Строка.ДоговорВзаиморасчетов;
			Документы.КорректировкаДолга.СоставДоговорВзаиморасчетовПриИзменении(Документ, НоваяСтрока);
			НоваяСтрока.Сделка = Строка.Сделка;
			Документы.КорректировкаДолга.СоставСделкаПриИзменении(Документ, НоваяСтрока);
			Если НоваяСтрока.СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.ПустаяСсылка() Тогда
				НоваяСтрока.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.НеЗачитывать;
			КонецЕсли;
			НоваяСтрока.УвеличениеДолга    = 0;
			НоваяСтрока.УменьшениеДолга    = Строка.Сумма;
		КонецЦикла;
		
		Попытка
			Документ.Записать(РежимЗаписиДокумента.Проведение);
			НоваяСтрока = СписокДокументов.Добавить();
			НоваяСтрока.Документ = Документ.Ссылка;
		Исключение
			Отказ = Истина;
			Элементы.ДекорацияНеОкНадпись.Заголовок = Элементы.ДекорацияНеОкНадпись.Заголовок
				+ СтрШаблон(НСтр("ru = 'Не удалось выполнить перенос средств на другой договор аренды по причине: %1.'"),
					ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаСервере
Функция ПолучитьСчетНаОплатуДепозита(ВернутьЗначение = "СчетНаОплату")
	
	Счет = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СчетНаОплату.Ссылка КАК СчетНаОплату,
		|	МАКСИМУМ(ЧекНаОплату.КассаККМ) КАК КассаККМ,
		|	МАКСИМУМ(ЧекНаОплату.Ссылка) КАК ЧекНаОплату
		|ИЗ
		|	Документ.СчетНаОплату КАК СчетНаОплату
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекНаОплату КАК ЧекНаОплату
		|		ПО СчетНаОплату.Ссылка = ЧекНаОплату.ДокументОснование
		|ГДЕ
		|	СчетНаОплату.ДокументОснование = &ДоговорАренды
		|	И НЕ СчетНаОплату.ПометкаУдаления
		|	И СчетНаОплату.ДоговорВзаиморасчетов.ДляДепозитаАренды
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетНаОплату.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетНаОплату.Ссылка.Дата";
	Запрос.УстановитьПараметр("ДоговорАренды", ДоговорАренды);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка[ВернутьЗначение];
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти
