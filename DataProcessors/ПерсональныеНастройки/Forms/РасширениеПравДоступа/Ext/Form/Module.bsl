
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Получаем пользователя из параметров формы
	ПользовательПрофиль = Параметры.ПользовательПрофиль;
	
	// Получаем настройку из параметров формы
	Если Параметры.Свойство("ПравоНастройкаИмяПредопределенныхДанных") Тогда
		
		ПравоНастройкаИмяПредопределенныхДанных = Параметры.ПравоНастройкаИмяПредопределенныхДанных;
		ПравоНастройка = ПраваИНастройкиПользователяПовтИсп.ПолучитьПараметрыПВХПравИНастроек(ПравоНастройкаИмяПредопределенныхДанных, "ПраваИНастройки").Ссылка;
		
		ПравоНастройкаНаименование              = ПравоНастройка.Наименование;
		ПравоНастройкаЗначениеПоУмолчанию       = ПравоНастройка.ЗначениеПоУмолчанию;
		ПравоНастройкаТипЗначения               = ПравоНастройка.ТипЗначения;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПользовательПрофиль) ИЛИ НЕ ЗначениеЗаполнено(ПравоНастройкаНаименование) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Заголовок         = Строка(ПравоНастройкаНаименование);
	ЭтоБулевоЗначение = ПравоНастройкаТипЗначения = Новый ОписаниеТипов("Булево");
	
	ТаблицаРасширенияПравДоступа.Очистить();
	
	Если ПолучитьЗначениеПараметраСтруктуры(Параметры, "ПравоДляСправочников", Ложь) Тогда
		СписокОбъектов = Метаданные.Справочники;
	Иначе
		СписокОбъектов = Метаданные.Документы;
	КонецЕсли;
	
	// Заполняем список объектов для расширения прав доступа
	СписокВыбораОбъекта = Новый СписокЗначений;
	Для Каждого ЭлементМетаданных Из СписокОбъектов Цикл
	
		Если НЕ ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(ЭлементМетаданных) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРасширенияПравДоступа.Добавить();
		НоваяСтрока.СинонимОбъекта            = ЭлементМетаданных.Синоним;
		НоваяСтрока.Настройка                 = ПравоНастройкаНаименование;
		НоваяСтрока.Объект                    = ЭлементМетаданных.Имя;
		НоваяСтрока.ИмяПредопределенныхДанных = ПравоНастройкаИмяПредопределенныхДанных;
		
		МассивТипов = Новый Массив(); 
		МассивТипов.Добавить(ТипЗнч(ПравоНастройкаЗначениеПоУмолчанию)); 
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов); 
		Элементы.ТаблицаРасширенияПравДоступаЗначение.ОграничениеТипа = ОписаниеТипов;
		НоваяСтрока.ЗначениеБулево      = 2;
		НоваяСтрока.ЗначениеПоУмолчанию = ПравоНастройкаЗначениеПоУмолчанию;
		
	КонецЦикла;
	
	// Получаем ранее настроенные расширения прав из параметров формы
	Если Параметры.Свойство("РасширенияТекущегоПрава") Тогда
		
		МассивРасширенийТекущегоПрава = Параметры.РасширенияТекущегоПрава;
		
		Если ТипЗнч(МассивРасширенийТекущегоПрава) = Тип("Массив") Тогда
			Для Каждого ТекСтрока Из МассивРасширенийТекущегоПрава Цикл
				МассивРасширений = ТаблицаРасширенияПравДоступа.НайтиСтроки(Новый Структура("Объект", ТекСтрока.Объект));
				Если МассивРасширений.Количество() > 0 Тогда
					ЗаполнитьЗначенияСвойств(МассивРасширений[0], ТекСтрока);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	УправлениеДиалогомКлиент.ПроверитьМодифицированностьДанныхПриЗакрытии(ЭтотОбъект, Отказ,
							Новый ОписаниеОповещения("Подключаемый_ПередЗакрытием", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаРасширенияПравДоступа

&НаКлиенте
Процедура ТаблицаРасширенияПравДоступаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаРасширенияПравДоступа.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.Изменено = Истина;
		Если НЕ ЭтоБулевоЗначение Тогда
			ТекущиеДанные.ЗначениеБулево = 0;
		КонецЕсли;
		Модифицированность     = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРасширенияПравДоступаЗначениеБулевоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаРасширенияПравДоступа.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда    
		ЗначениеБулевоЛожь = ?(ТекущиеДанные.ЗначениеБулево = 0, Ложь, Неопределено);
		ТекущиеДанные.Значение = ?(ТекущиеДанные.ЗначениеБулево = 1, Истина, ЗначениеБулевоЛожь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРасширенияПравДоступаСинонимОбъектаПриИзменении(Элемент)
	
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущиеДанные.Объект         = ТекущиеДанные.СинонимОбъекта;
		ТекущиеДанные.СинонимОбъекта = СписокВыбораОбъекта.НайтиПоЗначению(ТекущиеДанные.СинонимОбъекта).Представление;
		
		СтрокиСВыбраннымОбъектом = ТаблицаРасширенияПравДоступа.НайтиСтроки(Новый Структура("Объект", ТекущиеДанные.Объект));
		
		// Проверяем уникальность введенного объекта
		Если СтрокиСВыбраннымОбъектом.Количество() > 1 Тогда
			
			ТекущиеДанные.Объект         = "";
			ТекущиеДанные.СинонимОбъекта = "";
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выбранный объект уже есть в таблице.'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда = Неопределено, Отказ = Ложь)
	
	// Проверяем наличие строк с незаполненным объектом.
	СтрокиСПустымОбъектом = ТаблицаРасширенияПравДоступа.НайтиСтроки(Новый Структура("Объект", ""));
	Если СтрокиСПустымОбъектом.Количество() = 0 Тогда
		
		ПараметрыЗакрытия = Новый Структура();
		
		// Все объекты заполнены, при необходимости записываем изменения в регистр.
		Если Модифицированность Тогда
			Модифицированность = Ложь;
			ТаблицаРасширенияПравДоступа.Сортировать("Объект");
			
			// Получаем перечень объектов для обратной подстановки в дерево настроек.
			ПереченьОбъектов = "";
			Для Каждого СтрокаРасширенияПравДоступа Из ТаблицаРасширенияПравДоступа Цикл
				Если ЭтоБулевоЗначение И НЕ СтрокаРасширенияПравДоступа.ЗначениеБулево = 2 Тогда
					ПереченьОбъектов = ПереченьОбъектов + ?(ПереченьОбъектов = "", "", ", ") + СтрокаРасширенияПравДоступа.СинонимОбъекта;
				ИначеЕсли ЗначениеЗаполнено(СтрокаРасширенияПравДоступа.Значение) Тогда
					ПереченьОбъектов = ПереченьОбъектов + ?(ПереченьОбъектов = "", "", ", ") + СтрокаРасширенияПравДоступа.СинонимОбъекта;
				КонецЕсли;
			КонецЦикла;
			
			ЗначениеЯчейкиДереваНастроек = 
								?(ЗначениеЗаполнено(ПереченьОбъектов), ПереченьОбъектов, НСтр("ru = '<настроить...>'"));
			
			ПараметрыЗакрытия.Вставить("ЗначениеЯчейкиДереваНастроек", ЗначениеЯчейкиДереваНастроек);
			ПараметрыЗакрытия.Вставить("ИзмененныеРасширенияПравДоступа", ТаблицаРасширенияПравДоступа);
			ПараметрыЗакрытия.Вставить("ПравоНастройкаНаименование", ПравоНастройкаНаименование);
		КонецЕсли;
		
		// Закрываем форму и возвращаем параметры
		Закрыть(ПараметрыЗакрытия);
	Иначе
		// Найдены пустые объекты, сообщаем пользователю и взводим отказ.
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Не заполнен объект в строке %1'"), 
								ТаблицаРасширенияПравДоступа.Индекс(СтрокиСПустымОбъектом[0]) + 1));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Цвет текста
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаРасширенияПравДоступа");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаРасширенияПравДоступа.Изменено");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	
	// Видимость
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаРасширенияПравДоступаЗначениеБулево");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЭтоБулевоЗначение");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Видимость
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаРасширенияПравДоступаЗначение");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЭтоБулевоЗначение");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

// Обработчик события возникающего при выполнении оповещения данной формы о прекращении работы подчиненной.
//
// Параметры:
//  РезультатОповещения     - Произвольный - Результат выполнения операции в подчиненной форме.
//  ДополнительныеПараметры - Структура - Содержит процедуру в которую будет передан ответ на вопрос и формы из которой
//                                        вызвано оповещение.
//
&НаКлиенте
Процедура Подключаемый_ПередЗакрытием(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	// Сохраняем настройки.
	Применить();
	
КонецПроцедуры // Подключаемый_ПередЗакрытием()

#КонецОбласти

