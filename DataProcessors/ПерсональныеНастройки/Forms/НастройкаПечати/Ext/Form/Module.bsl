///////////////////////////////////////////////////////////////////////////////
// Модуль формы настройки печати обработки "ПерсональныеНастройки"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	МассивТипов = Новый Массив;
	Если Параметры.Свойство("Пользователь") Тогда
		МассивТипов.Очистить();
		МассивТипов.Добавить(Тип("СправочникСсылка.Пользователи"));
		ПереданныйПараметр = Параметры.Пользователь;
		РежимПечатиПользователей = Истина;
		ВыбранноеЗначение = 0;
	КонецЕсли;
	Если Параметры.Свойство("ГруппаПравИНастроек") Тогда
		МассивТипов.Очистить();
		МассивТипов.Добавить(Тип("СправочникСсылка.ГруппыПравИНастроек"));
		ПереданныйПараметр = Параметры.ГруппаПравИНастроек;
		РежимПечатиПользователей = Ложь;
		ВыбранноеЗначение = 1;
	КонецЕсли;
	
	Типы = Новый ОписаниеТипов(МассивТипов);
	Элементы.СписокПользователиГруппыПравИНастроекПользователиГруппы.ОграничениеТипа = Типы;
	Строка = СписокПользователиГруппыПравИНастроек.Добавить();
	Строка.ПользователиГруппы = ПереданныйПараметр;
	ОтображатьПрава = Истина;
	ОтображатьНастройки = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект,"СписокПользователиГруппыПравИНастроек");
	ИдФормыВладельца = ВладелецФормы.УникальныйИдентификатор;
	
	УправлениеДиалогом();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокПользователиГруппыПравИНастроек

&НаКлиенте
Процедура СписокПользователиГруппыПравИНастроекОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение.Количество() > 0 Тогда
		Для Каждого Элемент Из ВыбранноеЗначение Цикл
			СтруктураПоиска = Новый Структура("ПользователиГруппы",Элемент);
			Если СписокПользователиГруппыПравИНастроек.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда 
				Строка = СписокПользователиГруппыПравИНастроек.Добавить();
				Строка.ПользователиГруппы = Элемент;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПользователиГруппыПравИНастроекПриИзменении(Элемент)
	Если СписокПользователиГруппыПравИНастроек.Количество() > 0 Тогда
		Строка = Элементы.СписокПользователиСписокПользователиГруппыПравИНастроек.ТекущиеДанные;
		Поиск = Новый Структура("ПользователиГруппы", Строка.ПользователиГруппы);
		Если СписокПользователиГруппыПравИНастроек.НайтиСтроки(Поиск).Количество() > 1 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "" + Строка.ПользователиГруппы + "" + " " + НСтр("ru = 'уже есть в списке выбора'");
			Сообщение.Сообщить();
			СписокПользователиГруппыПравИНастроек.Удалить(Строка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбранноеЗначениеПриИзменении(Элемент)
	Если ВыбранноеЗначение = 0 Тогда
		СписокПользователиГруппыПравИНастроек.Очистить();
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Пользователи"));
		Типы = Новый ОписаниеТипов(МассивТипов);
		Элементы.СписокПользователиГруппыПравИНастроекПользователиГруппы.ОграничениеТипа = Типы;
	Иначе
		СписокПользователиГруппыПравИНастроек.Очистить();
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.ГруппыПравИНастроек"));
		Типы = Новый ОписаниеТипов(МассивТипов);
		Элементы.СписокПользователиГруппыПравИНастроекПользователиГруппы.ОграничениеТипа = Типы;
	КонецЕсли;
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура ПодборПользователей(Команда)
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыПодбора.Вставить("РежимВыбора", Истина);
	ПараметрыПодбора.Вставить("МножественныйВыбор", Истина);
	
	Если РежимПечатиПользователей Тогда
		ОткрытьФорму(
			"Справочник.Пользователи.ФормаСписка",
			ПараметрыПодбора,
			Элементы.СписокПользователиСписокПользователиГруппыПравИНастроек,
			, , , ,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);
	Иначе
		ОткрытьФорму(
			"Справочник.ГруппыПравИНастроек.ФормаВыбора",
			ПараметрыПодбора,
			Элементы.СписокПользователиСписокПользователиГруппыПравИНастроек,
			, , , ,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)

	МассивПользователиГруппыПравИНастроек = Новый Массив;
	
	Для Каждого Строка Из СписокПользователиГруппыПравИНастроек Цикл
		Если НЕ ЗначениеЗаполнено(Строка.ПользователиГруппы) Тогда
			МассивПользователиГруппыПравИНастроек.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из МассивПользователиГруппыПравИНастроек Цикл
		СписокПользователиГруппыПравИНастроек.Удалить(СтрокаТЧ);
	КонецЦикла;
	
	Если ПроверкаЗаполненныхДанных() Тогда
		
		// Установим параметры для печати
		МенеджерПечати = "Обработка.ПерсональныеНастройки";
		
		ИменаМакетов = Новый Массив;
		
		// Если необходимо напечатать персональные права и настройки добавим макет
		Если ОтображатьПрава Или ОтображатьНастройки Тогда 
			ИменаМакетов.Добавить("Макет");
		КонецЕсли;
		
		// Если необходимо напечатать перечень документов добавим макет.
		Если ПараметрыУтвержденияДокументов Тогда
			ИменаМакетов.Добавить("МакетСписокДокументов");
		КонецЕсли;
		
		// Если необходимо напечатать список пользователей добавим макет.
		Если УчастникиГруппПравИНастроек Тогда
			ИменаМакетов.Добавить("МакетУчастники");
		КонецЕсли;
		
		ПараметрКоманды = Новый Массив;
		Настройки = Новый Структура;
		
		ПараметрКоманды.Добавить(СписокПользователиГруппыПравИНастроек[0].ПользователиГруппы);
		Настройки.Вставить("ДанныеДляПечати", СписокПользователиГруппыПравИНастроек);
		
		Настройки.Вставить("РежимПечатиПользователей",РежимПечатиПользователей);
		Настройки.Вставить("ОтображатьНастройки", ОтображатьНастройки);
		Настройки.Вставить("ОтображатьПрава", ОтображатьПрава);
		Настройки.Вставить("ПоказыватьЗначениеПоУмолчанию", ПоказыватьЗначениеПоУмолчанию);
		Настройки.Вставить("ВыводитьОписаниеПрава", ВыводитьОписаниеПрава);
		Настройки.Вставить("ВременнаяТаблицаВсеВидыДоступа", ВременнаяТаблицаВидовДоступа);
		Если ОтображатьНастройки И ОтображатьПрава Тогда
			ТекстЗаголовка = НСтр("ru = 'Печать прав и настроек'");
		ИначеЕсли ОтображатьНастройки И НЕ ОтображатьПрава Тогда 
			ТекстЗаголовка = НСтр("ru = 'Печать настроек'");
		Иначе
			ТекстЗаголовка = НСтр("ru = 'Печать прав'");
		КонецЕсли;
		Настройки.Вставить("Заголовок", ТекстЗаголовка);
		Настройки.Вставить("ВычислятьСумму", Ложь);
		
		ПараметрыПечати = Новый Структура("СтруктураНастроек", Настройки);
		
		// Выведем на печатную форму
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(МенеджерПечати, ИменаМакетов, ПараметрКоманды, Неопределено, ПараметрыПечати);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьПраваПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьНастройкиПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверкаЗаполненныхДанных()
	Если НЕ ОтображатьПрава
		И НЕ ОтображатьНастройки
		И НЕ ПараметрыУтвержденияДокументов
		И НЕ УчастникиГруппПравИНастроек Тогда
		Если ВыбранноеЗначение = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Должен быть включен хотя бы один флажок: ""Формировать права"", ""Формировать настройки"".'")
			);
			Возврат Ложь;
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Должен быть включен хотя бы один флажок: ""Формировать права"", ""Формировать настройки""
				|, ""Профили групп доступа"", ""Участники групп доступа"", ""Параметры утверждения документов"".'")
			);
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Если ВыбранноеЗначение = 0 Тогда
		Если СписокПользователиГруппыПравИНастроек.Количество() = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не выбрано ни одного пользователя'"),
				,
				"СписокПользователей"
			);
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Если СписокПользователиГруппыПравИНастроек.Количество() = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не выбрано ни одной группы доступа'"),
				,
				"СписокГруппПравИНастроек"
			);
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Возврат Истина;
КонецФункции

// Управление видимостью и доступностью элементов формы
//
//
&НаКлиенте
Процедура УправлениеДиалогом()
	Если ВыбранноеЗначение = 0 Тогда
		Элементы.ПараметрыУтвержденияДокументов.Доступность = Ложь;
		Элементы.УчастникиГруппПравИНастроек.Доступность = Ложь;
		ПараметрыУтвержденияДокументов = Ложь;
		УчастникиГруппПравИНастроек = Ложь;
		РежимПечатиПользователей = Истина;
	Иначе
		Элементы.ПараметрыУтвержденияДокументов.Доступность = Истина;
		Элементы.УчастникиГруппПравИНастроек.Доступность = Истина;
		РежимПечатиПользователей = Ложь;
	КонецЕсли;
	Если НЕ ОтображатьПрава И НЕ ОтображатьНастройки Тогда
		ВыводитьОписаниеПрава = Ложь;
		ПоказыватьЗначениеПоУмолчанию = Ложь;
		Элементы.ВыводитьОписаниеПрава.Доступность = Ложь;
		Элементы.ПоказыватьЗначениеПоУмолчанию.Доступность = Ложь;
	Иначе
		Элементы.ВыводитьОписаниеПрава.Доступность = Истина;
		Элементы.ПоказыватьЗначениеПоУмолчанию.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


