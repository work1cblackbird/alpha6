#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
	// Заполним только теми полями, что доступны для шаблона
	Реквизиты.Очистить();
	
	НовыйРеквизит = Реквизиты.Добавить();
	НовыйРеквизит.Имя = "Контрагент";
	НовыйРеквизит.Представление = НСтр("ru = 'Контрагент'");
	НовыйРеквизит.Тип = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	
	НовыйРеквизит = Реквизиты.Добавить();
	НовыйРеквизит.Имя = "БонуснаяПрограмма";
	НовыйРеквизит.Представление = НСтр("ru = 'Бонусная программа'");
	НовыйРеквизит.Тип = Новый ОписаниеТипов("СправочникСсылка.БонусныеПрограммы");
	
	НовыйРеквизит = Реквизиты.Добавить();
	НовыйРеквизит.Имя = "БонуснаяКарта";
	НовыйРеквизит.Представление = НСтр("ru = 'Бонусная карта'");
	НовыйРеквизит.Тип = Новый ОписаниеТипов("СправочникСсылка.Карточки");
	
	НовыйРеквизит = Реквизиты.Добавить();
	НовыйРеквизит.Имя = "Количество";
	НовыйРеквизит.Представление = НСтр("ru = 'Количество'");
	НовыйРеквизит.Тип = Новый ОписаниеТипов("Число");
	
	НовыйРеквизит = Реквизиты.Добавить();
	НовыйРеквизит.Имя = "ДатаСписания";
	НовыйРеквизит.Представление = НСтр("ru = 'Дата списания'");
	НовыйРеквизит.Тип = Новый ОписаниеТипов("Дата");
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
	СтрокаДанных = ПолучитьЗначениеПараметраСтруктуры(Сообщение.ДополнительныеПараметры, "СтрокаДанныхРассылки");
	
	Если СтрокаДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Контрагент = Сообщение.ЗначенияРеквизитов.Получить("Контрагент");
	Если Контрагент <> Неопределено Тогда
		СформироватьСтруктуруЗначений(Контрагент, СтрокаДанных.Контрагент);
	КонецЕсли;
	
	БонуснаяПрограмма = Сообщение.ЗначенияРеквизитов.Получить("БонуснаяПрограмма");
	Если БонуснаяПрограмма <> Неопределено Тогда
		СформироватьСтруктуруЗначений(БонуснаяПрограмма, СтрокаДанных.БонуснаяПрограмма);
	КонецЕсли;
	
	БонуснаяКарта = Сообщение.ЗначенияРеквизитов.Получить("БонуснаяКарта");
	Если БонуснаяКарта <> Неопределено Тогда
		СформироватьСтруктуруЗначений(БонуснаяКарта, СтрокаДанных.БонуснаяКарта);
	КонецЕсли;
	
	Количество = Сообщение.ЗначенияРеквизитов.Получить("Количество");
	Если Количество <> Неопределено Тогда
		Сообщение.ЗначенияРеквизитов.Вставить("Количество", Строка(СтрокаДанных.Количество));
	КонецЕсли;
	
	ДатаСписания = Сообщение.ЗначенияРеквизитов.Получить("ДатаСписания");
	Если ДатаСписания <> Неопределено Тогда
		Сообщение.ЗначенияРеквизитов.Вставить("ДатаСписания", Формат(СтрокаДанных.ДатаСписания, "ДФ='dd.MM.yyyy'"));
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - Произвольный - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка, Структура - ссылка на объект являющийся источником данных, либо структура,
//                                              если шаблон содержит произвольные параметры:
//    * Предмет               - ЛюбаяСсылка - ссылка на объект являющийся источником данных
//    * ПроизвольныеПараметры - Соответствие - заполненный список произвольных параметров.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * Контакт         - Произвольный - контакт, которому принадлежит адрес электронной почты.
//  ПредметСообщения - ЛюбаяСсылка, Структура - ссылка на объект являющийся источником данных, либо структура,
//                                              если шаблон содержит произвольные параметры:
//    * Предмет               - ЛюбаяСсылка - ссылка на объект являющийся источником данных
//    * ПроизвольныеПараметры - Соответствие - заполненный список произвольных параметров.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ШаблоныСообщений

Процедура СформироватьСтруктуруЗначений(Параметр, Данные)
	
	СписокРеквизитов = Новый Массив;
	
	Для Каждого ТекущийПараметр Из Параметр Цикл
		СписокРеквизитов.Добавить(ТекущийПараметр.Ключ);
	КонецЦикла;
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Данные, 
		СтрСоединить(СписокРеквизитов, ","));
	Для Каждого Реквизит Из ЗначенияРеквизитов Цикл
		Параметр[Реквизит.Ключ] = Реквизит.Значение;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли