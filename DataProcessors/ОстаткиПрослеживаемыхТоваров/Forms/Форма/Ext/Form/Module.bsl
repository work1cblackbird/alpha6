
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.НаДату = Дата("20210701");
	Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	ОбновитьТаблицуИнвентаризации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура НаДатуПриИзмененииНаСервере()
	
	ОбновитьТаблицуИнвентаризации();
	
КонецПроцедуры

&НаКлиенте
Процедура НаДатуПриИзменении(Элемент)
	
	НаДатуПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОбновитьТаблицуИнвентаризации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаИнвентаризации

&НаКлиенте
Процедура ТаблицаИнвентаризацииИнвентаризацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаИнвентаризации.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Массив = Новый Массив();
	
	Если ТекущиеДанные.ЭтоТовар Тогда
		Массив.Добавить(Тип("ДокументСсылка.Инвентаризация"));
	Иначе
		Массив.Добавить(Тип("ДокументСсылка.ИнвентаризацияАвтомобилей"));
	КонецЕсли;
	ТипДокумента = Новый ОписаниеТипов(Массив);
	Элементы.ТаблицаИнвентаризацииИнвентаризация.ОграничениеТипа = ТипДокумента;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьДокументыИнвентаризации(Команда)
	
	ОбновитьТаблицуИнвентаризации();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьИнвентаризации(Команда)
	
	ПараметрыОперации = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОперации.ТекстСообщения = НСтр("ru='Формируются документы инвентаризации'");
	ПараметрыОперации.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОперации.ВыводитьОкноОжидания = Истина;
	ПараметрыОперации.ВыводитьСообщения = Истина;
	
	ДлительнаяОперация = СформироватьИнвентаризацииНаСервере();
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения("ЗавершениеСформироватьИнвентаризации", ЭтотОбъект),
		ПараметрыОперации
	);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьУведомления(Команда)
	
	ПараметрыОперации = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОперации.ТекстСообщения = НСтр("ru='Формируются документы уведомления об остатках прослеживаемых товаров'");
	ПараметрыОперации.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОперации.ВыводитьОкноОжидания = Истина;
	ПараметрыОперации.ВыводитьСообщения = Истина;
	
	ДлительнаяОперация = СформироватьУведомленияНаСервере();
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения("ЗавершениеСформироватьУведомления", ЭтотОбъект),
		ПараметрыОперации
	);
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьТаблицуИнвентаризации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СкладыКомпании.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СписокСкладов
	|ИЗ
	|	Справочник.СкладыКомпании КАК СкладыКомпании
	|ГДЕ
	|	СкладыКомпании.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГТДПартийТоваровКомпанииОстатки.СкладКомпании КАК СкладКомпании,
	|	СУММА(ГТДПартийТоваровКомпанииОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиПоСкладамРНПТ
	|ИЗ
	|	РегистрНакопления.ГТДПартийТоваровКомпании.Остатки(
	|			&НаДату,
	|			ГТД.РНПТ
	|				И Номенклатура.Прослеживаемый
	|				И СкладКомпании В
	|					(ВЫБРАТЬ
	|						СписокСкладов.Ссылка КАК Ссылка
	|					ИЗ
	|						СписокСкладов КАК СписокСкладов)) КАК ГТДПартийТоваровКомпанииОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ГТДПартийТоваровКомпанииОстатки.СкладКомпании
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровКомпанииОстатки.СкладКомпании КАК СкладКомпании,
	|	СУММА(ПартииТоваровКомпанииОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиПоПартиям
	|ИЗ
	|	РегистрНакопления.ПартииТоваровКомпании.Остатки(
	|			&НаДату,
	|			Номенклатура.Прослеживаемый
	|				И СкладКомпании В
	|					(ВЫБРАТЬ
	|						СписокСкладов.Ссылка КАК Ссылка
	|					ИЗ
	|						СписокСкладов КАК СписокСкладов)) КАК ПартииТоваровКомпанииОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровКомпанииОстатки.СкладКомпании
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиПоПартиям.СкладКомпании КАК СкладКомпании
	|ПОМЕСТИТЬ СкладыСПрослеживаемымиТоварами
	|ИЗ
	|	ОстаткиПоПартиям КАК ОстаткиПоПартиям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСкладамРНПТ КАК ОстаткиПоСкладамРНПТ
	|		ПО ОстаткиПоПартиям.СкладКомпании = ОстаткиПоСкладамРНПТ.СкладКомпании
	|ГДЕ
	|	ОстаткиПоПартиям.КоличествоОстаток <> ЕСТЬNULL(ОстаткиПоСкладамРНПТ.КоличествоОстаток, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Инвентаризация.Ссылка КАК Ссылка,
	|	Инвентаризация.СкладКомпании КАК СкладКомпании
	|ПОМЕСТИТЬ ИнвентаризацииТоваровНаДату
	|ИЗ
	|	СкладыСПрослеживаемымиТоварами КАК СкладыСПрослеживаемымиТоварами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Инвентаризация КАК Инвентаризация
	|		ПО (НАЧАЛОПЕРИОДА(Инвентаризация.Дата, ДЕНЬ) = &НаДату)
	|			И (Инвентаризация.Проведен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИнвентаризацииТоваровНаДату.Ссылка КАК Ссылка,
	|	ИнвентаризацииТоваровНаДату.СкладКомпании КАК СкладКомпании
	|ПОМЕСТИТЬ ИнвентаризацииСПрослеживаемымТоваром
	|ИЗ
	|	ИнвентаризацииТоваровНаДату КАК ИнвентаризацииТоваровНаДату
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Инвентаризация.Товары КАК ИнвентаризацияТовары
	|		ПО ИнвентаризацииТоваровНаДату.Ссылка = ИнвентаризацияТовары.Ссылка
	|			И (ИнвентаризацияТовары.Номенклатура.Прослеживаемый)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОстаткиАвтомобилейОстатки.СкладКомпании КАК СкладКомпании
	|ПОМЕСТИТЬ СкладыАвтомобиля
	|ИЗ
	|	РегистрНакопления.ОстаткиАвтомобилей.Остатки(
	|			&НаДату,
	|			Автомобиль.Прослеживаемый
	|				И (НЕ Автомобиль.ГТД.РНПТ ИЛИ Автомобиль.ГТД = ЗНАЧЕНИЕ(Справочник.ГТД.ПустаяСсылка))
	|				И СкладКомпании В
	|					(ВЫБРАТЬ
	|						СписокСкладов.Ссылка КАК Ссылка
	|					ИЗ
	|						СписокСкладов КАК СписокСкладов)) КАК ОстаткиАвтомобилейОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияАвтомобилей.Ссылка КАК Ссылка,
	|	ИнвентаризацияАвтомобилей.СкладКомпании КАК СкладКомпании
	|ПОМЕСТИТЬ ИнвентаризацииАвтомобилей
	|ИЗ
	|	СкладыАвтомобиля КАК СкладыАвтомобиля
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияАвтомобилей КАК ИнвентаризацияАвтомобилей
	|		ПО СкладыАвтомобиля.СкладКомпании = ИнвентаризацияАвтомобилей.СкладКомпании
	|			И (ИнвентаризацияАвтомобилей.Дата = &НаДату)
	|			И (ИнвентаризацияАвтомобилей.Проведен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИнвентаризацииАвтомобилей.Ссылка КАК Ссылка,
	|	ИнвентаризацииАвтомобилей.СкладКомпании КАК СкладКомпании
	|ПОМЕСТИТЬ СписокИнвентаризацийПрослеживаемымиАтомобилями
	|ИЗ
	|	ИнвентаризацииАвтомобилей КАК ИнвентаризацииАвтомобилей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияАвтомобилей.Автомобили КАК ИнвентаризацияАвтомобилейАвтомобили
	|		ПО ИнвентаризацииАвтомобилей.Ссылка = ИнвентаризацияАвтомобилейАвтомобили.Ссылка
	|			И (ИнвентаризацияАвтомобилейАвтомобили.Автомобиль.Прослеживаемый)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СкладыСПрослеживаемымиТоварами.СкладКомпании КАК СкладКомпании,
	|	ИнвентаризацииСПрослеживаемымТоваром.Ссылка КАК Инвентаризация,
	|	ИСТИНА КАК ЭтоТовар
	|ИЗ
	|	СкладыСПрослеживаемымиТоварами КАК СкладыСПрослеживаемымиТоварами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИнвентаризацииСПрослеживаемымТоваром КАК ИнвентаризацииСПрослеживаемымТоваром
	|		ПО СкладыСПрослеживаемымиТоварами.СкладКомпании = ИнвентаризацииСПрослеживаемымТоваром.СкладКомпании
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СкладыАвтомобиля.СкладКомпании,
	|	СписокИнвентаризацийПрослеживаемымиАтомобилями.Ссылка,
	|	ЛОЖЬ
	|ИЗ
	|	СкладыАвтомобиля КАК СкладыАвтомобиля
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокИнвентаризацийПрослеживаемымиАтомобилями КАК СписокИнвентаризацийПрослеживаемымиАтомобилями
	|		ПО СкладыАвтомобиля.СкладКомпании = СписокИнвентаризацийПрослеживаемымиАтомобилями.СкладКомпании";
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("НаДату", Объект.НаДату);
	
	ТаблицаИнвентаризации.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		// Проверим доступность автосалона
		Если НЕ ЗащищенныеФункцииАльфаАвтоСервер.ПодсистемаДоступна("ЗащитаАвтосалон", Ложь) И НЕ Выборка.ЭтоТовар Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаИнвентаризации.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.ВидТовара = ?(НоваяСтрока.ЭтоТовар, "Товары", "Автомобили");
		
	КонецЦикла;
	
	ТаблицаИнвентаризации.Сортировать("ЭтоТовар Убыв");
	
КонецПроцедуры

#Область ФормированиеИнвентаризацийВФоне

&НаСервере
Функция СформироватьИнвентаризацииНаСервере()
	
	// Остановим выполнение если задание уже выполняется
	ДлительныеОперации.ОтменитьВыполнениеЗадания(УникальныйИдентификатор);
	
	// Подготавливаем параметры длительной операции
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("ТаблицаИнвентаризации", РеквизитФормыВЗначение("ТаблицаИнвентаризации"));
	ПараметрыОперации.Вставить("НаДату", Объект.НаДату);
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ОстаткиПрослеживаемыхТоваров.СформироватьИнвентаризации",
		ПараметрыОперации,
		ПараметрыВыполнения
	);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ЗавершениеСформироватьИнвентаризации(ФоновоеЗадание, ДополнительныеПараметры) Экспорт
	
	Если ФоновоеЗадание.Статус = "Выполнено" Тогда
		ЗаполнитьТаблицуИнвентаризации(ФоновоеЗадание.АдресРезультата);
	ИначеЕсли ФоновоеЗадание.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ФоновоеЗадание.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуИнвентаризации(АдресРезультата)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Результат.ТекстОшибки) Тогда
		ОбщегоНазначения.СообщитьПользователю(Результат.ТекстОшибки);
	КонецЕсли;
	
	Если НЕ Результат.ТаблицаИнвентаризации = Неопределено Тогда
		ТаблицаИнвентаризации.Загрузить(Результат.ТаблицаИнвентаризации);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеУведомленийВФоне

&НаСервере
Функция СформироватьУведомленияНаСервере()
	
	// Остановим выполнение если задание уже выполняется
	ДлительныеОперации.ОтменитьВыполнениеЗадания(УникальныйИдентификатор);
	
	// Подготавливаем параметры длительной операции
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("СписокУведомлений", РеквизитФормыВЗначение("СписокУведомлений"));
	ПараметрыОперации.Вставить("ТаблицаИнвентаризации", РеквизитФормыВЗначение("ТаблицаИнвентаризации"));
	ПараметрыОперации.Вставить("НаДату", Объект.НаДату);
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ОстаткиПрослеживаемыхТоваров.СформироватьУведомления",
		ПараметрыОперации,
		ПараметрыВыполнения
	);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ЗавершениеСформироватьУведомления(ФоновоеЗадание, ДополнительныеПараметры) Экспорт
	
	Если ФоновоеЗадание.Статус = "Выполнено" Тогда
		ЗаполнитьСписокУведомлений(ФоновоеЗадание.АдресРезультата);
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаУведомления;
	ИначеЕсли ФоновоеЗадание.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ФоновоеЗадание.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокУведомлений(АдресРезультата)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		Для Каждого Строка Из Результат.ТекстОшибки Цикл
			ОбщегоНазначения.СообщитьПользователю(Строка);
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ Результат = Неопределено Тогда
		СписокУведомлений.Очистить();
		СписокУведомлений.Загрузить(Результат.СписокУведомлений);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
