// Модуль формы обработки "Снятие запчасти с резерва"

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Выполним заполнение табличной части "Товары"
	РазрешеноОткрытие = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Основание", Ложь);
	Если РазрешеноОткрытие = Ложь Тогда
		Отказ = Истина;
	Иначе
		ЗаказНаряд = РазрешеноОткрытие.ЗаказНаряд;
		МассивТоваров = РазрешеноОткрытие.ТоварыИМатериалы.Товары;
		МассивНоменклатуры = Новый Массив;
		Для Каждого Товар Из ЗаказНаряд.Товары Цикл
			Если МассивТоваров.Найти(Товар.НомерСтроки) <> Неопределено Тогда
				МассивНоменклатуры.Добавить(Товар.Номенклатура);
				Номенклатура.Добавить(Товар.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		ЗаполнитьТоварыПоЗаказНаряду(МассивНоменклатуры);
		
		КорректировкаЗаказа = ПолучитьЗначениеПараметраСтруктуры(РазрешеноОткрытие, "КорректировкаЗаказа", Ложь);
				
	КонецЕсли;
	
	// Настроим нестандартные командные панели
	УправлениеДиалогомДокументаСервер.УстановитьВидимостьКолонокКодАртикул(ЭтотОбъект, "Товары");
	
	// Установим заголовок формы
	Если КорректировкаЗаказа Тогда
		Элементы.СнятьСРезерва.Заголовок = НСтр("ru = 'Отменить заказ'");
		ЭтотОбъект.Заголовок = СтрШаблон(
			НСтр("ru = 'Отменить заказ на номенклатуру из заказ-наряда %1'"),
			Строка(Сред(ЗаказНаряд, 13, 25))
		);
	Иначе
		ЭтотОбъект.Заголовок = СтрШаблон(
			НСтр("ru = 'Снять с резерва номенклатуру из заказ-наряда %1'"),
			Строка(Сред(ЗаказНаряд, 13, 25))
		);
	КонецЕсли;
	
	// Установим доступность кнопки снятия резервов
	ТоварыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Произведем настройку параметров отображения кнопок командной панели списка "Товары".
	ЗащищенныеФункцииКлиент.НастроитьЭлементФормыТабличнойЧасти(ЭтотОбъект, "Товары");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ТоварыПриИзмененииНаСервере()
	
	Таб = Товары.НайтиСтроки(Новый Структура("Отметка", Истина));
	ТабКоличество = Товары.НайтиСтроки(Новый Структура("ЗарезервированоПодЗН", 0));
	Если Товары.Количество() = 0 ИЛИ Таб.Количество() = 0 ИЛИ ТабКоличество.Количество() = Товары.Количество() Тогда
		Элементы.СнятьСРезерва.Доступность = Ложь;
	Иначе
		Элементы.СнятьСРезерва.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	ТоварыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОтметкаПриИзменении(Элемент)
	
	ТоварыПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события возникающего на клиенте при выполнении команды "Установить пометки".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	Для Каждого ТекущаяСтрока Из Товары Цикл
		ТекущаяСтрока.Отметка = Истина;
	КонецЦикла;
	
КонецПроцедуры //ГруппировкиСтрокУстановитьПометки()

// Обработчик события возникающего на клиенте при выполнении команды "Снять пометки".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура СнятьПометки(Команда)
	
	Для Каждого ТекущаяСтрока Из Товары Цикл
		ТекущаяСтрока.Отметка = Ложь;
	КонецЦикла;
	
КонецПроцедуры //ГруппировкиСтрокУстановитьПометки()

&НаКлиенте
Процедура СнятьСРезерва(Команда)
	
	ПараметрыФормы = Новый Структура;
	Основание = Новый Структура;
	ТоварыИМатериалы = Новый Структура;
	Основание.Вставить("ЗаказНаряд", ЗаказНаряд);
	ТоварыИМатериалы.Вставить("Товары", ПолучитьНоменклатуру());
	Основание.Вставить("ТоварыИМатериалы", ТоварыИМатериалы);
	Основание.Вставить("КорректировкаЗаказа", КорректировкаЗаказа);
	ПараметрыФормы.Вставить("Основание", Основание);
	
	ОткрытьФорму("Документ.СнятиеРезервовЗаказовПокупателя.ФормаОбъекта", ПараметрыФормы,, Новый УникальныйИдентификатор);
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьИзЗаказНарядаНаСервере()
	
	МассивНоменклатуры = Новый Массив;
	Для Каждого Товар Из ЗаказНаряд.Товары Цикл
		Если Номенклатура.НайтиПоЗначению(Товар.НомерСтроки) <> Неопределено Тогда
			МассивНоменклатуры.Добавить(Товар.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	ЗаполнитьТоварыПоЗаказНаряду(МассивНоменклатуры);
	ТоварыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьИзЗаказНаряда(Команда)
	
	ПерезаполнитьИзЗаказНарядаНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьРасширеннуюПодсказкуЗаказНаряда()
	
	// Сообщим пользователю, если он вызвал обработку из закрытого или выполненного заказ-наряда
	Если ЗаказНаряд.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Выполнен ИЛИ  ЗаказНаряд.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Закрыт Тогда
		Элементы.ДекорацияИнформацияОЗаказНаряде.Заголовок = НСтр("ru = 'Выбранный заказ-наряд находится в состоянии """ + ЗаказНаряд.Состояние + """." + Символы.ПС + "Информация о резервах недоступна.'");
		Элементы.ДекорацияИнформацияОЗаказНаряде.Видимость = Истина;
		Элементы.Товары.Видимость                          = Ложь;
		Элементы.ПерезаполнитьИзЗаказНаряда.Видимость      = Ложь;
		Элементы.СнятьСРезерва.Видимость                   = Ложь;
	Иначе
		Элементы.ДекорацияИнформацияОЗаказНаряде.Заголовок = "";
		Элементы.ДекорацияИнформацияОЗаказНаряде.Видимость = Ложь;
		Элементы.Товары.Видимость                          = Истина;
		Элементы.ПерезаполнитьИзЗаказНаряда.Видимость      = Истина;
		Элементы.СнятьСРезерва.Видимость                   = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТоварыПоЗаказНаряду(МассивНоменклатуры)
	
	Товары.Очистить();
	
	// Заполним табличную часть "Товары"
	Если НЕ (ЗаказНаряд.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Выполнен ИЛИ  ЗаказНаряд.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Закрыт) Тогда
		ПоказателиЗапасов = Документы.ЗаказНаряд.ПолучитьПоказателиЗапасов(ЗаказНаряд, ЗаказНаряд.Товары);
		Для Каждого Строка Из ПоказателиЗапасов Цикл
			Если Строка.ЗарезервированоПодЗН <> 0 И МассивНоменклатуры.Найти(Строка.Номенклатура) <> Неопределено Тогда
				НоваяСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				НоваяСтрока.Отметка = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОбновитьРасширеннуюПодсказкуЗаказНаряда();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНоменклатуру()
	
	СписокНоменклатуры = Новый СписокЗначений;
	Для Каждого СтрокаТЧ Из Товары Цикл
		Если СтрокаТЧ.Отметка Тогда
			СписокНоменклатуры.Добавить(СтрокаТЧ.Номенклатура, Строка(СтрокаТЧ.ЗарезервированоПодЗН));
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокНоменклатуры;
	
КонецФункции

#КонецОбласти

