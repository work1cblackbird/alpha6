// Модуль набора записей регистра накоплений "Выработка сотрудников"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем РежимПроведения Экспорт; // Режим проведения документа. Если проведение неоперативное - проверок остатков нет

Перем ДокументОбъект Экспорт; //Документ, осуществляющий движение по регистру
Перем РезультатЗапросаПоРаботам Экспорт; //Выборка табличной части или таблица значений табличной части работ
Перем РезультатЗапросаПоИсполнителям Экспорт; //Выборка табличной части или таблица значений табличной части исполнителей
Перем ВидРемонта Экспорт; //Ссылка на справочник видов ремонта. Если значение неопределено, вид ремонта берется из объекта документа
Перем Автомобиль Экспорт; //Ссылка на справочник автомобилей. Если значение неопределено, автомобиль берется из объекта документа
Перем ПериодДвижения Экспорт; //Период движения регистра. Если период не задан, он берется из ДокументОбъект.Дата
Перем РаспределениеСумм Экспорт; // Таблица с распределением сумм по автоработам в регламентированной и управленческой валютах

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистру
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - ошибка.
Функция Движение() Экспорт
	ВсеОК = Истина;
	
	// получим таблицу работ
	Если (РезультатЗапросаПоРаботам = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоРаботам) <> Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоРаботам) <> Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоРаботам = ПолучитьТаблицуРабот();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоРаботам) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоРаботам = РезультатЗапросаПоРаботам.Выгрузить();
	КонецЕсли;
	// получим таблицу исполнителей
	Если (РезультатЗапросаПоИсполнителям = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоИсполнителям) <> Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоИсполнителям) <> Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоИсполнителям = ПолучитьТаблицуИсполнителей();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоИсполнителям) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоИсполнителям = РезультатЗапросаПоИсполнителям.Выгрузить();
	КонецЕсли;
	
	// Получим валюту и курс управленческого учета
	ПериодДвижения = ?(ПериодДвижения=Неопределено, ДокументОбъект.Дата, ПериодДвижения);
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	СтруктураКурса	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл, ПериодДвижения);
	КурсРегл		= СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	
	ВалютаУпр  = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	КурсУпр = Неопределено;
	Попытка
		ЕстьКурсВалютУпр = ЗначениеЗаполнено(ДокументОбъект.КурсВалютыУпр);
	Исключение
		ЕстьКурсВалютУпр = Ложь;	
	КонецПопытки;
	
	Если ЕстьКурсВалютУпр Тогда
		КурсУпр = ДокументОбъект.КурсВалютыУпр; 	
	КонецЕсли;
	
	Если КурсУпр = Неопределено Тогда
		СтруктураКурса	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ПериодДвижения);
		КурсУпр			= СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли; 
	ТекВидРемонта = ?(ВидРемонта = Неопределено, ДокументОбъект.ВидРемонта, ВидРемонта);
	ТекАвтомобиль = ?(Автомобиль = Неопределено, ДокументОбъект.Автомобиль, Автомобиль);
	
	СписокСтавокНДС  = ОбщегоНазначенияКлиентСервер.СвернутьМассив(РезультатЗапросаПоРаботам.ВыгрузитьКолонку("СтавкаНДС"));
	СтавкиНДС        = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СписокСтавокНДС, "Ставка");
	
	ЕстьПересчетСумм = РаспределениеСумм <> Неопределено
		И РаспределениеСумм.Колонки.Найти("СуммаУпр") <> Неопределено
		И РаспределениеСумм.Колонки.Найти("СуммаНДСУпр") <> Неопределено
		И РаспределениеСумм.Колонки.Найти("СуммаСкидкиУпр") <> Неопределено;
	
	// Перебираем строки работ
	Для каждого СтрокаРабот Из РезультатЗапросаПоРаботам Цикл
		
		СтавкаНДС = СтавкиНДС.Получить(СтрокаРабот.СтавкаНДС);
		
		Авторабота = СтрокаРабот.Авторабота;
		ИдентификаторРаботы  = СтрокаРабот.ИдентификаторРаботы;
		Количество           = СтрокаРабот.Количество;
		КоличествоНормочасов = СтрокаРабот.КоличествоНормочасов;
		// Получим сумму работы с и без скидки в валюте управленческого учета
		СуммаСоСкидкой     = СтрокаРабот.Сумма;
		СуммаСкидки        = СтрокаРабот.СуммаСкидки;
		СуммаБезСкидки     = СуммаСоСкидкой + СуммаСкидки;
		
		Если ЕстьПересчетСумм Тогда
			СуммыАвтоработы = РаспределениеСумм.НайтиСтроки(Новый Структура("ИдентификаторРаботы", ИдентификаторРаботы));
			СуммаСоСкидкойРегл = СуммыАвтоработы[0].Сумма;
			СуммаСоСкидкойУпр = СуммыАвтоработы[0].СуммаУпр;
			СуммаНДСРегл = СуммыАвтоработы[0].СуммаНДС;
			СуммаНДСУпр = СуммыАвтоработы[0].СуммаНДСУпр;
		Иначе
			СуммаСоСкидкойРегл = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СуммаСоСкидкой, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл);
			СуммаСоСкидкойУпр  = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СуммаСоСкидкой, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр,КурсУпр);
			СуммаНДСРегл       = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаРабот.СуммаНДС, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл);
			СуммаНДСУпр        = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаРабот.СуммаНДС, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр);
		КонецЕсли;
		
		ВыручкаБезНДСРегл  = СуммаСоСкидкойРегл - СуммаНДСРегл;
		ВыручкаБезНДСУпр   = СуммаСоСкидкойУпр - СуммаНДСУпр;
		
		ВыручкаДоПримененияСкидкиСНДС = СуммаБезСкидки;
		ВыручкаДоПримененияСкидкиСНДСРегл = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыручкаДоПримененияСкидкиСНДС, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл);
		ВыручкаДоПримененияСкидкиСНДСУпр  = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыручкаДоПримененияСкидкиСНДС, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр);
		
		ВыручкаДоПримененияСкидкиБезНДС     = СуммаБезСкидки - СтрокаРабот.СуммаНДС - Окр(СтрокаРабот.СуммаСкидки * СтавкаНДС / (100 + СтавкаНДС), 2);
		ВыручкаДоПримененияСкидкиБезНДСРегл = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыручкаДоПримененияСкидкиБезНДС, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл);
		ВыручкаДоПримененияСкидкиБезНДСУпр  = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыручкаДоПримененияСкидкиБезНДС, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр);
		
		ИсполнителиРаботы  = РезультатЗапросаПоИсполнителям.НайтиСтроки(Новый Структура("ИдентификаторРаботы", ИдентификаторРаботы));
		КоличествоОст           = Количество;
		КоличествоНормочасовОст = КоличествоНормочасов;
		
		СуммаСоСкидкойРеглОст                  = СуммаСоСкидкойРегл;
		СуммаСоСкидкойУпрОст                   = СуммаСоСкидкойУпр;
		СуммаНДСРеглОст                        = СуммаНДСРегл;
		СуммаНДСУпрОст                         = СуммаНДСУпр;
		ВыручкаБезНДСРеглОст                   = ВыручкаБезНДСРегл;
		ВыручкаБезНДСУпрОст                    = ВыручкаБезНДСУпр;
		ВыручкаДоПримененияСкидкиСНДСРеглОст   = ВыручкаДоПримененияСкидкиСНДСРегл;
		ВыручкаДоПримененияСкидкиСНДСУпрОст    = ВыручкаДоПримененияСкидкиСНДСУпр;
		ВыручкаДоПримененияСкидкиБезНДСРеглост = ВыручкаДоПримененияСкидкиБезНДСРегл;
		ВыручкаДоПримененияСкидкиБезНДСУпрОст  = ВыручкаДоПримененияСкидкиБезНДСУпр;
		
		ОбщийПроцент = 0;
		КоличествоИсполнителей = ИсполнителиРаботы.Количество();
		Для каждого СтрокаИсполнителей Из ИсполнителиРаботы Цикл
			КоличествоИсполнителей = КоличествоИсполнителей - 1;
			Исполнитель = СтрокаИсполнителей.Исполнитель;
			Цех = СтрокаИсполнителей.Цех;
			Процент = СтрокаИсполнителей.Процент;
			ОбщийПроцент = ОбщийПроцент + Процент;
			// Рассчитаем участие исполнителя в выполнении работы
			Если КоличествоИсполнителей = 0 Тогда
				КоличествоИсполнителя           = КоличествоОст;
				КоличествоНормочасовИсполнителя = КоличествоНормочасовОст;
				
				СуммаИсполнителяСоСкидкойРегл                  = СуммаСоСкидкойРеглОст;
				СуммаИсполнителяСоСкидкойУпр                   = СуммаСоСкидкойУпрОст;
				СуммаНДСИсполнителяРегл                        = СуммаНДСРеглОст;
				СуммаНДСИсполнителяУпр                         = СуммаНДСУпрОст;
				ВыручкаИсполнителяБезНДСРегл                   = ВыручкаБезНДСРеглОст;
				ВыручкаИсполнителяБезНДСУпр                    = ВыручкаБезНДСУпрОст;
				ВыручкаИсполнителяДоПримененияСкидкиСНДСРегл   = ВыручкаДоПримененияСкидкиСНДСРеглОст;
				ВыручкаИсполнителяДоПримененияСкидкиСНДСУпр    = ВыручкаДоПримененияСкидкиСНДСУпрОст;
				ВыручкаИсполнителяДоПримененияСкидкиБезНДСРегл = ВыручкаДоПримененияСкидкиБезНДСРеглОст;
				ВыручкаИсполнителяДоПримененияСкидкиБезНДСУпр  = ВыручкаДоПримененияСкидкиБезНДСУпрОст;
			Иначе
				КоличествоИсполнителя           = (Количество*Процент) / 100;
				КоличествоНормочасовИсполнителя = (КоличествоНормочасов * Процент) / 100;
				
				СуммаИсполнителяСоСкидкойРегл                  = (СуммаСоСкидкойРегл * Процент) / 100;
				СуммаИсполнителяСоСкидкойУпр                   = (СуммаСоСкидкойУпр * Процент) / 100;
				СуммаНДСИсполнителяРегл                        = (СуммаНДСРегл * Процент) / 100;
				СуммаНДСИсполнителяУпр                         = (СуммаНДСУпр * Процент) / 100;
				ВыручкаИсполнителяБезНДСРегл                   = (ВыручкаБезНДСРегл * Процент) / 100;
				ВыручкаИсполнителяБезНДСУпр                    = (ВыручкаБезНДСУпр * Процент) / 100;
				ВыручкаИсполнителяДоПримененияСкидкиСНДСРегл   = (ВыручкаДоПримененияСкидкиСНДСРегл * Процент) / 100;
				ВыручкаИсполнителяДоПримененияСкидкиСНДСУпр    = (ВыручкаДоПримененияСкидкиСНДСУпр * Процент) / 100;
				ВыручкаИсполнителяДоПримененияСкидкиБезНДСРегл = (ВыручкаДоПримененияСкидкиБезНДСРегл * Процент) / 100;
				ВыручкаИсполнителяДоПримененияСкидкиБезНДСУпр  = (ВыручкаДоПримененияСкидкиБезНДСУпр * Процент) / 100;
			КонецЕсли; 
			Если ВсеОК Тогда
				// Создаем запись регистра
				НоваяЗапись = Добавить();
				// НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период               = ПериодДвижения;
				НоваяЗапись.Регистратор          = ДокументОбъект.Ссылка;
				НоваяЗапись.Сотрудник            = Исполнитель;
				НоваяЗапись.Авторабота           = Авторабота;
				НоваяЗапись.ВидРемонта           = ТекВидРемонта;
				НоваяЗапись.Автомобиль           = ТекАвтомобиль;
				НоваяЗапись.Цех                  = Цех;
				НоваяЗапись.ДокументПродажи		 = ДокументОбъект.Ссылка;
				НоваяЗапись.ВидНормочаса         = СтрокаРабот.Нормочас;
				НоваяЗапись.Количество           = КоличествоИсполнителя;
				НоваяЗапись.КоличествоНормочасов = КоличествоНормочасовИсполнителя;
				
				НоваяЗапись.Сумма                              = Окр(СуммаИсполнителяСоСкидкойРегл, 2);
				НоваяЗапись.СуммаНДС                           = Окр(СуммаНДСИсполнителяРегл, 2);
				НоваяЗапись.ВыручкаБезНДС                      = Окр(ВыручкаИсполнителяБезНДСРегл, 2);
				НоваяЗапись.ВыручкаДоПримененияСкидки          = Окр(ВыручкаИсполнителяДоПримененияСкидкиСНДСРегл, 2);
				НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС    = Окр(ВыручкаИсполнителяДоПримененияСкидкиБезНДСРегл, 2);
				
				НоваяЗапись.СуммаУпр                           = Окр(СуммаИсполнителяСоСкидкойУпр, 2);
				НоваяЗапись.СуммаНДСУпр                        = Окр(СуммаНДСИсполнителяУпр, 2);
				НоваяЗапись.ВыручкаБезНДСУпр                   = Окр(ВыручкаИсполнителяБезНДСУпр, 2);
				НоваяЗапись.ВыручкаДоПримененияСкидкиУпр       = Окр(ВыручкаИсполнителяДоПримененияСкидкиСНДСУпр, 2);
				НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр = Окр(ВыручкаИсполнителяДоПримененияСкидкиБезНДСУпр, 2);
				
				
				// определяемся с хоз. операцией
				НоваяЗапись.ХозОперация          = ДокументОбъект.ХозОперация;
				КоличествоОст           = КоличествоОст           - НоваяЗапись.Количество;
				КоличествоНормочасовОст = КоличествоНормочасовОст - НоваяЗапись.КоличествоНормочасов;
				
				СуммаСоСкидкойРеглОст                  = СуммаСоСкидкойРеглОст - НоваяЗапись.Сумма;
				СуммаСоСкидкойУпрОст                   = СуммаСоСкидкойУпрОст - НоваяЗапись.СуммаУпр;
				СуммаНДСРеглОст                        = СуммаНДСРеглОст - НоваяЗапись.СуммаНДС;
				СуммаНДСУпрОст                         = СуммаНДСУпрОст - НоваяЗапись.СуммаНДСУпр;
				ВыручкаБезНДСРеглОст                   = ВыручкаБезНДСРеглОст - НоваяЗапись.ВыручкаБезНДС;
				ВыручкаБезНДСУпрОст                    = ВыручкаБезНДСУпрОст - НоваяЗапись.ВыручкаБезНДСУпр;
				ВыручкаДоПримененияСкидкиСНДСРеглОст   = ВыручкаДоПримененияСкидкиСНДСРеглОст - НоваяЗапись.ВыручкаДоПримененияСкидки;
				ВыручкаДоПримененияСкидкиСНДСУпрОст    = ВыручкаДоПримененияСкидкиСНДСУпрОст - НоваяЗапись.ВыручкаДоПримененияСкидкиУпр;
				ВыручкаДоПримененияСкидкиБезНДСРеглост = ВыручкаДоПримененияСкидкиБезНДСРеглост - НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС;
				ВыручкаДоПримененияСкидкиБезНДСУпрОст  = ВыручкаДоПримененияСкидкиБезНДСУпрОст - НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр;
				
			КонецЕсли; 
		КонецЦикла; 
		Если ОбщийПроцент <> 100 Тогда
			// общий процент исполнения работ по исполнителям не равен 100 процентам
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'По работе ""%1"" процент распределения работ по исполнителям составляет %2 , а должен быть равен %3.'"),
					СокрЛП(Авторабота),
					СокрЛП(ОбщийПроцент) + "%",
					"100%"
				),
				ДокументОбъект
			);
			ВсеОК = Ложь;
		КонецЕсли; 
	КонецЦикла; 
	
	// запись движений
	Если ВсеОК Тогда 
		Записать(); 
	КонецЕсли; 
	
	РежимПроведения = Неопределено;
	ДокументОбъект = Неопределено;
	РезультатЗапросаПоРаботам = Неопределено;
	РезультатЗапросаПоИсполнителям = Неопределено;
	ВидРемонта = Неопределено;
	Автомобиль = Неопределено;
	ПериодДвижения = Неопределено;
	РаспределениеСумм = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает результат запроса по таблице работ
Функция ПолучитьТаблицуРабот()
	// получим результат запроса по таблице работ
	ВидДок = ДокументОбъект.Метаданные().Имя;
	Запрос = Новый Запрос();
	ТекстЗапроса = "ВЫБРАТЬ
	             |	ДокументРаботы.Авторабота КАК Авторабота,
	             |	ДокументРаботы.ИдентификаторРаботы КАК ИдентификаторРаботы,
	             |	ДокументРаботы.Нормочас КАК Нормочас,
	             |	ДокументРаботы.Количество КАК Количество,
	             |	ВЫБОР
	             |		КОГДА ДокументРаботы.Нормочас = ЗНАЧЕНИЕ(Справочник.Нормочасы.Рубль)
	             |			И ДокументРаботы.СпособРасчетаСтоимостиРаботы <> Значение(Перечисление.СпособыРасчетаСтоимостиРаботы.ФиксированнойСуммой)
	             |			ТОГДА 0
	             |		ИНАЧЕ ДокументРаботы.Количество * ДокументРаботы.Коэффициент
	             |	КОНЕЦ КАК КоличествоНормочасов,
	             |	ДокументРаботы.СуммаВсего КАК Сумма,
	             |	ДокументРаботы.СуммаСкидки + ДокументРаботы.СуммаСкидкиСтроки " + ?(ВидДок = "ЗаказНаряд", "+ ДокументРаботы.СуммаСкидкиБонусами", "") + " КАК СуммаСкидки,
	             |	ДокументРаботы.СуммаНДС КАК СуммаНДС,
	             |	ДокументРаботы.СтавкаНДС КАК СтавкаНДС
	             |ИЗ
	             |	Документ." + ВидДок + ".Автоработы КАК ДокументРаботы
	             |ГДЕ
	             |	ДокументРаботы.Ссылка = &Ссылка
	             |	И ДокументРаботы.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Возврат Запрос.Выполнить();
КонецФункции

// Возвращает результат запроса по таблице исполнителей
Функция ПолучитьТаблицуИсполнителей()
	// получим результат запроса по таблице исполнителей
    ВидДок = ДокументОбъект.Метаданные().Имя;
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДокументИсполнители.ИдентификаторРаботы КАК ИдентификаторРаботы,
	|	ДокументИсполнители.Исполнитель КАК Исполнитель,
	|	ДокументИсполнители.Цех КАК Цех,
	|	ДокументИсполнители.Процент КАК Процент
	|ИЗ
	|	Документ." + ВидДок + ".Исполнители КАК ДокументИсполнители
	|ГДЕ
	|	ДокументИсполнители.Ссылка=&Ссылка
	|";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Возврат Запрос.Выполнить();
КонецФункции

#КонецОбласти

#Область Инициализация

////////////////////////////////////////////////////////////////////////
// Инициализация переменных модуля набора записей

РежимПроведения = РежимПроведенияДокумента.Оперативный;

ДокументОбъект = Неопределено; // Обязательный к заполнению перед началом проведения
РезультатЗапросаПоРаботам = Неопределено;
РезультатЗапросаПоИсполнителям = Неопределено;
ВидРемонта = Неопределено;
Автомобиль = Неопределено;
ПериодДвижения = Неопределено;
РаспределениеСумм = Неопределено;

#КонецОбласти

#КонецЕсли