// Модуль набора записей регистра накоплений "Остатки автомобилей ордерный склад"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем РежимПроведения Экспорт;		// Режим проведения документа оперативный/неоперативный

Перем ДокументОбъект Экспорт; // Документ, осуществляющий движение по регистру
Перем РезультатЗапросаПоАвтомобилям Экспорт; // Выборка табличной части или таблица значений табличной части товаров
Перем СкладКомпании Экспорт; // Ссылка на склад компании, на котором необходимо производить приходование и резервирование. Если значение неопределено склад находится в табличной части товаров
Перем ИмяРеквизитаЯчейки Экспорт; // Имя реквизида ячейки
Перем ГраницаРасчетаОстатков Экспорт; // Гранича расчета остатков
Перем Переразмещение Экспорт; // Булево. Истина - осуществляется переразмещение автомобилей

// В соответствии с этими флагами используются соответствующие колонки таблицы товаров
Перем Приходовать Экспорт; // Булево. Истина - надо приходовать товары на склад

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает результат запроса по остаткам автомобилей
Функция ПолучитьОстаткиАвтомобилей() Экспорт
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ОстаткиАвтомобилейОрдерныйСклад");
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, ДокументОбъект.Дата)); 
	
	Запрос = Новый Запрос();
	УсловияОтбора = "";
	Если РезультатЗапросаПоАвтомобилям <> Неопределено Тогда
		Если НЕ ПустаяСтрока(УсловияОтбора) Тогда
			УсловияОтбора = УсловияОтбора + "
			|	И ";
		КонецЕсли;
		УсловияОтбора = УсловияОтбора + "Автомобиль В (&Автомобиль)";
		Запрос.УстановитьПараметр("Автомобиль",РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку("Автомобиль"));
		СтруктураПараметровБлокировки.Вставить("ИсточникДанных", РезультатЗапросаПоАвтомобилям);
		ОписаниеИсточника = Новый Соответствие;
		ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
	КонецЕсли;
	Если СкладКомпании <> Неопределено Тогда
		Если НЕ ПустаяСтрока(УсловияОтбора) Тогда
			УсловияОтбора = УсловияОтбора + "
			|	И ";
		КонецЕсли;
		УсловияОтбора = УсловияОтбора + "СкладКомпании=&СкладКомпании";
		Запрос.УстановитьПараметр("СкладКомпании", СкладКомпании);
		ЗначенияБлокировки.Вставить("СкладКомпании", СкладКомпании);
	КонецЕсли; 
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ОстаткиАвтомобилейОрдерныйСкладОстатки.Автомобиль КАК Автомобиль,
	|	ОстаткиАвтомобилейОрдерныйСкладОстатки.СкладКомпании КАК СкладКомпании,
	|	ОстаткиАвтомобилейОрдерныйСкладОстатки.Ячейка КАК Ячейка,
	|	ОстаткиАвтомобилейОрдерныйСкладОстатки.КоличествоОстаток КАК Количество
	|ИЗ 
	|	РегистрНакопления.ОстаткиАвтомобилейОрдерныйСклад.Остатки(&Момент," + УсловияОтбора + ") КАК ОстаткиАвтомобилейОрдерныйСкладОстатки
	|";
	Запрос.Текст = ТекстЗапроса; 
	РежимПроведенияПараметр = ?(РежимПроведения = РежимПроведенияДокумента.Оперативный, 
												Неопределено, ДокументОбъект.МоментВремени()); 
	Запрос.УстановитьПараметр("Момент", ?(ГраницаРасчетаОстатков = Неопределено, 
												РежимПроведенияПараметр, ГраницаРасчетаОстатков));
	
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	Возврат Запрос.Выполнить();
КонецФункции

// Формирует движения по регистру ОстаткиАвтомобилейОрдерныйСклад
// Возвращаемое значение: Булево. Истина - все окей, Ложь - чего-то не так.
Функция Приход() Экспорт
	
	ВсеОК = Истина;

	СкладЯчеистый = (СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.Ячеистый ИЛИ СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.ОрдерныйЯчеистый);
	Переразмещение = ?(Переразмещение=Неопределено,Ложь,Переразмещение);
	// получим права пользователя
	ОтрицательныеОстаткиРазрешены = (ПраваИНастройкиПользователя.Значение("РазрешитьОтрицательныеСкладскиеОстатки", ДокументОбъект) = Перечисления.ВидыРазрешенныхОтрицательныхОстатков.ПоОстаткам);

	// получим таблицу товарного состава
	Если (РезультатЗапросаПоАвтомобилям = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоАвтомобилям)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям.Выгрузить();
	КонецЕсли;
	// Получение остатков на складе
	Склад=СкладКомпании;
	СкладКомпании=Неопределено;
	ТаблицаОстатковАвтомобилей=ПолучитьОстаткиАвтомобилей().Выгрузить();
	ТаблицаОстатковАвтомобилей.Свернуть("Автомобиль","Количество");
	СкладКомпании=Склад;
	Если СкладЯчеистый Тогда
		Автомобили=РезультатЗапросаПоАвтомобилям;
		РезультатЗапросаПоАвтомобилям=Неопределено;
		ТаблицаОстатковАвтомобилейПоЯчейкам=ПолучитьОстаткиАвтомобилей().Выгрузить();
		РезультатЗапросаПоАвтомобилям=Автомобили;
	КонецЕсли; 
	
	// Преребираем строки автомобилей
	Для каждого СтрокаАвтомобилей Из РезультатЗапросаПоАвтомобилям Цикл
		Если Приходовать Тогда Количество=СтрокаАвтомобилей.Количество; Иначе Количество=0; КонецЕсли;
		
		// Получим остатки по текущему автомобилю
		Если НЕ Переразмещение Тогда
			// Только по приходу автомобиля требуется проверка на его наличие
			СтруктураОтбораОстатковАвтомобилей=Новый Структура("Автомобиль", СтрокаАвтомобилей.Автомобиль);
			МассивНайденныхСтрок = ТаблицаОстатковАвтомобилей.НайтиСтроки(СтруктураОтбораОстатковАвтомобилей);
			Если МассивНайденныхСтрок.Количество()=0 Тогда
				КоличествоОстаток = 0; 
			Иначе
				КоличествоОстаток=МассивНайденныхСтрок[0].Количество;
			КонецЕсли; 
			Если Количество>0 И КоличествоОстаток>0 И НЕ ОтрицательныеОстаткиРазрешены Тогда
				СтрРезультат = "["+СокрЛП(СтрокаАвтомобилей.Автомобиль.VIN)+"] Автомобиль """+СокрЛП(СтрокаАвтомобилей.Автомобиль)+""". Уже имеется на складе.";
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = '%1'"),СтрРезультат),
					ДокументОбъект, 
					СтрокаАвтомобилей.Автомобиль
				);
				ДокументОбъект = Неопределено;
				Возврат Ложь; 
			КонецЕсли;
		КонецЕсли;
		Если СкладЯчеистый Тогда
			// Получим остатки по текущей ячейке
			СтруктураОтбораОстатковАвтомобилей=Новый Структура("Ячейка", СтрокаАвтомобилей.Ячейка);
			МассивНайденныхСтрок = ТаблицаОстатковАвтомобилейПоЯчейкам.НайтиСтроки(СтруктураОтбораОстатковАвтомобилей);
			Если МассивНайденныхСтрок.Количество()=0 Тогда
				КоличествоОстаток = 0; 
			Иначе
				КоличествоОстаток=МассивНайденныхСтрок[0].Количество;
				АвтомобильОстаток=МассивНайденныхСтрок[0].Автомобиль;
			КонецЕсли; 
			Если Количество>0 И КоличествоОстаток>0 И НЕ ОтрицательныеОстаткиРазрешены Тогда
				
				СтрРезультат = "["+СокрЛП(СтрокаАвтомобилей.Автомобиль.VIN)+"] Автомобиль """+
					СокрЛП(СтрокаАвтомобилей.Автомобиль)+""". В ячейке уже имеется автомобиль ["+АвтомобильОстаток.VIN+"] "+СокрЛП(АвтомобильОстаток)+".";
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = '%1'"),СтрРезультат),
					ДокументОбъект, 
					СтрокаАвтомобилей.Автомобиль
				);

				ДокументОбъект = Неопределено;
				Возврат Ложь; 
			КонецЕсли; 
		КонецЕсли; 
		
		Если Количество <> 0 Тогда
			// Создаем запись регистра
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период 	 	  = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
			НоваяЗапись.СкладКомпании = СкладКомпании;
			// ячейку пишем только для ячеистого склада
			Если СкладЯчеистый Тогда
				НоваяЗапись.Ячейка = СтрокаАвтомобилей.Ячейка;
			КонецЕсли; 
			НоваяЗапись.Автомобиль	  = СтрокаАвтомобилей.Автомобиль;
			НоваяЗапись.ХозОперация=ДокументОбъект.ХозОперация;
			НоваяЗапись.Количество=Количество;
		КонецЕсли; 
	КонецЦикла; 
	
	// убиваем циклическую ссылку
	ДокументОбъект=Неопределено;
	
	Возврат ВсеОК;
КонецФункции

// Формирует движения по регистру расход
// Возвращаемое значение: Булево. Истина - все окей, Ложь - чего-то не так.
Функция Расход() Экспорт
	СкладЯчеистый = (СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.Ячеистый ИЛИ СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.ОрдерныйЯчеистый);
	
	// получим права пользователя
	ОтрицательныеОстаткиРазрешены = (ПраваИНастройкиПользователя.Значение(
		"РазрешитьОтрицательныеСкладскиеОстатки", ДокументОбъект)=Перечисления.ВидыРазрешенныхОтрицательныхОстатков.ПоОстаткам);
	
	// получим таблицу автомобилей
	Если (РезультатЗапросаПоАвтомобилям = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоАвтомобилям)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям.Выгрузить();
	КонецЕсли;
	// Получение остатков на складе
	ТаблицаОстатковАвтомобилей=ПолучитьОстаткиАвтомобилей().Выгрузить();
	
	// Преребираем строки автомобилей
	Для Каждого СтрокаАвтомобилей Из РезультатЗапросаПоАвтомобилям Цикл
		Если Приходовать Тогда Количество=СтрокаАвтомобилей.Количество; Иначе Количество=0; КонецЕсли;
		
		// Получим остатки по текущему автомобилю
		СтруктураОтбораОстатковАвтомобилей=Новый Структура("Автомобиль,СкладКомпании", СтрокаАвтомобилей.Автомобиль, СкладКомпании);
		// Добавим отбор по ячейке для ячеистого склада
		Если СкладЯчеистый Тогда
			СтруктураОтбораОстатковАвтомобилей.Вставить("Ячейка",СтрокаАвтомобилей.Ячейка);
		КонецЕсли; 
		МассивНайденныхСтрок = ТаблицаОстатковАвтомобилей.НайтиСтроки(СтруктураОтбораОстатковАвтомобилей);
		КоличествоОстаток = 0; 
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			КоличествоОстаток=КоличествоОстаток+ТекСтрока.Количество;
		КонецЦикла;
		Если (Количество>КоличествоОстаток) И НЕ ОтрицательныеОстаткиРазрешены Тогда
			// Расход по складу превышает остаток
			СтрРезультат = "["+СокрЛП(СтрокаАвтомобилей.Автомобиль.VIN)+"] Автомобиль """+СокрЛП(СтрокаАвтомобилей.Автомобиль)+""". Остаток ";
			Если СкладЯчеистый Тогда
				СтрРезультат = СтрРезультат + " в ячейке """ +  СокрЛП(СтрокаАвтомобилей.Ячейка) + """ ";
			КонецЕсли; 
			СтрРезультат = СтрРезультат + Формат(КоличествоОстаток,"ЧДЦ=3; ЧН=0,00")+" шт."+ 
						  ". Списывается "+Формат(Количество,"ЧДЦ=3; ЧН=0,00")+" шт."+
						  ". Превышение "+Формат(Количество-КоличествоОстаток,"ЧДЦ=3; ЧН=0,00")+" шт.";
			
			ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = '%1'"),СтрРезультат),
					ДокументОбъект, 
					СтрокаАвтомобилей.Автомобиль
				);
			ДокументОбъект = Неопределено;
			Возврат Ложь; // отмена проведения из-за превышения количества
		КонецЕсли; 
		
		// списываем автомобиль
		НоваяЗапись = Добавить();
		НоваяЗапись.ВидДвижения 	 = ВидДвиженияНакопления.Расход;
		НоваяЗапись.Период 		 	 = ДокументОбъект.Дата;
		НоваяЗапись.Регистратор 	 = ДокументОбъект.Ссылка;
		НоваяЗапись.СкладКомпании 	 = СкладКомпании;
		НоваяЗапись.Автомобиль		 = СтрокаАвтомобилей.Автомобиль;
		Если СкладЯчеистый Тогда
			НоваяЗапись.Ячейка 		 = СтрокаАвтомобилей.Ячейка;
		КонецЕсли; 
		НоваяЗапись.ХозОперация		 = ДокументОбъект.ХозОперация;
		НоваяЗапись.Количество	 	 = СтрокаАвтомобилей.Количество;
	КонецЦикла; 
	
	// убиваем циклическую ссылку
	ДокументОбъект = Неопределено;
	
	// возврат результата
	Возврат Истина;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает результат запроса по таблице автомобилей
Функция ПолучитьТаблицуАвтомобилей()
	ВидДок = ДокументОбъект.Метаданные().Имя;
	Запрос = Новый Запрос();
	ТекстЗапроса="
	|ВЫБРАТЬ
	|	ДокументАвтомобили.Автомобиль КАК Автомобиль,
	|	1 КАК Количество
	|";
	
	Если СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.Ячеистый ИЛИ СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.ОрдерныйЯчеистый Тогда
		Если ИмяРеквизитаЯчейки=Неопределено Тогда
			ТекстЗапроса = ТекстЗапроса + ",
			|	ДокументАвтомобили.Ячейка КАК Ячейка
			|";
		Иначе
			ТекстЗапроса = ТекстЗапроса + ",
			|	ДокументАвтомобили."+ИмяРеквизитаЯчейки+" КАК Ячейка
			|";
		КонецЕсли; 
	КонецЕсли; 
	
	ТекстЗапроса = ТекстЗапроса + ",
	|	" + ?(СкладКомпании = Неопределено,"ДокументАвтомобили.МестоРазмещения","&СкладКомпании") + " КАК СкладКомпании
	|";
	
	ТекстЗапроса = ТекстЗапроса+"
	|ИЗ
	|	Документ." + ВидДок + ".Автомобили КАК ДокументАвтомобили
	|ГДЕ
	|	ДокументАвтомобили.Ссылка=&Ссылка";
	
	Если ДокументОбъект.Метаданные() = Метаданные.Документы.ПереразмещениеАвтомобилей Тогда
		ТекстЗапроса = ТекстЗапроса + 
		" И ДокументАвтомобили.Ячейка <> ДокументАвтомобили.ЯчейкаНовая"
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументАвтомобили.Автомобиль,"+?(СкладКомпании=Неопределено,"ДокументАвтомобили.МестоРазмещения","&СкладКомпании")+"
	|";
	Если СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.Ячеистый ИЛИ СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.ОрдерныйЯчеистый Тогда
		Если ИмяРеквизитаЯчейки=Неопределено Тогда
			ТекстЗапроса = ТекстЗапроса + ",
			|	ДокументАвтомобили.Ячейка
			|";
		Иначе
			ТекстЗапроса = ТекстЗапроса + ",
			|	ДокументАвтомобили."+ИмяРеквизитаЯчейки+"
			|";
		КонецЕсли;
	КонецЕсли; 
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка",ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СкладКомпании",СкладКомпании);

	Возврат Запрос.Выполнить();
КонецФункции

#КонецОбласти

#Область Инициализация

////////////////////////////////////////////////////////////////////////
// Инициализация переменных модуля набора записей

ДокументОбъект 			  = Неопределено; // Обязательный к заполнению перед началом проведения
РежимПроведения			  = РежимПроведенияДокумента.Оперативный;
РезультатЗапросаПоАвтомобилям = Неопределено;
СкладКомпании			  = Неопределено;
ГраницаРасчетаОстатков 	  = Неопределено;
Приходовать				  = Истина;

#КонецОбласти

#КонецЕсли