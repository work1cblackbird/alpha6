// Модуль набора записей регистра "Автомобили отданные"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Сторно Экспорт;                            // Признак сторно записи
Перем ДокументОбъект Экспорт;                    // Документ объект выполняющий движения
Перем Контрагент Экспорт;                        // Ссылка на контрагента
Перем РезультатЗапросаПоАвтомобилям Экспорт;     // результат запроса по автомобилям
Перем РезультатЗапросаПоПартиям Экспорт;         // Результат запроса по партия
Перем ДоговорВзаиморасчетов Экспорт;             // Ссылка на договор взаиморасчетов
Перем ОтчетКомиссионера Экспорт;                 // Булево. Истина - имеем отчет комиссионера,
												 //			Ложь - складская операция.
Перем ЗаписыватьДвижения Экспорт;                // Булево. Истина - движения записываются сразу по окончании
												 //			выполнения процедуры.
												 //			Ложь - движения записываются при записи документа.
Перем ПередаватьНаКомиссиюВсеАвтомобили Экспорт; // Булево. Ложь - на реализацию передаются автомобили,
												 //			списанный с нашего склада.
												 //			Истина - передаем автомобили, указанные в ТЧ все, как есть.

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистру приход (передача автомобиля на реализацию)
// Возвращаемое значение: Булево. Истина - все хорошо, Ложь - чего-то не так.
Функция Приход() Экспорт
	Сторно = ?(Сторно = Неопределено, Ложь, Сторно);
	
	// проверим на возврат
	Если Сторно Тогда
		Возврат ВозвратАвтомобилей();
	КонецЕсли;
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	
	Если ЕстьРеквизит(ДокументОбъект, "КурсВалютыУпр") Тогда
		КурсУпр = ДокументОбъект.КурсВалютыУпр;
	Иначе
		КурсУпр = Неопределено;
	КонецЕсли;
	
	Если КурсУпр = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ДокументОбъект.Дата);
		КурсУпр        = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;
	
	ВалютаРегл     = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(); 
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл, ДокументОбъект.Дата);
	КурсРегл	   = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	
	// получим результат запроса по таблице автомобилей документа
	Если РезультатЗапросаПоАвтомобилям = Неопределено
		ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса")) Тогда
		// Если неопределен результат запроса по таблице автомобилей, значит она в документе.
		РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей(Ложь);
	КонецЕсли;
	
	ТаблицаАвтомобилей = РезультатЗапросаПоАвтомобилям.Выгрузить();
	
	СтруктураОтбора = Новый Структура("Автомобиль");
	ЕстьСуммаНДС = Ложь;
	ЕстьСуммаНДСУпр = Ложь;
	Если РезультатЗапросаПоПартиям = Неопределено Тогда
		Если ПередаватьНаКомиссиюВсеАвтомобили Тогда
			// идем по всем автомобилям ТЧ документа
			НаборЗаписейОстатковАвтомобилей = ТаблицаАвтомобилей.Скопировать();
			ЕстьСуммаНДС = ЕстьРеквизит(НаборЗаписейОстатковАвтомобилей, "СуммаНДС");
		Иначе
			// идем по движениям которые сделал документ по регистру "ОстаткиАвтомобилей"
			НаборЗаписейОстатковАвтомобилей = ДокументОбъект.Движения.ОстаткиАвтомобилей;
			ЕстьСуммаНДС = Истина;
			ЕстьСуммаНДСУпр = Истина;
		КонецЕсли; 
	Иначе
		Если ТипЗнч(РезультатЗапросаПоПартиям) = Тип("РезультатЗапроса") Тогда
			НаборЗаписейОстатковАвтомобилей = РезультатЗапросаПоПартиям.Выгрузить().Скопировать();
		Иначе
			НаборЗаписейОстатковАвтомобилей = РезультатЗапросаПоПартиям.Скопировать();
		КонецЕсли;
		ЕстьСуммаНДС = ЕстьРеквизит(РезультатЗапросаПоПартиям, "СуммаНДС");
		ЕстьСуммаНДСУпр = ЕстьРеквизит(РезультатЗапросаПоПартиям, "СуммаНДСУпр");
	КонецЕсли; 
	
	Для Каждого ЗаписьОстатков Из НаборЗаписейОстатковАвтомобилей Цикл
		// ищем списанный автомобиль в таблице документа
		СтруктураОтбора.Автомобиль = ЗаписьОстатков.Автомобиль;
		МассивНайденныхСтрок       = ТаблицаАвтомобилей.НайтиСтроки(СтруктураОтбора);
		
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			// передадим автомобиль на комиссию
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения           = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период                = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
			НоваяЗапись.ДокументПередачи      = ДокументОбъект.Ссылка;
			НоваяЗапись.Партия                = ЗаписьОстатков.Партия;
			НоваяЗапись.ГТД                   = ЗаписьОстатков.Автомобиль.ГТД;
			НоваяЗапись.Контрагент            = Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов = ДоговорВзаиморасчетов;
			НоваяЗапись.Автомобиль            = ЗаписьОстатков.Автомобиль;
			НоваяЗапись.ХозОперация           = ДокументОбъект.ХозОперация;
			НоваяЗапись.Количество            = ЗаписьОстатков.Количество;
			КолВо = (1 / ТекСтрока.Количество) * НоваяЗапись.Количество;
			НоваяЗапись.Сумма                 = Окр(?(ТекСтрока.СуммаВсего = NULL, 0,
				РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрока.СуммаВсего,
					ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл) * КолВо), 2);
			НоваяЗапись.СуммаУпр              = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.Сумма,
				ВалютаРегл, КурсРегл, ВалютаУпр, КурсУпр), 2);
			НоваяЗапись.СуммаНДС              = Окр(?(ТекСтрока.СуммаНДС = NULL, 0,
				РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрока.СуммаНДС, ДокументОбъект.ВалютаДокумента,
					ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл) / ТекСтрока.Количество * КолВо), 2);
			Если ПередаватьНаКомиссиюВсеАвтомобили Тогда
				НоваяЗапись.СуммаСебестоимостиУпр  = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ЗаписьОстатков.СуммаВсего,
					ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр), 2);
				НоваяЗапись.СуммаСебестоимостиРегл = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ЗаписьОстатков.СуммаВсего,
					ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл), 2);
				Если ЕстьСуммаНДС Тогда
					НоваяЗапись.СуммаСебестоимостиНДСУпр = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ЗаписьОстатков.СуммаНДС,
						ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр), 2);
					НоваяЗапись.СуммаСебестоимостиНДСРегл = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ЗаписьОстатков.СуммаНДС,
						ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл), 2);
				КонецЕсли;
			Иначе
				НоваяЗапись.СуммаСебестоимостиУпр  = ЗаписьОстатков.СуммаУпр;
				НоваяЗапись.СуммаСебестоимостиРегл = ЗаписьОстатков.Сумма;
				Если ЕстьСуммаНДСУпр Тогда
					НоваяЗапись.СуммаСебестоимостиНДСУпр = ЗаписьОстатков.СуммаНДСУпр;
				КонецЕсли;
				Если ЕстьСуммаНДС Тогда
					НоваяЗапись.СуммаСебестоимостиНДСРегл = ЗаписьОстатков.СуммаНДС;
				КонецЕсли;
			КонецЕсли;
			НоваяЗапись.СуммаСебестоимостиБезНДСУпр = 
				НоваяЗапись.СуммаСебестоимостиУпр - НоваяЗапись.СуммаСебестоимостиНДСУпр;
			НоваяЗапись.СуммаСебестоимостиБезНДСРегл = 
				НоваяЗапись.СуммаСебестоимостиРегл - НоваяЗапись.СуммаСебестоимостиНДСРегл;
		КонецЦикла;
	КонецЦикла;
	
	// запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	
	Если ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	РезультатЗапросаПоАвтомобилям = Неопределено;
	РезультатЗапросаПоПартиям     = Неопределено;
	Сторно                        = Неопределено;
	ДокументОбъект                = Неопределено;
	
	// все ОК
	Возврат Истина;
КонецФункции

// Формирует движения по регистру расход (списание недостач или отчет комиссионера)
// Возвращаемое значение: Булево. Истина - все хорошо, Ложь - чего-то не так.
Функция Расход() Экспорт
	ВсеОК = Истина;
	
	// получим права пользователя
	ОтрицательныеОстаткиРазрешены = (ПраваИНастройкиПользователя.Значение("РазрешитьОтрицательныеСкладскиеОстатки", ДокументОбъект) <>
									 Перечисления.ВидыРазрешенныхОтрицательныхОстатков.Запрещены);
	
	КонстантыПартияТоваровОтрицательныхОстатков = Константы.ПартияТоваровОтрицательныхОстатков.Получить();
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчетаКомпании.Получить(); 
	Если ЕстьРеквизит(ДокументОбъект, "КурсВалютыУпр") Тогда
		КурсУпр = ДокументОбъект.КурсВалютыУпр;
	Иначе
		КурсУпр = Неопределено;
	КонецЕсли;
	
	Если КурсУпр = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ДокументОбъект.Дата);
		КурсУпр        = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("Автомобиль");
	
	Если (РезультатЗапросаПоАвтомобилям = Неопределено)
		 ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса")) Тогда
		 // Если неопределен результат запроса по таблице автомобилей, значит она в документе.
		 РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей();
	КонецЕсли;
	
	ВыборкаАвтомобили = РезультатЗапросаПоАвтомобилям.Выбрать();
	
	// списываем партии
	РезультатЗапросаПоПартиямОтданным = ПолучитьТаблицуПартийОтданных();
	ТаблицаПартий = РезультатЗапросаПоПартиямОтданным.Выгрузить();
	
	// идем по таблице товаров и списываем партии
	Пока ВыборкаАвтомобили.Следующий() Цикл
		// получим строки таблицы партий с нашими автомобилями
		СтруктураОтбора.Автомобиль = ВыборкаАвтомобили.Автомобиль;
		МассивНайденныхСтрок       = ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
		
		// инициализируем переменные для расчета усредненной цены списанных партий
		ОбщаяСумма = 0;
		ОбщаяСуммаУпр = 0;
		ОбщаяСуммаРозничная = 0;
		ОбщаяСуммаНДС = 0;
		ОбщееКоличество = 0;
		
		ЕстьПартииТоваров = Ложь;
		
		// теперь списываем
		НадоСписать = ВыборкаАвтомобили.Количество;
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			ЕстьПартииТоваров = Истина; // если есть партия с которой производим списание, значит и цены будем брать из списаний
			
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения           = ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период                = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
			НоваяЗапись.ДокументПередачи      = ТекСтрока.ДокументПередачи;
			НоваяЗапись.Партия                = ТекСтрока.Партия;
			НоваяЗапись.Контрагент            = Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов = ДоговорВзаиморасчетов;
			НоваяЗапись.Автомобиль            = ВыборкаАвтомобили.Автомобиль;
			НоваяЗапись.ГТД                   = ТекСтрока.ГТД;
			НоваяЗапись.Количество            = Мин(НадоСписать, ТекСтрока.Количество);
			НоваяЗапись.ХозОперация           = ДокументОбъект.ХозОперация; 
			Если ОтчетКомиссионера Тогда
				НоваяЗапись.СуммаПродажи = Окр(?(ВыборкаАвтомобили.СуммаВсего = NULL, 0,
					РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте((ВыборкаАвтомобили.СуммаВсего / ВыборкаАвтомобили.Количество)
					* НоваяЗапись.Количество, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр)), 2);
			КонецЕсли;
			НоваяЗапись.Сумма                  = Окр(?(ТекСтрока.Количество < НадоСписать, ТекСтрока.Сумма,
				ТекСтрока.Сумма / ТекСтрока.Количество * НадоСписать), 2);
			НоваяЗапись.СуммаУпр               = Окр(?(ТекСтрока.Количество < НадоСписать, ТекСтрока.СуммаУпр,
				ТекСтрока.СуммаУпр / ТекСтрока.Количество * НадоСписать), 2);
			НоваяЗапись.СуммаНДС               = Окр(?(ТекСтрока.Количество < НадоСписать, ТекСтрока.СуммаНДС,
				ТекСтрока.СуммаНДС / ТекСтрока.Количество * НадоСписать), 2);
			НоваяЗапись.СуммаСебестоимостиУпр  = Окр(?(ТекСтрока.Количество < НадоСписать, ТекСтрока.СуммаСебестоимостиУпр,
				ТекСтрока.СуммаСебестоимостиУпр / ТекСтрока.Количество * НадоСписать), 2);
			НоваяЗапись.СуммаСебестоимостиРегл = Окр(?(ТекСтрока.Количество < НадоСписать, ТекСтрока.СуммаСебестоимостиРегл,
				ТекСтрока.СуммаСебестоимостиРегл / ТекСтрока.Количество * НадоСписать), 2);
			
			// запомним удельные значения списания для отрицательной партии автомобилей
			ОбщаяСумма      = ОбщаяСумма + НоваяЗапись.Сумма;
			ОбщаяСуммаУпр   = ОбщаяСуммаУпр + НоваяЗапись.СуммаУпр;
			ОбщаяСуммаНДС   = ОбщаяСуммаНДС + НоваяЗапись.СуммаНДС;
			ОбщееКоличество = ОбщееКоличество + НоваяЗапись.Количество;
			
			// уменьшаем количество которое надо списать
			НадоСписать = НадоСписать - НоваяЗапись.Количество;
			
			// удалим ненужные строки
			ТаблицаПартий.Удалить(ТекСтрока);
			
			Если НадоСписать <= 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		// проверим чего осталось
		Если НадоСписать > 0 И ОтрицательныеОстаткиРазрешены  Тогда
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения           = ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период                = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
			НоваяЗапись.ДокументПередачи      = КонстантыПартияТоваровОтрицательныхОстатков;
			НоваяЗапись.Партия                = КонстантыПартияТоваровОтрицательныхОстатков;
			НоваяЗапись.Контрагент            = Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов = ДоговорВзаиморасчетов;
			НоваяЗапись.Автомобиль            = ВыборкаАвтомобили.Автомобиль;
			НоваяЗапись.ГТД                   = Справочники.ГТД.ПустаяСсылка();
			НоваяЗапись.Количество            = НадоСписать;
			НоваяЗапись.ХозОперация           = ДокументОбъект.ХозОперация; 
			
			Если ОтчетКомиссионера Тогда
				СуммаПродажи = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
					(ВыборкаАвтомобили.СуммаВсего / ВыборкаАвтомобили.Количество) * НадоСписать,
					ДокументОбъект.ВалютаДокумента,
					ДокументОбъект.КурсДокумента,
					ВалютаУпр,
					КурсУпр
				);
				НоваяЗапись.СуммаПродажи = Окр(?(ВыборкаАвтомобили.СуммаВсего = NULL, 0, СуммаПродажи), 2);
			КонецЕсли;
			// теперь попробуем определиться с суммой списания
			Если ЕстьПартииТоваров Тогда
				ЦенаПоследнейПартии          = ОбщаяСумма / ОбщееКоличество;
				ЦенаРозничнаяПоследнейПартии = ОбщаяСуммаРозничная / ОбщееКоличество;
				ЦенаУпрПоследнейПартии       = ОбщаяСуммаУпр / ОбщееКоличество;
				УдельныйНДСПоследнейПартии   = ОбщаяСуммаНДС / ОбщееКоличество;
			Иначе // Подлежит исправлению. В противном случае цена нам неизвестна
				ЦенаПоследнейПартии        = 0;
				ЦенаУпрПоследнейПартии     = 0;
				УдельныйНДСПоследнейПартии = 0;
			КонецЕсли;
			НоваяЗапись.Сумма    = Окр(ЦенаПоследнейПартии * НадоСписать, 2);
			НоваяЗапись.СуммаУпр = Окр(ЦенаУпрПоследнейПартии * НадоСписать, 2);
			НоваяЗапись.СуммаНДС = Окр(УдельныйНДСПоследнейПартии * НадоСписать, 2);

		ИначеЕсли НадоСписать > 0 Тогда
			// если после списания по партиям осталось еще что-то не списанное то сообщим
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Автомобиль <%1> не передавался на реализацию в количестве %2.'"),
				ВыборкаАвтомобили.Автомобиль,
				ВыборкаАвтомобили.Количество
			);
				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаАвтомобили.Автомобиль);
			ВсеОК = Ложь;
		КонецЕсли;
	КонецЦикла;

	// запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	
	Если ВсеОК И ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	РезультатЗапросаПоАвтомобилям = Неопределено;
	РезультатЗапросаПоПартиям     = Неопределено;
	Сторно                        = Неопределено;
	ДокументОбъект                = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

// переоценка товаров
Функция Переоценка() Экспорт
	Если (РезультатЗапросаПоАвтомобилям = Неопределено)
		ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса")) Тогда
		// Если неопределен результат запроса по таблице автомобилей, значит она в документе.
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПереоценкаАвтомобили.Автомобиль КАК Автомобиль,
		|	ПереоценкаАвтомобили.ДокументПередачи КАК ДокументПередачи,
		|	ПереоценкаАвтомобили.Количество КАК Количество,
		|	ПереоценкаАвтомобили.Цена КАК ЦенаНовая,
		|	ПереоценкаАвтомобили.СуммаНДС КАК СуммаНДСНовая
		|ИЗ
		|	Документ.ПереоценкаАвтомобилей.Автомобили КАК ПереоценкаАвтомобили
		|ГДЕ
		|	ПереоценкаАвтомобили.Ссылка=&Ссылка";
		Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
		
		РезультатЗапросаПоАвтомобилям = Запрос.Выполнить();
	КонецЕсли;
	
	// списываем партии
	РезультатЗапросаПоПартиямОтданным = ПолучитьТаблицуПартийОтданных();
	
	// открываем выборки
	ВыборкаАвтомобиль = РезультатЗапросаПоАвтомобилям.Выбрать();
	ВыборкаПартии     = РезультатЗапросаПоПартиямОтданным.Выбрать();
	
	// всякие валюты и структуры отбора
	ВалютаУпр = Константы.ВалютаУправленческогоУчетаКомпании.Получить(); 
	Если ЕстьРеквизит(ДокументОбъект, "КурсВалютыУпр") Тогда
		КурсУпр = ДокументОбъект.КурсВалютыУпр;
	Иначе
		КурсУпр = Неопределено;
	КонецЕсли;
	
	Если КурсУпр = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ДокументОбъект.Дата);
		КурсУпр        = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;
	
	ВалютаРегл     = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл, ДокументОбъект.Дата);
	КурсРегл       = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	
	СтруктураОтбора = Новый Структура("Автомобиль,ДокументПередачи");
	
	// идем по выборкам
	Пока ВыборкаАвтомобиль.Следующий() Цикл
		
		// определяем фильтр
		СтруктураОтбора.Автомобиль       = ВыборкаАвтомобиль.Автомобиль;
		СтруктураОтбора.ДокументПередачи = ВыборкаАвтомобиль.ДокументПередачи;
		НадоПереоценить                  = ВыборкаАвтомобиль.Количество;
		
		ВыборкаПартии.Сбросить();
		
		Пока ВыборкаПартии.НайтиСледующий(СтруктураОтбора) Цикл
			// расчет суммы переоценки
			НадоПереоценить = ?(НадоПереоценить = 0, ВыборкаПартии.Количество, НадоПереоценить);
			СуммаПереоценки = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаАвтомобиль.ЦенаНовая,
				ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл)
				* Мин(НадоПереоценить, ВыборкаПартии.Количество);
			СуммаПереоценки = СуммаПереоценки - ?(ВыборкаПартии.Количество = 0, 0,
				(ВыборкаПартии.Сумма / ВыборкаПартии.Количество) * Мин(НадоПереоценить, ВыборкаПартии.Количество));
			
			// расчет суммы НДС
			СуммаНДСПереоценки = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаАвтомобиль.СуммаНДСНовая,
				ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл)
				* Мин(НадоПереоценить, ВыборкаПартии.Количество);
			СуммаНДСПереоценки = СуммаНДСПереоценки - ?(ВыборкаПартии.Количество = 0, 0,
				(ВыборкаПартии.СуммаНДС / ВыборкаПартии.Количество) * Мин(НадоПереоценить, ВыборкаПартии.Количество));
			
			// если нечего переоценивать, то выходим
			Если СуммаПереоценки = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения           = ?(СуммаПереоценки > 0,
												  ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход);
			НоваяЗапись.Период                = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
			НоваяЗапись.ДокументПередачи      = ВыборкаПартии.ДокументПередачи;
			НоваяЗапись.Партия                = ВыборкаПартии.Партия;
			НоваяЗапись.Контрагент            = Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов = ДоговорВзаиморасчетов;
			НоваяЗапись.Автомобиль            = ВыборкаПартии.Автомобиль;
			НоваяЗапись.ГТД                   = ВыборкаПартии.ГТД;
			НоваяЗапись.ХозОперация           = ДокументОбъект.ХозОперация;
			НоваяЗапись.Количество            = 0;
			НоваяЗапись.Сумма                 = Окр(?(СуммаПереоценки > 0, СуммаПереоценки, -СуммаПереоценки), 2);
			НоваяЗапись.СуммаУпр              = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.Сумма,
				ВалютаРегл, ДокументОбъект.Дата, ВалютаУпр, КурсУпр), 2);
			НоваяЗапись.СуммаНДС              = Окр(?(СуммаНДСПереоценки > 0, СуммаНДСПереоценки, -СуммаНДСПереоценки), 2);
			НадоПереоценить                   = НадоПереоценить - Мин(НадоПереоценить, ВыборкаПартии.Количество);
			
			Если НадоПереоценить = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	
	Если ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	РезультатЗапросаПоАвтомобилям = Неопределено;
	РезультатЗапросаПоПартиям     = Неопределено;
	ДокументОбъект                = Неопределено;
	
	Возврат Истина;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// возвращает результат запроса по таблице автомобилей
Функция ПолучитьТаблицуАвтомобилей(НадоПартию = Истина, ИмяРеквизитаДокументПередачи = "ДокументПередачи")
	
	// получим результат запроса по таблице автомобилей
	Запрос  = Новый Запрос();
	ВидДок  = ДокументОбъект.Метаданные().Имя;
	ЕстьГТД = ЕстьРеквизит(ДокументОбъект, "ГТД", "Автомобили");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	" + ВидДок + "Автомобили.Автомобиль КАК Автомобиль,
	|";
	
	// если есть ГТД заполним его
	Если ЕстьГТД Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	" + ВидДок + "Автомобили.ГТД КАК ГТД,";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	" + ?(НадоПартию, ВидДок + "Автомобили." + ИмяРеквизитаДокументПередачи + " КАК ДокументПередачи,", "") + "
	|	Сумма(" + ВидДок + "Автомобили.СуммаНДС) КАК СуммаНДС,
	|	Сумма(" + ВидДок + "Автомобили.Сумма) КАК Сумма,
	|	Сумма(" + ВидДок + "Автомобили.СуммаВсего) КАК СуммаВсего,
	|	Сумма(" + ВидДок + "Автомобили.Количество) КАК Количество
	|ИЗ
	|	Документ." + ВидДок + ".Автомобили КАК " + ВидДок + "Автомобили
	|ГДЕ
	|	  " + ВидДок + "Автомобили.Ссылка=&Ссылка
	|СГРУППИРОВАТЬ ПО Автомобиль" + ?(НадоПартию, ", " + ИмяРеквизитаДокументПередачи, "");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапросаПоАвтомобилям = Запрос.Выполнить();

	Возврат РезультатЗапросаПоАвтомобилям;
КонецФункции

// возвращает результат запроса по таблице отданных партий
Функция ПолучитьТаблицуПартийОтданных(Переоценка = Ложь)
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	АвтомобилиОтданныеОстатки.Автомобиль КАК Автомобиль,
	|	АвтомобилиОтданныеОстатки.ДокументПередачи КАК ДокументПередачи,
	|	АвтомобилиОтданныеОстатки.Партия КАК Партия,
	|	АвтомобилиОтданныеОстатки.ГТД КАК ГТД,
	|	АвтомобилиОтданныеОстатки.КоличествоОстаток КАК Количество,
	|	АвтомобилиОтданныеОстатки.СуммаНДСОстаток КАК СуммаНДС,
	|	АвтомобилиОтданныеОстатки.СуммаОстаток КАК Сумма,
	|	АвтомобилиОтданныеОстатки.СуммаУпрОстаток КАК СуммаУпр,
	|	АвтомобилиОтданныеОстатки.СуммаСебестоимостиУпрОстаток КАК СуммаСебестоимостиУпр,
	|	АвтомобилиОтданныеОстатки.СуммаСебестоимостиРеглОстаток КАК СуммаСебестоимостиРегл
	|
	|ИЗ
	|	РегистрНакопления.АвтомобилиОтданные.Остатки(&Момент) КАК АвтомобилиОтданныеОстатки
	|
	|ГДЕ
	|	  АвтомобилиОтданныеОстатки.Автомобиль В (&Автомобиль)
	|   И АвтомобилиОтданныеОстатки.Контрагент=&Контрагент
	|   И АвтомобилиОтданныеОстатки.ДоговорВзаиморасчетов=&ДоговорВзаиморасчетов
	|	" + ?(Переоценка, "И АвтомобилиОтданныеОстатки.ДокументПередачи В (&ДокументПередачи)", "") + "
	|
	|УПОРЯДОЧИТЬ ПО ДокументПередачи ВОЗР";
	тзАвтомобилей = РезультатЗапросаПоАвтомобилям.Выгрузить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Момент"                , ДокументОбъект.МоментВремени());
	Запрос.УстановитьПараметр("Автомобиль"            , тзАвтомобилей.ВыгрузитьКолонку("Автомобиль"));
	Запрос.УстановитьПараметр("Контрагент"            , Контрагент);
	Запрос.УстановитьПараметр("ДоговорВзаиморасчетов" , ДоговорВзаиморасчетов);
	Если Переоценка Тогда
		Запрос.УстановитьПараметр("ДокументПередачи"  , тзАвтомобилей.ВыгрузитьКолонку("ДокументПередачи"));
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "АвтомобилиОтданные");
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", тзАвтомобилей);
	
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период"                , Новый Диапазон(, ДокументОбъект.Дата));
	ЗначенияБлокировки.Вставить("Контрагент"            , Контрагент);
	ЗначенияБлокировки.Вставить("ДоговорВзаиморасчетов" , ДоговорВзаиморасчетов);
	
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
	
	Если Переоценка Тогда
		ОписаниеИсточника.Вставить("ДокументПередачи", "ДокументПередачи");
	КонецЕсли;
	
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки,
		ЗначенияБлокировки, ОписаниеИсточника);
	
	Возврат Запрос.Выполнить();
КонецФункции

// Формирует движения по сторнированию прихода/расхода
//  ВидДвижения - ВидДвиженияРегистраНакопления. Если Приход, тогда у нас возврат от покупателя иначе - от поставщика
//  Возвращает Истина - все хорошо, Ложь - чего-то не так.
Функция ВозвратАвтомобилей()
	ВсеОК = Истина;
	
	// Получим результат запроса по товарной таблице
	Если (РезультатЗапросаПоАвтомобилям = Неопределено)
		ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса")) Тогда
		// Если неопределен результат запроса по таблице товаров, значит она в документе.
		РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей(Истина, "ДокументПродажи");
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвтомобилиОтданные.Автомобиль КАК Автомобиль,
	|	АвтомобилиОтданные.Контрагент КАК Контрагент,
	|	АвтомобилиОтданные.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	АвтомобилиОтданные.ДокументПередачи КАК ДокументПередачи,
	|	АвтомобилиОтданные.Партия КАК Партия,
	|	АвтомобилиОтданные.ГТД КАК ГТД,
	|	АвтомобилиОтданные.КоличествоОстаток КАК Количество,
	|	АвтомобилиОтданные.СуммаОстаток КАК Сумма,
	|	АвтомобилиОтданные.СуммаНДСОстаток КАК СуммаНДС,
	|	АвтомобилиОтданные.СуммаУпрОстаток КАК СуммаУпр,
	|	АвтомобилиОтданные.СуммаСебестоимостиУпрОстаток КАК СуммаСебестоимостиУпр,
	|	АвтомобилиОтданные.СуммаСебестоимостиРеглОстаток КАК СуммаСебестоимостиРегл
	|ИЗ
	|	РегистрНакопления.АвтомобилиОтданные.Остатки(,Контрагент=&Контрагент И ДоговорВзаиморасчетов=&ДоговорВзаиморасчетов И Автомобиль В (&Автомобиль) И ДокументПередачи В (&ДокументПередачи)) КАК АвтомобилиОтданные
	|";
	тзАвтомобилей = РезультатЗапросаПоАвтомобилям.Выгрузить();
	
	Запрос.УстановитьПараметр("Автомобиль"            , тзАвтомобилей.ВыгрузитьКолонку("Автомобиль"));
	Запрос.УстановитьПараметр("ДокументПередачи"      , тзАвтомобилей.ВыгрузитьКолонку("ДокументПередачи"));
	Запрос.УстановитьПараметр("Контрагент"            , Контрагент);
	Запрос.УстановитьПараметр("ДоговорВзаиморасчетов" , ДоговорВзаиморасчетов);
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "АвтомобилиОтданные");
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", тзАвтомобилей);
	
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период"                , Новый Диапазон(, ДокументОбъект.Дата));
	ЗначенияБлокировки.Вставить("Контрагент"            , Контрагент);
	ЗначенияБлокировки.Вставить("ДоговорВзаиморасчетов" , ДоговорВзаиморасчетов);
	
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Автомобиль"       , "Автомобиль");
	ОписаниеИсточника.Вставить("ДокументПередачи" , "ДокументПередачи");
	
	// Запустим блокировку
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки,
		ЗначенияБлокировки, ОписаниеИсточника);
	
	// Установим текст запроса
	РезультатОтгрузки = Запрос.Выполнить();
	
	// Выгрузим результат запроса в таблицу
	ТаблицаОтгрузки = РезультатОтгрузки.Выгрузить();
	
	// Создадим структуру отбора
	СтруктураОтбора = Новый Структура("Автомобиль,ДокументПередачи");
	
	// Пройдемся по таблице товаров и отсторнируем отгрузку
	ВыборкаАвтомобили = РезультатЗапросаПоАвтомобилям.Выбрать();
	
	Пока ВыборкаАвтомобили.Следующий() Цикл
		
		// Заполним структуру отбора
		СтруктураОтбора.Автомобиль       = ВыборкаАвтомобили.Автомобиль;
		СтруктураОтбора.ДокументПередачи = ВыборкаАвтомобили.ДокументПередачи;
		МассивНайденныхСтрок             = ТаблицаОтгрузки.НайтиСтроки(СтруктураОтбора);
		
		// Пройдемся по найденным строкам и вернем автомобили
		НадоВернуть = ВыборкаАвтомобили.Количество;
		
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			
			НоваяЗапись                        = Добавить();
			НоваяЗапись.ВидДвижения            = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период                 = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор            = ДокументОбъект.Ссылка;
			НоваяЗапись.Контрагент             = ТекСтрока.Контрагент;
			НоваяЗапись.Автомобиль             = ТекСтрока.Автомобиль;
			НоваяЗапись.ДоговорВзаиморасчетов  = ТекСтрока.ДоговорВзаиморасчетов;
			НоваяЗапись.ДокументПередачи       = ТекСтрока.ДокументПередачи;
			НоваяЗапись.Партия                 = ТекСтрока.Партия;
			НоваяЗапись.ГТД                    = ТекСтрока.ГТД;
			НоваяЗапись.Количество             = -Мин(НадоВернуть, ТекСтрока.Количество);
			НоваяЗапись.Сумма                  = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.Сумма,
				ТекСтрока.Сумма / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаУпр               = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаУпр,
				ТекСтрока.СуммаУпр / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаНДС               = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаНДС,
				ТекСтрока.СуммаНДС / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаСебестоимостиУпр  = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаСебестоимостиУпр,
				ТекСтрока.СуммаСебестоимостиУпр / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаСебестоимостиРегл = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаСебестоимостиРегл,
				ТекСтрока.СуммаСебестоимостиРегл / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.ХозОперация            = ДокументОбъект.ХозОперация;
			// Уменьшаем количество которое надо списать
			НадоВернуть = НадоВернуть - (-НоваяЗапись.Количество);
			
			// Удалим ненужные строки
			ТаблицаОтгрузки.Удалить(ТекСтрока);
			
			Если НадоВернуть <= 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		// Проверим чего осталось
		Если НадоВернуть > 0 Тогда
			ВсеОК = Ложь;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Автомобиль <%1> вернуть не удалось, так как автомобиль не передавался на реализацию.'"),
				ВыборкаАвтомобили.Автомобиль);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаАвтомобили.Автомобиль);
		КонецЕсли;
	КонецЦикла;

	// Запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	Если ВсеОК И ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	РезультатЗапросаПоАвтомобилям = Неопределено;
	РезультатЗапросаПоПартиям     = Неопределено;
	ДокументОбъект                = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область Инициализация

ОтчетКомиссионера                 = Ложь;
ПередаватьНаКомиссиюВсеАвтомобили = Ложь;

#КонецОбласти

#КонецЕсли