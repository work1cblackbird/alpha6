// Модуль набора записей регистра накоплений "Товары в производстве"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем РежимПроведения Экспорт; // Режим проведения документа. Если проведение неоперативное - проверок остатков нет

Перем ДокументОбъект Экспорт; // Документ, осуществляющий движение по регистру
Перем РезультатЗапросаПоТоварам Экспорт; // Выборка табличной части или таблица значений табличной части товаров
Перем ДокументЗаказНаряд Экспорт; // Документ заказ-наряд, на основе которого производится перемещение товаров в производство
Перем Цех Экспорт; // Ссылка на цех, на котором необходимо производить приходование или расходование. Если значение неопределено цех находится в табличной части товаров
Перем ПериодДвижения Экспорт; // Период движения регистра. Если период не задан, он берется из ДокументОбъект.Дата
Перем ЕстьСтавкаНДС Экспорт; // Булево. Истина - в таблице товаров есть ставка НДС, Ложь - нет
Перем ШапкаДокумента Экспорт; // Выборка или строка таблицы значений, в которой содержаться необходимые данные о шапке документа
Перем Организация Экспорт;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистру приход (увеличение товара в производстве)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - ошибка.
Функция Приход() Экспорт
	ВсеОК=Истина;
	
	КонтрольЗаполненияОрганизации();
	
	ЕстьСтавкаНДС = ?(ЕстьСтавкаНДС = Неопределено, ЛОЖЬ, ЕстьСтавкаНДС);
	
	ПериодДвижения=?(ПериодДвижения=Неопределено,ШапкаДокумента.Дата,ПериодДвижения);
	ВалютаУпр=Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	Если ШапкаДокумента.КурсВалютыУпр=0 Тогда
		СтруктураКурса=РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр,ПериодДвижения);
		КурсУпр=СтруктураКурса.Курс/?(СтруктураКурса.Кратность=0,1,СтруктураКурса.Кратность);
	Иначе
		КурсУпр=ШапкаДокумента.КурсВалютыУпр;
	КонецЕсли; 
	
	// Получим таблицу товарного состава
	Если (РезультатЗапросаПоТоварам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоТоварам=ПолучитьТаблицуТоваров();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам=РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	ВремРезультатЗапросаПоТоварам=РезультатЗапросаПоТоварам.Скопировать();
	ЕстьГТД=РезультатЗапросаПоТоварам.Колонки.Найти("ГТД")<>Неопределено;
	КолонкиГруппировок="Номенклатура,ХарактеристикаНоменклатуры,СтатусПартии,Партия"+?(ЕстьСтавкаНДС,",СтавкаНДС","")+?(ЕстьГТД,",ГТД","");
	Если ВремРезультатЗапросаПоТоварам.Колонки.Найти("СкладКомпании")<>Неопределено Тогда
		КолонкиГруппировок=КолонкиГруппировок+",СкладКомпании";
	КонецЕсли;
	Если ДокументЗаказНаряд=Неопределено Тогда
		КолонкиГруппировок=КолонкиГруппировок+",ЗаказНаряд";
	КонецЕсли; 
	Если Цех=Неопределено Тогда
		КолонкиГруппировок=КолонкиГруппировок+",Цех";
	КонецЕсли; 
	КолонкиСуммирования="Количество,Сумма,СуммаНДС";
	Если ВремРезультатЗапросаПоТоварам.Колонки.Найти("СуммаУпр")<>Неопределено Тогда
		КолонкиСуммирования=КолонкиСуммирования+",СуммаУпр";
	КонецЕсли; 
	Если ВремРезультатЗапросаПоТоварам.Колонки.Найти("СуммаНДСУпр")<>Неопределено Тогда
		КолонкиСуммирования=КолонкиСуммирования+",СуммаНДСУпр";
	КонецЕсли; 
	Если ВремРезультатЗапросаПоТоварам.Колонки.Найти("СуммаБезНДС")<>Неопределено Тогда
		КолонкиСуммирования=КолонкиСуммирования+",СуммаБезНДС";
	КонецЕсли; 
	Если ВремРезультатЗапросаПоТоварам.Колонки.Найти("СуммаБезНДСУпр")<>Неопределено Тогда
		КолонкиСуммирования=КолонкиСуммирования+",СуммаБезНДСУпр";
	КонецЕсли; 
	ВремРезультатЗапросаПоТоварам.Свернуть(КолонкиГруппировок,КолонкиСуммирования);
	Если ДокументОбъект.Метаданные().Движения.Содержит(Метаданные.РегистрыНакопления.ГТДПартийТоваровКомпании) Тогда
		НаборЗаписейГТД=ДокументОбъект.Движения.ГТДПартийТоваровКомпании.Выгрузить();
	Иначе
		НаборЗаписейГТД=РезультатЗапросаПоТоварам.Скопировать();
	КонецЕсли; 
	// Перебираем строки товаров
	Для каждого СтрокаТоваров Из ВремРезультатЗапросаПоТоварам Цикл
		СуммаПоПартии=0;
		СуммаНДСПоПартии=0;
		СуммаБезНДСПоПартии=0;
		СуммаУпрПоПартии=0;
		СуммаНДСУпрПоПартии=0;
		СуммаБезНДСУпрПоПартии=0;
		Количество=СтрокаТоваров.Количество;
		ТекЗаказНаряд=?(ДокументЗаказНаряд=Неопределено,СтрокаТоваров.ЗаказНаряд,ДокументЗаказНаряд);
		ТекЦех=?(Цех=Неопределено,СтрокаТоваров.Цех,Цех);
		//Если ВсеОК И Количество<>0 Тогда
			СтруктураОтбора=Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Партия",СтрокаТоваров.Номенклатура,СтрокаТоваров.ХарактеристикаНоменклатуры,СтрокаТоваров.Партия);
			//Если НЕ ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
			//	СтруктураОтбора.Удалить("ХарактеристикаНоменклатуры");
			//КонецЕсли; 
			МассивНайденныхСтрокГТД=НаборЗаписейГТД.НайтиСтроки(СтруктураОтбора);
			Для СчГТД=0 По МассивНайденныхСтрокГТД.ВГраница() Цикл
				// Создаем запись регистра партий товаров в производстве
				ТекСтрокаГТД=МассивНайденныхСтрокГТД[СчГТД];
				НоваяЗапись=Добавить();
				НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период=ПериодДвижения;
				НоваяЗапись.Регистратор=ШапкаДокумента.Ссылка;
				НоваяЗапись.Номенклатура=ТекСтрокаГТД.Номенклатура;
				НоваяЗапись.ХарактеристикаНоменклатуры=ТекСтрокаГТД.ХарактеристикаНоменклатуры;
				НоваяЗапись.ЗаказНаряд=ТекЗаказНаряд;
				НоваяЗапись.Цех=ТекЦех;
				НоваяЗапись.Организация=ЗапасыТоваров.ОрганизацияДляДвиженийВПроизводстве(Организация, НоваяЗапись.Цех, НоваяЗапись.Период);
				НоваяЗапись.СкладИсточник=СтрокаТоваров.СкладКомпании;
				НоваяЗапись.СтатусПартии=СтрокаТоваров.СтатусПартии;
				НоваяЗапись.Партия=ТекСтрокаГТД.Партия;
				НоваяЗапись.ГТД=ТекСтрокаГТД.ГТД;
				НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
				Если ЕстьСтавкаНДС Тогда
					НоваяЗапись.СтавкаНДС = СтрокаТоваров.СтавкаНДС;
				Иначе
					НоваяЗапись.СтавкаНДС = СтрокаТоваров.Номенклатура.СтавкаНДС;
				КонецЕсли;
				НоваяЗапись.Количество=Мин(ТекСтрокаГТД.Количество,Количество);
				КолВо=НоваяЗапись.Количество/СтрокаТоваров.Количество;
				// Пересчитаем сумму товара в валюту управленческого учета
				НоваяЗапись.Сумма=Окр(СтрокаТоваров.Сумма*КолВо,2);
				НоваяЗапись.СуммаНДС=Окр(СтрокаТоваров.СуммаНДС*КолВо,2);
				Попытка
					СуммаУпр=СтрокаТоваров.СуммаУпр;
				Исключение
					СуммаУпр=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.Сумма,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр);
				КонецПопытки;
				СуммаУпр=СуммаУпр*КолВо;
				НоваяЗапись.СуммаУпр=Окр(СуммаУпр,2);
				Попытка 
					СуммаНДСУпр=СтрокаТоваров.СуммаНДСУпр;
				Исключение
					СуммаНДСУпр=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр);
				КонецПопытки;
				СуммаНДСУпр=СуммаНДСУпр*КолВо;
				НоваяЗапись.СуммаНДСУпр=Окр(СуммаНДСУпр,2);
				Попытка 
					СуммаБезНДС=СтрокаТоваров.СуммаБезНДС;
					СуммаБезНДС=СуммаБезНДС*КолВо;
				Исключение
					СуммаБезНДС=НоваяЗапись.Сумма-НоваяЗапись.СуммаНДС;
				КонецПопытки;
				НоваяЗапись.СуммаБезНДС=Окр(СуммаБезНДС,2);
				Попытка 
					СуммаБезНДСУпр=СтрокаТоваров.СуммаБезНДСУпр;
					СуммаБезНДСУпр=СуммаБезНДСУпр*КолВо;
				Исключение
					СуммаБезНДСУпр=НоваяЗапись.СуммаУпр-НоваяЗапись.СуммаНДСУпр;
				КонецПопытки;
				НоваяЗапись.СуммаБезНДСУпр=Окр(СуммаБезНДСУпр,2);
				ТекСтрокаГТД.Количество=ТекСтрокаГТД.Количество-НоваяЗапись.Количество;
				Количество=Количество-НоваяЗапись.Количество;
				СуммаПоПартии=СуммаПоПартии+НоваяЗапись.Сумма;
				СуммаНДСПоПартии=СуммаНДСПоПартии+НоваяЗапись.СуммаНДС;
				СуммаБезНДСПоПартии=СуммаБезНДСПоПартии+НоваяЗапись.СуммаБезНДС;
				СуммаУпрПоПартии=СуммаУпрПоПартии+НоваяЗапись.СуммаУпр;
				СуммаНДСУпрПоПартии=СуммаНДСУпрПоПартии+НоваяЗапись.СуммаНДСУпр;
				СуммаБезНДСУпрПоПартии=СуммаБезНДСУпрПоПартии+НоваяЗапись.СуммаБезНДСУпр;
				Если ТекСтрокаГТД.Количество=0 Тогда
					НаборЗаписейГТД.Удалить(ТекСтрокаГТД);
				КонецЕсли;
				Если Количество=0 Тогда
					Прервать;
				КонецЕсли; 
			КонецЦикла;
			Если Количество>0 Тогда
				НоваяЗапись=Добавить();
				НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период=ПериодДвижения;
				НоваяЗапись.Регистратор=ШапкаДокумента.Ссылка;
				НоваяЗапись.Номенклатура=СтрокаТоваров.Номенклатура;
				НоваяЗапись.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры;
				НоваяЗапись.ЗаказНаряд=ТекЗаказНаряд;
				НоваяЗапись.Цех=ТекЦех;
				НоваяЗапись.Организация=ЗапасыТоваров.ОрганизацияДляДвиженийВПроизводстве(Организация, НоваяЗапись.Цех, НоваяЗапись.Период);
				НоваяЗапись.СкладИсточник=СтрокаТоваров.СкладКомпании;
				НоваяЗапись.СтатусПартии=СтрокаТоваров.СтатусПартии;
				НоваяЗапись.Партия=СтрокаТоваров.Партия;
				НоваяЗапись.ГТД=Справочники.ГТД.ПустаяСсылка();
				НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
				Если ЕстьСтавкаНДС Тогда
					НоваяЗапись.СтавкаНДС = СтрокаТоваров.СтавкаНДС;
				Иначе
					НоваяЗапись.СтавкаНДС = СтрокаТоваров.Номенклатура.СтавкаНДС;
				КонецЕсли;
				НоваяЗапись.Количество=Количество;
				КолВо=НоваяЗапись.Количество/СтрокаТоваров.Количество;
				// Пересчитаем сумму товара в валюту управленческого учета
				НоваяЗапись.Сумма=Окр(СтрокаТоваров.Сумма*КолВо,2);
				НоваяЗапись.СуммаНДС=Окр(СтрокаТоваров.СуммаНДС*КолВо,2);
				Попытка
					СуммаУпр=СтрокаТоваров.СуммаУпр;
				Исключение
					СуммаУпр=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.Сумма,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр);
				КонецПопытки;
				СуммаУпр=СуммаУпр*КолВо;
				НоваяЗапись.СуммаУпр=Окр(СуммаУпр,2);
				Попытка 
					СуммаНДСУпр=СтрокаТоваров.СуммаНДСУпр;
				Исключение
					СуммаНДСУпр=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр);
				КонецПопытки;
				СуммаНДСУпр=СуммаНДСУпр*КолВо;
				НоваяЗапись.СуммаНДСУпр=Окр(СуммаНДСУпр,2);
				Попытка 
					СуммаБезНДС=СтрокаТоваров.СуммаБезНДС;
					СуммаБезНДС=СуммаБезНДС*КолВо;
				Исключение
					СуммаБезНДС=НоваяЗапись.Сумма-НоваяЗапись.СуммаНДС;
				КонецПопытки;
				НоваяЗапись.СуммаБезНДС=Окр(СуммаБезНДС,2);
				Попытка 
					СуммаБезНДСУпр=СтрокаТоваров.СуммаБезНДСУпр;
					СуммаБезНДСУпр=СуммаБезНДСУпр*КолВо;
				Исключение
					СуммаБезНДСУпр=НоваяЗапись.СуммаУпр-НоваяЗапись.СуммаНДСУпр;
				КонецПопытки;
				НоваяЗапись.СуммаБезНДСУпр=Окр(СуммаБезНДСУпр,2);
				СуммаПоПартии=СуммаПоПартии+НоваяЗапись.Сумма;
				СуммаНДСПоПартии=СуммаНДСПоПартии+НоваяЗапись.СуммаНДС;
				СуммаБезНДСПоПартии=СуммаБезНДСПоПартии+НоваяЗапись.СуммаБезНДС;
				СуммаУпрПоПартии=СуммаУпрПоПартии+НоваяЗапись.СуммаУпр;
				СуммаНДСУпрПоПартии=СуммаНДСУпрПоПартии+НоваяЗапись.СуммаНДСУпр;
				СуммаБезНДСУпрПоПартии=СуммаБезНДСУпрПоПартии+НоваяЗапись.СуммаБезНДСУпр;
			КонецЕсли; 
			НоваяЗапись.Сумма=НоваяЗапись.Сумма+(СтрокаТоваров.Сумма-СуммаПоПартии);
			НоваяЗапись.СуммаНДС=НоваяЗапись.СуммаНДС+(СтрокаТоваров.СуммаНДС-СуммаНДСПоПартии);
			Попытка
				НоваяЗапись.СуммаБезНДС=НоваяЗапись.СуммаБезНДС+(СтрокаТоваров.СуммаБезНДС-СуммаБезНДСПоПартии);
			Исключение
			КонецПопытки; 
			Попытка
				НоваяЗапись.СуммаУпр=НоваяЗапись.СуммаУпр+(СтрокаТоваров.СуммаУпр-СуммаУпрПоПартии);
			Исключение
			КонецПопытки;
			Попытка
				НоваяЗапись.СуммаНДСУпр=НоваяЗапись.СуммаНДСУпр+(СтрокаТоваров.СуммаНДСУпр-СуммаНДСУпрПоПартии);
			Исключение
			КонецПопытки; 
			Попытка
				НоваяЗапись.СуммаБезНДСУпр=НоваяЗапись.СуммаБезНДСУпр+(СтрокаТоваров.СуммаБезНДСУпр-СуммаБезНДСУпрПоПартии);
			Исключение
			КонецПопытки; 
		//КонецЕсли; 
	КонецЦикла; 
	
	// Запись движений
	Если ВсеОК Тогда Записать(); КонецЕсли; 
	
	ДокументОбъект=Неопределено;
	ШапкаДокумента=Неопределено;
	РезультатЗапросаПоТоварам=Неопределено;
	ДокументЗаказНаряд=Неопределено;
	
	Возврат ВсеОК;
КонецФункции

// Формирует движения по регистру расход (уменьшение товара в производстве)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - ошибка.
Функция Расход() Экспорт
	ВсеОК=Истина;
	
	КонтрольЗаполненияОрганизации();
	
	ЕстьСтавкаНДС = ?(ЕстьСтавкаНДС = Неопределено, ЛОЖЬ, ЕстьСтавкаНДС);
	
	ПериодДвижения=?(ПериодДвижения=Неопределено,ШапкаДокумента.Дата,ПериодДвижения);
	ВалютаУпр=Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	Если ШапкаДокумента.КурсВалютыУпр=0 Тогда
		СтруктураКурса=РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр,ПериодДвижения);
		КурсУпр=СтруктураКурса.Курс/?(СтруктураКурса.Кратность=0,1,СтруктураКурса.Кратность);
	Иначе
		КурсУпр=ШапкаДокумента.КурсВалютыУпр;
	КонецЕсли; 
	
	// получим таблицу товарного состава
	Если (РезультатЗапросаПоТоварам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоТоварам=ПолучитьТаблицуТоваров();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам=РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	ВремРезультатЗапросаПоТоварам=РезультатЗапросаПоТоварам.Скопировать();
	КолонкиГруппировок="Номенклатура,ХарактеристикаНоменклатуры,СтатусПартии,Партия"+?(ЕстьСтавкаНДС,",СтавкаНДС","");
	Если ДокументЗаказНаряд=Неопределено Тогда
		КолонкиГруппировок=КолонкиГруппировок+",ЗаказНаряд";
	КонецЕсли; 
	Если Цех=Неопределено Тогда
		КолонкиГруппировок=КолонкиГруппировок+",Цех";
	КонецЕсли; 
	КолонкиСуммирования="Количество,Сумма,СуммаНДС";
	Если ВремРезультатЗапросаПоТоварам.Колонки.Найти("СуммаБезНДС")<>Неопределено Тогда
		КолонкиСуммирования=КолонкиСуммирования+",СуммаБезНДС";
	КонецЕсли; 
	Если ВремРезультатЗапросаПоТоварам.Колонки.Найти("СуммаУпр")<>Неопределено Тогда
		КолонкиСуммирования=КолонкиСуммирования+",СуммаУпр";
	КонецЕсли; 
	Если ВремРезультатЗапросаПоТоварам.Колонки.Найти("СуммаНДСУпр")<>Неопределено Тогда
		КолонкиСуммирования=КолонкиСуммирования+",СуммаНДСУпр";
	КонецЕсли; 
	Если ВремРезультатЗапросаПоТоварам.Колонки.Найти("СуммаБезНДСУпр")<>Неопределено Тогда
		КолонкиСуммирования=КолонкиСуммирования+",СуммаБезНДСУпр";
	КонецЕсли; 
	ВремРезультатЗапросаПоТоварам.Свернуть(КолонкиГруппировок,КолонкиСуммирования);
	ЗапросПоПроизводству = Новый Запрос;
	ЗапросПоПроизводству.Текст = "ВЫБРАТЬ
	|	ТоварыВПроизводстве.ЗаказНаряд КАК ЗаказНаряд,
	|	ТоварыВПроизводстве.Цех КАК Цех,
	|	ТоварыВПроизводстве.Номенклатура КАК Номенклатура,
	|	ТоварыВПроизводстве.Организация КАК Организация,
	|	ТоварыВПроизводстве.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ТоварыВПроизводстве.Количество) КАК ВПроизводстве
	|ИЗ
	|	РегистрНакопления.ТоварыВПроизводстве КАК ТоварыВПроизводстве
	|ГДЕ 
	|	(Номенклатура В (&Номенклатура)) И (ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)) И
	|	(ТоварыВПроизводстве.ВидДвижения = &ВидДвиженияРегистра) И 
	|	(НЕ(ТоварыВПроизводстве.Регистратор ССЫЛКА Документ.ЗаказНаряд))
	|	"+?(ДокументЗаказНаряд=Неопределено,"","И ТоварыВПроизводстве.ЗаказНаряд=&ЗаказНаряд")+"
	|	"+?(Цех=Неопределено,"","И ТоварыВПроизводстве.Цех=&Цех")+"
	|	И (&БезФильтраПоОрганизации
	|		ИЛИ ТоварыВПроизводстве.Организация = &Организация)
	|СГРУППИРОВАТЬ ПО
	|	ТоварыВПроизводстве.ЗаказНаряд,
	|	ТоварыВПроизводстве.Цех,
	|	ТоварыВПроизводстве.Номенклатура,
	|	ТоварыВПроизводстве.ХарактеристикаНоменклатуры
	|";
	ЗапросПоПроизводству.УстановитьПараметр("ЗаказНаряд",ДокументЗаказНаряд);
	ЗапросПоПроизводству.УстановитьПараметр("Цех",Цех);
	ЗапросПоПроизводству.УстановитьПараметр("БезФильтраПоОрганизации",
		ЗапасыТоваров.ФильтрЗапросаПоОрганизации(ПериодДвижения)
	);
	ЗапросПоПроизводству.УстановитьПараметр("Организация" , Организация);
	ЗапросПоПроизводству.УстановитьПараметр("Номенклатура",
		ВремРезультатЗапросаПоТоварам.ВыгрузитьКолонку("Номенклатура")
	);
	ЗапросПоПроизводству.УстановитьПараметр("ХарактеристикаНоменклатуры",
		ВремРезультатЗапросаПоТоварам.ВыгрузитьКолонку("ХарактеристикаНоменклатуры")
	);
	ЗапросПоПроизводству.УстановитьПараметр("ВидДвиженияРегистра",ВидДвиженияНакопления.Приход);
	ВыборкаПоПроизводствуПриход = ЗапросПоПроизводству.Выполнить().Выбрать();
	ЗапросПоПроизводству.УстановитьПараметр("ВидДвиженияРегистра",ВидДвиженияНакопления.Расход);
	ВыборкаПоПроизводствуРасход = ЗапросПоПроизводству.Выполнить().Выбрать();
	СтруктураОтбораТоваров = Новый Структура("ЗаказНаряд,Цех,Номенклатура,ХарактеристикаНоменклатуры");
	
	// Перебираем строки товаров
	Для каждого СтрокаТоваров Из ВремРезультатЗапросаПоТоварам Цикл
		Количество=СтрокаТоваров.Количество;
		ТекЗаказНаряд=?(ДокументЗаказНаряд=Неопределено,СтрокаТоваров.ЗаказНаряд,ДокументЗаказНаряд);
		ТекЦех=?(Цех=Неопределено,СтрокаТоваров.Цех,Цех);
		ТекСтатусПартии=СтрокаТоваров.СтатусПартии;
		ТекПартия=СтрокаТоваров.Партия;
		// Найдем такую номенклатуру в заказ-наряде и сколько уже перемещено в производство
		СтруктураОтбораТоваров.ЗаказНаряд=ТекЗаказНаряд;
		СтруктураОтбораТоваров.Цех=ТекЦех;
		СтруктураОтбораТоваров.Номенклатура=СтрокаТоваров.Номенклатура;
		СтруктураОтбораТоваров.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры;
		КоличествоВПроизводстве = 0;
		ВыборкаПоПроизводствуПриход.Сбросить();
		Если ВыборкаПоПроизводствуПриход.НайтиСледующий(СтруктураОтбораТоваров) Тогда
			КоличествоВПроизводстве=КоличествоВПроизводстве+?(ВыборкаПоПроизводствуПриход.ВПроизводстве=NULL,0,ВыборкаПоПроизводствуПриход.ВПроизводстве);
		КонецЕсли;
		Если ВыборкаПоПроизводствуРасход.НайтиСледующий(СтруктураОтбораТоваров) Тогда
			КоличествоВПроизводстве=КоличествоВПроизводстве-?(ВыборкаПоПроизводствуРасход.ВПроизводстве=NULL,0,ВыборкаПоПроизводствуРасход.ВПроизводстве);
		КонецЕсли;
		Для каждого СтрокаТекущихПеремещений Из ЭтотОбъект Цикл
			Если СтрокаТекущихПеремещений.Номенклатура=СтрокаТоваров.Номенклатура И 
				 СтрокаТекущихПеремещений.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры И
				 СтрокаТекущихПеремещений.Цех=ТекЦех И 
				 СтрокаТекущихПеремещений.ЗаказНаряд=ТекЗаказНаряд Тогда
				 КоличествоВПроизводстве=КоличествоВПроизводстве-СтрокаТекущихПеремещений.Количество;
			КонецЕсли; 
		КонецЦикла; 
		Если Количество>КоличествоВПроизводстве Тогда
			ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура);
			// Списывается из производства больше, чем перемещено
			Если НЕ ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"". Помещено в производство в цех %3 %4 %5. Извлекается из производства %6 %7. Превышение %8 %9'"),
						ЗначениеКолонкиКода,
						СокрЛП(СтрокаТоваров.Номенклатура),
						СокрЛП(ТекЦех),
						СокрЛП(КоличествоВПроизводстве),
						СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),
						СокрЛП(Количество),
						СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),
						СокрЛП(Количество - КоличествоВПроизводстве),
						СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)
					),
					ДокументОбъект
				);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" с характеристикой ""%3"". Помещено в производство в цех %4 %5 %6. Извлекается из производства %7 %8. Превышение %9 %10'"),
						ЗначениеКолонкиКода,
						СокрЛП(СтрокаТоваров.Номенклатура),
						СокрЛП(СтрокаТоваров.ХарактеристикаНоменклатуры),
						СокрЛП(ТекЦех),
						СокрЛП(КоличествоВПроизводстве),
						СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),
						СокрЛП(Количество),
						СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),
						СокрЛП(Количество - КоличествоВПроизводстве),
						СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)
					),
					ДокументОбъект);
			КонецЕсли; 
			ВсеОК=Ложь;
		КонецЕсли; 
		Если ВсеОК И Количество<>0 Тогда
			// Создаем запись регистра заказов покупателей
			НоваяЗапись=Добавить();
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период=ПериодДвижения;
			НоваяЗапись.Регистратор=ШапкаДокумента.Ссылка;
			НоваяЗапись.Номенклатура=СтрокаТоваров.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры;
			НоваяЗапись.ЗаказНаряд=ТекЗаказНаряд;
			НоваяЗапись.Цех=ТекЦех;
			НоваяЗапись.Организация=ЗапасыТоваров.ОрганизацияДляДвиженийВПроизводстве(
				Организация,
				НоваяЗапись.Цех,
				НоваяЗапись.Период,
				СтрокаТоваров.Организация
			);
			НоваяЗапись.СтатусПартии=ТекСтатусПартии;
			НоваяЗапись.Партия=ТекПартия;
			НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
			Если ЕстьСтавкаНДС Тогда
				НоваяЗапись.СтавкаНДС = СтрокаТоваров.СтавкаНДС;
			КонецЕсли;
			// Количество
			НоваяЗапись.Количество=Количество;
			НоваяЗапись.Сумма=Окр(СтрокаТоваров.Сумма,2);
			НоваяЗапись.СуммаНДС=Окр(СтрокаТоваров.СуммаНДС,2);
			Попытка
				СуммаБезНДС=СтрокаТоваров.СуммаБезНДС;
			Исключение
				СуммаБезНДС=СтрокаТоваров.Сумма-СтрокаТоваров.СуммаНДС;
			КонецПопытки; 
			НоваяЗапись.СуммаБезНДС=Окр(СуммаБезНДС,2);
			// Пересчитаем сумму товара в валюту управленческого учета
			Попытка
				СуммаУпр=СтрокаТоваров.СуммаУпр;
			Исключение
				СуммаУпр=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.Сумма,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр);
			КонецПопытки; 
			НоваяЗапись.СуммаУпр=Окр(СуммаУпр,2);
			Попытка
				СуммаНДСУпр=СтрокаТоваров.СуммаНДСУпр;
			Исключение
				СуммаНДСУпр=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр);
			КонецПопытки; 
			НоваяЗапись.СуммаНДСУпр=Окр(СуммаНДСУпр,2);
			Попытка
				СуммаБезНДСУпр=СтрокаТоваров.СуммаБезНДСУпр;
			Исключение
				СуммаБезНДСУпр=СтрокаТоваров.СуммаУпр-СтрокаТоваров.СуммаНДСУпр;
			КонецПопытки; 
			НоваяЗапись.СуммаБезНДСУпр=Окр(СуммаБезНДСУпр,2);
		КонецЕсли; 
	КонецЦикла; 
	
	// Запись движений
	Если ВсеОК Тогда 
		Записать(); 
	КонецЕсли; 
	
	ДокументОбъект = Неопределено;
	ШапкаДокумента = Неопределено;
	РезультатЗапросаПоТоварам = Неопределено;
	ДокументЗаказНаряд = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

// Формирует движения по регистру приход (увеличение товара в производстве)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - ошибка.
Функция ПриходКомплекта() Экспорт
	ВсеОК=Истина;
	
	КонтрольЗаполненияОрганизации();
	
	ЕстьСтавкаНДС=?(ЕстьСтавкаНДС=Неопределено,Ложь,ЕстьСтавкаНДС);
	ПериодДвижения=?(ПериодДвижения=Неопределено,ДокументОбъект.Дата,ПериодДвижения);
	ВалютаРегл=Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	СтруктураКурса=РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл,ШапкаДокумента.Дата);
	КурсРегл=СтруктураКурса.Курс/?(СтруктураКурса.Кратность=0,1,СтруктураКурса.Кратность);
	ВалютаУпр=Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	КурсУпр=ШапкаДокумента.КурсВалютыУпр;
	
	// Перебираем строки товаров
	Для каждого СтрокаТоваров Из РезультатЗапросаПоТоварам Цикл
		НоваяЗапись=Добавить();
		НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
		НоваяЗапись.Период=ШапкаДокумента.Дата;
		НоваяЗапись.Регистратор=ШапкаДокумента.Ссылка;
		НоваяЗапись.ЗаказНаряд=ШапкаДокумента.ДокументОснование;
		НоваяЗапись.Цех=ШапкаДокумента.Цех;
		НоваяЗапись.Организация=ЗапасыТоваров.ОрганизацияДляДвиженийВПроизводстве(Организация, НоваяЗапись.Цех, НоваяЗапись.Период);
		НоваяЗапись.Номенклатура=СтрокаТоваров.Номенклатура;
		НоваяЗапись.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры;
		НоваяЗапись.СтатусПартии=Перечисления.СтатусыПартий.ТоварКупленный;
		НоваяЗапись.Партия=ШапкаДокумента.Ссылка; 
		НоваяЗапись.СкладИсточник=ШапкаДокумента.СкладКомпании;
		НоваяЗапись.Количество=СтрокаТоваров.Количество;
		НоваяЗапись.Сумма=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.СуммаВсего,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл);
		НоваяЗапись.СуммаНДС=СтрокаТоваров.СуммаНДС;
		НоваяЗапись.СуммаБезНДС=НоваяЗапись.Сумма-НоваяЗапись.СуммаНДС;
		НоваяЗапись.СуммаУпр=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.СуммаВсего,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр);
		НоваяЗапись.СуммаНДСУпр=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр);
		НоваяЗапись.СуммаБезНДСУпр=НоваяЗапись.СуммаУпр-НоваяЗапись.СуммаНДСУпр;
		НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
	КонецЦикла;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
////////////////////////////////////////////////////////////////////////
// Функции модуля набора записей

// Возвращает результат запроса по таблице товаров
Функция ПолучитьТаблицуТоваров()
	// получим результат запроса по товарной таблице
    ВидДок=ДокументОбъект.Метаданные().Имя;
	ЕстьГТД=ДокументОбъект.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("ГТД")<>Неопределено;
	ЕстьСкладВТЧ = ДокументОбъект.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("СкладКомпании")<>Неопределено;
	ЕстьСклад = ДокументОбъект.Метаданные().Реквизиты.Найти("СкладКомпании")<>Неопределено; 
	Запрос=Новый Запрос();
	ТекстЗапроса="
	|ВЫБРАТЬ
	|	ДокументТовары.Номенклатура КАК Номенклатура,
	|	ДокументТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ДокументТовары.Количество*ДокументТовары.Коэффициент КАК Количество,
	|	ДокументТовары.СтатусПартии КАК СтатусПартии,
	|	ДокументТовары.Партия КАК Партия,
	|	ДокументТовары.СуммаВсего КАК Сумма,";
	Если ЕстьГТД Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|	ДокументТовары.ГТД КАК ГТД,";
	КонецЕсли; 
	Если ЕстьСтавкаНДС Тогда
        ТекстЗапроса=ТекстЗапроса+"
		|	ДокументТовары.СтавкаНДС КАК СтавкаНДС,";
	КонецЕсли;
	Если ЕстьСкладВТЧ Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|	ДокументТовары.СкладКомпании КАК СкладКомпании,";
	ИначеЕсли ЕстьСклад Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|	ДокументТовары.Ссылка.СкладКомпании КАК СкладКомпании,";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|	ДокументТовары.СуммаНДС КАК СуммаНДС,
	|	"+?(ДокументЗаказНаряд=Неопределено,"ДокументТовары.ЗаказНаряд","&ЗаказНаряд")+" КАК ЗаказНаряд,
	|	"+?(Цех=Неопределено,"ДокументТовары.Цех","&Цех")+" КАК Цех
	|ИЗ
	|	Документ."+ВидДок+".Товары КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.Ссылка=&Ссылка
	|";
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка",ШапкаДокумента.Ссылка);
	Запрос.УстановитьПараметр("ЗаказНаряд",ДокументЗаказНаряд);
	Запрос.УстановитьПараметр("Цех",Цех);

	Возврат Запрос.Выполнить();
КонецФункции

Функция КонтрольЗаполненияОрганизации()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ВызватьИсключение(НСтр("ru = 'Не указана организация для формирования движений по регистру <Товары компании в производстве>'"));
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область Инициализация

////////////////////////////////////////////////////////////////////////
// Инициализация переменных модуля набора записей

РежимПроведения=РежимПроведенияДокумента.Оперативный;

ДокументОбъект=Неопределено; // Обязательный к заполнению перед началом проведения
РезультатЗапросаПоТоварам=Неопределено;
ДокументЗаказНаряд=Неопределено;
Цех=Неопределено;
ПериодДвижения=Неопределено;

#КонецОбласти

#КонецЕсли