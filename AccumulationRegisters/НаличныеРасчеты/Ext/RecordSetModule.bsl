// Модуль набора записей регистра "Наличные расчеты"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОписаниеПеременных

Перем ДокументОбъект Экспорт; // документ объект
Перем РежимПроведения Экспорт;		// Режим проведения документа оперативный/неоперативный
Перем РежимРасходаСредств Экспорт; // установленный режим расход средств 

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по приходу (поступление наличных средств)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
//
Функция Приход() Экспорт
	
	Результат = Истина;
	
	Запрос = Новый Запрос;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЧекНаОплату") Тогда
		ТекстОплаты = "ВЫБРАТЬ
		              |	ЧекНаОплатуОплаты.Сумма - ЧекНаОплатуОплаты.Сдача КАК СуммаНаличными,
		              |	ВЫБОР
		              |		КОГДА ЧекНаОплатуОплаты.ДоговорВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ДоговорыВзаиморасчетов.ПустаяСсылка)
		              |			ТОГДА ЧекНаОплатуОплаты.Ссылка.ДоговорВзаиморасчетов
		              |		ИНАЧЕ ЧекНаОплатуОплаты.ДоговорВзаиморасчетов
		              |	КОНЕЦ КАК ДоговорВзаиморасчетов,
		              |	ВЫБОР
		              |		КОГДА ЧекНаОплатуОплаты.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		              |			ТОГДА ЧекНаОплатуОплаты.Ссылка.Контрагент
		              |		ИНАЧЕ ЧекНаОплатуОплаты.Контрагент
		              |	КОНЕЦ КАК Контрагент
		              |ПОМЕСТИТЬ НаличнаяОплата
		              |ИЗ
		              |	Документ.ЧекНаОплату.Оплаты КАК ЧекНаОплатуОплаты
		              |ГДЕ
		              |	ЧекНаОплатуОплаты.Ссылка = &Ссылка
		              |	И ЧекНаОплатуОплаты.ТипОплаты = ЗНАЧЕНИЕ(Перечисление.ТипыОплатыККТ.Наличные)";
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.Чек") Тогда
		ТекстОплаты = "ВЫБРАТЬ
		|	Чек.Сумма - Чек.Сдача КАК СуммаНаличными,
		|	Чек.Контрагент КАК Контрагент,
		|	Чек.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов
		|ПОМЕСТИТЬ НаличнаяОплата
		|ИЗ
		|	Документ.Чек.Оплаты КАК Чек
		|ГДЕ
		|	Чек.Ссылка = &Ссылка
		|	И Чек.ТипОплаты = ЗНАЧЕНИЕ(Перечисление.ТипыОплатыККТ.Наличные)
		|	И НЕ Чек.ДоговорВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ДоговорыВзаиморасчетов.ПустаяСсылка)";
	ИначеЕсли ДокументОбъект.ХозОперация = Справочники.ХозОперации.ПриходныйКассовыйОрдер ИЛИ ДокументОбъект.ХозОперация = Справочники.ХозОперации.РасходныйКассовыйОрдер Тогда
		ТекстОплаты = "ВЫБРАТЬ
		|	КассовыйОрдер.Контрагент КАК Контрагент,
		|	КассовыйОрдер.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
		|	КассовыйОрдер.СуммаДокумента КАК СуммаНаличными
		|ПОМЕСТИТЬ НаличнаяОплата
		|ИЗ
		|	Документ.ПриходныйКассовыйОрдер КАК КассовыйОрдер
		|ГДЕ
		|	КассовыйОрдер.Ссылка = &Ссылка";
		Если  ДокументОбъект.ХозОперация = Справочники.ХозОперации.РасходныйКассовыйОрдер Тогда
			ТекстОплаты = СтрЗаменить(ТекстОплаты,"ПриходныйКассовыйОрдер","РасходныйКассовыйОрдер");
		КонецЕсли;
	Иначе
		Возврат Результат;
	КонецЕсли;
	
	Запрос.Текст =  ТекстОплаты + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&СуммаНаличныхОборот КАК СуммаОборот,
	|	НаличнаяОплата.ДоговорВзаиморасчетов.ВалютаВзаиморасчетов КАК ВалютаДоговора,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) / ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1) КАК КурсДоговора,
	|	НаличнаяОплата.СуммаНаличными КАК СуммаНаличными,
	|	НаличнаяОплата.Контрагент.ФормаСобственности КАК ФормаСобственности,
	|	НаличнаяОплата.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	&Расход * НаличнаяОплата.СуммаНаличными * (ЕСТЬNULL(КурсыВалютаДокумента.Курс, 0) / ЕСТЬNULL(КурсыВалютаДокумента.Кратность, 1)) / (ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) / ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)) КАК СуммаВВалюте
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаДокумента) КАК КурсыВалютаДокумента,
	|	НаличнаяОплата КАК НаличнаяОплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Период,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						НаличнаяОплата.ДоговорВзаиморасчетов.ВалютаВзаиморасчетов КАК ДоговорВзаиморасчетовВалютаВзаиморасчетов
	|					ИЗ
	|						НаличнаяОплата КАК НаличнаяОплата)) КАК КурсыВалютСрезПоследних
	|		ПО НаличнаяОплата.ДоговорВзаиморасчетов.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта";
	
	ПроверкаЛимита = ПраваИНастройкиПользователя.Значение("КонтрольЛимитаНаличныхОплатПоДоговору")	И НЕ
		ПолучитьЗначениеПараметраСтруктуры(ДокументОбъект.ДополнительныеСвойства, "ЭтоВосстановлениеПоследовательностей", Ложь);
		
	Если ПроверкаЛимита Тогда
		Запрос.Текст =  Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НаличныеРасчеты.Обороты(, &Период, , ) КАК НаличныеРасчетыОбороты
		|		ПО НаличнаяОплата.ДоговорВзаиморасчетов = НаличныеРасчетыОбороты.ДоговорВзаиморасчетов";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&СуммаНаличныхОборот","ЕСТЬNULL(НаличныеРасчетыОбороты.СуммаОборот, 0)");
		ВалютаБаз      = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаБаз, ДокументОбъект.Дата);
		КурсБаз        = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
		ПредельныйРазмерНаличныхРасчетов = УчетныеПолитикиСервер.Значение(ПланыВидовХарактеристик.УчетныеПолитики.ПредельныйРазмерНаличныхРасчетов,ДокументОбъект.Дата);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&СуммаНаличныхОборот","0");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Расход",?(РежимРасходаСредств,-1,1));		
	Запрос.УстановитьПараметр("Ссылка",ДокументОбъект.Ссылка);		
	Запрос.УстановитьПараметр("ВалютаДокумента",ДокументОбъект.ВалютаДокумента);		
	Запрос.УстановитьПараметр("Период",?(РежимПроведения = РежимПроведенияДокумента.Оперативный,Неопределено,ДокументОбъект.МоментВремени()));		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ПроверкаЛимита И (НЕ Выборка.ФормаСобственности = Перечисления.ФормыСобственности.ЧастноеЛицо) Тогда
			
			СуммаНаличнымиРуб = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(Выборка.СуммаОборот + Выборка.СуммаВВалюте,Выборка.ВалютаДоговора,Выборка.КурсДоговора,ВалютаБаз,КурсБаз,РежимОкругления.Окр15как20);
				
			Если СуммаНаличнымиРуб > ПредельныйРазмерНаличныхРасчетов ИЛИ СуммаНаличнымиРуб < -ПредельныйРазмерНаличныхРасчетов  Тогда
				СуммаНаличнымиРуб = ?(СуммаНаличнымиРуб<0, -СуммаНаличнымиРуб,СуммаНаличнымиРуб);
				ОбщегоНазначения.СообщитьПользователю(
					НСтр("ru = 'Превышен предельный размер наличных расчетов на'") + " " + (СуммаНаличнымиРуб-ПредельныйРазмерНаличныхРасчетов) + " " + Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить().Наименование,
					ДокументОбъект
				);
				Результат = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		// Приходуем наличные средства
		НоваяЗапись	= Добавить();
		НоваяЗапись.Период				= ДокументОбъект.Дата;
		НоваяЗапись.Регистратор			= ДокументОбъект.Ссылка;
		НоваяЗапись.ДоговорВзаиморасчетов = Выборка.ДоговорВзаиморасчетов;
		НоваяЗапись.Сумма 		= Окр(Выборка.СуммаВВалюте,2);
				
		// Определяемся с хоз. операцией
		НоваяЗапись.ХозОперация			= ДокументОбъект.ХозОперация;
	
	КонецЦикла;
	
	// Убиваем циклическую ссылку
	ДокументОбъект	= Неопределено;
		
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Инициализация

РежимПроведения = НЕОПРЕДЕЛЕНО;
РежимРасходаСредств = Ложь;

#КонецОбласти

#КонецЕсли