// Модуль набора записей регистра накоплений "Реализованные товары"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОписаниеПеременных

Перем Сторно Экспорт;                    // признак сторно записей
Перем ДокументОбъект Экспорт;            // документ объект
Перем Контрагент Экспорт;                // контрагент
Перем ДоговорВзаиморасчетов Экспорт;     // договор взаиморасчетов с контрагентом
Перем РезультатЗапросаПоТоварам Экспорт; // таблица результата запроса по товарам
Перем РезультатЗапросаПоПартиям Экспорт; // таблица результата запроса по партиям
Перем РезультатЗапросаПоГТД Экспорт; 	 // таблица результата запроса по ГТД партий
Перем Списание Экспорт; // Булево. Истина - проводим складское списание товара.
Перем СтоимостьРеализованныхТоваров Экспорт;	// кэш для последующих проводок
Перем ПоБазовомуКоличеству Экспорт; // Булево. Ложь - количество товаров будет рассчитываться как "Количество*Коэффициент", Истина - количество будет браться из реквизита "КоличествоБазовое"
Перем ШапкаДокумента Экспорт; 			// Выборка или строка таблицы значений, в которой содержаться необходимые данные о шапке документа
Перем РежимПроведения Экспорт;		// Режим проведения документа оперативный/неоперативный

Перем ЕстьАвтомобиль Экспорт;            // Булево. Признак дополнительной детализации по автомобилю
Перем Автомобиль Экспорт;                // Автомобиль

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистру приход (реализация комиссионных товаров)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
Функция Приход() Экспорт
	Сторно = ?(Сторно = Неопределено, Ложь, Сторно);
	ПоБазовомуКоличеству = ?(ПоБазовомуКоличеству = Неопределено, Ложь, ПоБазовомуКоличеству);
	// проверим на возврат
	Если Сторно Тогда
		Возврат ВозвратТоваров();
	КонецЕсли;
	
	АвтомобильВТаблице = (ЕстьАвтомобиль И Автомобиль = Неопределено);
	Если РезультатЗапросаПоТоварам = Неопределено Тогда
		ЕстьПартия = ШапкаДокумента.Ссылка.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("Партия") <> Неопределено;
		ЕстьГТД    = ШапкаДокумента.Ссылка.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("ГТД") <> Неопределено;
		// получим таблицу товаров
		АвтомобильВТаблицеТекст = ?(АвтомобильВТаблице, 
					"ДокументАвтомобили.Автомобиль КАК Автомобиль,", "&Автомобиль КАК Автомобиль,");
		ТекстЗапроса = "ВЫБРАТЬ
		|	" + ?(ЕстьАвтомобиль, АвтомобильВТаблицеТекст , "") + "
		|	ДокТовары.Номенклатура КАК Номенклатура,
		|	ДокТовары.СтавкаНДС КАК СтавкаНДС,
		|	ДокТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,";
		Если ЕстьПартия Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	ДокТовары.Партия КАК Партия,";
		КонецЕсли; 
		Если ЕстьГТД Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	ДокТовары.ГТД КАК ГТД,";
		КонецЕсли; 
		ВидДок = ДокументОбъект.Метаданные().Имя;
		ТекстЗапроса = ТекстЗапроса + "
		|	СУММА(ДокТовары.Количество" + ?(ПоБазовомуКоличеству, "Базовое", "*ДокТовары.Коэффициент") + ") КАК Количество,
		|	СУММА(ДокТовары.СуммаВсего) КАК СуммаПродажи
		|ИЗ
		|	Документ." + ВидДок + ".Товары КАК ДокТовары
		|	" + ?(ЕстьАвтомобиль И АвтомобильВТаблице, "
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Документ." + ВидДок + ".Автомобили КАК ДокументАвтомобили
		|ПО
		|	ДокТовары.ИдентификаторАвтомобиля = ДокументАвтомобили.ИдентификаторАвтомобиля", "") + "
		|ГДЕ
		|	ДокТовары.Ссылка=&Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	" + ?(ЕстьАвтомобиль И АвтомобильВТаблице, "ДокументАвтомобили.Автомобиль,", "") + "
		|	ДокТовары.Номенклатура,
		|	ДокТовары.ХарактеристикаНоменклатуры,
		|	ДокТовары.СтавкаНДС";
		Если ЕстьПартия Тогда
			ТекстЗапроса = ТекстЗапроса + ",
			|	ДокТовары.Партия";
		КонецЕсли; 
		Если ЕстьГТД Тогда
			ТекстЗапроса = ТекстЗапроса + ",
			|	ДокТовары.ГТД";
		КонецЕсли; 
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Ссылка", ШапкаДокумента.Ссылка);
		РезультатЗапросаПоТоварам = Запрос.Выполнить();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам) = Тип("РезультатЗапроса") Тогда
		ТаблицаТовары = РезультатЗапросаПоТоварам.Выгрузить();
	Иначе
		ТаблицаТовары = РезультатЗапросаПоТоварам.Скопировать();
	КонецЕсли;
	ЕстьПартия = ТаблицаТовары.Колонки.Найти("Партия") <> Неопределено;
	ЕстьГТД = ТаблицаТовары.Колонки.Найти("ГТД") <> Неопределено;
	СтрокаСортировки = "";
	Если ЕстьПартия Тогда
		СтрокаСортировки = СтрокаСортировки + ", Партия Убыв";
	КонецЕсли;
	Если ЕстьГТД Тогда
		СтрокаСортировки = СтрокаСортировки + ", ГТД Убыв";
	КонецЕсли;
	Если НЕ ПустаяСтрока(СтрокаСортировки) Тогда
		СтрокаСортировки = Сред(СтрокаСортировки, 3);
		ТаблицаТовары.Сортировать(СтрокаСортировки);
	КонецЕсли;
	
	// получим проданные товары
	Если РезультатЗапросаПоПартиям = Неопределено Тогда
		ЕстьДвиженияПоПартиям = (ДокументОбъект.Движения.Найти("ПартииТоваровКомпании") <> Неопределено);
		Если ЕстьДвиженияПоПартиям Тогда
			ТаблицаПартий = ДокументОбъект.Движения.ПартииТоваровКомпании.Выгрузить();
		Иначе
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Документ <%1> не имеет информации о движениях по партиям.'"), СокрЛП(ДокументОбъект)),
			ДокументОбъект
		);
		КонецЕсли; 
	Иначе // документ может и не иметь движений по партионному регистру (например реализация прочих активов)
		ТаблицаПартий = РезультатЗапросаПоПартиям.Скопировать();
	КонецЕсли;
	ТаблицаПартий.Свернуть(?(АвтомобильВТаблице, "Автомобиль, ", "") + "Номенклатура, ХарактеристикаНоменклатуры, Партия, СтатусПартии", "Количество,Сумма,СуммаНДС,СуммаБезНДС,СуммаУпр,СуммаНДСУпр,СуммаБезНДСУпр");
	
	Если РезультатЗапросаПоГТД = Неопределено Тогда
		РезультатЗапросаПоГТД = ДокументОбъект.Движения.ГТДПартийТоваровКомпании.Выгрузить();
	КонецЕсли; 
	
	СтруктураОтбора = Новый Структура("СтатусПартии", Перечисления.СтатусыПартий.ТоварКупленный);
	МассивНайденныхСтрок = ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
	Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
		ТаблицаПартий.Удалить(МассивНайденныхСтрок[Сч]);
	КонецЦикла;
	// если строк в таблице не осталось, то и дальше делать нечего
	Если ТаблицаПартий.Количество() = 0 Тогда
		ДокументОбъект 					= Неопределено; 
		РезультатЗапросаПоТоварам 		= Неопределено;
		ТаблицаТовары 					= Неопределено;
		РезультатЗапросаПоПартиям 		= Неопределено;
		ТаблицаПартий 					= Неопределено;
		СтоимостьРеализованныхТоваров 	= Неопределено;
		ШапкаДокумента 					= Неопределено;
		РезультатЗапросаПоГТД			= Неопределено;
		Возврат Истина;
	КонецЕсли;
	// надо закэшировать контрагента и договор
	КэшКонтрагентДоговор = Новый ТаблицаЗначений();
	КэшКонтрагентДоговор.Колонки.Добавить("Партия");
	КэшКонтрагентДоговор.Колонки.Добавить("Контрагент");
	КэшКонтрагентДоговор.Колонки.Добавить("ДоговорВзаиморасчетов");
	Для Каждого СтрокаПартия Из ТаблицаПартий Цикл
		Если КэшКонтрагентДоговор.Найти(СтрокаПартия.Партия, "Партия") <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Контрагент,ДоговорВзаиморасчетов ИЗ Документ."
							+ СтрокаПартия.Партия.Метаданные().Имя + " ГДЕ Ссылка=&Ссылка");
		Запрос.УстановитьПараметр("Ссылка", СтрокаПартия.Партия);
		Попытка
			РезультатКэш = Запрос.Выполнить();
			Если НЕ РезультатКэш.Пустой() Тогда
				НоваяСтрока = КэшКонтрагентДоговор.Добавить();
				НоваяСтрока.Партия = СтрокаПартия.Партия;
				НоваяСтрока.Контрагент = РезультатКэш.Выгрузить().Получить(0).Контрагент;
				НоваяСтрока.ДоговорВзаиморасчетов = РезультатКэш.Выгрузить().Получить(0).ДоговорВзаиморасчетов;
			КонецЕсли;
		Исключение 
			ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Проведение по партиям. Не добавлены реквизиты ""Партия"", ""Контрагент"", ""ДоговорВзаиморасчетов""'"),
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));	
		КонецПопытки;
	КонецЦикла;
	
	// вспомогательные
	ВалютаУпр = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	Если НЕ ЗначениеЗаполнено(ШапкаДокумента.КурсВалютыУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ШапкаДокумента.Дата);
		КурсУпр = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	Иначе
		КурсУпр = ШапкаДокумента.КурсВалютыУпр;
	КонецЕсли;	
	
	// идем по выборке товаров
	Для Каждого СтрокаТовар Из ТаблицаТовары Цикл
		НадоЗафиксировать = СтрокаТовар.Количество;
	
		Если НадоЗафиксировать = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтруктураОтбора = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", 
							СтрокаТовар.Номенклатура, СтрокаТовар.ХарактеристикаНоменклатуры);
		Если ЕстьПартия И ЗначениеЗаполнено(СтрокаТовар.Партия) Тогда
			СтруктураОтбора.Вставить("Партия", СтрокаТовар.Партия);
		КонецЕсли; 
		Если АвтомобильВТаблице Тогда
			СтруктураОтбора.Вставить("Автомобиль", СтрокаТовар.Автомобиль);
		КонецЕсли;
		// идем по выборке партий
		МассивНайденныхСтрок = ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			КоличествоПартии = ТекСтрока.Количество;
			
			СтруктураОтбора.Вставить("Партия", ТекСтрока.Партия);
			Если ЕстьГТД И ЗначениеЗаполнено(СтрокаТовар.ГТД) Тогда
				СтруктураОтбора.Вставить("ГТД", СтрокаТовар.ГТД);
			КонецЕсли; 
			МассивНайденныхСтрокГТД = РезультатЗапросаПоГТД.НайтиСтроки(СтруктураОтбора);
			Для СчГТД = 0 По МассивНайденныхСтрокГТД.ВГраница() Цикл
				ТекСтрокаГТД = МассивНайденныхСтрокГТД[СчГТД];
				// Зафиксируем продажу комиссионного товара в разрезе ГТД
				НоваяЗапись = Добавить();
				НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период = ШапкаДокумента.Дата;
				НоваяЗапись.Регистратор = ШапкаДокумента.Ссылка;
				НоваяЗапись.ДокументПередачи = ТекСтрокаГТД.Партия;
				НоваяЗапись.ГТД = ТекСтрокаГТД.ГТД;
				Если ЕстьАвтомобиль Тогда
					НоваяЗапись.Автомобиль = СтрокаТовар.Автомобиль;
				КонецЕсли;
				НоваяЗапись.Номенклатура = ТекСтрокаГТД.Номенклатура;
				НоваяЗапись.ХарактеристикаНоменклатуры = ТекСтрокаГТД.ХарактеристикаНоменклатуры;
				// Контрагента и договор получим из кэша
				КонтрагентДоговор = КэшКонтрагентДоговор.Найти(ТекСтрокаГТД.Партия, "Партия");
				Если КонтрагентДоговор <> Неопределено Тогда
					НоваяЗапись.Контрагент = КонтрагентДоговор.Контрагент;
					НоваяЗапись.ДоговорВзаиморасчетов = КонтрагентДоговор.ДоговорВзаиморасчетов;
				КонецЕсли;
				НоваяЗапись.ХозОперация = ШапкаДокумента.ХозОперация;
				НоваяЗапись.Количество = Мин(ТекСтрокаГТД.Количество, ТекСтрока.Количество, НадоЗафиксировать);
				НоваяЗапись.СуммаРегл = Окр(ТекСтрока.Сумма * НоваяЗапись.Количество / КоличествоПартии, 2);
				НоваяЗапись.СуммаНДС = Окр(ТекСтрока.СуммаНДС * НоваяЗапись.Количество / КоличествоПартии, 2);
				НоваяЗапись.СуммаБезНДС = Окр(ТекСтрока.СуммаБезНДС * НоваяЗапись.Количество / КоличествоПартии, 2);
				НоваяЗапись.СуммаУпр = Окр(ТекСтрока.СуммаУпр * НоваяЗапись.Количество / КоличествоПартии, 2);
				НоваяЗапись.СуммаНДСУпр = Окр(ТекСтрока.СуммаНДСУпр * НоваяЗапись.Количество / КоличествоПартии, 2);
				НоваяЗапись.СуммаБезНДСУпр = Окр(ТекСтрока.СуммаБезНДСУпр * НоваяЗапись.Количество / КоличествоПартии, 2);
				Если Списание Тогда
					НоваяЗапись.СуммаПродажи     = Окр(ТекСтрока.СуммаУпр * НоваяЗапись.Количество / КоличествоПартии, 2);
					НоваяЗапись.СуммаПродажиРегл = Окр(ТекСтрока.Сумма * НоваяЗапись.Количество / КоличествоПартии, 2);
				Иначе
					НоваяЗапись.СуммаПродажи     = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаПродажи * НоваяЗапись.Количество / СтрокаТовар.Количество, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр), 2);
					НоваяЗапись.СуммаПродажиРегл = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаПродажи * НоваяЗапись.Количество / СтрокаТовар.Количество, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(), ШапкаДокумента.Дата), 2);
				КонецЕсли;
				
				НадоЗафиксировать		= НадоЗафиксировать - НоваяЗапись.Количество;
				ТекСтрока.Количество	= ТекСтрока.Количество - НоваяЗапись.Количество;
				КоличествоПартии        = КоличествоПартии - НоваяЗапись.Количество;
				ТекСтрока.Сумма			= ТекСтрока.Сумма - НоваяЗапись.СуммаРегл;
				ТекСтрока.СуммаНДС		= ТекСтрока.СуммаНДС - НоваяЗапись.СуммаНДС;
				ТекСтрока.СуммаБезНДС	= ТекСтрока.СуммаБезНДС - НоваяЗапись.СуммаБезНДС;
				ТекСтрока.СуммаУпр		= ТекСтрока.СуммаУпр - НоваяЗапись.СуммаУпр;
				ТекСтрока.СуммаНДСУпр	= ТекСтрока.СуммаНДСУпр - НоваяЗапись.СуммаНДСУпр;
				ТекСтрока.СуммаБезНДСУпр = ТекСтрока.СуммаБезНДСУпр - НоваяЗапись.СуммаБезНДСУпр;
				ТекСтрокаГТД.Количество	= ТекСтрокаГТД.Количество-НоваяЗапись.Количество;
				
				// СебестоимостьРавнаПродаже
				Если НЕ НоваяЗапись.ДоговорВзаиморасчетов.КомиссияОтчетНаОснованииПродаж И НЕ Списание Тогда
					НоваяЗапись.СуммаРегл      = НоваяЗапись.СуммаПродажиРегл;
					НоваяЗапись.СуммаНДС       = Окр((НоваяЗапись.СуммаПродажиРегл * СтрокаТовар.СтавкаНДС.Ставка) / (100 + СтрокаТовар.СтавкаНДС.Ставка), 2);
					НоваяЗапись.СуммаБезНДС    = НоваяЗапись.СуммаРегл - НоваяЗапись.СуммаНДС;
					НоваяЗапись.СуммаУпр       = НоваяЗапись.СуммаПродажи;
					НоваяЗапись.СуммаНДСУпр    = Окр((НоваяЗапись.СуммаПродажи * СтрокаТовар.СтавкаНДС.Ставка) / (100 + СтрокаТовар.СтавкаНДС.Ставка), 2);
					НоваяЗапись.СуммаБезНДСУпр = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
				КонецЕсли;
				
				Если ТекСтрокаГТД.Количество = 0 Тогда
					// Удалим ненужные строки
					РезультатЗапросаПоГТД.Удалить(ТекСтрокаГТД);
				КонецЕсли; 
				Если НадоЗафиксировать = 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ТекСтрока.Количество = 0 Тогда
				// Удалим ненужные строки
				ТаблицаПартий.Удалить(ТекСтрока);
				Продолжить;
			КонецЕсли; 
			Если НадоЗафиксировать = 0 Тогда
				Прервать;
			КонецЕсли;
			
			// зафиксируем продажу комиссионного товара (без ГТД)
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период = ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор = ШапкаДокумента.Ссылка;
			НоваяЗапись.ДокументПередачи = ТекСтрока.Партия;
			Если ЕстьАвтомобиль Тогда
				НоваяЗапись.Автомобиль = СтрокаТовар.Автомобиль;
			КонецЕсли;
			НоваяЗапись.ГТД = Справочники.ГТД.ПустаяСсылка();
			НоваяЗапись.Номенклатура = ТекСтрока.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры = ТекСтрока.ХарактеристикаНоменклатуры;
			// контрагента и договор получим из кэша
			КонтрагентДоговор = КэшКонтрагентДоговор.Найти(ТекСтрока.Партия, "Партия");
			Если КонтрагентДоговор <> Неопределено Тогда
				НоваяЗапись.Контрагент = КонтрагентДоговор.Контрагент;
				НоваяЗапись.ДоговорВзаиморасчетов = КонтрагентДоговор.ДоговорВзаиморасчетов;
			КонецЕсли;
			// определяемся с хоз. операцией
			НоваяЗапись.ХозОперация = ШапкаДокумента.ХозОперация;
			НоваяЗапись.Количество = Мин(ТекСтрока.Количество,НадоЗафиксировать);
			НоваяЗапись.СуммаРегл = Окр(ТекСтрока.Сумма*НоваяЗапись.Количество/КоличествоПартии, 2);
			НоваяЗапись.СуммаНДС = Окр(ТекСтрока.СуммаНДС*НоваяЗапись.Количество/КоличествоПартии, 2);
			НоваяЗапись.СуммаБезНДС = Окр(ТекСтрока.СуммаБезНДС*НоваяЗапись.Количество/КоличествоПартии, 2);
			НоваяЗапись.СуммаУпр = Окр(ТекСтрока.СуммаУпр*НоваяЗапись.Количество/КоличествоПартии, 2);
			НоваяЗапись.СуммаНДСУпр = Окр(ТекСтрока.СуммаНДСУпр*НоваяЗапись.Количество/КоличествоПартии, 2);
			НоваяЗапись.СуммаБезНДСУпр = Окр(ТекСтрока.СуммаБезНДСУпр*НоваяЗапись.Количество/КоличествоПартии, 2);
			Если Списание Тогда
				НоваяЗапись.СуммаПродажи     = Окр(ТекСтрока.СуммаУпр * НоваяЗапись.Количество / КоличествоПартии, 2);
				НоваяЗапись.СуммаПродажиРегл = Окр(ТекСтрока.Сумма * НоваяЗапись.Количество / КоличествоПартии, 2);
			Иначе
				НоваяЗапись.СуммаПродажи     = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаПродажи * НоваяЗапись.Количество / СтрокаТовар.Количество, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр), 2);
				НоваяЗапись.СуммаПродажиРегл = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаПродажи * НоваяЗапись.Количество / СтрокаТовар.Количество, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(), ШапкаДокумента.Дата), 2);
			КонецЕсли;
			
			// СебестоимостьРавнаПродаже
			Если НЕ НоваяЗапись.ДоговорВзаиморасчетов.КомиссияОтчетНаОснованииПродаж И НЕ Списание Тогда
					НоваяЗапись.СуммаРегл      = НоваяЗапись.СуммаПродажиРегл;
					НоваяЗапись.СуммаНДС       = Окр((НоваяЗапись.СуммаПродажиРегл * СтрокаТовар.СтавкаНДС.Ставка) / (100 + СтрокаТовар.СтавкаНДС.Ставка), 2);
					НоваяЗапись.СуммаБезНДС    = НоваяЗапись.СуммаРегл - НоваяЗапись.СуммаНДС;
					НоваяЗапись.СуммаУпр       = НоваяЗапись.СуммаПродажи;
					НоваяЗапись.СуммаНДСУпр    = Окр((НоваяЗапись.СуммаПродажи * СтрокаТовар.СтавкаНДС.Ставка) / (100 + СтрокаТовар.СтавкаНДС.Ставка), 2);
					НоваяЗапись.СуммаБезНДСУпр = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
			КонецЕсли;
			
			НадоЗафиксировать = НадоЗафиксировать - НоваяЗапись.Количество;
			ТекСтрока.Количество = ТекСтрока.Количество - НоваяЗапись.Количество;
			Если ТекСтрока.Количество = 0 Тогда
				// Удалим ненужные строки
				ТаблицаПартий.Удалить(ТекСтрока);
			КонецЕсли; 
			Если НадоЗафиксировать = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// убиваем циклическую ссылку
	ДокументОбъект 					= Неопределено;
	РезультатЗапросаПоТоварам 		= Неопределено;
	ТаблицаТовары 					= Неопределено;
	РезультатЗапросаПоПартиям 		= Неопределено;
	ТаблицаПартий 					= Неопределено;
	СтоимостьРеализованныхТоваров 	= Неопределено;
	ШапкаДокумента 					= Неопределено;
	РезультатЗапросаПоГТД			= Неопределено;
	
	Возврат Истина;
КонецФункции

// Формирует движения по регистру расход (отчет комитенту за реализованные товары)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
Функция Расход() Экспорт
	ВсеОК = Истина;
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	Если НЕ ЗначениеЗаполнено(ШапкаДокумента.КурсВалютыУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ШапкаДокумента.Дата);
		КурсУпр = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	Иначе
		КурсУпр = ШапкаДокумента.КурсВалютыУпр;
	КонецЕсли;
	
	Попытка
		ЭтоОтчетАгента	= (ШапкаДокумента.ХозОперация=Справочники.ХозОперации.ОтчетАгента);
	Исключение
		ЭтоОтчетАгента	= Ложь;
	КонецПопытки;
	
	// Получаем товарную таблицу
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ОтчетКомитентуТовары.Номенклатура КАК Номенклатура,
	|	ОтчетКомитентуТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОтчетКомитентуТовары." + ?(ЭтоОтчетАгента,"ДокументРеализации","ДокументПоступления") + " КАК ДокументПередачи,
	|	ОтчетКомитентуТовары.ГТД КАК ГТД,
	|	ОтчетКомитентуТовары.Количество*ОтчетКомитентуТовары.Коэффициент КАК Количество,
	|	ОтчетКомитентуТовары.Вознаграждение КАК Вознаграждение,
	|	ОтчетКомитентуТовары.СуммаВсего КАК Сумма
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК ОтчетКомитентуТовары
	|ГДЕ
	|	ОтчетКомитентуТовары.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО ДокументПередачи УБЫВ, ГТД УБЫВ
	|";
	Запрос.УстановитьПараметр("Ссылка", ШапкаДокумента.Ссылка);
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапросаПоТоварам = Запрос.Выполнить();
	тзТоваров = РезультатЗапросаПоТоварам.Выгрузить();
	// Получаем таблицу реализованных товаров, за которые еще не отчитались
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализованныеТоварыОстатки.Контрагент КАК Контрагент,
	|	РеализованныеТоварыОстатки.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	РеализованныеТоварыОстатки.Номенклатура КАК Номенклатура,
	|	РеализованныеТоварыОстатки.Автомобиль КАК Автомобиль,
	|	РеализованныеТоварыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	РеализованныеТоварыОстатки.ДокументПередачи КАК ДокументПередачи,
	|	РеализованныеТоварыОстатки.ГТД КАК ГТД,
	|	РеализованныеТоварыОстатки.КоличествоОстаток КАК Количество,
	|	РеализованныеТоварыОстатки.СуммаУпрОстаток КАК СуммаУпр,
	|	РеализованныеТоварыОстатки.СуммаНДСУпрОстаток КАК СуммаНДСУпр,
	|	РеализованныеТоварыОстатки.СуммаБезНДСУпрОстаток КАК СуммаБезНДСУпр,
	|	РеализованныеТоварыОстатки.СуммаРеглОстаток КАК СуммаРегл,
	|	РеализованныеТоварыОстатки.СуммаНДСОстаток КАК СуммаНДС,
	|	РеализованныеТоварыОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	РеализованныеТоварыОстатки.СуммаПродажиРеглОстаток КАК СуммаПродажиРегл,
	|	РеализованныеТоварыОстатки.СуммаПродажиОстаток КАК СуммаПродажи
	|ИЗ
	|	РегистрНакопления.РеализованныеТовары.Остатки(&Момент,Номенклатура В (&Номенклатура) И ДоговорВзаиморасчетов=&ДоговорВзаиморасчетов И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры) И ДокументПередачи В (&ДокументПередачи)) КАК РеализованныеТоварыОстатки
	|УПОРЯДОЧИТЬ ПО ДокументПередачи УБЫВ, ГТД УБЫВ
	|";
	Запрос.УстановитьПараметр("Момент",Новый Граница(ШапкаДокумента.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ДоговорВзаиморасчетов",ДоговорВзаиморасчетов);
	Запрос.УстановитьПараметр("Номенклатура",тзТоваров.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры",тзТоваров.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
	Запрос.УстановитьПараметр("ДокументПередачи", тзТоваров.ВыгрузитьКолонку("ДокументПередачи"));
	Запрос.Текст = ТекстЗапроса;
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "РеализованныеТовары");
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период",      Новый Диапазон(, ШапкаДокумента.Дата)); 
	ЗначенияБлокировки.Вставить("ДоговорВзаиморасчетов", ДоговорВзаиморасчетов);
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", тзТоваров);
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Номенклатура", "Номенклатура");
	ОписаниеИсточника.Вставить("ХарактеристикаНоменклатуры", "ХарактеристикаНоменклатуры");
	ОписаниеИсточника.Вставить("ДокументПередачи", "ДокументПередачи");
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	РезультатЗапросаПоРеализованнымТоварам = Запрос.Выполнить();
	// Закрываем реализацию
	ТаблицаРеализации = РезультатЗапросаПоРеализованнымТоварам.Выгрузить();
	ВыборкаТовары = РезультатЗапросаПоТоварам.Выбрать();
	СтоимостьРеализованныхТоваров = 0;
    ИмяКолонкиКода=УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
	Пока ВыборкаТовары.Следующий() Цикл
		// Заполним структуру отбора
		СтруктураОтбора = Новый Структура("Контрагент,ДоговорВзаиморасчетов,Номенклатура,ХарактеристикаНоменклатуры,ДокументПередачи");
		СтруктураОтбора.Контрагент 					= Контрагент;
		СтруктураОтбора.ДоговорВзаиморасчетов 		= ДоговорВзаиморасчетов;
		СтруктураОтбора.Номенклатура 				= ВыборкаТовары.Номенклатура;
		СтруктураОтбора.ХарактеристикаНоменклатуры 	= ВыборкаТовары.ХарактеристикаНоменклатуры;
		СтруктураОтбора.ДокументПередачи 			= ВыборкаТовары.ДокументПередачи;
		Если ЗначениеЗаполнено(ВыборкаТовары.ГТД) Тогда
			СтруктураОтбора.Вставить("ГТД",ВыборкаТовары.ГТД);
		КонецЕсли; 
		// Фильтруем выборку
		МассивНайденныхСтрок = ТаблицаРеализации.НайтиСтроки(СтруктураОтбора);
		// Теперь списываем
		НадоСписать = ВыборкаТовары.Количество;
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения 				= ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период 						= ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор 				= ШапкаДокумента.Ссылка;
			НоваяЗапись.ДокументПередачи 			= ТекСтрока.ДокументПередачи;
			НоваяЗапись.ГТД							= ТекСтрока.ГТД;
			НоваяЗапись.Контрагент 					= Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов 		= ДоговорВзаиморасчетов;
			НоваяЗапись.Автомобиль                  = ТекСтрока.Автомобиль;
			НоваяЗапись.Номенклатура 				= ВыборкаТовары.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры 	= ВыборкаТовары.ХарактеристикаНоменклатуры;
			НоваяЗапись.Количество 					= Мин(НадоСписать,ТекСтрока.Количество);
			СуммаУпрРасч = ?(ТекСтрока.Количество <= НадоСписать, 
					ТекСтрока.СуммаУпр, ТекСтрока.СуммаУпр / ТекСтрока.Количество * НадоСписать);
			НоваяЗапись.СуммаУпр 					= Окр(?(ТекСтрока.СуммаУпр = NULL, 0, СуммаУпрРасч), 2);
			СуммаРеглРасч = ?(ТекСтрока.Количество <= НадоСписать, 
					ТекСтрока.СуммаРегл, ТекСтрока.СуммаРегл / ТекСтрока.Количество * НадоСписать); 
			НоваяЗапись.СуммаРегл 					= Окр(?(ТекСтрока.СуммаРегл = NULL, 0, СуммаРеглРасч), 2);
			
			СуммаНДСУпрРасч = ?(ТекСтрока.Количество <= НадоСписать, 
					ТекСтрока.СуммаНДСУпр, ТекСтрока.СуммаНДСУпр / ТекСтрока.Количество * НадоСписать); 
			НоваяЗапись.СуммаНДСУпр 				= Окр(?(ТекСтрока.СуммаНДСУпр = NULL, 0, СуммаНДСУпрРасч), 2);
			СуммаНДСРасч = ?(ТекСтрока.Количество <= НадоСписать, 
					ТекСтрока.СуммаНДС, ТекСтрока.СуммаНДС / ТекСтрока.Количество * НадоСписать);	
			НоваяЗапись.СуммаНДС 					= Окр(?(ТекСтрока.СуммаНДС = NULL, 0, СуммаНДСРасч), 2);
			НоваяЗапись.СуммаБезНДС					= НоваяЗапись.СуммаРегл - НоваяЗапись.СуммаНДС;
			НоваяЗапись.СуммаБезНДСУпр				= НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
			
			СтоимостьРеализованныхТоваров 			= СтоимостьРеализованныхТоваров + НоваяЗапись.СуммаУпр;
			НоваяЗапись.СуммаПродажи 				= ?(ТекСтрока.Количество <= НадоСписать, 
					ТекСтрока.СуммаПродажи, Окр(ТекСтрока.СуммаПродажи / ТекСтрока.Количество * НадоСписать, 2));
			НоваяЗапись.СуммаПродажиРегл			= ?(ТекСтрока.Количество <= НадоСписать, 
					ТекСтрока.СуммаПродажиРегл, Окр(ТекСтрока.СуммаПродажиРегл / ТекСтрока.Количество * НадоСписать, 2));
			НоваяЗапись.Вознаграждение 				= РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаТовары.Вознаграждение / ВыборкаТовары.Количество * НоваяЗапись.Количество, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр);
			// Определяемся с хоз. операцией
			НоваяЗапись.ХозОперация = ШапкаДокумента.ХозОперация;
			// Уменьшаем количество которое надо списать
			НадоСписать = НадоСписать - НоваяЗапись.Количество;
			ТекСтрока.Количество = ТекСтрока.Количество - НоваяЗапись.Количество;
			
			Если ТекСтрока.Количество = 0 Тогда
				// Удалим ненужные строки
				ТаблицаРеализации.Удалить(ТекСтрока);
			КонецЕсли; 
			Если НадоСписать <= 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		// Если после списания остались товары, то значит их мы на комиссию не брали. Ругаемся.
		Если НадоСписать > 0 Тогда
			ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(ВыборкаТовары.Номенклатура);
			Если НЕ ЗначениеЗаполнено(ВыборкаТовары.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" в количестве %3 %4 не брался на комиссию.'"),
						ЗначениеКолонкиКода,
						СокрЛП(ВыборкаТовары.Номенклатура),
						Формат(ВыборкаТовары.Количество, "ЧДЦ=3; ЧН=0,00"),
						СокрЛП(ВыборкаТовары.Номенклатура.ОсновнаяЕдиницаИзмерения)),
					ДокументОбъект,,, Истина
				);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1""] Товар ""%2"" с характеристикой ""%3"" в количестве %4 %5 не брался на комиссию.'"),
						ЗначениеКолонкиКода, 
						СокрЛП(ВыборкаТовары.Номенклатура),
						СокрЛП(ВыборкаТовары.ХарактеристикаНоменклатуры),
						Формат(ВыборкаТовары.Количество, "ЧДЦ=3; ЧН=0,00"), 
						СокрЛП(ВыборкаТовары.Номенклатура.ОсновнаяЕдиницаИзмерения)
					),
					ДокументОбъект,,, Истина
				);
			КонецЕсли;
			ВсеОК = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	// Убиваем циклическую ссылку
	ДокументОбъект 							= Неопределено;
	РезультатЗапросаПоТоварам 				= Неопределено;
	тзТоваров 								= Неопределено;
	РезультатЗапросаПоРеализованнымТоварам 	= Неопределено;
	ТаблицаРеализации 						= Неопределено;
	СтоимостьРеализованныхТоваров 			= Неопределено;
	ШапкаДокумента 							= Неопределено;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возврат реализованных товаров.
// Возвращает Истина - все ОК, Ложь - чего-то не так.
Функция ВозвратТоваров()
	ВсеОК = Истина;
	
	// получим таблицу возвращенных товаров
	Если РезультатЗапросаПоПартиям = Неопределено Тогда
		ЕстьДвиженияПоПартиям = (ДокументОбъект.Движения.Найти("ПартииТоваровКомпании") <> Неопределено);
		Если ЕстьДвиженияПоПартиям Тогда
			ТаблицаВозвращенныхТоваров = ДокументОбъект.Движения.ПартииТоваровКомпании.Выгрузить();
			ТаблицаВозвращенныхГТД = ДокументОбъект.Движения.ГТДПартийТоваровКомпании.Выгрузить();
		Иначе
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Документ <%1> не имеет информации о движениях по партиям.'"), СокрЛП(ДокументОбъект)),
				ДокументОбъект
			);
		КонецЕсли; 
	Иначе // документ может и не иметь движений по партионному регистру (например реализация прочих активов)
		ТаблицаВозвращенныхТоваров = РезультатЗапросаПоПартиям.Скопировать();
		ТаблицаВозвращенныхГТД = РезультатЗапросаПоГТД.Скопировать();
	КонецЕсли;
	
	АвтомобильВТаблице = (ЕстьАвтомобиль И Автомобиль = Неопределено);
	ТаблицаВозвращенныхТоваров.Свернуть(?(АвтомобильВТаблице, "Автомобиль, ", "") 
		+ "Номенклатура, ХарактеристикаНоменклатуры, Партия, СтатусПартии", "Количество");
	
	СтруктураОтбора = Новый Структура("СтатусПартии", Перечисления.СтатусыПартий.ТоварКупленный);
	МассивНайденныхСтрок = ТаблицаВозвращенныхТоваров.НайтиСтроки(СтруктураОтбора);
	Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
		ТаблицаВозвращенныхТоваров.Удалить(МассивНайденныхСтрок[Сч]);
	КонецЦикла;
	// если строк в таблице не осталось, то и дальше делать нечего
	Если ТаблицаВозвращенныхТоваров.Количество() = 0 Тогда
		ДокументОбъект 					= Неопределено; 
		РезультатЗапросаПоПартиям 		= Неопределено;
		ТаблицаВозвращенныхТоваров 		= Неопределено;
		СтоимостьРеализованныхТоваров 	= Неопределено;
		ШапкаДокумента 					= Неопределено;
		Возврат Истина;
	КонецЕсли;
	
	// теперь соберем данные из текущего регистра и будем возвращать в порядке ЛИФО
	АвтомобильВТаблицеТекст = ?(АвтомобильВТаблице, 
		" И РеализованныеТовары.Автомобиль В (&Автомобили)", " И РеализованныеТовары.Автомобиль = &Автомобиль"); 
	ТекстЗапроса = "ВЫБРАТЬ
	|	РеализованныеТовары.Номенклатура КАК Номенклатура,
	|	РеализованныеТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	РеализованныеТовары.ДокументПередачи КАК ДокументПередачи,
	|	РеализованныеТовары.ГТД КАК ГТД,
	|	СУММА(РеализованныеТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_ОтчетКомитенту
	|ИЗ
	|	РегистрНакопления.РеализованныеТовары КАК РеализованныеТовары
	|ГДЕ
	|	РеализованныеТовары.ХозОперация = ЗНАЧЕНИЕ(Справочник.ХозОперации.ОтчетКомитенту)
	|	И РеализованныеТовары.ДокументПередачи В(&ДокументПередачи)
	|	И РеализованныеТовары.МоментВремени < &Момент
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализованныеТовары.Номенклатура,
	|	РеализованныеТовары.ХарактеристикаНоменклатуры,
	|	РеализованныеТовары.ДокументПередачи,
	|	РеализованныеТовары.ГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализованныеТовары.Контрагент КАК Контрагент,
	|	РеализованныеТовары.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	РеализованныеТовары.Автомобиль КАК Автомобиль,
	|	РеализованныеТовары.Номенклатура КАК Номенклатура,
	|	РеализованныеТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	РеализованныеТовары.ДокументПередачи КАК ДокументПередачи,
	|	РеализованныеТовары.ГТД КАК ГТД,
	|	СУММА(РеализованныеТовары.Количество)       КАК Количество,
	|	СУММА(РеализованныеТовары.СуммаУпр)         КАК СуммаУпр,
	|	СУММА(РеализованныеТовары.СуммаПродажи)     КАК СуммаПродажи,
	|	СУММА(РеализованныеТовары.СуммаРегл)        КАК СуммаРегл,
	|	СУММА(РеализованныеТовары.СуммаНДСУпр)      КАК СуммаНДСУпр,
	|	СУММА(РеализованныеТовары.СуммаБезНДСУпр)   КАК СуммаБезНДСУпр,
	|	СУММА(РеализованныеТовары.СуммаНДС)         КАК СуммаНДС,
	|	СУММА(РеализованныеТовары.СуммаПродажиРегл) КАК СуммаПродажиРегл,
	|	СУММА(РеализованныеТовары.СуммаБезНДС)      КАК СуммаБезНДС,
	|	ЕСТЬNULL(ВТ_ОтчетКомитенту.Количество, 0) КАК КоличествоОтчетКомитенту
	|ИЗ
	|	РегистрНакопления.РеализованныеТовары КАК РеализованныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтчетКомитенту КАК ВТ_ОтчетКомитенту
	|		ПО РеализованныеТовары.Номенклатура = ВТ_ОтчетКомитенту.Номенклатура
	|			И РеализованныеТовары.ХарактеристикаНоменклатуры = ВТ_ОтчетКомитенту.ХарактеристикаНоменклатуры
	|			И РеализованныеТовары.ДокументПередачи = ВТ_ОтчетКомитенту.ДокументПередачи
	|			И РеализованныеТовары.ГТД = ВТ_ОтчетКомитенту.ГТД
	|ГДЕ
	|	РеализованныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РеализованныеТовары.Номенклатура В (&Номенклатура)
	|	И РеализованныеТовары.ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)
	|	И РеализованныеТовары.ДокументПередачи В (&ДокументПередачи)
	|	И РеализованныеТовары.МоментВремени < &Момент
	|	" + ?(ЕстьАвтомобиль, АвтомобильВТаблицеТекст, 
	" И РеализованныеТовары.Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)") + "
	|СГРУППИРОВАТЬ ПО
	|	РеализованныеТовары.Контрагент,
	|	РеализованныеТовары.ДоговорВзаиморасчетов,
	|	РеализованныеТовары.Автомобиль,
	|	РеализованныеТовары.Номенклатура,
	|	РеализованныеТовары.ХарактеристикаНоменклатуры,
	|	РеализованныеТовары.ДокументПередачи,
	|	РеализованныеТовары.ГТД,
	|	ВТ_ОтчетКомитенту.Количество
	|ИМЕЮЩИЕ
	|	СУММА(РеализованныеТовары.Количество)<>0
	|	ИЛИ СУММА(РеализованныеТовары.СуммаУпр) <> 0
	|	ИЛИ СУММА(РеализованныеТовары.СуммаПродажи) <> 0
	|УПОРЯДОЧИТЬ ПО
	|	ДокументПередачи УБЫВ,
	|	ГТД УБЫВ
	|";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", ТаблицаВозвращенныхТоваров.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ТаблицаВозвращенныхТоваров.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
	Запрос.УстановитьПараметр("ДокументПередачи", ТаблицаВозвращенныхТоваров.ВыгрузитьКолонку("Партия"));
	Запрос.УстановитьПараметр("Момент", ШапкаДокумента.МоментВремени);
	Если ЕстьАвтомобиль Тогда
		Если АвтомобильВТаблице Тогда
			Запрос.УстановитьПараметр("Автомобили", ТаблицаВозвращенныхТоваров.ВыгрузитьКолонку("Автомобиль"));
		Иначе
			Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
		КонецЕсли;
	КонецЕсли;
		
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "РеализованныеТовары");
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период",      Новый Диапазон(, ШапкаДокумента.Дата)); 
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", ТаблицаВозвращенныхТоваров);
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Номенклатура", "Номенклатура");
	ОписаниеИсточника.Вставить("ХарактеристикаНоменклатуры", "ХарактеристикаНоменклатуры");
	ОписаниеИсточника.Вставить("ДокументПередачи", "Партия");
	Если ЕстьАвтомобиль Тогда
		Если АвтомобильВТаблице Тогда
			ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
		Иначе
			ЗначенияБлокировки.Вставить("Автомобиль", Автомобиль);
		КонецЕсли;
	Иначе
		ЗначенияБлокировки.Вставить("Автомобиль", Справочники.Автомобили.ПустаяСсылка());
	КонецЕсли;
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	// Получим таблицу реализованных товаров
	ТаблицаРеализованныхТоваров = Запрос.Выполнить().Выгрузить();
	// Создаем структуру отбора
	ИмяКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
	Для Каждого СтрокаТовары Из ТаблицаВозвращенныхТоваров Цикл
		// Проверим статус партии
		Если СтрокаТовары.СтатусПартии <> Перечисления.СтатусыПартий.ТоварПринятыйКомиссия Тогда
			Продолжить;
		КонецЕсли;
		НадоВернуть = -СтрокаТовары.Количество;
		
		// Получим строки таблицы ГТД партий с нашим товаром
		СтруктураОтбора = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры", СтрокаТовары.Номенклатура, СтрокаТовары.ХарактеристикаНоменклатуры);
		Если ЗначениеЗаполнено(СтрокаТовары.Партия) Тогда
			СтруктураОтбора.Вставить("Партия", СтрокаТовары.Партия);
		КонецЕсли;
		МассивСтрокГТД = ТаблицаВозвращенныхГТД.НайтиСтроки(СтруктураОтбора);
		
		Для СчГТД = 0 По МассивСтрокГТД.ВГраница() Цикл
			СтрокаТаблицыГТД = МассивСтрокГТД[СчГТД];
			СтрокаТаблицыГТД.Количество = -СтрокаТаблицыГТД.Количество;
			
			СтруктураОтбора.Удалить("Партия");
			СтруктураОтбора.Вставить("ДокументПередачи", СтрокаТаблицыГТД.Партия);
			СтруктураОтбора.Вставить("ГТД", СтрокаТаблицыГТД.ГТД);
			Если АвтомобильВТаблице Тогда
				СтруктураОтбора.Вставить("Автомобиль", СтрокаТовары.Автомобиль);
			КонецЕсли;
			МассивСтрок = ТаблицаРеализованныхТоваров.НайтиСтроки(СтруктураОтбора);
			Для Сч = 0 По МассивСтрок.ВГраница() Цикл
				СтрокаТаблицы = МассивСтрок[Сч];
				Если СтрокаТаблицы.Количество - СтрокаТаблицы.КоличествоОтчетКомитенту - 
					Мин(НадоВернуть, СтрокаТаблицыГТД.Количество, СтрокаТаблицы.Количество) < 0 Тогда
					НадоВернуть = НадоВернуть - Мин(НадоВернуть, СтрокаТаблицыГТД.Количество, СтрокаТаблицы.Количество);
					Продолжить;					
				КонецЕсли;
				НоваяЗапись = Добавить();
				НоваяЗапись.ВидДвижения 				= ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период 						= ШапкаДокумента.Дата;
				НоваяЗапись.Регистратор 				= ШапкаДокумента.Ссылка;
				НоваяЗапись.Контрагент 					= СтрокаТаблицы.Контрагент;
				НоваяЗапись.ДоговорВзаиморасчетов 		= СтрокаТаблицы.ДоговорВзаиморасчетов;
				Если ЕстьАвтомобиль Тогда
					НоваяЗапись.Автомобиль              = СтрокаТаблицы.Автомобиль;
				КонецЕсли;
				НоваяЗапись.ДокументПередачи 			= СтрокаТаблицы.ДокументПередачи;
				НоваяЗапись.ГТД							= СтрокаТаблицы.ГТД;
				НоваяЗапись.Номенклатура 				= СтрокаТаблицы.Номенклатура;
				НоваяЗапись.ХарактеристикаНоменклатуры 	= СтрокаТаблицы.ХарактеристикаНоменклатуры;
				НоваяЗапись.ХозОперация 				= ШапкаДокумента.ХозОперация;
				НоваяЗапись.Количество 					= - Мин(НадоВернуть, СтрокаТаблицыГТД.Количество, СтрокаТаблицы.Количество);
				НоваяЗапись.СуммаУпр 					= Окр(-(СтрокаТаблицы.СуммаУпр / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
				НоваяЗапись.СуммаПродажи 				= Окр(-(СтрокаТаблицы.СуммаПродажи / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
				
				
				// заполним суммы в валюте регл учета
				НоваяЗапись.СуммаРегл 					= Окр(-(СтрокаТаблицы.СуммаРегл/СтрокаТаблицы.Количество)*(-НоваяЗапись.Количество), 2);
				НоваяЗапись.СуммаПродажиРегл			= Окр(-(СтрокаТаблицы.СуммаПродажиРегл/СтрокаТаблицы.Количество)*(-НоваяЗапись.Количество), 2);
				
				НоваяЗапись.СуммаНДС = Окр(-(СтрокаТаблицы.СуммаНДС / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
				НоваяЗапись.СуммаНДСУпр = Окр(-(СтрокаТаблицы.СуммаНДСУпр / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
				НоваяЗапись.СуммаБезНДС    = НоваяЗапись.СуммаРегл - НоваяЗапись.СуммаНДС;
				НоваяЗапись.СуммаБезНДСУпр = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
				
				// Уменьшаем количество которое надо вернуть
				НадоВернуть = НадоВернуть - (-НоваяЗапись.Количество);
				СтрокаТаблицы.Количество = СтрокаТаблицы.Количество - (-НоваяЗапись.Количество);
				СтрокаТаблицыГТД.Количество = СтрокаТаблицыГТД.Количество - (-НоваяЗапись.Количество);
				
				// уменьшим суммы
				СтрокаТаблицы.СуммаУпр = СтрокаТаблицы.СуммаУпр + НоваяЗапись.СуммаУпр;
				СтрокаТаблицы.СуммаПродажи = СтрокаТаблицы.СуммаПродажи + НоваяЗапись.СуммаПродажи;
				СтрокаТаблицы.СуммаРегл = СтрокаТаблицы.СуммаРегл + НоваяЗапись.СуммаРегл;
				СтрокаТаблицы.СуммаПродажиРегл = СтрокаТаблицы.СуммаПродажиРегл + НоваяЗапись.СуммаПродажиРегл;
				СтрокаТаблицы.СуммаНДС    = СтрокаТаблицы.СуммаНДС + НоваяЗапись.СуммаНДС;
				СтрокаТаблицы.СуммаНДСУпр = СтрокаТаблицы.СуммаНДСУпр + НоваяЗапись.СуммаНДСУпр;
				
				Если СтрокаТаблицы.Количество = 0 Тогда
					// Удалим ненужные строки
					ТаблицаРеализованныхТоваров.Удалить(СтрокаТаблицы);
				КонецЕсли; 
				Если СтрокаТаблицыГТД.Количество = 0 Тогда
					Прервать;
				КонецЕсли; 
				Если НадоВернуть = 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если СтрокаТаблицыГТД.Количество = 0 Тогда
				// Удалим ненужные строки
				ТаблицаВозвращенныхГТД.Удалить(СтрокаТаблицыГТД);
			КонецЕсли; 
			Если НадоВернуть = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		// Получим строки таблицы партий с нашим товаром с пустой ГТД
		СтруктураОтбора = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры", СтрокаТовары.Номенклатура, СтрокаТовары.ХарактеристикаНоменклатуры);
		СтруктураОтбора.Вставить("ГТД", Справочники.ГТД.ПустаяСсылка());
		Если ЗначениеЗаполнено(СтрокаТовары.Партия) Тогда
			СтруктураОтбора.Вставить("ДокументПередачи", СтрокаТовары.Партия);
		КонецЕсли;
		Если АвтомобильВТаблице Тогда
			СтруктураОтбора.Вставить("Автомобиль", СтрокаТовары.Автомобиль);
		КонецЕсли;
		
		МассивСтрок = ТаблицаРеализованныхТоваров.НайтиСтроки(СтруктураОтбора);
		Для Сч = 0 По МассивСтрок.ВГраница() Цикл
			СтрокаТаблицы = МассивСтрок[Сч];
			
			Если СтрокаТаблицы.Количество - СтрокаТаблицы.КоличествоОтчетКомитенту - 
				Мин(НадоВернуть, СтрокаТаблицы.Количество) < 0 Тогда
				НадоВернуть = НадоВернуть - Мин(НадоВернуть, СтрокаТаблицы.Количество);
				Продолжить;					
			КонецЕсли;
			
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения 				= ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период 						= ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор 				= ШапкаДокумента.Ссылка;
			НоваяЗапись.Контрагент 					= СтрокаТаблицы.Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов 		= СтрокаТаблицы.ДоговорВзаиморасчетов;
			Если ЕстьАвтомобиль Тогда
				НоваяЗапись.Автомобиль              = СтрокаТаблицы.Автомобиль;
			КонецЕсли;
			НоваяЗапись.ДокументПередачи 			= СтрокаТаблицы.ДокументПередачи;
			НоваяЗапись.ГТД							= СтрокаТаблицы.ГТД;
			НоваяЗапись.Номенклатура 				= СтрокаТаблицы.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры 	= СтрокаТаблицы.ХарактеристикаНоменклатуры;
			НоваяЗапись.ХозОперация 				= ШапкаДокумента.ХозОперация;
			НоваяЗапись.Количество 					= - Мин(НадоВернуть, СтрокаТаблицы.Количество);
			НоваяЗапись.СуммаУпр 					= Окр(-(СтрокаТаблицы.СуммаУпр / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
			НоваяЗапись.СуммаПродажи 				= Окр(-(СтрокаТаблицы.СуммаПродажи / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
			НоваяЗапись.СуммаРегл 					= Окр(-(СтрокаТаблицы.СуммаРегл / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
			НоваяЗапись.СуммаПродажиРегл			= Окр(-(СтрокаТаблицы.СуммаПродажиРегл / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
			
			НоваяЗапись.СуммаНДС = Окр(-(СтрокаТаблицы.СуммаНДС / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
			НоваяЗапись.СуммаНДСУпр = Окр(-(СтрокаТаблицы.СуммаНДСУпр / СтрокаТаблицы.Количество) * (-НоваяЗапись.Количество), 2);
			НоваяЗапись.СуммаБезНДС    = НоваяЗапись.СуммаРегл - НоваяЗапись.СуммаНДС;
			НоваяЗапись.СуммаБезНДСУпр = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
			
			// Уменьшаем количество которое надо вернуть
			НадоВернуть = НадоВернуть - (-НоваяЗапись.Количество);
			
			Если СтрокаТаблицы.Количество = 0 Тогда
				// Удалим ненужные строки
				ТаблицаРеализованныхТоваров.Удалить(СтрокаТаблицы);
			КонецЕсли; 
			Если НадоВернуть = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		// Проверим чего осталось
		Если НадоВернуть > 0 Тогда
			ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТовары.Номенклатура);
			// Не удалось вернуть товар
			Если НЕ ЗначениеЗаполнено(СтрокаТовары.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" вернуть не удалось, так как товар в указанном количестве не был взят на комиссию .'"),
						ЗначениеКолонкиКода,
						СокрЛП(СтрокаТовары.Номенклатура)
					),
					ДокументОбъект,,, Истина
				);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" с характеристикой ""%3"" вернуть не удалось, так как товар в указанном количестве не был взят на комиссию .'"),
						ЗначениеКолонкиКода,
						СокрЛП(СтрокаТовары.Номенклатура),
						СокрЛП(СтрокаТовары.ХарактеристикаНоменклатуры)
					),
					ДокументОбъект,,, Истина
				);
			КонецЕсли; 
			ВсеОК = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// Убиваем циклическую ссылку
	ДокументОбъект 					= Неопределено;
	РезультатЗапросаПоПартиям 		= Неопределено;
	ТаблицаВозвращенныхТоваров 		= Неопределено;
	СтоимостьРеализованныхТоваров 	= Неопределено;
	ШапкаДокумента 					= Неопределено;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область Инициализация

// Сбросим переменные
РезультатЗапросаПоТоварам = Неопределено;
Списание             = Ложь;
ПоБазовомуКоличеству = Ложь;

ЕстьАвтомобиль       = Ложь;
Автомобиль           = Неопределено;

#КонецОбласти

#КонецЕсли