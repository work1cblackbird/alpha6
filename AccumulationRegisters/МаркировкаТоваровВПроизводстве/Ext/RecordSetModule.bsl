// Модуль набора записей регистра накоплений "Маркировка товаров в производстве"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем РежимПроведения Экспорт; // Режим проведения документа. Если проведение неоперативное - проверок остатков нет

Перем ДокументОбъект Экспорт; // Документ, осуществляющий движение по регистру
Перем РезультатЗапросаПоТоварам Экспорт; // Выборка табличной части или таблица значений табличной части товаров
Перем ДокументЗаказНаряд Экспорт; // Документ заказ-наряд, для которого производится перемещение товаров в производство
Перем Цех Экспорт; // Ссылка на цех, на котором необходимо производить приходование или расходование
Перем ПериодДвижения Экспорт; // Период движения регистра. Если период не задан, он берется из ДокументОбъект.Дата
Перем ШапкаДокумента Экспорт; // Выборка или строка таблицы значений. Содержит необходимые данные о шапке документа

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	// Преобразуем код маркировки
	Для Каждого Запись Из ЭтотОбъект Цикл
		Запись.КодМаркировки = МаркировкаТоваровКлиентСервер.ПолучитьКодМаркировки(Запись.КодМаркировки);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистру приход (увеличение маркировки товара в производстве)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - ошибка.
Функция Приход() Экспорт
	
	ВсеОК = Истина;
	
	ПериодДвижения = ?(ПериодДвижения = Неопределено, ШапкаДокумента.Дата, ПериодДвижения);
	
	// получим таблицу товарного состава
	Если (РезультатЗапросаПоТоварам = Неопределено)
		ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам) <> Тип("РезультатЗапроса"))
		И (ТипЗнч(РезультатЗапросаПоТоварам) <> Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоТоварам = ТоварыДокумента();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам = РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	
	ДополнитьТаблицуРезультатКодамиМаркировки();
	
	ВсеОК = ПроверитьОстаткиМаркировкиВПроизводстве(РезультатЗапросаПоТоварам, ДокументОбъект.Дата);
	
	// Смотрим строки товаров
	Для каждого СтрокаТоваров Из РезультатЗапросаПоТоварам Цикл
		ТекЗаказНаряд = ?(ДокументЗаказНаряд = Неопределено, СтрокаТоваров.ЗаказНаряд, ДокументЗаказНаряд);
		ТекЦех = ?(Цех = Неопределено, СтрокаТоваров.Цех, Цех);
		НоваяЗапись = Добавить();
		НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Приход;
		НоваяЗапись.Период = ПериодДвижения;
		НоваяЗапись.Регистратор = ШапкаДокумента.Ссылка;
		НоваяЗапись.Номенклатура = СтрокаТоваров.Номенклатура;
		НоваяЗапись.ХарактеристикаНоменклатуры = СтрокаТоваров.ХарактеристикаНоменклатуры;
		НоваяЗапись.ЗаказНаряд = ТекЗаказНаряд;
		НоваяЗапись.Цех = ТекЦех;
		НоваяЗапись.GTIN = СтрокаТоваров.GTIN;
		НоваяЗапись.СерийныйНомер = СтрокаТоваров.СерийныйНомер;
		НоваяЗапись.ГТД = СтрокаТоваров.ГТД;
		НоваяЗапись.Количество = СтрокаТоваров.Количество; // Пока штучный товар
		НоваяЗапись.КодМаркировки = СтрокаТоваров.КодМаркировки;
	КонецЦикла;
	
	// запись движений
	Если ВсеОК Тогда
		Записать();
	КонецЕсли;
	
	ДокументОбъект = Неопределено;
	ШапкаДокумента = Неопределено;
	РезультатЗапросаПоТоварам = Неопределено;
	ДокументЗаказНаряд = Неопределено;
	
	Возврат ВсеОК;
	
КонецФункции

// Формирует движения по регистру расход (уменьшение маркировки товара в производстве)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - ошибка.
Функция Расход() Экспорт
	ВсеОК = Истина;
	
	ПериодДвижения = ?(ПериодДвижения = Неопределено, ШапкаДокумента.Дата, ПериодДвижения);
	
	// получим таблицу товарного состава
	ПолучитьРезультатЗапросаПоТоварам();
	ДополнитьТаблицуРезультатКодамиМаркировки();
	
	ЗапросПоМаркировке = Новый Запрос;
	ЗапросПоМаркировке.Текст = ТекстЗапросаДвиженийКодаМаркировки();
	ЗапросПоМаркировке.УстановитьПараметр("ЗаказНаряд", ДокументЗаказНаряд);
	ЗапросПоМаркировке.УстановитьПараметр("Цех", Цех);
	ЗапросПоМаркировке.УстановитьПараметр("Номенклатура", РезультатЗапросаПоТоварам.ВыгрузитьКолонку("Номенклатура"));
	ЗапросПоМаркировке.УстановитьПараметр(
		"ХарактеристикаНоменклатуры",
		РезультатЗапросаПоТоварам.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
	ЗапросПоМаркировке.УстановитьПараметр("ВидДвиженияРегистра", ВидДвиженияНакопления.Приход);
	ВыборкаПоМаркировкеПриход = ЗапросПоМаркировке.Выполнить().Выбрать();
	ЗапросПоМаркировке.УстановитьПараметр("ВидДвиженияРегистра", ВидДвиженияНакопления.Расход);
	ЗапросПоМаркировкеРасход = ЗапросПоМаркировке.Выполнить().Выбрать();
	СтруктураОтбораТоваров = Новый Структура();
	СтруктураОтбораТоваров.Вставить("ЗаказНаряд");
	СтруктураОтбораТоваров.Вставить("Цех");
	СтруктураОтбораТоваров.Вставить("Номенклатура");
	СтруктураОтбораТоваров.Вставить("ХарактеристикаНоменклатуры");
	СтруктураОтбораТоваров.Вставить("GTIN");
	СтруктураОтбораТоваров.Вставить("СерийныйНомер");
	
	// Смотрим строки товаров
	Для Каждого СтрокаТоваров Из РезультатЗапросаПоТоварам Цикл
		Количество = СтрокаТоваров.Количество;
		ТекЗаказНаряд = ?(ДокументЗаказНаряд = Неопределено, СтрокаТоваров.ЗаказНаряд, ДокументЗаказНаряд);
		ТекЦех = ?(Цех = Неопределено, СтрокаТоваров.Цех, Цех);
		// Найдем такую номенклатуру в заказ-наряде и сколько уже маркировок сканировано
		СтруктураОтбораТоваров.ЗаказНаряд = ТекЗаказНаряд;
		СтруктураОтбораТоваров.Цех = ТекЦех;
		СтруктураОтбораТоваров.Номенклатура = СтрокаТоваров.Номенклатура;
		СтруктураОтбораТоваров.ХарактеристикаНоменклатуры = СтрокаТоваров.ХарактеристикаНоменклатуры;
		СтруктураОтбораТоваров.GTIN = СтрокаТоваров.GTIN;
		СтруктураОтбораТоваров.СерийныйНомер = СтрокаТоваров.СерийныйНомер;
		КоличествоМаркировок = 0;
		ГТД = Неопределено;
		ВыборкаПоМаркировкеПриход.Сбросить();
		Если ВыборкаПоМаркировкеПриход.НайтиСледующий(СтруктураОтбораТоваров) Тогда
			КоличествоМаркировок = 
				КоличествоМаркировок
				+ ?(ВыборкаПоМаркировкеПриход.Количество = NULL, 0, ВыборкаПоМаркировкеПриход.Количество);
			ГТД = ВыборкаПоМаркировкеПриход.ГТД;
		КонецЕсли;
		ЗапросПоМаркировкеРасход.Сбросить();
		Если ЗапросПоМаркировкеРасход.НайтиСледующий(СтруктураОтбораТоваров) Тогда
			КоличествоМаркировок =
				КоличествоМаркировок
				- ?(ЗапросПоМаркировкеРасход.Количество = NULL, 0, ЗапросПоМаркировкеРасход.Количество);
			ГТД = ВыборкаПоМаркировкеПриход.ГТД;
		КонецЕсли;
		Для Каждого СтрокаТекущихПеремещений Из ЭтотОбъект Цикл
			Если СтрокаТекущихПеремещений.Номенклатура = СтрокаТоваров.Номенклатура
				И СтрокаТекущихПеремещений.ХарактеристикаНоменклатуры = СтрокаТоваров.ХарактеристикаНоменклатуры
				И СтрокаТекущихПеремещений.Цех = ТекЦех 
				И СтрокаТекущихПеремещений.ЗаказНаряд = ТекЗаказНаряд 
				И СтрокаТекущихПеремещений.КодМаркировки = СтрокаТоваров.КодМаркировки Тогда
				КоличествоМаркировок = КоличествоМаркировок - СтрокаТекущихПеремещений.Количество;
			КонецЕсли; 
		КонецЦикла; 
		Если Количество > КоличествоМаркировок Тогда
			// Списывается из производства больше, чем перемещено
			ВыводСообщенияОбОшибке(
				СтрокаТоваров.Номенклатура,
				СтрокаТоваров.ХарактеристикаНоменклатуры,
				СтрокаТоваров.КодМаркировки);
			ВсеОК = Ложь;
		КонецЕсли; 
		Если ВсеОК И Количество <> 0 Тогда
			// Создаем запись регистра заказов покупателей
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период = ПериодДвижения;
			НоваяЗапись.Регистратор = ШапкаДокумента.Ссылка;
			НоваяЗапись.Номенклатура = СтрокаТоваров.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры = СтрокаТоваров.ХарактеристикаНоменклатуры;
			НоваяЗапись.ЗаказНаряд = ТекЗаказНаряд;
			НоваяЗапись.Цех = ТекЦех;
			НоваяЗапись.GTIN = СтрокаТоваров.GTIN;
			НоваяЗапись.СерийныйНомер = СтрокаТоваров.СерийныйНомер;
			НоваяЗапись.ГТД = ГТД;
			НоваяЗапись.Количество = Количество;
			НоваяЗапись.КодМаркировки = СтрокаТоваров.КодМаркировки;
		КонецЕсли;
	КонецЦикла; 
	
	// запись движений
	Если ВсеОК Тогда
		Записать();
	КонецЕсли;
	
	ДокументОбъект = Неопределено;
	ШапкаДокумента = Неопределено;
	РезультатЗапросаПоТоварам = Неопределено;
	ДокументЗаказНаряд = Неопределено;
	
	Возврат ВсеОК;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////
// Функции модуля набора записей

// Проверка наличия в производстве детали с данной маркировкой.
//
Функция ПроверитьОстаткиМаркировкиВПроизводстве(ТаблицаМаркировок, МоментВремени = Неопределено)
	
	Результат = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаКМ.GTIN КАК GTIN,
	               |	ТаблицаКМ.СерийныйНомер КАК СерийныйНомер,
	               |	ТаблицаКМ.КодМаркировки КАК КодМаркировки
	               |ПОМЕСТИТЬ СписокКМ
	               |ИЗ
	               |	&ТаблицаКМ КАК ТаблицаКМ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МаркировкаТоваровВПроизводствеОстатки.ЗаказНаряд КАК ЗаказНаряд,
	               |	МаркировкаТоваровВПроизводствеОстатки.Номенклатура КАК Номенклатура,
	               |	МаркировкаТоваровВПроизводствеОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	МаркировкаТоваровВПроизводствеОстатки.GTIN КАК GTIN,
	               |	МаркировкаТоваровВПроизводствеОстатки.СерийныйНомер КАК СерийныйНомер,
	               |	МаркировкаТоваровВПроизводствеОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	ЕСТЬNULL(СписокКМ.КодМаркировки, """") КАК КодМаркировки
	               |ИЗ
	               |	РегистрНакопления.МаркировкаТоваровВПроизводстве.Остатки(
	               |			&МоментВремени,
	               |			(GTIN, СерийныйНомер) В
	               |				(ВЫБРАТЬ
	               |					СписокКМ.GTIN КАК GTIN,
	               |					СписокКМ.СерийныйНомер КАК СерийныйНомер
	               |				ИЗ
	               |					СписокКМ КАК СписокКМ)) КАК МаркировкаТоваровВПроизводствеОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СписокКМ КАК СписокКМ
	               |		ПО МаркировкаТоваровВПроизводствеОстатки.GTIN = СписокКМ.GTIN
	               |			И МаркировкаТоваровВПроизводствеОстатки.СерийныйНомер = СписокКМ.СерийныйНомер";
	Запрос.УстановитьПараметр("МоментВремени",
		?(МоментВремени = Неопределено, Новый МоментВремени(КонецДня(ТекущаяДатаСеанса())), МоментВремени));
	Запрос.УстановитьПараметр("ТаблицаКМ", ТаблицаМаркировок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.КоличествоОстаток > 0 Тогда
			Если ЗначениеЗаполнено(Выборка.ХарактеристикаНоменклатуры) Тогда
				ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(Выборка.Номенклатура);
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" с характеристикой ""%3"" с маркировкой %4 перемещен в производство для документа %5'"),
						ЗначениеКолонкиКода,
						СокрЛП(Выборка.Номенклатура),
						СокрЛП(Выборка.ХарактеристикаНоменклатуры),
						СокрЛП(Выборка.КодМаркировки),
						СокрЛП(Выборка.ЗаказНаряд)),
					ДокументОбъект
				);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" с маркировкой %3 перемещен в производство для документа %4'"),
						ЗначениеКолонкиКода,
						СокрЛП(Выборка.Номенклатура),
						СокрЛП(Выборка.КодМаркировки),
						СокрЛП(Выборка.ЗаказНаряд)),
					ДокументОбъект
				);
			КонецЕсли; 
			Результат = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ТоварыДокумента()
	
	ВидДок = ДокументОбъект.Метаданные().Имя;
	
	ЕстьГТД = ДокументОбъект.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("ГТД") <> Неопределено;
	
	УсловиеЗН = ?(ДокументЗаказНаряд = Неопределено, "ДокументТовары.ЗаказНаряд", "&ЗаказНаряд");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокументКодыМаркировки.ИдентификаторТовара КАК ИдентификаторТовара,
	               |	ДокументКодыМаркировки.КодМаркировки КАК КодМаркировки
	               |ПОМЕСТИТЬ КодыМаркировок
	               |ИЗ
	               |	Документ." + ВидДок + ".КодыМаркировки КАК ДокументКодыМаркировки
	               |ГДЕ
	               |	ДокументКодыМаркировки.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДокументТовары.Номенклатура КАК Номенклатура,
	               |	ДокументТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	" + УсловиеЗН + " КАК ЗаказНаряд,
	               |	" + ?(Цех = Неопределено, "ДокументТовары.Цех", "&Цех") + " КАК Цех,
	               |	" + ?(ЕстьГТД, "ДокументТовары.ГТД", "ЗНАЧЕНИЕ(Справочник.ГТД.ПустаяСсылка)") + " КАК ГТД,
	               |	ДокументТовары.ИдентификаторТовара КАК ИдентификаторТовара
	               |ПОМЕСТИТЬ ТоварыДокумента
	               |ИЗ
	               |	Документ." + ВидДок + ".Товары КАК ДокументТовары
	               |ГДЕ
	               |	ДокументТовары.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КодыМаркировок.КодМаркировки КАК КодМаркировки,
	               |	ТоварыДокумента.Номенклатура КАК Номенклатура,
	               |	ТоварыДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ТоварыДокумента.ЗаказНаряд КАК ЗаказНаряд,
	               |	ТоварыДокумента.Цех КАК Цех,
	               |	ТоварыДокумента.ГТД КАК ГТД,
	               |	1 КАК Количество
	               |ИЗ
	               |	КодыМаркировок КАК КодыМаркировок
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыДокумента КАК ТоварыДокумента
	               |		ПО КодыМаркировок.ИдентификаторТовара = ТоварыДокумента.ИдентификаторТовара";
	
	Запрос.УстановитьПараметр("Ссылка", ШапкаДокумента.Ссылка);
	Запрос.УстановитьПараметр("ЗаказНаряд", ДокументЗаказНаряд);
	Запрос.УстановитьПараметр("Цех", Цех);
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ТоварыДокумента()

Процедура ПолучитьРезультатЗапросаПоТоварам()
	
	Если (РезультатЗапросаПоТоварам = Неопределено)
		ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам) <> Тип("РезультатЗапроса"))
		И (ТипЗнч(РезультатЗапросаПоТоварам) <> Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоТоварам = ТоварыДокумента();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам = РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаДвиженийКодаМаркировки()
	
	Возврат
	"ВЫБРАТЬ
	|	МаркировкаТоваровВПроизводстве.ЗаказНаряд КАК ЗаказНаряд,
	|	МаркировкаТоваровВПроизводстве.Цех КАК Цех,
	|	МаркировкаТоваровВПроизводстве.Номенклатура КАК Номенклатура,
	|	МаркировкаТоваровВПроизводстве.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	МаркировкаТоваровВПроизводстве.ГТД КАК ГТД,
	|	СУММА(МаркировкаТоваровВПроизводстве.Количество) КАК Количество,
	|	МаркировкаТоваровВПроизводстве.GTIN КАК GTIN,
	|	МаркировкаТоваровВПроизводстве.СерийныйНомер КАК СерийныйНомер
	|ИЗ
	|	РегистрНакопления.МаркировкаТоваровВПроизводстве КАК МаркировкаТоваровВПроизводстве
	|ГДЕ
	|	МаркировкаТоваровВПроизводстве.Номенклатура В(&Номенклатура)
	|	И МаркировкаТоваровВПроизводстве.ХарактеристикаНоменклатуры В(&ХарактеристикаНоменклатуры)
	|	И НЕ МаркировкаТоваровВПроизводстве.Регистратор ССЫЛКА Документ.ЗаказНаряд
	|	И МаркировкаТоваровВПроизводстве.ВидДвижения = &ВидДвиженияРегистра
	|	" + ?(ДокументЗаказНаряд = Неопределено, "", "И МаркировкаТоваровВПроизводстве.ЗаказНаряд=&ЗаказНаряд") + "
	|	" + ?(Цех = Неопределено, "", "И МаркировкаТоваровВПроизводстве.Цех=&Цех") + "
	|
	|СГРУППИРОВАТЬ ПО
	|	МаркировкаТоваровВПроизводстве.Номенклатура,
	|	МаркировкаТоваровВПроизводстве.ХарактеристикаНоменклатуры,
	|	МаркировкаТоваровВПроизводстве.ГТД,
	|	МаркировкаТоваровВПроизводстве.Цех,
	|	МаркировкаТоваровВПроизводстве.ЗаказНаряд,
	|	МаркировкаТоваровВПроизводстве.GTIN,
	|	МаркировкаТоваровВПроизводстве.СерийныйНомер";
	
КонецФункции

Процедура ВыводСообщенияОбОшибке(Номенклатура, ХарактеристикаНоменклатуры, КодМаркировки)
	
	ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(Номенклатура);
	Если ЗначениеЗаполнено(ХарактеристикаНоменклатуры) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = '[%1] Товар ""%2"" с характеристикой ""%3"" с маркировкой %4 не перемещался в производство.'"),
				ЗначениеКолонкиКода,
				СокрЛП(Номенклатура),
				СокрЛП(ХарактеристикаНоменклатуры),
				СокрЛП(КодМаркировки)),
				ДокументОбъект
		);
	Иначе
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = '[%1] Товар ""%2"" с маркировкой %3 не перемещался в производство.'"),
				ЗначениеКолонкиКода,
				СокрЛП(Номенклатура),
				СокрЛП(КодМаркировки)),
			ДокументОбъект
		);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьТаблицуРезультатКодамиМаркировки()
	
	// Необходимо дополнить ТЗ данными по маркировки
	ЕстьGTIN = РезультатЗапросаПоТоварам.Колонки.Найти("GTIN") <> Неопределено;
	ЕстьСерийныйНомер = РезультатЗапросаПоТоварам.Колонки.Найти("СерийныйНомер") <> Неопределено;
	
	Если ЕстьGTIN И ЕстьСерийныйНомер Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЕстьGTIN Тогда
		РезультатЗапросаПоТоварам.Колонки.Добавить("GTIN", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	КонецЕсли;
	
	Если НЕ ЕстьСерийныйНомер Тогда
		РезультатЗапросаПоТоварам.Колонки.Добавить(
			"СерийныйНомер",
		Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из РезультатЗапросаПоТоварам Цикл
		
		СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(ТекущаяСтрока.КодМаркировки);
			Если НЕ СтруктураМаркировки.Разобран 
				И СтруктураМаркировки.ТипИдентификатораТовара <>
				ПредопределенноеЗначение("Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1") Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяСтрока.GTIN = СтруктураМаркировки.GTIN;
		ТекущаяСтрока.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

////////////////////////////////////////////////////////////////////////
// Инициализация переменных модуля набора записей

РежимПроведения = РежимПроведенияДокумента.Оперативный;
ДокументОбъект = Неопределено;
РезультатЗапросаПоТоварам = Неопределено;
ДокументЗаказНаряд = Неопределено;
Цех = Неопределено;
ПериодДвижения = Неопределено;

#КонецОбласти

#КонецЕсли
