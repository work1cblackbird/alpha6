// Модуль набора записей регистра накоплений "Начисления сотрудникам по заказ-нарядам"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем РежимПроведения Экспорт; // Режим проведения документа. Если проведение неоперативное - проверок остатков нет

Перем ДокументОбъект Экспорт; //Документ, осуществляющий движение по регистру
Перем ПериодДвижения Экспорт; //Период движения регистра. Если период не задан, он берется из ДокументОбъект.Дата
Перем РезультатЗапросаПоРаботам Экспорт; //Выборка табличной части или таблица значений табличной части Авторабот
Перем РезультатЗапросаПоИсполнителям Экспорт; //Выборка табличной части или таблица значений табличной части Исполнителей
Перем РаспределениеСумм Экспорт; // Таблица с распределением сумм по автоработам в регламентированной и управленческой валютах

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистру
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - ошибка.
Функция Движение() Экспорт
	ВсеОК = Истина;
	
	ЗаполнитьДанныеЗаполненияНачислений();
	
	// Получим валюту и курс управленческого учета
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	СтруктураКурса	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл,ПериодДвижения);
	КурсРегл		= СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	
	ВалютаУпр  = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	КурсУпр = Неопределено;
	Попытка
		Если ЗначениеЗаполнено(ДокументОбъект.КурсВалютыУпр) Тогда
			КурсУпр = ДокументОбъект.КурсВалютыУпр;
		КонецЕсли;
	Исключение
	КонецПопытки;
	Если КурсУпр = Неопределено Тогда
		СтруктураКурса	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр,ПериодДвижения);
		КурсУпр			= СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;
	
	ЕстьПересчетСумм = РаспределениеСумм <> Неопределено
		И РаспределениеСумм.Колонки.Найти("СуммаУпр") <> Неопределено
		И РаспределениеСумм.Колонки.Найти("СуммаНДСУпр") <> Неопределено
		И РаспределениеСумм.Колонки.Найти("СуммаСкидкиУпр") <> Неопределено;
	
	// Перебираем строки работ
	Для Каждого СтрокаРабот Из РезультатЗапросаПоРаботам Цикл
		Авторабота = СтрокаРабот.Авторабота;
		ИдентификаторРаботы  = СтрокаРабот.ИдентификаторРаботы;
		ИсполнителиРаботы  = РезультатЗапросаПоИсполнителям.НайтиСтроки(
			Новый Структура("ИдентификаторРаботы",ИдентификаторРаботы));
		Для Каждого СтрокаИсполнителей Из ИсполнителиРаботы Цикл
			// Создаем запись регистра
			НоваяЗапись = Добавить();
			НоваяЗапись.Период                = ПериодДвижения;
			НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
			НоваяЗапись.Организация           = ДокументОбъект.Организация;
			НоваяЗапись.ПодразделениеКомпании = ДокументОбъект.ПодразделениеКомпании;
			НоваяЗапись.ЗаказНаряд            = ДокументОбъект.Ссылка;
			НоваяЗапись.ВидНачисления         = СтрокаИсполнителей.ВидНачисления;
			НоваяЗапись.Сотрудник             = СтрокаИсполнителей.Исполнитель;
			НоваяЗапись.Авторабота            = Авторабота;
			
			Если ЕстьПересчетСумм Тогда 
				СуммыАвтоработы = РаспределениеСумм.НайтиСтроки(Новый Структура("ИдентификаторРаботы", ИдентификаторРаботы));
				КоэффициентПересчета = Окр(СуммыАвтоработы[0].Сумма / ?(СтрокаРабот.СуммаВсего = 0, 1, СтрокаРабот.СуммаВсего), 6);
				КоэффициентПересчетаУпр = Окр(СуммыАвтоработы[0].СуммаУпр / ?(СтрокаРабот.СуммаВсего = 0, 1, СтрокаРабот.СуммаВсего), 6);
				НоваяЗапись.Начислено = Окр(СтрокаИсполнителей.Начислено * КоэффициентПересчета, 2);
				НоваяЗапись.НачисленоУпр = Окр(СтрокаИсполнителей.Начислено * КоэффициентПересчетаУпр, 2);
			Иначе
				НоваяЗапись.Начислено = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
					СтрокаИсполнителей.Начислено,
					ДокументОбъект.ВалютаДокумента,
					ДокументОбъект.КурсДокумента,
					ВалютаРегл,
					КурсРегл);
				НоваяЗапись.НачисленоУпр = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
					СтрокаИсполнителей.Начислено,
					ДокументОбъект.ВалютаДокумента,
					ДокументОбъект.КурсДокумента,
					ВалютаУпр,
					КурсУпр);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// запись движений
	Записать();
	
	РежимПроведения = Неопределено;
	ДокументОбъект  = Неопределено;
	ПериодДвижения  = Неопределено;
	РезультатЗапросаПоРаботам = Неопределено;
	РезультатЗапросаПоИсполнителям = Неопределено;
	РаспределениеСумм = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получение парамтеров для заполнения
//
Процедура ЗаполнитьДанныеЗаполненияНачислений()
	
	Если РезультатЗапросаПоРаботам = Неопределено
		И РезультатЗапросаПоИсполнителям = Неопределено Тогда
		ВидДок = ДокументОбъект.Метаданные().Имя;
		Запрос=Новый Запрос();
		ТекстЗапроса="ВЫБРАТЬ
		|	ДокументИсполнители.ИдентификаторРаботы КАК ИдентификаторРаботы,
		|	ДокументИсполнители.Исполнитель КАК Исполнитель,
		|	ДокументИсполнители.ВидНачисления КАК ВидНачисления,
		|	ДокументИсполнители.Начислено КАК Начислено
		|ИЗ
		|	Документ." + ВидДок + ".Исполнители КАК ДокументИсполнители
		|ГДЕ
		|	ДокументИсполнители.Ссылка = &Ссылка
		|	И ДокументИсполнители.Начислено <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказНарядАвтоработы.ИдентификаторРаботы КАК ИдентификаторРаботы,
		|	ЗаказНарядАвтоработы.Авторабота КАК Авторабота,
		|	ЗаказНарядАвтоработы.СуммаВсего КАК СуммаВсего
		|ИЗ
		|	Документ." + ВидДок + ".Автоработы КАК ЗаказНарядАвтоработы
		|ГДЕ
		|	ЗаказНарядАвтоработы.Ссылка = &Ссылка";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
		
		ПакетЗапроса = Запрос.ВыполнитьПакет();
		РезультатЗапросаПоИсполнителям = ПакетЗапроса[0].Выгрузить();
		РезультатЗапросаПоРаботам = ПакетЗапроса[1].Выгрузить();
	Иначе
		Если ТипЗнч(РезультатЗапросаПоРаботам) = Тип("РезультатЗапроса") Тогда
			РезультатЗапросаПоРаботам = РезультатЗапросаПоРаботам.Выгрузить();
		КонецЕсли;
		Если ТипЗнч(РезультатЗапросаПоИсполнителям) = Тип("РезультатЗапроса") Тогда
			РезультатЗапросаПоИсполнителям = РезультатЗапросаПоИсполнителям.Выгрузить();
		КонецЕсли;
	КонецЕсли;
	
	ПериодДвижения = ?(ПериодДвижения = Неопределено, ДокументОбъект.Дата, ПериодДвижения);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

////////////////////////////////////////////////////////////////////////
// Инициализация переменных модуля набора записей

РежимПроведения = РежимПроведенияДокумента.Оперативный;

ДокументОбъект = Неопределено; // Обязательный к заполнению перед началом проведения
ПериодДвижения = Неопределено;
РезультатЗапросаПоРаботам = Неопределено;
РезультатЗапросаПоИсполнителям = Неопределено;
РаспределениеСумм = Неопределено;

#КонецОбласти

#КонецЕсли