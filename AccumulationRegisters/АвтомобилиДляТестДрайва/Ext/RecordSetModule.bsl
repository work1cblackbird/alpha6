// Модуль набора записей регистра накоплений "Автомобили для тест драйва"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ДокументОбъект                Экспорт; // Документ
Перем РезультатЗапросаПоАвтомобилям Экспорт; // Результат запроса
Перем ПодразделениеКомпании         Экспорт; // Подразделения компании

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция Приход() Экспорт
	
	Результат = Ложь;
	
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям.Выгрузить();
	КонецЕсли;
	
	ИмяРеквизитаАктива    = ?(ЕстьРеквизит(РезультатЗапросаПоАвтомобилям, "ПрочийАктив"), "ПрочийАктив", "Актив");
	ЕстьКолонкаАвтомобиль =   ЕстьРеквизит(РезультатЗапросаПоАвтомобилям, "Автомобиль");
	
	ТаблицаОстатковАвто = РегистрыНакопления.АвтомобилиДляТестДрайва.ПолучитьТаблицуАвтомобилей(
		?(ЕстьКолонкаАвтомобиль, РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку("Автомобиль"), Новый Массив),
		РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку(ИмяРеквизитаАктива),
		ДокументОбъект.Дата);
	
	Для Каждого СтрокаТЧ Из РезультатЗапросаПоАвтомобилям Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Актив", СтрокаТЧ[ИмяРеквизитаАктива]);
		Если ЕстьКолонкаАвтомобиль Тогда
			СтруктураПоиска.Вставить("Автомобиль", СтрокаТЧ.Автомобиль);
		КонецЕсли;
		
		МассивНайденных = ТаблицаОстатковАвто.НайтиСтроки(СтруктураПоиска);
		Если МассивНайденных.Количество() Тогда
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Актив <%1> уже находится в эксплуатации. Подразделение <%2>, вид аренды <%3>.'"),
					МассивНайденных[0][ИмяРеквизитаАктива],
					МассивНайденных[0].ПодразделениеКомпании,
					?(ЗначениеЗаполнено(МассивНайденных[0].ВидАренды), МассивНайденных[0].ВидАренды, "не указан"))
				);
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = Добавить();
		НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
		НоваяЗапись.Период                = ДокументОбъект.Дата;
		НоваяЗапись.ВидДвижения           = ВидДвиженияНакопления.Приход;
		НоваяЗапись.ПодразделениеКомпании = ПодразделениеКомпании;
		НоваяЗапись.Модель                = СтрокаТЧ.Автомобиль.Модель;
		НоваяЗапись.Автомобиль            = СтрокаТЧ.Автомобиль;
		НоваяЗапись.Актив                 = СтрокаТЧ.Актив;
		// аренда автомобилей
		НоваяЗапись.ВидАренды             = СтрокаТЧ.ВидАренды;
		
		НоваяЗапись.Количество                                = 1;
		НоваяЗапись.МаксимальнаяПродолжительностьЭксплуатации = ДобавитьМесяц(ДокументОбъект.Дата,
																			  СтрокаТЧ.МаксимальнаяПродолжительностьЭксплуатации);
		НоваяЗапись.МаксимальныйПробег                        = СтрокаТЧ.МаксимальныйПробег;
		НоваяЗапись.ХозОперация                               = ДокументОбъект.ХозОперация;
		
	КонецЦикла;
	
	Возврат НЕ Результат;
	
КонецФункции

Функция Расход() Экспорт
	
	Результат = Ложь;
	
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям.Выгрузить();
	КонецЕсли;
	
	ИмяРеквизитаАктива    = ?(ЕстьРеквизит(РезультатЗапросаПоАвтомобилям, "ПрочийАктив"), "ПрочийАктив", "Актив");
	ЕстьКолонкаАвтомобиль =   ЕстьРеквизит(РезультатЗапросаПоАвтомобилям, "Автомобиль");
	ЕстьКолонкаВидАренды  =   ЕстьРеквизит(РезультатЗапросаПоАвтомобилям, "ВидАренды");
	
	ТаблицаОстатковАвто = РегистрыНакопления.АвтомобилиДляТестДрайва.ПолучитьТаблицуАвтомобилей(
		?(ЕстьКолонкаАвтомобиль, РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку("Автомобиль"), Новый Массив),
		РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку(ИмяРеквизитаАктива),
		ДокументОбъект.Дата);
	
	Для Каждого СтрокаТЧ Из РезультатЗапросаПоАвтомобилям Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Актив", СтрокаТЧ[ИмяРеквизитаАктива]);
		Если ЕстьКолонкаАвтомобиль Тогда
			СтруктураПоиска.Вставить("Автомобиль", СтрокаТЧ.Автомобиль);
		КонецЕсли;
		Если ЕстьКолонкаВидАренды Тогда
			СтруктураПоиска.Вставить("ВидАренды", СтрокаТЧ.ВидАренды);
		КонецЕсли;
		
		МассивНайденных = ТаблицаОстатковАвто.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого стрМассива Из МассивНайденных Цикл
			НоваяСтрока = Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, стрМассива);
			НоваяСтрока.Регистратор = ДокументОбъект.Ссылка;
			НоваяСтрока.Период      = ДокументОбъект.Дата;
			НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
			НоваяСтрока.ХозОперация = ДокументОбъект.ХозОперация;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат НЕ Результат;
	
КонецФункции

Функция Перемещение() Экспорт
	
	Результат = Расход();
	
	Если Результат Тогда
		СтрокиДляПеремещения = Выгрузить();
		Для Каждого стрАвто Из СтрокиДляПеремещения Цикл
			НоваяЗапись = Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, стрАвто);
			НоваяЗапись.Период                = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
			НоваяЗапись.ВидДвижения           = ВидДвиженияНакопления.Приход;
			НоваяЗапись.ПодразделениеКомпании = ПодразделениеКомпании;
			НоваяЗапись.ХозОперация           = ДокументОбъект.ХозОперация;
			// аренда автомобилей
			НайденныеСтроки = ДокументОбъект.Активы.НайтиСтроки(Новый Структура("ПрочийАктив", НоваяЗапись.Актив));
			Если НайденныеСтроки.Количество() Тогда
				НоваяЗапись.ВидАренды         = НайденныеСтроки[0].ВидАрендыНовый;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Инициализация

ДокументОбъект                = Неопределено;
РезультатЗапросаПоАвтомобилям = Неопределено;
ПодразделениеКомпании         = Неопределено;

#КонецОбласти

#КонецЕсли