// Модуль менеджера регистра накоплений "Автомобили для тест драйва"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуАвтомобилей(Автомобили,
	Активы,
	ДатаСреза = Неопределено,
	ВидГраницыСреза = Неопределено,
	ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДатаСреза = Неопределено Тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если ВидГраницыСреза = Неопределено Тогда
		ВидГраницыСреза = ВидГраницы.Включая;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АвтомобилиДляТестДрайваОстатки.ПодразделениеКомпании КАК ПодразделениеКомпании,
		|	АвтомобилиДляТестДрайваОстатки.Модель КАК Модель,
		|	АвтомобилиДляТестДрайваОстатки.Автомобиль КАК Автомобиль,
		|	АвтомобилиДляТестДрайваОстатки.Актив КАК Актив,
		|	АвтомобилиДляТестДрайваОстатки.ВидАренды КАК ВидАренды,
		|	АвтомобилиДляТестДрайваОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.АвтомобилиДляТестДрайва.Остатки(
		|			&ДатаСреза,
		|			&Условие_1
		|				И &Условие_2) КАК АвтомобилиДляТестДрайваОстатки";
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&Условие_1",
		?(Автомобили.Количество(), "Автомобиль В (&Автомобили)", "Истина")
	);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие_2", ?(Активы.Количество(), "Актив В (&Активы)", "Истина"));
	Запрос.УстановитьПараметр("Автомобили", Автомобили);
	Запрос.УстановитьПараметр("Активы", Активы);
	Запрос.УстановитьПараметр("ДатаСреза",  Новый Граница(ДатаСреза, ВидГраницыСреза));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаполнитьВидАренды(Объект,
	ИмяТабличнойЧасти = "Активы",
	ИмяРеквизитаТабличнойЧасти = "ВидАренды",
	ДополнительныеПараметры = Неопределено) Экспорт
	
	ТаблицаЗначений = Объект[ИмяТабличнойЧасти].Выгрузить();
	
	ИмяРеквизитаАктива    = ?(ЕстьРеквизит(Объект, "ПрочийАктив", ИмяТабличнойЧасти), "ПрочийАктив", "Актив");
	ЕстьКолонкаАвтомобиль =   ЕстьРеквизит(Объект, "Автомобиль",  ИмяТабличнойЧасти);
	
	ИнформацияПоАвтомобилям = ПолучитьТаблицуАвтомобилей(
		?(ЕстьКолонкаАвтомобиль, ТаблицаЗначений.ВыгрузитьКолонку("Автомобиль"), Новый Массив),
		ТаблицаЗначений.ВыгрузитьКолонку(ИмяРеквизитаАктива),
		Объект.Дата,
		ПолучитьВидГраницыСреза(Объект));
	
	Для Каждого Строка Из Объект[ИмяТабличнойЧасти] Цикл
		ЗаполнитьВидАрендыАвтомобиля(Объект, Строка, , ИнформацияПоАвтомобилям);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьВидАрендыАвтомобиля(Объект,
	Строка,
	ИмяРеквизитаТабличнойЧасти = "ВидАренды",
	ИнформацияПоАвтомобилям = Неопределено,
	ДополнительныеПараметры = Неопределено) Экспорт
	
	ИмяРеквизитаАктива    = ?(ЕстьРеквизит(Строка, "ПрочийАктив"), "ПрочийАктив", "Актив");
	ЕстьКолонкаАвтомобиль =   ЕстьРеквизит(Строка, "Автомобиль");
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Актив", Строка[ИмяРеквизитаАктива]);
	Если ЕстьКолонкаАвтомобиль Тогда
		СтруктураПоиска.Вставить("Автомобиль", Строка.Автомобиль);
	КонецЕсли;
	
	Если ИнформацияПоАвтомобилям = Неопределено Тогда
		МассивАктивов = Новый Массив;
		МассивАктивов.Добавить(Строка[ИмяРеквизитаАктива]);
		МассивАвтомобилей = Новый Массив;
		Если ЕстьКолонкаАвтомобиль Тогда
			МассивАвтомобилей.Добавить(Строка.Автомобиль);
		КонецЕсли;
		ИнформацияПоАвтомобилям = ПолучитьТаблицуАвтомобилей(МассивАвтомобилей,
			МассивАктивов,
			Объект.Дата,
			ПолучитьВидГраницыСреза(Объект));
	КонецЕсли;
	
	Информация = ИнформацияПоАвтомобилям.НайтиСтроки(СтруктураПоиска);
	Если Информация.Количество() Тогда
		Строка[ИмяРеквизитаТабличнойЧасти] = Информация[0].ВидАренды;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьВидГраницыСреза(Объект)
	
	ТипСсылкиОбъекта = ТипЗнч(Объект.Ссылка);
	
	МассивВключая = Новый Массив;
	МассивВключая.Добавить(Тип("ДокументСсылка.ВводВЭксплуатацию"));
	МассивВключая.Добавить(Тип("ДокументСсылка.ПеремещениеАктивов"));
	
	МассивИсключая = Новый Массив;
	МассивИсключая.Добавить(Тип("ДокументСсылка.ВыводИзЭксплуатацииАвтомобилей"));
	МассивИсключая.Добавить(Тип("ДокументСсылка.СписаниеАктивов"));
	МассивИсключая.Добавить(Тип("ДокументСсылка.РеализацияАктивов"));
	
	Возврат ?(
		МассивВключая.Найти(ТипСсылкиОбъекта) = Неопределено И МассивИсключая.Найти(ТипСсылкиОбъекта) <> Неопределено,
		ВидГраницы.Исключая, ВидГраницы.Включая);
	
КонецФункции

#КонецОбласти

#КонецЕсли