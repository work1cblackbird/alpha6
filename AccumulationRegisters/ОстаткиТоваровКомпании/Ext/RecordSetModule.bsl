// Модуль набора записей регистра накоплений "Остатки товаров компании"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем РежимПроведения Экспорт;				// Режим проведения документа оперативный/неоперативный

Перем ДокументОбъект Экспорт;				// Документ, осуществляющий движение по регистру
Перем РезультатЗапросаПоТоварам Экспорт;	// Выборка табличной части или таблица значений табличной части товаров
Перем СкладКомпании Экспорт;				// Ссылка на склад компании, на котором необходимо производить приходование и резервирование. Если значение неопределено склад находится в табличной части товаров
Перем ГраницаРасчетаОстатков Экспорт;		// Граница расчета остатков
Перем ПоБазовомуКоличеству Экспорт;			// Булево. Ложь - количество товаров будет рассчитываться как "Количество*Коэффициент", Истина - количество будет браться из реквизита "КоличествоБазовое"
Перем Пересортица Экспорт;					// Булево. Истина - проведение документа Пересортица

// Розница
Перем ДвиженияПоРознице Экспорт;			// Булево. Истина - необходимо сделать движения по рознице
Перем ИмяРеквизитаЦенаРозничная Экспорт;	// Строка. Имя реквизита, в котором храниться розничная цена
Перем ИмяРеквизитаСуммаРозничная Экспорт;	// Строка. Имя реквизита, в котором храниться розничная сумма
Перем ЕстьРозничнаяСумма Экспорт;			// Булево. Истина - в таблице товаров указана сумма розницы и все движения надо делать по ней. Ложь - все движения идут в расчете из цены розн.
Перем ЕстьСуммаСкидки Экспорт;				// Булево. Истина - в таблице товаров указана сумма скидки.
Перем СписыватьРозницуПоОстаткам Экспорт;	// Булево. Истина - розничная сумма списывается из расчета остатков
Перем Контрагент Экспорт;					// Для розничных точек

// В соответствии с этими флагами используются соответствующие колонки таблицы товаров.
Перем Приходовать	Экспорт; // Булево. Истина - надо приходовать товары на склад
Перем Резервировать	Экспорт; // Булево. Истина - надо резервировать товар на складе

Перем РазрешитьПереоценку Экспорт;          // Булево. Ложь - переоценка запрещена в любом случае

Перем ДеревоОстатковТоваров,ТаблицаРучныхХарактеристик; // что бы по 2 раза не получить в переоценке

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Переоценивает учетную розничную стоимость склада
Функция Переоценка(ХозОперация,СбрасыватьПеременные=Истина,ПереоценитьВсе=Истина) Экспорт
	ДвиженияПоРознице=?(ДвиженияПоРознице=Неопределено,Ложь,ДвиженияПоРознице);
	// получим таблицу товарного состава
	Если (РезультатЗапросаПоТоварам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоТоварам=ПолучитьТаблицуТоваров();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам=РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	ТаблицаТоваров=РезультатЗапросаПоТоварам;
	// если нет остатков, то получим их
	Если ДеревоОстатковТоваров=Неопределено Тогда
		ДеревоОстатковТоваров=ПолучитьДеревоОстатков();
	КонецЕсли;
	
	// упорядочим по нормальному
	ТаблицаТоваров.Сортировать("Номенклатура Возр,ХарактеристикаНоменклатуры Убыв");
	
	// получим таблицу номенклатуры с ручным списанием характеристик
	Если ТаблицаРучныхХарактеристик=Неопределено Тогда
		ТаблицаРучныхХарактеристик=ОбработкаТабличнойЧастиТовары.ПолучитьНоменклатуруСРучнымСписаниемХарактеристик(ДокументОбъект.Ссылка);
	КонецЕсли;
		
	// переоцениваем
	Для Каждого СтрокаТовар Из ТаблицаТоваров Цикл
		Склад=?(СкладКомпании=Неопределено,СтрокаТовар.СкладКомпании,СкладКомпании);
		
		СтрокаОстатковНоменклатуры=ДеревоОстатковТоваров.Строки.Найти(СтрокаТовар.Номенклатура,"Номенклатура");
		Если СтрокаОстатковНоменклатуры=Неопределено Тогда Продолжить; КонецЕсли;
		
		// определяем фильтр
		СтруктураОтбора=Новый Структура("Номенклатура");
		СтруктураОтбора.Номенклатура=СтрокаТовар.Номенклатура; 
		Если ЗначениеЗаполнено(СтрокаТовар.ХарактеристикаНоменклатуры) ИЛИ (ТаблицаРучныхХарактеристик<>Неопределено И ТаблицаРучныхХарактеристик.Найти(СтрокаТовар.Номенклатура,"Номенклатура")<>Неопределено) Тогда 
			СтруктураОтбора.Вставить("ХарактеристикаНоменклатуры",СтрокаТовар.ХарактеристикаНоменклатуры);
		КонецЕсли;
		СтруктураОтбора.Вставить("СкладКомпании",Склад);
		
		НадоПереоценить=СтрокаТовар.Количество;
		МассивНайденныхСтрок=СтрокаОстатковНоменклатуры.Строки.НайтиСтроки(СтруктураОтбора);
		Для Сч=0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока=МассивНайденныхСтрок[Сч];
			// расчет суммы переоценки
			НадоПереоценить=?(СтрокаТовар.Количество=0 ИЛИ ПереоценитьВсе,ТекСтрока.Количество,НадоПереоценить);
			СуммаПереоценки=СтрокаТовар.ЦенаРозничная*Мин(НадоПереоценить,ТекСтрока.Количество);
			СуммаПереоценки=СуммаПереоценки-?(ТекСтрока.Количество=0,0,(ТекСтрока.СуммаРозн/ТекСтрока.Количество)*Мин(НадоПереоценить,ТекСтрока.Количество));
			// если нечего переоценивать, то выходим
			Если Окр(СуммаПереоценки,2)=0 Тогда Продолжить; КонецЕсли;
			//
			
			НоваяЗапись=Добавить();
			НоваяЗапись.ВидДвижения=?(СуммаПереоценки>0,ВидДвиженияНакопления.Приход,ВидДвиженияНакопления.Расход);
			НоваяЗапись.Период=ДокументОбъект.Дата;
			НоваяЗапись.Регистратор=ДокументОбъект.Ссылка;
			НоваяЗапись.СкладКомпании=Склад;
			НоваяЗапись.Номенклатура=СтрокаТовар.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры=ТекСтрока.ХарактеристикаНоменклатуры;
			// ресурсы
			НоваяЗапись.Резерв=0;
			НоваяЗапись.Количество=0;
			НоваяЗапись.СуммаРозн=Окр(?(СуммаПереоценки>0,СуммаПереоценки,-СуммаПереоценки),2);
			// реквизиты
			НоваяЗапись.ХозОперация=ХозОперация;
			НоваяЗапись.Цена=СтрокаТовар.ЦенаРозничная;
			НоваяЗапись.КоличествоПереоценки=Мин(НадоПереоценить,ТекСтрока.Количество);

			НадоПереоценить=НадоПереоценить-Мин(НадоПереоценить,ТекСтрока.Количество);
			
			Если СтрокаТовар.Количество<>0 И НЕ ПереоценитьВсе Тогда
				Если НадоПереоценить=0 Тогда Прервать; КонецЕсли;
			КонецЕсли;
			
		КонецЦикла
	КонецЦикла;

	Если СбрасыватьПеременные Тогда
		РезультатЗапросаПоТоварам=Неопределено;
		ДеревоОстатковТоваров=Неопределено;
		ДокументОбъект=Неопределено;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции // Переоценка()

// Формирует движения по регистру приход (увеличение товарного запаса)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
Функция Приход() Экспорт
	ВсеОК=Истина;
	
	ЕстьРозничнаяСумма=?(ЕстьРозничнаяСумма=Неопределено,Ложь,ЕстьРозничнаяСумма);
	ДвиженияПоРознице=?(ДвиженияПоРознице=Неопределено,Ложь,ДвиженияПоРознице);
	РазрешитьПереоценку = ?(РазрешитьПереоценку=Неопределено,Истина,РазрешитьПереоценку);
	
	// Получим таблицу товарного состава
	Если (РезультатЗапросаПоТоварам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоТоварам=ПолучитьТаблицуТоваров();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам=РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	// Получение остатков на складе
	ДеревоОстатковТоваров=ПолучитьДеревоОстатков();
	
	// Переоценка
	Если РазрешитьПереоценку И ДвиженияПоРознице И ДокументОбъект.ПодразделениеКомпании.ПереоценкаРозницаПоПриходу И НЕ ЕстьРозничнаяСумма Тогда
		ВсеОК = Переоценка(Справочники.ХозОперации.ПереоценкаРозницаПоПриходу,Ложь);
	КонецЕсли;
	
	// Создадим структуру отбора
	СтруктураОтбораОстатковТоваров=Новый Структура("ХарактеристикаНоменклатуры,СкладКомпании");
	
	// Перебираем строки товаров
	Для каждого СтрокаТоваров Из РезультатЗапросаПоТоварам Цикл
		// Получим склад для резервирования
		Склад=?(СкладКомпании=Неопределено,СтрокаТоваров.СкладКомпании,СкладКомпании);
		Если ТипЗнч(Склад)=Тип("СправочникСсылка.СкладыКомпании") Тогда
			Если Резервировать Тогда Резерв=СтрокаТоваров.Резерв; Иначе Резерв=0; КонецЕсли;
		Иначе
			Резерв=0;
		КонецЕсли; 
		Если Приходовать Тогда Количество=СтрокаТоваров.Количество; Иначе Количество=0; КонецЕсли;
		
		// Получим остатки по текущей номенклатуре
		КоличествоОстаток=0; РезервОстаток=0;
		СтрокаОстатковНоменклатуры=ДеревоОстатковТоваров.Строки.Найти(СтрокаТоваров.Номенклатура,"Номенклатура");
		Если СтрокаОстатковНоменклатуры<>Неопределено Тогда
			СтруктураОтбораОстатковТоваров.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры;
			СтруктураОтбораОстатковТоваров.СкладКомпании=Склад;
			МассивНайденныхСтрок=СтрокаОстатковНоменклатуры.Строки.НайтиСтроки(СтруктураОтбораОстатковТоваров);
			Если МассивНайденныхСтрок.Количество()>0 Тогда
				ТекСтрока=МассивНайденныхСтрок[0];
				КоличествоОстаток=ТекСтрока.Количество-ТекСтрока.Резерв;
				РезервОстаток=ТекСтрока.Резерв;
			КонецЕсли;
		КонецЕсли;
		
		Если Резервировать Тогда
			Если (Резерв<0) И ((-Резерв)>(РезервОстаток)) Тогда
				// Если осуществляется снятие резерва, снятие резерва не должно превышать остаток резерва.
				Если НЕ ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
					ОбщегоНазначения.СообщитьПользователю("["+УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура)
						+ "] " + "Товар" + " """+СокрЛП(СтрокаТоваров.Номенклатура)+""". " +НСтр("ru = 'Остаток резерва'") + " "
						+ Формат(РезервОстаток,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)
						+ ". " + НСтр("ru = 'Снимается с резерва'") + " "+Формат(-Резерв,"ЧДЦ=3; ЧН=0,00")+" "
						+ СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)+". " + "Превышение" + " "
						+ Формат((-Резерв)-РезервОстаток,"ЧДЦ=3; ЧН=0,00")+" "
						+ СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),ДокументОбъект,,,Истина);
				Иначе
					ОбщегоНазначения.СообщитьПользователю("["+УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура)
						+ "] " + "Товар" + " """+СокрЛП(СтрокаТоваров.Номенклатура)+""" " + НСтр("ru = 'с характеристикой'") + " """
						+ СокрЛП(СтрокаТоваров.ХарактеристикаНоменклатуры)+""". " + НСтр("ru = 'Остаток резерва'") + " "
						+ Формат(РезервОстаток,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)
						+ ". " + НСтр("ru = 'Снимается с резерва'") +" "+Формат(-Резерв,"ЧДЦ=3; ЧН=0,00")+" "
						+ СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)+". " + "Превышение" + " "
						+ Формат((-Резерв)-РезервОстаток,"ЧДЦ=3; ЧН=0,00")+" "
						+ СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),ДокументОбъект,,,Истина);
				КонецЕсли; 
				ВсеОК=Ложь;
			КонецЕсли; 
			Если (Резерв>0) И (Резерв>(КоличествоОстаток+Количество)) Тогда
				// Если осуществляется резервирование больше остатка на складе
				Если НЕ ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
					ОбщегоНазначения.СообщитьПользователю("["+УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура)
						+ "] " + "Товар" + " """+СокрЛП(СтрокаТоваров.Номенклатура)+""". " + НСтр("ru = 'Остаток на складе'") + " "
						+ Формат(КоличествоОстаток+Количество,"ЧДЦ=3; ЧН=0,00")+" "
						+ СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)+". " + "Резервируется" + " "
						+ Формат(Резерв,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)
						+ ". " + "Превышение" + " "+Формат(Резерв-(КоличествоОстаток+Количество),"ЧДЦ=3; ЧН=0,00")+" "
						+ СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),ДокументОбъект,,,Истина);
				Иначе
					ОбщегоНазначения.СообщитьПользователю("["+УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура)
						+ "] " + "Товар" + " """+СокрЛП(СтрокаТоваров.Номенклатура)+""" " + НСтр("ru = 'с характеристикой'") + " """
						+ СокрЛП(СтрокаТоваров.ХарактеристикаНоменклатуры)+""". " + НСтр("ru = 'Остаток на складе'") +" "
						+ Формат(КоличествоОстаток+Количество,"ЧДЦ=3; ЧН=0,00")+" "
						+ СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)+". " + "Резервируется"  + " "
						+ Формат(Резерв,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)+". " 
						+ "Превышение" + " "+Формат(Резерв-(КоличествоОстаток+Количество),"ЧДЦ=3; ЧН=0,00")+" "
						+ СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),ДокументОбъект,,,Истина);
				КонецЕсли; 
				ВсеОК=Ложь;
			КонецЕсли; 
		КонецЕсли;
		Если ВсеОК И (Количество<>0 ИЛИ Резерв<>0) Тогда
			// Создаем запись регистра заказов покупателей
			НоваяЗапись=Добавить();
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период=ДокументОбъект.Дата;
			НоваяЗапись.Регистратор=ДокументОбъект.Ссылка;
			НоваяЗапись.СкладКомпании=Склад;
			НоваяЗапись.Номенклатура=СтрокаТоваров.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры;
			НоваяЗапись.ХозОперация=ДокументОбъект.ХозОперация;
			НоваяЗапись.Контрагент=Контрагент;
			// Количество
			НоваяЗапись.Резерв=Резерв;
			НоваяЗапись.Количество=Количество;
			Если ДвиженияПоРознице Тогда
				НоваяЗапись.СуммаРозн=?(ЕстьРозничнаяСумма,СтрокаТоваров.СуммаРозничная,СтрокаТоваров.ЦенаРозничная*Количество);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла; 

	Если ВсеОК Тогда 
		ВсеОК = КонтрольОстатковОперативно();
	КонецЕсли;
	
	// Убиваем циклическую ссылку
	ДокументОбъект=Неопределено;
	ДеревоОстатковТоваров=Неопределено;
	РезультатЗапросаПоТоварам=Неопределено;
	ТаблицаРучныхХарактеристик=Неопределено;
	
	Возврат ВсеОК;
КонецФункции // Приход()

// Формирует движения по регистру расход (уменьшение товарного запаса)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
Функция Расход() Экспорт
	
	ВсеОК = Истина;
	
	ЕстьРозничнаяСумма=?(ЕстьРозничнаяСумма=Неопределено,Ложь,ЕстьРозничнаяСумма);
	ДвиженияПоРознице=?(ДвиженияПоРознице=Неопределено,Ложь,ДвиженияПоРознице);
	СписыватьРозницуПоОстаткам=?(СписыватьРозницуПоОстаткам=Неопределено,Ложь,СписыватьРозницуПоОстаткам);
	РазрешитьПереоценку = ?(РазрешитьПереоценку=Неопределено,Истина,РазрешитьПереоценку);
	
	ОтрицательныеОстаткиРазрешены = (ПраваИНастройкиПользователя.Значение(
		"РазрешитьОтрицательныеСкладскиеОстатки",ДокументОбъект)=Перечисления.ВидыРазрешенныхОтрицательныхОстатков.ПоОстаткам);
	
	// получим таблицу товарного состава
	Если (РезультатЗапросаПоТоварам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоТоварам=ПолучитьТаблицуТоваров();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам=РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	// упорядочим по нормальному
	РезультатЗапросаПоТоварам.Сортировать("Номенклатура Возр,ХарактеристикаНоменклатуры Убыв");
	
	// Получение остатков на складе
	ДеревоОстатковТоваров=ПолучитьДеревоОстатков();
	Если Не Пересортица Тогда
		// получим таблицу номенклатуры с ручным списанием характеристик
		ТаблицаРучныхХарактеристик=ОбработкаТабличнойЧастиТовары.ПолучитьНоменклатуруСРучнымСписаниемХарактеристик(ДокументОбъект.Ссылка);
	КонецЕсли;
	
	ПолучитьРезерв = Ложь;
	Если РезультатЗапросаПоТоварам.Колонки.Найти("Резерв") = Неопределено Тогда
		РезультатЗапросаПоТоварам.Колонки.Добавить("Резерв", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3)));
		ПолучитьРезерв = Резервировать;
	КонецЕсли;
	
	// проверим сначала возможность проведения
	Если НЕ ОтрицательныеОстаткиРазрешены И НЕ МожноПроводить(ДеревоОстатковТоваров.Скопировать(),РезультатЗапросаПоТоварам,ТаблицаРучныхХарактеристик, ПолучитьРезерв) Тогда
		РезультатЗапросаПоТоварам=Неопределено;
		ДокументОбъект=Неопределено;
		ДеревоОстатковТоваров=Неопределено;
		ТаблицаРучныхХарактеристик=Неопределено;
		Возврат Ложь;
	КонецЕсли;
	
	// переоценка
	ПереоценкаРозницаПоРасходу=ДокументОбъект.ПодразделениеКомпании.ПереоценкаРозницаПоРасходу;
	Если РазрешитьПереоценку И ДвиженияПоРознице И ПереоценкаРозницаПоРасходу И НЕ ЕстьРозничнаяСумма Тогда
		ВсеОК = Переоценка(Справочники.ХозОперации.ПереоценкаРозницаПоРасходу,Ложь,Ложь);
	КонецЕсли;
	
	// Перебираем строки товаров
	Для Каждого СтрокаТоваров Из РезультатЗапросаПоТоварам Цикл
		// Получим склад для резервирования
		Склад = ?(СкладКомпании=Неопределено, СтрокаТоваров.СкладКомпании, СкладКомпании);
		Если ТипЗнч(Склад)<>Тип("СправочникСсылка.СкладыКомпании") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Приходовать Тогда
			Количество = СтрокаТоваров.Количество;
		Иначе
			Количество=0;
		КонецЕсли;
		
		Резерв = СтрокаТоваров.Резерв;
		НадоСписатьКоличество = Окр(Количество, 3);
		НадоСписатьРезерв     = Окр(Резерв, 3);
		Попытка
			НадоСписатьСкидка = СтрокаТоваров.СуммаСкидки;
		Исключение
			НадоСписатьСкидка=0;
		КонецПопытки;
		
		флСторно = ?(НадоСписатьКоличество>0, ЛОЖЬ, ИСТИНА);
		
		// Получим остатки по текущей номенклатуре
		СтрокаОстатковНоменклатуры=ДеревоОстатковТоваров.Строки.Найти(СтрокаТоваров.Номенклатура,"Номенклатура");
		Если СтрокаОстатковНоменклатуры<>Неопределено Тогда
			СтруктураОтбораОстатковТоваров = Новый Структура("СкладКомпании");
			Если ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) ИЛИ (ТаблицаРучныхХарактеристик<>Неопределено И ТаблицаРучныхХарактеристик.Найти(СтрокаТоваров.Номенклатура,"Номенклатура")<>Неопределено) Тогда 
				СтруктураОтбораОстатковТоваров.Вставить("ХарактеристикаНоменклатуры",СтрокаТоваров.ХарактеристикаНоменклатуры);
			КонецЕсли;
			СтруктураОтбораОстатковТоваров.СкладКомпании = Склад;
			МассивНайденныхСтрок = СтрокаОстатковНоменклатуры.Строки.НайтиСтроки(СтруктураОтбораОстатковТоваров);
			
			Если Количество<>0 ИЛИ Резерв<>0 Тогда
				// списание в разрезе характеристик
				Для Каждого СтрокаОстатки Из МассивНайденныхСтрок Цикл
					
					Если СтрокаОстатки.Количество<=0 Тогда
						Продолжить;
					КонецЕсли;
					
					// Списываем товар
					НоваяЗапись=Добавить();
					НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Расход;
					НоваяЗапись.Период        = ДокументОбъект.Дата;
					НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
					НоваяЗапись.СкладКомпании = Склад;
					НоваяЗапись.Номенклатура  = СтрокаТоваров.Номенклатура;
					НоваяЗапись.ХарактеристикаНоменклатуры = СтрокаОстатки.ХарактеристикаНоменклатуры;
					НоваяЗапись.Контрагент    = Контрагент;
					// определяемся с хоз. операцией
					НоваяЗапись.ХозОперация   = ДокументОбъект.ХозОперация;
					// количество
					НоваяЗапись.Количество    = Мин(СтрокаОстатки.Количество,НадоСписатьКоличество);
					НоваяЗапись.Резерв        = Мин(СтрокаОстатки.Резерв,НадоСписатьРезерв);
					// розничная сумма
					Если ДвиженияПоРознице Тогда
						Если ЕстьРозничнаяСумма И НЕ СписыватьРозницуПоОстаткам Тогда
							НоваяЗапись.СуммаРозн = Окр(СтрокаТоваров.СуммаРозничная,2);
						ИначеЕсли ПереоценкаРозницаПоРасходу И НЕ СписыватьРозницуПоОстаткам Тогда
							НоваяЗапись.СуммаРозн = Окр(СтрокаТоваров.ЦенаРозничная*Количество,2);
						Иначе
							НоваяЗапись.СуммаРозн = Окр(?(СтрокаОстатки.Количество<=НадоСписатьКоличество,СтрокаОстатки.СуммаРозн,СтрокаОстатки.СуммаРозн/СтрокаОстатки.Количество*НадоСписатьКоличество),2);
						КонецЕсли;
					КонецЕсли;
				
					// скидка
					Если НадоСписатьСкидка>0 Тогда
						НоваяЗапись.СуммаСкидки=Окр(?(СтрокаОстатки.Количество>=НадоСписатьКоличество,НадоСписатьСкидка,НадоСписатьКоличество/СтрокаТоваров.Количество*НадоСписатьСкидка),2);
						НадоСписатьСкидка=НадоСписатьСкидка-НоваяЗапись.СуммаСкидки;
					КонецЕсли;
					
					// Если списали все с этой характеристикой, то удалим данную строку.
					// если нет, то уменьшим количество остатка.
					Если СтрокаОстатки.Количество>НоваяЗапись.Количество Тогда
						СтрокаОстатки.Количество = СтрокаОстатки.Количество - НоваяЗапись.Количество;
						СтрокаОстатки.Резерв     = СтрокаОстатки.Резерв - НоваяЗапись.Резерв;
						СтрокаОстатки.СуммаРозн  = СтрокаОстатки.СуммаРозн - НоваяЗапись.СуммаРозн;
					Иначе
						СтрокаОстатковНоменклатуры.Строки.Удалить(СтрокаОстатки);
					КонецЕсли;
					
					СтрокаОстатковНоменклатуры.Количество = СтрокаОстатковНоменклатуры.Количество - НоваяЗапись.Количество;
					СтрокаОстатковНоменклатуры.Резерв     = СтрокаОстатковНоменклатуры.Резерв - НоваяЗапись.Резерв;
					СтрокаОстатковНоменклатуры.СуммаРозн  = СтрокаОстатковНоменклатуры.СуммаРозн - НоваяЗапись.СуммаРозн;
					
					НадоСписатьКоличество = НадоСписатьКоличество - НоваяЗапись.Количество;
					НадоСписатьРезерв     = НадоСписатьРезерв - НоваяЗапись.Резерв;
					Если НадоСписатьКоличество<=0 И НадоСписатьРезерв<=0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				// удалим ненужную строку из дерева
				Если СтрокаОстатковНоменклатуры.Количество<=0 Тогда
					ДеревоОстатковТоваров.Строки.Удалить(СтрокаОстатковНоменклатуры);
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		// Если после списания осталось еще то, что надо списать, то наверное у нас разрешены отрицательные остатки.
		// Спишем их.
		Если НадоСписатьКоличество>0 ИЛИ НадоСписатьРезерв>0 ИЛИ (флСторно И НадоСписатьКоличество<0) Тогда
			НоваяЗапись=Добавить();
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период=ДокументОбъект.Дата;
			НоваяЗапись.Регистратор=ДокументОбъект.Ссылка;
			НоваяЗапись.СкладКомпании=Склад;
			НоваяЗапись.Номенклатура=СтрокаТоваров.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры;
			НоваяЗапись.Контрагент=Контрагент;
			НоваяЗапись.ХозОперация=ДокументОбъект.ХозОперация;
			НоваяЗапись.Количество=НадоСписатьКоличество;
			НоваяЗапись.Резерв=НадоСписатьРезерв;
			НоваяЗапись.СуммаСкидки=НадоСписатьСкидка;
			Если ДвиженияПоРознице Тогда
				Если ЕстьРозничнаяСумма Тогда
					СуммаРозничная = СтрокаТоваров.СуммаРозничная;
				Иначе
					СуммаРозничная = СтрокаТоваров.ЦенаРозничная*СтрокаТоваров.Количество;
				КонецЕсли;
				НоваяЗапись.СуммаРозн = Окр((СуммаРозничная/СтрокаТоваров.Количество)*НадоСписатьКоличество,2);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 

	Если ВсеОК Тогда 
		ВсеОК = КонтрольОстатковОперативно();
	КонецЕсли;
	
	// Убиваем циклическую ссылку.
	ДокументОбъект=Неопределено;
	ДеревоОстатковТоваров=Неопределено;
	РезультатЗапросаПоТоварам=Неопределено;
	ТаблицаРучныхХарактеристик=Неопределено;
	
	// Возврат результата.
	Возврат ВсеОК;
КонецФункции // Расход()

// Формирует движения по регистру резервирование (увеличение резерва товарного запаса под заказ)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
Функция Зарезервировать() Экспорт
	
	ВсеОК         = Истина;
	Резервировать = Истина;
	
	// получим таблицу товарного состава.
	Если (РезультатЗапросаПоТоварам=Неопределено) 
		ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) 
		И (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("ТаблицаЗначений")) Тогда
		
		РезультатЗапросаПоТоварам=ПолучитьТаблицуТоваров();
	КонецЕсли;
	
	Если ТипЗнч(РезультатЗапросаПоТоварам)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам=РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	
	// Получение остатков на складе.
	ДеревоОстатковТоваров = ПолучитьДеревоОстатков();
	
	ТаблицаРучныхХарактеристик = ОбработкаТабличнойЧастиТовары.ПолучитьНоменклатуруСРучнымСписаниемХарактеристик(ДокументОбъект.Ссылка);
	
	РезультатЗапросаПоТоварам.Сортировать("Номенклатура Возр, ХарактеристикаНоменклатуры Убыв");
	
	// Перебираем строки товаров.
	Для Каждого СтрокаТоваров Из РезультатЗапросаПоТоварам Цикл
		// Получим склад для резервирования.
		
		Склад = ?(СкладКомпании=Неопределено, СтрокаТоваров.СкладКомпании, СкладКомпании);
		Если ТипЗнч(Склад) = Тип("СправочникСсылка.СкладыКомпании") Тогда
			Резерв = СтрокаТоваров.Резерв;
		Иначе
			Резерв = 0;
		КонецЕсли;
		
		Если Резерв=0 Тогда
			Продолжить;
		КонецЕсли;
		
		// Получим остатки по текущей номенклатуре.
		КоличествоОстаток = 0;
		СтрокаОстатковНоменклатуры = ДеревоОстатковТоваров.Строки.Найти(СтрокаТоваров.Номенклатура, "Номенклатура");
		Если СтрокаОстатковНоменклатуры <> Неопределено Тогда
			
			// Создадим структуру отбора.
			СтруктураОтбораОстатковТоваров = Новый Структура("СкладКомпании", Склад);
			
			Если ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры)
				ИЛИ (ТаблицаРучныхХарактеристик<>Неопределено 
				И ТаблицаРучныхХарактеристик.Найти(СтрокаТоваров.Номенклатура,"Номенклатура")<>Неопределено) Тогда
				
				СтруктураОтбораОстатковТоваров.Вставить("ХарактеристикаНоменклатуры", СтрокаТоваров.ХарактеристикаНоменклатуры);
			КонецЕсли;
			
			МассивНайденныхСтрок = СтрокаОстатковНоменклатуры.Строки.НайтиСтроки(СтруктураОтбораОстатковТоваров);
			Для Каждого ТекСтрока Из МассивНайденныхСтрок Цикл
				
				Если Резерв = 0 Тогда
					Прервать;
				КонецЕсли;
				
				СвободноеКоличество = (ТекСтрока.Количество-ТекСтрока.Резерв);
				
				Если СвободноеКоличество <= 0 Тогда
					Продолжить;
				КонецЕсли;
				
				КоличествоКПриходу = Мин(Резерв, СвободноеКоличество);
				
				КоличествоОстаток  = КоличествоОстаток + СвободноеКоличество;
				
				// Создаем запись регистра заказов покупателей.
				НоваяЗапись = Добавить();
				НоваяЗапись.ВидДвижения                = ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период                     = ДокументОбъект.Дата;
				НоваяЗапись.Регистратор                = ДокументОбъект.Ссылка;
				НоваяЗапись.СкладКомпании              = Склад;
				НоваяЗапись.Номенклатура               = СтрокаТоваров.Номенклатура;
				НоваяЗапись.ХарактеристикаНоменклатуры = ТекСтрока.ХарактеристикаНоменклатуры;
				НоваяЗапись.ХозОперация                = ДокументОбъект.ХозОперация;
				НоваяЗапись.Контрагент                 = Контрагент;
				// количество
				НоваяЗапись.Резерв                     = КоличествоКПриходу;
				
				Резерв = Резерв - КоличествоКПриходу;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Резерв > 0 Тогда
			// Если осуществляется резервирование больше остатка на складе.
			Если НЕ ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
				
				ТекстСообщения = СтрШаблон(
					НСтр("ru = '[%1] Товар ""%2"". Остаток на складе %3 %4. Резервируется  %5 %6. Превышение %7 %8'"),
					УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура),
					СокрЛП(СтрокаТоваров.Номенклатура),
					Формат(КоличествоОстаток, "ЧДЦ=3; ЧН=0,00"),
					СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),
					Формат(СтрокаТоваров.Резерв, "ЧДЦ=3; ЧН=0,00"),
					СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),
					Формат(Резерв, "ЧДЦ=3; ЧН=0,00"),
					СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)
				);
				
			Иначе
				
				ТекстСообщения = СтрШаблон(
					НСтр("ru = '[%1] Товар ""%2"" с характеристикой %3. Остаток на складе %4 %5. Резервируется  %6 %7. Превышение %8 %9'"), // BSLLS:LineLength-off
					УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура),
					СокрЛП(СтрокаТоваров.Номенклатура),
					СокрЛП(СтрокаТоваров.ХарактеристикаНоменклатуры),
					Формат(КоличествоОстаток, "ЧДЦ=3; ЧН=0,00"),
					СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),
					Формат(СтрокаТоваров.Резерв, "ЧДЦ=3; ЧН=0,00"),
					СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения),
					Формат(Резерв, "ЧДЦ=3; ЧН=0,00"),
					СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)
				);
			КонецЕсли;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект, , , Истина);
			ВсеОК = Ложь;
		КонецЕсли;
		
	КонецЦикла;

	Если ВсеОК Тогда 
		ВсеОК = КонтрольОстатковОперативно();
	КонецЕсли;
	
	// Убиваем циклическую ссылку
	ДокументОбъект             = Неопределено;
	ДеревоОстатковТоваров      = Неопределено;
	РезультатЗапросаПоТоварам  = Неопределено;
	ТаблицаРучныхХарактеристик = Неопределено;
	
	Возврат ВсеОК;
	
КонецФункции // Резервирование()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет проверку возможности проведения документа. Истина - ошибок нет. Ложь - есть.
Функция МожноПроводить(ДеревоОстатковТоваров_, ТаблицаТоваров, ТаблицаРучныхХарактеристик, ПолучитьРезерв)
	
	ВсеОК = Истина;
	
	// Перебираем строки товаров
	Для Каждого СтрокаТоваров Из ТаблицаТоваров Цикл
		// Получим склад для резервирования
		Склад = ?(СкладКомпании = Неопределено, СтрокаТоваров.СкладКомпании, СкладКомпании);
		
		Если ТипЗнч(Склад) <> Тип("СправочникСсылка.СкладыКомпании") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Приходовать Тогда
			Количество = Окр(СтрокаТоваров.Количество, 3);
		Иначе 
			Количество = 0;
		КонецЕсли;
		
		Если Резервировать Тогда
			Резерв = СтрокаТоваров.Резерв;
		Иначе
			Резерв = 0;
		КонецЕсли;
		
		// Получим остатки по текущей номенклатуре
		КоличествоОстаток = 0;
		РезервОстаток     = 0;
		КоличествоОсталосьРаспределить = Количество;
		РезервОсталосьРаспределить     = Резерв;
		СтрокаОстатковНоменклатуры = ДеревоОстатковТоваров_.Строки.Найти(СтрокаТоваров.Номенклатура, "Номенклатура");
		Если СтрокаОстатковНоменклатуры<>Неопределено Тогда
			СтруктураОтбораОстатковТоваров=Новый Структура("СкладКомпании");
			СтруктураОтбораОстатковТоваров.СкладКомпании=Склад;
			Если ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) ИЛИ (ТаблицаРучныхХарактеристик<>Неопределено И ТаблицаРучныхХарактеристик.Найти(СтрокаТоваров.Номенклатура,"Номенклатура")<>Неопределено) Тогда 
				СтруктураОтбораОстатковТоваров.Вставить("ХарактеристикаНоменклатуры",СтрокаТоваров.ХарактеристикаНоменклатуры);
			КонецЕсли;
			МассивНайденныхСтрок=СтрокаОстатковНоменклатуры.Строки.НайтиСтроки(СтруктураОтбораОстатковТоваров);
			Для Каждого ТекСтрока Из МассивНайденныхСтрок Цикл
				
				Если Приходовать Тогда
					Если КоличествоОсталосьРаспределить <= 0 Тогда
						Прервать;
					КонецЕсли;
				ИначеЕсли Резервировать Тогда
					Если РезервОсталосьРаспределить <= 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
				
				РезервОстаток = РезервОстаток + ТекСтрока.Резерв;
				
				Если Приходовать Тогда
					// уменьшим количество остатка
					ВозможноСписать = (ТекСтрока.Количество) - (ТекСтрока.Резерв - Мин(РезервОсталосьРаспределить, ТекСтрока.Резерв));
					КоличествоОстаток = КоличествоОстаток + ВозможноСписать;
					КоличествоКСписанию = Мин(ВозможноСписать, КоличествоОсталосьРаспределить);
					
					Если ТекСтрока.Количество>КоличествоКСписанию Тогда
						ТекСтрока.Количество = ТекСтрока.Количество - КоличествоКСписанию;
						Если ПолучитьРезерв ИЛИ (НЕ Резервировать) Тогда
							СвободныйОстаток = ТекСтрока.Количество - ТекСтрока.Резерв;
							Если КоличествоОсталосьРаспределить > СвободныйОстаток Тогда
								ТекСтрока.Резерв = ТекСтрока.Резерв - Мин(КоличествоОсталосьРаспределить-СвободныйОстаток, ТекСтрока.Резерв);
							КонецЕсли;
						Иначе
							ТекСтрока.Резерв = ТекСтрока.Резерв - РезервОсталосьРаспределить;
						КонецЕсли;
						РезервОсталосьРаспределить = 0;
					Иначе
						РезервОсталосьРаспределить = РезервОсталосьРаспределить - ТекСтрока.Резерв;
						СтрокаОстатковНоменклатуры.Строки.Удалить(ТекСтрока);
					КонецЕсли;
					КоличествоОсталосьРаспределить = КоличествоОсталосьРаспределить - КоличествоКСписанию;
				ИначеЕсли Резервировать Тогда
					// уменьшим количество резерва
					Если ТекСтрока.Резерв>РезервОсталосьРаспределить Тогда
						ТекСтрока.Резерв = ТекСтрока.Резерв - РезервОсталосьРаспределить;
						РезервОсталосьРаспределить = 0;
					Иначе
						РезервОсталосьРаспределить = РезервОсталосьРаспределить - ТекСтрока.Резерв;
						СтрокаОстатковНоменклатуры.Строки.Удалить(ТекСтрока);
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ПолучитьРезерв Тогда
				Если Количество > КоличествоОстаток Тогда
					Резерв = Мин(Количество-КоличествоОстаток, РезервОстаток);
				КонецЕсли;
				СтрокаТоваров.Резерв = Резерв;
			КонецЕсли;
			
			// Удалим ненужную строку
			Если СтрокаОстатковНоменклатуры.Строки.Количество() = 0 Тогда
				ДеревоОстатковТоваров_.Строки.Удалить(СтрокаОстатковНоменклатуры);
			КонецЕсли;
			
		КонецЕсли;
		
		Если (Приходовать ИЛИ Резервировать) Тогда
			
			Если Приходовать Тогда
				// Если осуществляется расход по складу
				Если Количество>КоличествоОстаток Тогда
					ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура);
					// Расход по складу превышает остаток
					Если НЕ ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
						ОбщегоНазначения.СообщитьПользователю(
							СтрШаблон(
								НСтр("ru = '[%1] Товар ""%2"". Остаток %3 %4. Списывается %5 %6. Превышение %7'"),
								ЗначениеКолонкиКода, 
								СокрЛП(СтрокаТоваров.Номенклатура),
								Формат(КоличествоОстаток, "ЧДЦ=3; ЧН=0,00"),
								СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения),
								Формат(Количество, "ЧДЦ=3; ЧН=0,00"), 
								СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения),
								Формат(Количество - КоличествоОстаток, "ЧДЦ=3; ЧН=0,00")),
							ДокументОбъект, , , Истина
						);
					Иначе
						ОбщегоНазначения.СообщитьПользователю(
							СтрШаблон(
								НСтр("ru = '[%1] Товар ""%2"" с характеристикой ""%3"". Остаток %4 %5. Списывается %6 %7. Превышение %8'"),
								ЗначениеКолонкиКода, 
								СокрЛП(СтрокаТоваров.Номенклатура),
								СокрЛП(СтрокаТоваров.ХарактеристикаНоменклатуры),
								Формат(КоличествоОстаток, "ЧДЦ=3; ЧН=0,00"),
								СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения),
								Формат(Количество, "ЧДЦ=3; ЧН=0,00"),
								СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения),
								Формат(Количество - КоличествоОстаток, "ЧДЦ=3; ЧН=0,00")),
							ДокументОбъект, , , Истина
						);
					КонецЕсли;
					ВсеОК=Ложь;
				КонецЕсли;
			КонецЕсли;
			
			Если Резервировать Тогда
				Если Резерв>РезервОстаток Тогда
					Если НЕ ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
						ОбщегоНазначения.СообщитьПользователю("[" + УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура)
							+ "] " + "Товар" + " """ + СокрЛП(СтрокаТоваров.Номенклатура) + """. " + "Зарезервировано" + " "
							+ Формат(РезервОстаток, "ЧДЦ=3; ЧН=0,00") + " " + СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения)
							+ ". " + НСтр("ru = 'Снимается с резерва'") + " " + Формат(Резерв, "ЧДЦ=3; ЧН=0,00") + " "
							+ СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения) + ". " + "Превышение" + " "
							+ Формат(Резерв-РезервОстаток, "ЧДЦ=3; ЧН=0,00") + " "
							+ СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения), ДокументОбъект, , , Истина);
					Иначе
						ОбщегоНазначения.СообщитьПользователю("[" + УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура)
							+ "] " + "Товар" + " """+СокрЛП(СтрокаТоваров.Номенклатура) + """ " + НСтр("ru = 'с характеристикой'") + " """
							+ СокрЛП(СтрокаТоваров.ХарактеристикаНоменклатуры) + """. Зарезервировано "
							+ Формат(РезервОстаток, "ЧДЦ=3; ЧН=0,00") + " " + СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения)
							+ ". " + НСтр("ru = 'Снимается с резерва'") + " " + Формат(Резерв, "ЧДЦ=3; ЧН=0,00")+" "
							+ СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения) + ". " + "Превышение" + " "
							+ Формат(Резерв-РезервОстаток, "ЧДЦ=3; ЧН=0,00") + " "
							+ СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения), ДокументОбъект, , , Истина);
					КонецЕсли; 
					ВсеОК=Ложь;
				КонецЕсли; 
			КонецЕсли;
		Иначе
			// Если осуществляется расход по складу
			Если Количество>КоличествоОстаток Тогда
				// Расход по складу превышает остаток
				Если НЕ ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
					ОбщегоНазначения.СообщитьПользователю("[" + УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура)
						+ "] " + "Товар" + " """ + СокрЛП(СтрокаТоваров.Номенклатура) + """. " + "Остаток" + " "
						+ Формат(КоличествоОстаток, "ЧДЦ=3; ЧН=0,00") + " " + СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения)
						+ ". " + "Списывается" + " " + Формат(Количество, "ЧДЦ=3; ЧН=0,00") + " "
						+ СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения) + ". " + "Превышение" + " "
						+ Формат(Количество-КоличествоОстаток, "ЧДЦ=3; ЧН=0,00") + " "
						+ СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения), ДокументОбъект, , , Истина);
				Иначе
					ОбщегоНазначения.СообщитьПользователю("[" + УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура)
						+ "] " + "Товар" + " """ + СокрЛП(СтрокаТоваров.Номенклатура) + " " + НСтр("ru = 'с характеристикой'") + """ """
						+ СокрЛП(СтрокаТоваров.ХарактеристикаНоменклатуры) + """. Остаток "
						+ Формат(КоличествоОстаток, "ЧДЦ=3; ЧН=0,00") + " " + СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения)
						+ ". " + "Списывается" + " " + Формат(Количество, "ЧДЦ=3; ЧН=0,00") + " "
						+ СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения) + ". " + "Превышение" + " "
						+ Формат(Количество-КоличествоОстаток, "ЧДЦ=3; ЧН=0,00") + " "
						+ СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения), ДокументОбъект, , , Истина);
				КонецЕсли; 
				ВсеОК=Ложь;
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВсеОК;
КонецФункции // МожноПроводить()

// Возвращает результат запроса по таблице товаров
Функция ПолучитьТаблицуТоваров()
	// Получим результат запроса по товарной таблице
	ПоБазовомуКоличеству = ?(ПоБазовомуКоличеству = Неопределено, Ложь, ПоБазовомуКоличеству);
	ИмяРеквизитаЦенаРозничная = ?(ИмяРеквизитаЦенаРозничная = Неопределено, "ЦенаРозничная", ИмяРеквизитаЦенаРозничная);
	ИмяРеквизитаСуммаРозничная = ?(ИмяРеквизитаСуммаРозничная = Неопределено, "СуммаРозничная", ИмяРеквизитаСуммаРозничная);
	ЕстьСуммаСкидки = ?(ЕстьСуммаСкидки = Неопределено, Ложь, ЕстьСуммаСкидки);
    ВидДок = ДокументОбъект.Метаданные().Имя;
	
	
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументТовары.Номенклатура КАК Номенклатура,
	|	ДокументТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	" + ?(СкладКомпании = Неопределено, "ДокументТовары.МестоРазмещения", "&СкладКомпании") + " КАК СкладКомпании,
	|	МАКСИМУМ(" + ?(ДвиженияПоРознице, "ДокументТовары." + ИмяРеквизитаЦенаРозничная, "0") + ") КАК ЦенаРозничная,
	|   МАКСИМУМ(" + ?(ДвиженияПоРознице, "ДокументТовары." + ИмяРеквизитаСуммаРозничная, "0") + ") КАК СуммаРозничная,
	|   МАКСИМУМ(" + ?(ЕстьСуммаСкидки, "ДокументТовары.СуммаСкидки", "0") + ") КАК СуммаСкидки
	|";
	Если Приходовать Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	,СУММА(" + ?(ПоБазовомуКоличеству, "ДокументТовары.КоличествоБазовое", "ДокументТовары.Количество*ДокументТовары.Коэффициент") + ") КАК Количество
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	,СУММА(0) КАК Количество
		|";
	КонецЕсли; 
	Если Резервировать Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	,СУММА(ДокументТовары.Резерв*ДокументТовары.Коэффициент) КАК Резерв
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	,СУММА(0) КАК Резерв
		|";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	Документ." + ВидДок + ".Товары КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.Ссылка=&Ссылка И ДокументТовары.Номенклатура.ВидНоменклатуры<>&Услуга
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументТовары.Номенклатура,
	|	ДокументТовары.ХарактеристикаНоменклатуры" + ?(СкладКомпании = Неопределено, ",
	|	ДокументТовары.МестоРазмещения" , "") + "
	|";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СкладКомпании", СкладКомпании);
	Запрос.УстановитьПараметр("Услуга", Перечисления.ВидыНоменклатуры.Услуга);

	Возврат Запрос.Выполнить();
КонецФункции // ПолучитьТаблицуТоваров()

// Возвращает дерево значений по остаткам товаров и резервам
Функция ПолучитьДеревоОстатков()
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиТоваровКомпанииОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиТоваровКомпанииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиТоваровКомпанииОстатки.СкладКомпании КАК СкладКомпании,
	|	ЕСТЬNULL(ОстаткиТоваровКомпанииОстатки.КоличествоОстаток,0) КАК Количество,
	|	ЕСТЬNULL(ОстаткиТоваровКомпанииОстатки.РезервОстаток,0) КАК Резерв,
	|	ЕСТЬNULL(ОстаткиТоваровКомпанииОстатки.СуммаРознОстаток,0) КАК СуммаРозн
	|ИЗ 
	|	РегистрНакопления.ОстаткиТоваровКомпании.Остатки(&Момент, Номенклатура В (&Номенклатура)"
	+ ?(СкладКомпании <> Неопределено, " И СкладКомпании=&СкладКомпании", "") + ") КАК ОстаткиТоваровКомпанииОстатки
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ОстаткиТоваровКомпанииОстатки.ХарактеристикаНоменклатуры.Сортировка ВОЗР
	|
	|ИТОГИ СУММА(Количество) КАК Количество, СУММА(Резерв) КАК Резерв, СУММА(СуммаРозн) КАК СуммаРозн
	|ПО Номенклатура
	|";
	Запрос.Текст = ТекстЗапроса;
	МоментКонтроляОстатков = ?(РежимПроведения = РежимПроведенияДокумента.Оперативный, Неопределено,
		ДокументОбъект.МоментВремени());
	Запрос.УстановитьПараметр("Момент", ?(ГраницаРасчетаОстатков = Неопределено, МоментКонтроляОстатков,
		ГраницаРасчетаОстатков));
	Запрос.УстановитьПараметр("Номенклатура", РезультатЗапросаПоТоварам.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("СкладКомпании", СкладКомпании);
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ОстаткиТоваровКомпании");
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, ДокументОбъект.Дата)); 
	Если СкладКомпании <> Неопределено Тогда
		ЗначенияБлокировки.Вставить("СкладКомпании", СкладКомпании); 
	КонецЕсли;
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", РезультатЗапросаПоТоварам);
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Номенклатура", "Номенклатура");
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
КонецФункции // ПолучитьДеревоОстатков()

// Выполняет проверку отрицательных остатков после проведения документа по регистру на оперативную отметку времени.
Функция КонтрольОстатковОперативно()

	ВсеОК = Истина;
	
	КонтрольОстатковТоваровОперативно = ПравоПользователя("КонтрольОстатковТоваровОперативно", ДокументОбъект);
	Если КонтрольОстатковТоваровОперативно = Перечисления.ВидыКонтроля.НеКонтролировать Тогда
		// Оперативный контроль остатков отключен.
		Возврат ВсеОК;
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);

	// Сначала получим движения документа до проведения.
	ТаблицаСтарыхДвижений = ДокументОбъект.ДополнительныеСвойства.ДвиженияПередПроведением.ОстаткиТоваровКомпании;
	ТаблицаСтарыхДвижений.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,СкладКомпании", "Количество,Резерв");
	
	// Получим новые движения документа.
	ТаблицаНовыхДвижений = ДокументОбъект.Движения.ОстаткиТоваровКомпании.Выгрузить();
	ТаблицаНовыхДвижений.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,СкладКомпании", "Количество,Резерв");
	
	// Уберем строки старых движений, которые контролировать не будем.
	// Проверка остатков будет выполнена на втором этапе.
	Для Каждого СтрокаНовыхДвижений Из ТаблицаНовыхДвижений Цикл 
		
		СтруктураПоиска = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,СкладКомпании",
			СтрокаНовыхДвижений.Номенклатура, СтрокаНовыхДвижений.ХарактеристикаНоменклатуры, СтрокаНовыхДвижений.СкладКомпании);
		СтрокиСтарыхДвижений = ТаблицаСтарыхДвижений.НайтиСтроки(СтруктураПоиска);

		// Если подобное движение есть и в новых движениях, исключим его из проверки.
		Если СтрокиСтарыхДвижений.Количество() > 0 Тогда
			ТаблицаСтарыхДвижений.Удалить(СтрокиСтарыхДвижений[0]);
		КонецЕсли;
		
	КонецЦикла;

	// Запишем новые движения.
	Записать();
	
	Если ТаблицаСтарыхДвижений.Количество() > 0 Тогда 

		// Получим остатки товаров по движениям, которых нет в "новом" документе.
		ТекстЗапроса ="ВЫБРАТЬ
		              |	ОстаткиТоваровКомпанииОстатки.Номенклатура КАК Номенклатура,
		              |	ОстаткиТоваровКомпанииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		              |	ОстаткиТоваровКомпанииОстатки.СкладКомпании КАК СкладКомпании,
		              |	ОстаткиТоваровКомпанииОстатки.КоличествоОстаток КАК Количество,
		              |	ОстаткиТоваровКомпанииОстатки.РезервОстаток КАК Резерв,
		              |	ОстаткиТоваровКомпанииОстатки.КоличествоОстаток - ОстаткиТоваровКомпанииОстатки.РезервОстаток КАК КоличествоРезерв
		              |ИЗ
		              |	РегистрНакопления.ОстаткиТоваровКомпании.Остатки(
		              |			,
		              |			Номенклатура В (&Номенклатура)
		              |				И СкладКомпании В (&СкладКомпании)
		              |				И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)) КАК ОстаткиТоваровКомпанииОстатки";
		ЗапросОстатков = Новый Запрос(ТекстЗапроса);
		ЗапросОстатков.УстановитьПараметр("Номенклатура", ТаблицаСтарыхДвижений.ВыгрузитьКолонку("Номенклатура"));
		ЗапросОстатков.УстановитьПараметр("СкладКомпании", ТаблицаСтарыхДвижений.ВыгрузитьКолонку("СкладКомпании"));
		ЗапросОстатков.УстановитьПараметр("ХарактеристикаНоменклатуры", ТаблицаСтарыхДвижений.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
		ОстаткиТоваров = ЗапросОстатков.Выполнить().Выгрузить();

		ЗаголовокКонтроляОстатковСтарыхДвижений = "Контроль остатков предыдущего проведения документа:";

		// Проверим отрицательные остатки прошлых движений.
		Для Каждого СтрокаОстатков Из ОстаткиТоваров Цикл

			ОтрицательныйОстатокКоличество = "";
			ОтрицательныйОстатокРезерв = "";
			ОтрицательныйОстатокКоличествоРезерв = "";
			БазоваяЕдиницаИзмерения = СокрЛП(СтрокаОстатков.Номенклатура.БазоваяЕдиницаИзмерения);
			
			Если СтрокаОстатков.Количество < 0 Тогда 
				ОтрицательныйОстатокКоличество =
					СтрШаблон(НСтр("ru = ' Остаток %1 %2.'"),
						Формат(СтрокаОстатков.Количество, "ЧДЦ=3; ЧН=0,00"),
						БазоваяЕдиницаИзмерения);
			КонецЕсли;

			Если СтрокаОстатков.Резерв < 0 Тогда 
				ОтрицательныйОстатокРезерв =
					СтрШаблон(НСтр("ru = ' Резерв %1 %2.'"),
						Формат(СтрокаОстатков.Резерв, "ЧДЦ=3; ЧН=0,00"),
						БазоваяЕдиницаИзмерения);
			КонецЕсли;

			Если СтрокаОстатков.Резерв <> 0 И СтрокаОстатков.КоличествоРезерв < 0 Тогда 
				ОтрицательныйОстатокКоличествоРезерв =
					СтрШаблон(НСтр("ru = ' Свободный остаток %1 %2.'"),
						Формат(СтрокаОстатков.КоличествоРезерв, "ЧДЦ=3; ЧН=0,00"),
						БазоваяЕдиницаИзмерения);
			КонецЕсли;
			
			Если СтрокаОстатков.Количество < 0 ИЛИ СтрокаОстатков.Резерв < 0 ИЛИ (СтрокаОстатков.Резерв <> 0 И СтрокаОстатков.КоличествоРезерв < 0) Тогда 

				// По старым движениям документа есть отрицательные остатки.
				Если НЕ ПустаяСтрока(ЗаголовокКонтроляОстатковСтарыхДвижений) Тогда 
					ОбщегоНазначения.СообщитьПользователю(ЗаголовокКонтроляОстатковСтарыхДвижений);
					ЗаголовокКонтроляОстатковСтарыхДвижений = "";
				КонецЕсли;

				ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаОстатков.Номенклатура);

				Если НЕ ЗначениеЗаполнено(СтрокаОстатков.ХарактеристикаНоменклатуры) Тогда
					ОбщегоНазначения.СообщитьПользователю(
						СтрШаблон(
							НСтр("ru = '[%1] Товар ""%2"".Обнаружены отрицательные остатки.%3%4%5'"),
							ЗначениеКолонкиКода, 
							СокрЛП(СтрокаОстатков.Номенклатура),
							ОтрицательныйОстатокКоличество,
							ОтрицательныйОстатокРезерв,
							ОтрицательныйОстатокКоличествоРезерв),
						ДокументОбъект, , , Истина
					);
				Иначе
					ОбщегоНазначения.СообщитьПользователю(
						СтрШаблон(
							НСтр("ru = '[%1] Товар ""%2"" с характеристикой ""%3"". Обнаружены отрицательные остатки.%4%5%6'"),
							ЗначениеКолонкиКода, 
							СокрЛП(СтрокаОстатков.Номенклатура),
							СокрЛП(СтрокаОстатков.ХарактеристикаНоменклатуры),
							ОтрицательныйОстатокКоличество,
							ОтрицательныйОстатокРезерв,
							ОтрицательныйОстатокКоличествоРезерв),
						ДокументОбъект, , , Истина
					);
				КонецЕсли;
	
				ВсеОК = Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

	// Вторым этапом проверки - отрицательные остатки по новым движениям
	ТекстЗапроса ="ВЫБРАТЬ
	              |	ОстаткиТоваровКомпанииОстатки.Номенклатура КАК Номенклатура,
	              |	ОстаткиТоваровКомпанииОстатки.СкладКомпании КАК СкладКомпании,
	              |	ОстаткиТоваровКомпанииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	              |	ОстаткиТоваровКомпанииОстатки.КоличествоОстаток КАК Количество,
	              |	ОстаткиТоваровКомпанииОстатки.РезервОстаток КАК Резерв,
	              |	ОстаткиТоваровКомпанииОстатки.КоличествоОстаток - ОстаткиТоваровКомпанииОстатки.РезервОстаток КАК КоличествоРезерв
	              |ИЗ
	              |	РегистрНакопления.ОстаткиТоваровКомпании.Остатки(
	              |			,
	              |			Номенклатура В (&Номенклатура)
	              |				И СкладКомпании В (&СкладКомпании)
	              |				И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)) КАК ОстаткиТоваровКомпанииОстатки";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", ТаблицаНовыхДвижений.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("СкладКомпании", ТаблицаНовыхДвижений.ВыгрузитьКолонку("СкладКомпании"));
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ТаблицаНовыхДвижений.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
	ОстаткиТоваров = Запрос.Выполнить().Выгрузить();

	ЗаголовокКонтроляОстатковНовыхДвижений = "Контроль остатков оперативного проведения документа:";
	
	Для Каждого СтрокаОстатков Из ОстаткиТоваров Цикл

		ОтрицательныйОстатокКоличество = "";
		ОтрицательныйОстатокРезерв = "";
		ОтрицательныйОстатокКоличествоРезерв = "";
		БазоваяЕдиницаИзмерения = СокрЛП(СтрокаОстатков.Номенклатура.БазоваяЕдиницаИзмерения);
		
		Если СтрокаОстатков.Количество < 0 Тогда 
			ОтрицательныйОстатокКоличество =
				СтрШаблон(НСтр("ru = ' Остаток %1 %2.'"),
					Формат(СтрокаОстатков.Количество, "ЧДЦ=3; ЧН=0,00"),
					БазоваяЕдиницаИзмерения);
		КонецЕсли;

		Если СтрокаОстатков.Резерв < 0 Тогда 
			ОтрицательныйОстатокРезерв =
				СтрШаблон(НСтр("ru = ' Резерв %1 %2.'"),
					Формат(СтрокаОстатков.Резерв, "ЧДЦ=3; ЧН=0,00"),
					БазоваяЕдиницаИзмерения);
		КонецЕсли;

		Если СтрокаОстатков.Резерв <> 0 И СтрокаОстатков.КоличествоРезерв < 0 Тогда 
			ОтрицательныйОстатокКоличествоРезерв =
				СтрШаблон(НСтр("ru = ' Свободный остаток %1 %2.'"),
					Формат(СтрокаОстатков.КоличествоРезерв, "ЧДЦ=3; ЧН=0,00"),
					БазоваяЕдиницаИзмерения);
		КонецЕсли;
		
		Если СтрокаОстатков.Количество < 0 ИЛИ СтрокаОстатков.Резерв < 0 ИЛИ (СтрокаОстатков.Резерв <> 0 И СтрокаОстатков.КоличествоРезерв < 0) Тогда 

			// По новым движениям документа есть отрицательные остатки.
			Если НЕ ПустаяСтрока(ЗаголовокКонтроляОстатковНовыхДвижений) Тогда 
				ОбщегоНазначения.СообщитьПользователю(ЗаголовокКонтроляОстатковНовыхДвижений);
				ЗаголовокКонтроляОстатковНовыхДвижений = "";
			КонецЕсли;

			ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаОстатков.Номенклатура);

			Если НЕ ЗначениеЗаполнено(СтрокаОстатков.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"".Обнаружены отрицательные остатки.%3%4%5'"),
						ЗначениеКолонкиКода, 
						СокрЛП(СтрокаОстатков.Номенклатура),
						ОтрицательныйОстатокКоличество,
						ОтрицательныйОстатокРезерв,
						ОтрицательныйОстатокКоличествоРезерв),
					ДокументОбъект, , , Истина
				);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" с характеристикой ""%3"". Обнаружены отрицательные остатки.%4%5%6'"),
						ЗначениеКолонкиКода, 
						СокрЛП(СтрокаОстатков.Номенклатура),
						СокрЛП(СтрокаОстатков.ХарактеристикаНоменклатуры),
						ОтрицательныйОстатокКоличество,
						ОтрицательныйОстатокРезерв,
						ОтрицательныйОстатокКоличествоРезерв),
					ДокументОбъект, , , Истина
				);
			КонецЕсли;

			ВсеОК = Ложь;

		КонецЕсли;
		
	КонецЦикла;

	Если ВсеОК = Ложь Тогда
		// Проверка на отрицательные остатки не пройден. Ограничимся предупреждением.
		Если КонтрольОстатковТоваровОперативно = Перечисления.ВидыКонтроля.Предупреждать Тогда 
			ВсеОК = Истина;
		КонецЕсли;
	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);

	Возврат ВсеОК;
	
КонецФункции

#КонецОбласти

#Область Инициализация

////////////////////////////////////////////////////////////////////////
// Инициализация переменных модуля набора записей

ДокументОбъект = Неопределено; // Обязательный к заполнению перед началом проведения
РезультатЗапросаПоТоварам = Неопределено;
СкладКомпании = Неопределено;
ГраницаРасчетаОстатков = Неопределено;

Приходовать = Истина;
Резервировать = Ложь;
ПоБазовомуКоличеству = Ложь;
Пересортица = Ложь;

#КонецОбласти

#КонецЕсли