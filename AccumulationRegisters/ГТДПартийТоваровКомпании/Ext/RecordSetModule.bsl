// Модуль набора записей регистра "ГТД партий товаров компании"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОписаниеПеременных

Перем ДокументОбъект Экспорт;				// Документ выполняющий движения
Перем ШапкаДокумента Экспорт; 				// Выборка или строка таблицы значений, в которой содержаться необходимые данные о шапке документа
Перем ГраницаРасчетаОстатков Экспорт; 		// граница на которую надо рассчитывать остатки 
Перем ТаблицаПартий Экспорт;				// Таблица движений по партия товаров компании
Перем ТаблицаТовары Экспорт; 				// если результат запроса (или таблица значений) неопределен, то подразумевается, что в документе есть таблица "Товары". И наименования колонок стандартные.
Перем СкладКомпании Экспорт;				// Склад компании
Перем Организация Экспорт;					// Организация
Перем МассивПартий Экспорт; 				// Массив. Если надо установить фильтр на партии, то заполняем этот массив
Перем РежимПроведения Экспорт; 				// Режим проведения документа оперативный/неоперативный
Перем ТаблицаВозвратТоваров Экспорт;		// Таблица возвратов товаров с указанием партии

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Добавление новой записи в набор записей регистра
//
// Параметры:
//  ЗаписьПартий - РегистрНакопленияЗапись	 - Запись регистра накопления партий товаров
//  ГТД			 - СправочникСсылка.ГТД		 - ГТД партии.
//
Процедура ДобавитьЗапись(ЗаписьПартий, ГТД) Экспорт
	Если ЗначениеЗаполнено(ГТД) Тогда
		Если ТипЗнч(ЗаписьПартий)=Тип("РегистрНакопленияЗапись.ПартииТоваровКомпании") Тогда
			Если ЗаписьПартий.Количество<>0 Тогда
				НоваяЗапись=Добавить();
				
				НоваяЗапись.ВидДвижения					= ЗаписьПартий.ВидДвижения;
				НоваяЗапись.Период						= ЗаписьПартий.Период;
				НоваяЗапись.Регистратор					= ЗаписьПартий.Регистратор;
				
				НоваяЗапись.СкладКомпании				= ЗаписьПартий.СкладКомпании;
				НоваяЗапись.Организация					= ЗаписьПартий.Организация;
				НоваяЗапись.Номенклатура				= ЗаписьПартий.Номенклатура;
				НоваяЗапись.ХарактеристикаНоменклатуры	= ЗаписьПартий.ХарактеристикаНоменклатуры;
				НоваяЗапись.Партия						= ЗаписьПартий.Партия;
				НоваяЗапись.ГТД							= ГТД;
				
				НоваяЗапись.Количество					= ЗаписьПартий.Количество;
				
				НоваяЗапись.ХозОперация					= ЗаписьПартий.ХозОперация;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры // ДобавитьЗапись()

// Формирует движения по регистру расход (уменьшение запаса по ГТД)
// 
// Возвращаемое значение:
//  Булево - Истина - все ОК, Ложь - чего-то не так.
//
Функция Расход() Экспорт
	ВсеОК=Истина;
	
	// Получим права пользователя
	ОтрицательныеОстаткиРазрешены=(ПраваИНастройкиПользователя.Значение("РазрешитьОтрицательныеСкладскиеОстатки",ДокументОбъект)<>Перечисления.ВидыРазрешенныхОтрицательныхОстатков.Запрещены);
	
	// Списываем ГТД партий
	ТаблицаПартий.Свернуть("Организация,Номенклатура,ХарактеристикаНоменклатуры,Партия","Количество");
	ТаблицаГТДПартий=ПолучитьОстаткиГТДПартий();
	
	Если ТаблицаВозвратТоваров <> Неопределено Тогда
		ТаблицаВозвратТоваров.Свернуть("Организация,Номенклатура,ХарактеристикаНоменклатуры,Партия","Количество");
	КонецЕсли;
	
	// Отсортируем таблицу товаров по ГТД, чтобы сначала списать товары с указанными ГТД.
	ЕстьПартия=(ТаблицаТовары.Колонки.Найти("Партия")<>Неопределено);
	ЕстьГТД=(ТаблицаТовары.Колонки.Найти("ГТД")<>Неопределено);
	СтрокаСортировки="";
	Если ЕстьПартия Тогда
		СтрокаСортировки=СтрокаСортировки+", Партия Убыв";
	КонецЕсли;
	Если ЕстьГТД Тогда
		СтрокаСортировки=СтрокаСортировки+", ГТД Убыв";
	КонецЕсли;
	Если НЕ ПустаяСтрока(СтрокаСортировки) Тогда
		СтрокаСортировки=Сред(СтрокаСортировки,3);
		ТаблицаТовары.Сортировать(СтрокаСортировки);
	КонецЕсли; 
	
	ИмяКолонкиКода=УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
	ВозвратТоваров=(ДокументОбъект.Метаданные()=Метаданные.Документы.ВозвратПоставщику);
	
	Для Каждого СтрокаТовар Из ТаблицаТовары Цикл		
		
		РаспределитьСписаниеТовараПоГТД(СтрокаТовар, ЕстьПартия, ЕстьГТД, ТаблицаГТДПартий, ВозвратТоваров);
						
		// Если еще остались ГТД для списания, то возможно уходим в минус
		Если СтрокаТовар.Количество>0 И ЕстьГТД И ЗначениеЗаполнено(СтрокаТовар.ГТД) Тогда
			ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТовар.Номенклатура);
			Если НЕ ЗначениеЗаполнено(СтрокаТовар.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар %2 не распределился по ГТД <%3> .'"),
						ЗначениеКолонкиКода,
						СокрЛП(СтрокаТовар.Номенклатура),
						СтрокаТовар.ГТД
					),
					ДокументОбъект,
					,
					,
					Истина
				);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар %2 с характеристикой %3 не распределился по ГТД <%4> .'"),
						ЗначениеКолонкиКода,
						СокрЛП(СтрокаТовар.Номенклатура),
						СокрЛП(СтрокаТовар.ХарактеристикаНоменклатуры),
						СтрокаТовар.ГТД
					),
					ДокументОбъект,
					,
					, 
					Истина
				);
			КонецЕсли; 
			Если НЕ ОтрицательныеОстаткиРазрешены Тогда
				ВсеОК=Ложь;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	// обнуляем переменные
	ТаблицаТовары=Неопределено;
	ТаблицаПартий=Неопределено;
	ГраницаРасчетаОстатков=Неопределено;
	СкладКомпании=Неопределено;
	Организация=Неопределено;
	ВозвратТоваров=Неопределено;
	// убиваем циклическую ссылку
	ДокументОбъект=Неопределено;
	ШапкаДокумента=Неопределено;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция получения остатков ГТД
//
// Параметры:
//  ТаблицаПартий	 - ТаблицаЗначений	 - Таблица партий для получения остатков
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Результат остатоков партий по ГТД
//
Функция ПолучитьОстаткиГТДПартий()
	ДатаСреза=Неопределено;
	Если ГраницаРасчетаОстатков=Неопределено Тогда 
		Если РежимПроведения=РежимПроведенияДокумента.Оперативный Тогда
			ГраницаРасчетаОстатков=Неопределено;
		Иначе
			ГраницаРасчетаОстатков=ШапкаДокумента.МоментВремени;
			ДатаСреза=ГраницаРасчетаОстатков.Дата;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ГраницаРасчетаОстатков) = Тип("Граница") Тогда
		Если ТипЗнч(ГраницаРасчетаОстатков.Значение) = Тип("МоментВремени") Тогда
			ДатаСреза=ГраницаРасчетаОстатков.Значение.Дата;
		Иначе
			ДатаСреза=ГраницаРасчетаОстатков.Значение;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ГраницаРасчетаОстатков) = Тип("МоментВремени") Тогда
		ДатаСреза=ГраницаРасчетаОстатков.Дата;
	Иначе
		ДатаСреза=ГраницаРасчетаОстатков;
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	             |	ГТДПартийТоваровКомпанииОстатки.СкладКомпании КАК СкладКомпании,
	             |	ГТДПартийТоваровКомпанииОстатки.Организация КАК Организация,
	             |	ГТДПартийТоваровКомпанииОстатки.Номенклатура КАК Номенклатура,
	             |	ГТДПартийТоваровКомпанииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	             |	ГТДПартийТоваровКомпанииОстатки.Партия КАК Партия,
	             |	ГТДПартийТоваровКомпанииОстатки.ГТД КАК ГТД,
	             |	СУММА(ГТДПартийТоваровКомпанииОстатки.КоличествоОстаток) КАК Количество
	             |ИЗ
	             |	РегистрНакопления.ГТДПартийТоваровКомпании.Остатки(
	             |			&Момент,
	             |			&УсловиеПоСкладКомпании
	             |				И (&БезФильтраПоОрганизации
	             |					ИЛИ Организация В (&СписокОрганизаций))
	             |				И Номенклатура В (&Номенклатура)
	             |				И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)
	             |				И Партия В (&Партия)) КАК ГТДПартийТоваровКомпанииОстатки
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ГТДПартийТоваровКомпанииОстатки.СкладКомпании,
	             |	ГТДПартийТоваровКомпанииОстатки.Организация,
	             |	ГТДПартийТоваровКомпанииОстатки.Номенклатура,
	             |	ГТДПартийТоваровКомпанииОстатки.ХарактеристикаНоменклатуры,
	             |	ГТДПартийТоваровКомпанииОстатки.Партия,
	             |	ГТДПартийТоваровКомпанииОстатки.ГТД";

	Запрос.УстановитьПараметр("Момент",ГраницаРасчетаОстатков);
	Если СкладКомпании=Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоСкладКомпании", "СкладКомпании В (&СкладКомпании)");
		Запрос.УстановитьПараметр("СкладКомпании",ТаблицаПартий.ВыгрузитьКолонку("СкладКомпании"));
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоСкладКомпании", "СкладКомпании = &СкладКомпании");
		Запрос.УстановитьПараметр("СкладКомпании",СкладКомпании);
	КонецЕсли;	
	ОбособленныйУчетТоваровПоОрганизациям = ЗапасыТоваров.ОбособленныйУчетТоваровПоОрганизациям(ДатаСреза);
	Если НЕ ОбособленныйУчетТоваровПоОрганизациям Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"ГТДПартийТоваровКомпанииОстатки.Организация",
			"ГТДПартийТоваровКомпанииОстатки.СкладКомпании.Организация"
		);
	КонецЕсли;
	Запрос.УстановитьПараметр("БезФильтраПоОрганизации", ЗапасыТоваров.ФильтрЗапросаПоОрганизации(ДатаСреза));
	Запрос.УстановитьПараметр("СписокОрганизаций",ТаблицаПартий.ВыгрузитьКолонку("Организация"));
	Запрос.УстановитьПараметр("Номенклатура",ТаблицаПартий.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры",ТаблицаПартий.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
	Запрос.УстановитьПараметр("Партия",ТаблицаПартий.ВыгрузитьКолонку("Партия"));	
	
	// Наложим блокировку на считываемые данные
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период", Новый Диапазон(,ДатаСреза));
	Если СкладКомпании<>Неопределено Тогда
		ЗначенияБлокировки.Вставить("СкладКомпании", СкладКомпании); 
	КонецЕсли;
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы",
		"РегистрНакопления",
		"ГТДПартийТоваровКомпании"
	);
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", ТаблицаПартий);
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Номенклатура", "Номенклатура");
	ОписаниеИсточника.Вставить("Партия", "Партия");
	Если ОбособленныйУчетТоваровПоОрганизациям И Не ЗапасыТоваров.РежимКонтроляОстатковНаСкладахПоКомпании() Тогда
		ОписаниеИсточника.Вставить("Организация", "Организация");
	КонецЕсли;
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(
		СтруктураПараметровБлокировки,
		ЗначенияБлокировки,
		ОписаниеИсточника
	);
	
	ТаблицаГТД=Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаГТД;
КонецФункции // ПолучитьОстаткиГТДПартий() 

Процедура РаспределитьСписаниеТовараПоГТД(СтрокаТовар, ЕстьПартия, ЕстьГТД, ТаблицаГТДПартий, ВозвратТоваров)
	
	// Получим строки таблицы партий с нашим товаром
	СтруктураОтбора=Новый Структура("Номенклатура",СтрокаТовар.Номенклатура);
	Если ЗначениеЗаполнено(СтрокаТовар.ХарактеристикаНоменклатуры) Тогда
		СтруктураОтбора.Вставить("ХарактеристикаНоменклатуры",СтрокаТовар.ХарактеристикаНоменклатуры);
	КонецЕсли; 
	Если ЕстьПартия И ЗначениеЗаполнено(СтрокаТовар.Партия) Тогда
		СтруктураОтбора.Вставить("Партия",СтрокаТовар.Партия);
	КонецЕсли;
	МассивНайденныхПартий=ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
	Для СчПартий=0 По МассивНайденныхПартий.ВГраница() Цикл
		// Идем по списанным партия
		СтрокаПартия=МассивНайденныхПартий[СчПартий];
		СтрокаПартия.Количество=?(ВозвратТоваров,-СтрокаПартия.Количество,СтрокаПартия.Количество);
		СтруктураОтбора.Вставить("ХарактеристикаНоменклатуры",СтрокаПартия.ХарактеристикаНоменклатуры);
		СтруктураОтбора.Вставить("Партия",СтрокаПартия.Партия);
		Если ЗапасыТоваров.ОбособленныйУчетТоваровПоОрганизациям(ШапкаДокумента.Дата) 
			И Не ЗапасыТоваров.РежимКонтроляОстатковНаСкладахПоКомпании() Тогда
			СтруктураОтбора.Вставить("Организация",СтрокаПартия.Организация);
		КонецЕсли;
		Если ЕстьГТД И ЗначениеЗаполнено(СтрокаТовар.ГТД) Тогда
			СтруктураОтбора.Вставить("ГТД",СтрокаТовар.ГТД);
		КонецЕсли; 
		МассивНайденныхГТД = ТаблицаГТДПартий.НайтиСтроки(СтруктураОтбора);
		
		СформироватьРасходГТД(
			МассивНайденныхГТД,
			СтрокаПартия,
			СтруктураОтбора,
			СтрокаТовар,
			ТаблицаГТДПартий,
			ВозвратТоваров);
		
		Если СтрокаПартия.Количество=0 Тогда
			ТаблицаПартий.Удалить(СтрокаПартия);
		Иначе
			СтрокаПартия.Количество=?(ВозвратТоваров, -1, 1) * СтрокаПартия.Количество;
		КонецЕсли;
		Если СтрокаТовар.Количество=0 Тогда
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры // РаспределитьСписаниеТовараПоГТД()

Процедура СформироватьРасходГТД(
		МассивНайденныхГТД,
		СтрокаПартия,
		СтруктураОтбора,
		СтрокаТовар,
		ТаблицаГТДПартий,
		ВозвратТоваров)
	
	Для СчГТД=0 По МассивНайденныхГТД.ВГраница() Цикл
		
		СтрокаВозврат = Неопределено;
		Если ТаблицаВозвратТоваров <> Неопределено Тогда
			МассивВозвратов = ТаблицаВозвратТоваров.НайтиСтроки(СтруктураОтбора);
			Если МассивВозвратов.Количество() > 0 Тогда
				СтрокаВозврат = МассивВозвратов[0];
			КонецЕсли;
		КонецЕсли;
		// Был полный возврат товара.
		Если НЕ СтрокаВозврат = Неопределено И СтрокаПартия.Количество = 0 Тогда
			СтрокаПартия.Количество = СтрокаВозврат.Количество;
		КонецЕсли;
		
		// Списываем ГТД партии
		СтрокаГТД = МассивНайденныхГТД[СчГТД];
		НоваяЗапись=Добавить();
		НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Расход;
		НоваяЗапись.Период = ШапкаДокумента.Дата;
		НоваяЗапись.Регистратор = ШапкаДокумента.Ссылка;
		НоваяЗапись.СкладКомпании = СтрокаГТД.СкладКомпании;
		НоваяЗапись.Организация = СтрокаГТД.Организация;
		НоваяЗапись.ЗапасыДругойОрганизацииПоИнтеркампани = ЗапасыТоваров.ЭтоЗапасыДругойОрганизацииПоИнтеркампани(СтрокаГТД.Организация, Организация, НоваяЗапись.Период);
		НоваяЗапись.Номенклатура = СтрокаГТД.Номенклатура;
		НоваяЗапись.ХарактеристикаНоменклатуры = СтрокаГТД.ХарактеристикаНоменклатуры;
		НоваяЗапись.Партия = СтрокаГТД.Партия;
		НоваяЗапись.ГТД=СтрокаГТД.ГТД;
		НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
		НоваяЗапись.Количество=Мин(СтрокаГТД.Количество, СтрокаПартия.Количество, СтрокаТовар.Количество);
		
		Если НЕ СтрокаВозврат = Неопределено Тогда
			КоличествоВозврат = Мин(СтрокаГТД.Количество, СтрокаПартия.Количество, СтрокаВозврат.Количество);
		Иначе
			КоличествоВозврат = 0;
		КонецЕсли;
		СтрокаГТД.Количество = СтрокаГТД.Количество - НоваяЗапись.Количество;
		СтрокаПартия.Количество = СтрокаПартия.Количество - НоваяЗапись.Количество;
		
		Если КоличествоВозврат > 0 Тогда
			НоваяЗаписьВозврат = Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗаписьВозврат, НоваяЗапись);
			НоваяЗаписьВозврат.Количество = - КоличествоВозврат;
			СтрокаГТД.Количество = СтрокаГТД.Количество + КоличествоВозврат;
			СтрокаПартия.Количество = СтрокаПартия.Количество + КоличествоВозврат;
			Если КоличествоВозврат = СтрокаВозврат.Количество Тогда
				ТаблицаВозвратТоваров.Удалить(СтрокаВозврат);
			Иначе
				СтрокаВозврат.Количество = СтрокаВозврат.Количество - КоличествоВозврат;
			КонецЕсли;
			СчГТД = СчГТД - 1;
		КонецЕсли;
		
		СтрокаТовар.Количество = СтрокаТовар.Количество - НоваяЗапись.Количество;
		Если ВозвратТоваров Тогда
			НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Количество = - НоваяЗапись.Количество;
		КонецЕсли; 
		Если СтрокаГТД.Количество = 0 Тогда
			ТаблицаГТДПартий.Удалить(СтрокаГТД);
		КонецЕсли; 
		Если СтрокаПартия.Количество = 0 Тогда
			Прервать;
		КонецЕсли; 
		Если СтрокаТовар.Количество = 0 Тогда
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ТаблицаВозвратТоваров=Неопределено;

#КонецОбласти

#КонецЕсли