// Модуль набора записей регистра накоплений "Остатки товаров ордерный склад"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОписаниеПеременных

Перем РежимПроведения Экспорт;		// Режим проведения документа оперативный/неоперативный

Перем ДокументОбъект Экспорт; // Документ, осуществляющий движение по регистру
Перем РезультатЗапросаПоТоварам Экспорт; // Выборка табличной части или таблица значений табличной части товаров
Перем СкладКомпании Экспорт; //Ссылка на склад компании, на котором необходимо производить приходование и резервирование. Если значение неопределено склад находится в табличной части товаров
Перем ГраницаРасчетаОстатков Экспорт; // граница расчета остатков
Перем ПоБазовомуКоличеству Экспорт; // Булево. Ложь - количество товаров будет рассчитываться как "Количество*Коэффициент", Истина - количество будет браться из реквизита "КоличествоБазовое"
Перем Пересортица Экспорт; // Булево. Истина - проведение документа Пересортица

// В соответствии с этими флагами используются соответствующие колонки таблицы товаров.
Перем Приходовать Экспорт; // Булево. Истина - надо приходовать товары на склад

Перем ЗаявкаНаХранениеШин Экспорт; //Ссылка на завку на хранение шин

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает результат запроса по таблице товаров
Функция ПолучитьТаблицуТоваров() Экспорт
	// получим результат запроса по товарной таблице
	ПоБазовомуКоличеству = ?(ПоБазовомуКоличеству = Неопределено, Ложь, ПоБазовомуКоличеству);
    ВидДок = ДокументОбъект.Метаданные().Имя;
	Запрос = Новый Запрос();
	ТекстЗапроса="
	|ВЫБРАТЬ
	|	ДокументТовары.Номенклатура КАК Номенклатура,
	|	ДокументТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ДокументТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|";
	Если СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.ОрдерныйЯчеистый Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ДокументТовары.Ячейка КАК Ячейка
		|";
	КонецЕсли; 
	ТекстЗапроса = ТекстЗапроса + ",
	|	" + ?(СкладКомпании = Неопределено,"ДокументТовары.МестоРазмещения","&СкладКомпании") + " КАК СкладКомпании
	|";
	Если ТипЗнч(ЗаявкаНаХранениеШин)=Тип("Строка") Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ДокументТовары." + ЗаявкаНаХранениеШин + " КАК ЗаявкаНаХранениеШин
		|";
	КонецЕсли; 
	Если Приходовать Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	СУММА(" + ?(ПоБазовомуКоличеству, "ДокументТовары.КоличествоБазовое", "ДокументТовары.Количество*ДокументТовары.Коэффициент") + ") КАК Количество
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	СУММА(0) КАК Количество                                                        
		|";
	КонецЕсли; 
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	Документ." + ВидДок + ".Товары КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.Ссылка=&Ссылка И ДокументТовары.Номенклатура.ВидНоменклатуры<>&Услуга";
	Если ВидДок = "ПереразмещениеТоваров" Тогда
		ТекстЗапроса = ТекстЗапроса
		+ " И ДокументТовары.Ячейка <> ДокументТовары.ЯчейкаНовая"
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументТовары.Номенклатура,ДокументТовары.ХарактеристикаНоменклатуры," 
	+ ?(СкладКомпании = Неопределено, "ДокументТовары.МестоРазмещения", "&СкладКомпании") + ",
	| ДокументТовары.ЕдиницаИзмерения 
	|";
	Если СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.ОрдерныйЯчеистый Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ДокументТовары.Ячейка
		|";
	КонецЕсли; 
	Если ТипЗнч(ЗаявкаНаХранениеШин) = Тип("Строка") Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ДокументТовары." + ЗаявкаНаХранениеШин + "
		|";
	КонецЕсли; 
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СкладКомпании", СкладКомпании);
	Запрос.УстановитьПараметр("Услуга", Перечисления.ВидыНоменклатуры.Услуга);

	Возврат Запрос.Выполнить();
КонецФункции

// Возвращает результат запроса по остаткам товаров и резервам
Функция ПолучитьОстаткиТоваров() Экспорт
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиТоваровОрдерныйСкладОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиТоваровОрдерныйСкладОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиТоваровОрдерныйСкладОстатки.СкладКомпании КАК СкладКомпании,
	|	ОстаткиТоваровОрдерныйСкладОстатки.Ячейка КАК Ячейка,
	|	ОстаткиТоваровОрдерныйСкладОстатки.ЗаявкаНаХранениеШин КАК ЗаявкаНаХранениеШин,
	|	ОстаткиТоваровОрдерныйСкладОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОстаткиТоваровОрдерныйСкладОстатки.КоличествоОстаток КАК Количество
	|ИЗ 
	|	РегистрНакопления.ОстаткиТоваровОрдерныйСклад.Остатки(&Момент,Номенклатура В (&Номенклатура)" 
	+ ?(СкладКомпании <> Неопределено, " И СкладКомпании=&СкладКомпании", "") 
	+ " И ЗаявкаНаХранениеШин=&ЗаявкаНаХранениеШин) КАК ОстаткиТоваровОрдерныйСкладОстатки
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ОстаткиТоваровОрдерныйСкладОстатки.ЕдиницаИзмерения,
	|	ОстаткиТоваровОрдерныйСкладОстатки.ХарактеристикаНоменклатуры.Сортировка ВОЗР
	|";                                       
	РежимПроведенияПараметр = ?(РежимПроведения = РежимПроведенияДокумента.Оперативный, 
												Неопределено, ДокументОбъект.МоментВремени()); 
	Запрос.УстановитьПараметр("Момент", ?(ГраницаРасчетаОстатков = Неопределено, 
												РежимПроведенияПараметр, ГраницаРасчетаОстатков));
	Запрос.УстановитьПараметр("Номенклатура", РезультатЗапросаПоТоварам.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("СкладКомпании", СкладКомпании);
	Если (ЗначениеЗаполнено(ЗаявкаНаХранениеШин)) И ТипЗнч(ЗаявкаНаХранениеШин) = Тип("ДокументСсылка.ЗаявкаНаХранениеШин") Тогда
		Запрос.УстановитьПараметр("ЗаявкаНаХранениеШин", ЗаявкаНаХранениеШин);
	ИначеЕсли (ЗначениеЗаполнено(ЗаявкаНаХранениеШин)) И ТипЗнч(ЗаявкаНаХранениеШин) = Тип("Строка") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗаявкаНаХранениеШин=&ЗаявкаНаХранениеШин", "ЗаявкаНаХранениеШин<>&ЗаявкаНаХранениеШин");
		Запрос.УстановитьПараметр("ЗаявкаНаХранениеШин", Документы.ЗаявкаНаХранениеШин.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("ЗаявкаНаХранениеШин", Документы.ЗаявкаНаХранениеШин.ПустаяСсылка());
	КонецЕсли; 
	Запрос.Текст = ТекстЗапроса;
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ОстаткиТоваровОрдерныйСклад");
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, ДокументОбъект.Дата)); 
	ЗначенияБлокировки.Вставить("СкладКомпании", СкладКомпании); 
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", РезультатЗапросаПоТоварам);
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Номенклатура", "Номенклатура");
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	Возврат Запрос.Выполнить();
КонецФункции

// Формирует движения по регистру ОстаткиТоваровОрдерныйСклад (увеличение товарного запаса)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
Функция Приход() Экспорт
	
	ВсеОК = Истина;
	
	// получим таблицу товарного состава
	Если (РезультатЗапросаПоТоварам = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам) <> Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоТоварам=ПолучитьТаблицуТоваров();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам=РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	// Перебираем строки товаров
	Для каждого СтрокаТоваров Из РезультатЗапросаПоТоварам Цикл
		Склад = СкладКомпании;
		Если Приходовать Тогда Количество=СтрокаТоваров.Количество; Иначе Количество=0; КонецЕсли;
		Если Количество <> 0 Тогда
			// Создаем запись регистра ОстаткиТоваровОрдерныйСклад
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период 	 	  = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
			НоваяЗапись.СкладКомпании = Склад;
			НоваяЗапись.Номенклатура  = СтрокаТоваров.Номенклатура;
			// ячейку пишем только для ячеистого склада
			Если СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.ОрдерныйЯчеистый Тогда
				НоваяЗапись.Ячейка = СтрокаТоваров.Ячейка;
			КонецЕсли; 
			// ед. измерения пишем только если для склада ведется учет единиц
			Если СкладКомпании.УчетЕдиницИзмерения <> Перечисления.ВидыУчетаЕдиницИзмерения.НеВедется Тогда
				НоваяЗапись.ЕдиницаИзмерения = СтрокаТоваров.ЕдиницаИзмерения;
			КонецЕсли; 
			НоваяЗапись.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры;
			Если ТипЗнч(ЗаявкаНаХранениеШин)=Тип("ДокументСсылка.ЗаявкаНаХранениеШин") Тогда
				НоваяЗапись.ЗаявкаНаХранениеШин=ЗаявкаНаХранениеШин;
			ИначеЕсли ТипЗнч(ЗаявкаНаХранениеШин)=Тип("Строка") Тогда
				НоваяЗапись.ЗаявкаНаХранениеШин=СтрокаТоваров[ЗаявкаНаХранениеШин];
			КонецЕсли; 
	        // определяемся с хоз. операцией
			НоваяЗапись.ХозОперация=ДокументОбъект.ХозОперация;
			// количество
			НоваяЗапись.Количество=Количество;
		КонецЕсли; 
	КонецЦикла; 
	
	// убиваем циклическую ссылку
	ДокументОбъект=Неопределено;
	ЗаявкаНаХранениеШин=Неопределено;
	
	Возврат ВсеОК;
КонецФункции

// Формирует движения по регистру расход (уменьшение товарного запаса)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
Функция Расход() Экспорт
	СкладЯчеистый = (СкладКомпании.ВидСклада = Перечисления.ВидыСкладов.ОрдерныйЯчеистый);
	// получим права пользователя
	ОтрицательныеОстаткиРазрешены = (ПраваИНастройкиПользователя.Значение(
		"РазрешитьОтрицательныеСкладскиеОстатки",ДокументОбъект)=Перечисления.ВидыРазрешенныхОтрицательныхОстатков.ПоОстаткам);
	
	// получим таблицу товарного состава
	Если (РезультатЗапросаПоТоварам = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоТоварам = ПолучитьТаблицуТоваров();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоТоварам) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоТоварам = РезультатЗапросаПоТоварам.Выгрузить();
	КонецЕсли;
	// Получение остатков на складе
	ТаблицаОстатковТоваров=ПолучитьОстаткиТоваров().Выгрузить();
	// Для вида "ВедетсяПоПриходу" нужно рассчитать отношение коэффициента списываемой единицы
	// ко всем остальным единицам выборки.
	// Стратегия: Если СкладКомпании.УчетЕдиницИзмерения = «Ведется по приходу», то количество и единицу измерения
	// необходимо автоматически подобрать в зависимости от остатков на складе - сначала пытается списать
	// ту единицу измерения, как она указана в документе, потом пытаемся подобрать ближайшую
	// по кратности единицу измерения.
	Если СкладКомпании.УчетЕдиницИзмерения = Перечисления.ВидыУчетаЕдиницИзмерения.ВедетсяПоПриходу Тогда
		КвалификаторЧисла = Новый КвалификаторыЧисла(10,5);
		ТаблицаОстатковТоваров.Колонки.Добавить("ОтношениеКоэффициента", Новый ОписаниеТипов("Число",КвалификаторЧисла));
	КонецЕсли; 
	
	Если НЕ Пересортица Тогда
		// получим таблицу номенклатуры с ручным списанием характеристик
		ТаблицаРучныхХарактеристик=ОбработкаТабличнойЧастиТовары.ПолучитьНоменклатуруСРучнымСписаниемХарактеристик(ДокументОбъект.Ссылка);
	КонецЕсли;
	
	// Перебираем строки товаров
	Для Каждого СтрокаТоваров Из РезультатЗапросаПоТоварам Цикл
		// Получим склад
 		Склад = СкладКомпании;
		Если ТипЗнч(Склад) <> Тип("СправочникСсылка.СкладыКомпании") Тогда Продолжить; КонецЕсли; 
		Если Приходовать Тогда Количество=СтрокаТоваров.Количество; Иначе Количество=0; КонецЕсли;
		// Получим остатки по текущей номенклатуре
		СтруктураОтбораОстатковТоваров=Новый Структура("Номенклатура,СкладКомпании", СтрокаТоваров.Номенклатура, Склад);
		// Добавим отбор по характеристике, если она заполнена
		Если ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) ИЛИ (ТаблицаРучныхХарактеристик<>Неопределено И ТаблицаРучныхХарактеристик.Найти(СтрокаТоваров.Номенклатура,"Номенклатура")<>Неопределено) Тогда 
			СтруктураОтбораОстатковТоваров.Вставить("ХарактеристикаНоменклатуры",СтрокаТоваров.ХарактеристикаНоменклатуры);
		КонецЕсли;
		// Добавим отбор по ячейке для ячеистого склада
		Если СкладЯчеистый Тогда
			СтруктураОтбораОстатковТоваров.Вставить("Ячейка",СтрокаТоваров.Ячейка);
		КонецЕсли; 
		// Добавим отбор по единице измерения
		Если Склад.УчетЕдиницИзмерения = Перечисления.ВидыУчетаЕдиницИзмерения.ВедетсяПоПриходуИОтгрузке Тогда 	
			СтруктураОтбораОстатковТоваров.Вставить("ЕдиницаИзмерения",СтрокаТоваров.ЕдиницаИзмерения);
		КонецЕсли;
		Если ТипЗнч(ЗаявкаНаХранениеШин)=Тип("Строка") Тогда
			СтруктураОтбораОстатковТоваров.Вставить("ЗаявкаНаХранениеШин",СтрокаТоваров.ЗаявкаНаХранениеШин);
		КонецЕсли; 
		МассивНайденныхСтрок = ТаблицаОстатковТоваров.НайтиСтроки(СтруктураОтбораОстатковТоваров);
		КоличествоОстаток = 0; 
		КоэфСписываемойЕдиницы = СтрокаТоваров.ЕдиницаИзмерения.Коэффициент;
		
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			КоличествоОстаток=КоличествоОстаток+ТекСтрока.Количество;
			// рассчитываем отношение коэффициента
			Если Склад.УчетЕдиницИзмерения = Перечисления.ВидыУчетаЕдиницИзмерения.ВедетсяПоПриходу Тогда
				ТекСтрока.ОтношениеКоэффициента = ?(КоэфСписываемойЕдиницы < ТекСтрока.ЕдиницаИзмерения.Коэффициент, КоэфСписываемойЕдиницы / ТекСтрока.ЕдиницаИзмерения.Коэффициент,  ТекСтрока.ЕдиницаИзмерения.Коэффициент / КоэфСписываемойЕдиницы);
			КонецЕсли; 
		КонецЦикла;
		// Для вида "ВедетсяПоПриходу" отсортируем таблицу по убыванию колонки "ОтношениеКоэффициента".
		Если Склад.УчетЕдиницИзмерения = Перечисления.ВидыУчетаЕдиницИзмерения.ВедетсяПоПриходу Тогда
			ТаблицаОстатковТоваров.Сортировать("ОтношениеКоэффициента Убыв");
			// Заново находим строки, но уже в порядке сортировки по полю "ОтношениеКоэффициента".
			МассивНайденныхСтрок=ТаблицаОстатковТоваров.НайтиСтроки(СтруктураОтбораОстатковТоваров);
		КонецЕсли; 
		Если (Количество>КоличествоОстаток) И НЕ ОтрицательныеОстаткиРазрешены Тогда
			// Расход по складу превышает остаток
			Если (Склад.УчетЕдиницИзмерения = Перечисления.ВидыУчетаЕдиницИзмерения.ВедетсяПоПриходуИОтгрузке) И (СтрокаТоваров.ЕдиницаИзмерения <> СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения) Тогда
				СтрДопТекст = Формат(Окр(КоличествоОстаток/СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения.Коэффициент,3),"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)+" ("+Формат(КоличествоОстаток/СтрокаТоваров.ЕдиницаИзмерения.Коэффициент,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.ЕдиницаИзмерения)+")" 
							  +". Списывается "+Формат(Окр(Количество/СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения.Коэффициент,3),"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)+" ("+Формат(Количество/СтрокаТоваров.ЕдиницаИзмерения.Коэффициент,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.ЕдиницаИзмерения)+")"
							  +". Превышение "+Формат(Окр((Количество-КоличествоОстаток)/СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения.Коэффициент,3),"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.ОсновнаяЕдиницаИзмерения)+" ("+Формат((Количество-КоличествоОстаток)/СтрокаТоваров.ЕдиницаИзмерения.Коэффициент,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.ЕдиницаИзмерения)+").";
			Иначе
				СтрДопТекст = Формат(КоличествоОстаток,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения) 
							  +". Списывается "+Формат(Количество,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения)
							  +". Превышение "+Формат(Количество-КоличествоОстаток,"ЧДЦ=3; ЧН=0,00")+" "+СокрЛП(СтрокаТоваров.Номенклатура.БазоваяЕдиницаИзмерения)+".";
			КонецЕсли; 
			Если НЕ ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
				ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура);
				СтрРезультат = "["+ЗначениеКолонкиКода+"] " + "Товар" + " """+СокрЛП(СтрокаТоваров.Номенклатура)
					+""". " + "Остаток" + " ";
				Если СкладЯчеистый Тогда
					СтрРезультат = СтрРезультат + НСтр("ru = 'в ячейке'") +" """ + СокрЛП(СтрокаТоваров.Ячейка) + """ ";
				КонецЕсли; 
				СтрРезультат = СтрРезультат + СтрДопТекст;
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = '%1'"),СтрРезультат),
					ДокументОбъект, 
					""+СтрокаТоваров.Номенклатура+""
				);
			Иначе
				ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТоваров.Номенклатура);
				СтрРезультат = "["+ЗначениеКолонкиКода+"] " + "Товар" + " """+СокрЛП(СтрокаТоваров.Номенклатура)
					+""" " + НСтр("ru = 'с характеристикой'") + " """+СокрЛП(СтрокаТоваров.ХарактеристикаНоменклатуры)+""". " 
					+ "Остаток" + " ";
				Если СкладЯчеистый Тогда
					СтрРезультат = СтрРезультат + НСтр("ru = 'в ячейке'") +" """ + СокрЛП(СтрокаТоваров.Ячейка) + """ ";
				КонецЕсли; 
				СтрРезультат = СтрРезультат + СтрДопТекст;
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = '%1'"),СтрРезультат),
					ДокументОбъект, 
					""+СтрокаТоваров.Номенклатура+""
				);

			КонецЕсли; 
			ДокументОбъект = Неопределено;
			ЗаявкаНаХранениеШин = Неопределено;
			Возврат Ложь; // отмена проведения из-за превышения количества
		КонецЕсли; 
		// Списание в разрезе характеристик, ячеек, единиц измерения.
		НадоСписатьКоличество=Количество; 
		Для Сч=0 По МассивНайденныхСтрок.ВГраница() Цикл
			СтрокаОстатки=МассивНайденныхСтрок[Сч];
			
			Если СтрокаОстатки.Количество<=0 Тогда
				Продолжить;
			КонецЕсли;
			
			// Списываем товар.
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения 	 = ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период 		 	 = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор 	 = ДокументОбъект.Ссылка;
			НоваяЗапись.СкладКомпании 	 = Склад;
			НоваяЗапись.Номенклатура 	 = СтрокаТоваров.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры = СтрокаОстатки.ХарактеристикаНоменклатуры;
			Если СкладЯчеистый Тогда
				НоваяЗапись.Ячейка 		 = СтрокаОстатки.Ячейка;
			КонецЕсли; 
			НоваяЗапись.ЕдиницаИзмерения = СтрокаОстатки.ЕдиницаИзмерения;
			Если ТипЗнч(ЗаявкаНаХранениеШин)=Тип("ДокументСсылка.ЗаявкаНаХранениеШин") Тогда
				НоваяЗапись.ЗаявкаНаХранениеШин = СтрокаОстатки.ЗаявкаНаХранениеШин;
			ИначеЕсли ТипЗнч(ЗаявкаНаХранениеШин)=Тип("Строка") Тогда
				НоваяЗапись.ЗаявкаНаХранениеШин = СтрокаТоваров.ЗаявкаНаХранениеШин;
			КонецЕсли; 
			// Определяемся с хоз. операцией
			НоваяЗапись.ХозОперация		 = ДокументОбъект.ХозОперация;
			// Количество
			НоваяЗапись.Количество	 	 = Мин(СтрокаОстатки.Количество,НадоСписатьКоличество);
			
			// Удалим ненужные строки
			ТаблицаОстатковТоваров.Удалить(СтрокаОстатки);
			
			НадоСписатьКоличество = НадоСписатьКоличество - НоваяЗапись.Количество;
			Если НадоСписатьКоличество <=0 Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
		// Если после списания осталось еще то, что надо списать, то наверное у нас разрешены отрицательные остатки.
		// Спишем их.
		Если НадоСписатьКоличество>0 Тогда
			НоваяЗапись=Добавить();
			НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период=ДокументОбъект.Дата;
			НоваяЗапись.Регистратор=ДокументОбъект.Ссылка;
			НоваяЗапись.СкладКомпании=Склад;
			НоваяЗапись.Номенклатура=СтрокаТоваров.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры=СтрокаТоваров.ХарактеристикаНоменклатуры;
			Если СкладЯчеистый Тогда
				НоваяЗапись.Ячейка = СтрокаТоваров.Ячейка;
			КонецЕсли; 
			// Ед. измерения пишем только если для склада ведется учет единиц.
			Если Склад.УчетЕдиницИзмерения <> Перечисления.ВидыУчетаЕдиницИзмерения.НеВедется Тогда
				НоваяЗапись.ЕдиницаИзмерения = СтрокаТоваров.ЕдиницаИзмерения;
			КонецЕсли;
			НоваяЗапись.ХозОперация=ДокументОбъект.ХозОперация;
			НоваяЗапись.Количество=НадоСписатьКоличество;
		КонецЕсли;
		
	КонецЦикла;
	
	
	// убиваем циклическую ссылку
	ДокументОбъект = Неопределено;
	ЗаявкаНаХранениеШин = Неопределено;
	
	// возврат результата
	Возврат Истина;
КонецФункции

#КонецОбласти

#Область Инициализация

////////////////////////////////////////////////////////////////////////
// Инициализация переменных модуля набора записей

ДокументОбъект 			  = Неопределено; // Обязательный к заполнению перед началом проведения
РежимПроведения			  = РежимПроведенияДокумента.Оперативный;
РезультатЗапросаПоТоварам = Неопределено;
СкладКомпании			  = Неопределено;
ГраницаРасчетаОстатков 	  = Неопределено;
Приходовать				  = Истина;
ПоБазовомуКоличеству	  = Ложь;
Пересортица				  = Ложь;

ЗаявкаНаХранениеШин		  = Неопределено;

#КонецОбласти

#КонецЕсли