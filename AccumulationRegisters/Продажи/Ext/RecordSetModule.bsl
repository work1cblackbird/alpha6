// Модуль набора записей регистра накоплений "Продажи"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОписаниеПеременных

Перем Покупатель Экспорт; // контрагент
Перем ДоговорВзаиморасчетов Экспорт; // договор взаиморасчетов с контрагентом
Перем СкладКомпании Экспорт; // склад компании
Перем ДокументПродажи Экспорт; // Документ продажи
Перем Комиссия Экспорт; // Булево. Истина - продажи комиссионером, Ложь - продажи наши
Перем Сторно Экспорт; // Булево. Истина - возврат от покупателя
Перем ПодразделениеКомпании Экспорт;     // подразделение компании
Перем ДокументОбъект Экспорт;            // документ объект
Перем РезультатЗапросаПоТоварам Экспорт; // результат запроса по товарам
Перем РезультатЗапросаПоПартиям Экспорт; // результат запроса по партиям
Перем КэшСебестоимостиПриКомиссии Экспорт; // Кэш себестоимости при комиссии
Перем ИмяРеквизитаДокумент Экспорт; // Строка. Имя реквизита табличной части "Товары". Этот реквизит определяет партию либо документ отгрузки
Перем ПоБазовомуКоличеству Экспорт; // Булево. Ложь - количество товаров будет рассчитываться как "Количество*Коэффициент", Истина - количество будет браться из реквизита "КоличествоБазовое"
Перем ШапкаДокумента Экспорт; 			// Выборка или строка таблицы значений, в которой содержаться необходимые данные о шапке документа
Перем РежимПроведения Экспорт;		// Режим проведения документа оперативный/неоперативный
Перем ТаблицаМинимальныхНаценок; // Кэш минимальных наценок
Перем Пользователь; // Авторизованный пользователь

Перем ЕстьАвтомобиль Экспорт; // Булево. Признак дополнительной детализации по автомобилю
Перем ЕстьАвтомобильАренды Экспорт; // Булево. Признак дополнительной детализации по автомобилю аренды
Перем Автомобиль Экспорт; // Автомобиль
Перем РасчетыСКонтрагентами Экспорт; // Расчеты с контрагентами для формирования суммы продажи
Перем ПересчитатьСуммыПоРасчетамСКонтрагентами Экспорт; // Булево. Необходимость пересчета по регистру "РасчетыСКонтрагентами"

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Получаем то, что продали
// Продаем - Булево. Истина - продаем товар, Ложь - возвращаем.
Функция ПолучитьТаблицуТоваров(Продаем = Истина) Экспорт
	
	Комиссия             = ?(Комиссия = Неопределено, Ложь, Комиссия);
	ВидДок               = ДокументОбъект.Метаданные().Имя;
	ПоБазовомуКоличеству = ?(ПоБазовомуКоличеству = Неопределено, Ложь, ПоБазовомуКоличеству);
	
	// посмотрим есть в документе сумма скидки
	ЕстьСкидка          = ЕстьРеквизит(ДокументОбъект, "СуммаСкидки", "Товары");
	ЕстьДокументПродажи = ЕстьРеквизит(ДокументОбъект, "ДокументПродажи", "Товары");
	ЕстьГТД             = ЕстьРеквизит(ДокументОбъект, "ГТД", "Товары");
	
	// аренда
	ЕстьРеквизитАвтомобиль = ЕстьРеквизит(ДокументОбъект, "Автомобиль", "Товары");
	
	ТекстСтрочнойСкидки = "";
	Если ЕстьРеквизит(ДокументОбъект, "СуммаСкидкиСтроки", "Товары") Тогда
		ТекстСтрочнойСкидки = " + ДокументТовары.СуммаСкидкиСтроки";
	КонецЕсли;
	
	АвтомобильВТаблице = (Автомобиль = Неопределено);
	
	// формируем запрос
	АвтомобильИтог = ?(АвтомобильВТаблице, "ДокументАвтомобили.Автомобиль КАК Автомобиль,", "&Автомобиль КАК Автомобиль,");	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	" + ?(ЕстьАвтомобиль, АвтомобильИтог, "") + "ДокументТовары.Номенклатура КАК Номенклатура,
	|	ДокументТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ДокументТовары.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ДокументТовары.СтавкаНДС КАК СтавкаНДС" + "
	|	" + ?(СкладКомпании = Неопределено, ",ДокументТовары.МестоРазмещения КАК СкладКомпании", "") + "
	|	" + ?(ЗначениеЗаполнено(ИмяРеквизитаДокумент), ",ДокументТовары." + ИмяРеквизитаДокумент + " КАК Партия", "") + ",
	|	" + ?(ЕстьДокументПродажи, "ДокументТовары.ДокументПродажи КАК ДокументПродажи,", "") + "
	|	" + ?(ЕстьГТД, "ДокументТовары.ГТД КАК ГТД,", "") + "
	|	" + ?(НЕ ЕстьАвтомобиль И ЕстьАвтомобильАренды, "ДокументТовары.Автомобиль КАК Автомобиль,", "") + "
	|	СУММА(ДокументТовары.Количество" 
	+ ?(ПоБазовомуКоличеству, "Базовое", "*ДокументТовары.Коэффициент") + ") КАК Количество,
	|	СУММА(ДокументТовары.СуммаВсего) КАК Сумма,
	|	СУММА(ДокументТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(" + ?(ЕстьСкидка, "ДокументТовары.СуммаСкидки", "0") + ТекстСтрочнойСкидки + ") КАК СуммаСкидки
	|ИЗ
	|	Документ." + ВидДок + ".Товары КАК ДокументТовары" + ?(ЕстьАвтомобиль И АвтомобильВТаблице, "
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ." + ВидДок + ".Автомобили КАК ДокументАвтомобили
	|ПО
	|	ДокументТовары.ИдентификаторАвтомобиля = ДокументАвтомобили.ИдентификаторАвтомобиля И ДокументАвтомобили.Ссылка=&Ссылка", "") + "
	|ГДЕ
	|	ДокументТовары.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	" + ?(ЕстьАвтомобиль И АвтомобильВТаблице, "ДокументАвтомобили.Автомобиль,", "") + "
	|	ДокументТовары.Номенклатура,
	|	ДокументТовары.ХарактеристикаНоменклатуры,
	|	ДокументТовары.СтавкаНДС" + ?(СкладКомпании = Неопределено, ",
	|	ДокументТовары.МестоРазмещения", "") + ?(ЗначениеЗаполнено(ИмяРеквизитаДокумент), ",
	|	ДокументТовары." + ИмяРеквизитаДокумент, "") + "
	|	" + ?(ЕстьДокументПродажи, ",ДокументТовары.ДокументПродажи", "") + "
	|	" + ?(ЕстьГТД, ",ДокументТовары.ГТД", "") + "
	|	" + ?(НЕ ЕстьАвтомобиль И ЕстьАвтомобильАренды, ",ДокументТовары.Автомобиль", "") + "
	|УПОРЯДОЧИТЬ ПО
	|	ДокументТовары.Номенклатура,
	|	ДокументТовары.ХарактеристикаНоменклатуры
	|	" + ?(НЕ ЗначениеЗаполнено(ИмяРеквизитаДокумент), "", ",ДокументТовары." + ИмяРеквизитаДокумент + " Убыв") + "
	|	" + ?(ЕстьГТД, ",ДокументТовары.ГТД Убыв", "") + "
	|");
	Запрос.УстановитьПараметр("Ссылка",     ШапкаДокумента.Ссылка);
	Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// фиксируем продажи
Функция Приход() Экспорт
	
	Результат = Истина;
	// получаем товарную таблицу
	Если (РезультатЗапросаПоТоварам = Неопределено)
		ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам) <> Тип("РезультатЗапроса")
		И ТипЗнч(РезультатЗапросаПоТоварам) <> Тип("ТаблицаЗначений")) Тогда
		
		РезультатЗапросаПоТоварам = ПолучитьТаблицуТоваров();
		
	КонецЕсли;
	
	ПартииУказаны = ЗначениеЗаполнено(ИмяРеквизитаДокумент);
	
	ВалютаРегл = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	КурсРегл   = РаботаСКурсамиВалютПлатформа.ПолучитьКурсВалюты(ВалютаРегл, ШапкаДокумента.Дата);
	ВалютаУпр  = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	
	Если НЕ ЗначениеЗаполнено(ШапкаДокумента.КурсВалютыУпр) Тогда
		КурсУпр = РаботаСКурсамиВалютПлатформа.ПолучитьКурсВалюты(ВалютаУпр, ШапкаДокумента.Дата);
	Иначе
		КурсУпр = ШапкаДокумента.КурсВалютыУпр;
	КонецЕсли;
	
	// формируем движения
	Если ТипЗнч(РезультатЗапросаПоТоварам) = Тип("РезультатЗапроса") Тогда
		ТаблицаТовары = РезультатЗапросаПоТоварам.Выгрузить();
	Иначе
		ТаблицаТовары = РезультатЗапросаПоТоварам.Скопировать();
	КонецЕсли;
	
	ЕстьГТДТоваров             = ЕстьРеквизит(ТаблицаТовары, "ГТД");
	ЕстьДокументПродажиТоваров = ЕстьРеквизит(ТаблицаТовары, "ДокументПродажи");
	
	// получаем таблицу партий для расчета себестоимости
	ТаблицаГТД = Неопределено;
	Если РезультатЗапросаПоПартиям = Неопределено Тогда
		ЕстьДвиженияПоПартиям = (ДокументОбъект.Движения.Найти("ПартииТоваровКомпании") <> Неопределено) ИЛИ (ДокументОбъект.Движения.Найти("ПартииТоваровОтданные") <> Неопределено);
		Если ЕстьДвиженияПоПартиям Тогда
			Если НЕ Комиссия Тогда
				ТаблицаПартий = ДокументОбъект.Движения.ПартииТоваровКомпании.Выгрузить();
				ТаблицаГТД    = ДокументОбъект.Движения.ГТДПартийТоваровКомпании.Выгрузить();
			Иначе
				ТаблицаПартий = ДокументОбъект.Движения.ПартииТоваровОтданные.Выгрузить();
			КонецЕсли;
		Иначе
			
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Документ <%1> не имеет информации о движениях по партиям.'"),
					ДокументОбъект.Ссылка
				)
			);
			
		КонецЕсли;
	Иначе // документ может и не иметь движений по партионному регистру (например реализация прочих активов)
		ТаблицаПартий = РезультатЗапросаПоПартиям.Скопировать();
	КонецЕсли;
	
	Если ТаблицаГТД = Неопределено Тогда
		ТаблицаГТД = ТаблицаПартий.Скопировать();
	КонецЕсли;
	
	Если НЕ Сторно Тогда
		СтруктураОтбора = Новый Структура("ВидДвижения", ВидДвиженияНакопления.Приход);
		МассивНайденныхПартий = ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
		Для Каждого ТекСтрока Из МассивНайденныхПартий Цикл
			ТаблицаПартий.Удалить(ТекСтрока);
		КонецЦикла;
		
		МассивНайденныхПартий = ТаблицаГТД.НайтиСтроки(СтруктураОтбора);
		Для Каждого ТекСтрока Из МассивНайденныхПартий Цикл
			ТаблицаГТД.Удалить(ТекСтрока);
		КонецЦикла;
	КонецЕсли;
	
	// Если у нас комиссионная операция (отчет комиссионера), то надо получить реальную себестоимость товаров.
	Если КэшСебестоимостиПриКомиссии = Неопределено Тогда
		Если Комиссия Тогда
			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПартииТоваровКомпании.Номенклатура КАК Номенклатура,
			|	ПартииТоваровКомпании.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	ПартииТоваровКомпании.Партия КАК Партия,
			|	ПартииТоваровКомпании.СтавкаНДС КАК СтавкаНДС,
			|	СУММА(ПартииТоваровКомпании.Количество) КАК Количество,
			|	СУММА(ПартииТоваровКомпании.СуммаНДС) КАК СуммаНДС,
			|	ПартииТоваровКомпании.Сумма КАК Сумма,
			|	СУММА(ПартииТоваровКомпании.СуммаУпр) КАК СуммаУпр,
			|	СУММА(ПартииТоваровКомпании.СуммаНДСУпр) КАК СуммаНДСУпр
			|ИЗ
			|	РегистрНакопления.ПартииТоваровКомпании КАК ПартииТоваровКомпании
			|ГДЕ
			|	ПартииТоваровКомпании.Регистратор В(&Регистраторы)
			|	И ПартииТоваровКомпании.Партия В(&Партии)
			|	И ПартииТоваровКомпании.СтатусПартии = &СтатусПартии
			|	И ПартииТоваровКомпании.Номенклатура В(&Номенклатура)
			|	И ПартииТоваровКомпании.ХарактеристикаНоменклатуры В(&ХарактеристикиНоменклатуры)
			|	И ПартииТоваровКомпании.ВидДвижения = &ВидДвижения
			|
			|СГРУППИРОВАТЬ ПО
			|	ПартииТоваровКомпании.Номенклатура,
			|	ПартииТоваровКомпании.ХарактеристикаНоменклатуры,
			|	ПартииТоваровКомпании.Партия,
			|	ПартииТоваровКомпании.СтавкаНДС,
			|	ПартииТоваровКомпании.Регистратор,
			|	ПартииТоваровКомпании.Сумма");
			Запрос.УстановитьПараметр("ВидДвижения"                , ВидДвиженияНакопления.Расход);
			Запрос.УстановитьПараметр("СтатусПартии"               , Перечисления.СтатусыПартий.ТоварКупленный);
			Запрос.УстановитьПараметр("Регистраторы"               , ТаблицаПартий.ВыгрузитьКолонку("ДокументПередачи"));
			Запрос.УстановитьПараметр("Партии"                     , ТаблицаПартий.ВыгрузитьКолонку("Партия"));
			Запрос.УстановитьПараметр("Номенклатура"               , ТаблицаПартий.ВыгрузитьКолонку("Номенклатура"));
			Запрос.УстановитьПараметр("ХарактеристикиНоменклатуры" , ТаблицаПартий.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
			КэшСебестоимостиПриКомиссии = Запрос.Выполнить().Выгрузить();
		Иначе
			КэшСебестоимостиПриКомиссии = Новый ТаблицаЗначений;
		КонецЕсли;
	КонецЕсли; 
	
	АвтомобильВТаблице = (ЕстьАвтомобиль И Автомобиль = Неопределено);
		
	// свернем таблицу движений
	ЕстьСклад       = ЕстьРеквизит(ТаблицаПартий, "СкладКомпании");
	ЕстьПартия      = ЕстьРеквизит(ТаблицаПартий, "Партия");
	ЕстьДокПродажи  = ЕстьРеквизит(ТаблицаПартий, "ДокументПродажи");
	ЕстьГТДПартий   = ЕстьРеквизит(ТаблицаПартий, "ГТД");
	ЕстьГТД         = ЕстьРеквизит(ТаблицаГТД, "ГТД");
	ЕстьГТДКомиссия = ЕстьРеквизит(КэшСебестоимостиПриКомиссии, "ГТД");
	ЕстьСтавкаНДС   = (ТаблицаПартий.Колонки.Найти("СтавкаНДС") <> Неопределено);
	
	ТаблицаПартий.Свернуть(?(ЕстьДокПродажи, "ДокументПродажи, ", "") + ?(АвтомобильВТаблице, "Автомобиль, ", "") 
		+ ?(ЕстьСклад, "СкладКомпании, ", "") + ?(ЕстьГТДПартий, "ГТД, ", "") 
		+ "Номенклатура, ХарактеристикаНоменклатуры, Партия" 
		+ ?(Комиссия, "", ", СтатусПартии") + ?(ЕстьСтавкаНДС, ", СтавкаНДС", ""),
		"Сумма, СуммаУпр, Количество, СуммаНДС, СуммаНДСУпр");
	
	// надо закэшировать контрагента и договор
	КэшКонтрагент = Новый Соответствие();
	Для Каждого СтрокаПартия Из ТаблицаПартий Цикл
		Если КэшКонтрагент[СтрокаПартия.Партия] <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаПартия.Партия) Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаПартия.Партия.Метаданные().Реквизиты.Найти("Контрагент") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 Контрагент ИЗ Документ." + СтрокаПартия.Партия.Метаданные().Имя + " ГДЕ Ссылка=&Ссылка");
		Запрос.УстановитьПараметр("Ссылка", СтрокаПартия.Партия);
		РезультатКэш = Запрос.Выполнить();
		Если НЕ РезультатКэш.Пустой() Тогда
			КэшКонтрагент.Вставить(СтрокаПартия.Партия, РезультатКэш.Выгрузить().Получить(0).Контрагент);
		КонецЕсли;
	КонецЦикла;
	
	СтрокаСортировки = "Номенклатура ВОЗР, ХарактеристикаНоменклатуры УБЫВ";
	Если ПартииУказаны Тогда
		// Обработаем первыми строки с выбранными партиями
		СтрокаСортировки = СтрокаСортировки + ", Партия УБЫВ";
	КонецЕсли;
	
	Если ЕстьГТДТоваров Тогда
		// Обработаем первыми строки с выбранными партиями
		СтрокаСортировки = СтрокаСортировки + ", ГТД УБЫВ";
	КонецЕсли;
	
	ТаблицаТовары.Сортировать(СтрокаСортировки, Новый СравнениеЗначений);
	
	// Получим порядок проверки себестоимости для Организации проводимого документа
	ПорядокПроверкиСебестоимостиТовараПриПродаже = УчетныеПолитикиСервер.Значение(
		"ПорядокПроверкиСебестоимостиТовараПриПродаже", 
		ДокументОбъект.Дата,
		ДокументОбъект.Организация
	);
	
	СистемаНалогообложения = УчетныеПолитикиСервер.Значение(
		ПланыВидовХарактеристик.УчетныеПолитики.СистемаНалогообложения,
		ДокументОбъект.Дата,
		ДокументОбъект.Организация
	);
	
	КонтролироватьСебестоимость = ПолучитьЗначениеПараметраСтруктуры(
		ДокументОбъект.ДополнительныеСвойства,
		"ПроверкаПродажиНижеСебестоимости",
		ПорядокПроверкиСебестоимостиТовараПриПродаже <> Перечисления.ПорядокПроверкиСебестоимостиПриПродаже.НеКонтролировать 
			И ПраваИНастройкиПользователя.Значение("ЗапретитьПродажуНижеСебестоимости", ДокументОбъект)
		);
	
	Если КонтролироватьСебестоимость Тогда
		МинимальныеНаценки = Новый Соответствие;
	КонецЕсли;
	
	СтруктураОтбораСебестоимостьКомиссии = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Партия");
	// получим таблицу номенклатуры с ручным списанием характеристик
	ТаблицаРучныхХарактеристик = ОбработкаТабличнойЧастиТовары.ПолучитьНоменклатуруСРучнымСписаниемХарактеристик(ШапкаДокумента.Ссылка);
	
	ИмяКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
	
	СписокСтавокНДС  = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаТовары.ВыгрузитьКолонку("СтавкаНДС"));
	СтавкиНДС        = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СписокСтавокНДС, "Ставка");
	
	// Пересчитать суммы документа
	СпособУчетаВзаиморасчетовПоРасчетнымДокументам =
		РасчетыСКонтрагентамиСервер.ИспользуютсяВзаиморасчетыПоРасчетнымДокументам(ДоговорВзаиморасчетов);
	Если СпособУчетаВзаиморасчетовПоРасчетнымДокументам Тогда
		ПересчитаныСуммы = ?(ПересчитатьСуммыПоРасчетамСКонтрагентами, Ложь, Истина);
		Если Не ПересчитаныСуммы И РасчетыСКонтрагентами <> Неопределено Тогда
			
			СведенияОВалюте = Новый Структура();
			СведенияОВалюте.Вставить("ВалютаДоговора", ДоговорВзаиморасчетов.ВалютаВзаиморасчетов);
			СведенияОВалюте.Вставить("ВалютаРегл", ВалютаРегл);
			СведенияОВалюте.Вставить("ВалютаУпр", ВалютаУпр);
			СведенияОВалюте.Вставить("КурсРегл", КурсРегл);
			СведенияОВалюте.Вставить("КурсУпр", КурсУпр);
			
			ПересчитаныСуммы = ОбработкаСобытийДокументаСервер.ПересчитанаВВалюту(
				ШапкаДокумента,
				ТаблицаТовары,
				РасчетыСКонтрагентами,
				СведенияОВалюте);
			
			КонецЕсли;
	Иначе
		ПересчитаныСуммы =Ложь;
	КонецЕсли;
	
	Для Каждого СтрокаТовар Из ТаблицаТовары Цикл
		
		Если ПересчитаныСуммы Тогда
			СуммаПродажи = СтрокаТовар.Сумма;
			СуммаПродажиУпр = СтрокаТовар.СуммаУпр;
			СуммаПродажиСкидки    = СтрокаТовар.СуммаСкидки;
			СуммаПродажиНДС       = СтрокаТовар.СуммаНДС;
			СуммаПродажиНДСУпр    = СтрокаТовар.СуммаНДСУпр;
			СуммаПродажиСкидкиУпр = СтрокаТовар.СуммаСкидкиУпр;
		Иначе
			СуммаПродажи          = Окр(?(СтрокаТовар.Сумма = NULL, 0, 
				РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.Сумма, 
					ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаРегл, КурсРегл)), 2);
			СуммаПродажиУпр       = Окр(?(СтрокаТовар.Сумма = NULL, 0, 
				РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.Сумма, 
					ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр)), 2);
			СуммаПродажиСкидки    = Окр(?(СтрокаТовар.СуммаСкидки = NULL, 0, 
				РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаСкидки, 
					ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаРегл, КурсРегл)), 2);
			СуммаПродажиНДС       = Окр(?(СтрокаТовар.СуммаНДС = NULL, 0, 
				РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаНДС, 
					ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаРегл, КурсРегл)), 2);
			СуммаПродажиНДСУпр    = Окр(?(СтрокаТовар.СуммаНДС = NULL, 0, 
				РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаНДС, 
					ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр)), 2);
			СуммаПродажиСкидкиУпр = Окр(?(СтрокаТовар.СуммаСкидки = NULL, 0, 
				РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаСкидки, 
					ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр)), 2);
		КонецЕсли;
		
		КоличествоДляСумм     = ?(СтрокаТовар.Количество = 0, 1, СтрокаТовар.Количество);
		ЦенаПродажи           = СуммаПродажи / КоличествоДляСумм;
		ЦенаПродажиУпр        = СуммаПродажиУпр / КоличествоДляСумм;
		ЦенаПродажиСкидки     = СуммаПродажиСкидки / КоличествоДляСумм;
		ЦенаПродажиНДС        = СуммаПродажиНДС / КоличествоДляСумм;
		ЦенаПродажиНДСУпр     = СуммаПродажиНДСУпр / КоличествоДляСумм;
		ЦенаПродажиСкидкиУпр  = СуммаПродажиСкидкиУпр / КоличествоДляСумм;
		
		СуммаПродажиБезНДС    = СуммаПродажи - СуммаПродажиНДС;
		ЦенаПродажиБезНДС     = ЦенаПродажи - ЦенаПродажиНДС;
		СуммаПродажиБезНДСУпр = СуммаПродажиУпр - СуммаПродажиНДСУпр;
		ЦенаПродажиБезНДСУпр  = ЦенаПродажиУпр - ЦенаПродажиНДСУпр;
		
		СуммаПродажиСНДСИтого = СуммаПродажи;
		СуммаПродажиСНДСУпрИтого = СуммаПродажиУпр;
		
		СтавкаНДС = СтавкиНДС.Получить(СтрокаТовар.СтавкаНДС);
		СтавкаНДС = ?(СтавкаНДС = Неопределено, 0, СтавкаНДС);
		
		СуммаПродажиИтого                 = 0;
		СуммаПродажиУпрИтого              = 0;
		СуммаПродажиСкидкиИтого           = 0;
		СуммаПродажиНДСИтого              = 0;
		СуммаПродажиНДСУпрИтого           = 0;
		СуммаПродажиСкидкиУпрИтого        = 0;
		СебестоимостьПартийБезНДСИтого    = 0;
		СебестоимостьПартийБезНДСУпрИтого = 0;
		СебестоимостьПартийИтого          = 0;
		СебестоимостьПартийУпрИтого       = 0;
		
		СтруктураОтбора = Новый Структура("Номенклатура", СтрокаТовар.Номенклатура);
		Если ЗначениеЗаполнено(СтрокаТовар.ХарактеристикаНоменклатуры)
			ИЛИ (ТаблицаРучныхХарактеристик <> Неопределено
			И ТаблицаРучныхХарактеристик.Найти(СтрокаТовар.Номенклатура, "Номенклатура") <> Неопределено) Тогда
			
			СтруктураОтбора.Вставить("ХарактеристикаНоменклатуры", СтрокаТовар.ХарактеристикаНоменклатуры);
			
		КонецЕсли;
		
		Если ЕстьДокПродажи Тогда
			Если ЕстьДокументПродажиТоваров Тогда
				СтруктураОтбора.Вставить("ДокументПродажи", СтрокаТовар.ДокументПродажи);
			Иначе
				СтруктураОтбора.Вставить("ДокументПродажи", ДокументПродажи);
			КонецЕсли;
		КонецЕсли;
		
		Если АвтомобильВТаблице Тогда
			СтруктураОтбора.Вставить("Автомобиль", СтрокаТовар.Автомобиль);
		КонецЕсли;
		Если ЕстьГТДТоваров И ЕстьГТДПартий И ЗначениеЗаполнено(СтрокаТовар.ГТД) Тогда
			СтруктураОтбора.Вставить("ГТД", СтрокаТовар.ГТД);
		КонецЕсли;
		
		Если ЕстьСклад Тогда
			Если СкладКомпании = Неопределено Тогда
				СтруктураОтбора.Вставить("СкладКомпании", СтрокаТовар.СкладКомпании);
			Иначе
				СтруктураОтбора.Вставить("СкладКомпании", СкладКомпании);
			КонецЕсли;
			// Для заказ-наряда склад/цех может не совпадать в документе продажи и при перемещении в производство в другой цех (lismak 22.11.2017)
			Если ТипЗнч(ЭтотОбъект.ДокументПродажи) = Тип("ДокументСсылка.ЗаказНаряд") И ТаблицаПартий.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				СтруктураОтбора.Удалить("СкладКомпании");
			КонецЕсли;
		КонецЕсли;
		Если ЕстьГТДТоваров И ЕстьГТДПартий И ЗначениеЗаполнено(СтрокаТовар.ГТД) Тогда
			СтруктураОтбора.Вставить("ГТД", СтрокаТовар.ГТД);
		КонецЕсли; 
		
		МассивНайденныхПартий = ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
		
		Если МассивНайденныхПартий.Количество() > 0 Тогда
			НоваяЗапись = Неопределено;
			Для Каждого СтрокаПартий Из МассивНайденныхПартий Цикл
				
				ТоварПринятыйНаКомиссию = Ложь;
				
				// если указаны партии, то пропустим все партии не наши
				Если ПартииУказаны И ЗначениеЗаполнено(СтрокаТовар.Партия) И СтрокаПартий.Партия <> СтрокаТовар.Партия Тогда
					Продолжить;
				КонецЕсли;
				
				СебестоимостьРавнаПродаже = Ложь;
				Попытка
					Если СтрокаПартий.СтатусПартии = Перечисления.СтатусыПартий.ТоварПринятыйКомиссия И (НЕ СтрокаПартий.Партия.ДоговорВзаиморасчетов.КомиссияОтчетНаОснованииПродаж) Тогда
						СебестоимостьРавнаПродаже = Истина;
						ТоварПринятыйНаКомиссию = Истина;
					КонецЕсли;
				Исключение
					СебестоимостьРавнаПродаже = Ложь;
				КонецПопытки;
				
				СтруктураОтбора = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Партия", СтрокаПартий.Номенклатура, СтрокаПартий.ХарактеристикаНоменклатуры, СтрокаПартий.Партия);
				Если АвтомобильВТаблице Тогда
					СтруктураОтбора.Вставить("Автомобиль", СтрокаПартий.Автомобиль);
				КонецЕсли;
				
				Если ЕстьГТДТоваров И ЗначениеЗаполнено(СтрокаТовар.ГТД) Тогда
					СтруктураОтбора.Вставить("ГТД", СтрокаТовар.ГТД);
				ИначеЕсли (НЕ ЕстьГТДТоваров) И ЕстьГТДПартий И ЗначениеЗаполнено(СтрокаПартий.ГТД) Тогда
					СтруктураОтбора.Вставить("ГТД", СтрокаПартий.ГТД);
				КонецЕсли;
				МассивНайденныхГТД = ТаблицаГТД.НайтиСтроки(СтруктураОтбора);
				БезГТД = МассивНайденныхГТД.Количество() = 0;
				Для Каждого СтрокаГТД Из МассивНайденныхГТД Цикл
					
					Если Сторно Тогда
						КоличествоПродажи = Макс(-СтрокаТовар.Количество, СтрокаПартий.Количество, СтрокаГТД.Количество);
					Иначе
						КоличествоПродажи = Мин(СтрокаТовар.Количество, СтрокаПартий.Количество, СтрокаГТД.Количество);
					КонецЕсли;
					
					Сумма             = Окр(ЦенаПродажи * КоличествоПродажи,             2);
					СуммаУпр          = Окр(ЦенаПродажиУпр * КоличествоПродажи,          2);
					СуммаБезНДС       = Окр(ЦенаПродажиБезНДС * КоличествоПродажи,       2);
					СуммаБезНДСУпр    = Окр(ЦенаПродажиБезНДСУпр * КоличествоПродажи,    2);
					                                               
					// При комиссии с себестоимостью не так все просто
					СебестоимостьУпр    = 0;
					Себестоимость       = 0;
					СуммаНДСВходящий    = 0;
					СуммаНДСВходящийУпр = 0;
					СебестоимостьБезНДС = 0;
					СебестоимостьБезНДСУпр = 0;
					Если Комиссия Тогда
						СтруктураОтбораСебестоимостьКомиссии.Номенклатура               = СтрокаПартий.Номенклатура;
						СтруктураОтбораСебестоимостьКомиссии.ХарактеристикаНоменклатуры = СтрокаПартий.ХарактеристикаНоменклатуры;
						СтруктураОтбораСебестоимостьКомиссии.Партия                     = СтрокаПартий.Партия;
						
						Если АвтомобильВТаблице Тогда
							СтруктураОтбораСебестоимостьКомиссии.Вставить("Автомобиль", СтрокаПартий.Автомобиль);
						КонецЕсли;
						Если ЕстьГТД И ЕстьГТДКомиссия Тогда
							СтруктураОтбораСебестоимостьКомиссии.Вставить("ГТД", СтрокаГТД.ГТД);
						КонецЕсли;
						
						СчетчикКоличествоПродажи = КоличествоПродажи;
						МассивНайденныхСтрокСебестоимости = КэшСебестоимостиПриКомиссии.НайтиСтроки(СтруктураОтбораСебестоимостьКомиссии);
						Для Каждого СтрокаСебестоимости Из МассивНайденныхСтрокСебестоимости Цикл
							
							Если СтрокаСебестоимости.Количество = 0 Тогда
								Продолжить;
							КонецЕсли;
							
							Если СчетчикКоличествоПродажи = 0 Тогда
								Прервать;
							КонецЕсли;
							
							Если СтрокаСебестоимости.Количество > СчетчикКоличествоПродажи Тогда
								КоличествоДляСумм  = ?(СтрокаСебестоимости.Количество = 0, 1, СтрокаСебестоимости.Количество);
								ТекСебестоимость    = Окр(СтрокаСебестоимости.Сумма / КоличествоДляСумм * СчетчикКоличествоПродажи, 2);
								ТекСебестоимостьУпр = Окр(СтрокаСебестоимости.СуммаУпр / КоличествоДляСумм * СчетчикКоличествоПродажи, 2);
								ТекСуммаНДСВходящий = Окр(СтрокаСебестоимости.СуммаНДС / КоличествоДляСумм * СчетчикКоличествоПродажи, 2);
								ТекСуммаНДСВходящийУпр = Окр(СтрокаСебестоимости.СуммаНДСУпр / КоличествоДляСумм * СчетчикКоличествоПродажи, 2);
								
								СтрокаСебестоимости.Сумма       = СтрокаСебестоимости.Сумма - ТекСебестоимость;
								СтрокаСебестоимости.СуммаУпр    = СтрокаСебестоимости.СуммаУпр - ТекСебестоимостьУпр;
								СтрокаСебестоимости.СуммаНДС    = СтрокаСебестоимости.СуммаНДС - ТекСуммаНДСВходящий;
								СтрокаСебестоимости.СуммаНДСУпр = СтрокаСебестоимости.СуммаНДСУпр - ТекСуммаНДСВходящийУпр;
								СтрокаСебестоимости.Количество  = СтрокаСебестоимости.Количество - СчетчикКоличествоПродажи;
								
								СчетчикКоличествоПродажи = 0;
							Иначе
								ТекСебестоимость       = СтрокаСебестоимости.Сумма;
								ТекСебестоимостьУпр    = СтрокаСебестоимости.СуммаУпр;
								ТекСуммаНДСВходящий    = СтрокаСебестоимости.СуммаНДС;
								ТекСуммаНДСВходящийУпр = СтрокаСебестоимости.СуммаНДСУпр;
								
								СчетчикКоличествоПродажи = СчетчикКоличествоПродажи - СтрокаСебестоимости.Количество;
								
								КэшСебестоимостиПриКомиссии.Удалить(СтрокаСебестоимости);
							КонецЕсли;
							
							Себестоимость       = Себестоимость + ТекСебестоимость;
							СебестоимостьУпр    = СебестоимостьУпр + ТекСебестоимостьУпр;
							СуммаНДСВходящий    = СуммаНДСВходящий + ТекСуммаНДСВходящий;
							СуммаНДСВходящийУпр = СуммаНДСВходящийУпр + ТекСуммаНДСВходящийУпр;
						КонецЦикла;
					ИначеЕсли Сторно И СтрокаПартий.Количество < КоличествоПродажи Тогда
						// при выборочной партии списано больше чем в строке
						КоличествоДляСумм   = ?(СтрокаПартий.Количество = 0, 1, СтрокаПартий.Количество);
						Себестоимость       = Окр(СтрокаПартий.Сумма / КоличествоДляСумм * КоличествоПродажи, 2);
						СебестоимостьУпр    = Окр(СтрокаПартий.СуммаУпр / КоличествоДляСумм * КоличествоПродажи, 2);
						СуммаНДСВходящий    = Окр(СтрокаПартий.СуммаНДС / КоличествоДляСумм * КоличествоПродажи, 2);
						СуммаНДСВходящийУпр = Окр(СтрокаПартий.СуммаНДСУпр / КоличествоДляСумм * КоличествоПродажи, 2);
						
						СтрокаПартий.Сумма       = СтрокаПартий.Сумма - Себестоимость;
						СтрокаПартий.СуммаУпр    = СтрокаПартий.СуммаУпр - СебестоимостьУпр;
						СтрокаПартий.СуммаНДС    = СтрокаПартий.СуммаНДС - СуммаНДСВходящий;
						СтрокаПартий.СуммаНДСУпр = СтрокаПартий.СуммаНДСУпр - СуммаНДСВходящийУпр;
					ИначеЕсли СтрокаПартий.Количество > КоличествоПродажи Тогда
						// при выборочной партии списано больше чем в строке
						КоличествоДляСумм   = ?(СтрокаПартий.Количество = 0, 1, СтрокаПартий.Количество);
						Себестоимость       = Окр(СтрокаПартий.Сумма / КоличествоДляСумм * КоличествоПродажи, 2);
						СебестоимостьУпр    = Окр(СтрокаПартий.СуммаУпр / КоличествоДляСумм * КоличествоПродажи, 2);
						СуммаНДСВходящий    = Окр(СтрокаПартий.СуммаНДС / КоличествоДляСумм * КоличествоПродажи, 2);
						СуммаНДСВходящийУпр = Окр(СтрокаПартий.СуммаНДСУпр / КоличествоДляСумм * КоличествоПродажи, 2);
						
						СтрокаПартий.Сумма       = СтрокаПартий.Сумма - Себестоимость;
						СтрокаПартий.СуммаУпр    = СтрокаПартий.СуммаУпр - СебестоимостьУпр;
						СтрокаПартий.СуммаНДС    = СтрокаПартий.СуммаНДС - СуммаНДСВходящий;
						СтрокаПартий.СуммаНДСУпр = СтрокаПартий.СуммаНДСУпр - СуммаНДСВходящийУпр;
					Иначе
						СебестоимостьУпр    = СтрокаПартий.СуммаУпр;
						Себестоимость       = СтрокаПартий.Сумма;
						СуммаНДСВходящий    = СтрокаПартий.СуммаНДС;
						СуммаНДСВходящийУпр = СтрокаПартий.СуммаНДСУпр;
					КонецЕсли;
					
					СебестоимостьБезНДС    = Себестоимость - СуммаНДСВходящий;
					СебестоимостьБезНДСУпр = СебестоимостьУпр - СуммаНДСВходящийУпр;
					
					Если ПорядокПроверкиСебестоимостиТовараПриПродаже = Перечисления.ПорядокПроверкиСебестоимостиПриПродаже.ПоКаждойПартииВОтдельности
						И КонтролироватьСебестоимость И НЕ Сторно И НЕ ТоварПринятыйНаКомиссию И СтрокаТовар.Количество > 0 Тогда
						Показатели = Новый Структура;
						Показатели.Вставить("СебестоимостьБезНДС",    СебестоимостьБезНДС);
						Показатели.Вставить("СебестоимостьБезНДСУпр", СебестоимостьБезНДСУпр);
						Показатели.Вставить("СуммаБезНДС",            СуммаБезНДС);
						Показатели.Вставить("СуммаБезНДСУпр",         СуммаБезНДСУпр);
						Показатели.Вставить("ВалютаРегл",             ВалютаРегл);
						Показатели.Вставить("КурсРегл",               КурсРегл);
						Показатели.Вставить("ВалютаУпр",              ВалютаУпр);
						Показатели.Вставить("СистемаНалогообложения", СистемаНалогообложения);
						Показатели.Вставить("Себестоимость", Себестоимость);
						Показатели.Вставить("СебестоимостьУпр", СебестоимостьУпр);
						Показатели.Вставить("Сумма", Сумма);
						Показатели.Вставить("СуммаУпр", СуммаУпр);
						РезультатПроверки = ПроверитьПродажуНижеСебестоимости(
							ТаблицаТовары,
							СтрокаТовар,
							МинимальныеНаценки,
							Показатели
						);
						Результат = Результат И РезультатПроверки;
					КонецЕсли;
					
					НоваяЗапись=Добавить();
					НоваяЗапись.Период                     = ШапкаДокумента.Дата;
					НоваяЗапись.Регистратор                = ШапкаДокумента.Ссылка;
					НоваяЗапись.ПодразделениеКомпании      = ПодразделениеКомпании;
					НоваяЗапись.Номенклатура               = СтрокаГТД.Номенклатура;
					
					ЭтоУслуга = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяЗапись.Номенклатура, "ВидНоменклатуры") 
						= Перечисления.ВидыНоменклатуры.Услуга;
					
					Если ДокументПродажи <> Неопределено Тогда
						НоваяЗапись.ДокументПродажи = ДокументПродажи;
					Иначе
						Если ЕстьДокументПродажиТоваров Тогда
							НоваяЗапись.ДокументПродажи = СтрокаТовар.ДокументПродажи;
						КонецЕсли;
					КонецЕсли;
					
					// Возврат введен без основания
					Если Сторно И НЕ ЗначениеЗаполнено(НоваяЗапись.ДокументПродажи)
						И (СтрокаПартий.Партия=ШапкаДокумента.Ссылка ИЛИ (ДокументПродажи = Неопределено И ЕстьДокументПродажиТоваров И СтрокаТовар.ДокументПродажи = Неопределено)) Тогда
						НоваяЗапись.ДокументПродажи = ШапкаДокумента.Ссылка;
						НоваяЗапись.Поставщик = ШапкаДокумента.Контрагент;
					Иначе
						НоваяЗапись.Поставщик = КэшКонтрагент[СтрокаГТД.Партия];
					КонецЕсли;
					
					НоваяЗапись.Покупатель                 = Покупатель;
					НоваяЗапись.СтатусПартии               = ?(Комиссия,Перечисления.СтатусыПартий.ТоварКупленный,СтрокаПартий.СтатусПартии);
					НоваяЗапись.ХозОперация                = ШапкаДокумента.ХозОперация;
					НоваяЗапись.ДоговорВзаиморасчетов      = ДоговорВзаиморасчетов;
					НоваяЗапись.ХарактеристикаНоменклатуры = СтрокаГТД.ХарактеристикаНоменклатуры;
					Если ЕстьАвтомобиль Тогда
						НоваяЗапись.Автомобиль             = СтрокаТовар.Автомобиль;
					КонецЕсли;
					
					Если НЕ (Комиссия ИЛИ ЭтоУслуга) Тогда
						Если СкладКомпании = Неопределено Тогда
							НоваяЗапись.СкладКомпании      = СтрокаТовар.СкладКомпании;
						Иначе
							НоваяЗапись.СкладКомпании      = СкладКомпании;
						КонецЕсли; 
					КонецЕсли;
					
					НоваяЗапись.СтавкаНДС                  = СтрокаТовар.СтавкаНДС;
					НоваяЗапись.Партия                     = СтрокаПартий.Партия;
					Попытка
						НоваяЗапись.Проект                 = ШапкаДокумента.Проект;
					Исключение
						ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Проект""'"),
						УровеньЖурналаРегистрации.Ошибка,,, 
						ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					КонецПопытки;
					Если ЕстьГТД Тогда
						НоваяЗапись.ГТД                    = СтрокаГТД.ГТД;
					Иначе
						НоваяЗапись.ГТД                    = Справочники.ГТД.ПустаяСсылка();
					КонецЕсли;
					
					// количество
					НоваяЗапись.Количество                 = КоличествоПродажи;
					
					// суммы
					НоваяЗапись.СуммаНДСВходящий                   = Окр(СуммаНДСВходящий, 2);
					НоваяЗапись.СуммаНДСВходящийУпр                = Окр(СуммаНДСВходящийУпр, 2);
					НоваяЗапись.СебестоимостьУпр                   = Окр(СебестоимостьУпр, 2);
					НоваяЗапись.Себестоимость                      = Окр(Себестоимость, 2);
					НоваяЗапись.Сумма                              = Сумма;
					НоваяЗапись.СуммаСкидки                        = Окр(ЦенаПродажиСкидки*КоличествоПродажи, 2);
					НоваяЗапись.СуммаУпр                           = СуммаУпр;
					НоваяЗапись.СуммаНДС                           = Окр(ЦенаПродажиНДС * КоличествоПродажи, 2);
					НоваяЗапись.ВыручкаБезНДС                      = НоваяЗапись.Сумма - НоваяЗапись.СуммаНДС;
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС    = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки - НоваяЗапись.СуммаНДС - Окр(НоваяЗапись.СуммаСкидки * СтавкаНДС / (100 + СтавкаНДС), 2);
					НоваяЗапись.ВыручкаДоПримененияСкидки          = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки;
					НоваяЗапись.СуммаНДСУпр                        = Окр(ЦенаПродажиНДСУпр*КоличествоПродажи, 2);
					НоваяЗапись.СуммаСкидкиУпр                     = Окр(ЦенаПродажиСкидкиУпр*КоличествоПродажи, 2);
					НоваяЗапись.ВыручкаБезНДСУпр                   = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр - НоваяЗапись.СуммаНДСУпр - Окр(НоваяЗапись.СуммаСкидкиУпр * СтавкаНДС / (100 + СтавкаНДС), 2);
					НоваяЗапись.ВыручкаДоПримененияСкидкиУпр       = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр;
					
					Если СебестоимостьРавнаПродаже Тогда
						
						СебестоимостьБезНДСВходящий = НоваяЗапись.Себестоимость-НоваяЗапись.СуммаНДСВходящий;
						СтавкаНДСВходящее   =
							?(СебестоимостьБезНДСВходящий = 0,
							0,
							Окр(НоваяЗапись.СуммаНДСВходящий/СебестоимостьБезНДСВходящий, 2));
						
						СебестоимостьБезНДС = (НоваяЗапись.Сумма-НоваяЗапись.СуммаНДС);
						СебестоимостьБезНДСУпр = (НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр);
						
						НоваяЗапись.Себестоимость    = Сумма;
						НоваяЗапись.СебестоимостьУпр = СуммаУпр;
						НоваяЗапись.СуммаНДСВходящий = Окр(СебестоимостьБезНДС*СтавкаНДСВходящее, 2);
						НоваяЗапись.СуммаНДСВходящийУпр = РаботаСКурсамиВалют.ПересчитатьВВалюту(СуммаНДСВходящий,ВалютаРегл,ВалютаУпр,ШапкаДокумента.Дата);
						
						СуммаПродажиБезНДС = СуммаПродажиБезНДС - СебестоимостьБезНДС;
						СуммаПродажиБезНДСУпр = СуммаПродажиБезНДСУпр - СебестоимостьБезНДСУпр;
						СуммаПродажиСНДСИтого = СуммаПродажиСНДСИтого - НоваяЗапись.Сумма;
						СуммаПродажиСНДСУпрИтого = СуммаПродажиСНДСУпрИтого - НоваяЗапись.СуммаУпр;
					КонецЕсли;
					
					СуммаПродажиИтого                 = СуммаПродажиИтого + Сумма;
					СуммаПродажиУпрИтого              = СуммаПродажиУпрИтого + СуммаУпр;
					СуммаПродажиСкидкиИтого           = СуммаПродажиСкидкиИтого + НоваяЗапись.СуммаСкидки;
					СуммаПродажиНДСИтого              = СуммаПродажиНДСИтого + НоваяЗапись.СуммаНДС;
					СуммаПродажиНДСУпрИтого           = СуммаПродажиНДСУпрИтого + НоваяЗапись.СуммаНДСУпр;
					СуммаПродажиСкидкиУпрИтого        = СуммаПродажиСкидкиУпрИтого + НоваяЗапись.СуммаСкидкиУпр;
					
					Если НЕ ТоварПринятыйНаКомиссию Тогда
						СебестоимостьПартийБезНДСИтого    = СебестоимостьПартийБезНДСИтого + СебестоимостьБезНДС;
						СебестоимостьПартийБезНДСУпрИтого = СебестоимостьПартийБезНДСУпрИтого + СебестоимостьБезНДСУпр;
						СебестоимостьПартийИтого          = СебестоимостьПартийИтого + Себестоимость;
						СебестоимостьПартийУпрИтого       = СебестоимостьПартийУпрИтого + СебестоимостьУпр;
					КонецЕсли;
					
					// если возвраты, то сделаем все отрицательным
					Если Сторно Тогда
						НоваяЗапись.Количество          = НоваяЗапись.Количество * ?(НоваяЗапись.Количество > 0, -1, 1);
						НоваяЗапись.СебестоимостьУпр    = НоваяЗапись.СебестоимостьУпр * ?(НоваяЗапись.СебестоимостьУпр > 0, -1, 1);
						НоваяЗапись.Себестоимость       = НоваяЗапись.Себестоимость * ?(НоваяЗапись.Себестоимость > 0, -1, 1);
						НоваяЗапись.СуммаНДСВходящий    = НоваяЗапись.СуммаНДСВходящий * ?(НоваяЗапись.СуммаНДСВходящий > 0, -1, 1);
						НоваяЗапись.СуммаНДСВходящийУпр = НоваяЗапись.СуммаНДСВходящийУпр * ?(НоваяЗапись.СуммаНДСВходящийУпр > 0, -1, 1);
					КонецЕсли;
					
					НоваяЗапись.СебестоимостьБезНДС    = НоваяЗапись.Себестоимость - НоваяЗапись.СуммаНДСВходящий;
					НоваяЗапись.СебестоимостьБезНДСУпр = НоваяЗапись.СебестоимостьУпр - НоваяЗапись.СуммаНДСВходящийУпр;
					
					СтрокаТовар.Количество  = СтрокаТовар.Количество-НоваяЗапись.Количество * ?(НоваяЗапись.Количество > 0, 1, -1);
					СтрокаПартий.Количество = СтрокаПартий.Количество-НоваяЗапись.Количество;
					СтрокаГТД.Количество    = СтрокаГТД.Количество-НоваяЗапись.Количество * ?(НоваяЗапись.Количество > 0, 1, -1);
					
					// удалим за ненадобностью
					Если СтрокаГТД.Количество = 0 Тогда
						ТаблицаГТД.Удалить(СтрокаГТД);
						СтрокаГТД = Неопределено;
					КонецЕсли;
					
					// несколько ГТД в одной партии
					Если СтрокаПартий.Количество = 0 Тогда
						Прервать;
					КонецЕсли;
					
					Если СтрокаТовар.Количество = 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если БезГТД ИЛИ (СтрокаТовар.Количество > 0 И СтрокаПартий.Количество <> 0) Тогда
					
					Если Сторно Тогда
						КоличествоПродажи = Макс(-СтрокаТовар.Количество, СтрокаПартий.Количество);
					Иначе
						КоличествоПродажи = Мин(СтрокаТовар.Количество, СтрокаПартий.Количество);
					КонецЕсли;
					Сумма             = Окр(ЦенаПродажи * КоличествоПродажи,             2);
					СуммаУпр          = Окр(ЦенаПродажиУпр * КоличествоПродажи,          2);
					СуммаБезНДС       = Окр(ЦенаПродажиБезНДС * КоличествоПродажи,       2);
					СуммаБезНДСУпр    = Окр(ЦенаПродажиБезНДСУпр * КоличествоПродажи,    2);
					
					СебестоимостьУпр       = 0;
					Себестоимость          = 0;
					СебестоимостьБезНДС    = 0;
					СебестоимостьБезНДСУпр = 0;
					СуммаНДСВходящий    = 0;
					СуммаНДСВходящийУпр = 0;
					Если Комиссия Тогда
						СтруктураОтбораСебестоимостьКомиссии.Номенклатура               = СтрокаПартий.Номенклатура;
						СтруктураОтбораСебестоимостьКомиссии.ХарактеристикаНоменклатуры = СтрокаПартий.ХарактеристикаНоменклатуры;
						СтруктураОтбораСебестоимостьКомиссии.Партия                     = СтрокаПартий.Партия;
						
						Если АвтомобильВТаблице Тогда
							СтруктураОтбораСебестоимостьКомиссии.Вставить("Автомобиль", СтрокаПартий.Автомобиль);
						КонецЕсли;
						
						СчетчикКоличествоПродажи = КоличествоПродажи;
						МассивНайденныхСтрокСебестоимости = КэшСебестоимостиПриКомиссии.НайтиСтроки(СтруктураОтбораСебестоимостьКомиссии);
						Для Каждого СтрокаСебестоимости Из МассивНайденныхСтрокСебестоимости Цикл
							
							Если СтрокаСебестоимости.Количество = 0 Тогда
								Продолжить;
							КонецЕсли;
							
							Если СчетчикКоличествоПродажи = 0 Тогда
								Прервать;
							КонецЕсли;
							
							Если СтрокаСебестоимости.Количество > СчетчикКоличествоПродажи Тогда
								КоличествоДляСумм = ?(СтрокаСебестоимости.Количество=0, 1, СтрокаСебестоимости.Количество);
								ТекСебестоимость    = Окр(СтрокаСебестоимости.Сумма / КоличествоДляСумм*СчетчикКоличествоПродажи, 2);
								ТекСебестоимостьУпр = Окр(СтрокаСебестоимости.СуммаУпр / КоличествоДляСумм*СчетчикКоличествоПродажи, 2);
								ТекСуммаНДСВходящий = Окр(СтрокаСебестоимости.СуммаНДС / КоличествоДляСумм*СчетчикКоличествоПродажи, 2);
								ТекСуммаНДСВходящийУпр = Окр(СтрокаСебестоимости.СуммаНДСУпр / КоличествоДляСумм*СчетчикКоличествоПродажи, 2);
								
								СтрокаСебестоимости.Сумма       = СтрокаСебестоимости.Сумма - ТекСебестоимость;
								СтрокаСебестоимости.СуммаУпр    = СтрокаСебестоимости.СуммаУпр - ТекСебестоимостьУпр;
								СтрокаСебестоимости.СуммаНДС    = СтрокаСебестоимости.СуммаНДС - ТекСуммаНДСВходящий;
								СтрокаСебестоимости.СуммаНДСУпр = СтрокаСебестоимости.СуммаНДСУпр - ТекСуммаНДСВходящийУпр;
								СтрокаСебестоимости.Количество  = СтрокаСебестоимости.Количество - СчетчикКоличествоПродажи;
								
								СчетчикКоличествоПродажи = 0;
							Иначе
								ТекСебестоимость       = СтрокаСебестоимости.Сумма;
								ТекСебестоимостьУпр    = СтрокаСебестоимости.СуммаУпр;
								ТекСуммаНДСВходящий    = СтрокаСебестоимости.СуммаНДС;
								ТекСуммаНДСВходящийУпр = СтрокаСебестоимости.СуммаНДСУпр;
								
								СчетчикКоличествоПродажи = СчетчикКоличествоПродажи - СтрокаСебестоимости.Количество;
								
								КэшСебестоимостиПриКомиссии.Удалить(СтрокаСебестоимости);
								
							КонецЕсли;
							
							Себестоимость    = Себестоимость + ТекСебестоимость;
							СебестоимостьУпр = СебестоимостьУпр + ТекСебестоимостьУпр;
							СуммаНДСВходящий = СуммаНДСВходящий + ТекСуммаНДСВходящий;
							СуммаНДСВходящийУпр = СуммаНДСВходящийУпр + ТекСуммаНДСВходящийУпр;
						КонецЦикла;
						
					ИначеЕсли СтрокаПартий.Количество > СтрокаТовар.Количество Тогда
						// при выборочной партии списано больше чем в строке
						КоличествоДляСумм = ?(СтрокаПартий.Количество = 0, 1, СтрокаПартий.Количество);
						Себестоимость    = Окр(СтрокаПартий.Сумма / КоличествоДляСумм*КоличествоПродажи, 2);
						СебестоимостьУпр = Окр(СтрокаПартий.СуммаУпр / КоличествоДляСумм*КоличествоПродажи, 2);
						СуммаНДСВходящий = Окр(СтрокаПартий.СуммаНДС / КоличествоДляСумм*КоличествоПродажи, 2);
						СуммаНДСВходящийУпр = Окр(СтрокаПартий.СуммаНДСУпр / КоличествоДляСумм*КоличествоПродажи, 2);
						
						СтрокаПартий.Сумма    = СтрокаПартий.Сумма - Себестоимость;
						СтрокаПартий.СуммаУпр = СтрокаПартий.СуммаУпр - СебестоимостьУпр;
						СтрокаПартий.СуммаНДС = СтрокаПартий.СуммаНДС - СуммаНДСВходящий;
						СтрокаПартий.СуммаНДСУпр = СтрокаПартий.СуммаНДСУпр - СуммаНДСВходящийУпр;
					Иначе
						СебестоимостьУпр    = СтрокаПартий.СуммаУпр;
						Себестоимость       = СтрокаПартий.Сумма;
						СуммаНДСВходящий    = СтрокаПартий.СуммаНДС;
						СуммаНДСВходящийУпр = СтрокаПартий.СуммаНДСУпр;
					КонецЕсли;
					
					СебестоимостьБезНДС    = Себестоимость - СуммаНДСВходящий;
					СебестоимостьБезНДСУпр = СебестоимостьУпр - СуммаНДСВходящийУпр;
					
					// Проверим, что партия была сформирована возвратом из закрытия смены.
					ВозвратПоЗакрытиюСмены = (ТипЗнч(ШапкаДокумента.Ссылка) = Тип("ДокументСсылка.ЗакрытиеСмены")
						И ЕстьДокПродажи И ШапкаДокумента.Ссылка = СтрокаПартий.ДокументПродажи);
					
					Если ПорядокПроверкиСебестоимостиТовараПриПродаже = Перечисления.ПорядокПроверкиСебестоимостиПриПродаже.ПоКаждойПартииВОтдельности
						И КонтролироватьСебестоимость И НЕ Сторно И НЕ ТоварПринятыйНаКомиссию И СтрокаТовар.Количество>0
						И НЕ ВозвратПоЗакрытиюСмены Тогда
						Показатели = Новый Структура;
						Показатели.Вставить("СебестоимостьБезНДС",    СебестоимостьБезНДС);
						Показатели.Вставить("СебестоимостьБезНДСУпр", СебестоимостьБезНДСУпр);
						Показатели.Вставить("СуммаБезНДС",            СуммаБезНДС);
						Показатели.Вставить("СуммаБезНДСУпр",         СуммаБезНДСУпр);
						Показатели.Вставить("ВалютаРегл",             ВалютаРегл);
						Показатели.Вставить("КурсРегл",               КурсРегл);
						Показатели.Вставить("ВалютаУпр",              ВалютаУпр);
						Показатели.Вставить("СистемаНалогообложения", СистемаНалогообложения);
						Показатели.Вставить("Себестоимость", Себестоимость);
						Показатели.Вставить("СебестоимостьУпр", СебестоимостьУпр);
						Показатели.Вставить("Сумма", Сумма);
						Показатели.Вставить("СуммаУпр", СуммаУпр);
						РезультатПроверки = ПроверитьПродажуНижеСебестоимости(ТаблицаТовары, СтрокаТовар, МинимальныеНаценки, Показатели);
						Результат = Результат И РезультатПроверки;
					КонецЕсли;
					
					НоваяЗапись = Добавить();
					НоваяЗапись.Период                     = ШапкаДокумента.Дата;
					НоваяЗапись.Регистратор                = ШапкаДокумента.Ссылка;
					НоваяЗапись.ПодразделениеКомпании      = ПодразделениеКомпании;
					НоваяЗапись.Номенклатура               = СтрокаПартий.Номенклатура;
					
					ЭтоУслуга = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяЗапись.Номенклатура, "ВидНоменклатуры") 
						= Перечисления.ВидыНоменклатуры.Услуга;
					
					Если ДокументПродажи <> Неопределено Тогда
						НоваяЗапись.ДокументПродажи = ДокументПродажи;
					Иначе
						Если ЕстьДокументПродажиТоваров Тогда
							НоваяЗапись.ДокументПродажи = СтрокаТовар.ДокументПродажи;
						КонецЕсли;
					КонецЕсли;
					
					// Возврат введен без основания
					Если Сторно И НЕ ЗначениеЗаполнено(НоваяЗапись.ДокументПродажи)
						И (СтрокаПартий.Партия = ШапкаДокумента.Ссылка ИЛИ (ДокументПродажи = Неопределено И ЕстьДокументПродажиТоваров И СтрокаТовар.ДокументПродажи = Неопределено)) Тогда
						НоваяЗапись.ДокументПродажи = ШапкаДокумента.Ссылка;
						НоваяЗапись.Поставщик       = ШапкаДокумента.Контрагент;
					Иначе
						НоваяЗапись.Поставщик       = КэшКонтрагент[СтрокаПартий.Партия];
					КонецЕсли;
					
					НоваяЗапись.Покупатель                 = Покупатель;
					НоваяЗапись.СтатусПартии               = ?(Комиссия, Перечисления.СтатусыПартий.ТоварКупленный, СтрокаПартий.СтатусПартии);
					НоваяЗапись.ХозОперация                = ШапкаДокумента.ХозОперация;
					НоваяЗапись.ДоговорВзаиморасчетов      = ДоговорВзаиморасчетов;
					НоваяЗапись.ХарактеристикаНоменклатуры = СтрокаПартий.ХарактеристикаНоменклатуры;
					Если ЕстьАвтомобиль Тогда
						НоваяЗапись.Автомобиль             = СтрокаТовар.Автомобиль;
					КонецЕсли;
					
					Если НЕ (Комиссия ИЛИ ЭтоУслуга) Тогда
						Если СкладКомпании = Неопределено Тогда
							НоваяЗапись.СкладКомпании      = СтрокаТовар.СкладКомпании;
						Иначе
							НоваяЗапись.СкладКомпании      = СкладКомпании;
						КонецЕсли; 
					КонецЕсли;
					НоваяЗапись.СтавкаНДС                  = СтрокаТовар.СтавкаНДС;
					НоваяЗапись.Партия                     = СтрокаПартий.Партия;
					
					Попытка
						НоваяЗапись.Проект                 = ШапкаДокумента.Проект;
					Исключение
						ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Проект""'"),
						УровеньЖурналаРегистрации.Ошибка,,,
						ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					КонецПопытки;
					НоваяЗапись.ГТД                        = Справочники.ГТД.ПустаяСсылка();
					
					// количество
					НоваяЗапись.Количество                 = КоличествоПродажи;
					
					// суммы
					НоваяЗапись.СуммаНДСВходящий                      = Окр(СуммаНДСВходящий, 2);
					НоваяЗапись.СуммаНДСВходящийУпр                   = Окр(СуммаНДСВходящийУпр, 2);
					НоваяЗапись.СебестоимостьУпр                      = Окр(СебестоимостьУпр, 2);
					НоваяЗапись.Себестоимость                         = Окр(Себестоимость, 2);
					НоваяЗапись.Сумма                                 = Сумма;
					НоваяЗапись.СуммаСкидки                           = Окр(ЦенаПродажиСкидки * КоличествоПродажи, 2);
					НоваяЗапись.СуммаУпр                              = СуммаУпр;
					НоваяЗапись.СуммаНДС                              = Окр(ЦенаПродажиНДС * КоличествоПродажи, 2);
					НоваяЗапись.СуммаНДСУпр                           = Окр(ЦенаПродажиНДСУпр * КоличествоПродажи, 2);
					НоваяЗапись.СуммаСкидкиУпр                        = Окр(ЦенаПродажиСкидкиУпр * КоличествоПродажи, 2);
					НоваяЗапись.ВыручкаБезНДС                         = НоваяЗапись.Сумма - НоваяЗапись.СуммаНДС;
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС       = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки - НоваяЗапись.СуммаНДС - Окр(НоваяЗапись.СуммаСкидки * СтавкаНДС / (100 + СтавкаНДС), 2);
					НоваяЗапись.ВыручкаДоПримененияСкидки             = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки;
					НоваяЗапись.ВыручкаБезНДСУпр                      = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр    = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр - НоваяЗапись.СуммаНДСУпр - Окр(НоваяЗапись.СуммаСкидкиУпр * СтавкаНДС / (100 + СтавкаНДС), 2);
					НоваяЗапись.ВыручкаДоПримененияСкидкиУпр          = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр;
					
					Если СебестоимостьРавнаПродаже Тогда
						
						СебестоимостьБезНДСВходящий = НоваяЗапись.Себестоимость-НоваяЗапись.СуммаНДСВходящий;
						СтавкаНДСВходящее   =
							?(СебестоимостьБезНДСВходящий = 0,
							0,
							Окр(НоваяЗапись.СуммаНДСВходящий/СебестоимостьБезНДСВходящий, 2));
						СебестоимостьБезНДС = (НоваяЗапись.Сумма-НоваяЗапись.СуммаНДС);
						СебестоимостьБезНДСУпр = (НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр);
						
						НоваяЗапись.Себестоимость    = Сумма;
						НоваяЗапись.СебестоимостьУпр = СуммаУпр;
						НоваяЗапись.СуммаНДСВходящий = Окр(СебестоимостьБезНДС*СтавкаНДСВходящее, 2);
						НоваяЗапись.СуммаНДСВходящийУпр = РаботаСКурсамиВалют.ПересчитатьВВалюту(СуммаНДСВходящий,ВалютаРегл,ВалютаУпр,ШапкаДокумента.Дата);
						
					КонецЕсли;
					
					Если СебестоимостьРавнаПродаже ИЛИ ВозвратПоЗакрытиюСмены Тогда
						СуммаПродажиБезНДС = СуммаПродажиБезНДС - СебестоимостьБезНДС;
						СуммаПродажиБезНДСУпр = СуммаПродажиБезНДСУпр - СебестоимостьБезНДСУпр;
					КонецЕсли;
					
					СуммаПродажиИтого                 = СуммаПродажиИтого + Сумма;
					СуммаПродажиУпрИтого              = СуммаПродажиУпрИтого + СуммаУпр;
					СуммаПродажиСкидкиИтого           = СуммаПродажиСкидкиИтого + НоваяЗапись.СуммаСкидки;
					СуммаПродажиНДСИтого              = СуммаПродажиНДСИтого + НоваяЗапись.СуммаНДС;
					СуммаПродажиНДСУпрИтого           = СуммаПродажиНДСУпрИтого + НоваяЗапись.СуммаНДСУпр;
					СуммаПродажиСкидкиУпрИтого        = СуммаПродажиСкидкиУпрИтого + НоваяЗапись.СуммаСкидкиУпр;
					
					Если НЕ ТоварПринятыйНаКомиссию И НЕ ВозвратПоЗакрытиюСмены Тогда
						СебестоимостьПартийБезНДСИтого    = СебестоимостьПартийБезНДСИтого + СебестоимостьБезНДС;
						СебестоимостьПартийБезНДСУпрИтого = СебестоимостьПартийБезНДСУпрИтого + СебестоимостьБезНДСУпр;
						СебестоимостьПартийИтого          = СебестоимостьПартийИтого + Себестоимость;
						СебестоимостьПартийУпрИтого       = СебестоимостьПартийУпрИтого + СебестоимостьУпр;
					КонецЕсли;
					
					// если возвраты, то сделаем все отрицательным
					Если Сторно Тогда
						НоваяЗапись.Количество          = НоваяЗапись.Количество * ?(НоваяЗапись.Количество > 0, -1, 1);
						НоваяЗапись.СебестоимостьУпр    = НоваяЗапись.СебестоимостьУпр * ?(НоваяЗапись.СебестоимостьУпр > 0, -1, 1);
						НоваяЗапись.Себестоимость       = НоваяЗапись.Себестоимость * ?(НоваяЗапись.Себестоимость > 0, -1, 1);
						НоваяЗапись.СуммаНДСВходящий    = НоваяЗапись.СуммаНДСВходящий * ?(НоваяЗапись.СуммаНДСВходящий > 0, -1, 1);
						НоваяЗапись.СуммаНДСВходящийУпр = НоваяЗапись.СуммаНДСВходящийУпр * ?(НоваяЗапись.СуммаНДСВходящийУпр > 0, -1, 1);
					КонецЕсли;
					
					НоваяЗапись.СебестоимостьБезНДС    = НоваяЗапись.Себестоимость - НоваяЗапись.СуммаНДСВходящий;
					НоваяЗапись.СебестоимостьБезНДСУпр = НоваяЗапись.СебестоимостьУпр - НоваяЗапись.СуммаНДСВходящийУпр;
					
					СтрокаТовар.Количество  = СтрокаТовар.Количество - НоваяЗапись.Количество * ?(НоваяЗапись.Количество > 0, 1, -1);
					СтрокаПартий.Количество = СтрокаПартий.Количество - НоваяЗапись.Количество;
				КонецЕсли;
				
				Если СтрокаПартий.Количество = 0 Тогда
					ТаблицаПартий.Удалить(СтрокаПартий);
				КонецЕсли;
				
				Если СтрокаТовар.Количество = 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ПорядокПроверкиСебестоимостиТовараПриПродаже = Перечисления.ПорядокПроверкиСебестоимостиПриПродаже.ПоСреднейСтоимостиСписания
				И КонтролироватьСебестоимость И НЕ Сторно Тогда
				
				Показатели = Новый Структура;
				Показатели.Вставить("СебестоимостьБезНДС",    СебестоимостьПартийБезНДСИтого);
				Показатели.Вставить("СебестоимостьБезНДСУпр", СебестоимостьПартийБезНДСУпрИтого);
				Показатели.Вставить("СуммаБезНДС",            СуммаПродажиБезНДС);
				Показатели.Вставить("СуммаБезНДСУпр",         СуммаПродажиБезНДСУпр);
				Показатели.Вставить("ВалютаРегл",             ВалютаРегл);
				Показатели.Вставить("КурсРегл",               КурсРегл);
				Показатели.Вставить("ВалютаУпр",              ВалютаУпр);
				Показатели.Вставить("СистемаНалогообложения", СистемаНалогообложения);
				Показатели.Вставить("Себестоимость", СебестоимостьПартийИтого);
				Показатели.Вставить("СебестоимостьУпр", СебестоимостьПартийУпрИтого);
				Показатели.Вставить("Сумма", СуммаПродажиСНДСИтого);
				Показатели.Вставить("СуммаУпр", СуммаПродажиСНДСУпрИтого);
				РезультатПроверки = ПроверитьПродажуНижеСебестоимости(ТаблицаТовары, СтрокаТовар, МинимальныеНаценки, Показатели);
				Результат = Результат И РезультатПроверки;
			КонецЕсли;
			
			Если НоваяЗапись <> Неопределено Тогда
				// Записи по возврату может и не быть если возвращается товар, который не продавался.
				// Прибавим погрешность округления к последней партии.
				Если Сторно Тогда
					СуммаПродажи       = ?(СуммаПродажи > 0,-СуммаПродажи, СуммаПродажи);
					СуммаПродажиУпр    = ?(СуммаПродажиУпр > 0, -СуммаПродажиУпр, СуммаПродажиУпр);
					СуммаПродажиСкидки = -СуммаПродажиСкидки;
					СуммаПродажиСкидкиУпр = - СуммаПродажиСкидкиУпр;
					СуммаПродажиНДС    = ?(СуммаПродажиНДС > 0, -СуммаПродажиНДС, СуммаПродажиНДС);
					СуммаПродажиНДСУпр = ?(СуммаПродажиНДСУпр > 0, -СуммаПродажиНДСУпр, СуммаПродажиНДСУпр);
				КонецЕсли;
				СуммаПродажиПогрешность = СуммаПродажи-СуммаПродажиИтого;
				Если СуммаПродажиПогрешность <> 0 Тогда
					НоваяЗапись.Сумма = НоваяЗапись.Сумма + ?(Сторно И НоваяЗапись.Сумма > 0, -СуммаПродажиПогрешность, СуммаПродажиПогрешность);
					НоваяЗапись.ВыручкаБезНДС                         = НоваяЗапись.Сумма - НоваяЗапись.СуммаНДС;
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС       = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки - НоваяЗапись.СуммаНДС - Окр(НоваяЗапись.СуммаСкидки * СтавкаНДС / (100 + СтавкаНДС), 2);
					НоваяЗапись.ВыручкаДоПримененияСкидки             = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки;
				КонецЕсли; 
				СуммаПродажиПогрешностьУпр = СуммаПродажиУпр-СуммаПродажиУпрИтого;
				Если СуммаПродажиПогрешностьУпр <> 0 Тогда
					НоваяЗапись.СуммаУпр = НоваяЗапись.СуммаУпр + ?(Сторно И НоваяЗапись.СуммаУпр > 0,-СуммаПродажиПогрешностьУпр,СуммаПродажиПогрешностьУпр);
					НоваяЗапись.ВыручкаБезНДСУпр                      = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр    = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр - НоваяЗапись.СуммаНДСУпр - Окр(НоваяЗапись.СуммаСкидкиУпр * СтавкаНДС / (100 + СтавкаНДС), 2);
					НоваяЗапись.ВыручкаДоПримененияСкидкиУпр          = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр;
				КонецЕсли; 
				СуммаПродажиСкидкиПогрешность = СуммаПродажиСкидки - СуммаПродажиСкидкиИтого;
				Если СуммаПродажиСкидкиПогрешность <> 0 Тогда
					НоваяЗапись.СуммаСкидки = НоваяЗапись.СуммаСкидки + ?(Сторно И НоваяЗапись.СуммаСкидки > 0, -СуммаПродажиСкидкиПогрешность, СуммаПродажиСкидкиПогрешность);
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС       = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки - НоваяЗапись.СуммаНДС - Окр(НоваяЗапись.СуммаСкидки * СтавкаНДС / (100 + СтавкаНДС), 2);
					НоваяЗапись.ВыручкаДоПримененияСкидки             = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки;
				КонецЕсли; 
				СуммаПродажиСкидкиУпрПогрешность = СуммаПродажиСкидкиУпр - СуммаПродажиСкидкиУпрИтого;
				Если СуммаПродажиСкидкиУпрПогрешность <> 0 Тогда
					НоваяЗапись.СуммаСкидкиУпр = НоваяЗапись.СуммаСкидки + ?(Сторно И НоваяЗапись.СуммаСкидки > 0, -СуммаПродажиСкидкиУпрПогрешность, СуммаПродажиСкидкиУпрПогрешность);
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр    = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр - НоваяЗапись.СуммаНДСУпр - Окр(НоваяЗапись.СуммаСкидкиУпр * СтавкаНДС / (100 + СтавкаНДС), 2);
					НоваяЗапись.ВыручкаДоПримененияСкидкиУпр          = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр;
				КонецЕсли; 
				СуммаПродажиНДСПогрешность = СуммаПродажиНДС - СуммаПродажиНДСИтого;
				Если СуммаПродажиНДСПогрешность <> 0 Тогда
					НоваяЗапись.СуммаНДС = НоваяЗапись.СуммаНДС + ?(Сторно И НоваяЗапись.СуммаНДС > 0, -СуммаПродажиНДСПогрешность, СуммаПродажиНДСПогрешность);
					НоваяЗапись.ВыручкаБезНДС                         = НоваяЗапись.Сумма - НоваяЗапись.СуммаНДС;
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС       = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки - НоваяЗапись.СуммаНДС - Окр(НоваяЗапись.СуммаСкидки * СтавкаНДС / (100 + СтавкаНДС), 2);
				КонецЕсли; 
				СуммаПродажиНДСУпрПогрешность = СуммаПродажиНДСУпр - СуммаПродажиНДСУпрИтого;
				Если СуммаПродажиНДСУпрПогрешность <> 0 Тогда
					НоваяЗапись.СуммаНДСУпр = НоваяЗапись.СуммаНДСУпр + ?(Сторно И НоваяЗапись.СуммаНДСУпр > 0, -СуммаПродажиНДСУпрПогрешность, СуммаПродажиНДСУпрПогрешность);
					НоваяЗапись.ВыручкаБезНДСУпр                      = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
					НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр    = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр - НоваяЗапись.СуммаНДСУпр - Окр(НоваяЗапись.СуммаСкидкиУпр * СтавкаНДС / (100 + СтавкаНДС), 2);
				КонецЕсли;
			КонецЕсли; 
		Иначе
			
			Если Сторно И ЕстьДокПродажи Тогда
				СтруктураОтбора.Вставить("ДокументПродажи", Неопределено);
				СтруктураОтбора.Вставить("Партия",          ШапкаДокумента.Ссылка);
				МассивНайденныхПартий = ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
				Если МассивНайденныхПартий.Количество() > 0 Тогда
					// Есть движения по партии самого возврата
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			// наверное услуга, т.к. нет движений по партиям
			СебестоимостьУпр = 0;
			Если ПересчитаныСуммы Тогда
				СуммаУпр = СуммаПродажиУпр;
			Иначе
				СуммаУпр = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.Сумма, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр);
			КонецЕсли;
			НоваяЗапись = Добавить();
			НоваяЗапись.Период      = ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор = ШапкаДокумента.Ссылка;
			
			// всякие измерения и реквизиты
			НоваяЗапись.ПодразделениеКомпании=ПодразделениеКомпании;
			
			Попытка
				НоваяЗапись.Проект                 = ШапкаДокумента.Проект;
			Исключение
				ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Проведение по партиям. Нет реквизита ""Проект""'"),
				УровеньЖурналаРегистрации.Ошибка,,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			НоваяЗапись.Номенклатура = СтрокаТовар.Номенклатура;
			
			Если ТипЗнч(НоваяЗапись.Номенклатура) = тип("СправочникСсылка.Номенклатура") Тогда
				ЭтоУслуга = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяЗапись.Номенклатура, "ВидНоменклатуры") 
					= Перечисления.ВидыНоменклатуры.Услуга;
			Иначе
				ЭтоУслуга = Ложь;
			КонецЕсли;
			
			Если ДокументПродажи <> Неопределено Тогда
				НоваяЗапись.ДокументПродажи = ДокументПродажи;
			Иначе
				Если ЕстьДокументПродажиТоваров Тогда
					НоваяЗапись.ДокументПродажи = СтрокаТовар.ДокументПродажи;
				КонецЕсли;
			КонецЕсли;
			
			// Возврат введен без основания
			Если Сторно И НЕ ЗначениеЗаполнено(НоваяЗапись.ДокументПродажи)
				И (СтрокаПартий.Партия=ШапкаДокумента.Ссылка ИЛИ (ДокументПродажи = Неопределено И ЕстьДокументПродажиТоваров И СтрокаТовар.ДокументПродажи = Неопределено)) Тогда
				НоваяЗапись.ДокументПродажи = ШапкаДокумента.Ссылка;
				НоваяЗапись.Поставщик       = ШапкаДокумента.Контрагент;
			КонецЕсли;
			
			НоваяЗапись.СтавкаНДС                  = СтрокаТовар.СтавкаНДС;
			НоваяЗапись.Покупатель                 = Покупатель;
			НоваяЗапись.СтатусПартии               = Перечисления.СтатусыПартий.ТоварКупленный;
			НоваяЗапись.ДоговорВзаиморасчетов      = ДоговорВзаиморасчетов;
			НоваяЗапись.ХарактеристикаНоменклатуры = СтрокаТовар.ХарактеристикаНоменклатуры;
			
			Если ЕстьАвтомобиль ИЛИ ЕстьАвтомобильАренды Тогда
				НоваяЗапись.Автомобиль = СтрокаТовар.Автомобиль;
			КонецЕсли;
			
			Если НЕ (Комиссия ИЛИ ЭтоУслуга) Тогда
				Если СкладКомпании = Неопределено Тогда
					НоваяЗапись.СкладКомпании = СтрокаТовар.СкладКомпании;
				Иначе
					НоваяЗапись.СкладКомпании = СкладКомпании;
				КонецЕсли; 
			КонецЕсли;
			НоваяЗапись.ХозОперация = ШапкаДокумента.ХозОперация;
			
			// количество
			НоваяЗапись.Количество = СтрокаТовар.Количество;
			
			// суммы
			НоваяЗапись.СебестоимостьУпр = Окр(СебестоимостьУпр,2);
			Если ПересчитаныСуммы Тогда
				НоваяЗапись.Сумма = СуммаПродажи;
				НоваяЗапись.СуммаСкидки = СуммаПродажиСкидки;
				НоваяЗапись.СуммаУпр = СуммаУпр;
				НоваяЗапись.СуммаСкидкиУпр = СуммаПродажиСкидкиУпр;
				НоваяЗапись.СуммаНДС = СуммаПродажиНДС;
				НоваяЗапись.СуммаНДСУпр = СуммаПродажиНДСУпр;
			Иначе
				НоваяЗапись.Сумма            = Окр(?(СтрокаТовар.Сумма = NULL, 0, РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.Сумма, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаРегл, КурсРегл)), 2);
				НоваяЗапись.СуммаСкидки      = Окр(?(СтрокаТовар.СуммаСкидки = NULL, 0, РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаСкидки, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаРегл, КурсРегл)), 2);
				НоваяЗапись.СуммаУпр         = Окр(СуммаУпр, 2);
				НоваяЗапись.СуммаСкидкиУпр   = Окр(?(СтрокаТовар.СуммаСкидки = NULL, 0, РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаСкидки, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр)), 2);
				НоваяЗапись.СуммаНДС         = Окр(?(СтрокаТовар.СуммаНДС = NULL, 0, РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаНДС, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаРегл, КурсРегл)), 2);
				НоваяЗапись.СуммаНДСУпр      = Окр(?(СтрокаТовар.СуммаНДС = NULL, 0, РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТовар.СуммаНДС, ШапкаДокумента.ВалютаДокумента, ШапкаДокумента.КурсДокумента, ВалютаУпр, КурсУпр)), 2);
			КонецЕсли;
		
			НоваяЗапись.ВыручкаБезНДС                      = НоваяЗапись.Сумма - НоваяЗапись.СуммаНДС;
			НоваяЗапись.ВыручкаДоПримененияСкидки          = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки;
			НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС    = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки - НоваяЗапись.СуммаНДС - Окр(НоваяЗапись.СуммаСкидки * СтавкаНДС / (100 + СтавкаНДС), 2);
			НоваяЗапись.ВыручкаБезНДСУпр                   = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
			НоваяЗапись.ВыручкаДоПримененияСкидкиУпр       = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр;
			НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр - НоваяЗапись.СуммаНДСУпр - Окр(НоваяЗапись.СуммаСкидкиУпр * СтавкаНДС / (100 + СтавкаНДС), 2);
			
			// если возвраты, то сделаем все отрицательным
			Если Сторно Тогда
				НоваяЗапись.Количество       = НоваяЗапись.Количество * ?(НоваяЗапись.Количество > 0, -1, 1);
				НоваяЗапись.СебестоимостьУпр = НоваяЗапись.СебестоимостьУпр * ?(НоваяЗапись.СебестоимостьУпр > 0, -1, 1);
				НоваяЗапись.Сумма            = НоваяЗапись.Сумма * ?(НоваяЗапись.Сумма > 0, -1, 1);
				НоваяЗапись.СуммаСкидки      = -НоваяЗапись.СуммаСкидки;
				НоваяЗапись.СуммаУпр         = НоваяЗапись.СуммаУпр * ?(НоваяЗапись.СуммаУпр > 0, -1, 1);
				НоваяЗапись.СуммаНДС         = НоваяЗапись.СуммаНДС * ?(НоваяЗапись.СуммаНДС > 0, -1, 1);
				НоваяЗапись.СуммаНДСУпр      = НоваяЗапись.СуммаНДСУпр * ?(НоваяЗапись.СуммаНДСУпр > 0, -1, 1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	// убиваем циклическую ссылку
	ДокументОбъект = Неопределено;
	ШапкаДокумента = Неопределено;
	РезультатЗапросаПоТоварам = Неопределено; 
	ТаблицаТовары = Неопределено;
	РезультатЗапросаПоПартиям = Неопределено; 
	ТаблицаПартий = Неопределено;
	РезультатЗапросаПоТоварам = Неопределено;
	КэшСебестоимостиПриКомиссии = Неопределено;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьПродажуНижеСебестоимости(ТаблицаТовары, СтрокаТовар, МинимальныеНаценки, Показатели)
	
	Результат = Истина;
	
	Если Пользователь = Неопределено Тогда
		Пользователь = Новый Структура;
		Пользователь.Вставить("ТекущийПользователь", Пользователи.АвторизованныйПользователь());
		Если ЗначениеЗаполнено(Пользователь.ТекущийПользователь)
			И ТипЗнч(Пользователь.ТекущийПользователь) = Тип("СправочникСсылка.Пользователи") Тогда
			Пользователь.Вставить(
				"ГруппаПравИНастроек",
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
					Пользователь.ТекущийПользователь,
					"ГруппаПравИНастроек"));
			Пользователь.Вставить("ГруппыДоступа", НайтиГруппуДоступаПользователя(Пользователь.ТекущийПользователь));
		Иначе
			Пользователь.Вставить("ГруппаПравИНастроек", 	Справочники.ГруппыПравИНастроек.ПустаяСсылка());
			Пользователь.Вставить("ГруппыДоступа", 			Справочники.ГруппыДоступа.ПустаяСсылка());
		КонецЕсли;
	КонецЕсли;
	
	Если ТаблицаМинимальныхНаценок = Неопределено Тогда
		ЗапросПолученияНаценок = Новый Запрос;
		ЗапросПолученияНаценок.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
		|ПОМЕСТИТЬ СписокНоменклатуры
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&Товары)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МинимальнаяНаценкаСрезПоследних.Пользователь КАК Пользователь,
		|	ЕСТЬNULL(СписокНоменклатуры.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
		|	МинимальнаяНаценкаСрезПоследних.ТипНоменклатуры КАК ТипНоменклатуры,
		|	МинимальнаяНаценкаСрезПоследних.ПроцентНаценки КАК ПроцентНаценки
		|ИЗ
		|	РегистрСведений.МинимальнаяНаценка.СрезПоследних(
		|			&МоментВремени,
		|			(Пользователь = &Пользователь
		|				ИЛИ Пользователь = &ГруппаПравИНастроек
		|				ИЛИ Пользователь В (&ГруппыДоступа)
		|				ИЛИ Пользователь = НЕОПРЕДЕЛЕНО)
		|				И (ТипНоменклатуры В
		|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|							ТТ.ТипНоменклатуры
		|						ИЗ
		|							СписокНоменклатуры КАК ТТ)
		|					ИЛИ ТипНоменклатуры = ЗНАЧЕНИЕ(Справочник.ТипыНоменклатуры.ПустаяСсылка))) КАК МинимальнаяНаценкаСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ СписокНоменклатуры КАК СписокНоменклатуры
		|		ПО МинимальнаяНаценкаСрезПоследних.ТипНоменклатуры = СписокНоменклатуры.ТипНоменклатуры
		|ГДЕ
		|	МинимальнаяНаценкаСрезПоследних.Активна";
		
		ЗапросПолученияНаценок.УстановитьПараметр("МоментВремени", ?(РежимПроведения = РежимПроведенияДокумента.Оперативный, Неопределено, ШапкаДокумента.МоментВремени));
		ЗапросПолученияНаценок.УстановитьПараметр("Пользователь", Пользователь.ТекущийПользователь);
		ЗапросПолученияНаценок.УстановитьПараметр("ГруппаПравИНастроек", Пользователь.ГруппаПравИНастроек);
		ЗапросПолученияНаценок.УстановитьПараметр("ГруппыДоступа", Пользователь.ГруппыДоступа);
		ЗапросПолученияНаценок.УстановитьПараметр("Товары", ТаблицаТовары.ВыгрузитьКолонку("Номенклатура"));
		ТаблицаМинимальныхНаценок = ЗапросПолученияНаценок.Выполнить().Выгрузить();
	КонецЕсли;
	
	// определим процент минимальной наценки для переданной номенклатуры
	ПроцентНаценки = МинимальныеНаценки.Получить(СтрокаТовар.Номенклатура);
	Если ПроцентНаценки = Неопределено Тогда
		ПроцентНаценки = ОпределитьПроцентНаценки(СтрокаТовар.Номенклатура, Пользователь.ТекущийПользователь);
		Если ПроцентНаценки = Неопределено Тогда
			ПроцентНаценки = ОпределитьПроцентНаценки(СтрокаТовар.Номенклатура, Пользователь.ГруппаПравИНастроек);
			Если ПроцентНаценки = Неопределено Тогда
				ПроцентНаценки =  ОпределитьПроцентНаценки(СтрокаТовар.Номенклатура, Пользователь.ГруппыДоступа);
				Если ПроцентНаценки = Неопределено Тогда	
					ПроцентНаценки = ОпределитьПроцентНаценки(СтрокаТовар.Номенклатура, Неопределено);
					Если ПроцентНаценки = Неопределено Тогда
						ПроцентНаценки = ОпределитьПроцентНаценки(Справочники.Номенклатура.ПустаяСсылка(), Пользователь.ТекущийПользователь);
						Если ПроцентНаценки = Неопределено Тогда
							ПроцентНаценки = ОпределитьПроцентНаценки(Справочники.Номенклатура.ПустаяСсылка(), Пользователь.ГруппаПравИНастроек);
							Если ПроцентНаценки = Неопределено Тогда
								ПроцентНаценки = ОпределитьПроцентНаценки(Справочники.Номенклатура.ПустаяСсылка(), Пользователь.ГруппыДоступа);
								Если ПроцентНаценки = Неопределено Тогда
									ПроцентНаценки = ОпределитьПроцентНаценки(Справочники.Номенклатура.ПустаяСсылка(), Неопределено);
									Если ПроцентНаценки = Неопределено Тогда
										ПроцентНаценки = 0;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		МинимальныеНаценки.Вставить(СтрокаТовар.Номенклатура, ПроцентНаценки);
	КонецЕсли;
	
	НижеСебестоимости = Ложь;
	ОбщаяСистемаНалогообложения = Показатели.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая;
	РасчетРегл = (ШапкаДокумента.ВалютаДокумента = Показатели.ВалютаРегл) И (ШапкаДокумента.КурсДокумента = Показатели.КурсРегл);
	
	Если ОбщаяСистемаНалогообложения Тогда
		Себестоимость = Показатели.СебестоимостьБезНДС;
		СебестоимостьУпр = Показатели.СебестоимостьБезНДСУпр;
		Сумма = Показатели.СуммаБезНДС;
		СуммаУпр = Показатели.СуммаБезНДСУпр;
	Иначе
		Себестоимость = Показатели.Себестоимость;
		СебестоимостьУпр = Показатели.СебестоимостьУпр;
		Сумма = Показатели.Сумма;
		СуммаУпр = Показатели.СуммаУпр;
	КонецЕсли;
	
	Если РасчетРегл Тогда
		МинимальнаяСумма = Себестоимость * (1 + ПроцентНаценки / 100);
		Если МинимальнаяСумма > Сумма Тогда 
			НижеСебестоимости = Истина; 
		КонецЕсли;
	Иначе
		МинимальнаяСуммаУпр = СебестоимостьУпр * (1 + ПроцентНаценки / 100);
		Если МинимальнаяСуммаУпр > СуммаУпр Тогда 
			НижеСебестоимости = Истина; 
		КонецЕсли;
	КонецЕсли; 
	
	Если НижеСебестоимости Тогда
		Если РасчетРегл Тогда
			РасчетВалюта = Показатели.ВалютаРегл;
		Иначе
			РасчетВалюта = Показатели.ВалютаУпр;
		КонецЕсли;
		Если ПроцентНаценки = 0 Тогда
			СтрокаИнформации = " " + НСтр("ru = 'Себестоимость товара %1 %2%4, сумма продажи %3 %2%4. Продажа ниже себестоимости запрещена.'");
			СтрокаИнформации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				СтрокаИнформации,
				?(РасчетРегл, МинимальнаяСумма, МинимальнаяСуммаУпр),
				РасчетВалюта,
				?(РасчетРегл, Сумма, СуммаУпр),
				?(ОбщаяСистемаНалогообложения, " " + НСтр("ru = 'без НДС'"), "")
			);
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = '[%1] Товар %2%3'"),
				УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТовар.Номенклатура),
				СтрокаТовар.Номенклатура,
				?(ЗначениеЗаполнено(СтрокаТовар.ХарактеристикаНоменклатуры)," " + НСтр("ru = 'с характеристикой'") +" " 
					+ СокрЛП(СтрокаТовар.ХарактеристикаНоменклатуры) + ".", ".")
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + СтрокаИнформации, СтрокаТовар.Номенклатура);
		Иначе
			СтрокаИнформации = " " + НСтр("ru = 'Себестоимость товара с установленной минимальной наценкой %1 %2%4, сумма продажи %3 %2%4. Продажа ниже себестоимости с минимальной наценкой запрещена.'");
			СтрокаИнформации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				СтрокаИнформации,
				?(РасчетРегл, МинимальнаяСумма, МинимальнаяСуммаУпр),
				РасчетВалюта,
				?(РасчетРегл, Сумма, СуммаУпр),
				?(ОбщаяСистемаНалогообложения, " " + НСтр("ru = 'без НДС'"), "")
			);
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = '[%1] Товар %2%3 Минимальная наценка %4.'"),
				УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(СтрокаТовар.Номенклатура),
				СтрокаТовар.Номенклатура,
				?(ЗначениеЗаполнено(СтрокаТовар.ХарактеристикаНоменклатуры)," " + НСтр("ru = 'с характеристикой'") +" " 
					+ СокрЛП(СтрокаТовар.ХарактеристикаНоменклатуры) + ".", "."),
				ПроцентНаценки
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + СтрокаИнформации, СтрокаТовар.Номенклатура);
		КонецЕсли;
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Определить процент наценки
//
Функция ОпределитьПроцентНаценки(Номенклатура, Пользователь);

	Если ТипЗнч(Пользователь) = Тип("Массив") Тогда
		Для Каждого Элемент Из Пользователь Цикл
			НайденныеСтроки = ТаблицаМинимальныхНаценок.НайтиСтроки(Новый Структура("Номенклатура, Пользователь", Номенклатура, Элемент));
			Если НайденныеСтроки.Количество() Тогда
				ПроцентНаценки = НайденныеСтроки[0].ПроцентНаценки;
			КонецЕсли;
		КонецЦикла;
	Иначе 
		ОтборМинимальнойНаценки = Новый Структура("Номенклатура, Пользователь", Номенклатура, Пользователь);
		НайденныеСтроки = ТаблицаМинимальныхНаценок.НайтиСтроки(ОтборМинимальнойНаценки);
		Если НайденныеСтроки.Количество() > 0 Тогда
			ПроцентНаценки = НайденныеСтроки[0].ПроцентНаценки;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПроцентНаценки;
	
КонецФункции

Функция НайтиГруппуДоступаПользователя(ТекущийПользователь)
	
	МассивПользователей = Новый Массив;
	
	Запрос          = Новый Запрос;
	Запрос.Текст    = 
	    "ВЫБРАТЬ
		|	ГруппыДоступаПользователи.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
		|ГДЕ
		|	ГруппыДоступаПользователи.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	
	Результат 	= Запрос.Выполнить();
	Выборка 	= Результат.Выбрать();
	           
	Пока Выборка.Следующий() Цикл
		МассивПользователей.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат МассивПользователей;

КонецФункции

#КонецОбласти

#Область Инициализация

ПоБазовомуКоличеству = Ложь;

ЕстьАвтомобиль = Ложь;
ЕстьАвтомобильАренды = Ложь;
Автомобиль = Неопределено;
РасчетыСКонтрагентами = Неопределено;
ПересчитатьСуммыПоРасчетамСКонтрагентами = Истина;

#КонецОбласти

#КонецЕсли