// Модуль набора записей регистра накоплений "Реализованные автомобили"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Сторно Экспорт;                        // Признак сторно записи
Перем ВУпрВалюте Экспорт;                    // если Истина, то суммы переданы в валюте упр. учета и пересчитывать их не надо
Перем ДокументОбъект Экспорт;                // Документ объект выполняющий движения
Перем Контрагент Экспорт;                    // Ссылка на контрагента
Перем ДоговорВзаиморасчетов Экспорт;         // Ссылка на договор взаиморасчетов
Перем РезультатЗапросаПоАвтомобилям Экспорт; // Результат запроса по автомобилям
Перем Списание Экспорт;                      // Булево. Истина - проводим складское списание автомобилей.
Перем ЗаписыватьДвижения Экспорт;            // Булево. Истина - движения записываются сразу по окончании 
//                                              выполнения процедуры. Ложь - движения записываются при записи документа.

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистру приход (реализация комиссионных автомобилей)
// Возвращаемое значение: Булево. Истина - все хорошо, Ложь - чего-то не так.
Функция Приход() Экспорт
	Сторно = ?(Сторно = Неопределено, Ложь, Сторно);
	
	// проверим на возврат
	Если Сторно Тогда
		Возврат ВозвратАвтомобилей();
	КонецЕсли;
	
	Если РезультатЗапросаПоАвтомобилям = Неопределено Тогда
		// получим таблицу автомобилей
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ДокАвтомобили.Автомобиль КАК Автомобиль,
		|	СУММА(ДокАвтомобили.Количество) КАК Количество,
		|	СУММА(ДокАвтомобили.СуммаВсего) КАК СуммаПродажи,
		|	ДокАвтомобили.СтавкаНДС
		|ИЗ
		|	Документ." + ДокументОбъект.Метаданные().Имя + ".Автомобили КАК ДокАвтомобили
		|ГДЕ
		|	ДокАвтомобили.Ссылка=&Ссылка
		|СГРУППИРОВАТЬ
		|	ПО ДокАвтомобили.Автомобиль,
		|	ДокАвтомобили.СтавкаНДС");
		Запрос.УстановитьПараметр("Ссылка" , ДокументОбъект.Ссылка);
		РезультатЗапросаПоАвтомобилям = Запрос.Выполнить();
	КонецЕсли;
	
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		ТаблицаАвтомобилей = РезультатЗапросаПоАвтомобилям.Выгрузить();
	Иначе
		ТаблицаАвтомобилей = РезультатЗапросаПоАвтомобилям;
	КонецЕсли;
	
	// получим проданные автомобили
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОбъединенныйЗапрос.Автомобиль КАК Автомобиль,
	|	ОбъединенныйЗапрос.Партия КАК Партия,
	|	ОбъединенныйЗапрос.ГТД КАК ГТД,
	|	ОбъединенныйЗапрос.Контрагент КАК Контрагент,
	|	ОбъединенныйЗапрос.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	СУММА(ОбъединенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ОбъединенныйЗапрос.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ОбъединенныйЗапрос.Сумма) КАК Сумма,
	|	СУММА(ОбъединенныйЗапрос.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ОбъединенныйЗапрос.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ОбъединенныйЗапрос.СуммаНДСУпр) КАК СуммаНДСУпр,
	|	СУММА(ОбъединенныйЗапрос.СуммаБезНДСУпр) КАК СуммаБезНДСУпр
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиАвтомобилей.Автомобиль КАК Автомобиль,
	|		ОстаткиАвтомобилей.Партия КАК Партия,
	|		ОстаткиАвтомобилей.Автомобиль.ГТД КАК ГТД,
	|		ОстаткиАвтомобилей.Партия.ДоговорВзаиморасчетов.Владелец КАК Контрагент,
	|		ОстаткиАвтомобилей.Партия.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|		ОстаткиАвтомобилей.Количество КАК Количество,
	|		ОстаткиАвтомобилей.СуммаУпр КАК СуммаУпр,
	|		ОстаткиАвтомобилей.Сумма КАК Сумма,
	|		ОстаткиАвтомобилей.СуммаНДС КАК СуммаНДС,
	|		ОстаткиАвтомобилей.СуммаБезНДС КАК СуммаБезНДС,
	|		ОстаткиАвтомобилей.СуммаНДСУпр КАК СуммаНДСУпр,
	|		ОстаткиАвтомобилей.СуммаБезНДСУпр КАК СуммаБезНДСУпр
	|	ИЗ
	|		РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
	|	ГДЕ
	|		ОстаткиАвтомобилей.Регистратор = &Ссылка
	|		И ОстаткиАвтомобилей.СтатусПартии = &СтатусПартии) КАК ОбъединенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъединенныйЗапрос.Автомобиль,
	|	ОбъединенныйЗапрос.Партия,
	|	ОбъединенныйЗапрос.ГТД,
	|	ОбъединенныйЗапрос.Контрагент,
	|	ОбъединенныйЗапрос.ДоговорВзаиморасчетов";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка"       , ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СтатусПартии" , Перечисления.СтатусыПартий.ТоварПринятыйКомиссия);
	ТаблицаСписанныхАвтомобилей = Запрос.Выполнить().Выгрузить();
	
	СтруктураОтбора = Новый Структура("Автомобиль");
	ВалютаУпр       = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	ВалютаРегл      = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	
	КурсУпр = Неопределено;
	Если ЕстьРеквизит(ДокументОбъект, "КурсВалютыУпр") Тогда
		КурсУпр = ДокументОбъект.КурсВалютыУпр;
	КонецЕсли;
	
	Если КурсУпр = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ДокументОбъект.Дата);
		КурсУпр        = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;
	
	// идем по выборке автомобилей
	Для Каждого СтрокаАвтомобиля Из ТаблицаАвтомобилей Цикл
		НадоЗафиксировать          = СтрокаАвтомобиля.Количество;
		СтруктураОтбора.Автомобиль = СтрокаАвтомобиля.Автомобиль;
		
		// идем по выборке списанных автомобилей
		МассивНайденныхСтрок = ТаблицаСписанныхАвтомобилей.НайтиСтроки(СтруктураОтбора);
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			
			// зафиксируем продажу комиссионного автомобиля
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения           = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период                = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
			НоваяЗапись.ДокументПередачи      = ТекСтрока.Партия;
			НоваяЗапись.Контрагент            = ТекСтрока.Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов = ТекСтрока.ДоговорВзаиморасчетов;
			НоваяЗапись.Автомобиль            = ТекСтрока.Автомобиль;
			НоваяЗапись.ГТД                   = ТекСтрока.ГТД;
			НоваяЗапись.ХозОперация           = ДокументОбъект.ХозОперация;
			НоваяЗапись.Количество            = Мин(ТекСтрока.Количество, НадоЗафиксировать);
			НоваяЗапись.СуммаУпр              = Окр(ТекСтрока.СуммаУпр, 2);
			НоваяЗапись.СуммаНДСУпр           = Окр(ТекСтрока.СуммаНДСУпр, 2);
			НоваяЗапись.СуммаБезНДСУпр        = Окр(ТекСтрока.СуммаБезНДСУпр, 2);
			НоваяЗапись.СуммаРегл             = Окр(ТекСтрока.Сумма, 2);
			НоваяЗапись.СуммаНДС              = Окр(ТекСтрока.СуммаНДС, 2);
			НоваяЗапись.СуммаБезНДС           = Окр(ТекСтрока.СуммаБезНДС, 2);
			Если Списание Тогда
				НоваяЗапись.СуммаПродажи     = Окр(ТекСтрока.СуммаУпр, 2);
				НоваяЗапись.СуммаПродажиРегл = Окр(ТекСтрока.Сумма, 2);
			Иначе
				Если ВУпрВалюте Тогда
					НоваяЗапись.СуммаПродажи     = Окр((СтрокаАвтомобиля.СуммаПродажи / СтрокаАвтомобиля.Количество) 
																								* НоваяЗапись.Количество, 2);
					НоваяЗапись.СуммаПродажиРегл = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.СуммаПродажи, 
																			ВалютаУпр, КурсУпр, ВалютаРегл, ДокументОбъект.Дата), 2);
				ИначеЕсли ДокументОбъект.ВалютаДокумента = ВалютаРегл Тогда
					НоваяЗапись.СуммаПродажиРегл = Окр((СтрокаАвтомобиля.СуммаПродажи / СтрокаАвтомобиля.Количество) 
																								* НоваяЗапись.Количество, 2);
					НоваяЗапись.СуммаПродажи     = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.СуммаПродажиРегл, 
																			ВалютаРегл, ДокументОбъект.Дата, ВалютаУпр, КурсУпр), 2);
				Иначе
					НоваяЗапись.СуммаПродажи     = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаАвтомобиля.СуммаПродажи 
						* НоваяЗапись.Количество / СтрокаАвтомобиля.Количество, ДокументОбъект.ВалютаДокумента, 
								ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр), 2);
					НоваяЗапись.СуммаПродажиРегл = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаАвтомобиля.СуммаПродажи 
						* НоваяЗапись.Количество / СтрокаАвтомобиля.Количество, ДокументОбъект.ВалютаДокумента, 
								ДокументОбъект.КурсДокумента, ВалютаРегл, ДокументОбъект.Дата), 2);
				КонецЕсли; 
			КонецЕсли;
			
			// СебестоимостьРавнаПродаже
			Если НЕ НоваяЗапись.ДоговорВзаиморасчетов.КомиссияОтчетНаОснованииПродаж И НЕ Списание Тогда
				НоваяЗапись.СуммаРегл      = НоваяЗапись.СуммаПродажиРегл;
				НоваяЗапись.СуммаНДС       = Окр((НоваяЗапись.СуммаРегл * СтрокаАвтомобиля.СтавкаНДС.Ставка) / (100 + СтрокаАвтомобиля.СтавкаНДС.Ставка), 2);
				НоваяЗапись.СуммаБезНДС    = НоваяЗапись.СуммаРегл - НоваяЗапись.СуммаНДС;
				НоваяЗапись.СуммаУпр       = НоваяЗапись.СуммаПродажи;
				НоваяЗапись.СуммаНДСУпр    = Окр(НоваяЗапись.СуммаПродажи * СтрокаАвтомобиля.СтавкаНДС.Ставка / (100 + СтрокаАвтомобиля.СтавкаНДС.Ставка), 2);
				НоваяЗапись.СуммаБезНДСУпр = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
			КонецЕсли;
			
			НадоЗафиксировать = НадоЗафиксировать - НоваяЗапись.Количество;
			
			// удалим ненужные строки
			ТаблицаСписанныхАвтомобилей.Удалить(ТекСтрока);
		КонецЦикла;
	КонецЦикла;
	
	// все ОК
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	Если ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	// убиваем циклическую ссылку
	ДокументОбъект                = Неопределено;
	Контрагент                    = Неопределено;
	ДоговорВзаиморасчетов         = Неопределено;
	РезультатЗапросаПоАвтомобилям = Неопределено;
	
	Возврат Истина;
КонецФункции

// Формирует движения по регистру расход (отчет комитенту за реализованные автомобили)
// Возвращаемое значение: Булево. Истина - все хорошо, Ложь - чего-то не так.
Функция Расход() Экспорт
	ВсеОК = Истина;
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	КурсУпр   = Неопределено;
	Если ЕстьРеквизит(ДокументОбъект, "КурсВалютыУпр") Тогда
		КурсУпр = ДокументОбъект.КурсВалютыУпр;
	КонецЕсли;
	
	Если КурсУпр = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ДокументОбъект.Дата);
		КурсУпр        = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;
	
	// получаем таблицу автомобилей
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ОтчетКомитентуАвтомобили.Автомобиль КАК Автомобиль,
	|	ОтчетКомитентуАвтомобили.ДокументПоступления КАК ДокументПередачи,
	|	1 КАК Количество,
	|	ОтчетКомитентуАвтомобили.Вознаграждение КАК Вознаграждение,
	|	ОтчетКомитентуАвтомобили.СуммаВсего КАК Сумма
	|ИЗ
	|	Документ.ОтчетКомитентуЗаАвтомобили.Автомобили КАК ОтчетКомитентуАвтомобили
	|ГДЕ
	|	ОтчетКомитентуАвтомобили.Ссылка=&Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	РезультатЗапросаПоАвтомобилям = Запрос.Выполнить();
	тзАвтомобили = РезультатЗапросаПоАвтомобилям.Выгрузить();
	
	// получаем таблицу реализованных автомобилей, за которые еще не отчитались
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РеализованныеАвтомобилиОстатки.Контрагент КАК Контрагент,
		|	РеализованныеАвтомобилиОстатки.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
		|	РеализованныеАвтомобилиОстатки.Автомобиль КАК Автомобиль,
		|	РеализованныеАвтомобилиОстатки.ДокументПередачи КАК ДокументПередачи,
		|	РеализованныеАвтомобилиОстатки.ГТД КАК ГТД,
		|	РеализованныеАвтомобилиОстатки.КоличествоОстаток КАК Количество,
		|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.СуммаОстаток, РеализованныеАвтомобилиОстатки.СуммаУпрОстаток) КАК СуммаУпр,
		|	РеализованныеАвтомобилиОстатки.СуммаПродажиОстаток КАК СуммаПродажи,
		|	РеализованныеАвтомобилиОстатки.СуммаРеглОстаток КАК СуммаРегл,
		|	РеализованныеАвтомобилиОстатки.СуммаПродажиРеглОстаток КАК СуммаПродажиРегл,
		|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.СуммаНДСОстаток, РеализованныеАвтомобилиОстатки.СуммаНДСУпрОстаток) КАК СуммаНДСУпр,
		|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.СуммаБезНДСОстаток, РеализованныеАвтомобилиОстатки.СуммаБезНДСУпрОстаток) КАК СуммаБезНДСУпр,
		|	РеализованныеАвтомобилиОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
		|	РеализованныеАвтомобилиОстатки.СуммаНДСОстаток КАК СуммаНДС
		|ИЗ
		|	РегистрНакопления.РеализованныеАвтомобили.Остатки(&Момент, ) КАК РеализованныеАвтомобилиОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиАвтомобилей.Остатки(&Момент, ) КАК ОстаткиАвтомобилейОстатки
		|		ПО РеализованныеАвтомобилиОстатки.Автомобиль = ОстаткиАвтомобилейОстатки.Автомобиль
		|ГДЕ
		|	РеализованныеАвтомобилиОстатки.ДоговорВзаиморасчетов = &ДоговорВзаиморасчетов
		|	И РеализованныеАвтомобилиОстатки.Автомобиль В(&Автомобиль)
		|	И РеализованныеАвтомобилиОстатки.ДокументПередачи В(&ДокументПередачи)"
	);
	Запрос.УстановитьПараметр("Момент"                , ДокументОбъект.МоментВремени());
	Запрос.УстановитьПараметр("ДоговорВзаиморасчетов" , ДоговорВзаиморасчетов);
	Запрос.УстановитьПараметр("Автомобиль"            , тзАвтомобили.ВыгрузитьКолонку("Автомобиль"));
	Запрос.УстановитьПараметр("ДокументПередачи"      , тзАвтомобили.ВыгрузитьКолонку("ДокументПередачи"));
	
	РезультатЗапросаПоРеализованнымАвтомобилям = Запрос.Выполнить();
	
	// закрываем реализацию
	СтруктураОтбора = Новый Структура("Контрагент,ДоговорВзаиморасчетов,Автомобиль,ДокументПередачи");
	ТаблицаРеализации = РезультатЗапросаПоРеализованнымАвтомобилям.Выгрузить();
	ВыборкаАвтомобили = РезультатЗапросаПоАвтомобилям.Выбрать();
	
	СтоимостьРеализованныхАвтомобилей = 0;
	
	Пока ВыборкаАвтомобили.Следующий() Цикл
		// заполним структуру отбора
		СтруктураОтбора.Контрагент = Контрагент; 
		СтруктураОтбора.ДоговорВзаиморасчетов = ДоговорВзаиморасчетов;
		СтруктураОтбора.Автомобиль = ВыборкаАвтомобили.Автомобиль; 
		СтруктураОтбора.ДокументПередачи = ВыборкаАвтомобили.ДокументПередачи;
		
		// фильтруем выборку
		МассивНайденныхСтрок = ТаблицаРеализации.НайтиСтроки(СтруктураОтбора);
		
		// теперь списываем
		НадоСписать = ВыборкаАвтомобили.Количество;
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения           = ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период                = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
			НоваяЗапись.ДокументПередачи      = ТекСтрока.ДокументПередачи;
			НоваяЗапись.Контрагент            = Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов = ДоговорВзаиморасчетов;
			НоваяЗапись.Автомобиль            = ВыборкаАвтомобили.Автомобиль;
			НоваяЗапись.ГТД                   = ТекСтрока.ГТД;
			НоваяЗапись.Количество            = Мин(НадоСписать, ТекСтрока.Количество); 
			СуммаУпрВыбор = ?(ТекСтрока.Количество <= НадоСписать, ТекСтрока.СуммаУпр, 
					ТекСтрока.СуммаУпр / ТекСтрока.Количество * НадоСписать);
			НоваяЗапись.СуммаУпр              = Окр(?(ТекСтрока.СуммаУпр = NULL, 0, СуммаУпрВыбор), 2);
			СуммаРеглВыбор = ?(ТекСтрока.Количество <= НадоСписать, ТекСтрока.СуммаРегл, 
					ТекСтрока.СуммаРегл / ТекСтрока.Количество * НадоСписать);
			НоваяЗапись.СуммаРегл             = Окр(?(ТекСтрока.СуммаУпр = NULL, 0, СуммаРеглВыбор), 2); 
			СуммаНДСУпрВыбор = ?(ТекСтрока.Количество <= НадоСписать, ТекСтрока.СуммаНДСУпр, 
					ТекСтрока.СуммаНДСУпр / ТекСтрока.Количество * НадоСписать);	
			НоваяЗапись.СуммаНДСУпр           = Окр(?(ТекСтрока.СуммаУпр = NULL, 0, СуммаНДСУпрВыбор), 2); 
			СуммаНДСВыбор = ?(ТекСтрока.Количество <= НадоСписать, ТекСтрока.СуммаНДС, 
					ТекСтрока.СуммаНДС / ТекСтрока.Количество * НадоСписать); 
			НоваяЗапись.СуммаНДС              = Окр(?(ТекСтрока.СуммаУпр = NULL, 0, СуммаНДСВыбор), 2);
			СуммаБезНДСУпрВыбор = ?(ТекСтрока.Количество <= НадоСписать, ТекСтрока.СуммаБезНДСУпр, 
					ТекСтрока.СуммаБезНДСУпр / ТекСтрока.Количество * НадоСписать); 
			НоваяЗапись.СуммаБезНДСУпр        = Окр(?(ТекСтрока.СуммаУпр = NULL, 0, СуммаБезНДСУпрВыбор), 2);
			СуммаБезНДСВыбор = ?(ТекСтрока.Количество <= НадоСписать, ТекСтрока.СуммаБезНДС, 
					ТекСтрока.СуммаБезНДС / ТекСтрока.Количество * НадоСписать);
			НоваяЗапись.СуммаБезНДС           = Окр(?(ТекСтрока.СуммаУпр = NULL, 0, СуммаБезНДСВыбор), 2);

			СтоимостьРеализованныхАвтомобилей = СтоимостьРеализованныхАвтомобилей + НоваяЗапись.СуммаУпр;
			СуммаПродажиВыбор = ?(ТекСтрока.Количество <= НадоСписать, ТекСтрока.СуммаПродажи ,
					ТекСтрока.СуммаПродажи / ТекСтрока.Количество * НадоСписать); 
			НоваяЗапись.СуммаПродажи          = Окр(?(ТекСтрока.СуммаПродажи = NULL, 0, СуммаПродажиВыбор), 2);
			СуммаПродажиРеглВыбор = ?(ТекСтрока.Количество <= НадоСписать, ТекСтрока.СуммаПродажиРегл ,
					ТекСтрока.СуммаПродажиРегл / ТекСтрока.Количество * НадоСписать);
			НоваяЗапись.СуммаПродажиРегл      = Окр(?(ТекСтрока.СуммаПродажиРегл = NULL, 0, СуммаПродажиРеглВыбор), 2);
			НоваяЗапись.Вознаграждение        = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаАвтомобили.Вознаграждение 
					/ ВыборкаАвтомобили.Количество * НадоСписать, 
						ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр);
			НоваяЗапись.ХозОперация           = ДокументОбъект.ХозОперация;
			
			// уменьшаем количество которое надо списать
			НадоСписать = НадоСписать - НоваяЗапись.Количество;
			
			// удалим ненужные строки
			ТаблицаРеализации.Удалить(ТекСтрока);
			
			Если НадоСписать <= 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		// Если после списания остались автомобили, то значит их мы на комиссию не брали. Ругаемся.
		Если НадоСписать > 0 Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Автомобиль <%1> в количестве %2 не брался на комиссию.'"),
				ВыборкаАвтомобили.Автомобиль, 
				ВыборкаАвтомобили.Количество
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаАвтомобили.Автомобиль);
			ВсеОК = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// Все ОК
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	Если ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	// убиваем циклическую ссылку
	ДокументОбъект                = Неопределено;
	Контрагент                    = Неопределено;
	ДоговорВзаиморасчетов         = Неопределено;
	РезультатЗапросаПоАвтомобилям = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возврат реализованных автомобилей.
//  Возвращает Истина - все ОК, Ложь - чего-то не так
Функция ВозвратАвтомобилей()
	ВсеОК = Истина;
	
	// Получим результат проведения возвратного документа по партионному регистру.
	// Нас будут интересовать только возвращенные комиссионные автомобили
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОстаткиАвтомобилейОбороты.Автомобиль КАК Автомобиль,
	|	ОстаткиАвтомобилейОбороты.Партия КАК ДокументПередачи,
	|	ОстаткиАвтомобилейОбороты.Автомобиль.ГТД КАК ГТД,
	|	ОстаткиАвтомобилейОбороты.КоличествоРасход*(-1) КАК Количество
	|ИЗ
	|	РегистрНакопления.ОстаткиАвтомобилей.Обороты(&Момент,&Момент,Регистратор,СтатусПартии=&СтатусПартии) КАК ОстаткиАвтомобилейОбороты
	|ГДЕ
	|	ОстаткиАвтомобилейОбороты.Регистратор=&Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка"       , ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СтатусПартии" , Перечисления.СтатусыПартий.ТоварПринятыйКомиссия);
	Запрос.УстановитьПараметр("Момент"       , Новый Граница(ДокументОбъект.МоментВремени(), ВидГраницы.Включая));
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ОстаткиАвтомобилей");
	
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, ДокументОбъект.Дата)); 
	ЗначенияБлокировки.Вставить("СтатусПартии", Перечисления.СтатусыПартий.ТоварПринятыйКомиссия); 
	
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки);
	
	// Получим таблицу извращенных автомобилей
	ТаблицаВозвращенныхАвтомобилей = Запрос.Выполнить().Выгрузить();
	
	// Если таблица пустая, то возвращать нечего
	Если ТаблицаВозвращенныхАвтомобилей.Количество() = 0 Тогда
		// Убиваем циклическую ссылку
		ДокументОбъект                = Неопределено;
		Контрагент                    = Неопределено;
		ДоговорВзаиморасчетов         = Неопределено;
		РезультатЗапросаПоАвтомобилям = Неопределено;
		Возврат Истина;
	КонецЕсли;
	
	// Теперь соберем данные из текущего регистра и будем возвращать в порядке ЛИФО
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РеализованныеАвтомобилиОбороты.Контрагент КАК Контрагент,
	|	РеализованныеАвтомобилиОбороты.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	РеализованныеАвтомобилиОбороты.Автомобиль КАК Автомобиль,
	|	РеализованныеАвтомобилиОбороты.ДокументПередачи КАК ДокументПередачи,
	|	РеализованныеАвтомобилиОбороты.ГТД КАК ГТД,
	|	РеализованныеАвтомобилиОбороты.КоличествоПриход КАК Количество,
	|	РеализованныеАвтомобилиОбороты.СуммаУпрПриход КАК СуммаУпр,
	|	РеализованныеАвтомобилиОбороты.СуммаПродажиПриход КАК СуммаПродажи,
	|	РеализованныеАвтомобилиОбороты.СуммаПродажиРеглПриход КАК СуммаПродажиРегл,
	|	РеализованныеАвтомобилиОбороты.СуммаРеглПриход КАК СуммаРегл,
	|	РеализованныеАвтомобилиОбороты.СуммаНДСУпрПриход КАК СуммаНДСУпрПриход,
	|	РеализованныеАвтомобилиОбороты.СуммаБезНДСУпрПриход КАК СуммаБезНДСУпрПриход,
	|	РеализованныеАвтомобилиОбороты.СуммаНДСПриход КАК СуммаНДСПриход,
	|	РеализованныеАвтомобилиОбороты.СуммаБезНДСПриход КАК СуммаБезНДСПриход
	|ИЗ
	|	РегистрНакопления.РеализованныеАвтомобили.Обороты(
	|			,
	|			,
	|			,
	|			Автомобиль В (&Автомобиль)
	|				И ДокументПередачи В (&ДокументПередачи)) КАК РеализованныеАвтомобилиОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументПередачи УБЫВ";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Автомобиль"       , ТаблицаВозвращенныхАвтомобилей.ВыгрузитьКолонку("Автомобиль"));
	Запрос.УстановитьПараметр("ДокументПередачи" , ТаблицаВозвращенныхАвтомобилей.ВыгрузитьКолонку("ДокументПередачи"));
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", 
																					"РеализованныеАвтомобили");
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", ТаблицаВозвращенныхАвтомобилей);
	
	ЗначенияБлокировки = Новый Соответствие;
	
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
	ОписаниеИсточника.Вставить("ДокументПередачи", "ДокументПередачи");
	
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, 
																										ОписаниеИсточника);
	
	// Получим таблицу реализованных автомобилей
	ТаблицаРеализованныхАвтомобилей = Запрос.Выполнить().Выгрузить();

	// Создаем структуру отбора
	СтруктураОтбора = Новый Структура("Автомобиль");
	Для Каждого СтрокаАвтомобиль Из ТаблицаВозвращенныхАвтомобилей Цикл
		// Получим строки таблицы партий с нашим автомобилем
		СтруктураОтбора.Автомобиль = СтрокаАвтомобиль.Автомобиль;
		МассивСтрок                = ТаблицаРеализованныхАвтомобилей.НайтиСтроки(СтруктураОтбора);
		
		// Теперь возвращаем
		НадоВернуть = СтрокаАвтомобиль.Количество;
		ВГраница    = МассивСтрок.ВГраница();
		Для Сч = 0 По ВГраница Цикл
			СтрокаТаблицы = МассивСтрок[Сч];
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения           = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период                = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
			НоваяЗапись.Контрагент            = СтрокаТаблицы.Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов = СтрокаТаблицы.ДоговорВзаиморасчетов;
			НоваяЗапись.ДокументПередачи      = СтрокаТаблицы.ДокументПередачи;
			НоваяЗапись.Автомобиль            = СтрокаТаблицы.Автомобиль;
			НоваяЗапись.ГТД                   = СтрокаТаблицы.ГТД;
			НоваяЗапись.ХозОперация           = ДокументОбъект.ХозОперация;
			НоваяЗапись.Количество            = -Мин(НадоВернуть, СтрокаТаблицы.Количество);
			НоваяЗапись.СуммаУпр              = Окр(-?(СтрокаТаблицы.Количество <= НадоВернуть, СтрокаТаблицы.СуммаУпр, 
														(СтрокаТаблицы.СуммаУпр / СтрокаТаблицы.Количество) * НадоВернуть), 2);
			НоваяЗапись.СуммаНДСУпр           = Окр(-?(СтрокаТаблицы.Количество <= НадоВернуть, 
					СтрокаТаблицы.СуммаНДСУпрПриход, (СтрокаТаблицы.СуммаНДСУпрПриход / СтрокаТаблицы.Количество) * НадоВернуть), 2);
			НоваяЗапись.СуммаБезНДСУпр        = Окр(-?(СтрокаТаблицы.Количество <= НадоВернуть, 
					СтрокаТаблицы.СуммаБезНДСУпрПриход, (
													СтрокаТаблицы.СуммаБезНДСУпрПриход / СтрокаТаблицы.Количество) * НадоВернуть), 2);
			НоваяЗапись.СуммаПродажи          = Окр(-?(СтрокаТаблицы.Количество <= НадоВернуть, 
					СтрокаТаблицы.СуммаПродажи, (СтрокаТаблицы.СуммаПродажи / СтрокаТаблицы.Количество) * НадоВернуть), 2);
			НоваяЗапись.СуммаРегл             = Окр(-?(СтрокаТаблицы.Количество <= НадоВернуть, 
					СтрокаТаблицы.СуммаРегл, (СтрокаТаблицы.СуммаРегл / СтрокаТаблицы.Количество) * НадоВернуть), 2);
			НоваяЗапись.СуммаНДС              = Окр(-?(СтрокаТаблицы.Количество <= НадоВернуть, 
					СтрокаТаблицы.СуммаНДСПриход, (СтрокаТаблицы.СуммаНДСПриход / СтрокаТаблицы.Количество) * НадоВернуть), 2);
			НоваяЗапись.СуммаБезНДС           = Окр(-?(СтрокаТаблицы.Количество <= НадоВернуть, 
					СтрокаТаблицы.СуммаБезНДСПриход, (СтрокаТаблицы.СуммаБезНДСПриход / СтрокаТаблицы.Количество) * НадоВернуть), 2);
			НоваяЗапись.СуммаПродажиРегл      = Окр(-?(СтрокаТаблицы.Количество <= НадоВернуть, 
					СтрокаТаблицы.СуммаПродажиРегл, (СтрокаТаблицы.СуммаПродажиРегл / СтрокаТаблицы.Количество) * НадоВернуть), 2);
			
			// Уменьшаем количество которое надо вернуть
			НадоВернуть = НадоВернуть + НоваяЗапись.Количество;
			
			// Удалим ненужные строки
			ТаблицаРеализованныхАвтомобилей.Удалить(СтрокаТаблицы);
			
			Если НадоВернуть <= 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		// Проверим чего осталось
		Если НадоВернуть > 0 Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Автомобиль <%1> вернуть не удалось, так как автомобиль не был взят на комиссию.'"),
				СтрокаАвтомобиль.Автомобиль
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаАвтомобиль.Автомобиль);
			ВсеОК = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// Запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	Если ВсеОК И ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	// Убиваем циклическую ссылку
	ДокументОбъект                = Неопределено;
	Контрагент                    = Неопределено;
	ДоговорВзаиморасчетов         = Неопределено;
	РезультатЗапросаПоАвтомобилям = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область Инициализация

// сбросим переменные
РезультатЗапросаПоАвтомобилям = Неопределено;
Списание                      = Ложь;
ВУпрВалюте                    = Ложь;

#КонецОбласти

#КонецЕсли