// Модуль набора записей регистра "Партии товаров отданные"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОписаниеПеременных

Перем Сторно Экспорт; // признак сторно записей
Перем ДокументОбъект Экспорт; // документ объект
Перем Контрагент Экспорт; // контрагент
Перем РезультатЗапросаПоТоварам Экспорт; // таблица результата запроса по товарам
Перем РезультатЗапросаПоПартиям Экспорт; // таблица результата запроса по партиям товарам
Перем РезультатЗапросаПоГТД Экспорт; // Таблица ГТД партий
Перем ДоговорВзаиморасчетов Экспорт; // договор взаиморасчетов с контрагентом
Перем ОтчетКомиссионера Экспорт; // Булево. Истина - имеем отчет комиссионера, Ложь - складская операция.
Перем ПоБазовомуКоличеству Экспорт; // Булево. Ложь - количество товаров будет рассчитываться как "Количество*Коэффициент", Истина - количество будет браться из реквизита "КоличествоБазовое"
Перем ПередаватьНаКомиссиюВесьТовар Экспорт; // Булево. Ложь - на реализацию передается товар, списанный с нашего склада. Истина - передаем товар, указанный в ТЧ весь, как есть
Перем ШапкаДокумента Экспорт; 			// Выборка или строка таблицы значений, в которой содержаться необходимые данные о шапке документа
Перем РежимПроведения Экспорт;		// Режим проведения документа оперативный/неоперативный

Перем ЕстьАвтомобиль Экспорт;     // Булево. Признак дополнительной детализации по автомобилю
Перем Автомобиль Экспорт;        // Автомобиль

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистру приход (передача товаров на реализацию)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
Функция Приход() Экспорт
	Сторно=?(Сторно=Неопределено,Ложь,Сторно);
    // проверим на возврат
	Если Сторно Тогда Возврат ВозвратТоваров(); КонецЕсли;
	ВалютаУпр=Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	Если НЕ ЗначениеЗаполнено(ШапкаДокумента.КурсВалютыУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр,ШапкаДокумента.Дата);
		КурсУпр = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	Иначе
		КурсУпр = ШапкаДокумента.КурсВалютыУпр;
	КонецЕсли;	
	ВалютаРегл=Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл,ШапкаДокумента.Дата);
	КурсРегл = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	// получим результат запроса по товарной таблице документа
	Если РезультатЗапросаПоТоварам=Неопределено ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) Тогда
		// если неопределен результат запроса по таблице товаров, значит она в документе.
		ПараметрыПолучения = СоздатьПараметрыПолученияТаблицыТоваров();
		ПараметрыПолучения.ИмяРеквизитаДокументПередачи = "Партия";
		РезультатЗапросаПоТоварам=ПолучитьТаблицуТоваров(ПараметрыПолучения);
	КонецЕсли;
	ТаблицаТоваров=РезультатЗапросаПоТоварам.Выгрузить();
	ЕстьПартия=ТаблицаТоваров.Колонки.Найти("Партия")<>Неопределено;
	ЕстьГТД=ТаблицаТоваров.Колонки.Найти("ГТД")<>Неопределено;
	АвтомобильВТаблице = (ЕстьАвтомобиль И Автомобиль = Неопределено);
	
	Если ПередаватьНаКомиссиюВесьТовар Тогда
		// идем по всем товарам ТЧ документа
		НаборЗаписейПартии=ТаблицаТоваров.Скопировать();
		Если РезультатЗапросаПоГТД=Неопределено Тогда
			РезультатЗапросаПоГТД=ТаблицаТоваров.Скопировать();
		КонецЕсли; 
	Иначе
		Если РезультатЗапросаПоПартиям=Неопределено Тогда
			// идем по движениям которые сделал документ по регистру "ПартииТоваровКомпании"
			НаборЗаписейПартии=ДокументОбъект.Движения.ПартииТоваровКомпании.Выгрузить();
		Иначе
			НаборЗаписейПартии=РезультатЗапросаПоПартиям;
		КонецЕсли; 
		Если РезультатЗапросаПоГТД = Неопределено Тогда
			РезультатЗапросаПоГТД = ДокументОбъект.Движения.ГТДПартийТоваровКомпании.Выгрузить();
		КонецЕсли;
	КонецЕсли;
	
	Для каждого СтрокаТоваров Из ТаблицаТоваров Цикл
		КоличествоТовара=СтрокаТоваров.Количество;
		СтруктураОтбора=Новый Структура("Номенклатура",СтрокаТоваров.Номенклатура);
		Если ЗначениеЗаполнено(СтрокаТоваров.ХарактеристикаНоменклатуры) Тогда
			СтруктураОтбора.Вставить("ХарактеристикаНоменклатуры",СтрокаТоваров.ХарактеристикаНоменклатуры);
		КонецЕсли; 
		Если ЕстьПартия И ЗначениеЗаполнено(СтрокаТоваров.Партия) Тогда
			СтруктураОтбора.Вставить("Партия",СтрокаТоваров.Партия);
		КонецЕсли;
		Если АвтомобильВТаблице Тогда
			СтруктураОтбора.Вставить("Автомобиль", СтрокаТоваров.Автомобиль);
		КонецЕсли;
		МассивНайденныхСтрокПартий=НаборЗаписейПартии.НайтиСтроки(СтруктураОтбора);
		Для СчПартий=0 По МассивНайденныхСтрокПартий.ВГраница() Цикл
			ТекСтрокаПартий=МассивНайденныхСтрокПартий[СчПартий];
			КоличествоПартии=ТекСтрокаПартий.Количество;
			СтруктураОтбора = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Партия",ТекСтрокаПартий.Номенклатура,ТекСтрокаПартий.ХарактеристикаНоменклатуры,ТекСтрокаПартий.Партия);
			Если АвтомобильВТаблице Тогда
				СтруктураОтбора.Вставить("Автомобиль", ТекСтрокаПартий.Автомобиль);
			КонецЕсли;
			Если ЕстьГТД И ЗначениеЗаполнено(СтрокаТоваров.ГТД) Тогда
				СтруктураОтбора.Вставить("ГТД", СтрокаТоваров.ГТД);
			КонецЕсли; 
			МассивНайденныхСтрокГТД=РезультатЗапросаПоГТД.НайтиСтроки(СтруктураОтбора);
			Для СчГТД=0 По МассивНайденныхСтрокГТД.ВГраница() Цикл
				ТекСтрокаГТД=МассивНайденныхСтрокГТД[СчГТД];
				НоваяЗапись=Добавить();
				НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период=ШапкаДокумента.Дата;
				НоваяЗапись.Регистратор=ШапкаДокумента.Ссылка;
				НоваяЗапись.ДокументПередачи=ШапкаДокумента.Ссылка;
				НоваяЗапись.Партия=?(ТекСтрокаПартий.Партия=Неопределено,ШапкаДокумента.Ссылка,ТекСтрокаПартий.Партия);
				НоваяЗапись.ГТД=ТекСтрокаГТД.ГТД;
				НоваяЗапись.Контрагент=Контрагент;
				НоваяЗапись.ДоговорВзаиморасчетов=ДоговорВзаиморасчетов;
				Если ЕстьАвтомобиль Тогда
					НоваяЗапись.Автомобиль = СтрокаТоваров.Автомобиль;
				КонецЕсли;
				НоваяЗапись.Номенклатура=ТекСтрокаПартий.Номенклатура;
				НоваяЗапись.ХарактеристикаНоменклатуры=ТекСтрокаПартий.ХарактеристикаНоменклатуры;
				НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
				НоваяЗапись.Количество=Мин(ТекСтрокаГТД.Количество,ТекСтрокаПартий.Количество,КоличествоТовара);
				КоэффициентТовары=(1/СтрокаТоваров.Количество)*НоваяЗапись.Количество;
				Сумма=?(СтрокаТоваров.СуммаВсего=NULL,0,СтрокаТоваров.СуммаВсего);
				НоваяЗапись.Сумма=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(Сумма,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл)*КоэффициентТовары,2);
				НоваяЗапись.СуммаУпр=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(Сумма,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)*КоэффициентТовары,2);
				НоваяЗапись.СуммаНДС=Окр(?(СтрокаТоваров.СуммаНДС=NULL,0,РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл)*КоэффициентТовары),2);
				НоваяЗапись.СуммаНДСУпр=Окр(?(СтрокаТоваров.СуммаНДС=NULL,0,РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)*КоэффициентТовары),2);
				КДляСпис = КоэффициентТовары;
				КоэффициентПартии=(1/КоличествоПартии)*НоваяЗапись.Количество;
				Если ПередаватьНаКомиссиюВесьТовар Тогда
					НоваяЗапись.СуммаСебестоимостиУпр=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрокаПартий.СуммаВсего,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)*КоэффициентПартии,2);
					НоваяЗапись.СуммаСебестоимостиРегл=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрокаПартий.СуммаВсего,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл)*КоэффициентПартии,2);
					НоваяЗапись.СуммаСебестоимостиНДСУпр=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрокаПартий.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)*КоэффициентПартии,2);
					НоваяЗапись.СуммаСебестоимостиНДСРегл=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрокаПартий.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл)*КоэффициентПартии,2);
					ТекСтрокаПартий.СуммаВсего = ТекСтрокаПартий.СуммаВсего - ТекСтрокаПартий.СуммаВсего*КоэффициентПартии;
				Иначе
					НоваяЗапись.СуммаСебестоимостиУпр=ТекСтрокаПартий.СуммаУпр*КоэффициентПартии;
					НоваяЗапись.СуммаСебестоимостиРегл=ТекСтрокаПартий.Сумма*КоэффициентПартии;
					НоваяЗапись.СуммаСебестоимостиНДСУпр=ТекСтрокаПартий.СуммаНДСУпр*КоэффициентПартии;
					НоваяЗапись.СуммаСебестоимостиНДСРегл=ТекСтрокаПартий.СуммаНДС*КоэффициентПартии;
					ТекСтрокаПартий.СуммаУпр    = ТекСтрокаПартий.СуммаУпр - НоваяЗапись.СуммаСебестоимостиУпр;
					ТекСтрокаПартий.Сумма       = ТекСтрокаПартий.Сумма - НоваяЗапись.СуммаСебестоимостиРегл;
					ТекСтрокаПартий.СуммаНДСУпр = ТекСтрокаПартий.СуммаНДСУпр - НоваяЗапись.СуммаСебестоимостиНДСУпр;
					ТекСтрокаПартий.СуммаНДС    = ТекСтрокаПартий.СуммаНДС - НоваяЗапись.СуммаСебестоимостиНДСРегл;
				КонецЕсли;
				НоваяЗапись.СуммаСебестоимостиБезНДСУпр = НоваяЗапись.СуммаСебестоимостиУпр - НоваяЗапись.СуммаСебестоимостиНДСУпр;
				НоваяЗапись.СуммаСебестоимостиБезНДСРегл  = НоваяЗапись.СуммаСебестоимостиРегл - НоваяЗапись.СуммаСебестоимостиНДСРегл;
				
				КоличествоТовара=КоличествоТовара-НоваяЗапись.Количество;
				ТекСтрокаПартий.Количество=ТекСтрокаПартий.Количество-НоваяЗапись.Количество;
				ТекСтрокаГТД.Количество=ТекСтрокаГТД.Количество-НоваяЗапись.Количество;
				
				Если ТекСтрокаГТД.Количество=0 Тогда
					РезультатЗапросаПоГТД.Удалить(ТекСтрокаГТД);
					ТекСтрокаГТД=Неопределено;
				КонецЕсли;
				Если ТекСтрокаПартий.Количество=0 Тогда
					НаборЗаписейПартии.Удалить(ТекСтрокаПартий);
					ТекСтрокаПартий=Неопределено;
					Прервать;
				КонецЕсли;
				Если КоличествоТовара=0 Тогда
					Прервать;
				КонецЕсли; 
			КонецЦикла;
			Если КоличествоТовара>0 И (ЗначениеЗаполнено(ТекСтрокаПартий) И ТекСтрокаПартий.Количество>0) Тогда
				НоваяЗапись=Добавить();
				НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период=ШапкаДокумента.Дата;
				НоваяЗапись.Регистратор=ШапкаДокумента.Ссылка;
				НоваяЗапись.ДокументПередачи=ШапкаДокумента.Ссылка;
				НоваяЗапись.Партия=ТекСтрокаПартий.Партия;
				НоваяЗапись.Контрагент=Контрагент;
				НоваяЗапись.ДоговорВзаиморасчетов=ДоговорВзаиморасчетов;
				Если ЕстьАвтомобиль Тогда
					НоваяЗапись.Автомобиль = СтрокаТоваров.Автомобиль;
				КонецЕсли;
				НоваяЗапись.Номенклатура=ТекСтрокаПартий.Номенклатура;
				НоваяЗапись.ХарактеристикаНоменклатуры=ТекСтрокаПартий.ХарактеристикаНоменклатуры;
				НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
				НоваяЗапись.Количество=Мин(ТекСтрокаПартий.Количество,КоличествоТовара);
				КоэффициентТовары=(1/СтрокаТоваров.Количество)*НоваяЗапись.Количество;
				Сумма=?(СтрокаТоваров.СуммаВсего=NULL,0,СтрокаТоваров.СуммаВсего);
				НоваяЗапись.Сумма=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(Сумма,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл)*КоэффициентТовары,2);
				НоваяЗапись.СуммаУпр=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(Сумма,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)*КоэффициентТовары,2);
				НоваяЗапись.СуммаНДС=Окр(?(СтрокаТоваров.СуммаНДС=NULL,0,РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл)*КоэффициентТовары),2);
				НоваяЗапись.СуммаНДСУпр=Окр(?(СтрокаТоваров.СуммаНДС=NULL,0,РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаТоваров.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)*КоэффициентТовары),2);
				КоэффициентПартии=(1/КоличествоПартии)*НоваяЗапись.Количество;
				Если ПередаватьНаКомиссиюВесьТовар Тогда
					НоваяЗапись.СуммаСебестоимостиУпр=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрокаПартий.СуммаВсего,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)*КоэффициентПартии,2);
					НоваяЗапись.СуммаСебестоимостиРегл=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрокаПартий.СуммаВсего,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл)*КоэффициентПартии,2);
					НоваяЗапись.СуммаСебестоимостиНДСУпр=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрокаПартий.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)*КоэффициентПартии,2);
					НоваяЗапись.СуммаСебестоимостиНДСРегл=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ТекСтрокаПартий.СуммаНДС,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл)*КоэффициентПартии,2);
				Иначе
					НоваяЗапись.СуммаСебестоимостиУпр=ТекСтрокаПартий.СуммаУпр*КоэффициентПартии;
					НоваяЗапись.СуммаСебестоимостиРегл=ТекСтрокаПартий.Сумма*КоэффициентПартии;
					НоваяЗапись.СуммаСебестоимостиНДСУпр=ТекСтрокаПартий.СуммаНДСУпр*КоэффициентПартии;
					НоваяЗапись.СуммаСебестоимостиНДСРегл=ТекСтрокаПартий.СуммаНДС*КоэффициентПартии;
				КонецЕсли;
				НоваяЗапись.СуммаСебестоимостиБезНДСУпр = НоваяЗапись.СуммаСебестоимостиУпр - НоваяЗапись.СуммаСебестоимостиНДСУпр;
				НоваяЗапись.СуммаСебестоимостиБезНДСРегл  = НоваяЗапись.СуммаСебестоимостиРегл - НоваяЗапись.СуммаСебестоимостиНДСРегл;
				КоличествоТовара=КоличествоТовара-НоваяЗапись.Количество;
				ТекСтрокаПартий.Количество=ТекСтрокаПартий.Количество-НоваяЗапись.Количество;
				Если ТекСтрокаПартий.Количество=0 Тогда
					НаборЗаписейПартии.Удалить(ТекСтрокаПартий);
				КонецЕсли;
				Если КоличествоТовара=0 Тогда
					Прервать;
				КонецЕсли; 
			КонецЕсли; 
			Если КоличествоТовара=0 Тогда
				Прервать;
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла; 

	РезультатЗапросаПоТоварам=Неопределено;
	РезультатЗапросаПоГТД=Неопределено;
	Сторно=Неопределено;
	// убиваем циклическую ссылку
	ДокументОбъект=Неопределено;
	ШапкаДокумента=Неопределено;
	
	// все ОК
	Возврат Истина;
КонецФункции

// Формирует движения по регистру расход (списание недостач или отчет комиссионера)
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - чего-то не так.
Функция Расход() Экспорт
	ВсеОК=Истина;
	Если (РезультатЗапросаПоТоварам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) Тогда
		// если неопределен результат запроса по таблице товаров, значит она в документе.
		РезультатЗапросаПоТоварам=ПолучитьТаблицуТоваров(СоздатьПараметрыПолученияТаблицыТоваров());
	КонецЕсли;
	// получим права пользователя
	ОтрицательныеОстаткиРазрешены = (ПраваИНастройкиПользователя.Значение(
		"РазрешитьОтрицательныеСкладскиеОстатки", ДокументОбъект)<>Перечисления.ВидыРазрешенныхОтрицательныхОстатков.Запрещены
	);
	
	// списываем партии
	РезультатЗапросаПоПартиямОтданным = ПартииОтданныхТоваров();
	
	// получим таблицу номенклатуры с ручным списанием характеристик
	ТаблицаРучныхХарактеристик = ОбработкаТабличнойЧастиТовары.ПолучитьНоменклатуруСРучнымСписаниемХарактеристик(ШапкаДокумента.Ссылка);

	ТаблицаПартий=РезультатЗапросаПоПартиямОтданным.Выгрузить();
	КонстантыПартияТоваровОтрицательныхОстатков=Константы.ПартияТоваровОтрицательныхОстатков.Получить();
	// идем по таблице товаров и списываем партии
	ВалютаУпр=Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	Если НЕ ЗначениеЗаполнено(ШапкаДокумента.КурсВалютыУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр,ШапкаДокумента.Дата);
		КурсУпр = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	Иначе
		КурсУпр = ШапкаДокумента.КурсВалютыУпр;
	КонецЕсли;
	
	АвтомобильВТаблице = (ЕстьАвтомобиль И Автомобиль = Неопределено);
	
	ИмяКолонкиКода=УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
	ВыборкаТовары=РезультатЗапросаПоТоварам.Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		// получим строки таблицы партий с нашим товаром
		СтруктураОтбора=Новый Структура("Номенклатура",ВыборкаТовары.Номенклатура);
		Если ЗначениеЗаполнено(ВыборкаТовары.ХарактеристикаНоменклатуры) ИЛИ (ТаблицаРучныхХарактеристик<>Неопределено И ТаблицаРучныхХарактеристик.Найти(ВыборкаТовары.Номенклатура,"Номенклатура")<>Неопределено) Тогда 
			СтруктураОтбора.Вставить("ХарактеристикаНоменклатуры",ВыборкаТовары.ХарактеристикаНоменклатуры);
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаТовары.ДокументПередачи) Тогда
			СтруктураОтбора.Вставить("ДокументПередачи",ВыборкаТовары.ДокументПередачи);
		КонецЕсли;
		Если РезультатЗапросаПоТоварам.Колонки.Найти("ГТД") <> Неопределено
			И ЗначениеЗаполнено(ВыборкаТовары.ГТД) Тогда
				СтруктураОтбора.Вставить("ГТД",ВыборкаТовары.ГТД);
		КонецЕсли;
		
		Если АвтомобильВТаблице Тогда
			СтруктураОтбора.Вставить("Автомобиль", ВыборкаТовары.Автомобиль);
		КонецЕсли;
		
		МассивНайденныхСтрок=ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
		// инициализируем переменные для расчета усредненной цены списанных партий
		ОбщаяСумма       = 0;
		ОбщаяСуммаУпр    = 0;
		ОбщаяСуммаРозн   = 0;
		ОбщаяСуммаНДС    = 0;
		ОбщаяСуммаНДСУпр = 0;
		ОбщееКоличество  = 0;
		ОбщаяСуммаСебестоимостиУпр  = 0;
		ОбщаяСуммаСебестоимостиРегл = 0;
		ОбщаяСуммаСебестоимостиНДСУпр  = 0;
		ОбщаяСуммаСебестоимостиНДСРегл = 0;
		
		ЕстьПартииТоваров = Ложь; 
		// теперь списываем
		НадоСписать = ВыборкаТовары.Количество;
		Для Сч=0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока=МассивНайденныхСтрок[Сч];
			
			ЕстьПартииТоваров = Истина; // если есть партия с которой производим списание, значит и цены будем брать из списаний
			
			НоваяЗапись=Добавить();
			НоваяЗапись.ВидДвижения                = ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период                     = ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор                = ШапкаДокумента.Ссылка;
			НоваяЗапись.ДокументПередачи           = ТекСтрока.ДокументПередачи;
			НоваяЗапись.Партия                     = ТекСтрока.Партия;
			НоваяЗапись.ГТД                        = ТекСтрока.ГТД;
			НоваяЗапись.Контрагент                 = Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов      = ДоговорВзаиморасчетов;
			Если ЕстьАвтомобиль Тогда
				НоваяЗапись.Автомобиль             = ВыборкаТовары.Автомобиль;
			КонецЕсли;
			НоваяЗапись.Номенклатура               = ВыборкаТовары.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры = ТекСтрока.ХарактеристикаНоменклатуры;
			НоваяЗапись.Количество                 = Мин(НадоСписать,ТекСтрока.Количество);
	        // определяемся с хоз. операцией
			НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация; 
			Если ОтчетКомиссионера Тогда
				НоваяЗапись.СуммаПродажи=Окр(?(ВыборкаТовары.СуммаВсего=NULL,0,РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте((ВыборкаТовары.СуммаВсего/ВыборкаТовары.Количество)*НоваяЗапись.Количество,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)),2);
			КонецЕсли;
			// суммы
			НоваяЗапись.Сумма=Окр(?(ТекСтрока.Количество<НадоСписать,ТекСтрока.Сумма,ТекСтрока.Сумма/ТекСтрока.Количество*НадоСписать),2);
			НоваяЗапись.СуммаУпр=Окр(?(ТекСтрока.Количество<НадоСписать,ТекСтрока.СуммаУпр,ТекСтрока.СуммаУпр/ТекСтрока.Количество*НадоСписать),2);
			НоваяЗапись.СуммаНДС=Окр(?(ТекСтрока.Количество<НадоСписать,ТекСтрока.СуммаНДС,ТекСтрока.СуммаНДС/ТекСтрока.Количество*НадоСписать),2);
			НоваяЗапись.СуммаНДСУпр=Окр(?(ТекСтрока.Количество<НадоСписать,ТекСтрока.СуммаНДСУпр,ТекСтрока.СуммаНДСУпр/ТекСтрока.Количество*НадоСписать),2);
			НоваяЗапись.СуммаСебестоимостиУпр=Окр(?(ТекСтрока.Количество<НадоСписать,ТекСтрока.СуммаСебестоимостиУпр,ТекСтрока.СуммаСебестоимостиУпр/ТекСтрока.Количество*НадоСписать),2);
			НоваяЗапись.СуммаСебестоимостиРегл=Окр(?(ТекСтрока.Количество<НадоСписать,ТекСтрока.СуммаСебестоимостиРегл,ТекСтрока.СуммаСебестоимостиРегл/ТекСтрока.Количество*НадоСписать),2);
			НоваяЗапись.СуммаСебестоимостиНДСУпр=Окр(?(ТекСтрока.Количество<НадоСписать,ТекСтрока.СуммаСебестоимостиНДСУпр,ТекСтрока.СуммаСебестоимостиНДСУпр/ТекСтрока.Количество*НадоСписать),2);
			НоваяЗапись.СуммаСебестоимостиНДСРегл=Окр(?(ТекСтрока.Количество<НадоСписать,ТекСтрока.СуммаСебестоимостиНДСРегл,ТекСтрока.СуммаСебестоимостиНДСРегл/ТекСтрока.Количество*НадоСписать),2);
			НоваяЗапись.СуммаСебестоимостиБезНДСУпр  = НоваяЗапись.СуммаСебестоимостиУпр - НоваяЗапись.СуммаСебестоимостиНДСУпр;
			НоваяЗапись.СуммаСебестоимостиБезНДСРегл = НоваяЗапись.СуммаСебестоимостиРегл - НоваяЗапись.СуммаСебестоимостиНДСРегл;
			
			// запомним удельные значения списания для отрицательной партии товаров
			ОбщаяСумма = ОбщаяСумма + НоваяЗапись.Сумма;
			ОбщаяСуммаУпр = ОбщаяСуммаУпр + НоваяЗапись.СуммаУпр;
			ОбщаяСуммаНДС = ОбщаяСуммаНДС+ НоваяЗапись.СуммаНДС;
			ОбщаяСуммаНДСУпр = ОбщаяСуммаНДСУпр + НоваяЗапись.СуммаНДСУпр;
			ОбщееКоличество = ОбщееКоличество + НоваяЗапись.Количество;
			ОбщаяСуммаСебестоимостиУпр = ОбщаяСуммаСебестоимостиУпр + НоваяЗапись.СуммаСебестоимостиУпр;
			ОбщаяСуммаСебестоимостиРегл = ОбщаяСуммаСебестоимостиРегл + НоваяЗапись.СуммаСебестоимостиРегл;
			ОбщаяСуммаСебестоимостиНДСУпр = ОбщаяСуммаСебестоимостиНДСУпр + НоваяЗапись.СуммаСебестоимостиНДСУпр;
			ОбщаяСуммаСебестоимостиНДСРегл = ОбщаяСуммаСебестоимостиНДСРегл + НоваяЗапись.СуммаСебестоимостиНДСРегл;

			// уменьшаем количество которое надо списать
			НадоСписать=НадоСписать-НоваяЗапись.Количество;
			ТекСтрока.Количество=ТекСтрока.Количество-НоваяЗапись.Количество;
			ТекСтрока.Сумма=ТекСтрока.Сумма - НоваяЗапись.Сумма;
			ТекСтрока.СуммаУпр=ТекСтрока.СуммаУпр - НоваяЗапись.СуммаУпр;
			ТекСтрока.СуммаНДС=ТекСтрока.СуммаНДС - НоваяЗапись.СуммаНДС;
			ТекСтрока.СуммаНДСУпр=ТекСтрока.СуммаНДСУпр - НоваяЗапись.СуммаНДСУпр;
			ТекСтрока.СуммаСебестоимостиУпр=ТекСтрока.СуммаСебестоимостиУпр - НоваяЗапись.СуммаСебестоимостиУпр;
			ТекСтрока.СуммаСебестоимостиРегл=ТекСтрока.СуммаСебестоимостиРегл - НоваяЗапись.СуммаСебестоимостиРегл;
			ТекСтрока.СуммаСебестоимостиНДСУпр  = ТекСтрока.СуммаСебестоимостиНДСУпр - НоваяЗапись.СуммаСебестоимостиНДСУпр;
			ТекСтрока.СуммаСебестоимостиНДСРегл = ТекСтрока.СуммаСебестоимостиНДСРегл - НоваяЗапись.СуммаСебестоимостиНДСРегл;
			
			// удалим ненужные строки
			Если ТекСтрока.Количество<=0 Тогда
				ТаблицаПартий.Удалить(ТекСтрока);
			КонецЕсли; 
			
			Если НадоСписать<=0 Тогда Прервать; КонецЕсли;
		КонецЦикла;
		// проверим чего осталось
		Если НадоСписать>0 И ОтрицательныеОстаткиРазрешены  Тогда
            НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения                = ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период                     = ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор                = ШапкаДокумента.Ссылка;
			// ПОДЛЕЖИТ ИСПРАВЛЕНИЮ. Что писать в документ передачи
			НоваяЗапись.ДокументПередачи           = КонстантыПартияТоваровОтрицательныхОстатков;
			НоваяЗапись.Партия                     = КонстантыПартияТоваровОтрицательныхОстатков;
			НоваяЗапись.Контрагент                 = Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов      = ДоговорВзаиморасчетов;
			Если ЕстьАвтомобиль Тогда
				НоваяЗапись.Автомобиль             = ВыборкаТовары.Автомобиль;
			КонецЕсли;
			НоваяЗапись.Номенклатура               = ВыборкаТовары.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры = ВыборкаТовары.ХарактеристикаНоменклатуры;
			НоваяЗапись.Количество                 = НадоСписать;
	        // определяемся с хоз. операцией
			НоваяЗапись.ХозОперация                = ШапкаДокумента.ХозОперация; 
			Если ОтчетКомиссионера Тогда
				НоваяЗапись.СуммаПродажи           = Окр(?(ВыборкаТовары.СуммаВсего=NULL,0,РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте((ВыборкаТовары.СуммаВсего/ВыборкаТовары.Количество)*НадоСписать,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)),2);
			КонецЕсли;
			
			// теперь попробуем определиться с суммой списания
			Если ЕстьПартииТоваров Тогда
				ЦенаПоследнейПартии = ОбщаяСумма/ОбщееКоличество;
				ЦенаРозничнаяПоследнейПартии = ОбщаяСуммаРозн/ОбщееКоличество;
				ЦенаУпрПоследнейПартии = ОбщаяСуммаУпр/ОбщееКоличество;
				УдельныйНДСПоследнейПартии = ОбщаяСуммаНДС/ОбщееКоличество;
				УдельныйНДСУпрПоследнейПартии = ОбщаяСуммаНДСУпр/ОбщееКоличество;
				ЦенаСебестоимостиУпрПоследнейПартии = ОбщаяСуммаСебестоимостиУпр/ОбщееКоличество;
				ЦенаСебестоимостиРеглПоследнейПартии = ОбщаяСуммаСебестоимостиРегл/ОбщееКоличество;
				УдельныйСебестоимостиНДСУпрПоследнейПартии = ОбщаяСуммаСебестоимостиНДСУпр/ОбщееКоличество;
				УдельныйСебестоимостиНДСРеглПоследнейПартии = ОбщаяСуммаСебестоимостиНДСРегл/ОбщееКоличество;
			Иначе // в этом случае пробуем достать оценку из регистра сведений Цены по типу цен Нормативная цена
				ТипЦен = Справочники.ТипыЦен.НормативнаяЦена;
				// получим цену в валюте управленческого учета компании
				ЦенаПоследнейПартии    = ЦенообразованиеСервер.ПолучитьЦену(ТипЦен,ВыборкаТовары.Номенклатура,ШапкаДокумента.МоментВремени,,Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(),, ВыборкаТовары.ХарактеристикаНоменклатуры,, ДоговорВзаиморасчетов.ПодразделениеКомпании);
				ЦенаУпрПоследнейПартии = ЦенообразованиеСервер.ПолучитьЦену(ТипЦен,ВыборкаТовары.Номенклатура,ШапкаДокумента.МоментВремени,,Константы.ВалютаУправленческогоУчетаКомпании.Получить(),, ВыборкаТовары.ХарактеристикаНоменклатуры,, ДоговорВзаиморасчетов.ПодразделениеКомпании);
				ЦенаРеглПоследнейПартии = ЦенообразованиеСервер.ПолучитьЦену(ТипЦен,ВыборкаТовары.Номенклатура,ШапкаДокумента.МоментВремени,,Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(),, ВыборкаТовары.ХарактеристикаНоменклатуры,, ДоговорВзаиморасчетов.ПодразделениеКомпании);
				ЦенаСебестоимостиУпрПоследнейПартии = ЦенаУпрПоследнейПартии;
				ЦенаСебестоимостиРеглПоследнейПартии = ЦенаРеглПоследнейПартии;
				// розничную оценку берем по типу цен основной тип цен отгрузки
				ТипЦен = Справочники.ТипыЦен.ОсновнойТипЦенПродажи;
				ЦенаРозничнаяПоследнейПартии = ЦенообразованиеСервер.ПолучитьЦену(ТипЦен,ВыборкаТовары.Номенклатура,ШапкаДокумента.МоментВремени,,Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(),, ВыборкаТовары.ХарактеристикаНоменклатуры,, ДоговорВзаиморасчетов.ПодразделениеКомпании);
				// для расчета НДС сначала определимся со ставкой
				СтавкаНДС = ВыборкаТовары.Номенклатура.СтавкаНДС;
				УдельныйНДСПоследнейПартии = (ЦенаПоследнейПартии*СтавкаНДС.Ставка)/100;
				УдельныйНДСУпрПоследнейПартии = (ЦенаУпрПоследнейПартии*СтавкаНДС.Ставка)/100;
				УдельныйСебестоимостиНДСУпрПоследнейПартии = (ЦенаСебестоимостиУпрПоследнейПартии*СтавкаНДС.Ставка)/100;
				УдельныйСебестоимостиНДСРеглПоследнейПартии = (ЦенаСебестоимостиРеглПоследнейПартии*СтавкаНДС.Ставка)/100;
			КонецЕсли;

			НоваяЗапись.Сумма = Окр(ЦенаПоследнейПартии*НадоСписать,2);
			НоваяЗапись.СуммаУпр = Окр(ЦенаУпрПоследнейПартии*НадоСписать,2);
			НоваяЗапись.СуммаНДС = Окр(УдельныйНДСПоследнейПартии*НадоСписать,2);
			НоваяЗапись.СуммаНДСУпр = Окр(УдельныйНДСУпрПоследнейПартии*НадоСписать,2);
			НоваяЗапись.СуммаСебестоимостиУпр  = Окр(ЦенаСебестоимостиУпрПоследнейПартии*НадоСписать,2);
			НоваяЗапись.СуммаСебестоимостиРегл = Окр(ЦенаСебестоимостиРеглПоследнейПартии*НадоСписать,2);
			НоваяЗапись.СуммаСебестоимостиНДСУпр  = Окр(УдельныйСебестоимостиНДСУпрПоследнейПартии*НадоСписать,2);
			НоваяЗапись.СуммаСебестоимостиНДСРегл = Окр(УдельныйСебестоимостиНДСРеглПоследнейПартии*НадоСписать,2);
			НоваяЗапись.СуммаСебестоимостиБезНДСУпр  = НоваяЗапись.СуммаСебестоимостиУпр - НоваяЗапись.СуммаСебестоимостиНДСУпр;
			НоваяЗапись.СуммаСебестоимостиБезНДСРегл = НоваяЗапись.СуммаСебестоимостиРегл - НоваяЗапись.СуммаСебестоимостиНДСРегл;
			
		ИначеЕсли НадоСписать>0 Тогда
			ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(ВыборкаТовары.Номенклатура);
			// если после списания по партиям осталось еще что-то не списанное то выругаемся
			Если НЕ ЗначениеЗаполнено(ВыборкаТовары.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" не передавался на реализацию в количестве %3 %4.'"),
						ЗначениеКолонкиКода,
						СокрЛП(ВыборкаТовары.Номенклатура),
						Формат(ВыборкаТовары.Количество,"ЧДЦ=3; ЧН=0,00"),
						СокрЛП(ВыборкаТовары.Номенклатура.ОсновнаяЕдиницаИзмерения)
					),
					ДокументОбъект,,, Истина
				);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" с характеристикой ""%3"" не передавался на реализацию в количестве %4 %5.'"),
						ЗначениеКолонкиКода,
						СокрЛП(ВыборкаТовары.Номенклатура),
						СокрЛП(ВыборкаТовары.ХарактеристикаНоменклатуры),
						Формат(ВыборкаТовары.Количество,"ЧДЦ=3; ЧН=0,00"),
						СокрЛП(ВыборкаТовары.Номенклатура.ОсновнаяЕдиницаИзмерения)
					),
					ДокументОбъект,,, Истина
				);
			КонецЕсли; 
			ВсеОК=Ложь;
		КонецЕсли;
	КонецЦикла;

    РезультатЗапросаПоТоварам=Неопределено;
	Сторно=Неопределено;
	// убиваем циклическую ссылку
	ДокументОбъект=Неопределено;
	ШапкаДокумента=Неопределено;
	
	Возврат ВсеОК;
КонецФункции

// переоценка товаров
Функция Переоценка() Экспорт
	Если (РезультатЗапросаПоТоварам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам)<>Тип("РезультатЗапроса")) Тогда
		// если неопределен результат запроса по таблице товаров, значит она в документе.
	    Запрос=Новый Запрос("
		|ВЫБРАТЬ
		|	ПереоценкаТовары.Номенклатура КАК Номенклатура,
		|	ПереоценкаТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПереоценкаТовары.ДокументПередачи КАК ДокументПередачи,
		|	ПереоценкаТовары.Количество*ПереоценкаТовары.Коэффициент КАК Количество,
		|	ПереоценкаТовары.Цена/ПереоценкаТовары.Коэффициент КАК ЦенаНовая
		|ИЗ
		|	Документ.Переоценка.Товары КАК ПереоценкаТовары
		|ГДЕ
		|	ПереоценкаТовары.Ссылка=&Ссылка
		|");
		Запрос.УстановитьПараметр("Ссылка",ШапкаДокумента.Ссылка);
		РезультатЗапросаПоТоварам=Запрос.Выполнить();
	КонецЕсли;
	// списываем партии
	РезультатЗапросаПоПартиямОтданным = ПартииОтданныхТоваров();
	// открываем выборки
	ВыборкаТовар=РезультатЗапросаПоТоварам.Выбрать();
	ВыборкаПартии=РезультатЗапросаПоПартиямОтданным.Выбрать();
	// всякие валюты и структуры отбора
	ВалютаУпр=Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	Если НЕ ЗначениеЗаполнено(ШапкаДокумента.КурсВалютыУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр,ШапкаДокумента.Дата);
		КурсУпр = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	Иначе
		КурсУпр = ШапкаДокумента.КурсВалютыУпр;
	КонецЕсли;	
	ВалютаРегл=Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл,ШапкаДокумента.Дата);
	КурсРегл = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	СтруктураОтбора=Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,ДокументПередачи");
	// идем по выборкам
	Пока ВыборкаТовар.Следующий() Цикл
		// определяем фильтр
		СтруктураОтбора.Номенклатура=ВыборкаТовар.Номенклатура;
		СтруктураОтбора.ХарактеристикаНоменклатуры=ВыборкаТовар.ХарактеристикаНоменклатуры;
		СтруктураОтбора.ДокументПередачи=ВыборкаТовар.ДокументПередачи;
		НадоПереоценить=ВыборкаТовар.Количество;
		ВыборкаПартии.Сбросить();
		Пока ВыборкаПартии.НайтиСледующий(СтруктураОтбора) Цикл
			// расчет суммы переоценки
			НадоПереоценить=?(НадоПереоценить=0,ВыборкаПартии.Количество,НадоПереоценить);
			СуммаПереоценки=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаТовар.ЦенаНовая,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаРегл,КурсРегл)*Мин(НадоПереоценить,ВыборкаПартии.Количество);
			СуммаПереоценки=СуммаПереоценки-?(ВыборкаПартии.Количество=0,0,(ВыборкаПартии.Сумма/ВыборкаПартии.Количество)*Мин(НадоПереоценить,ВыборкаПартии.Количество));
			СуммаПереоценкиУпр=РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(ВыборкаТовар.ЦенаНовая,ШапкаДокумента.ВалютаДокумента,ШапкаДокумента.КурсДокумента,ВалютаУпр,КурсУпр)*Мин(НадоПереоценить,ВыборкаПартии.Количество);
			СуммаПереоценкиУпр=СуммаПереоценкиУпр-?(ВыборкаПартии.Количество=0,0,(ВыборкаПартии.СуммаУпр/ВыборкаПартии.Количество)*Мин(НадоПереоценить,ВыборкаПартии.Количество));
			СуммаПереоценки=Окр(СуммаПереоценки,2);
			СуммаПереоценкиУпр=Окр(СуммаПереоценкиУпр,2);
			// если нечего переоценивать, то выходим
            Если СуммаПереоценки=0 И СуммаПереоценкиУпр=0 Тогда Продолжить; КонецЕсли;
			//
			НоваяЗапись=Добавить();
			НоваяЗапись.ВидДвижения=?(СуммаПереоценки>0,ВидДвиженияНакопления.Приход,ВидДвиженияНакопления.Расход);
			НоваяЗапись.Период=ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор=ШапкаДокумента.Ссылка;
			НоваяЗапись.ДокументПередачи=ВыборкаПартии.ДокументПередачи;
			НоваяЗапись.Партия=ВыборкаПартии.Партия;
			НоваяЗапись.ГТД=ВыборкаПартии.ГТД;
			НоваяЗапись.Контрагент=ШапкаДокумента.Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов=ШапкаДокумента.ДоговорВзаиморасчетов;
			НоваяЗапись.Номенклатура=ВыборкаПартии.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры=ВыборкаПартии.ХарактеристикаНоменклатуры;
	        // определяемся с хоз. операцией
			НоваяЗапись.ХозОперация=ШапкаДокумента.ХозОперация;
			НоваяЗапись.Количество=0;
            // суммы
			НоваяЗапись.Сумма=?(СуммаПереоценки>0,СуммаПереоценки,-СуммаПереоценки);
			НоваяЗапись.СуммаУпр=?(СуммаПереоценкиУпр>0,СуммаПереоценкиУпр,-СуммаПереоценкиУпр);

			НадоПереоценить=НадоПереоценить-Мин(НадоПереоценить,ВыборкаПартии.Количество);
			Если НадоПереоценить=0 Тогда Прервать; КонецЕсли;
		КонецЦикла
	КонецЦикла;
	
	РезультатЗапросаПоТоварам=Неопределено;
	// убиваем циклическую ссылку
	ДокументОбъект=Неопределено;
	ШапкаДокумента=Неопределено;
	
	Возврат Истина;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает параметры по умолчанию для процедуры ПолучитьТаблицуТоваров().
// Возвращаемое значение:
//  Структура - структура параметров:
//   * НадоДокументПередачи			 - Булево - включить в таблицу документ передачи( по умолчанию ИСТИНА),
//   * ИмяРеквизитаДокументПередачи	 - Строка - наименование реквизита (по умолчанию "ДокументПередачи"),
//   * НадоПартию 					 - Булево - включить в таблицу документ "Партия" (по умолчанию ИСТИНА),
//   * ИмяРеквизитаПартии			 - Строка - наименование реквизита (по умолчанию "Партия").
//
Функция СоздатьПараметрыПолученияТаблицыТоваров()
	
	Параметры = Новый Структура;
	Параметры.Вставить("НадоДокументПередачи",         Истина);
	Параметры.Вставить("ИмяРеквизитаДокументПередачи", ?(ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетКомиссионера"), "ДокументПередачи", "ДокументПродажи"));
	Параметры.Вставить("НадоПартию",                   Истина);
	Параметры.Вставить("ИмяРеквизитаПартии",           "Партия");
	
	Возврат Параметры;
	
КонецФункции // СоздатьПараметрыПолученияТаблицыТоваров()

// Возвращает результат запроса по таблице товаров
// Параметры:
//  Параметры - Структура - структура параметров:
//   * НадоДокументПередачи - Булево - включить в таблицу документ передачи,
//   * ИмяРеквизитаДокументПередачи - Строка - наименование реквизита,
//   * НадоПартию - Булево - включить в таблицу документ "Партия",
//   * ИмяРеквизитаПартии - Строка - наименование реквизита.
Функция ПолучитьТаблицуТоваров(Параметры)
	// получим результат запроса по товарной таблице
	ПоБазовомуКоличеству=?(ПоБазовомуКоличеству=Неопределено,Ложь,ПоБазовомуКоличеству);
	Запрос=Новый Запрос();
	ВидДок=ДокументОбъект.Метаданные().Имя;
	Если Параметры.НадоДокументПередачи Тогда
		Параметры.НадоДокументПередачи = 
			ДокументОбъект.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти(Параметры.ИмяРеквизитаДокументПередачи) <> Неопределено;
	КонецЕсли;
	Если Параметры.НадоПартию Тогда
		Параметры.НадоПартию = 
			ДокументОбъект.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти(Параметры.ИмяРеквизитаПартии) <> Неопределено;
	КонецЕсли;
	ЕстьГТД = (ДокументОбъект.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("ГТД") <> Неопределено);
	АвтомобильВТаблице = (Автомобиль = Неопределено);
	АвтомобильВТаблицеТекст = ?(АвтомобильВТаблице, "ДокументАвтомобили.Автомобиль КАК Автомобиль,", 
																				"&Автомобиль КАК Автомобиль,");	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	" + ?(ЕстьАвтомобиль, АвтомобильВТаблицеТекст, "") + "
	|	ДокументТовары.Номенклатура КАК Номенклатура,
	|	ДокументТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	" + ?(Параметры.НадоДокументПередачи, "ДокументТовары." + Параметры.ИмяРеквизитаДокументПередачи + " КАК ДокументПередачи,", "") + "
	|	" + ?(Параметры.НадоПартию, "ДокументТовары." + Параметры.ИмяРеквизитаПартии + " КАК Партия,", "") + "
	|	" + ?(ЕстьГТД, "ДокументТовары.ГТД КАК ГТД,","") + "
	|	Сумма(ДокументТовары.СуммаНДС) КАК СуммаНДС,
	|	Сумма(ДокументТовары.Сумма) КАК Сумма,
	|	Сумма(ДокументТовары.СуммаВсего) КАК СуммаВсего,
	|	Сумма(ДокументТовары.Количество" + ?(ПоБазовомуКоличеству, "Базовое", "*ДокументТовары.Коэффициент") + ") КАК Количество
	|ИЗ
	|	Документ." + ВидДок + ".Товары КАК ДокументТовары" + ?(ЕстьАвтомобиль И АвтомобильВТаблице, "
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ." + ВидДок + ".Автомобили КАК ДокументАвтомобили
	|ПО
	|	ДокументТовары.ИдентификаторАвтомобиля = ДокументАвтомобили.ИдентификаторАвтомобиля", "") + "
	|ГДЕ
	|	ДокументТовары.Ссылка=&Ссылка И
	|	ДокументТовары.Номенклатура.ВидНоменклатуры<>&Услуга
	|СГРУППИРОВАТЬ ПО" + ?(ЕстьАвтомобиль И АвтомобильВТаблице, "
	|	ДокументАвтомобили.Автомобиль,", "") + "
	|	ДокументТовары.Номенклатура,
	|	ДокументТовары.ХарактеристикаНоменклатуры
	|	" + ?(Параметры.НадоДокументПередачи, ",ДокументТовары." + Параметры.ИмяРеквизитаДокументПередачи,"") + "
	|	" + ?(Параметры.НадоПартию, ",ДокументТовары." + Параметры.ИмяРеквизитаПартии,"") + "
	|	" + ?(ЕстьГТД, ",ДокументТовары.ГТД", "") + "
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|	" + ?(Параметры.НадоПартию, ",ДокументТовары." + Параметры.ИмяРеквизитаПартии + " УБЫВ", "") + "
	|	" + ?(ЕстьГТД, ",ДокументТовары.ГТД УБЫВ", "") + "
	|";
	
	Запрос.УстановитьПараметр("Ссылка", ШапкаДокумента.Ссылка);
	Запрос.УстановитьПараметр("Услуга", Перечисления.ВидыНоменклатуры.Услуга);
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Возвращает результат запроса по таблице отданных партий
//
// Параметры:
//  Переоценка - Булево - Признак выполнения переоценки.
// 
// Возвращаемое значение:
//  РезультатЗапроса, Неопределено - Движения по регистру "Партии товаров отданные".
//
Функция ПартииОтданныхТоваров(Переоценка = Ложь) Экспорт
	
	АвтомобильВТаблице = (Автомобиль = Неопределено);
	АвтомобильВТаблицеТекст = ?(АвтомобильВТаблице, "Автомобиль В (&Автомобиль) И ", "Автомобиль = &Автомобиль И ");
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	" + ?(ЕстьАвтомобиль, "ПартииТоваровОтданныеОстатки.Автомобиль КАК Автомобиль,", "") + "
	|	ПартииТоваровОтданныеОстатки.Номенклатура КАК Номенклатура,
	|	ПартииТоваровОтданныеОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПартииТоваровОтданныеОстатки.ДокументПередачи КАК ДокументПередачи,
	|	ПартииТоваровОтданныеОстатки.Партия КАК Партия,
	|	ПартииТоваровОтданныеОстатки.ГТД КАК ГТД,
	|	ПартииТоваровОтданныеОстатки.КоличествоОстаток КАК Количество,
	|	ПартииТоваровОтданныеОстатки.СуммаНДСОстаток КАК СуммаНДС,
	|	ПартииТоваровОтданныеОстатки.СуммаНДСУпрОстаток КАК СуммаНДСУпр,
	|	ПартииТоваровОтданныеОстатки.СуммаОстаток КАК Сумма,
	|	ПартииТоваровОтданныеОстатки.СуммаУпрОстаток КАК СуммаУпр,
	|	ПартииТоваровОтданныеОстатки.СуммаСебестоимостиУпрОстаток КАК СуммаСебестоимостиУпр,
	|	ПартииТоваровОтданныеОстатки.СуммаСебестоимостиРеглОстаток КАК СуммаСебестоимостиРегл,
	|	ПартииТоваровОтданныеОстатки.СуммаСебестоимостиНДСУпрОстаток КАК СуммаСебестоимостиНДСУпр,
	|	ПартииТоваровОтданныеОстатки.СуммаСебестоимостиНДСРеглОстаток КАК СуммаСебестоимостиНДСРегл
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОтданные.Остатки(&Момент,
	|	" + ?(ЕстьАвтомобиль, АвтомобильВТаблицеТекст, "Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка) И ") + "
	|	Номенклатура В (&Номенклатура)
	|	И Контрагент = &Контрагент
	|	И ДоговорВзаиморасчетов = &ДоговорВзаиморасчетов " + ?(Переоценка, "
	|	И ПартииТоваровОтданныеОстатки.ДокументПередачи В (&ДокументПередачи)", "") + ") КАК ПартииТоваровОтданныеОстатки
	|
	|УПОРЯДОЧИТЬ ПО ХарактеристикаНоменклатуры.Сортировка ВОЗР, ДокументПередачи ВОЗР, ГТД ВОЗР
	|";

	тзТоваров = РезультатЗапросаПоТоварам.Выгрузить();
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Момент",?(РежимПроведения=РежимПроведенияДокумента.Оперативный, Неопределено, ШапкаДокумента.МоментВремени));
	Запрос.УстановитьПараметр("Номенклатура", тзТоваров.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("Контрагент",   ШапкаДокумента.Контрагент);
	Запрос.УстановитьПараметр("ДоговорВзаиморасчетов", ШапкаДокумента.ДоговорВзаиморасчетов);
	Если ЕстьАвтомобиль Тогда
		Если АвтомобильВТаблице Тогда
			Запрос.УстановитьПараметр("Автомобиль", тзТоваров.ВыгрузитьКолонку("Автомобиль"));
		Иначе
			Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
		КонецЕсли;
	КонецЕсли;
	Если Переоценка Тогда
		Запрос.УстановитьПараметр("ДокументПередачи",  тзТоваров.ВыгрузитьКолонку("ДокументПередачи"));
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ПартииТоваровОтданные");
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, ШапкаДокумента.Дата)); 
	ЗначенияБлокировки.Вставить("Контрагент", ШапкаДокумента.Контрагент); 
	ЗначенияБлокировки.Вставить("ДоговорВзаиморасчетов", ШапкаДокумента.ДоговорВзаиморасчетов); 
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", тзТоваров);
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Номенклатура", "Номенклатура");
	Если Переоценка Тогда
		ОписаниеИсточника.Вставить("ДокументПередачи", "ДокументПередачи");
	КонецЕсли;
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	Возврат Запрос.Выполнить();
КонецФункции

// Формирует движения по сторнированию прихода/расхода
// ВидДвижения - ВидДвиженияРегистраНакопления. Если Приход, тогда у нас возврат от покупателя иначе - от поставщика
// Возвращает Истина - все хорошо, Ложь - чего-то не так.
Функция ВозвратТоваров()
	
	ВсеОК = Истина;
	// получим результат запроса по товарной таблице
	Если (РезультатЗапросаПоТоварам = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоТоварам) <> Тип("РезультатЗапроса")) Тогда
		// если неопределен результат запроса по таблице товаров, значит она в документе.
		РезультатЗапросаПоТоварам = ПолучитьТаблицуТоваров(СоздатьПараметрыПолученияТаблицыТоваров());
	КонецЕсли;
	
	АвтомобильВТаблице = (ЕстьАвтомобиль И Автомобиль = Неопределено);
	АвтомобильВТаблицеТекст = ?(АвтомобильВТаблице, "И Автомобиль В (&Автомобили)", "И Автомобиль = &Автомобиль");
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	" + ?(ЕстьАвтомобиль, "ПартииТоваровОтданные.Автомобиль КАК Автомобиль,", "") + "
	|	ПартииТоваровОтданные.Номенклатура КАК Номенклатура,
	|	ПартииТоваровОтданные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПартииТоваровОтданные.Контрагент КАК Контрагент,
	|	ПартииТоваровОтданные.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	ПартииТоваровОтданные.ДокументПередачи КАК ДокументПередачи,
	|	ПартииТоваровОтданные.Партия КАК Партия,
	|	ПартииТоваровОтданные.ГТД КАК ГТД,
	|	ПартииТоваровОтданные.КоличествоОстаток КАК Количество,
	|	ПартииТоваровОтданные.СуммаОстаток КАК Сумма,
	|	ПартииТоваровОтданные.СуммаНДСОстаток КАК СуммаНДС,
	|	ПартииТоваровОтданные.СуммаНДСУпрОстаток КАК СуммаНДСУпр,
	|	ПартииТоваровОтданные.СуммаУпрОстаток КАК СуммаУпр,
	|	ПартииТоваровОтданные.СуммаСебестоимостиУпрОстаток КАК СуммаСебестоимостиУпр,
	|	ПартииТоваровОтданные.СуммаСебестоимостиРеглОстаток КАК СуммаСебестоимостиРегл,
	|	ПартииТоваровОтданные.СуммаСебестоимостиНДСУпрОстаток КАК СуммаСебестоимостиНДСУпр,
	|	ПартииТоваровОтданные.СуммаСебестоимостиНДСРеглОстаток КАК СуммаСебестоимостиНДСРегл
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОтданные.Остатки(&Момент, 
	|	Контрагент = &Контрагент
	|	И ДоговорВзаиморасчетов = &ДоговорВзаиморасчетов
	|	" + ?(ЕстьАвтомобиль, АвтомобильВТаблицеТекст, "И Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)") + "
	|	И Номенклатура В (&Номенклатура)
	|	И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)
	|	И ДокументПередачи В (&ДокументПередачи)) КАК ПартииТоваровОтданные
	|УПОРЯДОЧИТЬ ПО
	|	ПартииТоваровОтданные.Партия УБЫВ, ПартииТоваровОтданные.ГТД УБЫВ
	|";
	Запрос = Новый Запрос(ТекстЗапроса);
	тзТоваров = РезультатЗапросаПоТоварам.Выгрузить();
	Запрос.УстановитьПараметр("Момент", ?(РежимПроведения = РежимПроведенияДокумента.Оперативный, Неопределено, ШапкаДокумента.МоментВремени));
	Запрос.УстановитьПараметр("Номенклатура", тзТоваров.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", тзТоваров.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
	Запрос.УстановитьПараметр("ДокументПередачи", тзТоваров.ВыгрузитьКолонку("ДокументПередачи"));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДоговорВзаиморасчетов", ДоговорВзаиморасчетов);
	Если ЕстьАвтомобиль Тогда
		Если АвтомобильВТаблице Тогда
			Запрос.УстановитьПараметр("Автомобили", тзТоваров.ВыгрузитьКолонку("Автомобиль"));
		Иначе
			Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
		КонецЕсли;
	КонецЕсли;
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ПартииТоваровОтданные");
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, ШапкаДокумента.Дата)); 
	ЗначенияБлокировки.Вставить("Контрагент", Контрагент); 
	ЗначенияБлокировки.Вставить("ДоговорВзаиморасчетов", ДоговорВзаиморасчетов); 
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", тзТоваров);
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Номенклатура", "Номенклатура");
	ОписаниеИсточника.Вставить("ХарактеристикаНоменклатуры", "ХарактеристикаНоменклатуры");
	ОписаниеИсточника.Вставить("ДокументПередачи", "ДокументПередачи");
	Если ЕстьАвтомобиль Тогда
		Если АвтомобильВТаблице Тогда
			ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
		Иначе
			ЗначенияБлокировки.Вставить("Автомобиль", Автомобиль);
		КонецЕсли;
	Иначе
		ЗначенияБлокировки.Вставить("Автомобиль", Справочники.Автомобили.ПустаяСсылка());
	КонецЕсли;
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	// Установим текст запроса
	РезультатОтгрузки=Запрос.Выполнить();
	// Выгрузим результат запроса в таблицу
	ТаблицаОтгрузки = РезультатОтгрузки.Выгрузить();
	
	ИмяКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьПараметрыРежимаВыводаКодаВДокументах().Имя;
	// пройдемся по таблице товаров и отсторнируем отгрузку
	Для Каждого ВыборкаТовары Из тзТоваров Цикл
		// Создадим структуру отбора
		СтруктураОтбора = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры");
		СтруктураОтбора.Номенклатура               = ВыборкаТовары.Номенклатура;
		СтруктураОтбора.ХарактеристикаНоменклатуры = ВыборкаТовары.ХарактеристикаНоменклатуры;
		
		Если ЗначениеЗаполнено(ВыборкаТовары.ДокументПередачи) Тогда
			СтруктураОтбора.Вставить("ДокументПередачи", ВыборкаТовары.ДокументПередачи);
		КонецЕсли;
		Если РезультатЗапросаПоТоварам.Колонки.Найти("Партия") <> Неопределено
			И ЗначениеЗаполнено(ВыборкаТовары.Партия) Тогда
			СтруктураОтбора.Вставить("Партия", ВыборкаТовары.Партия);
		КонецЕсли;
		Если РезультатЗапросаПоТоварам.Колонки.Найти("ГТД") <> Неопределено
			И ЗначениеЗаполнено(ВыборкаТовары.ГТД) Тогда
			СтруктураОтбора.Вставить("ГТД", ВыборкаТовары.ГТД);
		КонецЕсли;
		
		Если АвтомобильВТаблице Тогда
			СтруктураОтбора.Вставить("Автомобиль", ВыборкаТовары.Автомобиль);
		КонецЕсли;
		
		МассивНайденныхСтрок = ТаблицаОтгрузки.НайтиСтроки(СтруктураОтбора);
		// пройдемся по найденным строкам и вернем товар
		НадоВернуть = ВыборкаТовары.Количество;
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения                = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период                     = ШапкаДокумента.Дата;
			НоваяЗапись.Регистратор                = ШапкаДокумента.Ссылка;
			НоваяЗапись.ДокументПередачи           = ТекСтрока.ДокументПередачи;
			НоваяЗапись.Партия                     = ТекСтрока.Партия;
			НоваяЗапись.ГТД                        = ТекСтрока.ГТД;
			НоваяЗапись.Контрагент                 = ТекСтрока.Контрагент;
			НоваяЗапись.ДоговорВзаиморасчетов      = ТекСтрока.ДоговорВзаиморасчетов;
			Если ЕстьАвтомобиль Тогда
				НоваяЗапись.Автомобиль             = ВыборкаТовары.Автомобиль;
			КонецЕсли;
			НоваяЗапись.Номенклатура               = ТекСтрока.Номенклатура;
			НоваяЗапись.ХарактеристикаНоменклатуры = ТекСтрока.ХарактеристикаНоменклатуры;
			// определяемся с хоз. операцией
			НоваяЗапись.ХозОперация = ШапкаДокумента.ХозОперация;
			НоваяЗапись.Количество = -Мин(НадоВернуть,ТекСтрока.Количество);
			// суммы
			НоваяЗапись.Сумма = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.Сумма, ТекСтрока.Сумма / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаУпр = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаУпр, ТекСтрока.СуммаУпр / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаНДС = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаНДС, ТекСтрока.СуммаНДС / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаНДСУпр = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаНДСУпр, ТекСтрока.СуммаНДСУпр / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаСебестоимостиУпр = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаСебестоимостиУпр, ТекСтрока.СуммаСебестоимостиУпр / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаСебестоимостиРегл = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаСебестоимостиРегл, ТекСтрока.СуммаСебестоимостиРегл / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаСебестоимостиНДСУпр = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаСебестоимостиНДСУпр, ТекСтрока.СуммаСебестоимостиНДСУпр / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаСебестоимостиНДСРегл = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаСебестоимостиНДСРегл, ТекСтрока.СуммаСебестоимостиНДСРегл / ТекСтрока.Количество * НадоВернуть), 2);
			НоваяЗапись.СуммаСебестоимостиБезНДСУпр = НоваяЗапись.СуммаСебестоимостиУпр - НоваяЗапись.СуммаСебестоимостиНДСУпр;
			НоваяЗапись.СуммаСебестоимостиБезНДСРегл = НоваяЗапись.СуммаСебестоимостиРегл - НоваяЗапись.СуммаСебестоимостиНДСРегл;
			
			// уменьшаем количество которое надо списать
			НадоВернуть = НадоВернуть - (-НоваяЗапись.Количество);
			ТекСтрока.Количество = ТекСтрока.Количество - (-НоваяЗапись.Количество);
			
			// уменьшим суммы
			ТекСтрока.СуммаСебестоимостиРегл = ТекСтрока.СуммаСебестоимостиРегл + НоваяЗапись.СуммаСебестоимостиРегл;
			ТекСтрока.СуммаСебестоимостиУпр  = ТекСтрока.СуммаСебестоимостиУпр + НоваяЗапись.СуммаСебестоимостиУпр;
			Если ТекСтрока.Количество = 0 Тогда
				// удалим ненужные строки
				ТаблицаОтгрузки.Удалить(ТекСтрока);
			КонецЕсли; 
			
			Если НадоВернуть <= 0 Тогда Прервать; КонецЕсли;
		КонецЦикла;
		// проверим чего осталось
		Если НадоВернуть > 0 Тогда
			ЗначениеКолонкиКода = УправлениеПечатьюПлатформа.ПолучитьЗначениеКолонкиКода(ВыборкаТовары.Номенклатура);
			// не удалось вернуть товар
			Если НЕ ЗначениеЗаполнено(ВыборкаТовары.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" вернуть не удалось, так как товар в указанном количестве не передавался на реализацию .'"),
						ЗначениеКолонкиКода,
						СокрЛП(ВыборкаТовары.Номенклатура)
						),
					ДокументОбъект,,, Истина
				);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '[%1] Товар ""%2"" с характеристикой ""%3"" вернуть не удалось, так как товар в указанном количестве не передавался на реализацию .'"),
						ЗначениеКолонкиКода,
						СокрЛП(ВыборкаТовары.Номенклатура),
						СокрЛП(ВыборкаТовары.ХарактеристикаНоменклатуры)
					),
					ДокументОбъект,,, Истина
				);
			КонецЕсли; 
			ВсеОК = Ложь;
		КонецЕсли;
	КонецЦикла;

	РезультатЗапросаПоТоварам = Неопределено;
	// убиваем циклическую ссылку
	ДокументОбъект = Неопределено;
	ШапкаДокумента = Неопределено;
	
	Возврат ВсеОК
КонецФункции

#КонецОбласти

#Область Инициализация

ОтчетКомиссионера             = Ложь;
ПоБазовомуКоличеству          = Ложь;
ПередаватьНаКомиссиюВесьТовар = Ложь;

ЕстьАвтомобиль                = Ложь;
Автомобиль                    = Неопределено;

#КонецОбласти

#КонецЕсли