// Модуль набора записей регистра накоплений "Остатки автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем РежимПроведения Экспорт;					// Режим проведения документа. Если проведение неоперативное - проверок остатков нет

Перем ДокументОбъект Экспорт;					// Документ, осуществляющий движение по регистру
Перем РезультатЗапросаПоАвтомобилям Экспорт;	// Выборка табличной части или таблица значений табличной части автомобилей
Перем СкладКомпании Экспорт;					// Ссылка на склад компании, на котором необходимо производить приходование и резервирование. Если значение неопределено склад находится в табличной части автомобилей
Перем СкладПолучатель Экспорт;					// Ссылка на склад компании, на котором необходимо производить приходование и резервирование. Если значение неопределено склад находится в табличной части автомобилей
Перем СтатусПартии Экспорт;						// Статус партии
Перем Партия Экспорт;							// Ссылка на партию
Перем СуммаПродажи Экспорт;						// Имя колонки с сумой продажи (для расхода)
Перем ШапкаДокумента Экспорт;					// Выборка или строка таблицы значений, в которой содержаться необходимые данные о шапке документа
Перем РежимДопРасходы Экспорт;					// Число. 0-нет, 1-поступление, 2-только доп расходы
Перем ГраницаРасчетаОстатков Экспорт;			// Граница расчета остатков
Перем ЗаписыватьДвижения Экспорт;				// Булево. Истина - движения записываются сразу по окончании выполнения процедуры. Ложь - движения записываются при записи документа.
Перем РасчетыСКонтрагентами Экспорт; // Расчеты с контрагентами для формирования себестоимости

// В соответствии с этими флагами используются соответствующие колонки таблицы автомобилейкладе
Перем СторноПриход Экспорт;						// Флаг используется в функции Расход() и означает, что будет операция не расхода, а сторно.

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистру приход (увеличение товарного запаса)
// Возвращаемое значение: Булево. Истина - все хорошо, Ложь - чего-то не так.
Функция Приход() Экспорт
	ВсеОК = Истина;
	
	// получим таблицу состава автомобилей
	Если (РезультатЗапросаПоАвтомобилям = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей(ВидДвиженияНакопления.Приход);
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям.Выгрузить();
	КонецЕсли;
	
	// Получение остатков автомобилей по компании целиком
	ТаблицаОстатковАвтомобилей = ПолучитьОстаткиАвтомобилей(Неопределено, Неопределено);
	ТаблицаОстатковАвтомобилей.Сортировать("СкладКомпании, Автомобиль, Партия УБЫВ");
	
	ВалютаРегл     = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(); 
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл, ДокументОбъект.Дата);
	КурсРегл	   = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	ВалютаУпр      = Константы.ВалютаУправленческогоУчетаКомпании.Получить(); 
	КурсУпр        = Неопределено;
	
	Если ЕстьРеквизит(ДокументОбъект, "КурсВалютыУпр") Тогда
		КурсУпр = ДокументОбъект.КурсВалютыУпр;
	КонецЕсли;
	
	Если КурсУпр = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ДокументОбъект.Дата);
		КурсУпр        = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;
	
	ВыборкаПартийАвтомобилей = Неопределено;
	
	// При приходовании авто из филиала попробуем получить партии 
	Если ДокументОбъект.ХозОперация = Справочники.ХозОперации.ПеремещениеАвтомобилейИзФилиала И
		 ТипЗнч(ДокументОбъект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеАвтомобилей") И
		 ЗначениеЗаполнено(ДокументОбъект.ДокументОснование) И
		 ДокументОбъект.ДокументОснование.ХозОперация = Справочники.ХозОперации.ПеремещениеАвтомобилейВФилиал Тогда
		 
		 Запрос = Новый Запрос;
		 Запрос.Текст =
		 "ВЫБРАТЬ
		 |	ОстаткиАвтомобилей.Автомобиль КАК Автомобиль,
		 |	ОстаткиАвтомобилей.СкладКомпании КАК СкладКомпании,
		 |	ОстаткиАвтомобилей.СтатусПартии КАК СтатусПартии,
		 |	ОстаткиАвтомобилей.Партия КАК Партия,
		 |	СУММА(ОстаткиАвтомобилей.Количество) КАК Количество,
		 |	СУММА(ОстаткиАвтомобилей.Сумма) КАК Сумма,
		 |	СУММА(ОстаткиАвтомобилей.СуммаНДС) КАК СуммаНДС,
		 |	СУММА(ОстаткиАвтомобилей.СуммаБезНДС) КАК СуммаБезНДС,
		 |	СУММА(ОстаткиАвтомобилей.СуммаУпр) КАК СуммаУпр,
		 |	СУММА(ОстаткиАвтомобилей.СуммаНДСУпр) КАК СуммаНДСУпр,
		 |	СУММА(ОстаткиАвтомобилей.СуммаБезНДСУпр) КАК СуммаБезНДСУпр
		 |ИЗ
		 |	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
		 |ГДЕ
		 |	ОстаткиАвтомобилей.Регистратор = &Регистратор
		 |	И ОстаткиАвтомобилей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		 |	И ОстаткиАвтомобилей.Автомобиль В (&Автомобиль)
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	ОстаткиАвтомобилей.Партия,
		 |	ОстаткиАвтомобилей.СтатусПартии,
		 |	ОстаткиАвтомобилей.Автомобиль,
		 |	ОстаткиАвтомобилей.СкладКомпании";
		 Запрос.УстановитьПараметр("Регистратор" , ДокументОбъект.ДокументОснование);
		 Запрос.УстановитьПараметр("Автомобиль"  , РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку("Автомобиль"));
		 
		 ВыборкаПартийАвтомобилей = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	// Пересчитать суммы документа
	ПересчитаныСуммы = Ложь;
	Если РасчетыСКонтрагентами <> Неопределено
		И РасчетыСКонтрагентами.Количество() > 0 Тогда
		
		СведенияОВалюте = Новый Структура();
		СведенияОВалюте.Вставить("ВалютаДоговора", ШапкаДокумента.ДоговорВзаиморасчетов.ВалютаВзаиморасчетов);
		СведенияОВалюте.Вставить("ВалютаРегл", ВалютаРегл);
		СведенияОВалюте.Вставить("ВалютаУпр", ВалютаУпр);
		СведенияОВалюте.Вставить("КурсРегл", КурсРегл);
		СведенияОВалюте.Вставить("КурсУпр", КурсУпр);
		
		ПересчитаныСуммы = ОбработкаСобытийДокументаСервер.ПересчитанаВВалюту(
			ШапкаДокумента,
			РезультатЗапросаПоАвтомобилям,
			РасчетыСКонтрагентами,
			СведенияОВалюте,
			Ложь);
		
	КонецЕсли;
	
	ЕстьСуммыДопРасходов = РежимДопРасходы <> 0
		И ЕстьРеквизит(РезультатЗапросаПоАвтомобилям, "ДопРасходы")
		И ЕстьРеквизит(РезультатЗапросаПоАвтомобилям, "ДопРасходыУпр");
	
	// Перебираем строки автомобилей
	Для Каждого СтрокаАвтомобиля Из РезультатЗапросаПоАвтомобилям Цикл
		// Получим склад
		Склад      = ?(СкладКомпании = Неопределено, СтрокаАвтомобиля.СкладКомпании, СкладКомпании);
		Количество = СтрокаАвтомобиля.Количество;
		
		Если РежимДопРасходы <> 2 Тогда
			// Получим остатки по текущему автомобилю
			КоличествоВНаличии = 0; 
			КоличествоНаСкладе = 0;
			МассивОстатковАвтомобиля = ТаблицаОстатковАвтомобилей.НайтиСтроки(Новый Структура("Автомобиль", СтрокаАвтомобиля.Автомобиль));
			
			Для каждого ОстатокАвтомобиля Из МассивОстатковАвтомобиля Цикл
				КоличествоВНаличии = КоличествоВНаличии + ОстатокАвтомобиля.Количество;
				Если ОстатокАвтомобиля.СкладКомпании = Склад Тогда
					КоличествоНаСкладе = КоличествоНаСкладе + ОстатокАвтомобиля.Количество;
				КонецЕсли;
				ТаблицаОстатковАвтомобилей.Удалить(ОстатокАвтомобиля);
			КонецЦикла;
			
			// Запрещено иметь более одного автомобиля
			Если (КоличествоВНаличии + Количество) > 1 Тогда
				
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Автомобиль <%1> уже имеется. Повторный приход автомобиля недопустим.'"),
					СтрокаАвтомобиля.Автомобиль
				);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаАвтомобиля.Автомобиль);
				
				ВсеОК = Ложь;
				
			КонецЕсли;
		КонецЕсли;
		
		Если ВсеОК Тогда
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период        = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
			НоваяЗапись.Автомобиль    = СтрокаАвтомобиля.Автомобиль;
			НоваяЗапись.СкладКомпании = Склад;
			
			СтрокаПартийАвтомобилей = Неопределено;
			Если ВыборкаПартийАвтомобилей <> Неопределено Тогда
				СтрокаПартийАвтомобилей = ВыборкаПартийАвтомобилей.Найти(СтрокаАвтомобиля.Автомобиль, "Автомобиль");
			КонецЕсли;
			
			Если СтрокаПартийАвтомобилей = Неопределено Тогда
				НоваяЗапись.СтатусПартии  = СтатусПартии;
				НоваяЗапись.Партия        = ?(ТипЗнч(Партия) = Тип("Строка"), СтрокаАвтомобиля.Партия, Партия);
			Иначе
				НоваяЗапись.СтатусПартии  = СтрокаПартийАвтомобилей.СтатусПартии;
				НоваяЗапись.Партия        = СтрокаПартийАвтомобилей.Партия;
			КонецЕсли;
			
			Если ЕстьРеквизит(ДокументОбъект, "Проект" ) Тогда
								
					НоваяЗапись.Проект = ДокументОбъект.Проект;
					
			Иначе
					
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Проект""'"),
						УровеньЖурналаРегистрации.Предупреждение,
						,
						ДокументОбъект.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
			КонецЕсли;
				
			Попытка 
					
					НоваяЗапись.ДокументПродажи = ШапкаДокумента.ДокументПродажи;
					
			Исключение
					
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Документ продажи""'"),
						УровеньЖурналаРегистрации.Предупреждение,
						,
						ШапкаДокумента.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
			КонецПопытки;


			НоваяЗапись.Количество  = ?(РежимДопРасходы = 2, 0, Количество);
			ДопРасходы              = ?(РежимДопРасходы = 0, 0, СтрокаАвтомобиля.ДопРасходы);
			НДСДопРасходов          = ?(РежимДопРасходы = 0, 0, СтрокаАвтомобиля.НДСДопРасходов); 
			СуммаВсегоИтог = ?(РежимДопРасходы = 2, 0, СтрокаАвтомобиля.СуммаВсего);
			СуммаНДСИтог = ?(РежимДопРасходы = 2, 0, СтрокаАвтомобиля.СуммаНДС);	
			
			Если ПересчитаныСуммы Тогда
				НоваяЗапись.Сумма = СтрокаАвтомобиля.Сумма;
				НоваяЗапись.СуммаУпр = СтрокаАвтомобиля.СуммаУпр;
				НоваяЗапись.СуммаНДС = СтрокаАвтомобиля.СуммаНДС;
				НоваяЗапись.СуммаНДСУпр = СтрокаАвтомобиля.СуммаНДСУпр;
			ИначеЕсли ЕстьСуммыДопРасходов Тогда
				НоваяЗапись.Сумма = СтрокаАвтомобиля.ДопРасходы;
				НоваяЗапись.СуммаУпр = СтрокаАвтомобиля.ДопРасходыУпр;
				НоваяЗапись.СуммаНДС = СтрокаАвтомобиля.НДСДопРасходов;
				НоваяЗапись.СуммаНДСУпр = СтрокаАвтомобиля.НДСДопРасходовУпр;
			Иначе
				НоваяЗапись.Сумма       = Окр(?(СтрокаАвтомобиля.СуммаВсего = NULL, 0, 
												РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СуммаВсегоИтог 
													+ ДопРасходы, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл)), 2);
				НоваяЗапись.СуммаНДС    = Окр(?(СтрокаАвтомобиля.СуммаНДС = NULL, 0, 
												РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СуммаНДСИтог 
													+ НДСДопРасходов, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаРегл, КурсРегл)), 2);
				НоваяЗапись.СуммаУпр    = Окр(?(СтрокаАвтомобиля.СуммаВсего = NULL, 0, 
												РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СуммаВсегоИтог 
													+ ДопРасходы, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр)), 2);
				НоваяЗапись.СуммаНДСУпр = Окр(?(СтрокаАвтомобиля.СуммаНДС = NULL, 0, 
												РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СуммаНДСИтог 
													+ НДСДопРасходов, ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, ВалютаУпр, КурсУпр)), 2);
			КонецЕсли;
			НоваяЗапись.СуммаБезНДС = НоваяЗапись.Сумма - НоваяЗапись.СуммаНДС;
			НоваяЗапись.СуммаБезНДСУпр = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
			
			НоваяЗапись.ХозОперация = ДокументОбъект.ХозОперация;
			Попытка
				НоваяЗапись.СтавкаНДС = СтрокаАвтомобиля.СтавкаНДС;
			Исключение  
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Не найдена ставка НДС'"),
				УровеньЖурналаРегистрации.Ошибка,
				,
				СтрокаАвтомобиля.Автомобиль,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));	
			КонецПопытки;
		КонецЕсли; 
	КонецЦикла; 
	
	// Запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	Если ВсеОК И ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	// Убиваем циклическую ссылку
	ДокументОбъект                = Неопределено;
	РезультатЗапросаПоАвтомобилям = Неопределено;
	СкладКомпании                 = Неопределено;
	СкладПолучатель               = Неопределено;
	Партия                        = Неопределено;
	ШапкаДокумента                = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

// Формирует движения по регистру расход (уменьшение товарного запаса)
// Возвращаемое значение: Булево. Истина - все хорошо, Ложь - чего-то не так.
Функция Расход() Экспорт
	
	ВсеОК = Истина;
	
	// получим таблицу состава автомобилей
	Если (РезультатЗапросаПоАвтомобилям = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей(ВидДвиженияНакопления.Расход);
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям.Выгрузить();
	КонецЕсли;
	
	// Получение остатков автомобилей по компании целиком
	ТаблицаОстатковАвтомобилей = ПолучитьОстаткиАвтомобилей(СкладКомпании, СтатусПартии, Ложь);
	ТаблицаОстатковАвтомобилей.Свернуть("СкладКомпании,Автомобиль,Партия,СтатусПартии", "Количество,Сумма,СуммаНДС,СуммаБезНДС,СуммаУпр,СуммаНДСУпр,СуммаБезНДСУпр");
	ТаблицаОстатковАвтомобилей.Сортировать("СкладКомпании, Автомобиль, Партия УБЫВ");
	
	СторноПриход = ?(СторноПриход = Неопределено, Ложь, СторноПриход);
	
	// Перебираем строки автомобилей
	Для Каждого СтрокаАвтомобилей Из РезультатЗапросаПоАвтомобилям Цикл
		// Получим склад
		Склад = ?(СкладКомпании = Неопределено, СтрокаАвтомобилей.СкладКомпании, СкладКомпании);
		Если ТипЗнч(Склад) <> Тип("СправочникСсылка.СкладыКомпании") Тогда
			Продолжить;
		КонецЕсли;
		
		Количество = СтрокаАвтомобилей.Количество;
		МассивОстатковАвтомобиля = ТаблицаОстатковАвтомобилей.НайтиСтроки(Новый Структура("Автомобиль,СкладКомпании", СтрокаАвтомобилей.Автомобиль, Склад));
		
		Если МассивОстатковАвтомобиля.Количество() = 0 Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Автомобиль <%1> отсутствует на складе <%2>. Расход невозможен.'"),
				СтрокаАвтомобилей.Автомобиль,
				СкладКомпании
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаАвтомобилей.Автомобиль);
			
			ВсеОК = Ложь;
			Продолжить;
			
		КонецЕсли;
		
		ПеремещаемыйАвтомобиль = МассивОстатковАвтомобиля[0];
		Если Количество > ПеремещаемыйАвтомобиль.Количество Тогда
			
			// Расход по складу превышает остаток
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Автомобиль <%1> отсутствует. Расход невозможен.'"),
				СтрокаАвтомобилей.Автомобиль
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаАвтомобилей.Автомобиль);
			
			ВсеОК = Ложь;
			
		КонецЕсли;
		
		Если ДокументОбъект.ХозОперация = Справочники.ХозОперации.РеализацияАвтомобилейКомиссия Тогда
			
			// Для передачи автомобиля на комиссию проверим чтобы данный автомобиль не был комиссионным
			Если ПеремещаемыйАвтомобиль.СтатусПартии = Перечисления.СтатусыПартий.ТоварПринятыйКомиссия Тогда
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Автомобиль <%1> принят на комиссию. Передача комиссионных автомобилей на комиссию невозможна.'"),
					СтрокаАвтомобилей.Автомобиль
				);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаАвтомобилей.Автомобиль);
				
				ВсеОК = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДокументОбъект.ХозОперация = Справочники.ХозОперации.РеализацияАвтомобилей 
			ИЛИ ДокументОбъект.ХозОперация = Справочники.ХозОперации.РеализацияАвтомобилейКомиссия Тогда
			 
			 // Для реализации автомобилей он не должен быть на ответственном хранении
			Если ПеремещаемыйАвтомобиль.СтатусПартии = Перечисления.СтатусыПартий.ТоварОтветственноеХранение Тогда
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Автомобиль <%1> находится на ответственном хранении. Реализация автомобилей на ответственном хранении невозможна.'"),
					СтрокаАвтомобилей.Автомобиль
				);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаАвтомобилей.Автомобиль);
				
				ВсеОК = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если ВсеОК И (Количество <> 0) Тогда
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения   = ?(СторноПриход, ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход);
			НоваяЗапись.Период        = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
			НоваяЗапись.Автомобиль    = СтрокаАвтомобилей.Автомобиль;
			НоваяЗапись.СкладКомпании = Склад;
			НоваяЗапись.СтатусПартии  = ПеремещаемыйАвтомобиль.СтатусПартии;
			НоваяЗапись.Партия        = ПеремещаемыйАвтомобиль.Партия;
			НоваяЗапись.Количество    = Количество;
			НоваяЗапись.ХозОперация   = ДокументОбъект.ХозОперация;
			НоваяЗапись.Сумма         = ПеремещаемыйАвтомобиль.Сумма;
			НоваяЗапись.СуммаНДС      = ПеремещаемыйАвтомобиль.СуммаНДС;
			НоваяЗапись.СуммаБезНДС	  = ПеремещаемыйАвтомобиль.СуммаБезНДС;
			НоваяЗапись.СуммаУпр      = ПеремещаемыйАвтомобиль.СуммаУпр;
			НоваяЗапись.СуммаНДСУпр	  = ПеремещаемыйАвтомобиль.СуммаНДСУпр;
			НоваяЗапись.СуммаБезНДСУпр = ПеремещаемыйАвтомобиль.СуммаБезНДСУпр;
			
			Если ЕстьРеквизит(ДокументОбъект, "Проект" ) Тогда
								
					НоваяЗапись.Проект = ДокументОбъект.Проект;
					
			Иначе
					
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Проект""'"),
						УровеньЖурналаРегистрации.Предупреждение,
						, ДокументОбъект.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
			КонецЕсли;
				
			Попытка 
					
					НоваяЗапись.ДокументПродажи = ШапкаДокумента.ДокументПродажи;
					
			Исключение
					
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Документ продажи""'"),
						УровеньЖурналаРегистрации.Ошибка,
						, ШапкаДокумента.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
			КонецПопытки;
			
			Если СторноПриход Тогда
				НоваяЗапись.Количество	= -НоваяЗапись.Количество;
				НоваяЗапись.Сумма		= -НоваяЗапись.Сумма;
				НоваяЗапись.СуммаНДС	= -НоваяЗапись.СуммаНДС;
				НоваяЗапись.СуммаБезНДС	= -НоваяЗапись.СуммаБезНДС;
				НоваяЗапись.СуммаУпр	= -НоваяЗапись.СуммаУпр;
				НоваяЗапись.СуммаНДСУпр	= -НоваяЗапись.СуммаНДСУпр;
				НоваяЗапись.СуммаБезНДСУпр	= -НоваяЗапись.СуммаБезНДСУпр;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	Если ВсеОК И ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	// Убиваем циклическую ссылку
	ДокументОбъект                = Неопределено;
	РезультатЗапросаПоАвтомобилям = Неопределено;
	СкладКомпании                 = Неопределено;
	СкладПолучатель               = Неопределено;
	Партия                        = Неопределено;
	СторноПриход                  = Неопределено;
	ШапкаДокумента                = Неопределено;

	// Возврат результата
	Возврат ВсеОК;
КонецФункции

// Формирует перемещение автомобилей с одного склада на другой
// Возвращаемое значение: Булево. Истина - все хокей, Ложь - чего-то не так.
Функция Переместить() Экспорт
	ВсеОК = Истина;
	
	// получим таблицу состава автомобилей
	Если (РезультатЗапросаПоАвтомобилям = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса")) Тогда
		РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей(ВидДвиженияНакопления.Расход);
	КонецЕсли;
	
	// Получение остатков автомобилей по компании целиком
	ТаблицаОстатковАвтомобилей = ПолучитьОстаткиАвтомобилей(СкладКомпании, Неопределено);
	ТаблицаОстатковАвтомобилей.Сортировать("СкладКомпании, Автомобиль, Партия УБЫВ");
	
	// Перебираем строки автомобилей
	Выборка = РезультатЗапросаПоАвтомобилям.Выбрать();
	Пока Выборка.Следующий() Цикл
		Количество = Выборка.Количество;
		
		// Получим остатки по текущему автомобилю

		МассивОстатковАвтомобиля = ТаблицаОстатковАвтомобилей.НайтиСтроки(Новый Структура("Автомобиль,СкладКомпании", Выборка.Автомобиль, СкладКомпании));
		
		Если МассивОстатковАвтомобиля.Количество() = 0 Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Автомобиль <%1> отсутствует на складе <%2>. Перемещение невозможно.'"),
				Выборка.Автомобиль,
				СкладКомпании
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Выборка.Автомобиль);
			
			ВсеОК = Ложь;
		КонецЕсли;
		
		Если ВсеОК Тогда
			ПеремещаемыйАвтомобиль = МассивОстатковАвтомобиля[0];
			// Проведем расход
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Расход;
			НоваяЗапись.Период        = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
			НоваяЗапись.Автомобиль    = Выборка.Автомобиль;
			НоваяЗапись.СкладКомпании = СкладКомпании;
			НоваяЗапись.СтатусПартии  = ПеремещаемыйАвтомобиль.СтатусПартии;
			НоваяЗапись.Партия        = ПеремещаемыйАвтомобиль.Партия;
			НоваяЗапись.Количество    = Количество;
			НоваяЗапись.Сумма         = ПеремещаемыйАвтомобиль.Сумма;
			НоваяЗапись.СуммаНДС      = ПеремещаемыйАвтомобиль.СуммаНДС;
			НоваяЗапись.СуммаБезНДС	  = ПеремещаемыйАвтомобиль.СуммаБезНДС;
			НоваяЗапись.СуммаУпр      = ПеремещаемыйАвтомобиль.СуммаУпр;
			НоваяЗапись.СуммаНДСУпр	  = ПеремещаемыйАвтомобиль.СуммаНДСУпр;
			НоваяЗапись.СуммаБезНДСУпр = ПеремещаемыйАвтомобиль.СуммаБезНДСУпр;
			НоваяЗапись.ХозОперация   = ДокументОбъект.ХозОперация;
			
			Если ЕстьРеквизит(ДокументОбъект, "Проект" ) Тогда					
					НоваяЗапись.Проект = ДокументОбъект.Проект;		
			Иначе		
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Проект""'"),
						УровеньЖурналаРегистрации.Предупреждение,
						, ДокументОбъект.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));	
			КонецЕсли;

			// Проведем приход
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период        = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
			НоваяЗапись.Автомобиль    = Выборка.Автомобиль;
			НоваяЗапись.СкладКомпании = СкладПолучатель;
			НоваяЗапись.СтатусПартии  = ПеремещаемыйАвтомобиль.СтатусПартии;
			НоваяЗапись.Партия        = ПеремещаемыйАвтомобиль.Партия;
			НоваяЗапись.Количество    = Количество;
			НоваяЗапись.Сумма         = ПеремещаемыйАвтомобиль.Сумма;
			НоваяЗапись.СуммаНДС      = ПеремещаемыйАвтомобиль.СуммаНДС;
			НоваяЗапись.СуммаБезНДС	  = ПеремещаемыйАвтомобиль.СуммаБезНДС;
			НоваяЗапись.СуммаУпр      = ПеремещаемыйАвтомобиль.СуммаУпр;
			НоваяЗапись.СуммаНДСУпр	  = ПеремещаемыйАвтомобиль.СуммаНДСУпр;
			НоваяЗапись.СуммаБезНДСУпр = ПеремещаемыйАвтомобиль.СуммаБезНДСУпр;
			НоваяЗапись.ХозОперация   = ДокументОбъект.ХозОперация;
			Если ЕстьРеквизит(ДокументОбъект, "Проект" ) Тогда					
					НоваяЗапись.Проект = ДокументОбъект.Проект;		
			Иначе		
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Проект""'"),
						УровеньЖурналаРегистрации.Предупреждение,
						, ДокументОбъект.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));	
			КонецЕсли;
					
		КонецЕсли;
	КонецЦикла;
	
	// запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	Если ВсеОК И ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	// убиваем циклическую ссылку
	ДокументОбъект                = Неопределено;
	РезультатЗапросаПоАвтомобилям = Неопределено;
	СкладКомпании                 = Неопределено;
	СкладПолучатель               = Неопределено;
	Партия                        = Неопределено;
	ШапкаДокумента                = Неопределено;

	// возврат результата
	Возврат ВсеОК;
КонецФункции

// Переоценка автомобилей
Функция Переоценка() Экспорт
	
	// валюты
	ВалютаРегл     = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл, ДокументОбъект.Дата);
	КурсРегл       = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	ВалютаУпр      = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	
	КурсУпр = Неопределено;
	Если ЕстьРеквизит(ДокументОбъект, "КурсВалютыУпр") Тогда
		КурсУпр = ДокументОбъект.КурсВалютыУпр;
	КонецЕсли;
	
	Если КурсУпр = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ДокументОбъект.Дата);
		КурсУпр        = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;

	Если (РезультатЗапросаПоАвтомобилям = Неопределено) ИЛИ ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса") Тогда
		// Если неопределен результат запроса по таблице автомобилей, значит она в документе.
		ВидДок = ДокументОбъект.Метаданные().Имя;
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ПереоценкаАвтомобили.Автомобиль КАК Автомобиль,
		|	" + ?(СтатусПартии = Перечисления.СтатусыПартий.ТоварПринятыйКомиссия, "ПереоценкаАвтомобили.ДокументПередачи КАК Партия,", "") + "
		|	ПереоценкаАвтомобили.Количество КАК Количество,
		|	ПереоценкаАвтомобили.Цена КАК ЦенаНовая,
		|	ПереоценкаАвтомобили.СуммаНДС КАК СуммаНДСНовая
		|ИЗ
		|	Документ." + ВидДок + ".Автомобили КАК ПереоценкаАвтомобили
		|ГДЕ
		|	ПереоценкаАвтомобили.Ссылка=&Ссылка");
		Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
		РезультатЗапросаПоАвтомобилям = Запрос.Выполнить();
	КонецЕсли;
	
	ЦенаВключаетНДС = ЕстьРеквизит(ДокументОбъект, "ТипЦен") И ДокументОбъект.ТипЦен.ЦенаВключаетНДС;
	
	// получаем запрос по партиям
	Если СтатусПартии = Перечисления.СтатусыПартий.ТоварПринятыйКомиссия Тогда
		МассивПартий = РезультатЗапросаПоАвтомобилям.Выгрузить().ВыгрузитьКолонку("Партия");
	КонецЕсли;
	ТаблицаПартий = ПолучитьОстаткиАвтомобилей(СкладКомпании, СтатусПартии);
	
	// создаем структуру отбора
	СтруктураОтбора = Новый Структура("Автомобиль" + ?(СтатусПартии = Перечисления.СтатусыПартий.ТоварПринятыйКомиссия, ",Партия", ""));
	
	// переоцениваем
	ТаблицаАвтомобили = РезультатЗапросаПоАвтомобилям.Выгрузить();
	Для Каждого СтрокаАвтомобиль Из ТаблицаАвтомобили Цикл
		// определяем фильтр
		СтруктураОтбора.Автомобиль = СтрокаАвтомобиль.Автомобиль;
		
		Если СтатусПартии = Перечисления.СтатусыПартий.ТоварПринятыйКомиссия Тогда
			СтруктураОтбора.Партия = СтрокаАвтомобиль.Партия;
		КонецЕсли;
		
		НадоПереоценить      = СтрокаАвтомобиль.Количество;
		МассивНайденныхСтрок = ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
		Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
			ТекСтрока = МассивНайденныхСтрок[Сч];
			
			// расчет суммы переоценки
			НадоПереоценить = ?(НадоПереоценить = 0, ТекСтрока.Количество, НадоПереоценить);
			СуммаПереоценки = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаАвтомобиль.ЦенаНовая, 
					ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, 
						ВалютаРегл, КурсРегл) * Мин(НадоПереоценить, ТекСтрока.Количество);
			СуммаПереоценки = СуммаПереоценки - ?(ТекСтрока.Количество = 0, 0, 
					(ТекСтрока.Сумма / ТекСтрока.Количество) * Мин(НадоПереоценить, ТекСтрока.Количество));
			
			// расчет суммы НДС переоценки
			СуммаНДСПереоценки = РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаАвтомобиль.СуммаНДСНовая, 
					ДокументОбъект.ВалютаДокумента, ДокументОбъект.КурсДокумента, 
						ВалютаРегл, КурсРегл) * Мин(НадоПереоценить, ТекСтрока.Количество);
			СуммаНДСПереоценки = СуммаНДСПереоценки - ?(ТекСтрока.Количество = 0, 0, 
					(ТекСтрока.СуммаНДС / ТекСтрока.Количество) * Мин(НадоПереоценить, ТекСтрока.Количество));
			
			// расчет суммы без НДС переоценки
			СуммаБезНДСПереоценки = ?(ЦенаВключаетНДС, СуммаПереоценки - СуммаНДСПереоценки, СуммаПереоценки);
			
			// если нечего переоценивать, то выходим
			Если СуммаПереоценки = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяЗапись = Добавить();
			НоваяЗапись.ВидДвижения   = ?(СуммаПереоценки > 0, ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход);
			НоваяЗапись.Период        = ДокументОбъект.Дата;
			НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
			НоваяЗапись.Партия        = ТекСтрока.Партия;
			НоваяЗапись.СтатусПартии  = ТекСтрока.СтатусПартии;
			НоваяЗапись.СкладКомпании = ТекСтрока.СкладКомпании;
			НоваяЗапись.Автомобиль    = ТекСтрока.Автомобиль;
			НоваяЗапись.ХозОперация   = ДокументОбъект.ХозОперация;
			НоваяЗапись.Проект   	  = ДокументОбъект.Проект;
			НоваяЗапись.Количество    = 0;
			
			// суммы
			НоваяЗапись.Сумма          = Окр(?(СуммаПереоценки > 0, СуммаПереоценки, -СуммаПереоценки), 2);
			НоваяЗапись.СуммаУпр       = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.Сумма, ВалютаРегл, КурсРегл, ВалютаУпр, КурсУпр), 2);
			НоваяЗапись.СуммаНДС       = Окр(?(СуммаНДСПереоценки > 0, СуммаНДСПереоценки, -СуммаНДСПереоценки), 2);
			НоваяЗапись.СуммаНДСУпр    = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.СуммаНДС, ВалютаРегл, КурсРегл, ВалютаУпр, КурсУпр), 2);
			НоваяЗапись.СуммаБезНДС    = Окр(?(СуммаБезНДСПереоценки > 0, СуммаБезНДСПереоценки, -СуммаБезНДСПереоценки), 2);
			НоваяЗапись.СуммаБезНДСУпр = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.СуммаБезНДС, ВалютаРегл, КурсРегл, ВалютаУпр, КурсУпр), 2);
			НадоПереоценить            = НадоПереоценить - Мин(НадоПереоценить, ТекСтрока.Количество);
			
			// удалим ненужные строки
			ТаблицаПартий.Удалить(ТекСтрока);
			Если НадоПереоценить = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	// запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	Если ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	// убиваем циклическую ссылку
	ДокументОбъект                = Неопределено;
	РезультатЗапросаПоАвтомобилям = Неопределено;
	СкладКомпании                 = Неопределено;
	СкладПолучатель               = Неопределено;
	Партия                        = Неопределено;
	ШапкаДокумента                = Неопределено;

	Возврат Истина;
КонецФункции

// Формирует движения по сторнированию прихода/расхода
// ВидДвижения - ВидДвиженияРегистраНакопления. Если Приход, тогда у нас возврат от поставщика иначе - от покупателя
// Возвращает Истина - все хорошо, Ложь - чего-то не так.
Функция ВозвратАвтомобилей(ВидДвижения) Экспорт
	ВсеОК = Истина;
	
	ПартииУказаны = ЗначениеЗаполнено(Партия);
	
	// Получим таблицу состава автомобилей
	Если (РезультатЗапросаПоАвтомобилям = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса") И ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей(ВидДвиженияНакопления.Расход);
	КонецЕсли;
	
	// Если передали результат запроса, то выгрузим в таблицу значений
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоАвтомобилям = РезультатЗапросаПоАвтомобилям.Выгрузить();
	КонецЕсли;
	
	Если ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		// ВОЗВРАТ ПОСТАВЩИКУ
		// Получим режим возврата.
		РежимВозврата = ПраваИНастройкиПользователя.Значение("РежимСписанияПриВозвратеПоставщику", ДокументОбъект);
		ОтрицательныеОстаткиРазрешены = (ПраваИНастройкиПользователя.Значение("РазрешитьОтрицательныеСкладскиеОстатки", ДокументОбъект) <> Перечисления.ВидыРазрешенныхОтрицательныхОстатков.Запрещены);
		
		// Получим таблицу партий.
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ПоступлениеАвтомобилей) В (&Партии)
		|		  ИЛИ ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ВводОстатковАвтомобилей) В (&Партии)
		|			ТОГДА 0
		|		КОГДА ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ПоступлениеАвтомобилей).Контрагент = &Контрагент
		|		  ИЛИ ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ВводОстатковАвтомобилей).Контрагент = &Контрагент
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ПорядокСписанияПартий,
		|	ОстаткиАвтомобилейОстатки.Автомобиль,
		|	ОстаткиАвтомобилейОстатки.Партия КАК Партия,
		|	ОстаткиАвтомобилей.СтавкаНДС,
		|	СРЕДНЕЕ(ОстаткиАвтомобилейОстатки.КоличествоОстаток) КАК Количество,
		|	СРЕДНЕЕ(ОстаткиАвтомобилейОстатки.СуммаОстаток) КАК Сумма,
		|	СРЕДНЕЕ(ОстаткиАвтомобилейОстатки.СуммаНДСОстаток) КАК СуммаНДС,
		|	СРЕДНЕЕ(ОстаткиАвтомобилейОстатки.СуммаБезНДСОстаток) КАК СуммаБезНДС,
		|	СРЕДНЕЕ(ОстаткиАвтомобилейОстатки.СуммаУпрОстаток) КАК СуммаУпр,
		|	СРЕДНЕЕ(ОстаткиАвтомобилейОстатки.СуммаНДСУпрОстаток) КАК СуммаНДСУпр,
		|	СРЕДНЕЕ(ОстаткиАвтомобилейОстатки.СуммаБезНДСУпрОстаток) КАК СуммаБезНДСУпр
		|ИЗ
		|	РегистрНакопления.ОстаткиАвтомобилей.Остатки(
		|		&Момент,
		|		СкладКомпании = &СкладКомпании
		|		    И Автомобиль В (&Автомобиль)
		|		    И СтатусПартии = &СтатусПартии
		|	) КАК ОстаткиАвтомобилейОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
		|		ПО ОстаткиАвтомобилейОстатки.Партия = ОстаткиАвтомобилей.Партия
		|			И ОстаткиАвтомобилейОстатки.Автомобиль = ОстаткиАвтомобилей.Автомобиль
		|			И ОстаткиАвтомобилейОстатки.Партия = ОстаткиАвтомобилей.Регистратор
		|			И ОстаткиАвтомобилейОстатки.СкладКомпании = ОстаткиАвтомобилей.СкладКомпании
		|			И ОстаткиАвтомобилейОстатки.СтатусПартии = ОстаткиАвтомобилей.СтатусПартии
		|			И (ОстаткиАвтомобилей.ВидДвижения = &ВидДвиженияПриход)";
		Если РежимВозврата <> Перечисления.РежимыСписанияПриВозврате.ПоОстаткамТоваров Тогда
			Если РежимВозврата = Перечисления.РежимыСписанияПриВозврате.ТолькоПоУказаннойПартии Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|ГДЕ
				|	ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ПоступлениеАвтомобилей) В (&Партии)
				|	ИЛИ ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ВводОстатковАвтомобилей) В (&Партии)";
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
				|ГДЕ
				|	ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ПоступлениеАвтомобилей).Контрагент=&Контрагент
				|	ИЛИ ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ВводОстатковАвтомобилей).Контрагент=&Контрагент";
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ПоступлениеАвтомобилей) В (&Партии)
		|		  ИЛИ ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ВводОстатковАвтомобилей) В (&Партии)
		|			ТОГДА 0
		|		КОГДА ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ПоступлениеАвтомобилей).Контрагент = &Контрагент
		|		  ИЛИ ВЫРАЗИТЬ(ОстаткиАвтомобилейОстатки.Партия КАК Документ.ВводОстатковАвтомобилей).Контрагент = &Контрагент
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ,
		|	ОстаткиАвтомобилейОстатки.Автомобиль,
		|	ОстаткиАвтомобилейОстатки.Партия,
		|	ОстаткиАвтомобилей.СтавкаНДС
		|
		|УПОРЯДОЧИТЬ ПО ОстаткиАвтомобилейОстатки.Автомобиль,ПорядокСписанияПартий ВОЗР,ОстаткиАвтомобилейОстатки.Партия УБЫВ";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Момент"            , ДокументОбъект.МоментВремени());
		Запрос.УстановитьПараметр("СкладКомпании"     , СкладКомпании);
		Запрос.УстановитьПараметр("Автомобиль"        , РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку("Автомобиль"));
		Запрос.УстановитьПараметр("СтатусПартии"      , СтатусПартии);
		Запрос.УстановитьПараметр("Партии"            , РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку("Партия"));
		Запрос.УстановитьПараметр("Контрагент"        , ДокументОбъект.Контрагент);
		Запрос.УстановитьПараметр("ВидДвиженияПриход" , ВидДвиженияНакопления.Приход);
		
		// Наложим блокировку на считываемые данные
		СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ОстаткиАвтомобилей");
		СтруктураПараметровБлокировки.Вставить("ИсточникДанных", РезультатЗапросаПоАвтомобилям);
		
		ЗначенияБлокировки = Новый Соответствие;
		ЗначенияБлокировки.Вставить("Период",      Новый Диапазон(, ДокументОбъект.Дата)); 
		ЗначенияБлокировки.Вставить("СкладКомпании", СкладКомпании);
		ЗначенияБлокировки.Вставить("СтатусПартии", СтатусПартии);
		
		ОписаниеИсточника = Новый Соответствие;
		ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
		
		ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);

		ТаблицаПартий = Запрос.Выполнить().Выгрузить();
		
		// Структура отбора
		СтруктураОтбора = Новый Структура("Автомобиль");
		
		// Возвращаем
		Для Каждого СтрокаАвтомобиль Из РезультатЗапросаПоАвтомобилям Цикл
			НадоВернуть = СтрокаАвтомобиль.Количество;
			
			// Ищем поступившие партии
			СтруктураОтбора.Автомобиль = СтрокаАвтомобиль.Автомобиль;
			МассивНайденныхСтрок       = ТаблицаПартий.НайтиСтроки(СтруктураОтбора);
			
			// Инициализируем переменные для расчета усредненной цены списанных партий
			ОбщаяСумма = 0;
			ОбщаяСуммаНДС = 0;
			ОбщаяСуммаБезНДС = 0;
			ОбщаяСуммаУпр = 0;
			ОбщаяСуммаНДСУпр = 0;
			ОбщаяСуммаБезНДСУпр = 0;
			ОбщееКоличество = 0;
			ЕстьПартииТоваров = Ложь;
			
			Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
				ТекСтрока = МассивНайденныхСтрок[Сч];
				Если ЗначениеЗаполнено(СтрокаАвтомобиль.Партия) И СтрокаАвтомобиль.Партия <> ТекСтрока.Партия Тогда
					Продолжить;
				КонецЕсли;
				
				ЕстьПартииТоваров = Истина; 
				
				НоваяЗапись = Добавить();
				НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период        = ДокументОбъект.Дата;
				НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
				НоваяЗапись.Партия        = ТекСтрока.Партия;
				НоваяЗапись.СтатусПартии  = СтатусПартии;
				НоваяЗапись.СкладКомпании = СкладКомпании;
				НоваяЗапись.Автомобиль    = ТекСтрока.Автомобиль;
				НоваяЗапись.ХозОперация   = ДокументОбъект.ХозОперация;
				НоваяЗапись.СтавкаНДС     = ТекСтрока.СтавкаНДС;
				НоваяЗапись.Проект        = ДокументОбъект.Проект;
				
				Попытка 
					НоваяЗапись.ДокументПродажи = ШапкаДокумента.ДокументПродажи;
				Исключение
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Документ продажи""'"),
						УровеньЖурналаРегистрации.Предупреждение,
						, ШапкаДокумента.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				КонецПопытки;
				
				// Возвращаем
				Если ТекСтрока.Количество > 0 Тогда
					НоваяЗапись.Количество = -Мин(НадоВернуть, ТекСтрока.Количество);
					НоваяЗапись.Сумма      = Окр(-?(ТекСтрока.Количество < НадоВернуть, 
						ТекСтрока.Сумма, ТекСтрока.Сумма / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаНДС   = Окр(-?(ТекСтрока.Количество < НадоВернуть, 
						ТекСтрока.СуммаНДС, ТекСтрока.СуммаНДС / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаБезНДС = Окр(-?(ТекСтрока.Количество < НадоВернуть, 
						ТекСтрока.СуммаБезНДС, ТекСтрока.СуммаБезНДС / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаУпр   = Окр(-?(ТекСтрока.Количество < НадоВернуть, 
						ТекСтрока.СуммаУпр, ТекСтрока.СуммаУпр / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаНДСУпр = Окр(-?(ТекСтрока.Количество < НадоВернуть, 
						ТекСтрока.СуммаНДСУпр, ТекСтрока.СуммаНДСУпр / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаБезНДСУпр = Окр(-?(ТекСтрока.Количество < НадоВернуть, 
						ТекСтрока.СуммаБезНДСУпр, ТекСтрока.СуммаБезНДСУпр / ТекСтрока.Количество * НадоВернуть), 2);
					
				ИначеЕсли ТекСтрока.Количество < 0 Тогда // В этом случае вернем все, что есть в партии
					НоваяЗапись.Количество = -ТекСтрока.Количество;
					НоваяЗапись.Сумма = Окр(-ТекСтрока.Сумма, 2);
					НоваяЗапись.СуммаНДС = Окр(-ТекСтрока.СуммаНДС, 2);
					НоваяЗапись.СуммаБезНДС = Окр(-ТекСтрока.СуммаБезНДС, 2);
					НоваяЗапись.СуммаУпр = Окр(-ТекСтрока.СуммаУпр, 2);
					НоваяЗапись.СуммаНДСУпр = Окр(-ТекСтрока.СуммаНДСУпр, 2);
					НоваяЗапись.СуммаБезНДСУпр = Окр(-ТекСтрока.СуммаБезНДСУпр, 2);
				КонецЕсли;
				
				// Запомним удельные значения списания для отрицательной партии товаров
				ОбщаяСумма      = ОбщаяСумма + НоваяЗапись.Сумма;
				ОбщаяСуммаНДС   = ОбщаяСуммаНДС + НоваяЗапись.СуммаНДС;
				ОбщаяСуммаБезНДС = ОбщаяСуммаБезНДС + НоваяЗапись.СуммаБезНДС;
				ОбщаяСуммаУпр   = ОбщаяСуммаУпр + НоваяЗапись.СуммаУпр;
				ОбщаяСуммаНДСУпр = ОбщаяСуммаНДСУпр + НоваяЗапись.СуммаНДСУпр;
				ОбщаяСуммаБезНДСУпр = ОбщаяСуммаБезНДСУпр + НоваяЗапись.СуммаБезНДСУпр;
				ОбщееКоличество = ОбщееКоличество + НоваяЗапись.Количество;
				
				// Удалим ненужные строки
				ТаблицаПартий.Удалить(ТекСтрока);
				
				// Уменьшаем количество которое надо списать
				НадоВернуть = НадоВернуть + НоваяЗапись.Количество;
				Если НадоВернуть <= 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			// Проверим чего осталось
			Если НадоВернуть > 0 И ОтрицательныеОстаткиРазрешены Тогда
				НоваяЗапись = Добавить();
				НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Приход;
				НоваяЗапись.Период        = ДокументОбъект.Дата;
				НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
				НоваяЗапись.Партия        = ДокументОбъект.Ссылка;
				НоваяЗапись.СтатусПартии  = СтатусПартии;
				НоваяЗапись.СкладКомпании = СкладКомпании;
				НоваяЗапись.Автомобиль    = СтрокаАвтомобиль.Автомобиль;
				НоваяЗапись.ХозОперация   = ДокументОбъект.ХозОперация;
				НоваяЗапись.Проект        = ДокументОбъект.Проект;
				
				Попытка 
					НоваяЗапись.ДокументПродажи = ШапкаДокумента.ДокументПродажи;
				Исключение
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Проведение по партиям. Нет реквизита ""Документ продажи""'"),
						УровеньЖурналаРегистрации.Предупреждение,
						, ШапкаДокумента.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				КонецПопытки;

				НоваяЗапись.Количество    = -НадоВернуть;
				НоваяЗапись.Сумма         = 0;
				НоваяЗапись.СуммаНДС      = 0;
				НоваяЗапись.СуммаБезНДС	  = 0;
				НоваяЗапись.СуммаУпр      = 0;
				НоваяЗапись.СуммаНДСУпр	  = 0;
				НоваяЗапись.СуммаБезНДСУпр = 0;
							
			ИначеЕсли НадоВернуть > 0 Тогда
				// Не удалось вернуть товар
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Автомобиль <%1> не удалось вернуть.'"),
					СтрокаАвтомобиль.Автомобиль
				);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаАвтомобиль.Автомобиль);
				
				ВсеОК = Ложь;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		Если ДокументОбъект.ХозОперация = Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия Тогда
			// ВОЗВРАТ АВТОМОБИЛЕЙ С КОМИССИИ
			Расход = 0;
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	АвтомобилиОтданныеОстатки.Автомобиль,
			|	АвтомобилиОтданныеОстатки.ДокументПередачи,
			|	АвтомобилиОтданныеОстатки.Партия,
			|	АвтомобилиОтданныеОстатки.КоличествоОстаток,
			|	АвтомобилиОтданныеОстатки.СуммаСебестоимостиРеглОстаток,
			|	АвтомобилиОтданныеОстатки.СуммаСебестоимостиНДСРеглОстаток,
			|	АвтомобилиОтданныеОстатки.СуммаСебестоимостиБезНДСРеглОстаток,
			|	АвтомобилиОтданныеОстатки.СуммаСебестоимостиУпрОстаток,
			|	АвтомобилиОтданныеОстатки.СуммаСебестоимостиНДСУпрОстаток,
			|	АвтомобилиОтданныеОстатки.СуммаСебестоимостиБезНДСУпрОстаток,
			|	ВЫБОР
			|		КОГДА АвтомобилиОтданныеОстатки.СуммаНДСОстаток = 0
			|				ИЛИ АвтомобилиОтданныеОстатки.СуммаОстаток = 0
			|			ТОГДА 0
			|		ИНАЧЕ АвтомобилиОтданныеОстатки.СуммаНДСОстаток * 100 / АвтомобилиОтданныеОстатки.СуммаОстаток
			|	КОНЕЦ КАК СтавкаНДС
			|ИЗ
			|	РегистрНакопления.АвтомобилиОтданные.Остатки(
			|			&НаМомент,
			|			Автомобиль В (&СписокАвто)
			|				И Контрагент = &Контрагент
			|				И ДоговорВзаиморасчетов = &Договор) КАК АвтомобилиОтданныеОстатки
			|";
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("НаМомент"   , ДокументОбъект.Дата);
			Запрос.УстановитьПараметр("СписокАвто" , РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку("Автомобиль"));
			Запрос.УстановитьПараметр("Контрагент" , ДокументОбъект.Контрагент);
			Запрос.УстановитьПараметр("Договор"    , ДокументОбъект.ДоговорВзаиморасчетов);
			РезультатЗапросаПоОтданным = Запрос.Выполнить();
			
			// Наложим блокировку на считываемые данные
			СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "АвтомобилиОтданные");
			СтруктураПараметровБлокировки.Вставить("ИсточникДанных", РезультатЗапросаПоАвтомобилям);
			
			ЗначенияБлокировки = Новый Соответствие;
			ЗначенияБлокировки.Вставить("Период",      Новый Диапазон(, ДокументОбъект.Дата)); 
			
			ОписаниеИсточника = Новый Соответствие;
			ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
			
			ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
			
			ТаблицаОтданных   = РезультатЗапросаПоОтданным.Выгрузить();
			ТаблицаАвтомобили = РезультатЗапросаПоАвтомобилям;
			
			// создание структуры отбора авто
			СтруктураОтбора = Новый Структура("Автомобиль,ДокументПередачи");
			
			Расход = 0;
			
			Для Каждого ТекСтрока Из ТаблицаАвтомобили Цикл
				СтруктураОтбора.Автомобиль       = ТекСтрока.Автомобиль;
				СтруктураОтбора.ДокументПередачи = ТекСтрока.Партия;
				
				МассивНайденныхСтрок = ТаблицаОтданных.НайтиСтроки(СтруктураОтбора);
				Если МассивНайденныхСтрок.Количество() = 0 Тогда
					НоваяЗапись = Добавить();
					НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Приход;
					НоваяЗапись.Период        = ДокументОбъект.Дата;
					НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
					НоваяЗапись.Автомобиль    = ТекСтрока.Автомобиль;
					НоваяЗапись.СкладКомпании = СкладКомпании;
					НоваяЗапись.СтатусПартии  = Перечисления.СтатусыПартий.ТоварКупленный;
					ПартияВозврата            = ДокументОбъект.Ссылка;
					НоваяЗапись.Партия        = ПартияВозврата;
					НоваяЗапись.Количество    = 1;
					НоваяЗапись.Сумма         = 0;
					НоваяЗапись.СуммаНДС      = 0;
					НоваяЗапись.СуммаБезНДС	  = 0;
					НоваяЗапись.СуммаУпр      = 0;
					НоваяЗапись.СуммаНДСУпр	  = 0;
					НоваяЗапись.СуммаБезНДСУпр = 0;
					НоваяЗапись.ХозОперация   = ДокументОбъект.ХозОперация;
					НоваяЗапись.Проект        = ДокументОбъект.Проект;
					Расход = Расход + НоваяЗапись.СуммаУпр;
				Иначе
					СтрокаОтданных = МассивНайденныхСтрок[0];
					
					НоваяЗапись = Добавить();
					НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
					НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Расход;
					НоваяЗапись.Период        = ДокументОбъект.Дата;
					НоваяЗапись.Автомобиль    = СтрокаОтданных.Автомобиль;
					НоваяЗапись.СкладКомпании = СкладКомпании;
					НоваяЗапись.СтатусПартии  = Перечисления.СтатусыПартий.ТоварКупленный;
					ПартияВозврата            = СтрокаОтданных.Партия;
					НоваяЗапись.Партия        = ПартияВозврата;
					НоваяЗапись.Количество    = -1;
					НоваяЗапись.Сумма         = -СтрокаОтданных.СуммаСебестоимостиРеглОстаток;
					НоваяЗапись.СуммаНДС      = -СтрокаОтданных.СуммаСебестоимостиНДСРеглОстаток;
					НоваяЗапись.СуммаБезНДС	  = -СтрокаОтданных.СуммаСебестоимостиБезНДСРеглОстаток;
					НоваяЗапись.СуммаУпр      = -СтрокаОтданных.СуммаСебестоимостиУпрОстаток;
					НоваяЗапись.СуммаНДСУпр	  = -СтрокаОтданных.СуммаСебестоимостиНДСУпрОстаток;
					НоваяЗапись.СуммаБезНДСУпр = -СтрокаОтданных.СуммаСебестоимостиБезНДСУпрОстаток;
					
					Если СтрокаОтданных.СтавкаНДС <> 0 Тогда
						НоваяЗапись.СтавкаНДС = ТекСтрока.СтавкаНДС;
					Иначе
						НоваяЗапись.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
					КонецЕсли;
					
					НоваяЗапись.ХозОперация = ДокументОбъект.ХозОперация;
					НоваяЗапись.Проект        = ДокументОбъект.Проект;
					
					Расход = Расход + (-НоваяЗапись.СуммаУпр);
				КонецЕсли;
			КонецЦикла;
		Иначе
			// ВОЗВРАТ ОТ ПОКУПАТЕЛЯ
			Расход = 0;
			Запрос = Новый Запрос("
			|ВЫБРАТЬ
			|	ОстаткиАвтомобилей.Автомобиль КАК Автомобиль,
			|	ОстаткиАвтомобилей.Регистратор КАК ДокументОтгрузки,
			|	ОстаткиАвтомобилей.Партия КАК Партия,
			|	ОстаткиАвтомобилей.СтатусПартии КАК СтатусПартии,
			|	ОстаткиАвтомобилей.Количество КАК Количество,
			|	ВЫБОР КОГДА ОстаткиАвтомобилей.СтатусПартии=&СтатусПартииТоварПринятыйКомиссия ТОГДА
			|		ЕСТЬNULL(РегистрНакопленияРеализованныеАвтомобили.КоличествоОстаток,0)
			|	ИНАЧЕ
			|		ОстаткиАвтомобилей.Количество
			|	КОНЕЦ КАК КоличествоРеализованных, 
			|	ОстаткиАвтомобилей.Сумма КАК Сумма,
			|	ОстаткиАвтомобилей.СуммаНДС КАК СуммаНДС,
			|	ОстаткиАвтомобилей.СуммаБезНДС КАК СуммаБезНДС,
			|	ОстаткиАвтомобилей.СуммаУпр КАК СуммаУпр,
			|	ОстаткиАвтомобилей.СуммаНДСУпр КАК СуммаНДСУпр,
			|	ОстаткиАвтомобилей.СуммаБезНДСУпр КАК СуммаБезНДСУпр
			|ИЗ
			|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РеализованныеАвтомобили.Остатки(&НаМомент) КАК РегистрНакопленияРеализованныеАвтомобили
			|		ПО 	ОстаткиАвтомобилей.Автомобиль = РегистрНакопленияРеализованныеАвтомобили.Автомобиль
			|			И ОстаткиАвтомобилей.Партия = РегистрНакопленияРеализованныеАвтомобили.ДокументПередачи
			|ГДЕ
			|	ОстаткиАвтомобилей.Регистратор В (ВЫБРАТЬ РАЗЛИЧНЫЕ ВЫРАЗИТЬ(" + Партия + " КАК Документ.РеализацияАвтомобилей) ИЗ Документ.ВозвратОтПокупателяАвтомобилей.Автомобили ГДЕ Ссылка=&Ссылка И " + Партия + " ССЫЛКА Документ.РеализацияАвтомобилей)
			|   И ОстаткиАвтомобилей.Автомобиль В (&Автомобиль)
			|   И ОстаткиАвтомобилей.ВидДвижения = &ВидДвижения
			|
			|УПОРЯДОЧИТЬ ПО 
			|	ОстаткиАвтомобилей.НомерСтроки УБЫВ");
			Запрос.УстановитьПараметр("НаМомент"                          , ДокументОбъект.Дата);
			Запрос.УстановитьПараметр("Автомобиль"                        , РезультатЗапросаПоАвтомобилям.ВыгрузитьКолонку("Автомобиль"));
			Запрос.УстановитьПараметр("Ссылка"                            , ДокументОбъект.Ссылка);
			Запрос.УстановитьПараметр("ВидДвижения"                       , ВидДвиженияНакопления.Расход);
			Запрос.УстановитьПараметр("СтатусПартииТоварПринятыйКомиссия" , Перечисления.СтатусыПартий.ТоварПринятыйКомиссия);
			
			РезультатЗапросаВозвратОтПокупателя = Запрос.Выполнить();
			
			// Наложим блокировку на считываемые данные
			СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ОстаткиАвтомобилей");
			СтруктураПараметровБлокировки.Вставить("ИсточникДанных", РезультатЗапросаПоАвтомобилям);
			
			ЗначенияБлокировки = Новый Соответствие;
			ЗначенияБлокировки.Вставить("Период",      Новый Диапазон(, ДокументОбъект.Дата));
			
			ОписаниеИсточника = Новый Соответствие;
			ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
			
			ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
			
			ТаблицаОтгрузки = РезультатЗапросаВозвратОтПокупателя.Выгрузить();
			
			// Создадим структуру отбора
			СтруктураОтбора = Новый Структура("Автомобиль,ДокументОтгрузки");
			
			ВалютаРегл     = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(); 
			СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл, ДокументОбъект.Дата);
			КурсРегл       = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
			ВалютаУпр      = Константы.ВалютаУправленческогоУчетаКомпании.Получить(); 
			
			КурсУпр = Неопределено;
			Если ЕстьРеквизит(ДокументОбъект, "КурсВалютыУпр") Тогда
				КурсУпр = ДокументОбъект.КурсВалютыУпр;
			КонецЕсли;
			Если КурсУпр = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
				СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, ДокументОбъект.Дата);
				КурсУпр		   = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
			КонецЕсли;
			
			// Пройдемся по таблице автомобилей и отсторнируем отгрузку
			ТаблицаАвтомобили = РезультатЗапросаПоАвтомобилям;
			Для Каждого СтрокаАвтомобиль Из ТаблицаАвтомобили Цикл
				// Заполним структуру отбора
				СтруктураОтбора.Автомобиль       = СтрокаАвтомобиль.Автомобиль;
				СтруктураОтбора.ДокументОтгрузки = СтрокаАвтомобиль.Партия;
				
				// Поищем строки удовлетворяющие условию
				МассивНайденныхСтрок = ТаблицаОтгрузки.НайтиСтроки(СтруктураОтбора);
				
				// Пройдемся по найденным строкам и вернем товар
				НадоВернуть = СтрокаАвтомобиль.Количество;
				Для Сч = 0 По МассивНайденныхСтрок.ВГраница() Цикл
					ТекСтрока = МассивНайденныхСтрок[Сч];
					
					Возвращаем = Мин(НадоВернуть, ТекСтрока.Количество);
					Если ТекСтрока.КоличествоРеализованных > 0 Тогда
						Возвращаем = Мин(Возвращаем, ТекСтрока.КоличествоРеализованных);
					КонецЕсли; 
					
					НоваяЗапись = Добавить();
					НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Расход;
					НоваяЗапись.Период        = ДокументОбъект.Дата;
					НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
					НоваяЗапись.Автомобиль    = ТекСтрока.Автомобиль;
					НоваяЗапись.СкладКомпании = СкладКомпании;
					Если ТекСтрока.КоличествоРеализованных > 0 Тогда
						НоваяЗапись.СтатусПартии = ТекСтрока.СтатусПартии;
						ПартияВозврата           = ТекСтрока.Партия;
					Иначе
						НоваяЗапись.СтатусПартии = Перечисления.СтатусыПартий.ТоварКупленный;
						ПартияВозврата           = ДокументОбъект.Ссылка;
					КонецЕсли;
					
					НоваяЗапись.Партия      = ПартияВозврата;
					НоваяЗапись.Количество  = -Мин(НадоВернуть, ТекСтрока.Количество);
					НоваяЗапись.Сумма       = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.Сумма, ТекСтрока.Сумма / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаНДС    = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаНДС, ТекСтрока.СуммаНДС / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаБезНДС	= Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаБезНДС, ТекСтрока.СуммаБезНДС / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаУпр    = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаУпр, ТекСтрока.СуммаУпр / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаНДСУпр	= Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаНДСУпр, ТекСтрока.СуммаНДСУпр / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.СуммаБезНДСУпр = Окр(-?(ТекСтрока.Количество < НадоВернуть, ТекСтрока.СуммаБезНДСУпр, ТекСтрока.СуммаБезНДСУпр / ТекСтрока.Количество * НадоВернуть), 2);
					НоваяЗапись.ХозОперация = ДокументОбъект.ХозОперация;
					НоваяЗапись.СтавкаНДС   = СтрокаАвтомобиль.СтавкаНДС;
					НоваяЗапись.Проект      = ДокументОбъект.Проект;
					Расход = Расход + (-НоваяЗапись.СуммаУпр);
					
					// Удалим ненужные строки
					ТаблицаОтгрузки.Удалить(ТекСтрока);
					
					// Уменьшаем количество которое надо списать
					НадоВернуть = НадоВернуть + НоваяЗапись.Количество;
					Если НадоВернуть <= 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				// Если после всяких возвратов у нас еще остался товар, который вернуть не удалось, то
				// оприходуем этот товар на документ возврата
				Если НадоВернуть > 0 Тогда
					НоваяЗапись = Добавить();
					НоваяЗапись.ВидДвижения   = ВидДвиженияНакопления.Приход;
					НоваяЗапись.Период        = ДокументОбъект.Дата;
					НоваяЗапись.Регистратор   = ДокументОбъект.Ссылка;
					НоваяЗапись.Автомобиль    = СтрокаАвтомобиль.Автомобиль;
					НоваяЗапись.СкладКомпании = СкладКомпании;
					НоваяЗапись.СтатусПартии  = Перечисления.СтатусыПартий.ТоварКупленный;
					ПартияВозврата            = ДокументОбъект.Ссылка;
					НоваяЗапись.Партия        = ПартияВозврата;
					НоваяЗапись.Количество    = НадоВернуть;
					НоваяЗапись.Сумма         = 0;
					НоваяЗапись.СуммаНДС      = 0;
					НоваяЗапись.СуммаБезНДС	  = 0;
					НоваяЗапись.СуммаУпр      = 0;
					НоваяЗапись.СуммаНДСУпр	  = 0;
					НоваяЗапись.СуммаБезНДСУпр = 0;
					НоваяЗапись.ХозОперация   = ДокументОбъект.ХозОперация;
					НоваяЗапись.Проект        = ДокументОбъект.Проект;
					
					Расход = Расход + НоваяЗапись.СуммаУпр;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	// Запись движений
	ЗаписыватьДвижения = ?(ЗаписыватьДвижения = Неопределено, Истина, ЗаписыватьДвижения);
	Если ВсеОК И ЗаписыватьДвижения Тогда
		Записать();
	КонецЕсли;
	
	РезультатЗапросаПоАвтомобилям = Неопределено;
	СтруктураДопРасходов          = Неопределено;
	СкладКомпании                 = Неопределено;
	СкладПолучатель               = Неопределено;
	СтатусПартии                  = Неопределено;
	РежимВозврата                 = Неопределено;
	Партия                        = Неопределено;
	ДокументОбъект                = Неопределено;
	ШапкаДокумента                = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает результат запроса по таблице автомобилей
Функция ПолучитьТаблицуАвтомобилей(ВидДвижения)
	// получим результат запроса по таблице автомобилей
	ВидДок = ДокументОбъект.Метаданные().Имя;
	ЕстьГТД = ЕстьРеквизит(ДокументОбъект, "ГТД", "Автомобили");
	
	Запрос = Новый Запрос();
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументАвтомобили.Автомобиль КАК Автомобиль,
	|	" + ?(СкладКомпании = Неопределено, "ДокументАвтомобили.МестоРазмещения", "&СкладКомпании") + " КАК СкладКомпании,
	|	ДокументАвтомобили.СтавкаНДС КАК СтавкаНДС";
	
	Если ТипЗнч(Партия) = Тип("Строка") Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	,ДокументАвтомобили." + Партия + " КАК Партия
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	,&Партия КАК Партия
		|";
	КонецЕсли;
	
	Если ЕстьГТД Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	,ДокументАвтомобили.ГТД КАК ГТД";
	КонецЕсли;
	
	// Если Приходовать Тогда
	ТекстЗапроса = ТекстЗапроса + "
	|	,СУММА(ДокументАвтомобили.Количество) КАК Количество
	|";
	
	Если ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		// При приходе суммы берем из документа
		ТекстЗапроса = ТекстЗапроса + ",
		|Сумма(ДокументАвтомобили.СуммаВсего) КАК СуммаВсего,
		|Сумма(ДокументАвтомобили.СуммаНДС) КАК СуммаНДС";
	КонецЕсли;
	
	Если ТипЗнч(СуммаПродажи) = Тип("Строка") Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	,СУММА(ДокументАвтомобили." + СуммаПродажи + ") КАК СуммаПродажи
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	Документ." + ВидДок + ".Автомобили КАК ДокументАвтомобили
	|ГДЕ
	|	ДокументАвтомобили.Ссылка=&Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументАвтомобили.Автомобиль,
	|	ДокументАвтомобили.СтавкаНДС
	|	" + ?(СкладКомпании = Неопределено, ",ДокументАвтомобили.МестоРазмещения", ",&СкладКомпании") + "
	|	" + ?(ТипЗнч(Партия) = Тип("Строка"), ",ДокументАвтомобили." + Партия, ",&Партия") + "
	|	" + ?(ЕстьГТД, ",ГТД", "") + "
	|";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка"        , ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СкладКомпании" , СкладКомпании);
	Запрос.УстановитьПараметр("Партия"        , Партия);

	Возврат Запрос.Выполнить();
КонецФункции

// Получает наличие автомобилей на складах
Функция ПолучитьОстаткиАвтомобилей(ОстаткиНаСкладе, СтатусПартииОстатка = Неопределено, УчитыватьТовары = Истина)
	Запрос = Новый Запрос();
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОстаткиАвтомобилейОстатки.Автомобиль КАК Автомобиль,
	|	ОстаткиАвтомобилейОстатки.СкладКомпании КАК СкладКомпании,
	|	ОстаткиАвтомобилейОстатки.СтатусПартии КАК СтатусПартии,
	|	ОстаткиАвтомобилейОстатки.Партия КАК Партия,
	|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.КоличествоОстаток,0) КАК Количество,
	|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.СуммаОстаток,0) КАК Сумма,
	|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.СуммаНДСОстаток,0) КАК СуммаНДС,
	|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.СуммаБезНДСОстаток,0) КАК СуммаБезНДС,
	|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.СуммаУпрОстаток,0) КАК СуммаУпр,
	|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.СуммаНДСУпрОстаток,0) КАК СуммаНДСУпр,
	|	ЕСТЬNULL(ОстаткиАвтомобилейОстатки.СуммаБезНДСУпрОстаток,0) КАК СуммаБезНДСУпр
	|ИЗ 
	|	РегистрНакопления.ОстаткиАвтомобилей.Остатки(&Момент,
	|		Автомобиль В (&Автомобили)
	|	" + ?(ОстаткиНаСкладе = Неопределено, "", "И СкладКомпании=&СкладКомпании") + "
	|	" + ?(СтатусПартииОстатка = Неопределено, "", "И СтатусПартии=&СтатусПартии") + "
	|	" + ?(УчитыватьТовары, "", "	И ТИПЗНАЧЕНИЯ(Партия) <> ТИП(Документ.ПоступлениеТоваров) 
	|								И ТИПЗНАЧЕНИЯ(Партия) <> ТИП(Документ.ПересортицаТоваров)
	|								И ТИПЗНАЧЕНИЯ(Партия) <> ТИП(Документ.ПеремещениеТоваров)
	|								И ТИПЗНАЧЕНИЯ(Партия) <> ТИП(Документ.Инвентаризация)
	|								И ТИПЗНАЧЕНИЯ(Партия) <> ТИП(Документ.ВводОстатковТоваров)") + ") КАК ОстаткиАвтомобилейОстатки
	|";
	
	// Наложим блокировку на считываемые данные
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрНакопления", "ОстаткиАвтомобилей");
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, ДокументОбъект.Дата)); 
	Если ОстаткиНаСкладе <> Неопределено Тогда
		ЗначенияБлокировки.Вставить("СкладКомпании", ОстаткиНаСкладе); 
	КонецЕсли;
	Если СтатусПартииОстатка <> Неопределено Тогда
		Если ТипЗнч(СтатусПартииОстатка) = Тип("Массив") Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И СтатусПартии=&СтатусПартии", "И СтатусПартии В(&СтатусПартии)");
		Иначе
			ЗначенияБлокировки.Вставить("СтатусПартии", СтатусПартииОстатка); 
		КонецЕсли;
	КонецЕсли;
	СписокАвтомобилей = РезультатЗапросаПоАвтомобилям;
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		СписокАвтомобилей = СписокАвтомобилей.Выгрузить();
	КонецЕсли;
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", СписокАвтомобилей);
	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Автомобиль", "Автомобиль");
	
	Запрос.Текст = ТекстЗапроса;
	Если ГраницаРасчетаОстатков = Неопределено Тогда
		ГраницаЗапроса = Новый Граница(ДокументОбъект.МоментВремени(), ВидГраницы.Исключая);
	Иначе
		ГраницаЗапроса = ГраницаРасчетаОстатков;
	КонецЕсли;
	Запрос.УстановитьПараметр("Момент"        , ГраницаЗапроса);
	Запрос.УстановитьПараметр("Автомобили"    , СписокАвтомобилей.ВыгрузитьКолонку("Автомобиль"));
	Запрос.УстановитьПараметр("СкладКомпании" , ОстаткиНаСкладе);
	Запрос.УстановитьПараметр("СтатусПартии"  , СтатусПартииОстатка);
	
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

#КонецОбласти

#Область Инициализация

///////////////////////////////////////////////////////////////////////
// Инициализация переменных модуля набора записей

РежимПроведения               = РежимПроведенияДокумента.Оперативный;

ДокументОбъект                = Неопределено; // Обязательный к заполнению перед началом проведения
РезультатЗапросаПоАвтомобилям = Неопределено;
СкладКомпании                 = Неопределено;
ШапкаДокумента                = Неопределено;
РежимДопРасходы               = 0;
СтруктураДопРасходов          = Неопределено;
ГраницаРасчетаОстатков        = Неопределено;
СторноПриход                  = Неопределено;
РасчетыСКонтрагентами = Неопределено;

#КонецОбласти

#КонецЕсли