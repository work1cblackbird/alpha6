// Модуль менеджера регистра накоплений "Остатки автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Функция выполняет проверку, что автомобиль отсутствует на остатках по различным регистрам
//
// Параметры:
// ЭтотОбъект - ДокументОбъект, документ, для которого производится действие
// Отказ 	 - булево, признак отказа от действия
//
// Возвращаемое значение:
// Результат - Булево - Признак необходимости дальнейшей обработки (статус - отработано или нет)
//       для определения возможности дальнейшей работы приватного обработчика
//
Функция ПроверитьОстаткиАвтомобилей(ЭтотОбъект, Отказ) Экспорт
	
	Результат = Истина;
	
	Запрос = Новый Запрос();
	ВидДок = ЭтотОбъект.Метаданные().Имя;
	Запрос.Текст = "ВЫБРАТЬ
	             |	ДокументАвтомобили.Автомобиль КАК Автомобиль
	             |ПОМЕСТИТЬ ТаблицаАвтомобилей
	             |ИЗ
	             |	Документ." + ВидДок + ".Автомобили КАК ДокументАвтомобили
	             |ГДЕ
	             |	ДокументАвтомобили.Ссылка = &Ссылка" + ?(ВидДок = "ИнвентаризацияАвтомобилей", " И (ДокументАвтомобили.КоличествоУчет-Количество)>0", "") + "
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ОстаткиАвтомобилейОстатки.Автомобиль КАК Автомобиль,
	             |	ОстаткиАвтомобилейОстатки.КоличествоОстаток КАК Остаток,
	             |	1 КАК ФлагРегистра
	             |ИЗ
	             |	РегистрНакопления.ОстаткиАвтомобилей.Остатки(
	             |			&Момент,
	             |			Автомобиль В
	             |				(ВЫБРАТЬ
	             |					ТаблицаАвтомобилей.Автомобиль
	             |				ИЗ
	             |					ТаблицаАвтомобилей)) КАК ОстаткиАвтомобилейОстатки
				 |
				 |ОБЪЕДИНИТЬ ВСЕ
				 |
				 |ВЫБРАТЬ
	             |	ПрочиеАктивыВЭксплуатацииОстатки.Автомобиль КАК Автомобиль,
	             |	ПрочиеАктивыВЭксплуатацииОстатки.КоличествоОстаток КАК Остаток,
	             |	4 КАК ФлагРегистра
	             |ИЗ
	             |	РегистрНакопления.ПрочиеАктивыВЭксплуатации.Остатки(
	             |			&Момент,
	             |			Автомобиль В
	             |				(ВЫБРАТЬ
	             |					ТаблицаАвтомобилей.Автомобиль
	             |				ИЗ
	             |					ТаблицаАвтомобилей)) КАК ПрочиеАктивыВЭксплуатацииОстатки";
				 
	Если ЭтотОбъект.ХозОперация <> Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателяКомиссия
		И ЭтотОбъект.ХозОперация <> Справочники.ХозОперации.ПоступлениеАвтомобилейКомиссия Тогда
		Запрос.Текст = Запрос.Текст + "			 
					 |ОБЪЕДИНИТЬ ВСЕ
					 |
					 |ВЫБРАТЬ
					 |	АвтомобилиОтданныеОстатки.Автомобиль,
					 |	АвтомобилиОтданныеОстатки.КоличествоОстаток,
					 |	2
					 |ИЗ
					 |	РегистрНакопления.АвтомобилиОтданные.Остатки(
					 |			&Момент,
					 |			Автомобиль В
					 |				(ВЫБРАТЬ
					 |					ТаблицаАвтомобилей.Автомобиль
					 |				ИЗ
					 |					ТаблицаАвтомобилей)) КАК АвтомобилиОтданныеОстатки";
	КонецЕсли;
	
	Если ЭтотОбъект.ХозОперация <> Справочники.ХозОперации.ВозвратАвтомобилейОтПокупателя Тогда			 
		Запрос.Текст = Запрос.Текст + " 			 
		             |ОБЪЕДИНИТЬ ВСЕ
		             |
		             |ВЫБРАТЬ
		             |	РеализованныеАвтомобилиОстатки.Автомобиль,
		             |	РеализованныеАвтомобилиОстатки.КоличествоОстаток,
		             |	3
		             |ИЗ
		             |	РегистрНакопления.РеализованныеАвтомобили.Остатки(
		             |			&Момент,
		             |			Автомобиль В
		             |				(ВЫБРАТЬ
		             |					ТаблицаАвтомобилей.Автомобиль
		             |				ИЗ
		             |					ТаблицаАвтомобилей)) КАК РеализованныеАвтомобилиОстатки";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Момент", Новый Граница(ЭтотОбъект.МоментВремени(), ВидГраницы.Исключая));
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПолеАвтомобиль = "Автомобиль"; ТЧАвтомобили = "Автомобили";
	ЕстьРеквизитТЧАвтомобиль = ЕстьРеквизит(ЭтотОбъект, ПолеАвтомобиль, ТЧАвтомобили);
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Остаток > 0  Тогда
			Отказ = Истина;
			Результат = Ложь;
			Если Выборка.ФлагРегистра = 1 Тогда
				ТекстОписаниеРегистра = "уже имеется на складе.";
			ИначеЕсли Выборка.ФлагРегистра = 2 Тогда
				ТекстОписаниеРегистра = "передавался на реализацию.";
			ИначеЕсли Выборка.ФлагРегистра = 3 Тогда
				ТекстОписаниеРегистра = "был взят на комиссию.";
			ИначеЕсли Выборка.ФлагРегистра = 4 Тогда
				ТекстОписаниеРегистра = "находится в эксплуатации.";
			КонецЕсли;
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Автомобиль <%1> %2 Повторный приход автомобиля недопустим.'"),
				СокрЛП(Выборка.Автомобиль),
				ТекстОписаниеРегистра
			);
			ПолеОбъекта = ПолеАвтомобиль;
			Если ЕстьРеквизитТЧАвтомобиль Тогда
				НайденнаяСтрока = ЭтотОбъект[ТЧАвтомобили].Найти(Выборка.Автомобиль, ПолеАвтомобиль);
				Если НайденнаяСтрока <> Неопределено Тогда
					ИндексСтроки = НайденнаяСтрока.НомерСтроки-1;
					ПолеОбъекта = СтрШаблон("%1[%2].%3", ТЧАвтомобили, ИндексСтроки, ПолеАвтомобиль);	
				КонецЕсли;
			КонецЕсли;
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект.Ссылка,
				ПолеОбъекта);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецЕсли