// Модуль набора записей регистра накоплений "Продажи автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Покупатель Экспорт;                    // Ссылка на контрагента
Перем ДоговорВзаиморасчетов Экспорт;         // Ссылка на договор взаиморасчетов с контрагентом
Перем СкладКомпании Экспорт;                 // Ссылка на склад компании
Перем ДокументПродажи Экспорт;               // Документ продажи
Перем Комиссия Экспорт;                      // Булево. Истина - продажи комиссионером, Ложь - продажи наши
Перем Сторно Экспорт;                        // Булево. Истина - возврат от покупателя
Перем ПодразделениеКомпании Экспорт;         // Ссылка на подразделение компании
Перем ДокументОбъект Экспорт;                // Документа объект выполняющий движения
Перем РезультатЗапросаПоАвтомобилям Экспорт; // Результат запроса по автомобилям
Перем РасчетыСКонтрагентами Экспорт; // Расчеты с контрагентами для формирования суммы продажи

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Получаем то, что продали
//// Продаем - Булево. Истина - продаем товар, Ложь - возвращаем
Функция ПолучитьТаблицуАвтомобилей(Продаем=Истина) Экспорт
	Комиссия = ?(Комиссия = Неопределено, Ложь, Комиссия);
	ВидДок = ДокументОбъект.Метаданные().Имя;

	// посмотрим есть в документе сумма скидки
	ЕстьСкидка          = ЕстьРеквизит(ДокументОбъект, "СуммаСкидки", "Автомобили");
	ЕстьДокументПродажи = ЕстьРеквизит(ДокументОбъект, "ДокументПродажи", "Автомобили");
		
	// формируем запрос 
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДокументАвтомобили.Автомобиль КАК Автомобиль,
		|	"+?(ЕстьДокументПродажи, "ДокументАвтомобили.ДокументПродажи КАК ДокументПродажи,", "")+"
		|	ДокументАвтомобили.СтавкаНДС КАК СтавкаНДС,
		|	"+?(СкладКомпании = Неопределено, "ДокументАвтомобили.МестоРазмещения КАК СкладКомпании,", "")+"
		|	СУММА(ДокументАвтомобили.Количество) КАК Количество,
		|	СУММА(ДокументАвтомобили.СуммаВсего) КАК Сумма,
		|	СУММА(ДокументАвтомобили.СуммаНДС) КАК СуммаНДС,
		|	СУММА("+?(ЕстьСкидка,"ДокументАвтомобили.СуммаСкидки","0")+") КАК СуммаСкидки,
		|	ОстаткиАвтомобилей.Партия КАК ДокументПоставки,
		|	ЕстьNull(ОстаткиАвтомобилей.Партия.Контрагент, Значение(Справочник.Контрагенты.ПустаяСсылка)) КАК Поставщик,
		|	" + ?(Комиссия, "&СтатусПартии", "ОстаткиАвтомобилей.СтатусПартии") + " КАК СтатусПартии,
		|	ДокументАвтомобили.Автомобиль.ГТД КАК ГТД,
		|	ЕСТЬNULL(СУММА(ОстаткиАвтомобилей.СуммаУпр),0) КАК Себестоимость,
		|	ЕСТЬNULL(СУММА(ОстаткиАвтомобилей.Сумма),0) КАК СебестоимостьРегл,
		|	ЕСТЬNULL(СУММА(ОстаткиАвтомобилей.СуммаНДС),0) КАК СуммаНДСВходящий
		|ИЗ
		|	Документ." + ВидДок + ".Автомобили КАК ДокументАвтомобили";
	Если Комиссия Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
		|		ПО ДокументАвтомобили.Автомобиль=ОстаткиАвтомобилей.Автомобиль
		|	 	И ДокументАвтомобили.ДокументПередачи=ОстаткиАвтомобилей.Регистратор
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
		|		ПО (ДокументАвтомобили.Автомобиль = ОстаткиАвтомобилей.Автомобиль
		|	 	И ДокументАвтомобили.Ссылка = ОстаткиАвтомобилей.Регистратор)  
		|";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	ДокументАвтомобили.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументАвтомобили.Автомобиль,
		|	"+?(ЕстьДокументПродажи,"ДокументАвтомобили.ДокументПродажи,","")+"
		|	ДокументАвтомобили.СтавкаНДС,
		|	"+?(СкладКомпании=Неопределено,"ДокументАвтомобили.МестоРазмещения,","")+"
		|	"+?(Комиссия,"","ОстаткиАвтомобилей.СтатусПартии,")+"
		|	ОстаткиАвтомобилей.Партия,
		|    ЕстьNull(ОстаткиАвтомобилей.Партия.Контрагент, Значение(Справочник.Контрагенты.ПустаяСсылка)),
		|	ДокументАвтомобили.Автомобиль.ГТД
		|";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка"       , ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СтатусПартии" , Перечисления.СтатусыПартий.ТоварКупленный);
	Запрос.УстановитьПараметр("Автомобили"   , ДокументОбъект.Автомобили.ВыгрузитьКолонку("Автомобиль"));
	
	Возврат Запрос.Выполнить(); 
	
КонецФункции

// фиксируем продажи
Функция Приход() Экспорт
	Результат = Истина;
	
	ВалютаРегл     = Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить(); 
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл,ДокументОбъект.Дата);
	КурсРегл       = СтруктураКурса.Курс/?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	ВалютаУпр      = Константы.ВалютаУправленческогоУчетаКомпании.Получить(); 
	
	КурсУпр = Неопределено;
	Если ЕстьРеквизит(ДокументОбъект, "КурсВалютыУпр") Тогда
		КурсУпр = ДокументОбъект.КурсВалютыУпр;
	КонецЕсли;
	Если КурсУпр = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КурсУпр) Тогда
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр,ДокументОбъект.Дата);
		КурсУпр        = СтруктураКурса.Курс/?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	КонецЕсли;
	
	// получаем таблицу автомобилей
	Если (РезультатЗапросаПоАвтомобилям = Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("РезультатЗапроса") И ТипЗнч(РезультатЗапросаПоАвтомобилям) <> Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоАвтомобилям = ПолучитьТаблицуАвтомобилей();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоАвтомобилям) = Тип("РезультатЗапроса") Тогда
		ТаблицаАвтомобилей = РезультатЗапросаПоАвтомобилям.Выгрузить();
	Иначе
		ТаблицаАвтомобилей = РезультатЗапросаПоАвтомобилям;
	КонецЕсли;
	
	ЕстьГТД = ЕстьРеквизит(ТаблицаАвтомобилей, "ГТД");
	ЕстьДокументПродажиТоваров = ЕстьРеквизит(ТаблицаАвтомобилей, "ДокументПродажи");
	
	ЗапретПродажиНижеСебестоимости = ПраваИНастройкиПользователя.Значение("ЗапретитьПродажуНижеСебестоимости", ДокументОбъект);
	
	// Пересчитать суммы документа
	ПересчитаныСуммы = Ложь;
	Если Не ПересчитаныСуммы И РасчетыСКонтрагентами <> Неопределено
		И РасчетыСКонтрагентами.Количество() > 0 Тогда
		
		СведенияОВалюте = Новый Структура();
		СведенияОВалюте.Вставить("ВалютаДоговора", ДоговорВзаиморасчетов.ВалютаВзаиморасчетов);
		СведенияОВалюте.Вставить("ВалютаРегл", ВалютаРегл);
		СведенияОВалюте.Вставить("ВалютаУпр", ВалютаУпр);
		СведенияОВалюте.Вставить("КурсРегл", КурсРегл);
		СведенияОВалюте.Вставить("КурсУпр", КурсУпр);
		
		ПересчитаныСуммы = ОбработкаСобытийДокументаСервер.ПересчитанаВВалюту(
			ДокументОбъект,
			ТаблицаАвтомобилей,
			РасчетыСКонтрагентами,
			СведенияОВалюте);
		
	КонецЕсли;
	
	Для Каждого СтрокаАвтомобиля Из ТаблицаАвтомобилей Цикл
		СебестоимостьУпр             = СтрокаАвтомобиля.Себестоимость;
		//СебестоимостьКомплектацияУпр = СтрокаАвтомобиля.СебестоимостьКомплектация;
		Себестоимость                = СтрокаАвтомобиля.СебестоимостьРегл;
		//СебестоимостьКомплектация    = СтрокаАвтомобиля.СебестоимостьКомплектацияРегл;
		Если ПересчитаныСуммы Тогда
			СуммаУпр = СтрокаАвтомобиля.СуммаУпр;
		Иначе
			СуммаУпр = ?(СтрокаАвтомобиля.Сумма = NULL,
				0,
				РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
					СтрокаАвтомобиля.Сумма,
					ДокументОбъект.ВалютаДокумента,
					ДокументОбъект.КурсДокумента,
					ВалютаУпр,
					КурсУпр));
		КонецЕсли;
		
		Если ЗапретПродажиНижеСебестоимости И НЕ Сторно Тогда
			//Если (СебестоимостьУпр + СебестоимостьКомплектацияУпр) > СуммаУпр Тогда
			Если СебестоимостьУпр > СуммаУпр Тогда
				ФорматВыводаСуммы = УправлениеПечатьюПлатформа.ПолучитьФорматВыводаСуммы(ДокументПродажи);
				
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Автомобиль <%1>. Себестоимость автомобиля %2 сумма продажи %3 %4. Продажа ниже себестоимости запрещена.'"),
					СтрокаАвтомобиля.Автомобиль,
					Формат(СебестоимостьУпр, ФорматВыводаСуммы),
					Формат(СуммаУпр, ФорматВыводаСуммы),
					ВалютаУпр
				);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаАвтомобиля.Автомобиль);
				
				Результат = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		НоваяЗапись = Добавить();
		НоваяЗапись.Период                = ДокументОбъект.Дата;
		НоваяЗапись.Регистратор           = ДокументОбъект.Ссылка;
		НоваяЗапись.ПодразделениеКомпании = ПодразделениеКомпании;
		НоваяЗапись.Автомобиль            = СтрокаАвтомобиля.Автомобиль;
		
		Если ДокументПродажи <> Неопределено Тогда
			НоваяЗапись.ДокументПродажи = ДокументПродажи;
		Иначе
			Если ЕстьДокументПродажиТоваров Тогда
				НоваяЗапись.ДокументПродажи = СтрокаАвтомобиля.ДокументПродажи;
			КонецЕсли;
		КонецЕсли;
		
		НоваяЗапись.Поставщик             = СтрокаАвтомобиля.Поставщик;
		НоваяЗапись.Покупатель            = Покупатель;
		НоваяЗапись.СтатусПартии          = СтрокаАвтомобиля.СтатусПартии;
		НоваяЗапись.ХозОперация           = ДокументОбъект.ХозОперация;
		НоваяЗапись.ДоговорВзаиморасчетов = ДоговорВзаиморасчетов;
		
		// Возврат без основания
		Если Сторно И НЕ ЗначениеЗаполнено(НоваяЗапись.ДокументПродажи) Тогда
			НоваяЗапись.ДокументПродажи = ДокументОбъект.Ссылка;
			НоваяЗапись.Поставщик       = Покупатель;
			Если НЕ ЗначениеЗаполнено(СтрокаАвтомобиля.СтатусПартии) Тогда
				НоваяЗапись.СтатусПартии    = Перечисления.СтатусыПартий.ТоварКупленный;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ Комиссия Тогда
			Если СкладКомпании = Неопределено Тогда
				НоваяЗапись.СкладКомпании = СтрокаАвтомобиля.СкладКомпании;
			Иначе
				НоваяЗапись.СкладКомпании = СкладКомпании;
			КонецЕсли;
		КонецЕсли;
		НоваяЗапись.СтавкаНДС = СтрокаАвтомобиля.СтавкаНДС;
		НоваяЗапись.Партия    = СтрокаАвтомобиля.ДокументПоставки;
		НоваяЗапись.ГТД       = Справочники.ГТД.ПустаяСсылка();
		Если ЕстьГТД Тогда
			НоваяЗапись.ГТД = СтрокаАвтомобиля.ГТД;
		КонецЕсли;
		НоваяЗапись.Количество       = СтрокаАвтомобиля.Количество;
		НоваяЗапись.СебестоимостьУпр = Окр(СебестоимостьУпр,2);
		НоваяЗапись.Себестоимость    = Окр(Себестоимость,2);
		
		Если ПересчитаныСуммы Тогда
			НоваяЗапись.Сумма = СтрокаАвтомобиля.Сумма;
			НоваяЗапись.СуммаУпр = СтрокаАвтомобиля.СуммаУпр;
			НоваяЗапись.СуммаНДС = СтрокаАвтомобиля.СуммаНДС;
			НоваяЗапись.СуммаНДСУпр = СтрокаАвтомобиля.СуммаНДСУпр;
			НоваяЗапись.СуммаСкидки = НоваяЗапись.СуммаСкидки;
			НоваяЗапись.СуммаСкидкиУпр = НоваяЗапись.СуммаСкидкиУпр;
		Иначе
			НоваяЗапись.Сумма = Окр(
				?(СтрокаАвтомобиля.Сумма = NULL,
					0,
					РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
						СтрокаАвтомобиля.Сумма,
						ДокументОбъект.ВалютаДокумента,
						ДокументОбъект.КурсДокумента,
						ВалютаРегл,
						КурсРегл)),
				2);
			НоваяЗапись.СуммаСкидки = Окр(
				?(СтрокаАвтомобиля.СуммаСкидки = NULL,
					0,
					РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
						СтрокаАвтомобиля.СуммаСкидки,
						ДокументОбъект.ВалютаДокумента,
						ДокументОбъект.КурсДокумента,
						ВалютаРегл,
						КурсРегл)),
				2);
			НоваяЗапись.СуммаНДС = Окр(
				?(СтрокаАвтомобиля.СуммаНДС = NULL,
					0,
					РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
						СтрокаАвтомобиля.СуммаНДС,
						ДокументОбъект.ВалютаДокумента,
						ДокументОбъект.КурсДокумента,
						ВалютаРегл,КурсРегл)),
				2);
			НоваяЗапись.СуммаУпр = Окр(СуммаУпр,2);
			НоваяЗапись.СуммаСкидкиУпр = Окр(
				?(СтрокаАвтомобиля.СуммаСкидки = NULL,
					0,
					РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
						СтрокаАвтомобиля.СуммаСкидки,
						ДокументОбъект.ВалютаДокумента,
						ДокументОбъект.КурсДокумента,
						ВалютаУпр,
						КурсУпр)),
				2);
			НоваяЗапись.СуммаНДСУпр = Окр(
				?(СтрокаАвтомобиля.СуммаНДС = NULL,
					0,
					РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(
						СтрокаАвтомобиля.СуммаНДС,
						ДокументОбъект.ВалютаДокумента,
						ДокументОбъект.КурсДокумента,
						ВалютаУпр,
						КурсУпр)),
				2);
		КонецЕсли;
		
		НоваяЗапись.ВыручкаБезНДС    = НоваяЗапись.Сумма - НоваяЗапись.СуммаНДС;
		НоваяЗапись.ВыручкаДоПримененияСкидки       = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки;
		НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС = НоваяЗапись.Сумма + НоваяЗапись.СуммаСкидки - НоваяЗапись.СуммаНДС;
		НоваяЗапись.ВыручкаБезНДСУпр = НоваяЗапись.СуммаУпр - НоваяЗапись.СуммаНДСУпр;
		НоваяЗапись.ВыручкаДоПримененияСкидкиУпр       = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр;
		НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр = НоваяЗапись.СуммаУпр + НоваяЗапись.СуммаСкидкиУпр - НоваяЗапись.СуммаНДСУпр;
		
		НоваяЗапись.СуммаНДСВходящий = Окр(СтрокаАвтомобиля.СуммаНДСВходящий,2);
		
		// если возвраты, то сделаем все отрицательным
		Если Сторно Тогда
			НоваяЗапись.Количество       = НоваяЗапись.Количество*?(НоваяЗапись.Количество>0,-1,1);
			НоваяЗапись.СебестоимостьУпр = НоваяЗапись.СебестоимостьУпр*?(НоваяЗапись.СебестоимостьУпр>0,-1,1);
			НоваяЗапись.Себестоимость    = НоваяЗапись.Себестоимость*?(НоваяЗапись.Себестоимость>0,-1,1);
			НоваяЗапись.Сумма            = НоваяЗапись.Сумма*?(НоваяЗапись.Сумма>0,-1,1);
			НоваяЗапись.СуммаСкидки      = НоваяЗапись.СуммаСкидки*?(НоваяЗапись.СуммаСкидки>0,-1,1);
			НоваяЗапись.СуммаУпр         = НоваяЗапись.СуммаУпр*?(НоваяЗапись.СуммаУпр>0,-1,1);
			НоваяЗапись.СуммаНДС         = НоваяЗапись.СуммаНДС*?(НоваяЗапись.СуммаНДС>0,-1,1);
			НоваяЗапись.СуммаНДСВходящий = НоваяЗапись.СуммаНДСВходящий*?(НоваяЗапись.СуммаНДСВходящий>0,-1,1);
			
			НоваяЗапись.ВыручкаБезНДС    = НоваяЗапись.ВыручкаБезНДС * ?(НоваяЗапись.ВыручкаБезНДС>0,-1,1);
			НоваяЗапись.ВыручкаДоПримененияСкидки       = НоваяЗапись.ВыручкаДоПримененияСкидки * ?(НоваяЗапись.ВыручкаДоПримененияСкидки>0,-1,1);
			НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС = НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС * ?(НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДС>0,-1,1);
			
			НоваяЗапись.ВыручкаБезНДСУпр = НоваяЗапись.ВыручкаБезНДСУпр * ?(НоваяЗапись.ВыручкаБезНДСУпр>0,-1,1);
			НоваяЗапись.ВыручкаДоПримененияСкидкиУпр       = НоваяЗапись.ВыручкаДоПримененияСкидкиУпр * ?(НоваяЗапись.ВыручкаДоПримененияСкидкиУпр>0,-1,1);
			НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр = НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр * ?(НоваяЗапись.ВыручкаДоПримененияСкидкиБезНДСУпр>0,-1,1);
		КонецЕсли;
		
		НоваяЗапись.СуммаНДСВходящийУпр    = Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(НоваяЗапись.СуммаНДСВходящий, ВалютаРегл,КурсРегл,ВалютаУпр,КурсУпр),2);
		НоваяЗапись.СебестоимостьБезНДС    = НоваяЗапись.Себестоимость - НоваяЗапись.СуммаНДСВходящий;
		НоваяЗапись.СебестоимостьБезНДСУпр = НоваяЗапись.СебестоимостьУпр - НоваяЗапись.СуммаНДСВходящийУпр;
		
	КонецЦикла;
	
	РезультатЗапросаПоАвтомобилям = Неопределено;
	Покупатель                    = Неопределено;
	ДоговорВзаиморасчетов         = Неопределено;
	СкладКомпании                 = Неопределено;
	ПодразделениеКомпании         = Неопределено;
	ДокументОбъект                = Неопределено;
	РасчетыСКонтрагентами         = Неопределено;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецЕсли