
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбменДаннымиСервер.ФормаУзлаПриСозданииНаСервере(ЭтаФорма, Отказ);
	
	Если Не ЗначениеЗаполнено(Объект.ПравилаОтправкиСправочников) Тогда
		Объект.ПравилаОтправкиСправочников = "АвтоматическаяСинхронизация";
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.ПравилаОтправкиДокументов) Тогда
		Объект.ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация";
	КонецЕсли;
	
	
	РежимСинхронизации = 
		?(Не Объект.РучнойОбмен, "АвтоматическаяСинхронизация", "РучнаяСинхронизация")
	;
	
	РежимСинхронизацииОрганизаций =
		?(Объект.ИспользоватьОтборПоОрганизациям, "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям", "СинхронизироватьДанныеПоВсемОрганизациям")
	;
	
	РежимСинхронизацииДокументов =
		?(Объект.ИспользоватьОтборПоВидамДокументов, "СинхронизироватьДанныеТолькоПоВыбраннымВидамДокументов", "СинхронизироватьДанныеПоВсемДокументам")
	;
	
	РежимЗагрузкиЗаказНаряда = ?(Объект.ЗаказНарядПроизводство, 1, 0);
	
	УстановитьВидимостьНаСервере();
	ОбновитьНаименованиеКомандФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.Организации.Количество() > 0 Тогда
		Если РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям" Тогда
			ТекущийОбъект.ИспользоватьОтборПоОрганизациям = Истина;
		Иначе
			ТекущийОбъект.ИспользоватьОтборПоОрганизациям = Ложь;
			ТекущийОбъект.Организации.Очистить();
		КонецЕсли;
	Иначе
		ТекущийОбъект.ИспользоватьОтборПоОрганизациям = Ложь;
	КонецЕсли;
	
	Если ТекущийОбъект.ВидыДокументов.Количество() > 0 Тогда
		Если РежимСинхронизацииДокументов = "СинхронизироватьДанныеТолькоПоВыбраннымВидамДокументов" Тогда
			ТекущийОбъект.ИспользоватьОтборПоВидамДокументов = Истина;
		Иначе
			ТекущийОбъект.ИспользоватьОтборПоВидамДокументов = Ложь;
			ТекущийОбъект.ВидыДокументов.Очистить();
		КонецЕсли;
	Иначе
		ТекущийОбъект.ИспользоватьОтборПоВидамДокументов = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбменДаннымиСервер.ФормаУзлаПриЗаписиНаСервере(ТекущийОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Оповестить("ЗакрытаФормаУзлаПланаОбмена");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбновитьДанныеОбъекта(ВыбранноеЗначение);
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьОтборПоОрганизациям(Команда)
	
	ТекстЗаголовка = НСтр("ru='Подтверждение'");
	ТекстВопроса   = НСтр("ru='Очистить отбор по организациям?'");
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьОтборПоОрганизациямЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет,,,ТекстЗаголовка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтборПоОрганизациямЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Ответ = Результат;
    Если Ответ=КодВозвратаДиалога.Да Тогда
        Объект.Организации.Очистить();
        УстановитьВидимостьНаСервере();
        ОбновитьНаименованиеКомандФормы();
        Модифицированность = Истина;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтборПоВидамДокументов(Команда)
	
	ТекстЗаголовка = НСтр("ru='Подтверждение'");
	ТекстВопроса   = НСтр("ru='Очистить отбор по видам документов?'");
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьОтборПоВидамДокументовЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет,,,ТекстЗаголовка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтборПоВидамДокументовЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Ответ = Результат;
    Если Ответ=КодВозвратаДиалога.Да Тогда
        Объект.ВидыДокументов.Очистить();
        УстановитьВидимостьНаСервере();
        ОбновитьНаименованиеКомандФормы();
        Модифицированность = Истина;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтборПоВидамДокументовЗапрета(Команда)
	
	ТекстЗаголовка = НСтр("ru='Подтверждение'");
	ТекстВопроса   = НСтр("ru='Очистить отбор по запрету документов повторной загрузки?'");
	Ответ = Неопределено;

	ПоказатьВопрос(
		Новый ОписаниеОповещения("ОчиститьОтборПоВидамДокументовЗагрузкиЗавершение", ЭтотОбъект),
		ТекстВопроса,
		РежимДиалогаВопрос.ДаНет,,,
		ТекстЗаголовка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтборПоВидамДокументовЗагрузкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Ответ = Результат;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ЗапрещенаПовторнаяЗагрузка.Очистить();
		ОбновитьНаименованиеКомандФормы();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПутьКМенеджеруОбменаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	НастройкиДиалога = Новый Структура;
	НастройкиДиалога.Вставить("Фильтр", НСтр("ru = 'Менеджер обмена (*.epf)'") + "|*.epf" );
	
	Оповещение = Новый ОписаниеОповещения("ЗавершениеВыбораФайлаМенеджераОбмена", ЭтотОбъект);
	ОбменДаннымиКлиент.ВыбратьИПередатьФайлНаСервер(Оповещение, НастройкиДиалога, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеВыбораФайлаМенеджераОбмена(Знач РезультатПомещенияФайлов, Знач ДополнительныеПараметры) Экспорт
	
	ОчиститьСообщения();
	
	АдресПомещенногоФайла = РезультатПомещенияФайлов.Хранение;
	ТекстОшибки           = РезультатПомещенияФайлов.ОписаниеОшибки;
	
	Если РезультатПомещенияФайлов.Свойство("ПолноеИмя") Тогда
		Объект.ПутьКМенеджеруОбмена = РезультатПомещенияФайлов.ПолноеИмя;
	Иначе
		Объект.ПутьКМенеджеруОбмена = РезультатПомещенияФайлов.Имя;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтбораПоОрганизациям(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("АдресТаблицыОрганизаций", ПолучитьАдресТабличнойЧасти("Организации"));
	ПараметрыФормы.Вставить("ИмяТаблицыДляЗаполнения", "Организации");
	
	ОткрытьФорму("ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.Форма.ФормаВыбораОрганизаций",
		ПараметрыФормы,
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииОрганизацийПриИзменении(Элемент)
	
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииДокументовПриИзменении(Элемент)
	
	Если РежимСинхронизацииДокументов = "СинхронизироватьДанныеТолькоПоДокументамОтобраннымВручную" Тогда
		РежимСинхронизации = "РучнаяСинхронизация";
	КонецЕсли;
	
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтбораПоВидамДокументов(Команда)
	
	ПараметрыФормы = Новый Структура();
	Если Команда.Имя = "ОткрытьФормуОтбораПоЗапретуДокументов" Тогда
		ПараметрыФормы.Вставить(
			"ВидыДокументов",
			ПолучитьМассивОбъектовТабличнойЧасти("ЗапрещенаПовторнаяЗагрузка", "ИмяОбъектаМетаданных"));
		ПараметрыФормы.Вставить("ИмяТаблицыДляЗаполнения", "ЗапрещенаПовторнаяЗагрузка");
	Иначе
		ПараметрыФормы.Вставить(
			"ВидыДокументов",
			ПолучитьМассивОбъектовТабличнойЧасти("ВидыДокументов", "ИмяОбъектаМетаданных"));
	КонецЕсли;
	
	ОткрытьФорму("ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.Форма.ФормаВыбораВидовДокументов",
		ПараметрыФормы,
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ПереключательОтправлятьНСИАвтоматическиПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательОтправлятьНСИПоНеобходимостиПриИзменении(Элемент)
	
	Если Объект.ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости" 
		И Объект.ПравилаОтправкиДокументов = "НеСинхронизировать" Тогда
		
		Объект.ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация";
		
	КонецЕсли;

	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательОтправлятьНСИНикогдаПриИзменении(Элемент)
	Объект.ПравилаОтправкиДокументов = "НеСинхронизировать";
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательДокументыОтправлятьАвтоматическиПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательДокументыОтправлятьВручнуюПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательДокументыНеОтправлятьПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РежимЗагрузкиЗаказНарядаПриИзменении(Элемент)
	
	Объект.ЗаказНарядПроизводство = (РежимЗагрузкиЗаказНаряда = 1);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НеПередаватьНоменклатурнуюГруппуПриИзменении(Элемент)
	
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеОперацийИСтатейДДСНажатие(Элемент)

	ПараметрыФормы = Новый Структура(); 
	
	ПараметрыФормы.Вставить("СоответствиеОперацийИСтатейДДС", Объект.СоответствиеОперацииИСтатейДДС); 
	ОткрытьФорму("ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.Форма.ФормаСоответствияВидовОперацийСтатьямДДС",
		ПараметрыФормы,
		ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СоответствиеТиповНоменклатурыНажатие(Элемент)
	ПараметрыФормы = Новый Структура(); 
	
	ПараметрыФормы.Вставить("СоответствиеТиповНоменклатуры", Объект.СоответствиеТиповНоменклатуры); 
	ОткрытьФорму("ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.Форма.ФормаСоответствияТиповНоменклатуры",
		ПараметрыФормы,
		ЭтаФорма);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	Элементы.ДатаНачалаВыгрузкиДокументов.Доступность =
		?(Объект.ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация", Истина, Ложь);
		
	Элементы.ГруппаНастройкаОтборовДокументов.Доступность =
		?(Объект.ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация", Истина, Ложь);
		
	Элементы.ПереключательДокументыНеОтправлять.Доступность =
		?(Не Объект.ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости", Истина, Ложь);
		
	Элементы.ГруппаДокументы.Доступность =
		?(Не Объект.ПравилаОтправкиСправочников = "НеСинхронизировать", Истина, Ложь);
		
	ОтборПоВидамДокументовИспользуется = РежимСинхронизацииДокументов = "СинхронизироватьДанныеТолькоПоВыбраннымВидамДокументов";
	ОтборПоВидамДокументовНастроен = Объект.ВидыДокументов.Количество() > 0;
	Элементы.ОткрытьФормуОтбораПоВидамДокументов.Видимость = ОтборПоВидамДокументовИспользуется;
	Элементы.ОчиститьОтборПоВидамДокументов.Видимость = ОтборПоВидамДокументовИспользуется И ОтборПоВидамДокументовНастроен;
	
	Элементы.ГруппаОтборПоОрганизациям.Видимость = Истина;
	ОтборПоОрганизациямИспользуется = РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям";
	ОтборПоОрганизациямНастроен = Объект.Организации.Количество() > 0;
	Элементы.ОткрытьФормуОтбораПоОрганизациям.Видимость = ОтборПоОрганизациямИспользуется;
	Элементы.ОчиститьОтборПоОрганизациям.Видимость = ОтборПоОрганизациямИспользуется И ОтборПоОрганизациямНастроен;
	
	Элементы.ГруппаНоменлатурнаяГруппаПоУмолчанию.ТолькоПросмотр = Объект.НеПередаватьНоменклатурнуюГруппу;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивОбъектовТабличнойЧасти(ИмяТабличнойЧасти, ИмяКолонки)

	Возврат Объект[ИмяТабличнойЧасти].Выгрузить().ВыгрузитьКолонку(ИмяКолонки);

КонецФункции

&НаСервере
Функция ПолучитьАдресТабличнойЧасти(ИмяТабличнойЧасти)
	
	ТаблицаОрганизаций = Объект[ИмяТабличнойЧасти].Выгрузить();
	ТаблицаОрганизаций.Колонки.Добавить("Использовать");
	ТаблицаОрганизаций.ЗаполнитьЗначения(Истина, "Использовать");
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаОрганизаций);
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеОбъекта(СтруктураПараметров)
	
	ИмяТаблицыДляЗаполнения = СтруктураПараметров.ИмяТаблицыДляЗаполнения;
	
	Объект[ИмяТаблицыДляЗаполнения].Очистить();
	
	ТаблицаВыбранныхЗначений = ПолучитьИзВременногоХранилища(СтруктураПараметров.АдресТаблицыВоВременномХранилище);
	Для каждого СтрокаТаблицы Из ТаблицаВыбранныхЗначений Цикл
		Если ИмяТаблицыДляЗаполнения = "СоответствиеОперацииИСтатейДДС" ИЛИ ИмяТаблицыДляЗаполнения = "СоответствиеТиповНоменклатуры" Тогда
			НоваяСтрока = Объект[ИмяТаблицыДляЗаполнения].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		ИначеЕсли СтрокаТаблицы.Использовать Тогда
			НоваяСтрока = Объект[ИмяТаблицыДляЗаполнения].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	УстановитьВидимостьНаСервере();
	ОбновитьНаименованиеКомандФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеКомандФормы()
	
	// Обновим заголовок выбранных организаций
	Если Объект.Организации.Количество() > 0 Тогда
		
		ВыбранныеОрганизации = Объект.Организации.Выгрузить().ВыгрузитьКолонку("Организация");
		НовыйЗаголовокОрганизаций =
			ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.
				СокращенноеПредставлениеКоллекцииЗначений(ВыбранныеОрганизации);
		
	Иначе
		
		НовыйЗаголовокОрганизаций = НСтр("ru = 'Выбрать организации '");
		
	КонецЕсли;
	
	Элементы.ОткрытьФормуОтбораПоОрганизациям.Заголовок = НовыйЗаголовокОрганизаций;
	
	// Обновим заголовок выбранных видов документов
	Если Объект.ВидыДокументов.Количество() > 0 Тогда
		
		ВыбранныеВидыДокументов = Объект.ВидыДокументов.Выгрузить().ВыгрузитьКолонку("Представление");
		НовыйЗаголовокВидовДокументов =
			ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.
				СокращенноеПредставлениеКоллекцииЗначений(ВыбранныеВидыДокументов);
		
	Иначе
		
		НовыйЗаголовокВидовДокументов = НСтр("ru = 'Выбрать виды документов '");
		
	КонецЕсли;
	
	Элементы.ОткрытьФормуОтбораПоВидамДокументов.Заголовок = НовыйЗаголовокВидовДокументов;
	
	// Обновим заголовок повторно запрещенных к загрузке документов
	Если Объект.ЗапрещенаПовторнаяЗагрузка.Количество() > 0 Тогда
		
		ВыбранныеВидыЗапретов = Объект.ЗапрещенаПовторнаяЗагрузка.Выгрузить().ВыгрузитьКолонку("Представление");
		НовыйЗаголовокЗапрещенныхВидовДокументов =
			ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.
				СокращенноеПредставлениеКоллекцииЗначений(ВыбранныеВидыЗапретов);
		
	Иначе
		
		НовыйЗаголовокЗапрещенныхВидовДокументов = НСтр("ru = 'Выбрать виды документов запрета повторной загрузки '");
		
	КонецЕсли;
	
	Элементы.ОткрытьФормуОтбораПоЗапретуДокументов.Заголовок = НовыйЗаголовокЗапрещенныхВидовДокументов;
	
КонецПроцедуры

#КонецОбласти

