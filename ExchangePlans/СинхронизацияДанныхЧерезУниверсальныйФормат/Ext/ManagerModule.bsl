#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ОбменДанными

// Заполняет настройки, влияющие на использование плана обмена.
// 
// Параметры:
//  Настройки - Структура - настройки плана обмена по умолчанию, см. ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию,
//                          описание возвращаемого значения функции.
//
Процедура ПриПолученииНастроек(Настройки) Экспорт
	
	Настройки.ИмяКонфигурацииИсточника = Метаданные.Имя;
	
	Настройки.ЭтоПланОбменаXDTO = Истина;
	Настройки.ПредупреждатьОНесоответствииВерсийПравилОбмена = Ложь;
	Настройки.ФорматОбмена = "http://v8.1c.ru/edi/edi_stnd/EnterpriseData";
	
	ВерсииФормата = Новый Соответствие;
	ПолучитьВерсииФорматаОбмена(ВерсииФормата);
	
	Настройки.ВерсииФорматаОбмена = ВерсииФормата;
	
	Настройки.ПланОбменаИспользуетсяВМоделиСервиса = Истина;
	
	Настройки.Алгоритмы.ПриПолученииВариантовНастроекОбмена   = Истина;
	Настройки.Алгоритмы.ПриПолученииОписанияВариантаНастройки = Истина;
	
	Настройки.Алгоритмы.ПредставлениеОтбораИнтерактивнойВыгрузки = Истина;
	Настройки.Алгоритмы.НастроитьИнтерактивнуюВыгрузку           = Истина;
	
КонецПроцедуры

// Заполняет коллекцию вариантов настроек, предусмотренных для плана обмена.
// 
// Параметры:
//  ВариантыНастроекОбмена - ТаблицаЗначений - коллекция вариантов настроек обмена, см. описание возвращаемого значения
//                                       функции НастройкиПланаОбменаПоУмолчанию общего модуля ОбменДаннымиСервер.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияВариантовНастроек,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииВариантовНастроекОбмена(ВариантыНастроекОбмена, ПараметрыКонтекста) Экспорт
	
	ВариантНастройки = ВариантыНастроекОбмена.Добавить();
	ВариантНастройки.ИдентификаторНастройки        = "ОбменБП30";
	ВариантНастройки.КорреспондентВМоделиСервиса   = Истина;
	ВариантНастройки.КорреспондентВЛокальномРежиме = Истина;
	
	ВариантНастройки = ВариантыНастроекОбмена.Добавить();
	ВариантНастройки.ИдентификаторНастройки        = "ОбменУниверсальный";
	ВариантНастройки.КорреспондентВМоделиСервиса   = Истина;
	ВариантНастройки.КорреспондентВЛокальномРежиме = Истина;
	
КонецПроцедуры

// Заполняет набор параметров, определяющих вариант настройки обмена.
// 
// Параметры:
//  ОписаниеВарианта       - Структура - набор варианта настройки по умолчанию,
//                                       см. ОбменДаннымиСервер.ОписаниеВариантаНастройкиОбменаПоУмолчанию,
//                                       описание возвращаемого значения.
//  ИдентификаторНастройки - Строка    - идентификатор варианта настройки обмена.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияОписанияВариантаНастройки,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииОписанияВариантаНастройки(ОписаниеВарианта, ИдентификаторНастройки, ПараметрыКонтекста) Экспорт
	
	ОписаниеВарианта.ПодробнаяИнформацияПоОбмену = "ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.Форма.ФормаПодробнойИнформацииПоОбмену";
	ОписаниеВарианта.ПутьКФайлуКомплектаПравилНаПользовательскомСайте = "";
	ОписаниеВарианта.ПутьКФайлуКомплектаПравилВКаталогеШаблонов = "";
	ОписаниеВарианта.ОбщиеДанныеУзлов = "РежимВыгрузкиПриНеобходимости";
	
	Если ИдентификаторНастройки = "ОбменБП30" Тогда
		МассивПредстваления = Новый Массив;
		МассивПредстваления.Добавить("Данная настройка позволит синхронизировать данные между");
		МассивПредстваления.Добавить("""Альфа-Авто: Автосалон+Автосервис+Автозапчасти КОРП. Редакция 6""");
		КраткаяИнформацияПоОбмену =
			СтрШаблон(НСтр("ru = '%1
			|и ""Бухгалтерия предприятия, редакция 3.0"".'"), СтрСоединить(МассивПредстваления, " "));
	Иначе
		МассивПредстваления = Новый Массив;
		МассивПредстваления.Добавить(НСтр("ru = 'Позволяет синхронизировать данные между любыми программами, '"));
		МассивПредстваления.Добавить(НСтр("ru = 'поддерживающими универсальный формат обмена ""Enterprise Data"".'"));
		КраткаяИнформацияПоОбмену = СтрСоединить(МассивПредстваления, "");
	КонецЕсли;
	
	ОписаниеВарианта.КраткаяИнформацияПоОбмену     = КраткаяИнформацияПоОбмену;
	ОписаниеВарианта.ИмяФайлаНастроекДляПриемника  = НСтр("ru = 'Синхронизация данных через универсальный формат'");
	
	Если ИдентификаторНастройки = "ОбменБП30" Тогда
		ОписаниеВарианта.ИмяКонфигурацииКорреспондента = "БухгалтерияПредприятия";
		ОписаниеВарианта.ЗаголовокКомандыДляСозданияНовогоОбменаДанными =
			НСтр("ru = '1C: Бухгалтерия предприятия 8, ред. 3.0'");
		ОписаниеВарианта.ЗаголовокПомощникаСозданияОбмена =
			НСтр("ru = 'Настройка синхронизации с программой ""1C: Бухгалтерия предприятия 8, ред. 3.0""'");
		ОписаниеВарианта.ЗаголовокУзлаПланаОбмена =
			НСтр("ru = 'Синхронизация с программой ""1C: Бухгалтерия предприятия 8, ред. 3.0""'");
		ОписаниеВарианта.НаименованиеКонфигурацииКорреспондента =
			НСтр("ru = '1C: Бухгалтерия предприятия 8, ред. 3.0'");
	Иначе
		ОписаниеВарианта.ИмяКонфигурацииКорреспондента = "ДругаяПрограмма";
		ОписаниеВарианта.ЗаголовокКомандыДляСозданияНовогоОбменаДанными =
			НСтр("ru = 'Другая программа'");
		ОписаниеВарианта.ЗаголовокПомощникаСозданияОбмена =
			НСтр("ru = 'Настройка синхронизации данных через универсальный формат'");
		ОписаниеВарианта.ЗаголовокУзлаПланаОбмена =
			НСтр("ru = 'Синхронизация данных через универсальный формат'");
		ОписаниеВарианта.НаименованиеКонфигурацииКорреспондента = 
			НСтр("ru = 'Другая программа'");
	КонецЕсли;
	
КонецПроцедуры

// Возвращает представление отбора для варианта дополнения выгрузки по сценарию узла.
// См. описание "ВариантДополнительно" в процедуре "НастроитьИнтерактивнуюВыгрузку".
//
// Параметры:
//     Получатель - ПланОбменаСсылка - Узел, для которого определяется представление отбора.
//     Параметры  - Структура        - Характеристики отбора. Содержит поля:
//         ИспользоватьПериодОтбора - Булево            - флаг того, что необходимо использовать общий отбор по периоду.
//         ПериодОтбора             - СтандартныйПериод - значение периода общего отбора.
//         Отбор                    - ТаблицаЗначений   - содержит строки с описанием подробных отборов по сценарию
//                                                        узла.
//                                                        Содержит колонки:
//                 ПолноеИмяМетаданных - Строка                - полное имя метаданных регистрируемого объекта, отбор
//                                                               которого описывает строка.
//                                                               Например "Документ._ДемоПоступлениеТоваров". Могут
//                                                               быть использованы специальные  значения "ВсеДокументы"
//                                                               и "ВсеСправочники" для отбора соответственно всех
//                                                               документов и всех справочников, регистрирующихся на
//                                                               узле Получатель.
//                 ВыборПериода        - Булево                - флаг того, что данная строка описывает отбор с общим
//                                                               периодом.
//                 Период              - СтандартныйПериод     - значение периода общего отбора для метаданных строки.
//                 Отбор               - ОтборКомпоновкиДанных - поля отбора. Поля отбора формируются в соответствии с
//                                                               общим правилами формирования полей компоновки.
//                                                               Например, для указания отбора по реквизиту документа
//                                                               "Организация", будет использовано поле
//                                                               "Ссылка.Организация".
//
// Возвращаемое значение: 
//     Строка - описание отбора.
//
Функция ПредставлениеОтбораИнтерактивнойВыгрузки(Получатель, Параметры) Экспорт
	
КонецФункции

// Предназначена для настройки вариантов интерактивной настройки выгрузки по сценарию узла.
// Для настройки необходимо установить значения свойств параметров в необходимые значения.
//
// Параметры:
//     Получатель - ПланОбменаСсылка - Узел, для которого производится настройка.
//     Параметры  - Структура        - Параметры для изменения. Содержит поля:
//
//         ВариантБезДополнения - Структура     - настройки типового варианта "Не добавлять".
//                                                Содержит поля:
//             Использование - Булево - флаг разрешения использования варианта. По умолчанию Истина.
//             Порядок       - Число  - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 1.
//             Заголовок     - Строка - позволяет переопределить название типового варианта.
//             Пояснение     - Строка - позволяет переопределить текст пояснения варианта для пользователя.
//
//         ВариантВсеДокументы - Структура      - настройки типового варианта "Добавить все документы за период".
//                                                Содержит поля:
//             Использование - Булево - флаг разрешения использования варианта. По умолчанию Истина.
//             Порядок       - Число  - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 2.
//             Заголовок     - Строка - позволяет переопределить название типового варианта.
//             Пояснение     - Строка - позволяет переопределить текст пояснения варианта для пользователя.
//
//         ВариантПроизвольныйОтбор - Структура - настройки типового варианта "Добавить данные с произвольным отбором".
//                                                Содержит поля:
//             Использование - Булево - флаг разрешения использования варианта. По умолчанию Истина.
//             Порядок       - Число  - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 3.
//             Заголовок     - Строка - позволяет переопределить название типового варианта.
//             Пояснение     - Строка - позволяет переопределить текст пояснения варианта для пользователя.
//
//         ВариантДополнительно - Структура     - настройки дополнительного варианта по сценарию узла.
//                                                Содержит поля:
//             Использование            - Булево            - флаг разрешения использования варианта. По умолчанию Ложь.
//             Порядок                  - Число             - порядок размещения варианта на форме помощника, сверху
//                                                            вниз. По умолчанию 4.
//             Заголовок                - Строка            - название варианта для отображения на форме.
//             ИмяФормыОтбора           - Строка            - Имя формы, вызываемой для редактирования настроек.
//             ЗаголовокКомандыФормы    - Строка            - Заголовок для отрисовки на форме команды открытия формы
//                                                            настроек.
//             ИспользоватьПериодОтбора - Булево            - флаг того, что необходим общий отбор по периоду. По
//                                                            умолчанию Ложь.
//             ПериодОтбора             - СтандартныйПериод - значение периода общего отбора, предлагаемого по
//                                                            умолчанию.
//
//             Отбор                    - ТаблицаЗначений   - содержит строки с описанием подробных отборов по сценарию
//                                                            узла.
//                                                            Содержит колонки:
//                 ПолноеИмяМетаданных - Строка                - полное имя метаданных регистрируемого объекта, отбор
//                                                               которого описывает строка.
//                                                               Например "Документ._ДемоПоступлениеТоваров". Можно
//                                                               использовать специальные  значения "ВсеДокументы" и
//                                                               "ВсеСправочники" для отбора соответственно всех
//                                                               документов и всех справочников, регистрирующихся на
//                                                               узле Получатель.
//                 ВыборПериода        - Булево                - флаг того, что данная строка описывает отбор с общим
//                                                               периодом.
//                 Период              - СтандартныйПериод     - значение периода общего отбора для метаданных строки,
//                                                               предлагаемого по умолчанию.
//                 Отбор               - ОтборКомпоновкиДанных - отбор по умолчанию. Поля отбора формируются в
//                                                               соответствии с общим правилами формирования полей
//                                                               компоновки. Например, для указания отбора по реквизиту
//                                                               документа "Организация", необходимо использовать поле
//                                                               "Ссылка.Организация".
Процедура НастроитьИнтерактивнуюВыгрузку(Получатель, Параметры) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ОбменДанными

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнениеОпераций() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыОперацийДвиженияДенежныхСредств.Ссылка КАК Ссылка
	|ИЗ
	|	Перечисление.ВидыОперацийДвиженияДенежныхСредств КАК ВидыОперацийДвиженияДенежныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиДДС.Ссылка КАК Ссылка,
	|	СтатьиДДС.Операция КАК Операция
	|ИЗ
	|	Справочник.СтатьиДДС КАК СтатьиДДС
	|ГДЕ
	|	СтатьиДДС.Предопределенный = ИСТИНА
	|	И СтатьиДДС.ЭтоГруппа = ЛОЖЬ
	|	И НЕ СтатьиДДС.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДвиженияДенежныхСредств.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СинхронизацияДанныхЧерезУниверсальныйФормат.Ссылка КАК Ссылка
	|ИЗ
	|	ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат КАК СинхронизацияДанныхЧерезУниверсальныйФормат";
	
	Запросы = Запрос.ВыполнитьПакет();
	ВыборкаОперация = Запросы[0].Выбрать(); 
	ВыборкаСтатья = Запросы[1].Выгрузить();
	ВыборкаПланОбмена = Запросы[2].Выбрать();
	Пока ВыборкаПланОбмена.Следующий() Цикл 
		Элемент = ВыборкаПланОбмена.Ссылка.ПолучитьОбъект(); 
		Если Элемент.СоответствиеОперацииИСтатейДДС.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		Элемент.ОбменДанными.Загрузка = Истина;				
		Попытка
			ЗаблокироватьДанныеДляРедактирования(ВыборкаПланОбмена.Ссылка);
			Пока ВыборкаОперация.Следующий() Цикл  
				Строка = Элемент.СоответствиеОперацииИСтатейДДС.Добавить();
				Строка.Операция = ВыборкаОперация.Ссылка;
				Статья =ВыборкаСтатья.Найти(ВыборкаОперация.Ссылка, "Операция");
				Строка.СтатьяДДС = ?(Статья <> Неопределено, Статья.Ссылка, Справочники.СтатьиДДС.ПустаяСсылка());
			КонецЦикла;	
			Элемент.Записать();
		Исключение
			ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Ошибка обновления справочника Подразделения компании'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Предупреждение,
			,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
			
		КонецПопытки;	
	КонецЦикла;
		
КонецПроцедуры

Процедура ОперацииВнутреннихПеремещений() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиДДС.Ссылка КАК Ссылка,
	|	СтатьиДДС.Операция КАК Операция
	|ИЗ
	|	Справочник.СтатьиДДС КАК СтатьиДДС
	|ГДЕ
	|	НЕ СтатьиДДС.ЭтоГруппа
	|	И СтатьиДДС.Операция В(&ОперацииПеремещения)
	|	И НЕ СтатьиДДС.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СинхронизацияДанныхЧерезУниверсальныйФормат.Ссылка КАК Ссылка
	|ИЗ
	|	ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат КАК СинхронизацияДанныхЧерезУниверсальныйФормат";
	
	ОперацииПеремещения = Новый Массив();
	ОперацииПеремещения.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВзносНаличнымиВБанк);
	ОперацииПеремещения.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ВзносНаличнымиИзКассы);
	ОперацииПеремещения.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПолучениеНаличныхВБанке); 
	ОперацииПеремещения.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.СнятиеНаличныхВКассу); 
	ОперацииПеремещения.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПереводНаДругойСчетОрганизации); 
	ОперацииПеремещения.Добавить(Перечисления.ВидыОперацийДвиженияДенежныхСредств.ПереводСДругогоСчетаОрганизации); 
	
	Запрос.УстановитьПараметр("ОперацииПеремещения",ОперацииПеремещения); 
	Запросы = Запрос.ВыполнитьПакет();
	ВыборкаСтатья = Запросы[0].Выгрузить();
	ВыборкаПланОбмена = Запросы[1].Выбрать();
	Пока ВыборкаПланОбмена.Следующий() Цикл 
		Элемент = ВыборкаПланОбмена.Ссылка.ПолучитьОбъект();
		Если Элемент.СоответствиеОперацииИСтатейДДС.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;

		Элемент.ОбменДанными.Загрузка = Истина;				
		Попытка
			ЗаблокироватьДанныеДляРедактирования(ВыборкаПланОбмена.Ссылка);
			Для Каждого Операция Из ОперацииПеремещения Цикл  
				Если Элемент.СоответствиеОперацииИСтатейДДС.Найти(Операция, "Операция") = Неопределено Тогда
					Строка = Элемент.СоответствиеОперацииИСтатейДДС.Добавить();
					Строка.Операция = Операция;
					Статья = ВыборкаСтатья.Найти(Операция, "Операция");
					Строка.СтатьяДДС = ?(Статья <> Неопределено, Статья.Ссылка, Справочники.СтатьиДДС.ПустаяСсылка());
				КонецЕсли;
			КонецЦикла;
			Элемент.Записать();
		Исключение
			ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Ошибка обновления узла обмена'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Предупреждение,
			,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
			
		КонецПопытки;	
	КонецЦикла;
		
КонецПроцедуры

#Область ПрочиеПроцедурыИФункции

// Возвращает сокращенное строковое представление коллекции значений
// 
// Параметры:
//  Коллекция 						- массив или список значений.
//  МаксимальноеКоличествоЭлементов - число, максимальное количество элементов включаемое в представление.
//
// Возвращаемое значение:
//  Строка.
//
Функция СокращенноеПредставлениеКоллекцииЗначений(Коллекция, МаксимальноеКоличествоЭлементов = 2) Экспорт
	
	СтрокаПредставления = "";
	
	КоличествоЗначений			 = Коллекция.Количество();
	КоличествоВыводимыхЭлементов = Мин(КоличествоЗначений, МаксимальноеКоличествоЭлементов);
	
	Если КоличествоВыводимыхЭлементов = 0 Тогда
		
		Возврат "";
		
	Иначе
		
		Для НомерЗначения = 1 По КоличествоВыводимыхЭлементов Цикл
			
			СтрокаПредставления = СтрокаПредставления + Коллекция.Получить(НомерЗначения - 1) + ", ";	
			
		КонецЦикла;
		
		СтрокаПредставления = Лев(СтрокаПредставления, СтрДлина(СтрокаПредставления) - 2);
		Если КоличествоЗначений > КоличествоВыводимыхЭлементов Тогда
			СтрокаПредставления = СтрокаПредставления + ", ... ";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтрокаПредставления;
	
КонецФункции

// Определяет массив узлов на которых будет произведена регистрация объекта
//
Функция ОпределитьМассивПолучателей(Выгрузка, Объект, Получатели) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Выгрузка Тогда
		Возврат Получатели;
	КонецЕсли;
	
	Если Объект.ДополнительныеСвойства.Свойство("УзлыДляРегистрации")
		И ТипЗнч(Объект.ДополнительныеСвойства.УзлыДляРегистрации) = Тип("Массив") Тогда
		
		Получатели = Объект.ДополнительныеСвойства.УзлыДляРегистрации;
		
		Возврат Получатели;
	КонецЕсли;
	
	МассивИсключаемыхУзлов = Новый Массив;
	
	Для Каждого Узел Из Получатели Цикл
		
		Если Узел.РучнойОбмен Тогда
			
			МассивИсключаемыхУзлов.Добавить(Узел);
			
		ИначеЕсли Узел.ИспользоватьОтборПоВидамДокументов Тогда
			
			Если Узел.ВидыДокументов.Найти(Объект.Метаданные().Имя, "ИмяОбъектаМетаданных") = Неопределено Тогда
				МассивИсключаемыхУзлов.Добавить(Узел);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Получатели = ОбщегоНазначенияКлиентСервер.РазностьМассивов(Получатели, МассивИсключаемыхУзлов);
	
	Возврат Получатели;
	
КонецФункции

// Возвращает режим запуска, в случае интерактивного инициирования синхронизации
// Возвращаемые значения АвтоматическаяСинхронизация Или ИнтерактивнаяСинхронизация
// На основании этих значений запускается либо помощник интерактивного обмена, либо автообмен
Функция РежимЗапускаСинхронизацииДанных(УзелИнформационнойБазы) Экспорт

	Если УзелИнформационнойБазы.РучнойОбмен Тогда
		
		Возврат "ИнтерактивнаяСинхронизация";
		
	Иначе
		
		Возврат "АвтоматическаяСинхронизация";
		
	КонецЕсли;
	
КонецФункции

// Возвращает сценарий работы помощника интерактивного сопостовления
// НеОтправлять, ИнтерактивнаяСинхронизацияДокументов, ИнтерактивнаяСинхронизацияСправочников либо пустую строку
Функция ИнициализироватьСценарийРаботыПомощникаИнтерактивногоОбмена(УзелИнформационнойБазы) Экспорт
	
	Если УзелИнформационнойБазы.РучнойОбмен Тогда
		
		Возврат "ИнтерактивнаяСинхронизацияДокументов";
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбменЧерезФормат

Процедура ПолучитьВерсииФорматаОбмена(ВерсииФормата) Экспорт
	
	ВерсииФормата.Вставить("1.6", МенеджерОбменаЧерезУниверсальныйФормат);
	ВерсииФормата.Вставить("1.10", МенеджерОбменаЧерезУниверсальныйФормат);
	ВерсииФормата.Вставить("1.11", МенеджерОбменаЧерезУниверсальныйФормат);
	ВерсииФормата.Вставить("1.12", МенеджерОбменаЧерезУниверсальныйФормат); 
	ВерсииФормата.Вставить("1.15", МенеджерОбменаЧерезУниверсальныйФормат); 
	ВерсииФормата.Вставить("1.16", МенеджерОбменаЧерезУниверсальныйФормат);  
	ВерсииФормата.Вставить("1.17", МенеджерОбменаЧерезУниверсальныйФормат);
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СинхронизацияДанныхЧерезУниверсальныйФормат.ПутьКМенеджеруОбмена,
		|	СинхронизацияДанныхЧерезУниверсальныйФормат.ВерсияФорматаОбмена
		|ИЗ
		|	ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат КАК СинхронизацияДанныхЧерезУниверсальныйФормат
		|ГДЕ
		|	СинхронизацияДанныхЧерезУниверсальныйФормат.ПутьКМенеджеруОбмена <> """"");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ИмяОбработки = Выборка.ПутьКМенеджеруОбмена;
		
		ДанныеОбработки = Новый ДвоичныеДанные(ИмяОбработки);
		АдресОбработки  = ПоместитьВоВременноеХранилище(ДанныеОбработки);
		
		Если ОбщегоНазначения.ЕстьЗащитаОтОпасныхДействий() Тогда
			
			ИмяОбработки = ВнешниеОбработки.Подключить(АдресОбработки, , ,
				ОбщегоНазначения.ОписаниеЗащитыБезПредупреждений());
				
		Иначе
			ИмяОбработки = ВнешниеОбработки.Подключить(АдресОбработки);
		КонецЕсли;
		
		МенеджерОбмена = ВнешниеОбработки.Создать(ИмяОбработки);
		
		ВерсииФормата.Вставить(Выборка.ВерсияФорматаОбмена, МенеджерОбмена);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Процедура ДобавитьСписокОрганизций(Список, Знач Организации)
	
	Для Каждого Организация Из Организации Цикл
		
		Если ТипЗнч(Организация)=Тип("Массив") Тогда
			ДобавитьСписокОрганизций(Список, Организация);
			Продолжить;
		КонецЕсли;
		
		Если Список.НайтиПоЗначению(Организация)=Неопределено Тогда
			Список.Добавить(Организация, Организация.Наименование);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли