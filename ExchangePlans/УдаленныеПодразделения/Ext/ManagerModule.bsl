#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ОбменДанными

// Заполняет настройки, влияющие на использование плана обмена.
// 
// Параметры:
//  Настройки - Структура - см. ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию
//
Процедура ПриПолученииНастроек(Настройки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Настройки.НазначениеПланаОбмена = "РИБ";
	Настройки.ПредупреждатьОНесоответствииВерсийПравилОбмена = Ложь;
	Настройки.Алгоритмы.ПриПолученииОписанияВариантаНастройки = Истина;
	Настройки.Алгоритмы.ПриСохраненииНастроекСинхронизацииДанных = Истина;
	Настройки.Алгоритмы.ОписаниеЗначенийПоУмолчанию = Истина;
	Настройки.Алгоритмы.ОписаниеОграниченийПередачиДанных = Истина;
	
КонецПроцедуры

// Заполняет набор параметров, определяющих вариант настройки обмена.
// 
// Параметры:
//  ОписаниеВарианта       - см. ОбменДаннымиСервер.ОписаниеВариантаНастройкиОбменаПоУмолчанию
//  ИдентификаторНастройки - Строка - идентификатор варианта настройки обмена.
//  ПараметрыКонтекста     - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияОписанияВариантаНастройки
//
Процедура ПриПолученииОписанияВариантаНастройки(ОписаниеВарианта, ИдентификаторНастройки, ПараметрыКонтекста) Экспорт
	
	КраткаяИнформацияПоОбмену = НСтр("ru = 'Распределенная информационная база представляет собой иерархическую структуру, 
	|состоящую из отдельных информационных баз системы «1С:Предприятие» - узлов распределенной информационной базы, между 
	|которыми организована синхронизация конфигурации и данных. Главной особенностью распределенных информационных баз 
	|является передача изменений конфигурации в подчиненные узлы. 
	|Имеется возможность настраивать ограничения миграции данных, например по организациям.'");
	КраткаяИнформацияПоОбмену = СтрЗаменить(КраткаяИнформацияПоОбмену, Символы.ПС, "");
	
	ПодробнаяИнформацияПоОбмену = "https://its.1c.ru/bmk/bsp/sync_ib";
	
	ОписаниеВарианта.КраткаяИнформацияПоОбмену   = КраткаяИнформацияПоОбмену;
	ОписаниеВарианта.ПодробнаяИнформацияПоОбмену = ПодробнаяИнформацияПоОбмену;
	
	ОписаниеВарианта.ЗаголовокКомандыДляСозданияНовогоОбменаДанными = НСтр("ru = 'Распределенная информационная база'");
	
	ОписаниеВарианта.ИмяФормыПомощникаНастройкиСинхронизацииДанных =
		"ПланОбмена.УдаленныеПодразделения.Форма.ФормаНастройкиУзла";
	
	ОписаниеВарианта.ОбщиеДанныеУзлов = "РежимПроведенияПоПартиям, ИспользоватьОтборПоПодразделениям, Подразделения";
	ОписаниеВарианта.ИмяФайлаНастроекДляПриемника =
		НСтр("ru = 'Настройки синхронизации распределенной информационной базы'");
	ОписаниеВарианта.ИмяФормыСозданияНачальногоОбраза =
		"ПланОбмена.УдаленныеПодразделения.Форма.ФормаСозданияНачальногоОбраза";
	ОписаниеВарианта.ИспользуемыеТранспортыСообщенийОбмена =
		ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();
	ОписаниеВарианта.Отборы = НастройкаОтборовНаУзле();
	
КонецПроцедуры

// Заполняет узел обмена настройками отправки и получения данных (ограничения передачи данных и значения по умолчанию).
//
// Параметры:
//  Корреспондент - ПланОбменаОбъект - узел плана обмена, соответствующий корреспонденту.
//  ДанныеЗаполнения - Структура - структура с данными для заполнения настроек отправки и получения данных.
//
Процедура ПриСохраненииНастроекСинхронизацииДанных(Корреспондент, ДанныеЗаполнения) Экспорт
	
	ЗаполнитьЗначенияСвойств(Корреспондент, ДанныеЗаполнения, 
		"РежимПроведенияПоПартиям,
		|ИспользоватьОтборПоПодразделениям");
	
	Корреспондент.Подразделения.Загрузить(ДанныеЗаполнения.Подразделения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ОбменДанными

#КонецОбласти

// Возвращает строку описания ограничений миграции данных для пользователя;
// Прикладной разработчик на основе установленных отборов на узле должен сформировать строку описания ограничений 
// удобную для восприятия пользователем.
// 
// Параметры:
//	НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена,
//										 полученная при помощи функции НастройкаОтборовНаУзле().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания ограничений передачи данных в зависимости от версии корреспондента.
//	ИдентификаторНастройки - Строка - идентификатор сохраненной настройки как он задан в конфигураторе.
//
// Возвращаемое значение:
//	Строка - Строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанных(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	// АльфаАвто
	ОграничениеОтборПоПодразделениям = "";
	
	// отбор по подразделениям
	Если НастройкаОтборовНаУзле.ИспользоватьОтборПоПодразделениям Тогда
		СтрокаПредставленияОтбора = СтрСоединить(НастройкаОтборовНаУзле.Подразделения.ПодразделениеКомпании, "; ");
		ОграничениеОтборПоПодразделениям = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Только по подразделениям: %1'"),
			СтрокаПредставленияОтбора
		);
	Иначе
		ОграничениеОтборПоПодразделениям = НСтр("ru = 'По всем подразделениям'");
	КонецЕсли;
	
	Возврат (НСтр("ru = 'Выгружать документы и справочную информацию:'") + Символы.ПС + ОграничениеОтборПоПодразделениям);
	// Конец АльфаАвто
	
КонецФункции

// Возвращает строку описания значений по умолчанию для пользователя;
// Прикладной разработчик на основе установленных значений по умолчанию на узле должен сформировать строку описания 
// удобную для восприятия пользователем.
//
// Параметры:
//	ЗначенияПоУмолчаниюНаУзле - Структура - структура значений по умолчанию на узле плана обмена,
//											полученная при помощи функции ЗначенияПоУмолчаниюНаУзле().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания значений по умолчанию в зависимости от версии корреспондента.
//	ИдентификаторНастройки - Строка - идентификатор сохраненной настройки как он задан в конфигураторе.
//
// Возвращаемое значение:
//  Строка - строка описания для пользователя значений по умолчанию.
//
Функция ОписаниеЗначенийПоУмолчанию(ЗначенияПоУмолчаниюНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	// АльфаАвто
	Возврат СтрШаблон(НСтр("ru = 'Выгружать документы и справочную информацию:%1По всем подразделениям'"), Символы.ПС);
	// Конец АльфаАвто
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Групповое изменение объектов

// Возвращает список реквизитов, которые не нужно редактировать
// с помощью обработки группового изменения объектов.
//
// Возвращаемое значение:
//	Массив - Содержит имена реквизитов, запрещенных для редактирования.
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("РегистрироватьИзменения");
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПАРАМЕТРЫ ОБРАБОТКИ РЕКВИЗИТОВ ОБЪЕКТА

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты документа
	ОбязательныеРеквизиты=Новый Массив();
	ОбязательныеРеквизиты.Добавить("РежимПроведенияПоПартиям");
	ОбязательныеРеквизиты.Добавить("Подразделения.ПодразделениеКомпании");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов и вариант проверки его заполнения
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	Подразделения = Новый Массив();
	Подразделения.Добавить("ПодразделениеКомпании");
	
	// Структура уникальных реквизитов табличных частей
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Подразделения", Подразделения);
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьУникальныеРеквизиты()

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// Возвращает структуру отборов на узле плана обмена с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры, содержащие массивы значений полей табличных частей плана обмена.
//
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для
//									разного состава настроек на узле для разных версий корреспондента
//	ИмяФормы - Строка - Имя используемой формы настройки узла. Возможно, например, использование
//						различных форм для разных версий корреспондента.
//  ИдентификаторНастройки - Строка - идентификатор сохраненной настройки как он задан в конфигураторе.
//
// Возвращаемое значение:
//	СтруктураНастроек - Структура - структура отборов на узле плана обмена.
// 
Функция НастройкаОтборовНаУзле()
	
	// АльфаАвто
	СтруктураТабличнойЧастиПодразделения = Новый Структура;
	СтруктураТабличнойЧастиПодразделения.Вставить("ПодразделениеКомпании", Новый Массив);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("РежимПроведенияПоПартиям",          Перечисления.РежимыПроведенияПартий.ПервичнымиДокументами);
	СтруктураНастроек.Вставить("ИспользоватьОтборПоПодразделениям", Ложь);
	СтруктураНастроек.Вставить("Подразделения",                     СтруктураТабличнойЧастиПодразделения);
	
	Возврат СтруктураНастроек;
	// Конец АльфаАвто
	
КонецФункции

#КонецОбласти

#КонецЕсли
