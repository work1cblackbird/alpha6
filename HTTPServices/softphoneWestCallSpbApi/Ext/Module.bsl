
#Область ОбработчикиМетодовHTTP

Функция EventPOST(Запрос)
	
	ИмяСобытияДляЖурналаРегистрации = "/event";
	
	ТелоЗапроса = РаскодироватьСтроку(Запрос.ПолучитьТелоКакСтроку(), СпособКодированияСтроки.КодировкаURL);
	ПараметрыТела = ПолучитьПараметрыИзСтроки(ТелоЗапроса, "&");
	
	сфпСофтФонПроСерверПереопределяемый.ЗаписатьЗапросВЖурналРегистрации(ИмяСобытияДляЖурналаРегистрации, ПараметрыТела);
	
	Если ПараметрыТела.crm_token <> "1" И НЕ КорректныйКлюч(ПараметрыТела.crm_token) Тогда
		Возврат СообщениеОбОшибке(
			400,
			ИмяСобытияДляЖурналаРегистрации,
			НСтр("ru='Некорректный ключ';en='Incorrect key'"));
	КонецЕсли;
	
	ОбязательныеПараметры = "cmd";
	Если НЕ ЕстьОбязательныеПараметры(ПараметрыТела,ОбязательныеПараметры) Тогда
		Возврат СообщениеОбОшибке(
			400,
			ИмяСобытияДляЖурналаРегистрации,
			сфпОбщегоНазначенияКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отсутствует обязательные параметры: %1';en='Missing required parameters: %1'"), ОбязательныеПараметры));
	КонецЕсли;
	
	ТипОперации = ПараметрыТела.cmd;
	Ответ = Неопределено;
	
	Попытка
		Если ТипОперации = "contact" Тогда
			ОбязательныеПараметры = "phone";
			Если НЕ ЕстьОбязательныеПараметры(ПараметрыТела, ОбязательныеПараметры) Тогда
				Возврат СообщениеОбОшибке(
					400,
					ИмяСобытияДляЖурналаРегистрации,
					сфпОбщегоНазначенияКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отсутствует обязательные параметры: %1';en='Missing required parameters: %1'"), ОбязательныеПараметры));
			КонецЕсли;
			
			ДанныеАбонента = сфпСофтФонПроСервер.ПолучитьДанныеКлиента(ПараметрыТела.phone);
			
			ЗаписьJSON = Неопределено;
			Если ДанныеАбонента <> Неопределено Тогда
				ЗаписьJSON = Новый ЗаписьJSON;
				ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет));
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				
				ЗаписьJSON.ЗаписатьИмяСвойства("contact_name");
				ЗаписьJSON.ЗаписатьЗначение(ДанныеАбонента.Представление);
				
				Если ДанныеАбонента.Свойство("ВнутреннийНомерОтветственного") Тогда
					ЗаписьJSON.ЗаписатьИмяСвойства("responsible");
					ЗаписьJSON.ЗаписатьЗначение(ДанныеАбонента.ВнутреннийНомерОтветственного);
				КонецЕсли;
				
				ЗаписьJSON.ЗаписатьКонецОбъекта();
				ПараметрыОтвета = ЗаписьJSON.Закрыть();
			КонецЕсли;
			
			Ответ = Новый HTTPСервисОтвет(200);
			Если ЗаписьJSON <> Неопределено Тогда
				Ответ.УстановитьТелоИзСтроки(ПараметрыОтвета);
			КонецЕсли;
			
		ИначеЕсли ТипОперации = "history" Тогда
			ОбязательныеПараметры = "callid";
			Если НЕ ЕстьОбязательныеПараметры(ПараметрыТела, ОбязательныеПараметры) Тогда
				Возврат СообщениеОбОшибке(
					400,
					ИмяСобытияДляЖурналаРегистрации,
					сфпОбщегоНазначенияКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отсутствует обязательные параметры: %1';en='Missing required parameters: %1'"), ОбязательныеПараметры));
			КонецЕсли;
			
			Если ПараметрыТела.Свойство("link") Тогда
				ИдентификаторЗаписи = ПараметрыТела.link;
				Если ЗначениеЗаполнено(ИдентификаторЗаписи) Тогда
					сфпСофтФонПроСервер.ОбработатьЗаписьЗвонка(ПараметрыТела.callid, ИдентификаторЗаписи);
				КонецЕсли;
			КонецЕсли;	
			
		ИначеЕсли ТипОперации = "event" Тогда
			ОбязательныеПараметры = "type,callid,phone";
			Если НЕ ЕстьОбязательныеПараметры(ПараметрыТела, ОбязательныеПараметры) Тогда
				Возврат СообщениеОбОшибке(
					400,
					ИмяСобытияДляЖурналаРегистрации,
					сфпОбщегоНазначенияКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отсутствует обязательные параметры: %1';en='Missing required parameters: %1'"), ОбязательныеПараметры));
			КонецЕсли;
			
			ВнутреннийНомер = "";
			Если ПараметрыТела.Свойство("ext") Тогда
				ВнутреннийНомер = ПараметрыТела.ext;
				
			Иначе
				Логин = ПараметрыТела.user;
				Логин = Лев(Логин, Найти(Логин, "@") - 1);
				
				УстановитьПривилегированныйРежим(Истина);
				
				Запрос = Новый Запрос("
				|ВЫБРАТЬ ВнутреннийНомерАТС КАК ВнутреннийНомер
				|ИЗ РегистрСведений.сфпКонтактыТелефонии
				|ГДЕ ЛогинАТС = &Логин");
				Запрос.УстановитьПараметр("Логин", Логин);
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					ВнутреннийНомер = Выборка.ВнутреннийНомер;
				КонецЕсли;
				
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВнутреннийНомер) Тогда
				Если НРег(ПараметрыТела.type) = "incoming" Тогда
					ДатаНачала = ТекущаяДатаСеанса();
					РегистрироватьЗвонок = Ложь;
					
					УстановитьПривилегированныйРежим(Истина);
					
					Запрос = Новый Запрос("
					|ВЫБРАТЬ ДатаНачала, НомерТелефона, Звонок
					|ИЗ РегистрСведений.сфпИсторияЗвонков
					|ГДЕ ИдентификаторЗвонка = &ИдентификаторЗвонка");
					Запрос.УстановитьПараметр("ИдентификаторЗвонка", ПараметрыТела.callid);
					
					Выборка = Запрос.Выполнить().Выбрать();
					Если НЕ Выборка.Следующий() Тогда
						МенеджерЗаписи = РегистрыСведений.сфпИсторияЗвонков.СоздатьМенеджерЗаписи();
						МенеджерЗаписи.ДатаНачала = ДатаНачала;
						МенеджерЗаписи.НомерТелефона = ПараметрыТела.phone;
						МенеджерЗаписи.Звонок = Документы.ТелефонныйЗвонок.ПустаяСсылка();
						МенеджерЗаписи.ИдентификаторЗвонка = ПараметрыТела.callid;
						МенеджерЗаписи.Записать();
						
						РегистрироватьЗвонок = Истина;
					КонецЕсли;	
					
					УстановитьПривилегированныйРежим(Ложь);
					
					сфпСофтФонПроСервер.ОбработатьВходящийЗвонок(ПараметрыТела.phone, ВнутреннийНомер, ДатаНачала, ПараметрыТела.callid, РегистрироватьЗвонок);

				ИначеЕсли НРег(ПараметрыТела.type) = "outgoing" Тогда
					сфпСофтФонПроСервер.ОбработатьИсходящийЗвонок(ТекущаяДатаСеанса(), ВнутреннийНомер,, ПараметрыТела.phone, ПараметрыТела.callid);

				ИначеЕсли НРег(ПараметрыТела.type) = "accepted" Тогда
					сфпСофтФонПроСервер.ОбработатьИзменениеЗвонка(ПараметрыТела.callid, ТекущаяДатаСеанса(), ВнутреннийНомер);

				ИначеЕсли НРег(ПараметрыТела.type) = "completed" Тогда
					сфпСофтФонПроСервер.ОбработатьЗавершениеЗвонка(,,, ТекущаяДатаСеанса(),, Ложь,,, ПараметрыТела.callid,, ВнутреннийНомер);

				ИначеЕсли НРег(ПараметрыТела.type) = "cancelled" Тогда
					сфпСофтФонПроСервер.ОбработатьЗавершениеЗвонка(,,,,, Истина,,, ПараметрыТела.callid,, ВнутреннийНомер);
				КонецЕсли;
			КонецЕсли;	
			
		Иначе
			Возврат СообщениеОбОшибке(501, ИмяСобытияДляЖурналаРегистрации); // Not implemented			
		КонецЕсли;
		
	Исключение
		Возврат СообщениеОбОшибке(500, ИмяСобытияДляЖурналаРегистрации, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));		
	КонецПопытки;
	
	Если Ответ = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(200);
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Функция pingGET(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("ok");
	Возврат Ответ;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыИзСтроки(Знач СтрокаПараметров, Знач Разделитель = ";") Экспорт
	Результат = Новый Структура;
	
	ОписаниеПараметра = "";
	НайденоНачалоСтроки = Ложь;
	НомерПоследнегоСимвола = СтрДлина(СтрокаПараметров);
	Для НомерСимвола = 1 По НомерПоследнегоСимвола Цикл
		Символ =Сред(СтрокаПараметров, НомерСимвола, 1);
		Если Символ = """" Тогда
			НайденоНачалоСтроки = Не НайденоНачалоСтроки;
		КонецЕсли;
		Если Символ <> Разделитель Или НайденоНачалоСтроки Тогда
			ОписаниеПараметра = ОписаниеПараметра + Символ;
		КонецЕсли;
		Если Символ = Разделитель И Не НайденоНачалоСтроки Или НомерСимвола = НомерПоследнегоСимвола Тогда
			Позиция = СтрНайти(ОписаниеПараметра, "=");
			Если Позиция > 0 Тогда
				ИмяПараметра = СокрЛП(Лев(ОписаниеПараметра, Позиция - 1));
				ЗначениеПараметра = СокрЛП(Сред(ОписаниеПараметра, Позиция + 1));
				ЗначениеПараметра = сфпОбщегоНазначенияКлиентСервер.сфпСократитьДвойныеКавычки(ЗначениеПараметра);
				Попытка
					Результат.Вставить(ИмяПараметра, ЗначениеПараметра);
				Исключение
				КонецПопытки;
			КонецЕсли;
			ОписаниеПараметра = "";
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция КорректныйКлюч(ПолученныйКлюч)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КлючДляАвторизации = сфпСофтФонПроСервер.ПолучитьНастройкиТелефонии().КлючДляАвторизацииВИБ;
	Возврат ПолученныйКлюч = КлючДляАвторизации;
	
КонецФункции

Функция ЕстьОбязательныеПараметры(ПараметрыТела, ОбязательныеПараметры)
	
	МассивПараметров = сфпОбщегоНазначенияКлиентСервер.сфпРазложитьСтрокуВМассивПодстрок(ОбязательныеПараметры);
	
	Для Каждого ОбязательныйПараметр Из МассивПараметров Цикл
		Если НЕ ПараметрыТела.Свойство(ОбязательныйПараметр) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция СообщениеОбОшибке(КодСостояния, ВложенноеИмяСобытия, Комментарий = Неопределено)
	
	ЗаписьЖурналаРегистрации(
		сфпСофтФонПроСерверПереопределяемый.СобытиеЖурналаРегистрации() + "." + ВложенноеИмяСобытия,
		УровеньЖурналаРегистрации.Ошибка,,,
		Комментарий);
	
	Ответ = Новый HTTPСервисОтвет(КодСостояния);
	Возврат Ответ;
	
КонецФункции

#КонецОбласти
