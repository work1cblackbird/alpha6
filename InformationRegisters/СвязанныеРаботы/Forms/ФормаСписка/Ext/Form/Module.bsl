///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка регистра "Связанные работы"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьЗаголовок = Ложь;
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Авторабота") Тогда
		
		УстановитьЗаголовок = Истина;
		Владелец = Параметры.Отбор.Авторабота;
		ДанныеВладельца = ВладелецАвторабот(Владелец);
		
	КонецЕсли;
		
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);

	Если УстановитьЗаголовок Тогда
		ОбновитьЗаголовокФормы(ЭтотОбъект, ДанныеВладельца);
	КонецЕсли;

	Закрепить        = Параметры.Свойство("ЗакрепитьСПрава");
	СкрытьАвтоработу = Параметры.Свойство("СкрыватьАвтоработу");
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Закрепить Тогда
		
		УправлениеДиалогомКлиент.ЗакрепитьФорму();
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ПараметрыДействия = Новый Структура;
	
	Если (ИмяСобытия = "АктивизацияСтрокиАвтоработы" ИЛИ ИмяСобытия = "АктивизацияСтрокиПричиныОбращения") 
		И Источник = ВладелецФормы И СкрытьАвтоработу Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
			"Авторабота",
			Параметр,
			ВидСравненияКомпоновкиДанных.Равно,
			"Авторабота",
			Истина);
		
		ДанныеВладельца = ВладелецАвторабот(Параметр);
		ОбновитьЗаголовокФормы(ЭтотОбъект, ДанныеВладельца);
		
	КонецЕсли;
		
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийСвязанныеРаботы");
		
	Иначе
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийСвязанныеРаботы");
		
	КонецЕсли;
	// Конец ОценкаПроизводительности

КонецПроцедуры 

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	 
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраСведенийСвязанныеРаботы");
		
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервереБезКонтекста
Функция ВладелецАвторабот(Владелец)
	
	Если Владелец=Неопределено Или Владелец.ЭтоГруппа Тогда
		ВладелецДляОтбора = Неопределено;
	Иначе
		ВладелецДляОтбора = Владелец;
	КонецЕсли;
	
	Возврат Новый Структура("ВладелецДляОтбора", ВладелецДЛяОтбора);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовокФормы(Форма, ДанныеВладельца)
	
	ПредставлениеВладельца = ?(
		ДанныеВладельца.ВладелецДляОтбора = Неопределено, 
		"",
		СтрШаблон("(%1)",СокрЛП(ДанныеВладельца.ВладелецДляОтбора))
	);
	Если ПустаяСтрока(ПредставлениеВладельца) Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Для групп нет связанных авторабот'");
		
	Иначе
		
		ШаблонЗаголовка = НСтр("ru = 'Связанные автоработы для %1'");
		ТекстЗаголовка  = СтрШаблон(ШаблонЗаголовка, ПредставлениеВладельца);
		
	КонецЕсли;
	
	Форма.АвтоЗаголовок = Ложь;
	Форма.Заголовок     = ТекстЗаголовка;
	Форма.Элементы.Список.ТолькоПросмотр = (НЕ ЗначениеЗаполнено(ДанныеВладельца.ВладелецДляОтбора));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

