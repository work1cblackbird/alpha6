// Модуль менеджера регистра сведений "Операции прослеживаемых товаров"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьДанныеОбОперацияхПрослеживаемогоТовара(Параметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗапросРегистраторов = Новый Запрос;
	ЗапросРегистраторов.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГТДПартийТоваровКомпании.Регистратор КАК Регистратор,
	|	ГТДПартийТоваровКомпании.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ГТДПартийТоваровКомпании КАК ГТДПартийТоваровКомпании
	|ГДЕ
	|	ГТДПартийТоваровКомпании.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ГТДПартийТоваровКомпании.ГТД.РНПТ
	|	И ТИПЗНАЧЕНИЯ(ГТДПартийТоваровКомпании.Регистратор) В (ТИП(Документ.ВозвратОтПокупателя), ТИП(Документ.ЗакрытиеСмены), ТИП(Документ.ПоступлениеТоваров), ТИП(Документ.РеализацияТоваров), ТИП(Документ.СписаниеТоваров), ТИП(документ.Инвентаризация), ТИП(Документ.ВозвратПоставщику))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыВПроизводстве.Регистратор,
	|	ТоварыВПроизводстве.Период
	|ИЗ
	|	РегистрНакопления.ТоварыВПроизводстве КАК ТоварыВПроизводстве
	|ГДЕ
	|	ТоварыВПроизводстве.Регистратор ССЫЛКА Документ.ЗаказНаряд
	|	И ТоварыВПроизводстве.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ТоварыВПроизводстве.ГТД.РНПТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиАвтомобилей.Регистратор,
	|	ОстаткиАвтомобилей.Период
	|ИЗ
	|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
	|ГДЕ
	|	ОстаткиАвтомобилей.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ОстаткиАвтомобилей.Автомобиль.ГТД.РНПТ
	|	И ТИПЗНАЧЕНИЯ(ОстаткиАвтомобилей.Регистратор) В (ТИП(Документ.ВозвратОтПокупателяАвтомобилей), ТИП(Документ.ПоступлениеАвтомобилей), ТИП(Документ.РеализацияАвтомобилей), ТИП(Документ.ИнвентаризацияАвтомобилей), ТИП(Документ.СписаниеАвтомобилей), ТИП(Документ.ВозвратПоставщикуАвтомобилей))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаПоступления.Ссылка,
	|	КорректировкаПоступления.Дата
	|ИЗ
	|	Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|ГДЕ
	|	КорректировкаПоступления.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И КорректировкаПоступления.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаПоступленияАвтомобилей.Ссылка,
	|	КорректировкаПоступленияАвтомобилей.Дата
	|ИЗ
	|	Документ.КорректировкаПоступленияАвтомобилей КАК КорректировкаПоступленияАвтомобилей
	|ГДЕ
	|	КорректировкаПоступленияАвтомобилей.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И КорректировкаПоступленияАвтомобилей.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	КорректировкаРеализации.Дата
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И КорректировкаРеализации.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализацииАвтомобилей.Ссылка,
	|	КорректировкаРеализацииАвтомобилей.Дата
	|ИЗ
	|	Документ.КорректировкаРеализацииАвтомобилей КАК КорректировкаРеализацииАвтомобилей
	|ГДЕ
	|	КорректировкаРеализацииАвтомобилей.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И КорректировкаРеализацииАвтомобилей.Проведен";
	
	Если Параметры.ПрогрессВыполнения.ОбработаноОбъектов = 0 Тогда
		ДатаНачала = Дата('20210701');
	Иначе
		КоличествоСекундВНеделе = 604800;
		ДатаНачала = НачалоНедели(
			Дата('20210701') + КоличествоСекундВНеделе *Параметры.ПрогрессВыполнения.ОбработаноОбъектов + 1);
	КонецЕсли;
	ДатаЗавершения = ТекущаяДатаСеанса();
	ДатаОкончания = Мин(КонецНедели(ДатаНачала), ДатаЗавершения);
	
	ЗапросРегистраторов.УстановитьПараметр("ДатаНачала", ДатаНачала);
	ЗапросРегистраторов.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	Выборка = ЗапросРегистраторов.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		Попытка
			ДобавитьНовуюОперациюПрослеживаемыхТоваров(Выборка.Регистратор, Выборка.Период);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось создать запись регистра ""ОперацииПрослеживаемыхТоваров"" по регистратору %Регистратор%
			                            |по причине %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Выборка.Регистратор);
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         Метаданные.РегистрыСведений.ОперацииПрослеживаемыхТоваров,
			                         Выборка.Регистратор,
			                         ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	// Будем хранить номер недели
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов + 1;
	
	Параметры.ОбработкаЗавершена = (ДатаОкончания = ДатаЗавершения);
	
КонецПроцедуры

Процедура ДобавитьНовуюОперациюПрослеживаемыхТоваров(ДокументСсылка, Период)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Получим объект документа
	ОбъектДокумента = ДокументСсылка.ПолучитьОбъект();
	
	МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументСсылка);
	ТаблицаПрослеживаемости = МенеджерДокумента.ОперацииСПрослеживаемымиТоварами(ОбъектДокумента);
	
	Если ТаблицаПрослеживаемости.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ОперацииПрослеживаемыхТоваров.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Для Каждого ТекущаяЗапись Из ТаблицаПрослеживаемости Цикл
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекущаяЗапись);
		НоваяЗапись.Регистратор = ДокументСсылка;
		НоваяЗапись.Период = Период;
		
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты регистра
	ОбязательныеРеквизиты = ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

#КонецОбласти

#КонецЕсли