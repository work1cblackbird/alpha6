///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка регистра "Действие скидок и маркетинговых программ"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем Автомобиль;
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Автомобиль") Тогда
		Автомобиль = Параметры.Отбор.Автомобиль;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Автомобиль) Тогда
		Элементы.Автомобиль.Видимость = Ложь;
		Заголовок = СтрШаблон(НСтр("ru = 'Повреждения автомобиля [%1]'"), Автомобиль);
	КонецЕсли;
	
	УстановитьУсловноеОформлениеСписка(Список.УсловноеОформление, ПоляСписка());
	
	Элементы.ФормаУстранено.Видимость = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ПоврежденияАвтомобилей);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Элементы.ФормаУстранено.Отображение = ОтображениеКнопки.КартинкаИТекст;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийАвтомобили");
	Иначе
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийАвтомобили");
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраСведенийАвтомобили");
	
КонецПроцедуры

&НаСервере
Процедура СписокПриЗагрузкеПользовательскихНастроекНаСервере(Элемент, Настройки, ИспользуютсяСтандартныеНастройки)
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Устранено(Команда)
	
	Результат = ОтметитьКакУстраненные(Элементы.Список.ВыделенныеСтроки);
	Если ЭтоОшибка(Результат) Тогда
		ПоказатьПредупреждение(, Результат.Сообщение,, НСтр("ru = 'Ошибка установки признака ""Устранено""'"));
	Иначе
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста

Функция ЭтоОшибка(Данные)
	
	Возврат (ТипЗнч(Данные) = Тип("Структура") И Данные.Свойство("Ошибка") И Данные.Ошибка);
	
КонецФункции

&НаСервереБезКонтекста
Функция ОтметитьКакУстраненные(Знач КлючиЗаписей)
	
	Для Каждого Ключ Из КлючиЗаписей Цикл
		Если Ключ.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		Менеджер = РегистрыСведений.ПоврежденияАвтомобилей.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Менеджер, Ключ);
		Менеджер.Прочитать();
		Если Менеджер.Выбран() И НЕ Менеджер.ПоврежденияУстранены Тогда
			Менеджер.ПоврежденияУстранены = Истина;
			Менеджер.ДатаУстранения       = ТекущаяДатаСеанса();
			Попытка
				Менеджер.Записать(Истина);
			Исключение
				Возврат Новый Структура("Ошибка,Сообщение", Истина, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьУсловноеОформлениеСписка(УсловноеОформление, ПоляУсловногоОформления)
	
	// красный цвет
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Для Каждого Поле Из ПоляУсловногоОформления Цикл
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Поле);
	КонецЦикла;
	
	ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПоврежденияУстранены");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаУстраненияПлан");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = ТекущаяДатаСеанса();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	
	// жирный шрифт
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Для Каждого Поле Из ПоляУсловногоОформления Цикл
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Поле);
	КонецЦикла;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПоврежденияУстранены");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
	
КонецПроцедуры

&НаСервере
Функция ПоляСписка()
	
	Поля = Новый Массив;
	
	Для Каждого Элемент Из Элементы.Список.ПодчиненныеЭлементы Цикл
		Поля.Добавить(Элемент.Имя);
	КонецЦикла;
	
	Возврат Поля;
	
КонецФункции

#КонецОбласти

