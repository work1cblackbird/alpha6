#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ИНИЦИАЛИЗАЦИИ СЛУЖЕБНЫХ РЕКВИЗИТОВ

Функция ПолучитьТаблицыИерархии(Запрос, Уровень = 0)

	Запрос.Текст = "ВЫБРАТЬ
	|	ТабПодразделений.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|	ВЫРАЗИТЬ(ТабПодразделений.Группа КАК Справочник.ПодразделенияКомпании).Родитель КАК Группа
	|ПОМЕСТИТЬ
	|	Уровень"+Формат(Уровень, "ЧГ=0")+"
	|ИЗ
	|	Уровень"+Формат(Уровень-1, "ЧН=0; ЧГ=0")+" КАК ТабПодразделений
	|ГДЕ
	|	(НЕ ВЫРАЗИТЬ(ТабПодразделений.Группа КАК Справочник.ПодразделенияКомпании).Родитель = ЗНАЧЕНИЕ(Справочник.ПодразделенияКомпании.ПустаяСсылка))";
	
	Если Запрос.Выполнить().Выгрузить()[0].Количество=0 Тогда
		КоличествоУровней = Уровень-1;
	Иначе
		КоличествоУровней = ПолучитьТаблицыИерархии(Запрос, Уровень+1);
	КонецЕсли;
	
	Возврат КоличествоУровней;
	
КонецФункции

Функция ПолучитьТекстТаблицыИерархии(ПодразделениеКомпании, Запрос)
	
	Если ПодразделениеКомпании = Неопределено Тогда
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ПодразделенияКомпании.Ссылка КАК ПодразделениеКомпании,
		|	ПодразделенияКомпании.Ссылка КАК Группа
		|ПОМЕСТИТЬ
		|	Уровень1
		|ИЗ
		|	Справочник.ПодразделенияКомпании КАК ПодразделенияКомпании
		|";
	Иначе
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ПодразделенияКомпании.Ссылка КАК ПодразделениеКомпании,
		|	ПодразделенияКомпании.Ссылка КАК Группа
		|ПОМЕСТИТЬ
		|	Уровень1
		|ИЗ
		|	Справочник.ПодразделенияКомпании КАК ПодразделенияКомпании
		|ГДЕ
		|	ПодразделенияКомпании.Ссылка В ИЕРАРХИИ (&ПодразделениеКомпании)
		|";
		Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
	КонецЕсли;
	
	Если Запрос.Выполнить().Выгрузить()[0].Количество = 0 Тогда
		КоличествоУровней = 0;
	Иначе
		КоличествоУровней = ПолучитьТаблицыИерархии(Запрос, 2);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабПодразделений.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|	ТабПодразделений.Группа КАК Группа,
	|	1 КАК Уровень
	|ПОМЕСТИТЬ
	|	ТабСправочника
	|ИЗ
	|	Уровень1 КАК ТабПодразделений";
	
	ТекстЗапросаУдаленияТаблиц = "";
	Для Итерация = 1 По КоличествоУровней Цикл
		
		ТекстУровень = Формат(Итерация+1,"ЧЦ=3; ЧДЦ=0; ЧН=0; ЧГ=0");
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабПодразделений.ПодразделениеКомпании КАК ПодразделениеКомпании,
		|	ТабПодразделений.Группа КАК Группа,
		|	" + ТекстУровень + " КАК Уровень
		|ИЗ
		|	Уровень" + ТекстУровень + " КАК ТабПодразделений";
		
		ТекстЗапросаУдаленияТаблиц = ТекстЗапросаУдаленияТаблиц + "
		|УНИЧТОЖИТЬ
		|	Уровень" + ТекстУровень+"
		|;
		|";
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + ";
	|
	|УНИЧТОЖИТЬ
	|	Уровень1
	|;
	|" + ТекстЗапросаУдаленияТаблиц + "
	|ВЫБРАТЬ
	|	ТабСправочника.ПодразделениеКомпании,
	|	МАКСИМУМ(ТабСправочника.Уровень) КАК Уровень
	|ПОМЕСТИТЬ
	|	ТабУровенейЭлементов
	|ИЗ
	|	ТабСправочника КАК ТабСправочника
	|СГРУППИРОВАТЬ ПО
	|	ТабСправочника.ПодразделениеКомпании
	|;
	|
	|ВЫБРАТЬ
	|	ТабСправочника.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|	ТабСправочника.Группа КАК Группа,
	|	ТабСправочника.Уровень КАК Порядок,
	|	ТабУровенейЭлементов.Уровень-ТабСправочника.Уровень КАК Уровень
	|ИЗ	
	|	ТабСправочника КАК ТабСправочника
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ТабУровенейЭлементов КАК ТабУровенейЭлементов
	|ПО
	|	ТабСправочника.ПодразделениеКомпании = ТабУровенейЭлементов.ПодразделениеКомпании
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбновитьСтруктуруИерархииПодразделений(ПодразделениеКомпании = Неопределено) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Если ПодразделениеКомпании = Неопределено Тогда
		НаборЗаписей = РегистрыСведений.СтруктураИерархииПодразделений.СоздатьНаборЗаписей();
		НаборЗаписей.Записать(Истина);
	Иначе
		
		// Удалить все записи для текущего элемента
		НаборЗаписей = РегистрыСведений.СтруктураИерархииПодразделений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПодразделениеКомпании.Установить(ПодразделениеКомпании);
		НаборЗаписей.Записать(Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтруктураИерархииПодразделений.ПодразделениеКомпании
		|ИЗ
		|	РегистрСведений.СтруктураИерархииПодразделений КАК СтруктураИерархииПодразделений
		|ГДЕ
		|	СтруктураИерархииПодразделений.Группа = &ПодразделениеКомпании
		|";
		
		Запрос.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеКомпании);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			// Удалить все записи для вложенного элемента
			НаборЗаписей = РегистрыСведений.СтруктураИерархииПодразделений.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ПодразделениеКомпании.Установить(Выборка.ПодразделениеКомпании);
			НаборЗаписей.Записать(Истина);
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = ПолучитьТекстТаблицыИерархии(ПодразделениеКомпании, Запрос);
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяЗапись = РегистрыСведений.СтруктураИерархииПодразделений.СоздатьМенеджерЗаписи();
		НоваяЗапись.ПодразделениеКомпании = Выборка.ПодразделениеКомпании;
		НоваяЗапись.Группа                = Выборка.Группа;
		НоваяЗапись.Порядок               = Выборка.Порядок;
		НоваяЗапись.Уровень               = Выборка.Уровень;
		НоваяЗапись.Записать(Истина);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ОбновитьСтруктуруИерархииПодразделений()

// Обновляет вспомогательные данные, которые зависят от конфигурации частично.
//
// Обновляется при наличии изменений конфигурации, записанных в параметры
// ограничения доступа при обновлении базы данных на текущую версию конфигурации.
//
Процедура ОбновитьСтруктуруИерархии() Экспорт
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СтруктураИерархииПодразделений");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
		ОбновитьСтруктуруИерархииПодразделений();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Функция ПолучитьРодителейПодразделения(ПодразделениеКомпании) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктураИерархииПодразделений.Группа КАК Группа
	               |ИЗ
	               |	РегистрСведений.СтруктураИерархииПодразделений КАК СтруктураИерархииПодразделений
	               |ГДЕ
	               |	СтруктураИерархииПодразделений.ПодразделениеКомпании = &ПодразделениеКомпании";
	Запрос.УстановитьПараметр("ПодразделениеКомпании",ПодразделениеКомпании);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьРодителейПодразделения()

#КонецОбласти

#КонецЕсли