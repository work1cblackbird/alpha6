// Модуль менеджера регистра сведений "Опции автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции   

Процедура ЗаполнитьРегистрДокументами() Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ОпцииАвтомобилей.Автомобиль КАК Автомобиль,
	              |	ОпцииАвтомобилей.ДокументДвижения КАК Документ
	              |ИЗ
	              |	РегистрСведений.ОпцииАвтомобилей КАК ОпцииАвтомобилей
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыДвиженияОпцииАвтомобилей КАК ДокументыДвиженияОпцииАвтомобилей
	              |		ПО ОпцииАвтомобилей.Автомобиль = ДокументыДвиженияОпцииАвтомобилей.Автомобиль
	              |			И ОпцииАвтомобилей.ДокументДвижения = ДокументыДвиженияОпцииАвтомобилей.ДокументДвижения
	              |ГДЕ
	              |	ДокументыДвиженияОпцииАвтомобилей.Автомобиль ЕСТЬ NULL
	              |	И ДокументыДвиженияОпцииАвтомобилей.ДокументДвижения ЕСТЬ NULL";
			
	РезультатЗапроса = Запрос.Выполнить();  
	
	Если НЕ РезультатЗапроса.Пустой() Тогда 
			
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий () Цикл  				
			
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.ДокументыДвиженияОпцииАвтомобилей");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса; 
			ЭлементБлокировки.УстановитьЗначение("Автомобиль" , Выборка.Автомобиль);
			НачатьТранзакцию();
			БлокировкаДанных.Заблокировать();
			
			НаборДвиженийОпций = РегистрыСведений.ДокументыДвиженияОпцииАвтомобилей.СоздатьНаборЗаписей(); 
			НаборДвиженийОпций.Отбор.ДокументДвижения.Установить(Выборка.Документ);
			НаборДвиженийОпций.Отбор.Автомобиль.Установить(Выборка.Автомобиль);
			НаборДвиженийОпций.Прочитать();
			НаборДвиженийОпций.Очистить();
				
			НоваяЗапись = НаборДвиженийОпций.Добавить();
			НоваяЗапись.ДокументДвижения = Выборка.Документ;
			НоваяЗапись.Автомобиль       = Выборка.Автомобиль;   
			НоваяЗапись.ЗаписьАктивна    = Истина;	 
					
			Попытка
					 
				НаборДвиженийОпций.Записать();
				УпорядочитьАктивностьОпций(Выборка.Автомобиль);
				ЗафиксироватьТранзакцию();
			Исключение  
				ОтменитьТранзакцию(); 
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Ошибка обновления регистра ""Документы движения опции автомобиля""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Предупреждение,
					,,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
				); 
				
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;

	

КонецПроцедуры

Процедура УстановитьБлокировкуПоАвтомобилю(Автомобиль)
	
	// установим блокировку
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрСведений", "ДокументыДвиженияОпцииАвтомобилей");
	
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Автомобиль", Автомобиль);
	
	ОписаниеИсточника = Новый Соответствие;
	
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
КонецПроцедуры

Функция ЕстьЗаписиВРегистреОпций(Документ, Автомобиль) 
	
	ЕстьЗаписи = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОпцииАвтомобилей.Опция КАК Опция
	|ИЗ
	|	РегистрСведений.ОпцииАвтомобилей КАК ОпцииАвтомобилей
	|ГДЕ
	|	ОпцииАвтомобилей.Автомобиль = &Автомобиль
	|	И ОпцииАвтомобилей.ДокументДвижения = &ДокументДвижения
	|	И ОпцииАвтомобилей.ЗаписьАктивна"; 
	Запрос.УстановитьПараметр("ДокументДвижения", Документ);
	Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда   
		ЕстьЗаписи = Истина;
	КонецЕсли;
	
	Возврат ЕстьЗаписи;
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ 

Процедура УпорядочитьАктивностьОпций(Автомобиль, ИгнорируемыеДокументы = Неопределено) Экспорт
	
	Если ИгнорируемыеДокументы = Неопределено Тогда
		ИгнорируемыеДокументы = Новый Массив;
	КонецЕсли;
	
	// получим последний документ
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДокументыДвиженияОпцииАвтомобилей.ДокументДвижения КАК ДокументДвижения
	|ИЗ
	|	РегистрСведений.ДокументыДвиженияОпцииАвтомобилей КАК ДокументыДвиженияОпцииАвтомобилей
	|ГДЕ
	|	ДокументыДвиженияОпцииАвтомобилей.Автомобиль = &Автомобиль
	|	И ДокументыДвиженияОпцииАвтомобилей.ДокументДвижения.Проведен = ИСТИНА
	|	И НЕ ДокументыДвиженияОпцииАвтомобилей.ДокументДвижения В (&ИгнорируемыеДокументы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыДвиженияОпцииАвтомобилей.ДокументДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументыДвиженияОпцииАвтомобилей.ДокументДвижения.МоментВремени УБЫВ";
	Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
	Запрос.УстановитьПараметр("ИгнорируемыеДокументы", ИгнорируемыеДокументы);
	РезультатЗапроса = Запрос.Выполнить();
		
	Выборка = РезультатЗапроса.Выбрать(); Выборка.Следующий();
	ПоследнийДокумент = Выборка.ДокументДвижения;
	
	// создаем набор записей
	Набор = РегистрыСведений.ДокументыДвиженияОпцииАвтомобилей.СоздатьНаборЗаписей();
	Набор.Отбор.Автомобиль.Установить(Автомобиль);
	Набор.Прочитать();
	
	Для Каждого ЗаписьНабора Из Набор Цикл
		ЗаписьНабора.ЗаписьАктивна = (ПоследнийДокумент = ЗаписьНабора.ДокументДвижения);
	КонецЦикла;
	
	Попытка
		Набор.Записать();
	Исключение КонецПопытки;
	
КонецПроцедуры

Функция ОбновитьОпцииАвтомобиля(Автомобиль, Документ) Экспорт
	
	Отказ = Ложь;
	
	УстановитьБлокировкуПоАвтомобилю(Автомобиль);
	УстановитьПривилегированныйРежим(Истина);
	
	// Если есть записи, а мы оказались в этой процедуре, значит опции просто удалили
	ЕстьЗаписи = ЕстьЗаписиВРегистреОпций(Документ, Автомобиль);
	Если ЕстьЗаписи Тогда
		ИгнорируемыеДокументы = Новый Массив;
		ИгнорируемыеДокументы.Добавить(Документ);

		УпорядочитьАктивностьОпций(Автомобиль, ИгнорируемыеДокументы);
		Возврат Отказ;
	КонецЕсли; 
	
	НаборДвиженийОпций = РегистрыСведений.ДокументыДвиженияОпцииАвтомобилей.СоздатьНаборЗаписей(); 
	НаборДвиженийОпций.Отбор.ДокументДвижения.Установить(Документ);
	НаборДвиженийОпций.Отбор.Автомобиль.Установить(Автомобиль);
	НаборДвиженийОпций.Прочитать();
	НаборДвиженийОпций.Очистить();
		
	НоваяЗапись = НаборДвиженийОпций.Добавить();
	НоваяЗапись.ДокументДвижения = Документ;
	НоваяЗапись.Автомобиль       = Автомобиль;   
	НоваяЗапись.ЗаписьАктивна    = Истина;	 
			
	Попытка
			 
		НаборДвиженийОпций.Записать();
		УпорядочитьАктивностьОпций(Автомобиль);
	Исключение
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Не удалось обновить документы движения опций автомобиля <%1>.'"),
					Автомобиль
				)
			);
		Отказ = Истина;
		
	КонецПопытки;
		
	
	
	Возврат Отказ;
	
КонецФункции

#Область ПараметрыОбработкиРеквизитовОбъекта

Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	ОбязательныеРеквизиты = ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
	Возврат ОбязательныеРеквизиты;
	
КонецФункции 

Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	УникальныеРеквизиты = Новый Структура();
	
	Возврат УникальныеРеквизиты;
	
КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли