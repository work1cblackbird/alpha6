///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка регистра "Порядок закрытия балансовых статей"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПорядокЗаписиНаСервере(Направление, Порядок, Статья)
	
	Если Направление = "СдвинутьВверх" Тогда // Надо найти ближайший элемент, номер которого меньше текущего.
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПорядокЗакрытияБалансовыхСтатей.Статья,
		|	ПорядокЗакрытияБалансовыхСтатей.Порядок КАК Порядок
		|ИЗ
		|	РегистрСведений.ПорядокЗакрытияБалансовыхСтатей КАК ПорядокЗакрытияБалансовыхСтатей
		|ГДЕ
		|	ПорядокЗакрытияБалансовыхСтатей.Порядок < &Порядок
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок УБЫВ";
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Порядок", Порядок);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			// Меняем записи местами
			СтарыйПорядок  = Порядок;
			МенеджерЗаписи = РегистрыСведений.ПорядокЗакрытияБалансовыхСтатей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Статья  = Статья;
			МенеджерЗаписи.Порядок = Выборка.Порядок;
			МенеджерЗаписи.Записать();
			
			МенеджерЗаписи = РегистрыСведений.ПорядокЗакрытияБалансовыхСтатей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Статья  = Выборка.Статья;
			МенеджерЗаписи.Порядок = СтарыйПорядок;
			МенеджерЗаписи.Записать();
			
		Иначе 
			// Значит сверху нет элементов. Тогда просто уменьшим порядок на единицу.
			Если Порядок > 0 Тогда
				МенеджерЗаписи = РегистрыСведений.ПорядокЗакрытияБалансовыхСтатей.СоздатьМенеджерЗаписи();
				МенеджерЗаписи.Статья  = Статья;
				МенеджерЗаписи.Порядок = Порядок - 1;
				МенеджерЗаписи.Записать();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Направление = "СдвинутьВниз" Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПорядокЗакрытияБалансовыхСтатей.Статья,
		|	ПорядокЗакрытияБалансовыхСтатей.Порядок КАК Порядок
		|ИЗ
		|	РегистрСведений.ПорядокЗакрытияБалансовыхСтатей КАК ПорядокЗакрытияБалансовыхСтатей
		|ГДЕ
		|	ПорядокЗакрытияБалансовыхСтатей.Порядок > &Порядок
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок";
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Порядок", Порядок);
		Запрос.УстановитьПараметр("Статья",  Статья);

		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			// Меняем записи местами
			СтарыйПорядок  = Порядок;
			МенеджерЗаписи = РегистрыСведений.ПорядокЗакрытияБалансовыхСтатей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Статья  = Статья;
			МенеджерЗаписи.Порядок = Выборка.Порядок;
			МенеджерЗаписи.Записать();
			
			МенеджерЗаписи = РегистрыСведений.ПорядокЗакрытияБалансовыхСтатей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Статья  = Выборка.Статья;
			МенеджерЗаписи.Порядок = СтарыйПорядок;
			МенеджерЗаписи.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПорядокЗаписи(Команда)
	
	ТекЗапись = Элементы.Список.ТекущиеДанные;
	Если ТекЗапись = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьПорядокЗаписиНаСервере(Команда.Имя, ТекЗапись.Порядок, ТекЗапись.Статья);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийПорядокЗакрытияБалансовыхСтатей");
	Иначе
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийПорядокЗакрытияБалансовыхСтатей");	
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраСведенийПорядокЗакрытияБалансовыхСтатей");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьНаборамиЗаписей(Команда)
	
	Если ПроверкаЗаписей() Тогда
		ОбработкаОповещения = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияОчисткаЗаписейИЗаполнение", ЭтотОбъект, Команда.Имя);
		ПоказатьВопрос(ОбработкаОповещения, НСтр(" ru = 'Внимание! При автозаполнении все существующие записи регистра будут удалены.
		|Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	ИначеЕсли Команда.Имя = "Автозаполнение" Тогда
		ЗаполнитьДвижениями();
	ИначеЕсли Команда.Имя = "ПоПредопределенным" Тогда
		ЗаполнитьПредопределенными();
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОчиститьЗаписи() 
	
	НаборЗаписей = РегистрыСведений.ПорядокЗакрытияБалансовыхСтатей.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьДвижениями()
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтатьиДоходовИРасходовСтатьиРаспределения.Ссылка КАК СтатьяДиР
	|ИЗ
	|	Справочник.СтатьиДоходовИРасходов.СтатьиРаспределения КАК СтатьиДоходовИРасходовСтатьиРаспределения
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатьиДоходовИРасходовСтатьиРаспределения.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатьиДоходовИРасходовСтатьиРаспределения.Ссылка.Наименование";
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Счетчик = 0;
	НаборЗаписей = РегистрыСведений.ПорядокЗакрытияБалансовыхСтатей.СоздатьНаборЗаписей();
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Статья  = Выборка.СтатьяДиР;
		НоваяЗапись.Порядок = Счетчик;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	НаборЗаписей.Записать(Ложь);
	
КонецПроцедуры 

&НаСервере
Функция ПроверкаЗаписей()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПорядокЗакрытияБалансовыхСтатей.Статья
	|ИЗ
	|	РегистрСведений.ПорядокЗакрытияБалансовыхСтатей КАК ПорядокЗакрытияБалансовыхСтатей";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПредопределенными()
	
	РегистрыСведений.ПорядокЗакрытияБалансовыхСтатей.ВыполнитьНачальноеЗаполнение();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияОчисткаЗаписейИЗаполнение(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		ОчиститьЗаписи();
	КонецЕсли;
	
	Если ДополнительныеПараметры = "Автозаполнение" Тогда
		ЗаполнитьДвижениями();
	ИначеЕсли ДополнительныеПараметры = "ПоПредопределенным" Тогда
		ЗаполнитьПредопределенными();
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

