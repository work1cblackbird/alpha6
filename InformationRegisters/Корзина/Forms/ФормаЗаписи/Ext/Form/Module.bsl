///////////////////////////////////////////////////////////////////////////////
// Модуль формы записи регистра "Корзина"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		Запись.Дата         = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Дата", ТекущаяДатаСеанса());
		Запись.Клиент 		= ПолучитьЗначениеПараметраСтруктуры(Параметры, "Клиент", Справочники.Контрагенты.ПустаяСсылка());
		Владелец 			= ПолучитьЗначениеПараметраСтруктуры(Параметры, "Владелец", "");
		
		Если Запись.Клиент <> Справочники.Контрагенты.ПустаяСсылка() Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Контрагенты.НаименованиеПолное КАК НаименованиеПолное
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка", Запись.Клиент);
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			ПолученныйКлиент = РезультатЗапроса[0];
			
			КлиентЗапись = ", клиента: " + ПолученныйКлиент.НаименованиеПолное;
		Иначе
			КлиентЗапись = "";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Владелец) Тогда
			КорзинаНазвание = "Корзина по документу: " + Владелец + КлиентЗапись;	
		Иначе
			КорзинаНазвание = "Корзина от " + ТекущаяДата() + КлиентЗапись;
		КонецЕсли;
		
		Запись.Наименование = КорзинаНазвание;
		
		АдресПереданногоХранилища = ПолучитьЗначениеПараметраСтруктуры(Параметры, "Корзина", "");
		
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(АдресПереданногоХранилища) Тогда
		Структура = Новый Структура;
		Структура.Вставить("Товары", ПолучитьИзВременногоХранилища(АдресПереданногоХранилища));
		ТекущийОбъект.Значение = Новый ХранилищеЗначения(Структура);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("КорзинаЗаписана");
	
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СформироватьАвтоНаименование();
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НаименованиеНачалоВыбораЗавершение", ЭтотОбъект), Элементы.Наименование.СписокВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Если ВыбранныйЭлемент <> Неопределено Тогда
        Запись.Наименование = ВыбранныйЭлемент.Значение;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = Строка(Запись.Клиент)+" от "+Формат(Запись.Дата, "ДЛФ=D");
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Возврат СтрокаНаименования;
	
КонецФункции 

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Запись.Наименование) Тогда
		Запись.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Запись.Наименование) Тогда
		Запись.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	УправлениеДиалогомРегистраСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомРегистраСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

