///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка регистра "Корзина"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	РежимВыбора = ПолучитьЗначениеПараметраСтруктуры(Параметры, "РежимВыбора", Ложь);
	Элементы.Список.РежимВыбора = РежимВыбора;
	Элементы.ФормаВыбрать.Видимость = РежимВыбора;
					
	КолонкиКодАртикулИПроизводитель = Новый Структура();
	КолонкиКодАртикулИПроизводитель.Вставить("Код", Элементы.ТаблицаКорзиныКод);
	КолонкиКодАртикулИПроизводитель.Вставить("Артикул", Элементы.ТаблицаКорзиныАртикул);
	РаботаСФормой.НастроитьВидимостьКолонокКодАртикулИПроизводитель(КолонкиКодАртикулИПроизводитель);
	
	// Заполняем при вызове команды заплнения из табличной части.
	Если Параметры.Свойство("ИмяТабличнойЧасти") Тогда
		ПараметрыЗакрытия = Новый Структура("ИмяТабличнойЧасти,ИмяРеквизитаКоличество,ЕстьЯчейка,ПолноеИмяОбъекта");
		ЗаполнитьЗначенияСвойств(ПараметрыЗакрытия, Параметры);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Элементы.Список.РежимВыбора Тогда
		Элементы.ФормаСоздать.Отображение = ОтображениеКнопки.Картинка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если ЗначениеЗаполнено(Элементы.Список.ТекущаяСтрока) Тогда
		Если ТипЗнч(ПараметрыЗакрытия) = Тип("Структура") Тогда
			ПараметрыЗакрытия.Вставить("ПараметрыДействия", Новый Структура);
			ПараметрыЗакрытия.Вставить("ПараметрыКорзины", Элементы.Список.ТекущаяСтрока);
			Закрыть(ПараметрыЗакрытия);
		Иначе
			Закрыть(Элементы.Список.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если РежимВыбора Тогда
		СтандартнаяОбработка = Ложь;
		Выбрать(Неопределено);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьТаблицуКорзины(КлючЗаписи)
	
	МенеджерЗаписи 				= РегистрыСведений.Корзина.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Дата 		= КлючЗаписи.Дата;
	МенеджерЗаписи.Наименование	= КлючЗаписи.Наименование;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() Тогда
		ТаблицаКорзины.Загрузить(ПолучитьЗначениеПараметраСтруктуры(МенеджерЗаписи.Значение.Получить(), "Товары", Новый ТаблицаЗначений));
	Иначе
		ТаблицаКорзины.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ЭтотОбъект.ПодключитьОбработчикОжидания("Подключаемый_СписокПриАктивизацииСтроки", 0.5, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СписокПриАктивизацииСтроки()
	
	Если ЗначениеЗаполнено(Элементы.Список.ТекущаяСтрока) Тогда
		ЗаполнитьТаблицуКорзины(Элементы.Список.ТекущаяСтрока);
	КонецЕсли;
	
	Элементы.ТаблицаКорзиныХарактеристикаНоменклатуры.Видимость = ОпределитьВидимостьКолонкиХарактеристик();
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийКорзина");
	Иначе
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийКорзина");
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраСведенийКорзина");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОпределитьВидимостьКолонкиХарактеристик()
	
	МассивСтрокБезХарактеристик = ТаблицаКорзины.НайтиСтроки(Новый Структура("ХарактеристикаНоменклатуры", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка()));	
	
	Возврат МассивСтрокБезХарактеристик.Количество()<>ТаблицаКорзины.Количество();
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	// Цвет текста, Отметка незаполненного, Текст, Только просмотр
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаКорзиныХарактеристикаНоменклатуры");
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаКорзины.ХарактеристикаНоменклатуры");
	ОтборЭлемента.ВидСравнения  = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаКорзины.ВладелецХарактеристики");
	ОтборЭлемента.ВидСравнения  = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<без характеристик>'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

#КонецОбласти

