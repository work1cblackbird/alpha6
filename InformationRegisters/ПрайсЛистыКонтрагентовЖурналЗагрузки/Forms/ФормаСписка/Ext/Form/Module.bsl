///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка регистра "Прайс-листы контрагентов журнал загрузки"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	Если НЕ Пользователи.РолиДоступны(Метаданные.Роли.ПолныеПрава.Имя) Тогда
		ЭтотОбъект.ТолькоПросмотр = Истина;
		Элементы.ФормаУдалитьЗаписиСтарше.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры 


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийПрайсЛистыКонтрагентовЖурналЗагрузки");
		
	Иначе
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийПрайсЛистыКонтрагентовЖурналЗагрузки");
		
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)

	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраСведенийПрайсЛистыКонтрагентовЖурналЗагрузки");
			
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьЗаписиСтарше(Команда)
	
	ОбработкаОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаВыбораДатыУдаления", ЭтотОбъект);
	
	ПоказатьВводДаты(
		ОбработкаОповещения,
		НачалоМесяца(ТекущаяДата()),
		НСтр("ru = 'Дата, до которой надо удалить все записи журнала'"), 
		ЧастиДаты.Дата
	);
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УдалитьЗаписи(ПрайсЛист, ДатаУдаления)
	
	РегистрыСведений.ПрайсЛистыКонтрагентовЖурналЗагрузки.УдалитьЗаписиСтаршеДаты(ДатаУдаления, ПрайсЛист);
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбработкаВыбораДатыУдаления(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПрайсЛист = Неопределено;
	
	Для Каждого ЭлементНастройки Из Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементНастройки) = Тип("ОтборКомпоновкиДанных") Тогда
			Для Каждого ЭлементОтбора Из ЭлементНастройки.Элементы Цикл
				Если ЭлементОтбора.Использование И ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПрайсЛист") Тогда
					Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
						ПрайсЛист = ЭлементОтбора.ПравоеЗначение;
					ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке 
								И ЭлементОтбора.ПравоеЗначение.Количество() = 1 Тогда
						ПрайсЛист = ЭлементОтбора.ПравоеЗначение[0].Значение;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	УдалитьЗаписи(ПрайсЛист, РезультатОповещения);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры 


#КонецОбласти

