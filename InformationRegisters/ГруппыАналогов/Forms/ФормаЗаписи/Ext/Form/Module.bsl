///////////////////////////////////////////////////////////////////////////////
// Модуль формы записи регистра "Сведения о сотрудниках"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Источник", НоменклатураИсточник) И НЕ НоменклатураИсточник.Пустая() Тогда
		Если ПустаяСтрока(Запись.ИдентификаторГруппы) Тогда
			Запись.ИдентификаторГруппы =
				ИдентификаторГруппыНоменклатуры(НоменклатураИсточник.АртикулДляПоиска, НоменклатураИсточник.Производитель);
		КонецЕсли;
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") И Параметры.ЗначенияЗаполнения.Свойство("ИдентификаторГруппы") Тогда
		Запись.ИдентификаторГруппы = Параметры.ЗначенияЗаполнения.ИдентификаторГруппы;
	КонецЕсли;
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда
		ЗаполнитьЗначенияСвойств(Запись, ПолучитьДанныеСсылкиНаНоменклатуру(ВыбранноеЗначение));
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Производители = ПрайсЛистыКонтрагентов.ПроизводителиАртикула(Запись.Артикул);
	Элементы.Производитель.СписокВыбора.Очистить();
	
	Для Каждого Производитель Из Производители Цикл
		Элементы.Производитель.СписокВыбора.Добавить(
			Производитель,
			?(Производитель.Пустая(), "<Пустое значение>", Производитель));
	КонецЦикла;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ТребуетсяОбновитьНоменклатуру = Ложь;
	
	ИдентификаторГруппыТекущейНоменклатуры =
		ИдентификаторГруппыНоменклатуры(Запись.АртикулДляПоиска, Запись.Производитель);
	
		Если ИдентификаторГруппыТекущейНоменклатуры <> Запись.ИдентификаторГруппы 
			И НЕ (ПустаяСтрока(ИдентификаторГруппыТекущейНоменклатуры) ИЛИ ПустаяСтрока(Запись.ИдентификаторГруппы)) Тогда
		ДопПараметры = Новый Структура(
			"ГруппаДляОбъединения,ТекущийИдентификатор",
			ИдентификаторГруппыТекущейНоменклатуры,
			Запись.ИдентификаторГруппы);
		// необходимо объединять группы
		Отказ      = Истина;
		Оповещение = Новый ОписаниеОповещения("ВопросОбОбъединенииГруппАналоговЗавершение", ЭтотОбъект, ДопПараметры);
		
		ТекстВопроса = НСтр("ru = 'Номенклатура с указанным артикулом и производителем уже входит в группу аналогом.
			|Объединить группы?'");
		
		ВариантыОтвета = Новый СписокЗначений;
		ВариантыОтвета.Добавить("АвтоОбъединение"  , "ОБЪЕДИНИТЬ автоматически");
		ВариантыОтвета.Добавить("РучноеОбъединение", "ОБЪЕДИНИТЬ вручную");
		ВариантыОтвета.Добавить("Отмена"           , "Не объединять");
		ПоказатьВопрос(Оповещение, ТекстВопроса, ВариантыОтвета, , , НСтр("ru = 'Объединение групп'"));
		
		Возврат;
	ИначеЕсли ПустаяСтрока(Запись.ИдентификаторГруппы) И НЕ ПустаяСтрока(ИдентификаторГруппыТекущейНоменклатуры) Тогда
		ТребуетсяОбновитьНоменклатуру = Истина;
		Запись.ИдентификаторГруппы    = ИдентификаторГруппыТекущейНоменклатуры;
	ИначеЕсли ПустаяСтрока(ИдентификаторГруппыТекущейНоменклатуры) И ПустаяСтрока(Запись.ИдентификаторГруппы) Тогда
		ТребуетсяОбновитьНоменклатуру = Истина;
		Запись.ИдентификаторГруппы = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
	
	Если ТребуетсяОбновитьНоменклатуру Тогда
		Оповещение = Новый ОписаниеОповещения("УстановитьИдентификаторГруппыНоменклатуры", ЭтотОбъект);
		ВыполнитьОбработкуОповещения(Оповещение, Запись.ИдентификаторГруппы);
	Иначе
		ЗаписатьНоменклатуруИсточник();
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Проверим аналог на значения ГлавныйПоГруппе и ГлавныйПоПроизводителю
	Если Запись.ГлавныйПоГруппе ИЛИ Запись.ГлавныйПоПроизводителю Тогда
		// Выберем аналоги из группы с установленными значениями ГлавныйПоГруппе и ГлавныйПоПроизводителю.
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ГруппыАналогов.ГлавныйПоГруппе,
		|	ГруппыАналогов.ГлавныйПоПроизводителю,
		|	ГруппыАналогов.ИдентификаторГруппы,
		|	ГруппыАналогов.АртикулДляПоиска,
		|	ГруппыАналогов.Производитель
		|ИЗ
		|	РегистрСведений.ГруппыАналогов КАК ГруппыАналогов
		|ГДЕ
		|	ГруппыАналогов.ИдентификаторГруппы = &ИдентификаторГруппы
		|	И ГруппыАналогов.АртикулДляПоиска <> &АртикулДляПоиска
		|	И (ГруппыАналогов.ГлавныйПоГруппе = ИСТИНА
		|			ИЛИ ГруппыАналогов.ГлавныйПоПроизводителю = ИСТИНА)";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("АртикулДляПоиска", Запись.АртикулДляПоиска);
		Запрос.УстановитьПараметр("ИдентификаторГруппы", Запись.ИдентификаторГруппы);
		ВыборкаВсехАналоговГруппы = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаВсехАналоговГруппы.Следующий() Цикл
			// Прочитаем аналог из группы
			Аналог = РегистрыСведений.ГруппыАналогов.СоздатьМенеджерЗаписи();
			Аналог.АртикулДляПоиска    = ВыборкаВсехАналоговГруппы.АртикулДляПоиска;
			Аналог.ИдентификаторГруппы = ВыборкаВсехАналоговГруппы.ИдентификаторГруппы;
			Аналог.Производитель       = ВыборкаВсехАналоговГруппы.Производитель;
			Аналог.Прочитать();
			
			Если НЕ Аналог.Выбран() Тогда
				Продолжить;
			КонецЕсли;
			
			// Переопределяем значение аналога
			Если Аналог.ГлавныйПоГруппе И Запись.ГлавныйПоГруппе Тогда
				Аналог.ГлавныйПоГруппе = Ложь;
			КонецЕсли;
			
			// Переопределяем значение аналога
			Если Аналог.ГлавныйПоПроизводителю И Запись.ГлавныйПоПроизводителю
				И Аналог.Производитель = Запись.Производитель Тогда
				Аналог.ГлавныйПоПроизводителю = Ложь;
			КонецЕсли;
			
			// Записываем аналог
			Аналог.Записать();
		КонецЦикла;
	КонецЕсли;
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура("РежимВыбора", Истина);
	ОткрытьФорму(
		"Справочник.Номенклатура.ФормаВыбора",
		ПараметрыОткрытия,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеАвтоПодбор(
	Элемент,
	Текст,
	ДанныеВыбора,
	ПараметрыПолученияДанных,
	Ожидание,
	СтандартнаяОбработка)
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("Отбор"                , Новый Структура);
	ПараметрыПодбора.Вставить("ВыборГруппИЭлементов" , ПредопределенноеЗначение("ИспользованиеГруппИЭлементов.Элементы"));
	ПараметрыПодбора.Вставить("СтрокаПоиска"         , Текст);
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.Номенклатура"), ПараметрыПодбора);
	
КонецПроцедуры

&НаКлиенте
Процедура АртикулАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПодбора = Новый Структура;
	
	Если ЗначениеЗаполнено(Запись.Производитель) Тогда
		
		Отбор = Новый Структура("Производитель", Запись.Производитель);
		ПараметрыПодбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
	
	ПараметрыПодбора.Вставить("ВыборГруппИЭлементов" , ПредопределенноеЗначение("ИспользованиеГруппИЭлементов.Элементы"));
	ПараметрыПодбора.Вставить("СтрокаПоиска"         , Текст);
	
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.Номенклатура"), ПараметрыПодбора);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда
		СтандартнаяОбработка = Ложь;
		ЗаполнитьЗначенияСвойств(Запись, ПолучитьДанныеСсылкиНаНоменклатуру(ВыбранноеЗначение));
		АртикулПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АртикулОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда
		СтандартнаяОбработка = Ложь;
		ЗаполнитьЗначенияСвойств(Запись, ПолучитьДанныеСсылкиНаНоменклатуру(ВыбранноеЗначение));
		АртикулПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АртикулПриИзмененииНаСервере()
	
	Производители = ПрайсЛистыКонтрагентов.ПроизводителиАртикула(Запись.Артикул);
	Элементы.Производитель.СписокВыбора.Очистить();
	
	Для Каждого Производитель Из Производители Цикл
		Элементы.Производитель.СписокВыбора.Добавить(
			Производитель,
			?(Производитель.Пустая(), НСтр("ru = '<Пустое значение>'"), Производитель));
	КонецЦикла;
	
	Запись.АртикулДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(Запись.Артикул);
	
КонецПроцедуры

&НаКлиенте
Процедура АртикулПриИзменении(Элемент)
	
	АртикулПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеСсылкиНаНоменклатуру(СсылкаНаНоменклатуру)
	
	Если ЗначениеЗаполнено(СсылкаНаНоменклатуру) Тогда
		СтруктураНоменклатуры = Новый Структура;
		
		СтруктураНоменклатуры.Вставить("Артикул"         , СсылкаНаНоменклатуру.Артикул);
		СтруктураНоменклатуры.Вставить("Наименование"    , СсылкаНаНоменклатуру.Наименование);
		СтруктураНоменклатуры.Вставить("Производитель"   , СсылкаНаНоменклатуру.Производитель);
		СтруктураНоменклатуры.Вставить("АртикулДляПоиска", СсылкаНаНоменклатуру.АртикулДляПоиска);
	Иначе
		СтруктураНоменклатуры = Новый Структура("Артикул,Наименование,Производитель,АртикулДляПоиска");
	КонецЕсли;
	
	Возврат СтруктураНоменклатуры;
	
КонецФункции 

&НаСервереБезКонтекста
Функция ИдентификаторГруппыНоменклатуры(АртикулДляПоиска, Производитель)
	
	Если ПустаяСтрока(АртикулДляПоиска) Тогда
		Возврат "";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ГруппыАналогов.ИдентификаторГруппы
	|ИЗ
	|	РегистрСведений.ГруппыАналогов КАК ГруппыАналогов
	|ГДЕ
	|	ГруппыАналогов.АртикулДляПоиска = &АртикулДляПоиска И
	|	ГруппыАналогов.Производитель = &Производитель";
	Запрос.УстановитьПараметр("АртикулДляПоиска", АртикулДляПоиска);
	Запрос.УстановитьПараметр("Производитель"   , Производитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0].ИдентификаторГруппы;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьИдентификаторГруппыНоменклатурыНаСервере(НовыйИдентификаторГруппы)
	
	МенеджерЗаписи = РегистрыСведений.ГруппыАналогов.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, НоменклатураИсточник);
	
	МенеджерЗаписи.ИдентификаторГруппы = НовыйИдентификаторГруппы;
	
	Попытка
		МенеджерЗаписи.Записать(Истина);
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка менеджера записи'"),
       				УровеньЖурналаРегистрации.Ошибка,,,
       				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИдентификаторГруппыНоменклатуры(НовыйИдентификаторГруппы, ДопПараметры = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(НовыйИдентификаторГруппы) Тогда
		УстановитьИдентификаторГруппыНоменклатурыНаСервере(НовыйИдентификаторГруппы);
		ОповеститьОбИзменении(НоменклатураИсточник);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНоменклатуруИсточник()
	
	ИД = ИдентификаторГруппыНоменклатуры(НоменклатураИсточник.АртикулДляПоиска, НоменклатураИсточник.Производитель);
	Если ИД = "" И Не ПустаяСтрока(Запись.ИдентификаторГруппы) Тогда
		УстановитьИдентификаторГруппыНоменклатурыНаСервере(Запись.ИдентификаторГруппы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОбОбъединенииГруппАналоговЗавершение(Ответ, ДопПараметры = Неопределено) Экспорт
	
	Если СтрНачинаетсяС(Ответ, "РучноеОбъединение") Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Источник", НоменклатураИсточник);
		
		Если НЕ ЗначениеЗаполнено(НоменклатураИсточник) Тогда
			ПараметрыФормы.Вставить("Источник", ДопПараметры.ТекущийИдентификатор);
		КонецЕсли;
		
		ЗаписатьНоменклатуруИсточник();
		
		ГруппыИсточники = Новый Массив;
		ГруппыИсточники.Добавить(ДопПараметры.ГруппаДляОбъединения);
		
		ПараметрыФормы.Вставить("ГруппыИсточники", ГруппыИсточники);
		
		Описание = Новый ОписаниеОповещения("ЗакрытьФорму", ЭтотОбъект);
		
		ОткрытьФорму(
			"РегистрСведений.ГруппыАналогов.Форма.ФормаДобавленияАналога",
			ПараметрыФормы,
			ЭтотОбъект,
			КлючУникальности,
			,
			,
			Описание,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли СтрНачинаетсяС(Ответ, "АвтоОбъединение") Тогда
		ПрайсЛистыКонтрагентовВызовСервера.
			ОбъединитьГруппыАналогов(ДопПараметры.ТекущийИдентификатор, ДопПараметры.ГруппаДляОбъединения);
		
		ПараметрыОповещения = Новый Структура("ИдентификаторГруппы", ДопПараметры.ТекущийИдентификатор);
		
		Оповестить("ИзмененаГруппаАналогов", ПараметрыОповещения, КлючУникальности);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Результат, ДопПараметры) Экспорт
	
	Закрыть();
	
КонецПроцедуры

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	УправлениеДиалогомРегистраСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомРегистраСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыОповещения = Новый Структура("ИдентификаторГруппы", Запись.ИдентификаторГруппы);
	Оповестить("ИзмененыДанныеРегистраГруппыАналогов", ПараметрыОповещения, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

