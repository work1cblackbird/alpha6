///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка регистра "Группы аналогов"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	Если Параметры.Свойство("Номенклатура") Тогда
		Номенклатура = Параметры.Номенклатура;
		ЗаполнитьРеквизитыНоменклатуры();
		УстановитьОтборСписка();
	КонецЕсли;
	
	Элементы.Создать.Видимость = ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.ГруппыАналогов);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.Создать.Отображение = ОтображениеКнопки.КартинкаИТекст;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаГруппаАналогов" И Не ПустаяСтрока(Параметр.ИдентификаторГруппы)
		И АртикулДляПоиска <> "" Тогда
		ПоместитьТекущуюНоменклатуруВГруппу(Параметр);
		УстановитьОтборСписка();
	ИначеЕсли ИмяСобытия = "ИзмененыДанныеРегистраГруппыАналогов" Тогда 
		ЭтаФорма.ОбновитьОтображениеДанных();
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийГруппыАналогов");
	Иначе
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийГруппыАналогов");
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраСведенийГруппыАналогов");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Если АртикулДляПоиска <> "" Тогда
		ПоместитьТекущуюНоменклатуруВГруппу(НовыйОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ГруппаАналоговНоменклатуры(АртикулДляПоиска, Производитель)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АртикулДляПоиска", АртикулДляПоиска);
	Запрос.УстановитьПараметр("Производитель", Производитель);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГруппыАналогов.ИдентификаторГруппы КАК ИдентификаторГруппы
	|ИЗ
	|	РегистрСведений.ГруппыАналогов КАК ГруппыАналогов
	|ГДЕ
	|	ГруппыАналогов.АртикулДляПоиска = &АртикулДляПоиска
	|	И ГруппыАналогов.Производитель = &Производитель";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ИдентификаторГруппы;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыНоменклатуры()
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, "АртикулДляПоиска, Производитель");
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыНоменклатуры);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСписка()
	
	Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	
	ЗначениеОтбора = ГруппаАналоговНоменклатуры(АртикулДляПоиска, Производитель);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.КомпоновщикНастроек.Настройки.Отбор,
		"ИдентификаторГруппы",
		ЗначениеОтбора,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);

	ГруппаЭлементовОтбора = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
    ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	ГруппаЭлементовОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ГруппаЭлементовОтбора,
		"АртикулДляПоиска",
		АртикулДляПоиска,
		ВидСравненияКомпоновкиДанных.НеРавно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ГруппаЭлементовОтбора,
		"Производитель",
		Производитель,
		ВидСравненияКомпоновкиДанных.НеРавно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
КонецПроцедуры

&НаСервере
Процедура ПоместитьТекущуюНоменклатуруВГруппу(НовыйОбъект)
	
	Если НовыйОбъект.ИдентификаторГруппы <> ГруппаАналоговНоменклатуры(АртикулДляПоиска, Производитель) Тогда
		// добавление новой записи аналогичной Номенклатуре
		НоваяЗапись = РегистрыСведений.ГруппыАналогов.СоздатьМенеджерЗаписи();
		НоваяЗапись.АртикулДляПоиска = АртикулДляПоиска;
		НоваяЗапись.Артикул = Номенклатура.Артикул;
		НоваяЗапись.ИдентификаторГруппы = НовыйОбъект.ИдентификаторГруппы;
		НоваяЗапись.Производитель = Производитель;
		НоваяЗапись.Наименование = Строка(Номенклатура);
		НоваяЗапись.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Цвет текста
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Представление = НСтр("ru = 'Выделение текущей номенклатуры'");
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.Артикул");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение =  Новый ПолеКомпоновкиДанных("Артикул");
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаКонтрагентаДействующего);
	
	// Шрифт
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Представление = НСтр("ru = 'Выделение главных аналогов'");
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.ГлавныйПоГруппе");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.ГлавныйПоПроизводителю");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
	
	// Цвет текста аналогов без наименования
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.Наименование");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(128, 0, 0));
	
	// Цвет текста заполненных аналогов
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.Наименование");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(0, 128, 0));
	
КонецПроцедуры

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаКлиенте
Процедура ДобавитьЗапись(Команда)
	
	ПараметрыФормы = Новый Структура();
	
	ИД = Новый Структура("ИдентификаторГруппы", ГруппаАналоговНоменклатуры(АртикулДляПоиска, Производитель ));
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ИД);
	ПараметрыФормы.Вставить("Источник", Номенклатура);
	
	Описание = Новый ОписаниеОповещения("ОбработкаДобавленияЗаписи", ЭтотОбъект);
	
	ОткрытьФорму(
		"РегистрСведений.ГруппыАналогов.ФормаЗаписи",
		ПараметрыФормы,
		ЭтотОбъект,
		КлючУникальности,
		,
		,
		Описание,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаДобавленияЗаписи(Результат, Параметры) Экспорт
	
	УстановитьОтборСписка();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

