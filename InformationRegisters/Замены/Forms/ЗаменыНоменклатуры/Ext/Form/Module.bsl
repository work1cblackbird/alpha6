////////////////////////////////////////////////////////////////////////////////
// Модуль формы ДополнительныеРеквизитыНоменклатуры:
// Служит для заполнения дополнительных параметров номенклатуры
// в разрезе подразделений компании.
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("Номенклатура") Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Номенклатура = Параметры.Номенклатура;
	ЗаполнитьРеквизитыНоменклатуры();
	ЗагрузитьЗамены();
	
	ПравоДоступаИзменение = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.Замены);
	Элементы.ДобавитьЗамену.Видимость = ПравоДоступаИзменение;
	Элементы.УдалитьЗамену.Видимость  = ПравоДоступаИзменение;
	Элементы.РедактироватьЗамену.Видимость = ПравоДоступаИзменение;
	
	ДатаЗамены = ТекущаяДатаСеанса();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеДиалогомНаКлиенте(Элементы.ГруппаЗаменыЗаменители.ТекущаяСтраница.Имя);
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаЗаменыЗаменителиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УправлениеДиалогомНаКлиенте(ТекущаяСтраница.Имя);
	
КонецПроцедуры //ГруппаЗаменыЗаменителиПриСменеСтраницы()

&НаКлиенте
Процедура ТаблицаЗаменСтарыеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОтрытьФормуЗамены(СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаменСтарыеПриАктивизацииСтроки(Элемент)
	
	УправлениеДиалогомНаКлиенте("СтраницаЗамены");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаменНовыеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОтрытьФормуЗамены(СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаменНовыеПриАктивизацииСтроки(Элемент)
	
	УправлениеДиалогомНаКлиенте("СтраницаЗаменители");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьЗамену(Команда)
	
	// Сформируем параметры
	ПараметрыФормы = Новый Структура;
	ИмяПроизводителя = "Производитель";
	ЗначенияЗаполнения = Новый Структура();
	Если Элементы.ГруппаЗаменыЗаменители.ТекущаяСтраница.Имя = "СтраницаЗаменители" Тогда
		ЗначенияЗаполнения.Вставить("Артикул", Артикул);
		ЗначенияЗаполнения.Вставить("Производитель", Производитель);
	Иначе
		ЗначенияЗаполнения.Вставить("АртикулЗамены", Артикул);
		ЗначенияЗаполнения.Вставить("ПроизводительЗамены", Производитель);
		ИмяПроизводителя = "ПроизводительЗамены";
	КонецЕсли;
	ЗначенияЗаполнения.Вставить("ДатаЗамены", ДатаЗамены);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.ЗначенияЗаполнения.Вставить("Количество", 1);
	
	ДополнительныеПараметры = Новый Структура("Производитель,ИмяПроизводителя", Производитель, ИмяПроизводителя);
	ПараметрыФормы.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаДобавленияЗаменыНоменклатуры",
		ЭтотОбъект);
	
	ОткрытьФорму("РегистрСведений.Замены.ФормаЗаписи",
		ПараметрыФормы,
		ЭтотОбъект,
		,,,
		ОбработчикОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // ДобавитьЗамену()

&НаСервереБезКонтекста
Процедура УдалитьЗаменуНаСервере(Параметры)
	
	Если Параметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АртикулДляПоиска       = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(Параметры.АртикулДляПоиска);
	АртикулЗаменыДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(Параметры.АртикулЗаменыДляПоиска);
	
	МенеджерЗаписи                        = РегистрыСведений.Замены.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.АртикулДляПоиска       = АртикулДляПоиска;
	МенеджерЗаписи.АртикулЗаменыДляПоиска = АртикулЗаменыДляПоиска;
	МенеджерЗаписи.Производитель          = Параметры.Производитель;
	МенеджерЗаписи.ПроизводительЗамены    = Параметры.ПроизводительЗамены;
	МенеджерЗаписи.Удалить();
	
КонецПроцедуры // УдалитьЗаменуНаСервере()

&НаКлиенте
Процедура УдалитьЗамену(Команда)
	
	// Сформируем параметры
	ДополнительныеПараметры = Новый Структура;
	
	Если Элементы.ГруппаЗаменыЗаменители.ТекущаяСтраница.Имя = "СтраницаЗаменители" Тогда
		
		Данные = Элементы.ТаблицаЗаменНовые.ТекущиеДанные;
		Если Данные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ДополнительныеПараметры.Вставить("АртикулДляПоиска",       Артикул);
		ДополнительныеПараметры.Вставить("АртикулЗаменыДляПоиска", Данные.Артикул);
		ДополнительныеПараметры.Вставить("Производитель",          Данные.Производитель);
		ДополнительныеПараметры.Вставить("ПроизводительЗамены",    Данные.ПроизводительЗамены);
		
	Иначе
		
		Данные = Элементы.ТаблицаЗаменСтарые.ТекущиеДанные;
		Если Данные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ДополнительныеПараметры.Вставить("АртикулДляПоиска",       Данные.Артикул);
		ДополнительныеПараметры.Вставить("АртикулЗаменыДляПоиска", Артикул);
		ДополнительныеПараметры.Вставить("Производитель",          Данные.Производитель);
		ДополнительныеПараметры.Вставить("ПроизводительЗамены",    Данные.ПроизводительЗамены);
		
	КонецЕсли;
	
	УдалитьЗаменуНаСервере(ДополнительныеПараметры);
	
	ЗагрузитьЗамены();
	
	УправлениеДиалогомНаКлиенте(Элементы.ГруппаЗаменыЗаменители.ТекущаяСтраница.Имя);
	
КонецПроцедуры // УдалитьЗамену()

&НаКлиенте
Процедура РедактироватьЗамену(Команда)
	
	СтандартнаяОбработка = Истина;
	ОтрытьФормуЗамены(СтандартнаяОбработка);
	
КонецПроцедуры // РедактироватьЗамену()


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьЗамены()
	
	ЗаменыСтарые.Очистить();
	ЗаменыНовые.Очистить();
	
	АртикулДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(Артикул);
	ТаблицаЗамен = Справочники.Номенклатура.ПолучитьТаблицуЗамен(Номенклатура, АртикулДляПоиска, Производитель);
	ЗаменыСтарые.Загрузить(Справочники.Номенклатура.ПолучитьЗаменыНоменклатуры(Ложь, ТаблицаЗамен));
	ЗаменыНовые.Загрузить(Справочники.Номенклатура.ПолучитьЗаменыНоменклатуры(Истина, ТаблицаЗамен));
	
	// Заполним номера строк в ТЧ
	НомерСтроки = 1;
	Для Каждого ТекущаяСтрока Из ЗаменыСтарые Цикл
		ТекущаяСтрока.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	НомерСтроки = 1;
	Для Каждого ТекущаяСтрока Из ЗаменыНовые Цикл
		ТекущаяСтрока.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры // ЗагрузитьЗамены()

&НаСервере
Процедура ЗаполнитьРеквизитыНоменклатуры()
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, "Артикул,Производитель");
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаДобавленияЗаменыНоменклатуры(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	ЗагрузитьЗамены();
	УправлениеДиалогомНаКлиенте(Элементы.ГруппаЗаменыЗаменители.ТекущаяСтраница.Имя);
	
КонецПроцедуры // Подключаемый_ОбработкаРезультатаДобавленияЗаменыНоменклатуры()

&НаКлиенте
Процедура УправлениеДиалогомНаКлиенте(ТекущаяСтраница)
	
	ИмяЭлемента = ?(ТекущаяСтраница = "СтраницаЗаменители", "ТаблицаЗаменНовые", "ТаблицаЗаменСтарые");
	ТекущиеДанные = Элементы[ИмяЭлемента].ТекущиеДанные;
	ДоступностьУдаления = ТекущиеДанные <> Неопределено И (ТекущиеДанные.Шаг = -1 ИЛИ ТекущиеДанные.Шаг = 1);
	ОбщегоНазначенияКлиентСервер
		.УстановитьСвойствоЭлементаФормы(Элементы, "УдалитьЗамену", "Доступность", ДоступностьУдаления);
	ОбщегоНазначенияКлиентСервер
		.УстановитьСвойствоЭлементаФормы(Элементы, "РедактироватьЗамену", "Доступность", ДоступностьУдаления);
	
КонецПроцедуры // УправлениеДиалогомНаКлиенте()

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Цвет текста
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗаменСтарые");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЗаменыСтарые.Количество");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(0,128,0));
	
	// Цвет текста
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗаменНовые");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЗаменыНовые.Количество");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(0,128,0));
	
	// Цвет текста
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗаменСтарые");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЗаменыСтарые.Номенклатура");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(127,127,127));
	// Цвет текста
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗаменНовые");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЗаменыНовые.Номенклатура");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(127,127,127));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтрытьФормуЗамены(СтандартнаяОбработка)
	
	Если НЕ Элементы.РедактироватьЗамену.Видимость Тогда
		Возврат;
	КонецЕсли;
	
	// Сформируем параметры
	ДополнительныеПараметры = Новый Структура;
	ИмяПроизводителя = "Производитель";
	Если Элементы.ГруппаЗаменыЗаменители.ТекущаяСтраница.Имя = "СтраницаЗаменители" Тогда
		
		Данные = Элементы.ТаблицаЗаменНовые.ТекущиеДанные;
		Если Данные = Неопределено ИЛИ Данные.Шаг <> 1 Тогда
			Возврат;
		КонецЕсли;
		ПолучитьАртикулыДляПоиска(ДополнительныеПараметры, Артикул, Данные.Артикул);
		ДополнительныеПараметры.Вставить("Производитель", Данные.ПроизводительЗамены);
		ДополнительныеПараметры.Вставить("ПроизводительЗамены", Данные.Производитель);
		
	Иначе
		
		Данные = Элементы.ТаблицаЗаменСтарые.ТекущиеДанные;
		Если Данные = Неопределено ИЛИ Данные.Шаг <> -1 Тогда
			Возврат;
		КонецЕсли;
		ПолучитьАртикулыДляПоиска(ДополнительныеПараметры, Данные.Артикул, Артикул);
		ИмяПроизводителя = "ПроизводительЗамены";
		ДополнительныеПараметры.Вставить("Производитель", Данные.Производитель);
		ДополнительныеПараметры.Вставить("ПроизводительЗамены", Данные.ПроизводительЗамены);
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	МассивКлюча = Новый Массив;
	МассивКлюча.Добавить(ДополнительныеПараметры);
	
	КлючЗаписи = Новый ("РегистрСведенийКлючЗаписи.Замены", МассивКлюча);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", КлючЗаписи);
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Производитель", Производитель);
	ДополнительныеПараметры.Вставить("ИмяПроизводителя", ИмяПроизводителя);
	ДополнительныеПараметры.Вставить("ДатаОбновления", ДатаЗамены);
	ПараметрыФормы.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	ОбработчикОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаДобавленияЗаменыНоменклатуры",
		ЭтотОбъект);
	
	ОткрытьФорму("РегистрСведений.Замены.ФормаЗаписи",
		ПараметрыФормы,
		ЭтотОбъект,
		,,,
		ОбработчикОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПолучитьАртикулыДляПоиска(ПараметрыПоиска, Артикул, АртикулЗамены)
	
	АртикулДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(Артикул);
	АртикулЗаменыДляПоиска = ОбщегоНазначенияАвтосалонКлиентСервер.ВАртикулДляПоиска(АртикулЗамены);
	
	ПараметрыПоиска.Вставить("АртикулДляПоиска",       АртикулДляПоиска);
	ПараметрыПоиска.Вставить("АртикулЗаменыДляПоиска", АртикулЗаменыДляПоиска);
	
КонецПроцедуры // ПолучитьАртикулыДляПоиска()

#КонецОбласти





