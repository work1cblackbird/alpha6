
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РазрешитьИзменениеПравДоступа = ПравоДоступа("Администрирование", Метаданные);
	ТолькоПросмотр = НЕ РазрешитьИзменениеПравДоступа;
	
	// Профили можно редактировать только администратору, получим сразу значение прав.
	ТекущийПользовательАдминистратор = ПравоДоступа("Администрирование", Метаданные)
		ИЛИ Пользователи.РолиДоступны("ПолныеПрава");
	
	ПользовательПрофиль = Пользователи.ТекущийПользователь();
	
	Если ЗначениеЗаполнено(ПользовательПрофиль) Тогда
		
		ТекПользователь = ПользовательПрофиль;
		ТекГруппаПравИНастроек = ГруппаНастройкиПользователя(ТекПользователь);
		ВыбранПользователь = 0;
		
	КонецЕсли;
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьПараметрыЭлементаВыбораПользователяГруппы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(
		Новый ОписаниеОповещения("Подключаемый_ПередЗакрытиемПродолжение", ЭтотОбъект),
		Отказ,
		ЗавершениеРаботы,
		ТекстПредупреждения
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекПользовательПриИзменении(Элемент)
	
	ПользовательПрофильПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Если форма была изменена, зададим вопрос пользователю
	Если Модифицированность Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Обработчик = Новый ОписаниеОповещения("Подключаемый_ТекПользовательНачалоВыбораПродолжение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекГруппаДоступаПриИзменении(Элемент)
	
	ПользовательПрофильПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекГруппаДоступаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Если форма была изменена, зададим вопрос пользователю
	Если Модифицированность Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Обработчик = Новый ОписаниеОповещения("Подключаемый_ТекГруппаПравИНастроекНачалоВыбораПродолжение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранПользовательПриИзменении(Элемент)
	
	// Если форма была изменена, зададим вопрос пользователю
	Если Модифицированность Тогда
		
		Обработчик = Новый ОписаниеОповещения("Подключаемый_ВыборГруппыИлиПользователяПродолжение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	Иначе
		
		Подключаемый_ВыборГруппыИлиПользователяПродолжение(КодВозвратаДиалога.Нет);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПереченьДокументов

&НаКлиенте
Процедура ПереченьДокументовСогласованПриИзменении(Элемент)
	
	ФлагСтатусаПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереченьДокументовУтвержденПриИзменении(Элемент)
	
	ФлагСтатусаПриИзменении();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда = Неопределено)
	
	Результат = Записать();
	
	Если Результат Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция Записать(Команда = Неопределено)
	
	Результат = Истина;
	
	Если ЗначениеЗаполнено(ПользовательПрофиль) Тогда
		
		Если Модифицированность Тогда
			Результат = СохранитьНастройки();
			Модифицированность = НЕ Результат;
		КонецЕсли;
		
	Иначе
		Результат = Ложь;
		ТекстОшибки = НСтр("ru = 'Не заполнен реквизит «%1», запись отменена.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(
				ТекстОшибки,
				?(ВыбранПользователь = 0, "Пользователь", НСтр("ru = 'Группа прав и настроек'"))
			)
		);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Обновить(Команда)
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("Подключаемый_ОбновитьПродолжение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Вернуться к сохраненным значениям прав и настроек?'");
	ПоказатьВопрос(ОписаниеОповещенияОЗакрытии, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ФлагСтатусаПриИзменении()
	
	ТекущиеДанные = Элементы.ПереченьДокументов.ТекущиеДанные;
	ТекущиеДанные.Отклонен = ТекущиеДанные.Согласован ИЛИ ТекущиеДанные.Утвержден;
	ТекущиеДанные.Изменено = Истина;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПрофильПриИзменении()
	
	Если ВыбранПользователь = 0 Тогда
		ПользовательПрофиль = ТекПользователь;
	Иначе
		ПользовательПрофиль  = ТекГруппаПравИНастроек;
	КонецЕсли;
	
	ПользовательПрофильПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПользовательПрофильПриИзмененииНаСервере()
	
	ОбновитьНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбновитьПродолжение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОбновитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПередЗакрытиемПродолжение(Ответ, ДополнительныеПараметры) Экспорт
	
	ЗаписатьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыборГруппыИлиПользователяПродолжение(Ответ, ВходныеПараметры = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
	ИначеЕсли Ответ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Ответ <> КодВозвратаДиалога.Отмена Тогда
		
		ТекГруппаПравИНастроек = ГруппаПравИНастроекПользователя;
		УстановитьПараметрыЭлементаВыбораПользователяГруппы();
		ПользовательПрофильПриИзменении();
		
	Иначе
		
		ВыбранПользователь = ?(ВыбранПользователь = 0, 1, 0);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТекПользовательНачалоВыбораПродолжение(Ответ = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать();
	КонецЕсли;
	
	Если Ответ <> КодВозвратаДиалога.Отмена Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("ТекущаяСтрока", ТекПользователь);
		
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("Подключаемый_ТекПользовательПриИзменении", ЭтотОбъект);
		ОткрытьФорму(
			"Справочник.Пользователи.ФормаВыбора",
			ПараметрыФормы,
			ЭтотОбъект,
			ЭтотОбъект,
			, ,
			ОповещениеОЗакрытии,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТекГруппаПравИНастроекНачалоВыбораПродолжение(
		Ответ = Неопределено,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать();
	КонецЕсли;
	
	Если Ответ <> КодВозвратаДиалога.Отмена Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("ТекущаяСтрока", ТекГруппаПравИНастроек);
		
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ТекГруппаПравИНастроекПриИзменении", ЭтотОбъект);
		ОткрытьФорму(
			"Справочник.ГруппыПравИНастроек.ФормаВыбора",
			ПараметрыФормы,
			ЭтотОбъект,
			ЭтотОбъект,
			, ,
			ОповещениеОЗакрытии,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекГруппаПравИНастроекПриИзменении(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ТекГруппаПравИНастроек = ВыбранноеЗначение;
	КонецЕсли;
	
	ПользовательПрофильПриИзменении();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	Если ВыбранПользователь = 0 Тогда
		
		ГруппаПравИНастроекПользователя = ГруппаНастройкиПользователя(ТекПользователь);
		
	КонецЕсли;
	
	ЗаполнитьПереченьДокументов();
	
	Если ТипЗнч(ПользовательПрофиль) = Тип("СправочникСсылка.ГруппыПравИНастроек") Тогда
		ВыбранПользователь = 1;
	Иначе
		ВыбранПользователь = 0;
	КонецЕсли;
	
	Элементы.Записать.Доступность                = РазрешитьИзменениеПравДоступа;
	Элементы.ЗаписатьИЗакрыть.Доступность        = РазрешитьИзменениеПравДоступа;
	
	ПользовательПрофильЗаполнен = ЗначениеЗаполнено(ПользовательПрофиль);
	
	Элементы.ВыбранПользователь.Доступность      = ПользовательПрофильЗаполнен И ТекущийПользовательАдминистратор;
	Элементы.УтверждениеДокументов.Доступность   = ПользовательПрофильЗаполнен И РазрешитьИзменениеПравДоступа;
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыЭлементаВыбораПользователяГруппы()
	
	Элементы.ТекПользователь.Видимость  = ВыбранПользователь = 0 ;
	Элементы.ТекГруппаДоступа.Видимость = ВыбранПользователь = 1;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если ЗначениеЗаполнено(ПользовательПрофиль) Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Настройка утверждения документов: %1'")
			+ ?(ВыбранПользователь = 1, " (Группа доступа)", "");
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, Строка(ПользовательПрофиль));
		
	Иначе
		
		Заголовок = НСтр("ru = 'Настройка утверждения документов: <пользователь не выбран>'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПереченьДокументов()
	
	ПереченьДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИспользоватьУтверждениеДокументов.Документ КАК ДокументИмя
	|ПОМЕСТИТЬ КонтролируемыеДокументы
	|ИЗ
	|	РегистрСведений.ИспользоватьУтверждениеДокументов КАК ИспользоватьУтверждениеДокументов
	|ГДЕ
	|	ИспользоватьУтверждениеДокументов.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиУтвержденияДокументов.Документ КАК ДокументИмя,
	|	НастройкиУтвержденияДокументов.Согласован КАК Согласован,
	|	НастройкиУтвержденияДокументов.Утвержден КАК Утвержден
	|ПОМЕСТИТЬ НастройкиДокументовДляОбъекта
	|ИЗ
	|	РегистрСведений.НастройкиУтвержденияДокументов КАК НастройкиУтвержденияДокументов
	|ГДЕ
	|	НастройкиУтвержденияДокументов.Объект = &Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтролируемыеДокументы.ДокументИмя КАК ДокументИмя,
	|	ЕСТЬNULL(НастройкиДокументовДляОбъекта.Согласован, ЛОЖЬ) КАК Согласован,
	|	ЕСТЬNULL(НастройкиДокументовДляОбъекта.Утвержден, ЛОЖЬ) КАК Утвержден
	|ИЗ
	|	КонтролируемыеДокументы КАК КонтролируемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиДокументовДляОбъекта КАК НастройкиДокументовДляОбъекта
	|		ПО КонтролируемыеДокументы.ДокументИмя = НастройкиДокументовДляОбъекта.ДокументИмя";
	
	Запрос.УстановитьПараметр("Объект", ПользовательПрофиль);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		// Проверим существование документа по полученному имени
		ДокументУтверждения = Метаданные.НайтиПоПолномуИмени(Выборка.ДокументИмя);
		Если ДокументУтверждения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаДокумента = ПереченьДокументов.Добавить();
		НоваяСтрокаДокумента.ДокументИмя     = Выборка.ДокументИмя;
		НоваяСтрокаДокумента.ДокументСиноним = ДокументУтверждения.Синоним;
		НоваяСтрокаДокумента.Подготовлен = Истина;
		НоваяСтрокаДокумента.Согласован  =  Выборка.Согласован;
		НоваяСтрокаДокумента.Утвержден   = Выборка.Утвержден;
		Если Выборка.Согласован ИЛИ Выборка.Утвержден Тогда
			НоваяСтрокаДокумента.Отклонен = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьУтверждение()
	
	// Записываем только измененные настройки.
	Для Каждого ТекДокумент Из ПереченьДокументов.НайтиСтроки(Новый Структура("Изменено", Истина)) Цикл
		
		ЗаписьУтверждениеДокументов = РегистрыСведений.НастройкиУтвержденияДокументов.СоздатьМенеджерЗаписи();
		
		// Устанавливаем отборы.
		ЗаписьУтверждениеДокументов.Объект   = ПользовательПрофиль;
		ЗаписьУтверждениеДокументов.Документ = ТекДокумент.ДокументИмя;
		
		Согласован = Ложь;
		Утвержден  = Ложь;
		
		Если ТекДокумент.Согласован ИЛИ ТекДокумент.Утвержден Тогда
			
			ЗаписьУтверждениеДокументов.Согласован = ТекДокумент.Согласован;
			ЗаписьУтверждениеДокументов.Утвержден  = ТекДокумент.Утвержден;
			
			// Записываем в регистр.
			ЗаписьУтверждениеДокументов.Записать();
		Иначе
			
			// Удаляем запись, т.к. больше нет доступных статусов.
			ЗаписьУтверждениеДокументов.Удалить();
		КонецЕсли;
		
		// Обновляем кэш настроек только для подразделения или текущего пользователя.
		Если ТипЗнч(ПользовательПрофиль) = Тип("СправочникСсылка.ГруппыПравИНастроек")
			ИЛИ ПользовательПрофиль = Пользователи.ТекущийПользователь() Тогда
			УтверждениеДокументовСервер.ОбновитьНастройкуВКэше("Документ." + ТекДокумент.ДокументИмя);
		КонецЕсли;
		
		// Сбрасываем признак изменения настроек.
		ТекДокумент.Изменено = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СохранитьНастройки()
	
	Результат = Истина;
	
	Если РазрешитьИзменениеПравДоступа Тогда
		ЗаписатьУтверждение();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ТекПользовательПриИзменении(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ТекПользователь = ВыбранноеЗначение;
	КонецЕсли;
	
	ПользовательПрофильПриИзменении();
	
КонецПроцедуры

#КонецОбласти
