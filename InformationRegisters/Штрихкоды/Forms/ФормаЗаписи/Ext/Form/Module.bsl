///////////////////////////////////////////////////////////////////////////////
// Модуль формы записи регистра сведений "Штрихкоды"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;

	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
	// ПодключаемоеОборудование
	ИспользоватьПодключаемоеОборудование = 
		МенеджерОборудованияВызовСервераПереопределяемый.ИспользоватьПодключаемоеОборудование();
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(
		Неопределено,
		ЭтотОбъект, 
		"СканерШтрихкода, СчитывательМагнитныхКарт"
	);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ВводДоступен() И Источник = "ПодключаемоеОборудование" Тогда
		
		Штрихкод = ШтрихкодированиеКлиент.ПолучитьШтрихкодИзПараметровОборудования(ИмяСобытия, Параметр);
		ПараметрыДействия = Новый Структура;
		ШтрихкодированиеКлиент.ОбработатьПолныйШтрихкод(Штрихкод, ПараметрыДействия);
		Штрихкод = ПараметрыДействия.Штрихкод;
		
		Если ТолькоПросмотр Тогда
			Возврат;
		КонецЕсли;
		
		Запись.Штрихкод = ПараметрыДействия.Штрихкод;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПропуститьПроверкуУникальности = ПараметрыЗаписи.Свойство("ПропуститьПроверкуУникальности")
		ИЛИ (ПараметрыЗаписи.Свойство("ПропуститьПроверкуУникальности")
			И ПараметрыЗаписи.ПропуститьПроверкуУникальности);
	
	Если НЕ ПропуститьПроверкуУникальности Тогда
		
		ШтрихкодированиеКлиент.ПроверкаШтрихкодовПередЗаписью(ЭтотОбъект, Запись.Штрихкод, Запись.Объект, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервереБезКонтекста
Функция ШтрихКодНачалоВыбораНаСервере(ЗаписьОбъект)
	
	Возврат ШтрихкодированиеВызовСервера.СформироватьНовыйШтрихкод(ЗаписьОбъект);
	
КонецФункции 

&НаКлиенте
Процедура ШтрихКодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Запись.ШтрихКод) Тогда
		
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияШтрихкодНачалоВыбора", ЭтотОбъект);
	
		ТекстВопроса = НСтр("ru = 'Создать новый штрихкод объекта?'");
	
		ПоказатьВопрос(ОбработчикВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли ЗначениеЗаполнено(Запись.Объект) Тогда
		
		Запись.Штрихкод = ШтрихКодНачалоВыбораНаСервере(Запись.Объект);
		Модифицированность = Истина;
	Иначе
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполните поле объект.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	
	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияПриИзмененииШтрихкода(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда
		Записать(Новый Структура("ПропуститьПроверкуУникальности",Истина));
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияШтрихкодНачалоВыбора(РезультатОповещения, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда 
		Запись.Штрихкод = ШтрихКодНачалоВыбораНаСервере(Запись.Объект);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры 

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	// Вызываем общий обработчик события настройки параметров выбора
	УправлениеДиалогомРегистраСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
	Если Не Элементы.Найти("ЕдиницаИзмерения")=Неопределено Тогда
		Если ЗначениеЗаполнено(Запись.Объект) И ТипЗнч(Запись.Объект) = Тип("СправочникСсылка.Номенклатура") Тогда
			ИспользованиеЕдиницИзмерения = Запись.Объект.ТипНоменклатуры.ИспользованиеЕдиницИзмерения;
			Если ИспользованиеЕдиницИзмерения = 1 Тогда
				ВладелецЕдиницыИзмерения = Запись.Объект.ТипНоменклатуры;
			ИначеЕсли ИспользованиеЕдиницИзмерения = 2 Тогда
				ВладелецЕдиницыИзмерения = Запись.Объект;
			Иначе
				ВладелецЕдиницыИзмерения = Неопределено;
			КонецЕсли;
			
			ИспользованиеХарактеристик   = Запись.Объект.ТипНоменклатуры.ИспользованиеХарактеристик;
			Если ИспользованиеХарактеристик = 1 Тогда
				ВладелецХарактеристикаНоменклатуры = Запись.Объект.ТипНоменклатуры;
			ИначеЕсли ИспользованиеХарактеристик = 2 Тогда
				ВладелецХарактеристикаНоменклатуры = Запись.Объект;
			Иначе
				ВладелецХарактеристикаНоменклатуры = Неопределено;
			КонецЕсли;
	
		Иначе
			ВладелецЕдиницыИзмерения = Неопределено;
			ВладелецХарактеристикаНоменклатуры = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	
	УправлениеДиалогомРегистраСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Элементы.ХарактеристикаНоменклатуры.Доступность = ?(
		ТипЗнч(Запись.Объект) = Тип("СправочникСсылка.Номенклатура"), 
		(Запись.Объект.ТипНоменклатуры.ИспользованиеХарактеристик <> 3),
		Истина
	);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

