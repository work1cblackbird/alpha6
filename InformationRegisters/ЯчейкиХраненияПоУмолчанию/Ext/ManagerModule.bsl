// Модуль менеджера регистра сведений "Ячейки хранения о умолчанию"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет запись ячеек хранения для переданной номенклатуры, если ячейка еще не назначена.
//
// Параметры:
//  ТаблицаНоменклатуры - ТаблицаЗначений - Перечень номенклатуры с ячейками хранения.
//  СкладКомпании       - СправочникСсылка.СкладыКомпании - Склад, в ячейке которого будет храниться номенклатура.
//  ДатаДокумента       - Дата - Дата документа, из которого идет вызов. Для получения значения учетной политики.
//  ВыполнятьПроверку   - Булево - (Необязательное). Признак выполнения проверки при записи ячеек по умолчанию.
//                                 Если Истина - проводится проверка (в зависимости от значения учетной политики
//                                 "ЗапретПриходаРазныхТоваровВОднуЯчейку"), что записываемая ячейка не указана как
//                                 ячейка по умолчанию для другой номенклатуры.
//
Процедура ЗаполнитьЯчейкиХранения(ТаблицаНоменклатуры,
		СкладКомпании,
		ДатаДокумента = Неопределено,
		ВыполнятьПроверку = Истина) Экспорт
	
	Если ВыполнятьПроверку
		И ПолучитьЗначениеУчетнойПолитики("ЗапретПриходаРазныхТоваровВОднуЯчейку", СкладКомпании, ДатаДокумента) Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЯчейкиХраненияПоУмолчанию.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ НоменклатураСЯчейками
		|ИЗ
		|	РегистрСведений.ЯчейкиХраненияПоУмолчанию КАК ЯчейкиХраненияПоУмолчанию
		|ГДЕ
		|	ЯчейкиХраненияПоУмолчанию.СкладКомпании = &СкладКомпании
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЯчейкиХраненияПоУмолчанию.ЯчейкаХранения КАК Ячейка
		|ПОМЕСТИТЬ ЯчейкиСНоменклатурой
		|ИЗ
		|	РегистрСведений.ЯчейкиХраненияПоУмолчанию КАК ЯчейкиХраненияПоУмолчанию
		|ГДЕ
		|	ЯчейкиХраненияПоУмолчанию.СкладКомпании = &СкладКомпании
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатуры.Ячейка КАК Ячейка
		|ПОМЕСТИТЬ СписокНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(СписокНоменклатуры.Ячейка) КАК Ячейка
		|ИЗ
		|	СписокНоменклатуры КАК СписокНоменклатуры
		|ГДЕ
		|	НЕ СписокНоменклатуры.Номенклатура В
		|				(ВЫБРАТЬ
		|					НоменклатураСЯчейками.Номенклатура КАК Номенклатура
		|				ИЗ
		|					НоменклатураСЯчейками КАК НоменклатураСЯчейками)
		|	И СписокНоменклатуры.Ячейка <> ЗНАЧЕНИЕ(Справочник.ЯчейкиХранения.ПустаяСсылка)
		|	И НЕ СписокНоменклатуры.Ячейка В
		|				(ВЫБРАТЬ
		|					ЯчейкиСНоменклатурой.Ячейка КАК Ячейка
		|				ИЗ
		|					ЯчейкиСНоменклатурой КАК ЯчейкиСНоменклатурой)
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокНоменклатуры.Номенклатура";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЯчейкиХраненияПоУмолчанию.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ НоменклатураСЯчейками
		|ИЗ
		|	РегистрСведений.ЯчейкиХраненияПоУмолчанию КАК ЯчейкиХраненияПоУмолчанию
		|ГДЕ
		|	ЯчейкиХраненияПоУмолчанию.СкладКомпании = &СкладКомпании
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатуры.Ячейка КАК Ячейка
		|ПОМЕСТИТЬ СписокНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(СписокНоменклатуры.Ячейка) КАК Ячейка
		|ИЗ
		|	СписокНоменклатуры КАК СписокНоменклатуры
		|ГДЕ
		|	НЕ СписокНоменклатуры.Номенклатура В
		|				(ВЫБРАТЬ
		|					НоменклатураСЯчейками.Номенклатура КАК Номенклатура
		|				ИЗ
		|					НоменклатураСЯчейками КАК НоменклатураСЯчейками)
		|	И СписокНоменклатуры.Ячейка <> ЗНАЧЕНИЕ(Справочник.ЯчейкиХранения.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокНоменклатуры.Номенклатура";
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СкладКомпании"      , СкладКомпании);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ТаблицаНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Набор = СоздатьНаборЗаписей();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяЗапись = Набор.Добавить();     // проверка есть ли запись для этой номенклатуре по этой ячейке
		НоваяЗапись.СкладКомпании  = СкладКомпании;
		НоваяЗапись.Номенклатура   = ВыборкаДетальныеЗаписи.Номенклатура;
		НоваяЗапись.ЯчейкаХранения = ВыборкаДетальныеЗаписи.Ячейка;
		
	КонецЦикла;
	
	Набор.Записать(Ложь);
	
КонецПроцедуры

// Удаляем все записи с ячейкой
// 
// Параметры:
//  Ячейка - СправочникСсылка.ЯчейкиХранения
//
Процедура УдалитьЯчейку(Ячейка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЯчейкиХраненияПоУмолчанию.СкладКомпании КАК СкладКомпании,
		|	ЯчейкиХраненияПоУмолчанию.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.ЯчейкиХраненияПоУмолчанию КАК ЯчейкиХраненияПоУмолчанию
		|ГДЕ
		|	ЯчейкиХраненияПоУмолчанию.ЯчейкаХранения = &ЯчейкаХранения"
	);
	Запрос.УстановитьПараметр("ЯчейкаХранения", Ячейка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	ЗаписиСЯчейкой = РезультатЗапроса.Выбрать();
	
	Пока ЗаписиСЯчейкой.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.ЯчейкиХраненияПоУмолчанию.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ЗаписиСЯчейкой);
		МенеджерЗаписи.Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПараметрыОбработкиРеквизитовОбъекта

Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	ОбязательныеРеквизиты = ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
	Возврат ОбязательныеРеквизиты;
	
КонецФункции 

Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	УникальныеРеквизиты = Новый Структура();
	
	Возврат УникальныеРеквизиты;
	
КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли