///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка регистра "Упущенный спрос"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Проверим переданный отбор
	Если Параметры.Отбор.Свойство("Номенклатура") И ОбщегоНазначения.ОбъектЯвляетсяГруппой(Параметры.Отбор.Номенклатура) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Использование для групп запрещено.'"),,,, Отказ);
	Иначе
		Если Параметры.Отбор.Свойство("Номенклатура") Тогда
			ЭтаФорма.Список.АвтоматическоеСохранениеПользовательскихНастроек = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	СкрытьНоменклатуру = ПолучитьЗначениеПараметраСтруктуры(Параметры, "СкрытьНоменклатуру", Ложь);
	Закрепить = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ЗакрепитьСПрава", Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Закрепить Тогда
		
		УправлениеДиалогомКлиент.ЗакрепитьФорму();
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "АктивизацияСтрокиНоменклатуры" И Источник = ВладелецФормы И СкрытьНоменклатуру Тогда
		
		Если НЕ ЗначениеЗаполнено(Параметр) ИЛИ ОбъектЯвляетсяГруппой(Параметр) Тогда
			Доступность = Ложь;
		Иначе
			Доступность = Истина;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Номенклатура", Параметр, ВидСравненияКомпоновкиДанных.Равно, "Номенклатура", Истина);
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийЯчейкиХраненияПоУмолчанию");
		
	Иначе
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийЯчейкиХраненияПоУмолчанию");
		
	КонецЕсли;
	// Конец ОценкаПроизводительности

КонецПроцедуры 

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраЯчейкиХраненияПоУмолчанию");
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Видимость
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Представление = НСтр("ru = 'Скрытие колонки номенклатура'");
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Номенклатура");
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СкрытьНоменклатуру");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбъектЯвляетсяГруппой(Объект)
	
	Возврат ОбщегоНазначения.ОбъектЯвляетсяГруппой(Объект);
	
КонецФункции

#КонецОбласти

