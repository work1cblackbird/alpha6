///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка регистра "Параметры планирования"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийПараметрыПланирования");
	Иначе
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийПараметрыПланирования");
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраСведенийПараметрыПланирования");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Автозаполнение(Команда)
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияВыборПодразделения", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("РежимВыбора, ПараметрВыборГруппИЭлементов", Истина, ИспользованиеГруппИЭлементов.Элементы);
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ПараметрыФормы.Вставить("ПараметрТекущаяСтрока", Элементы.Список.ТекущиеДанные.ПодразделениеКомпании);
	КонецЕсли;
	ОткрытьФорму("Справочник.ПодразделенияКомпании.ФормаСписка", ПараметрыФормы, ЭтотОбъект,,,, ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры 

&НаКлиенте
Процедура Автопорядок(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ОбработкаРезультатаОповещенияАвтопорядок", ЭтотОбъект);
	ПоказатьВопрос(ОбработкаОповещения, НСтр("ru = 'Будет произведен авторасчет порядков ввода в пределах текущего подразделения. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры 

&НаКлиенте
Процедура СтандартнаяСортировка(Команда)
	
	Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Элементы.Очистить();
	
	НовыйПорядок = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	НовыйПорядок.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	НовыйПорядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
	НовыйПорядок.Поле = Новый ПолеКомпоновкиДанных("ПодразделениеКомпании");
	НовыйПорядок.Использование = Истина;
	
	НовыйПорядок = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	НовыйПорядок.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	НовыйПорядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
	НовыйПорядок.Поле = Новый ПолеКомпоновкиДанных("ПорядокВвода");
	НовыйПорядок.Использование = Истина;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьПорядок(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекПодразделение = Элементы.Список.ТекущиеДанные.ПодразделениеКомпании;
	ТекНомер         = Элементы.Список.ТекущиеДанные.ПорядокВвода;
	
	Если ТекНомер = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Команда.Имя = "ПовыситьПорядок" Тогда
		ПовыситьПорядокНаСервере(ТекПодразделение, ТекНомер);
	ИначеЕсли Команда.Имя = "ПонизитьПорядок" Тогда
		ПонизитьПорядокНаСервере(ТекПодразделение, ТекНомер);
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьАвтопорядок(ПодразделениеСортировки)
	
	НаборЗаписей = РегистрыСведений.ПараметрыПланирования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПодразделениеКомпании.Установить(ПодразделениеСортировки);
	
	ЗапросДляАвтопорядка = Новый Запрос;
	ЗапросДляАвтопорядка.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыПланирования.ПодразделениеКомпании,
	|	ПараметрыПланирования.ХозОперация,
	|	ПараметрыПланирования.СценарийПланирования,
	|	ПараметрыПланирования.ПорядокВвода,
	|	ПараметрыПланирования.ХозОперация.Наименование КАК ХозОперацияНаименование
	|ИЗ
	|	РегистрСведений.ПараметрыПланирования КАК ПараметрыПланирования
	|ГДЕ
	|	ПараметрыПланирования.ПодразделениеКомпании = &ПодразделениеКомпании
	|
	|УПОРЯДОЧИТЬ ПО
	|	ХозОперацияНаименование";
	
	ЗапросДляАвтопорядка.УстановитьПараметр("ПодразделениеКомпании", ПодразделениеСортировки);
	тзВрем = ЗапросДляАвтопорядка.Выполнить().Выгрузить();
	Для Сч=0 По тзВрем.Количество()-1 Цикл
		тзВрем[Сч].ПорядокВвода = Сч;
	КонецЦикла;
	НаборЗаписей.Загрузить(тзВрем);
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры 

&НаСервере
Процедура ПовыситьПорядокНаСервере(ТекПодразделение, ТекНомер)
	
	НаборЗаписей = РегистрыСведений.ПараметрыПланирования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор["ПодразделениеКомпании"].Установить(ТекПодразделение);
	НаборЗаписей.Прочитать();
	тзНаборЗаписей = НаборЗаписей.Выгрузить();
	тзНаборЗаписей.Сортировать("ПорядокВвода");	
	НайденнаяСтрока = тзНаборЗаписей.Найти(ТекНомер, "ПорядокВвода"); 
	Если НайденнаяСтрока<>Неопределено Тогда
		ТекИндекс = тзНаборЗаписей.Индекс(НайденнаяСтрока)-1;
		Если ТекИндекс>=0 Тогда
			ВремНомер = НайденнаяСтрока.ПорядокВвода;
			НайденнаяСтрока.ПорядокВвода = тзНаборЗаписей[ТекИндекс].ПорядокВвода;		
			тзНаборЗаписей[ТекИндекс].ПорядокВвода  = ВремНомер;
		КонецЕсли;
	КонецЕсли;
	НаборЗаписей.Загрузить(тзНаборЗаписей);
	НаборЗаписей.Записать();
	
КонецПроцедуры 

&НаСервере
Процедура ПонизитьПорядокНаСервере(ТекПодразделение, ТекНомер)
	
	НаборЗаписей = РегистрыСведений.ПараметрыПланирования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор["ПодразделениеКомпании"].Установить(ТекПодразделение);
	НаборЗаписей.Прочитать();
	тзНаборЗаписей = НаборЗаписей.Выгрузить();
	тзНаборЗаписей.Сортировать("ПорядокВвода");
	НайденнаяСтрока = тзНаборЗаписей.Найти(ТекНомер,"ПорядокВвода");
	Если НайденнаяСтрока<>Неопределено Тогда
		ТекИндекс = тзНаборЗаписей.Индекс(НайденнаяСтрока);
		Если ТекИндекс=тзНаборЗаписей.Количество()-1 Тогда
			Возврат;
		КонецЕсли;
		ВремНомер = НайденнаяСтрока.ПорядокВвода;
		НайденнаяСтрока.ПорядокВвода = тзНаборЗаписей[ТекИндекс+1].ПорядокВвода;
		тзНаборЗаписей[ТекИндекс+1].ПорядокВвода = ВремНомер;
	КонецЕсли;
	
	НаборЗаписей.Загрузить(тзНаборЗаписей);
	НаборЗаписей.Записать();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияВыборПодразделения(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Для Каждого ЭлементОтбора Из Список.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.ИдентификаторПользовательскойНастройки = "ПодразделениеКомпании" Тогда
        	Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Удалить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"ПодразделениеКомпании",
		РезультатОповещения,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
		
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаРезультатаОповещенияАвтопорядок(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатОповещения = Неопределено
		 ИЛИ РезультатОповещения <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьАвтопорядок(Элементы.Список.ТекущиеДанные.ПодразделениеКомпании);
	Элементы.Список.Обновить();
	
КонецПроцедуры 

#КонецОбласти

