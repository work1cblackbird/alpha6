// Модуль менеджера регистра сведений "Планирование работ"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьАктуальностьРабот(ЗаявкаНаРемонт, ИнтервалыПланирования, ОбновлятьПланированиеРесурсов) Экспорт
	
	Отказ = Ложь;
	Изменено = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Набор = РегистрыСведений.ПланированиеРабот.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(ЗаявкаНаРемонт);
	Набор.Прочитать();
	
	Для Каждого строкаНабора Из Набор Цикл
		
		Условие = Новый Структура("Идентификатор", строкаНабора.Идентификатор);
		
		Если ИнтервалыПланирования.НайтиСтроки(Условие).Количество() > 0 Тогда
			
			СтрокаНабора.НеАктуален = Истина;
			Изменено = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Попытка
		
		Набор.Записать(Истина);
		
	Исключение
		
		ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),,,, Отказ);
		
	КонецПопытки;
	
	Если ОбновлятьПланированиеРесурсов И Изменено Тогда
		Отказ = Отказ ИЛИ ПланированиеРесурсов.ОбновитьПланированиеРесурсовПоДокументу(ЗаявкаНаРемонт, Истина);
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции // ЗаписатьПланированиеРабот()

#Область ПараметрыОбработкиРеквизитовОбъекта

Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	Возврат ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
КонецФункции 

Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	Возврат Новый Структура();
	
КонецФункции 
#КонецОбласти

#КонецОбласти

#КонецЕсли