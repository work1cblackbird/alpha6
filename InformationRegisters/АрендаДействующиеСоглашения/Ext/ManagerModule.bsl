
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Функция возвращает текущее соглашение по договору аренды. Если по договору были оформлены изменения договора,
// то будет возвращено последнее по дате изменение.
//
// Параметры:
//  ДоговорАренды	 - ДокументСсылка.ДоговорАренды - Договор для которого требуется получить текущее соглашение.
//  Дата			 - Дата - Дата, на которую нужно получить действующее соглашение.
//  						  Если не передавать, то будет использоваться текущая дата.
// 
// Возвращаемое значение:
//  Структура - Структура с ключами ДействующееСоглашение, ДатаНачала, ДатаОкончания, НомерДополнительногоСоглашения.
//
Функция ДействующееСоглашение(ДоговорАренды, Дата = Неопределено) Экспорт 
	
	Если Дата = Неопределено Тогда 
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	//
	Результат = Новый Структура("ДействующееСоглашение,ДатаНачала,ДатаОкончания,НомерДополнительногоСоглашения",
		ДоговорАренды, ДоговорАренды.ДатаНачала, ДоговорАренды.ДатаОкончания);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	АрендаДействующиеСоглашенияСрезПоследних.ДействующееСоглашение КАК ДействующееСоглашение,
	|	АрендаДействующиеСоглашенияСрезПоследних.ДатаНачала КАК ДатаНачала,
	|	АрендаДействующиеСоглашенияСрезПоследних.ДатаОкончания КАК ДатаОкончания,
	|	АрендаДействующиеСоглашенияСрезПоследних.НомерДополнительногоСоглашения КАК НомерДополнительногоСоглашения
	|ИЗ
	|	РегистрСведений.АрендаДействующиеСоглашения.СрезПоследних(&Дата, ДоговорАренды = &ДоговорАренды) КАК АрендаДействующиеСоглашенияСрезПоследних";
	Запрос.УстановитьПараметр("ДоговорАренды", ДоговорАренды);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Процедура производит запись данных в регистр сведений Аренда. Действующие соглашения
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект.ДоговорАренды, ДокументОбъект.ИзменениеДоговораАренды - Соглашение
//  																						  для записи в регистр.
//  Отказ			 - Булево - Признак отказа от проведения документа
//
Процедура ЗаписатьСоглашение(ДокументОбъект, Отказ) Экспорт 
	
	 НаборЗаписей = ДокументОбъект.Движения.АрендаДействующиеСоглашения;
	 Запись = НаборЗаписей.Добавить();
	 Запись.Период = ДокументОбъект.Дата;
	 Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ДоговорАренды") Тогда
		 Запись.ДоговорАренды = ДокументОбъект.Ссылка;
	 Иначе 
		 Запись.ДоговорАренды = ДокументОбъект.ДокументОснование;
	 КонецЕсли;
	 Запись.ДействующееСоглашение = ДокументОбъект.Ссылка;
	 Запись.ДатаНачала = ДокументОбъект.ДатаНачала;
	 Запись.ДатаОкончания = ДокументОбъект.ДатаОкончания;
	 
	 НаборЗаписей.Записать();
	
КонецПроцедуры

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты регистра
	ОбязательныеРеквизиты = ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности и уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов и вариант проверки его заполнения
//  (1-Обязательный, 2-Уникальный, 3-Уникальный и обязательный). Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

#КонецОбласти

#КонецЕсли