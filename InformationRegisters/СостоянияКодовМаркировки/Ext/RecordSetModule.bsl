// Модуль набора записей регистра "Состояния кодов маркировки."

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ДокументОбъект Экспорт; // документ, выполняющий изменение состояния
Перем Период Экспорт; // период фиксирования даты изменения статуса
Перем Организация Экспорт; // СправочникСсылка.Организации
Перем Состояние Экспорт; // Перечисления.СостоянияКодовМаркировки
Перем РезультатЗапросаПоКодамМаркировки Экспорт; // Список кодов маркировки к изменению статуса
Перем ПроверятьВыводИзОборота Экспорт; // Проверка вывода из оборота кодов маркировок
Перем ПроверятьВводВОборот Экспорт; // Проверка ввода в оборот кодов маркировок
Перем РежимПроведения Экспорт; // Режим проведения документа оперативный/неоперативный
Перем УдалятьДвижения Экспорт; // Признак удаления ранее записанных движений
Перем ОчищатьЗаписи Экспорт; // Признак очистки записей до

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Формирует таблицу кодов маркировки заданного документа
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица кодов маркировки:
//   * Номенклатура - СправочникСсылка.Номенклатура - номенклатура;
//   * ХарактеристикаНоменклатуры - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика номенклатуры;
//   * КодМаркировки - Строка - код маркировки.
//
Функция ТаблицаКодовМаркировки() Экспорт
	
	ВидДок = ДокументОбъект.Метаданные().Имя;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ДокументТовары.ИдентификаторТовара КАК ИдентификаторТовара,
	               |	ДокументТовары.Номенклатура КАК Номенклатура,
	               |	ДокументТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	               |ПОМЕСТИТЬ ТаблицаТоваров
	               |ИЗ
	               |	Документ.#ВидДокумента.Товары КАК ДокументТовары
	               |ГДЕ
	               |	ДокументТовары.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДокументКодыМаркировки.ИдентификаторТовара КАК ИдентификаторТовара,
	               |	ДокументКодыМаркировки.КодМаркировки КАК КодМаркировки
	               |ПОМЕСТИТЬ ТаблицаКодовМаркировки
	               |ИЗ
	               |	Документ.#ВидДокумента.КодыМаркировки КАК ДокументКодыМаркировки
	               |ГДЕ
	               |	ДокументКодыМаркировки.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	               |	ТаблицаТоваров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ТаблицаКодовМаркировки.КодМаркировки КАК КодМаркировки
	               |ИЗ
	               |	ТаблицаТоваров КАК ТаблицаТоваров
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаКодовМаркировки КАК ТаблицаКодовМаркировки
	               |		ПО ТаблицаТоваров.ИдентификаторТовара = ТаблицаКодовМаркировки.ИдентификаторТовара";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ВидДокумента", ВидДок);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Записывает движения по регистру "Состояния кодов маркировки"
//
// Возвращаемое значение:
//  Булево - Истина, если операция прошла успешно, Ложь - в противном случае.
//
Функция СостояниеКодовМаркировки() Экспорт
	
	ВсеОК = Истина;
	
	Если УдалятьДвижения Тогда
		ОтменаПроведения();
	КонецЕсли;
	
	Если ТипЗнч(РезультатЗапросаПоКодамМаркировки) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоКодамМаркировки = РезультатЗапросаПоКодамМаркировки.Выгрузить();
	ИначеЕсли НЕ ТипЗнч(РезультатЗапросаПоКодамМаркировки) = Тип("ТаблицаЗначений") Тогда
		РезультатЗапросаПоКодамМаркировки = ТаблицаКодовМаркировки();
	КонецЕсли;
	
	Если ПроверятьВыводИзОборота Тогда
		
		КодМаркировкиЗапрещенДляВывода = РегистрыСведений.СостоянияКодовМаркировки.КодМаркировкиЗапрещенДляВывода(
			РезультатЗапросаПоКодамМаркировки,
			ДокументОбъект,
			РежимПроведения
		);
		
		Если КодМаркировкиЗапрещенДляВывода Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПроверятьВводВОборот Тогда
		
		КодМаркировкиВведенВОборот = РегистрыСведений.СостоянияКодовМаркировки.КодМаркировкиВведенВОборот(
			РезультатЗапросаПоКодамМаркировки,
			ДокументОбъект,
			РежимПроведения
		);
		
		Если КодМаркировкиВведенВОборот Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Период = Неопределено Тогда
		Период = ДокументОбъект.Дата;
	КонецЕсли;
	
	// отберем набор записей по документу
	Отбор.ДокументОснование.Значение = ДокументОбъект.Ссылка;
	Отбор.ДокументОснование.Использование = Истина;
	ТаблицаЗаписей = Выгрузить();
	Если ОчищатьЗаписи Тогда
		ТаблицаЗаписей.Очистить();
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из РезультатЗапросаПоКодамМаркировки Цикл
		
		СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(ТекущаяСтрока.КодМаркировки);
		Если НЕ СтруктураМаркировки.Разобран Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Код маркировки <%1> не разобран. Проверьте его корректность.'"),
				СокрЛП(ТекущаяСтрока.КодМаркировки)
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			ВсеОК = Ложь;
		КонецЕсли;
		Если СтруктураМаркировки.ТипИдентификатораТовара <>
			ПредопределенноеЗначение("Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1") Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаЗаписей.Добавить();
		НоваяСтрока.Период = ?(
			ЕстьРеквизит(РезультатЗапросаПоКодамМаркировки, "Период") И ЗначениеЗаполнено(ТекущаяСтрока.Период),
			ТекущаяСтрока.Период,
			Период);
		НоваяСтрока.ДокументОснование = ДокументОбъект.Ссылка;
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.Номенклатура = ТекущаяСтрока.Номенклатура;
		НоваяСтрока.ХарактеристикаНоменклатуры = ТекущаяСтрока.ХарактеристикаНоменклатуры;
		НоваяСтрока.GTIN = СтруктураМаркировки.GTIN;
		НоваяСтрока.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
		НоваяСтрока.Состояние = Состояние;
		НоваяСтрока.КодМаркировки = ТекущаяСтрока.КодМаркировки;
	КонецЦикла;
	
	Если НЕ ВсеОК Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Загрузить(ТаблицаЗаписей);
	
	Попытка
		Записать();
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Не удалось записать состояние кодов маркировки.'",
			ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		ДокументОбъект = Неопределено;
		Возврат Ложь;
	КонецПопытки;
	
	ДокументОбъект = Неопределено;
	Возврат Истина;
	
КонецФункции // СостояниеКодовМаркировки()

// Записывает движения по регистру "Состояния кодов маркировки"
//
// Возвращаемое значение:
//  Булево - Истина, если операция прошла успешно, Ложь - в противном случае.
//
Функция КорректировкаСостоянийКодовМаркировки() Экспорт
	
	ВсеОК = Истина;
	
	Если УдалятьДвижения Тогда
		ОтменаПроведения();
	КонецЕсли;
	
	Если ТипЗнч(РезультатЗапросаПоКодамМаркировки) = Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоКодамМаркировки = РезультатЗапросаПоКодамМаркировки.Выгрузить();
	КонецЕсли;
	
	Если Период = Неопределено Тогда
		Период = ДокументОбъект.Дата;
	КонецЕсли;
	
	// отберем набор записей по документу
	Отбор.ДокументОснование.Значение = ДокументОбъект.Ссылка;
	Отбор.ДокументОснование.Использование = Истина;
	ТаблицаЗаписей = Выгрузить();
	Если ОчищатьЗаписи Тогда
		ТаблицаЗаписей.Очистить();
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из РезультатЗапросаПоКодамМаркировки Цикл
		
		СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(ТекущаяСтрока.КодМаркировки);
		Если НЕ СтруктураМаркировки.Разобран Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Код маркировки <%1> не разобран. Проверьте его корректность.'"),
				СокрЛП(ТекущаяСтрока.КодМаркировки)
			);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			ВсеОК = Ложь;
		КонецЕсли;
		Если СтруктураМаркировки.ТипИдентификатораТовара <>
			ПредопределенноеЗначение("Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1") Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаЗаписей.Добавить();
		НоваяСтрока.Период = Период;
		НоваяСтрока.ДокументОснование = ДокументОбъект.Ссылка;
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.Номенклатура = ТекущаяСтрока.Номенклатура;
		НоваяСтрока.ХарактеристикаНоменклатуры = ТекущаяСтрока.ХарактеристикаНоменклатуры;
		НоваяСтрока.GTIN = СтруктураМаркировки.GTIN;
		НоваяСтрока.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
		НоваяСтрока.Состояние = ТекущаяСтрока.СтатусКодаМаркировки;
		НоваяСтрока.КодМаркировки = ТекущаяСтрока.КодМаркировки;
	КонецЦикла;
	
	Если НЕ ВсеОК Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Загрузить(ТаблицаЗаписей);
	
	Попытка
		Записать();
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Не удалось записать состояние кодов маркировки.'",
			ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		ДокументОбъект = Неопределено;
		Возврат Ложь;
	КонецПопытки;
	
	ДокументОбъект = Неопределено;
	Возврат Истина;
	
КонецФункции // СостояниеКодовМаркировки()

// Отмена проведения документа
//
// Возвращаемое значение:
//  Булево - Истина, если операция прошла без ошибок, Ложь - в противном случае.
//
Функция ОтменаПроведения() Экспорт
	
	Отбор.ДокументОснование.Значение = ДокументОбъект.Ссылка;
	Отбор.ДокументОснование.Использование = Истина;
	Прочитать();
	Очистить();
	Попытка
		Записать();
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Не удалось записать состояние кодов маркировки.'",
			ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		Возврат Ложь;
	КонецПопытки; 
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ОбработкаСобытийРегистраСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	// Преобразуем код маркировки
	Для Каждого Запись Из ЭтотОбъект Цикл
		Запись.КодМаркировки = МаркировкаТоваровКлиентСервер.ПолучитьКодМаркировки(Запись.КодМаркировки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ДокументОбъект = Неопределено;
Период = Неопределено;
РезультатЗапросаПоКодамМаркировки = Неопределено;
ПроверятьВыводИзОборота = Ложь;
ПроверятьВводВОборот = Ложь;
УдалятьДвижения = Истина;
ОчищатьЗаписи = Истина;

#КонецОбласти

#КонецЕсли
