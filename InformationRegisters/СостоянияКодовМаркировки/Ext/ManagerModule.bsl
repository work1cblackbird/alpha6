
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ОбработчикиОбновления

// Отрезает криптохвосты кодов маркировки.
//
// Возвращаемое значение:
//  Булево - Истина, если произошли ошибки в процессе выполнения, Ложь - в противном случае.
//
Функция ОтрезатьКриптохвосты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СостоянияКодовМаркировки.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	РегистрСведений.СостоянияКодовМаркировки КАК СостоянияКодовМаркировки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЕстьОшибки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.СостоянияКодовМаркировки.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументОснование.Установить(Выборка.ДокументОснование);
		
		НаборЗаписей.Прочитать();
		
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.КодМаркировки = МаркировкаТоваровКлиентСервер.ПолучитьКодМаркировки(Запись.КодМаркировки);
		КонецЦикла;
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ЕстьОшибки = Истина;
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Обновление ИБ.Очистка криптохвостов Маркировка товаров в производстве'",
					ОбщегоНазначения.КодОсновногоЯзыка()
				),
				УровеньЖурналаРегистрации.Ошибка,
				,
				Выборка.ДокументОснование,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат ЕстьОшибки;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьЗаписиВРегистр(
		Ссылка,
		Товары,
		КодыМаркировки,
		Состояние,
		ОписаниеОшибки,
		ДляПечати = Ложь) Экспорт
	
	НаборЗаписей = РегистрыСведений.СостоянияКодовМаркировки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(Ссылка);
	
	Организация = Ссылка.Организация;
	
	НаборЗаписей.Прочитать();
	ТаблицаНабора = НаборЗаписей.Выгрузить();
	
	// Таблица полученных кодов маркировки
	ТаблицаКодовМаркировки = Новый ТаблицаЗначений();
	ТаблицаКодовМаркировки.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаКодовМаркировки.Колонки.Добавить(
		"ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаКодовМаркировки.Колонки.Добавить("КодМаркировки", Новый ОписаниеТипов("Строка"));
	
	СимволГруппировки = ОбщегоНазначенияБПОКлиентСервер.РазделительGS1();
	СимволЭкранирования = ОбщегоНазначенияБПОКлиентСервер.ЭкранированныйСимволGS1();
	
	Если ТипЗнч(КодыМаркировки) = Тип("Массив") Тогда
		
		СтруктураПоиска = Новый Структура("GTIN,СерийныйНомер");
		УдалениеНеЗагруженных = Новый Массив;
		
		Для Инд = 0 По КодыМаркировки.Количество() - 1 Цикл
			
			ТекущийКодМаркировки = КодыМаркировки[Инд];
			КодыМаркировки[Инд] = СтрЗаменить(КодыМаркировки[Инд], СимволГруппировки, СимволЭкранирования);
			
			// Найдем номенклатуру по GTIM
			СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(КодыМаркировки[Инд]);
			Если СтруктураМаркировки.ТипИдентификатораТовара <>
					ПредопределенноеЗначение("Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1") Тогда
				Продолжить;
			КонецЕсли;
			
			// Проверим, что ранее не было записи с таким кодом маркировки
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтруктураМаркировки);
			Если ТаблицаНабора.НайтиСтроки(СтруктураПоиска).Количество() > 0 Тогда
				ОписаниеОшибки = ОписаниеОшибки + Символы.ПС
					+ СтрШаблон(НСтр("ru ='Код маркировки ""%1"" ранее был загружен.'"), ТекущийКодМаркировки);
				УдалениеНеЗагруженных.Добавить(КодыМаркировки[Инд]);
				Продолжить;
			КонецЕсли;
			
			Номенклатура = Неопределено;
			Характеристика = Неопределено;
			
			СтрокаТоваров = Товары.Найти(СтруктураМаркировки.GTIN, "GTIN");
			Если СтрокаТоваров <> Неопределено Тогда
				Номенклатура = СтрокаТоваров.Номенклатура;
				Характеристика = СтрокаТОваров.ХарактеристикаНоменклатуры;
			Иначе
				ОписаниеОшибки = ОписаниеОшибки + Символы.ПС
					+ СтрШаблон(
						НСтр("ru  ='Код маркировки ""%1"" не соответствует заказанным по документу. Код маркировки не загружен.'"),
						ТекущийКодМаркировки
					);
				УдалениеНеЗагруженных.Добавить(КодыМаркировки[Инд]);
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаНабора.Добавить();
			НоваяСтрока.Период = ТекущаяДатаСеанса();
			НоваяСтрока.ДокументОснование = Ссылка;
			НоваяСтрока.Организация = Организация;
			НоваяСтрока.Номенклатура = Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры = Характеристика;
			НоваяСтрока.GTIN = СтруктураМаркировки.GTIN;
			НоваяСтрока.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
			НоваяСтрока.Состояние = Состояние;
			НоваяСтрока.КодМаркировки = МаркировкаТоваровКлиентСервер.ПолучитьКодМаркировки(КодыМаркировки[Инд], "");
			
			НоваяСтрока = ТаблицаКодовМаркировки.Добавить();
			НоваяСтрока.Номенклатура = Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры = Характеристика;
			НоваяСтрока.КодМаркировки = КодыМаркировки[Инд];
			
		КонецЦикла;
		
		Для Каждого ТекущаяМаркировка Из УдалениеНеЗагруженных Цикл
			КодыМаркировки.Удалить(КодыМаркировки.Найти(ТекущаяМаркировка));
		КонецЦикла;
		
	Иначе
		СтруктураПоиска = Новый Структура("ИдентификаторТовара");
		Для Каждого ТекущаяСтрока Из Товары Цикл
			СтруктураПоиска.ИдентификаторТовара = ТекущаяСтрока.ИдентификаторТовара;
			НайденныеСтроки = КодыМаркировки.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого ТекущаяМаркировка Из НайденныеСтроки Цикл
				
				// Найдем номенклатуру по GTIM
				СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(КодыМаркировки[Инд]);
				
				Если СтруктураМаркировки.ТипИдентификатораТовара <>
					ПредопределенноеЗначение("Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1") Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = ТаблицаНабора.Добавить();
				НоваяСтрока.Период = ТекущаяДатаСеанса();
				НоваяСтрока.ДокументОснование = Ссылка;
				НоваяСтрока.Организация = Организация;
				НоваяСтрока.Номенклатура = ТекущаяСтрока.Номенклатура;
				НоваяСтрока.ХарактеристикаНоменклатуры = ТекущаяСтрока.ХарактеристикаНоменклатуры;
				НоваяСтрока.GTIN = СтруктураМаркировки.GTIN;
				НоваяСтрока.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
				НоваяСтрока.Состояние = Состояние;
				НоваяСтрока.КодМаркировки =
					МаркировкаТоваровКлиентСервер.ПолучитьКодМаркировки(ТекущаяМаркировка.КодМаркировки, "");
				
				НоваяСтрока = ТаблицаКодовМаркировки.Добавить();
				НоваяСтрока.Номенклатура = ТекущаяСтрока.Номенклатура;
				НоваяСтрока.ХарактеристикаНоменклатуры = ТекущаяСтрока.ХарактеристикаНоменклатуры;
				НоваяСтрока.КодМаркировки = ТекущаяМаркировка.КодМаркировки;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	НаборЗаписей.Загрузить(ТаблицаНабора);
	НаборЗаписей.Записать();
	
	// Заполним регистр для печати кодов маркировок
	Если ДляПечати И ТаблицаКодовМаркировки.Количество() > 0 Тогда
		МаркировкаТоваровСервер.ДобавитьЗаписиВРегистр(Ссылка, ТаблицаКодовМаркировки);
	КонецЕсли;
	
КонецПроцедуры

Функция КодМаркировкиЗапрещенДляВывода(ТаблицаМаркировок, ДокументОбъект, РежимПроведения) Экспорт
	
	Результат = Ложь;
	СписокСостоянийВводаВОборот = Перечисления.СостоянияКодовМаркировки.СостоянияВводаВОборотМаркировки();
	
	ДокументыРеализации = Новый Массив;
	ДокументыРеализации.Добавить(Тип("ДокументСсылка.РеализацияТоваров"));
	ДокументыРеализации.Добавить(Тип("ДокументСсылка.ЗаказНаряд"));
	ДокументыРеализации.Добавить(Тип("ДокументСсылка.Чек"));
	
	ЭтоДокументРеализации = (ДокументыРеализации.Найти(ТипЗнч(ДокументОбъект.Ссылка)) <> Неопределено);
	ГруппыТабака = МаркировкаТоваровКлиентСервер.ТоварныеГруппыТабачнойПродукции();
	
	Если ЭтоДокументРеализации Тогда
		ПокупательЮрЛицо =
			(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Контрагент, "ФормаСобственности") =
				Перечисления.ФормыСобственности.ЮридическоеЛицо);
	Иначе
		ПокупательЮрЛицо = Ложь;
	КонецЕсли;
	
	ТаблицаРазбораМаркировки = Новый ТаблицаЗначений;
	ТаблицаРазбораМаркировки.Колонки.Добавить("GTIN", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	ТаблицаРазбораМаркировки.Колонки.Добавить("СерийныйНомер",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50))
	);
	ТаблицаРазбораМаркировки.Колонки.Добавить("КодМаркировки",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(200))
	);
	
	// Разберем маркировку на состовляющие для поиска
	Для Каждого ТекущаяСтрока Из ТаблицаМаркировок Цикл
		
		СтруктураМаркировки = МенеджерОборудованияМаркировка.РазобратьШтриховойКодТовара(ТекущаяСтрока.КодМаркировки);
		Если СтруктураМаркировки.ТипИдентификатораТовара <>
			ПредопределенноеЗначение("Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1") Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРазбораМаркировки.Добавить();
		НоваяСтрока.GTIN = СтруктураМаркировки.GTIN; 
		НоваяСтрока.СерийныйНомер = СтруктураМаркировки.СерийныйНомер;
		НоваяСтрока.КодМаркировки = ТекущаяСтрока.КодМаркировки;
		
	КонецЦикла;
	
	Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
		
		МоментВремени = Неопределено;
		
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ЗаказНаряд") Тогда
		
		Если ДокументОбъект.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Закрыт Тогда 
			
			МоментВремени = Новый МоментВремени(ДокументОбъект.ДатаЗакрытия, ДокументОбъект.Ссылка);
			
		ИначеЕсли ДокументОбъект.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Выполнен Тогда
			
			МоментВремени = Новый МоментВремени(ДокументОбъект.ДатаОкончания, ДокументОбъект.Ссылка);
			
		Иначе
			
			МоментВремени = ДокументОбъект.МоментВремени();
			
		КонецЕсли;
		
	Иначе
		
		МоментВремени = ДокументОбъект.МоментВремени();
		
	КонецЕсли;
	
	// Получим текущие статусы маркировки
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СписокКодовМаркировок.GTIN КАК GTIN,
	               |	СписокКодовМаркировок.СерийныйНомер КАК СерийныйНомер,
	               |	СписокКодовМаркировок.КодМаркировки КАК КодМаркировки
	               |ПОМЕСТИТЬ ТаблицаМаркировок
	               |ИЗ
	               |	&СписокКодовМаркировок КАК СписокКодовМаркировок
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СостоянияКодовМаркировкиСрезПоследних.Период КАК Период,
	               |	СостоянияКодовМаркировкиСрезПоследних.Организация.ИНН КАК ИННОрганизации,
	               |	СостоянияКодовМаркировкиСрезПоследних.Номенклатура КАК Номенклатура,
	               |	СостоянияКодовМаркировкиСрезПоследних.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ТаблицаМаркировок.КодМаркировки КАК КодМаркировки,
	               |	СостоянияКодовМаркировкиСрезПоследних.Состояние КАК Состояние
	               |ПОМЕСТИТЬ ТаблицаСостоянийКодовМаркировок
	               |ИЗ
	               |	ТаблицаМаркировок КАК ТаблицаМаркировок
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияКодовМаркировки.СрезПоследних(
	               |				&МоментВремени,
	               |				(GTIN, СерийныйНомер) В
	               |					(ВЫБРАТЬ
	               |						ТаблицаМаркировок.GTIN КАК GTIN,
	               |						ТаблицаМаркировок.СерийныйНомер КАК СерийныйНомер
	               |					ИЗ
	               |						ТаблицаМаркировок КАК ТаблицаМаркировок)) КАК СостоянияКодовМаркировкиСрезПоследних
	               |		ПО ТаблицаМаркировок.GTIN = СостоянияКодовМаркировкиСрезПоследних.GTIN
	               |			И ТаблицаМаркировок.СерийныйНомер = СостоянияКодовМаркировкиСрезПоследних.СерийныйНомер
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаСостоянийКодовМаркировок.КодМаркировки КАК КодМаркировки,
	               |	МАКСИМУМ(ТаблицаСостоянийКодовМаркировок.Период) КАК Период
	               |ПОМЕСТИТЬ ТаблицаПоследнегоПериода
	               |ИЗ
	               |	ТаблицаСостоянийКодовМаркировок КАК ТаблицаСостоянийКодовМаркировок
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаСостоянийКодовМаркировок.КодМаркировки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаСостоянийКодовМаркировок.ИННОрганизации КАК ИННОрганизации,
	               |	ТаблицаСостоянийКодовМаркировок.Номенклатура КАК Номенклатура,
	               |	ТаблицаСостоянийКодовМаркировок.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ТаблицаСостоянийКодовМаркировок.КодМаркировки КАК КодМаркировки,
	               |	ТаблицаСостоянийКодовМаркировок.Состояние КАК Состояние,
	               |	ТаблицаСостоянийКодовМаркировок.Номенклатура.ТипНоменклатуры.ТипМаркировки.ТоварнаяГруппа КАК ТоварнаяГруппа
	               |ИЗ
	               |	ТаблицаСостоянийКодовМаркировок КАК ТаблицаСостоянийКодовМаркировок
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПоследнегоПериода КАК ТаблицаПоследнегоПериода
	               |		ПО ТаблицаСостоянийКодовМаркировок.Период = ТаблицаПоследнегоПериода.Период
	               |			И ТаблицаСостоянийКодовМаркировок.КодМаркировки = ТаблицаПоследнегоПериода.КодМаркировки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МаркировкаТоваровВПроизводствеОстатки.ЗаказНаряд КАК ЗаказНаряд,
	               |	МаркировкаТоваровВПроизводствеОстатки.Номенклатура КАК Номенклатура,
	               |	МаркировкаТоваровВПроизводствеОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	МаркировкаТоваровВПроизводствеОстатки.GTIN КАК GTIN,
	               |	МаркировкаТоваровВПроизводствеОстатки.СерийныйНомер КАК СерийныйНомер,
	               |	МаркировкаТоваровВПроизводствеОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	ТаблицаМаркировок.КодМаркировки КАК КодМаркировки
	               |ИЗ
	               |	ТаблицаМаркировок КАК ТаблицаМаркировок
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.МаркировкаТоваровВПроизводстве.Остатки(
	               |				&МоментВремени,
	               |				(GTIN, СерийныйНомер) В
	               |					(ВЫБРАТЬ
	               |						ТаблицаМаркировок.GTIN КАК GTIN,
	               |						ТаблицаМаркировок.СерийныйНомер КАК СерийныйНомер
	               |					ИЗ
	               |						ТаблицаМаркировок КАК ТаблицаМаркировок)) КАК МаркировкаТоваровВПроизводствеОстатки
	               |		ПО ТаблицаМаркировок.GTIN = МаркировкаТоваровВПроизводствеОстатки.GTIN
	               |			И ТаблицаМаркировок.СерийныйНомер = МаркировкаТоваровВПроизводствеОстатки.СерийныйНомер";
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени);
	Запрос.УстановитьПараметр("Документ", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("КодыМаркировки", ТаблицаМаркировок.ВыгрузитьКолонку("КодМаркировки"));
	Запрос.УстановитьПараметр("СписокКодовМаркировок", ТаблицаРазбораМаркировки);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	Выборка = ПакетЗапросов[3].Выбрать();
	
	ИННОрганизации = ДокументОбъект.Организация.ИНН;
	Пока Выборка.Следующий() Цикл
		Если ИННОрганизации <> Выборка.ИННОрганизации Тогда
			Если НЕ ЗначениеЗаполнено(Выборка.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru  ='Товар <%1> с маркировкой <%2> принадлежит другой организации.'"),
						СокрЛП(Выборка.Номенклатура),
						СокрЛП(Выборка.КодМаркировки)),
					ДокументОбъект
				);
				
				Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru  ='Товар <%1> с характеристикой <%2> с маркировкой <%3> принадлежит другой организации.'"),
						СокрЛП(Выборка.Номенклатура),
						СокрЛП(Выборка.ХарактеристикаНоменклатуры),
						СокрЛП(Выборка.КодМаркировки)),
					ДокументОбъект
				);

			КонецЕсли;
			Результат = Истина;
		ИначеЕсли СписокСостоянийВводаВОборот.Найти(Выборка.Состояние) = Неопределено
			И Не (ПокупательЮрЛицо И ГруппыТабака.Найти(Выборка.ТоварнаяГруппа) <> Неопределено
			И (Выборка.Состояние = Перечисления.СостоянияКодовМаркировки.Эмитирован 
			ИЛИ Выборка.Состояние = Перечисления.СостоянияКодовМаркировки.ЭмитированВыпущен)) Тогда
			Если НЕ ЗначениеЗаполнено(Выборка.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru ='Товар <%1> с маркировкой <%2> не был введен в оборот или был выведен из оборота ранее.'"),
						СокрЛП(Выборка.Номенклатура),
						СокрЛП(Выборка.КодМаркировки)),
					ДокументОбъект
				);

			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru ='Товар <%1> с характеристикой <%2> с маркировкой <%3> "
					+ "не был введен в оборот или был выведен из оборота ранее.'"),
						СокрЛП(Выборка.Номенклатура),
						СокрЛП(Выборка.ХарактеристикаНоменклатуры),
						СокрЛП(Выборка.КодМаркировки)),
					ДокументОбъект
				);

			КонецЕсли;
			Результат = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Выборка = ПакетЗапросов[4].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ЗаказНаряд")
			И ДокументОбъект.Ссылка = Выборка.ЗаказНаряд Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.КоличествоОстаток > 0 Тогда
			Если НЕ ЗначениеЗаполнено(Выборка.ХарактеристикаНоменклатуры) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru ='Товар <%1> с маркировкой <%2> ранее перемещен в производство для заказ-наряда <%3>.'"),
						СокрЛП(Выборка.Номенклатура),
						СокрЛП(Выборка.КодМаркировки),
						СокрЛП(Выборка.ЗаказНаряд)),
					ДокументОбъект
				);
			Иначе
				
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru ='Товар <%1> с характеристикой <%2> с маркировкой <%3> "
					+ "ранее перемещен в производство для заказ-наряда <%4>.'"),
						СокрЛП(Выборка.Номенклатура),
						СокрЛП(Выборка.ХарактеристикаНоменклатуры),
						СокрЛП(Выборка.КодМаркировки),
						СокрЛП(Выборка.ЗаказНаряд)),
					ДокументОбъект					
				);
			КонецЕсли;
			Результат = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция КодМаркировкиВведенВОборот(ТаблицаМаркировок, ДокументОбъект, РежимПроведения) Экспорт
	
	КодыРанееВведеныВОборот = Ложь;
	
	// Удалим введенные в оборот коды маркировки
	НаборЗаписейСостоянияКодовМаркировки = РегистрыСведений.СостоянияКодовМаркировки.СоздатьНаборЗаписей();
	НаборЗаписейСостоянияКодовМаркировки.ДокументОбъект = ДокументОбъект.Ссылка;
	НаборЗаписейСостоянияКодовМаркировки.ОтменаПроведения();
	
	// Проверим, что на текущий момент маркировка не введена в оборот
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СостоянияКодовМаркировкиСрезПоследних.Период КАК Период,
	               |	СостоянияКодовМаркировкиСрезПоследних.КодМаркировки КАК КодМаркировки,
	               |	СостоянияКодовМаркировкиСрезПоследних.Состояние КАК Состояние,
	               |	СостоянияКодовМаркировкиСрезПоследних.Номенклатура КАК Номенклатура,
	               |	СостоянияКодовМаркировкиСрезПоследних.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	               |ПОМЕСТИТЬ СостоянияКодовМаркировки
	               |ИЗ
	               |	РегистрСведений.СостоянияКодовМаркировки.СрезПоследних(&МоментВремени, КодМаркировки В (&КодыМаркировки)) КАК СостоянияКодовМаркировкиСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СостоянияКодовМаркировки.КодМаркировки КАК КодМаркировки,
	               |	МАКСИМУМ(СостоянияКодовМаркировки.Период) КАК Период
	               |ПОМЕСТИТЬ ПоследнееСостояние
	               |ИЗ
	               |	СостоянияКодовМаркировки КАК СостоянияКодовМаркировки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СостоянияКодовМаркировки.КодМаркировки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СостоянияКодовМаркировки.КодМаркировки КАК КодМаркировки,
	               |	СостоянияКодовМаркировки.Номенклатура КАК Номенклатура,
	               |	СостоянияКодовМаркировки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СостоянияКодовМаркировки.Состояние КАК Состояние
	               |ИЗ
	               |	СостоянияКодовМаркировки КАК СостоянияКодовМаркировки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследнееСостояние КАК ПоследнееСостояние
	               |		ПО СостоянияКодовМаркировки.КодМаркировки = ПоследнееСостояние.КодМаркировки
	               |			И СостоянияКодовМаркировки.Период = ПоследнееСостояние.Период
	               |ГДЕ
	               |	СостоянияКодовМаркировки.Состояние В(&СписокСостоянийВОбороте)";
	Запрос.УстановитьПараметр("МоментВремени",
		?(РежимПроведения = РежимПроведенияДокумента.Оперативный, Неопределено, ДокументОбъект.МоментВремени())
	);
	Запрос.УстановитьПараметр("КодыМаркировки", ТаблицаМаркировок.ВыгрузитьКолонку("КодМаркировки"));
	Запрос.УстановитьПараметр("СписокСостоянийВОбороте",
		Перечисления.СостоянияКодовМаркировки.СостоянияВводаВОборотМаркировки()
	);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(Выборка.ХарактеристикаНоменклатуры) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru ='Товар <%1> с маркировкой <%2> введен в оборот ранее.'"),
					СокрЛП(Выборка.Номенклатура),
					СокрЛП(Выборка.КодМаркировки)),
				ДокументОбъект
			);
		Иначе
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru ='Товар <%1> с характеристикой <%2> с маркировкой <%3> введен в оборот ранее.'"),
					СокрЛП(Выборка.Номенклатура),
					СокрЛП(Выборка.ХарактеристикаНоменклатуры),
					СокрЛП(Выборка.КодМаркировки)),
				ДокументОбъект
			);
		КонецЕсли;
		КодыРанееВведеныВОборот = Истина;
	КонецЦикла;
	
	Возврат КодыРанееВведеныВОборот;
	
КонецФункции

Функция ТекущиеСтатусыКодовМаркировки(СписокКодовМаркировок, НаДату) Экспорт
	
	// Получим текущие статусы маркировки
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СписокКодовМаркировок.GTIN КАК GTIN,
	               |	СписокКодовМаркировок.СерийныйНомер КАК СерийныйНомер,
	               |	СписокКодовМаркировок.КодМаркировки КАК КодМаркировки
	               |ПОМЕСТИТЬ ТаблицаМаркировок
	               |ИЗ
	               |	&СписокКодовМаркировок КАК СписокКодовМаркировок
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СостоянияКодовМаркировкиСрезПоследних.Период КАК Период,
	               |	СостоянияКодовМаркировкиСрезПоследних.Номенклатура КАК Номенклатура,
	               |	СостоянияКодовМаркировкиСрезПоследних.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ТаблицаМаркировок.КодМаркировки КАК КодМаркировки,
	               |	СостоянияКодовМаркировкиСрезПоследних.Состояние КАК Состояние
	               |ПОМЕСТИТЬ ТаблицаСостоянийКодовМаркировок
	               |ИЗ
	               |	ТаблицаМаркировок КАК ТаблицаМаркировок
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияКодовМаркировки.СрезПоследних(
	               |				&Дата,
	               |				(GTIN, СерийныйНомер) В
	               |					(ВЫБРАТЬ
	               |						ТаблицаМаркировок.GTIN КАК GTIN,
	               |						ТаблицаМаркировок.СерийныйНомер КАК СерийныйНомер
	               |					ИЗ
	               |						ТаблицаМаркировок КАК ТаблицаМаркировок)) КАК СостоянияКодовМаркировкиСрезПоследних
	               |		ПО ТаблицаМаркировок.GTIN = СостоянияКодовМаркировкиСрезПоследних.GTIN
	               |			И ТаблицаМаркировок.СерийныйНомер = СостоянияКодовМаркировкиСрезПоследних.СерийныйНомер
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаСостоянийКодовМаркировок.КодМаркировки КАК КодМаркировки,
	               |	МАКСИМУМ(ТаблицаСостоянийКодовМаркировок.Период) КАК Период
	               |ПОМЕСТИТЬ ТаблицаПоследнегоПериода
	               |ИЗ
	               |	ТаблицаСостоянийКодовМаркировок КАК ТаблицаСостоянийКодовМаркировок
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаСостоянийКодовМаркировок.КодМаркировки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаСостоянийКодовМаркировок.Номенклатура КАК Номенклатура,
	               |	ТаблицаСостоянийКодовМаркировок.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ТаблицаСостоянийКодовМаркировок.КодМаркировки КАК КодМаркировки,
	               |	ТаблицаСостоянийКодовМаркировок.Состояние КАК Состояние
	               |ИЗ
	               |	ТаблицаСостоянийКодовМаркировок КАК ТаблицаСостоянийКодовМаркировок
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПоследнегоПериода КАК ТаблицаПоследнегоПериода
	               |		ПО ТаблицаСостоянийКодовМаркировок.Период = ТаблицаПоследнегоПериода.Период
	               |			И ТаблицаСостоянийКодовМаркировок.КодМаркировки = ТаблицаПоследнегоПериода.КодМаркировки";
	Запрос.УстановитьПараметр("СписокКодовМаркировок", СписокКодовМаркировок);
	Запрос.УстановитьПараметр("Дата", НаДату);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СтатусыКодовМаркировкиПоДокументу(Документ, Знач НаДату = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СостоянияКодовМаркировкиСрезПоследних.Период КАК Период,
	|	СостоянияКодовМаркировкиСрезПоследних.ДокументОснование КАК ДокументОснование,
	|	СостоянияКодовМаркировкиСрезПоследних.Организация КАК Организация,
	|	СостоянияКодовМаркировкиСрезПоследних.Номенклатура КАК Номенклатура,
	|	СостоянияКодовМаркировкиСрезПоследних.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СостоянияКодовМаркировкиСрезПоследних.GTIN КАК GTIN,
	|	СостоянияКодовМаркировкиСрезПоследних.СерийныйНомер КАК СерийныйНомер,
	|	СостоянияКодовМаркировкиСрезПоследних.Состояние КАК Состояние,
	|	СостоянияКодовМаркировкиСрезПоследних.КодМаркировки КАК КодМаркировки
	|ИЗ
	|	РегистрСведений.СостоянияКодовМаркировки.СрезПоследних(&НаДату, ДокументОснование = &Документ) КАК СостоянияКодовМаркировкиСрезПоследних";
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("Документ", Документ);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#Область ПараметрыОбработкиРеквизитовОбъекта

Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	ОбязательныеРеквизиты = ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
	Возврат ОбязательныеРеквизиты;
	
КонецФункции 

Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	УникальныеРеквизиты = Новый Структура();
	
	Возврат УникальныеРеквизиты;
	
КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли