// Модуль менеджера регистра сведений "УРВ табельное время"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Формирует таблицу табельного времени ресурса
//
// Параметры:
//	Ресурсы - Массив, СправочникСсылка.Сотрудники, СправочникСсылка.Цеха - Ресурсы для которых формируется таблица
//	Начало - Дата - Начало интервала
//	Конец - Дата - Окончание интервала
//	ВидыИнтервалов - Массив, СправочникСсылка.ВидыИнтервалов - Отбор по виду интервалов.
//
Функция ПолучитьТабель(Ресурсы, Начало, Конец, ВидыИнтервалов = Неопределено) Экспорт
	
	Если ТипЗнч(Ресурсы) = Тип("Массив") Тогда
		ОтборПоРесурсам = Ресурсы;
	Иначе
		ОтборПоРесурсам = Новый Массив;
		ОтборПоРесурсам.Добавить(Ресурсы);
	КонецЕсли;
	
	ТекстОтбораПоВидамИнтервалов = "";
	ОтборПоВидамИнтервалов = Неопределено;
	
	Если ВидыИнтервалов <> Неопределено И ТипЗнч(ВидыИнтервалов) = Тип("Массив") Тогда
		ОтборПоВидамИнтервалов = ВидыИнтервалов;
		ТекстОтбораПоВидамИнтервалов = "И УРВ_ТабельноеВремя.ВидИнтервала В(&ВидыИнтервалов)";
	ИначеЕсли ВидыИнтервалов <> Неопределено Тогда
		ОтборПоВидамИнтервалов = Новый Массив;
		ОтборПоВидамИнтервалов.Добавить(ВидыИнтервалов);
		ТекстОтбораПоВидамИнтервалов = "И УРВ_ТабельноеВремя.ВидИнтервала В(&ВидыИнтервалов)";
	КонецЕсли;
	
	ТекстЗапрос =
	"ВЫБРАТЬ
	|	УРВ_ТабельноеВремя.Ресурс,
	|	УРВ_ТабельноеВремя.Период             КАК Дата,
	|	УРВ_ТабельноеВремя.ВидИнтервала       КАК ВидИнтервала,
	|	УРВ_ТабельноеВремя.НачалоИнтервала    КАК НачалоРабочегоВремени,
	|	УРВ_ТабельноеВремя.ОкончаниеИнтервала КАК КонецРабочегоВремени,
	|	УРВ_ТабельноеВремя.Значение           КАК Продолжительность
	|ИЗ
	|	РегистрСведений.УРВ_ТабельноеВремя КАК УРВ_ТабельноеВремя
	|ГДЕ
	|	УРВ_ТабельноеВремя.Период МЕЖДУ &Начало И &Конец %1 И УРВ_ТабельноеВремя.Ресурс В(&Ресурсы)";
	
	Запрос = Новый Запрос(СтрШаблон(ТекстЗапрос, ТекстОтбораПоВидамИнтервалов));
	
	Запрос.УстановитьПараметр("Начало"         , НачалоДня(Начало));
	Запрос.УстановитьПараметр("Конец"          , КонецДня(Конец));
	Запрос.УстановитьПараметр("Ресурсы"        , ОтборПоРесурсам);
	Запрос.УстановитьПараметр("ВидыИнтервалов" , ОтборПоВидамИнтервалов);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#Область ПараметрыОбработкиРеквизитовОбъекта

Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	ОбязательныеРеквизиты = ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
	Возврат ОбязательныеРеквизиты;
	
КонецФункции 

Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	УникальныеРеквизиты = Новый Структура();
	
	Возврат УникальныеРеквизиты;
	
КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли