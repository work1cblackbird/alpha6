// Модуль набора записей регистра "Цены опций"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ДокументОбъект Экспорт;               // документ объект выполняющий движения
Перем ТипЦен Экспорт;						// тип устанавливаемых цен
Перем РезультатЗапросаПоОпциям Экспорт;		// РезультатЗапроса или ТаблицаЗначений. Устанавливается если документ имеет "необычную" ТЧ
Перем ПроверятьОдинаковыеЦены Экспорт;		// Булево. Если Истина, то перед установкой цен проверяется не дублируются ли цены
Перем ДатаНачалаДействия Экспорт;    		// Дата начала действий

// ускоряющие переменные
Перем ВалютаТипаЦен;            // Ссылка на валюту типа цен
Перем КурсВалютыТипаЦен;        // Курс валюты типа цен
Перем ТочностьТипаЦен;          // Точность типа цен
Перем ОкруглятьВБольшуюСторону; // Признак округления в большую сторону

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверка, не пытаемся ли мы в документе установить на одину и ту же опцию разные цены
// Возвращает Истина - если все в порядке, Ложь - если есть дубли.
Функция ПроверитьУстановкуОдинаковыхЦен()
	Запрос=Новый Запрос("
	|ВЫБРАТЬ
	|	ДокОпции.НомерСтроки КАК НомерСтроки,
	|	ДокОпции.Модель КАК Модель,
	|	ДокОпции.ВариантКомплектации КАК ВариантКомплектации,
	|	ДокОпции.Опция КАК Опция
	|ИЗ
	|	Документ."+ДокументОбъект.Метаданные().Имя+".Опции КАК ДокОпции
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ."+ДокументОбъект.Метаданные().Имя+".Опции КАК ДокОпции2
	|	ПО ДокОпции2.Ссылка=&Ссылка
	|	И ДокОпции2.Модель=ДокОпции.Модель
	|	И ДокОпции2.ВариантКомплектации=ДокОпции.ВариантКомплектации
	|	И ДокОпции2.Опция=ДокОпции.Опция
	|	И ДокОпции2.Цена<>ДокОпции.Цена
	|ГДЕ
	|	ДокОпции.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",ДокументОбъект.Ссылка);
	Результат=Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		// сообщим о разных ценах
		ТаблицаОшибок=Результат.Выгрузить();
		ТаблицаОшибок.Сортировать("Модель Возр, ВариантКомплектации Возр, Опция Возр, НомерСтроки Возр");
		Пока ТаблицаОшибок.Количество()>0 Цикл
			Модель=ТаблицаОшибок[0].Модель;
			ВариантКомплектации=ТаблицаОшибок[0].ВариантКомплектации;
			Опция=ТаблицаОшибок[0].Опция;
			СтруктураОтбора=Новый Структура("Модель,ВариантКомплектации,Опция",Модель,ВариантКомплектации,Опция);
			МассивНайденныхСтрок=ТаблицаОшибок.НайтиСтроки(СтруктураОтбора); СтрНомерСтрок="";
			Для Сч=0 По МассивНайденныхСтрок.ВГраница() Цикл
				ТекСтрока=МассивНайденныхСтрок[Сч];
				СтрНомерСтрок=СтрНомерСтрок+?(ПустаяСтрока(СтрНомерСтрок),"",",")+Формат(ТекСтрока.НомерСтроки,"ЧГ=0");
				ТаблицаОшибок.Удалить(ТекСтрока);
			КонецЦикла;
			
			Если НЕ ЗначениеЗаполнено(ВариантКомплектации) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = 'Модель ""%1"". Для опции ""%2"" установлены разные цены в строках %3.'"),
						СокрЛП(Модель),
						СокрЛП(Опция),
						СтрНомерСтрок
					),
					ДокументОбъект
				);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = 'Модель ""%1"" в комплектации ""%2"". Для опции ""%3"" установлены разные цены в строках %4.'"),
						СокрЛП(Модель),
						СокрЛП(ВариантКомплектации),
						СокрЛП(Опция),
						СтрНомерСтрок
					),
					ДокументОбъект
				);
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
		
	Возврат Истина
КонецФункции

// получаем таблицу опций автомобилей и их цен
Функция ПолучитьТаблицуОпций()
	Запрос=Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументОпции.Модель КАК Модель,
	|	ДокументОпции.ВариантКомплектации КАК ВариантКомплектации,
	|	ДокументОпции.Опция КАК Опция,
	|	ДокументОпции.Цена КАК НоваяЦена,
	|	ЕСТЬNULL(ЦеныВБазе.Цена,0) КАК ЦенаВБазе
	|ИЗ
	|	Документ."+ДокументОбъект.Метаданные().Имя+".Опции КАК ДокументОпции
	|	ЛЕВОЕ ВНЕШНЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ЦеныОпций.СрезПоследних(&Момент, ТипЦен=&ТипЦен 
	|		И Модель В (
	|			ВЫБРАТЬ Модель ИЗ Документ."+ДокументОбъект.Метаданные().Имя+".Опции ГДЕ Ссылка=&Ссылка
	|		) 
	|		И ВариантКомплектации В (
	|			ВЫБРАТЬ ВариантКомплектации ИЗ Документ."+ДокументОбъект.Метаданные().Имя+".Опции ГДЕ Ссылка=&Ссылка
	|		) 
	|		И Опция В (
	|			ВЫБРАТЬ Опция ИЗ Документ."+ДокументОбъект.Метаданные().Имя+".Опции ГДЕ Ссылка=&Ссылка
	|		) 
	|	) КАК ЦеныВБазе
	|
	|	ПО
	|		(ДокументОпции.Модель = ЦеныВБазе.Модель) И
	|		(ДокументОпции.ВариантКомплектации = ЦеныВБазе.ВариантКомплектации) И
	|		(ДокументОпции.Опция = ЦеныВБазе.Опция)
	|
	|ГДЕ
	|	(ДокументОпции.Ссылка = &Ссылка) И
	|	(ДокументОпции.Цена <> 0)
	|");
	Запрос.УстановитьПараметр("Ссылка",ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ТипЦен",ТипЦен);
	Запрос.УстановитьПараметр("Момент",ДатаНачалаДействия);
	
	Возврат Запрос.Выполнить();
КонецФункции

// устанавливает цены
Функция УстановитьЦены() Экспорт
	
	// заполним незаполненные переменные.
	ДатаПереоценки = ?(ТипЗнч(ДатаНачалаДействия) = Тип("Дата"), ДатаНачалаДействия, ДокументОбъект.Дата);
	
	// заполним незаполненные переменные
	ПроверятьОдинаковыеЦены=?(ПроверятьОдинаковыеЦены=Неопределено,Истина,ПроверятьОдинаковыеЦены);
	// проверим, а не пытаемся ли установить одинаковые цены
	Если ПроверятьОдинаковыеЦены И НЕ ПроверитьУстановкуОдинаковыхЦен() Тогда
		// скинем переменные
		ТипЦен=Неопределено;
		РезультатЗапросаПоОпциям=Неопределено;
		ПроверятьОдинаковыеЦены=Неопределено;
		// убиваем циклическую ссылку
		ДокументОбъект=Неопределено;
		Возврат Ложь;
	КонецЕсли;

	// получаем таблицу опций автомобилей
	Если (РезультатЗапросаПоОпциям=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоОпциям)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоОпциям)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоОпциям=ПолучитьТаблицуОпций();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоОпциям)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоОпциям=РезультатЗапросаПоОпциям.Выгрузить();
	КонецЕсли;
	
	// ускоряющие переменные
	СтрТипЦен=ТипЦен.Наименование;
	СообщатьОбИзменении = ПраваИНастройкиПользователя.Значение("СообщатьОбИзмененииЦен", ДокументОбъект);
	ВалютаТипаЦен = ТипЦен.ВалютаЦены; СтрВалютаТипаЦен=СокрЛП(ВалютаТипаЦен.Наименование);
	СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаТипаЦен,ДокументОбъект.Дата);
	КурсВалютыТипаЦен = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
	
	// устанавливаем цены
	Для Каждого СтрокаОпции Из РезультатЗапросаПоОпциям Цикл
		Если ТипЦен.ВВалютеУчета Тогда
			ВалютаТипаЦен = СтрокаОпции.Опция.ВалютаУчета;
			СтрВалютаТипаЦен=СокрЛП(ВалютаТипаЦен.Наименование);
			СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаТипаЦен,ДокументОбъект.Дата);
			КурсВалютыТипаЦен = СтруктураКурса.Курс / ?(СтруктураКурса.Кратность = 0, 1, СтруктураКурса.Кратность);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВалютаТипаЦен) Тогда
			НоваяЦена=Окр(РаботаСКурсамиВалютПлатформа.ПересчетПоВалюте(СтрокаОпции.НоваяЦена,ДокументОбъект.ВалютаДокумента,ДокументОбъект.КурсДокумента,ВалютаТипаЦен,КурсВалютыТипаЦен),2);
			// если цена не была установлена или изменилась тогда установим ее
			Если НоваяЦена<>СтрокаОпции.ЦенаВБазе Тогда
				НоваяЗапись = Добавить();
				НоваяЗапись.Период=ДатаПереоценки;
				НоваяЗапись.Регистратор=ДокументОбъект.Ссылка;
				НоваяЗапись.ТипЦен=ТипЦен;
				НоваяЗапись.Модель=СтрокаОпции.Модель;
				НоваяЗапись.ВариантКомплектации=СтрокаОпции.ВариантКомплектации;
				НоваяЗапись.Опция=СтрокаОпции.Опция;
				НоваяЗапись.Цена=НоваяЦена;
				// сообщим, если надо
				Если СообщатьОбИзменении Тогда
					ОбщегоНазначения.СообщитьПользователю(
						СтрШаблон(
							НСтр("ru = 'Модель <%1><%2>. Опция <%3>. Старая цена: %4. Новая цена: %5 %6. Тип цен: %7'"),
							СокрЛП(СтрокаОпции.Модель),
							?(НЕ ЗначениеЗаполнено(СтрокаОпции.ВариантКомплектации),""," в комплектации """+СокрЛП(СтрокаОпции.ВариантКомплектации)+""""),
							СтрокаОпции.Опция,
							Формат(СтрокаОпции.ЦенаВБазе,"ЧЦ=15; ЧДЦ=2; ЧН=0,00"),
							Формат(НоваяЦена,"ЧЦ=15; ЧДЦ=2; ЧН=0,00"),
							СтрВалютаТипаЦен,
							СтрТипЦен
						),
						,
						"Товары"
					);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// скинем переменные
	ТипЦен						= Неопределено;
	РезультатЗапросаПоОпциям	= Неопределено;
	ПроверятьОдинаковыеЦены		= Неопределено;
	ДатаНачалаДействия        	= Неопределено;
	
	// убиваем циклическую ссылку
	ДокументОбъект=Неопределено;
	
	Возврат Истина;
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ОбработкаСобытийРегистраСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты) Тогда
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#КонецЕсли