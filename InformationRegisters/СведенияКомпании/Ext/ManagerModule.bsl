// Модуль менеджера регистра сведений "Сведения компании"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Перезаполняет новое измерение регистра "Сведения компании".
//
Процедура ВыполнитьПерезаполнениеРеквизитаОрганизация() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияКомпании.УдалитьОрганизация КАК Контрагент,
	|	СведенияКомпании.Объект КАК Объект,
	|	СведенияКомпании.Период КАК Период
	|ИЗ
	|	РегистрСведений.СведенияКомпании КАК СведенияКомпании
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(СведенияКомпании.УдалитьОрганизация) = ТИП(Справочник.Контрагенты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияКомпании.УдалитьОрганизация КАК Организация,
	|	СведенияКомпании.Объект КАК Объект,
	|	СведенияКомпании.Период КАК Период
	|ИЗ
	|	РегистрСведений.СведенияКомпании КАК СведенияКомпании
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(СведенияКомпании.УдалитьОрганизация) <> ТИП(Справочник.Контрагенты)";
	
	ПакетЗапроса = Запрос.ВыполнитьПакет();
	
	// очистим записи по контрагентам
	Выборка = ПакетЗапроса[0].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МенеджерУдаляемойЗаписи = РегистрыСведений.СведенияКомпании.СоздатьМенеджерЗаписи();
		
		МенеджерУдаляемойЗаписи.УдалитьОрганизация = Выборка.Контрагент;
		МенеджерУдаляемойЗаписи.Объект = Выборка.Объект;
		МенеджерУдаляемойЗаписи.Период = Выборка.Период;
		
		МенеджерУдаляемойЗаписи.Прочитать();
		
		Если МенеджерУдаляемойЗаписи.Выбран() Тогда
			
			Попытка
				МенеджерУдаляемойЗаписи.Удалить();
			Исключение
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Ошибка при удалении записи регистра сведений ""Сведения компании""'",
						ОбщегоНазначения.КодОсновногоЯзыка()
					),
					УровеньЖурналаРегистрации.Ошибка,
					,
					,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
				);
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	// перезаполним реквизит Организация
	Выборка = ПакетЗапроса[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.СведенияКомпании.СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.УдалитьОрганизация = Выборка.Организация;
		МенеджерЗаписи.Объект = Выборка.Объект;
		МенеджерЗаписи.Период = Выборка.Период;
		
		МенеджерЗаписи.Прочитать();
		
		МенеджерЗаписи.Организация = МенеджерЗаписи.УдалитьОрганизация;
		МенеджерЗаписи.УдалитьОрганизация = Справочники.Организации.ПустаяСсылка();
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Ошибка при перезаписи записи регистра сведений ""Сведения компании""'",
					ОбщегоНазначения.КодОсновногоЯзыка()
				),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			);
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗаписьЗначенияРегистраСведенияКомпании(Организация, ВидОбъекта, Значение) Экспорт
	
	Отказ = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Чтение старого значения регистра
	СтруктураОтбора=Новый Структура("Организация,Объект",Организация,ВидОбъекта);
	СтруктураСведений=РегистрыСведений.СведенияКомпании.ПолучитьПоследнее(НачалоДня(ТекущаяДатаСеанса()),СтруктураОтбора);
	ЗначениеСтарое=СтруктураСведений.Значение;
	// Проверим, а есть что записывать
	Если (ЗначениеЗаполнено(Значение)) ИЛИ (СтруктураСведений.Количество()>0) Тогда
		// Значение параметра изменилось
		Если Значение<>ЗначениеСтарое Тогда
			ЗаписьРегСведений=РегистрыСведений.СведенияКомпании.СоздатьМенеджерЗаписи();
			ЗаписьРегСведений.Организация=Организация;
			ЗаписьРегСведений.Объект=ВидОбъекта;
			ЗаписьРегСведений.Значение=Значение;
			Если СтруктураСведений.Количество()>0 Тогда
				// Если запись уже существовала, установим рабочую дату
				ЗаписьРегСведений.Период=НачалоДня(ТекущаяДатаСеанса());
			Иначе
				// Если записи еще не было, установим дату начала ...
				ЗаписьРегСведений.Период=Дата("198001010000");
			КонецЕсли; 
			Попытка
				ЗаписьРегСведений.Записать();
			Исключение
				ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),,,, Отказ);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

#Область ПараметрыОбработкиРеквизитовОбъекта

Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	ОбязательныеРеквизиты = ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
	Возврат ОбязательныеРеквизиты;
	
КонецФункции 

Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	УникальныеРеквизиты = Новый Структура();
	
	Возврат УникальныеРеквизиты;
	
КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли