// Модуль менеджера регистра сведений "График работ календарный"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ЗаписатьГрафикРаботКалендарный(График, ТаблицаЗаписей) Экспорт
	
	Отказ = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ГрафикРаботКалендарный.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.График.Значение = График;
	НаборЗаписей.Отбор.График.Использование = Истина;
	
	НаборЗаписей.Загрузить(ТаблицаЗаписей);
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),,,,Отказ);
	КонецПопытки;
	
	Возврат Отказ;
	
КонецФункции // ЗаписатьГрафикРаботКалендарный()

#Область ПараметрыОбработкиРеквизитовОбъекта

Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	ОбязательныеРеквизиты = ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
	Возврат ОбязательныеРеквизиты;
	
КонецФункции 

Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	УникальныеРеквизиты = Новый Структура();
	
	Возврат УникальныеРеквизиты;
	
КонецФункции 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Рассчитывает продолжительность временного интервала.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура   - Объект, для которого выполняется обработка события.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура РассчитатьПродолжительностьИнтервала(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	Если ТипЗнч(ПараметрыДействия) = Тип("Структура") И ПараметрыДействия.РасчетПродолжительности Тогда
		ПродолжительностьМаксимум = 24*3600 - (Объект.НачалоРабочегоВремени - Объект.КонецРабочегоВремени);
		ПродолжительностьНовая = Объект.Продолжительность - '00010101';
		Если ПродолжительностьНовая > ПродолжительностьМаксимум Тогда
			Объект.Продолжительность = '00010101' + ПродолжительностьМаксимум;
		КонецЕсли;
		
		Объект.КонецРабочегоВремени = '00010101' + (Объект.НачалоРабочегоВремени - '00010101')+(Объект.Продолжительность - '00010101');
		
	Иначе
		
		// Установим окончание рабочего времени
		Если Объект.НачалоРабочегоВремени <> '00010101' И Объект.КонецРабочегоВремени = '00010101' Тогда
			Объект.КонецРабочегоВремени = '00010101235959';
			РассчитатьПродолжительностьИнтервала(Объект, ПараметрыДействия);
		КонецЕсли;
		
		// Рассчитываем продолжительность
		Если Объект.НачалоРабочегоВремени > Объект.КонецРабочегоВремени Тогда
			Объект.Продолжительность = '00010101' + (24*3600 - (Объект.НачалоРабочегоВремени - Объект.КонецРабочегоВремени));
		Иначе
			Объект.Продолжительность = '00010101' + (Объект.КонецРабочегоВремени - Объект.НачалоРабочегоВремени);
			Если Объект.КонецРабочегоВремени = '00010101235959' Тогда
				Объект.Продолжительность = Объект.Продолжительность + 1;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры //РассчитатьПродолжительностьИнтервалаСмешения()

// Обработчик события возникающего при изменении данных реквизита "Смена".
//
// Параметры:
//  Объект - ДанныеФормыСтруктура   - Объект, для которого выполняется обработка события.
//  Строка - Строка табличной части - Строка, при изменении поля которой возникло событие.
//  ПараметрыДействия - Структура            - Набор параметров, использующихся при выполнения операции.
//
Процедура СменаПриИзменении(Объект, ПараметрыДействия=Неопределено) Экспорт
	
	// Сформируем временные интервалы
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыИнтервалов.Ссылка
	               |ПОМЕСТИТЬ СписокРабочихИнтервалов
	               |ИЗ
	               |	Справочник.ВидыИнтервалов КАК ВидыИнтервалов
	               |ГДЕ
	               |	ВидыИнтервалов.РабочийИнтервал = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СменыИнтервалы.НачалоРабочегоВремени КАК НачалоРабочегоВремени,
	               |	СменыИнтервалы.КонецРабочегоВремени КАК КонецРабочегоВремени,
	               |	СменыИнтервалы.Продолжительность КАК Продолжительность
	               |ИЗ
	               |	Справочник.Смены.Интервалы КАК СменыИнтервалы,
	               |	СписокРабочихИнтервалов КАК СписокРабочихИнтервалов
	               |ГДЕ
	               |	СменыИнтервалы.Ссылка = &Ссылка
	               |	И СменыИнтервалы.ВидИнтервала В
	               |			(ВЫБРАТЬ
	               |				СписокРабочихИнтервалов.Ссылка
	               |			ИЗ
	               |				СписокРабочихИнтервалов КАК СписокРабочихИнтервалов)
	               |ИТОГИ
	               |	МИНИМУМ(НачалоРабочегоВремени),
	               |	МАКСИМУМ(КонецРабочегоВремени)
	               |ПО
	               |	ОБЩИЕ";
	Запрос.УстановитьПараметр("Ссылка", Объект.Смена);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если Выборка.Следующий() Тогда
		ВыборкаДетальная = Выборка.Выбрать();
		Продолжительность = '00010101';
		Пока ВыборкаДетальная.Следующий() Цикл
			Продолжительность = '00010101' + (Продолжительность-'00010101') + (ВыборкаДетальная.Продолжительность-'00010101');
		КонецЦикла;
		
		Объект.НачалоРабочегоВремени = Выборка.НачалоРабочегоВремени;
		Объект.КонецРабочегоВремени = Выборка.КонецРабочегоВремени;
		Объект.Продолжительность = Выборка.Продолжительность;
	КонецЕсли;
	
КонецПроцедуры //СменаПоУмолчаниюПриИзмененииОбъект()

#КонецОбласти

#КонецОбласти

#КонецЕсли