///////////////////////////////////////////////////////////////////////////////
// Модуль формы записи регистра "График работы календарный"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		НастроитьПараметрыВыбораЭлементовФормы();
		УправлениеДиалогомНаСервере();	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	НастроитьПараметрыВыбораЭлементовФормы();
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура СменаПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	РегистрыСведений.ГрафикРаботКалендарный.СменаПриИзменении(Запись,ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура СменаПриИзменении(Элемент)
	
	СменаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НачалоРабочегоВремениПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	РегистрыСведений.ГрафикРаботКалендарный.РассчитатьПродолжительностьИнтервала(Запись,ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура НачалоРабочегоВремениПриИзменении(Элемент)
	
	НачалоРабочегоВремениПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура НачалоРабочегоВремениНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений();
	ЗаполнитьСписокВыбораВремени(ДанныеВыбора);
	
КонецПроцедуры 

&НаСервере
Процедура КонецРабочегоВремениПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	РегистрыСведений.ГрафикРаботКалендарный.РассчитатьПродолжительностьИнтервала(Запись,ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура КонецРабочегоВремениПриИзменении(Элемент)
	
	КонецРабочегоВремениПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура КонецРабочегоВремениНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений();
	ЗаполнитьСписокВыбораВремени(ДанныеВыбора);
	
КонецПроцедуры 

&НаСервере
Процедура ПродолжительностьРабочегоВремениПриИзмененииНаСервере(ПараметрыДействия=Неопределено)
	
	РегистрыСведений.ГрафикРаботКалендарный.РассчитатьПродолжительностьИнтервала(Запись,ПараметрыДействия);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПродолжительностьПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("РасчетПродолжительности",Истина);
	ПродолжительностьРабочегоВремениПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПродолжительностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений();
	ЗаполнитьСписокВыбораВремени(ДанныеВыбора);
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСписокВыбораВремени(Список, ВремяНачало = Неопределено, ДобавлятьПредставлениеДлительности = Ложь)
	
	Список.Очистить();
	ПустаяДата = Дата("00010101");
	ДобавлятьДлительность = (ДобавлятьПредставлениеДлительности И ТипЗнч(ВремяНачало) = Тип("Дата"));
	
	Если ДобавлятьДлительность Тогда
		ЗначениеВремяНачало = ПустаяДата + (ВремяНачало - НачалоДня(ВремяНачало));
	Иначе
		ЗначениеВремяНачало = Неопределено
	КонецЕсли;
	
	ТекВремя = ?(ЗначениеВремяНачало = Неопределено, ПустаяДата, ЗначениеВремяНачало + 60 * 60);
	
	Пока НачалоДня(ТекВремя) <= НачалоДня(ПустаяДата) Цикл
		ПредставлениеВремени = Формат(ТекВремя, "ДФ=HH:mm; ДП=00:00");
		
		Если ДобавлятьДлительность Тогда
			ПредставлениеПериодаВремени = ПолучитьПредставлениеПериодаВремени(ЗначениеВремяНачало, ТекВремя);
			Если ЗначениеЗаполнено(ПредставлениеПериодаВремени) Тогда
				ПредставлениеВремени = ПредставлениеВремени + " (" + ПредставлениеПериодаВремени + ")";
			КонецЕсли;
		КонецЕсли;
		
		Список.Добавить(ТекВремя, ПредставлениеВремени);
		ТекВремя = ТекВремя + 60 * 60;
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Функция ПолучитьПредставлениеПериодаВремени(ВремяНачало, ВремяОкончание)
	
	ПустаяДата = Дата("00010101");
	// На случай если время содержит так же и дату
	ЗначениеВремяНачало		= ПустаяДата + (ВремяНачало - НачалоДня(ВремяНачало));
	ЗначениеВремяОкончание	= ПустаяДата + (ВремяОкончание - НачалоДня(ВремяОкончание));
	ВремяНачалоВМинутах		= Цел((ЗначениеВремяНачало - НачалоДня(ЗначениеВремяНачало)) / 60);
	ВремяОкончанияВМинутах	= Цел((ЗначениеВремяОкончание - НачалоДня(ЗначениеВремяОкончание)) / 60);
	РазницаВМинутах = ВремяОкончанияВМинутах - ВремяНачалоВМинутах;
	Если РазницаВМинутах <= 0 Тогда
		Возврат "";
	КонецЕсли;
	// 1 минута
	// 2 - 4 минуты
	// 5 и далее - минут
	// 1 час
	// 2 - 4 часа
	// 5 часов
	// 5,5 часов
	Если РазницаВМинутах < 60 Тогда
		ВремяСтрокой = Формат(РазницаВМинутах, "ЧДЦ=0; ЧН=0; ЧГ=");
		Если РазницаВМинутах = 1 Тогда
			ПредставлениеВремя = НСтр("ru = 'минута'");
		ИначеЕсли РазницаВМинутах <= 4 Тогда
			ПредставлениеВремя = НСтр("ru = 'минуты'");
		Иначе
			ПредставлениеВремя = НСтр("ru = 'минут'");
		КонецЕсли;
	Иначе
		РазницаВЧасах = РазницаВМинутах / 60;
		Если РазницаВЧасах = Цел(РазницаВМинутах / 60) Тогда
			ВремяСтрокой = Формат(РазницаВЧасах, "ЧДЦ=0; ЧРД=,; ЧН=0; ЧГ=");
		Иначе
			ВремяСтрокой = Формат(РазницаВЧасах, "ЧДЦ=1; ЧРД=,; ЧН=0; ЧГ=");
		КонецЕсли;
		Если РазницаВЧасах = 1 Тогда
			ПредставлениеВремя = НСтр("ru = 'час'");
		ИначеЕсли РазницаВЧасах <= 4 Тогда
			ПредставлениеВремя = НСтр("ru = 'часа'");
		Иначе
			ПредставлениеВремя = НСтр("ru = 'часов'");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВремяСтрокой + " " + ПредставлениеВремя;
	
КонецФункции 

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура НастроитьПараметрыВыбораЭлементовФормы()
	
	УправлениеДиалогомРегистраСервер.НастроитьПараметрыВыбораЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры 

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомРегистраСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	Элементы.НачалоРабочегоВремени.ТолькоПросмотр =  ЗначениеЗаполнено(Запись.Смена);
	Элементы.КонецРабочегоВремени.ТолькоПросмотр = ЗначениеЗаполнено(Запись.Смена);
	Элементы.Продолжительность.ТолькоПросмотр = ЗначениеЗаполнено(Запись.Смена);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

