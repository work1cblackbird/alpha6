///////////////////////////////////////////////////////////////////////////////
// Модуль формы "Блокировка изменений"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаказНаряд = ПолучитьЗначениеПараметраСтруктуры(Параметры, "ЗаказНаряд");
	
	Если НЕ ЗначениеЗаполнено(ЗаказНаряд.Ссылка) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не выбран заказ-наряд, для которого выполняется блокировка от изменений.'"),
			,
			,
			, 
			Отказ
		);
		Возврат;
	КонецЕсли;
	
	Если ЗаказНаряд.Состояние = Справочники.ВидыСостоянийЗаказНарядов.Закрыт Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = 'Документ ""%1"" имеет статус ""Закрыт"". Блокировка от изменений не выполнена.'"),ЗаказНаряд.Ссылка
			),
			,
			,
			,
			Отказ
		);
		Возврат;
	КонецЕсли;
	
	ДанныеБлокировки = РегистрыСведений.БлокировкаЗаказНарядов.ПроверкаБлокировкиИзменений(ЗаказНаряд);
	
	АвторизованныйПользователь = Пользователи.АвторизованныйПользователь();
	
	Если ДанныеБлокировки.Количество() > 0 Тогда
		Элементы.ТекстовоеОписание.ТолькоПросмотр = Истина;
		Элементы.ДатаСнятияБлокировки.ТолькоПросмотр = Истина;
		Элементы.ФормаПрименить.Заголовок = "Разблокировать";
		Пользователь         = ДанныеБлокировки[0].Пользователь;
		ДатаСнятияБлокировки = ДанныеБлокировки[0].ДатаСнятияБлокировки;
		ТекстовоеОписание    = ДанныеБлокировки[0].ТекстовоеОписание;
	Иначе
		Пользователь = АвторизованныйПользователь;
		Элементы.Пользователь.Видимость = Ложь;
	КонецЕсли;
	
	ЭтотОбъект.Заголовок = ЭтотОбъект.Заголовок + " №"+ ЗаказНаряд.Номер + " от " + ЗаказНаряд.Дата;

	СнятиеБлокировокЗаказНарядов = ПравоПользователя("СнятиеБлокировокЗаказНарядов");
	
	Если НЕ (АвторизованныйПользователь = Пользователь ИЛИ ПравоДоступа("Администрирование", Метаданные) ИЛИ СнятиеБлокировокЗаказНарядов) Тогда
		Элементы.ФормаПрименить.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ПрименитьНаСервере(РезультатОповещения)
	
	УстановитьПривилегированныйРежим(Истина);

	Если Элементы.ФормаПрименить.Заголовок = "Разблокировать" Тогда
		
		НаборЗаписей = РегистрыСведений.БлокировкаЗаказНарядов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ЗаказНаряд.Установить(ЗаказНаряд);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
		
	Иначе
		// Запишем в регистр
		НоваяЗапись = РегистрыСведений.БлокировкаЗаказНарядов.СоздатьМенеджерЗаписи();
		
		НоваяЗапись.ЗаказНаряд           = ЗаказНаряд;
		НоваяЗапись.ДатаБлокировки       = ТекущаяДата();
		НоваяЗапись.ДатаСнятияБлокировки = ДатаСнятияБлокировки;
		НоваяЗапись.Пользователь         = Пользователь;
		НоваяЗапись.ТекстовоеОписание    = ТекстовоеОписание;
		
		Попытка
			НоваяЗапись.Записать(Истина);
			РезультатОповещения = "БлокировкаОтИзменений";
		Исключение
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Установка блокировки от изменений прервана по причине: %1'"),ОписаниеОшибки()
				)
			);
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	Если ЗначениеЗаполнено(ДатаСнятияБлокировки) И ДатаСнятияБлокировки < ТекущаяДата() Тогда
		ДатаСнятияБлокировки = Дата(1,1,1);
		ПоказатьПредупреждение(,НСтр("ru = 'Плановая дата снятия блокировки должна быть больше текущей даты.'"));
		Возврат;
	КонецЕсли;
	
	РезультатОповещения = "";
	
	ПрименитьНаСервере(РезультатОповещения);
	
	Закрыть(РезультатОповещения);
	
КонецПроцедуры

#КонецОбласти

