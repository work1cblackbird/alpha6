// Модуль менеджера регистра сведений "Опции автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура УпорядочитьАктивностьОпций(Автомобиль, ИгнорируемыеДокументы = Неопределено)
	
	Если ИгнорируемыеДокументы = Неопределено Тогда
		ИгнорируемыеДокументы = Новый Массив;
	КонецЕсли;
	
	// получим последний документ
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОпцииАвтомобилей.ДокументДвижения
	|ИЗ
	|	РегистрСведений.ОпцииАвтомобилей КАК ОпцииАвтомобилей
	|ГДЕ
	|	ОпцииАвтомобилей.Автомобиль = &Автомобиль
	|	И ОпцииАвтомобилей.ДокументДвижения.Проведен = ИСТИНА
	|	И НЕ(ОпцииАвтомобилей.ДокументДвижения В (&ИгнорируемыеДокументы))
	|
	|СГРУППИРОВАТЬ ПО
	|	ОпцииАвтомобилей.ДокументДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОпцииАвтомобилей.ДокументДвижения.МоментВремени УБЫВ";
	Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
	Запрос.УстановитьПараметр("ИгнорируемыеДокументы", ИгнорируемыеДокументы);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать(); 
	Выборка.Следующий();
	ПоследнийДокумент = Выборка.ДокументДвижения;
	
	// создаем набор записей
	Набор = РегистрыСведений.ОпцииАвтомобилей.СоздатьНаборЗаписей();
	Набор.Отбор.Автомобиль.Установить(Автомобиль);
	Набор.Прочитать();
	
	Для Каждого ЗаписьНабора Из Набор Цикл
		ЗаписьНабора.ЗаписьАктивна = (ПоследнийДокумент = ЗаписьНабора.ДокументДвижения);
	КонецЦикла;
	
	Попытка
		Набор.Записать();
	Исключение 
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка записи набора'"),
       				УровеньЖурналаРегистрации.Ошибка,,,
       				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

Процедура УстановитьБлокировкуПоАвтомобилю(Автомобиль)
	
	// установим блокировку
	СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрСведений", "ОпцииАвтомобилей");
	
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("Автомобиль", Автомобиль);
	
	ОписаниеИсточника = Новый Соответствие;
	
	ОбработкаСобытийДокументаСервер.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, 
																ЗначенияБлокировки, ОписаниеИсточника);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ

Функция ОбновитьОпцииАвтомобиля(Опции, Автомобиль, Документ, ОтменаОпций = Ложь) Экспорт
	
	Отказ = Ложь;
	
	УстановитьБлокировкуПоАвтомобилю(Автомобиль);
	УстановитьПривилегированныйРежим(Истина);
	
	Набор = РегистрыСведений.ОпцииАвтомобилей.СоздатьНаборЗаписей(); 
	Набор.Отбор.ДокументДвижения.Установить(Документ);
	Набор.Отбор.Автомобиль.Установить(Автомобиль);
	Набор.Прочитать();
	Набор.Очистить();

	Для Каждого Опция Из Опции Цикл
		
		НоваяЗапись = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Опция);
		НоваяЗапись.ДокументДвижения = Документ;
		НоваяЗапись.Период           = Документ.Дата;
		НоваяЗапись.Автомобиль       = Автомобиль;
		НоваяЗапись.ЗаписьАктивна    = Не ОтменаОпций;
		
	КонецЦикла;
	
	НаборДвиженийОпций = РегистрыСведений.ДокументыДвиженияОпцииАвтомобилей.СоздатьНаборЗаписей(); 
	НаборДвиженийОпций.Отбор.ДокументДвижения.Установить(Документ);
	НаборДвиженийОпций.Отбор.Автомобиль.Установить(Автомобиль);
	НаборДвиженийОпций.Прочитать();
	НаборДвиженийОпций.Очистить();
	
	НоваяЗапись = НаборДвиженийОпций.Добавить();
	НоваяЗапись.ДокументДвижения = Документ;
	НоваяЗапись.Автомобиль       = Автомобиль;
	НоваяЗапись.ЗаписьАктивна    = Не ОтменаОпций;	 
		
	Попытка
		
		Набор.Записать(); 
		НаборДвиженийОпций.Записать();
		
		Если Не ОтменаОпций Тогда
			УпорядочитьАктивностьОпций(Автомобиль);
			РегистрыСведений
			.ДокументыДвиженияОпцииАвтомобилей
			.УпорядочитьАктивностьОпций(Автомобиль);
		КонецЕсли;
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = 'Не удалось обновить состав опций автомобиля <%1>.'"),
				Автомобиль
			)
		);
		Отказ = Истина;
		
	КонецПопытки;
	
	Возврат Отказ;
	
КонецФункции

Процедура ОтменитьПроведениеДокумента(Автомобиль, ИгнорируемыеДокументы = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	УстановитьБлокировкуПоАвтомобилю(Автомобиль);
	УпорядочитьАктивностьОпций(Автомобиль, ИгнорируемыеДокументы);
	
	РегистрыСведений
		.ДокументыДвиженияОпцииАвтомобилей
		.УпорядочитьАктивностьОпций(Автомобиль, ИгнорируемыеДокументы);
		
КонецПроцедуры

#Область ПараметрыОбработкиРеквизитовОбъекта

Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	ОбязательныеРеквизиты = ОбработкаСобытийРегистраСервер.ПолучитьСтандартныеОбязательныеРеквизиты(Объект);
	
	Возврат ОбязательныеРеквизиты;
	
КонецФункции 

Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	УникальныеРеквизиты = Новый Структура();
	
	Возврат УникальныеРеквизиты;
	
КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли