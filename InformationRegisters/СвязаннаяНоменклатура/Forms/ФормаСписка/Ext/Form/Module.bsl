///////////////////////////////////////////////////////////////////////////////
// Модуль формы списка регистра "Связанная номенклатура"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьЗаголовок = Ложь;
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Номенклатура") Тогда
		
		УстановитьЗаголовок = Истина;
		Владелец = Параметры.Отбор.Номенклатура;
		ДанныеВладельца = ВладелецНоменклатур(Владелец);
		
	КонецЕсли;
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	Если УстановитьЗаголовок Тогда
		ОбновитьЗаголовокФормы(ЭтотОбъект, ДанныеВладельца);
	КонецЕсли;

	Закрепить    = Параметры.Свойство("ЗакрепитьСПрава");
	СкрытьНоменклатуру = Параметры.Свойство("СкрыватьНоменклатуру");
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Закрепить Тогда
		УправлениеДиалогомКлиент.ЗакрепитьФорму();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ПараметрыДействия = Новый Структура;
	
	Если ИмяСобытия = "АктивизацияСтрокиНоменклатуры" И Источник = ВладелецФормы И СкрытьНоменклатуру Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
			"Номенклатура",
			Параметр,
			ВидСравненияКомпоновкиДанных.Равно,
			"Номенклатура",
			Истина);
		ДанныеВладельца = ВладелецНоменклатур(Параметр);
		ОбновитьЗаголовокФормы(ЭтотОбъект, ДанныеВладельца);
		
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийСвязаннаяНоменклатура");
		
	Иначе
		
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийСвязаннаяНоменклатура");
		
	КонецЕсли;
	// Конец ОценкаПроизводительности

КонецПроцедуры 

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)

	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраСведенийСвязаннаяНоменклатура");
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервереБезКонтекста
Функция ВладелецНоменклатур(Владелец)
	Если Владелец=Неопределено Или Владелец.ЭтоГруппа Тогда
		ВладелецДляОтбора = Неопределено;
	Иначе
		ВладелецДляОтбора = Владелец;
	КонецЕсли;
	
	Возврат Новый Структура("ВладелецДляОтбора", ВладелецДЛяОтбора);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовокФормы(Форма, ДанныеВладельца)
	
	//Если ДанныеВладельца=Неопределено ИЛИ ДанныеВладельца.ЭтоГруппа Тогда
	ПредставлениеВладельца = ?(ДанныеВладельца.ВладелецДляОтбора = Неопределено, "", СтрШаблон("(%1)",СокрЛП(ДанныеВладельца.ВладелецДляОтбора)));
	Если ПустаяСтрока(ПредставлениеВладельца) Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Для групп нет связанных номенклатур'");
		
	Иначе
		
		ШаблонЗаголовка = НСтр("ru = 'Связанные номенклатуры для %1'");
		ТекстЗаголовка  = СтрШаблон(ШаблонЗаголовка, ПредставлениеВладельца);
		
	КонецЕсли;
	
	Форма.АвтоЗаголовок = Ложь;
	Форма.Заголовок     = ТекстЗаголовка;
	Форма.Элементы.Список.ТолькоПросмотр = (НЕ ЗначениеЗаполнено(ДанныеВладельца.ВладелецДляОтбора));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

