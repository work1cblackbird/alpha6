#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Владелец") Тогда
		Элементы.ГруппаПользователи.Видимость = Ложь;
		ЭтаФорма.ПользовательВладелец = Параметры.Владелец;
		
		Если Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() > 0 Тогда
			  ТекОтбор = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы[0];
		Иначе ТекОтбор = Список.Отбор.Элементы[0];
		КонецЕсли;
		ТекОтбор.ПравоеЗначение = ЭтаФорма.ПользовательВладелец;
		ТекОтбор.Использование = Истина;
	КонецЕсли;

	ЭтаФорма.ТолькоПросмотр	= НЕ сфпСофтФонПроСервер.сфпРолиДоступны("ПолныеПрава, ДобавлениеИзменениеПользователей");

	ЭтаФорма.ИспользоватьГруппыПользователей = сфпСофтФонПроСервер.сфпИспользоватьГруппыПользователей();
	Если ЭтаФорма.ИспользоватьГруппыПользователей Тогда
		ЭтаФорма.Элементы.КонтролируемыйПользователь.Заголовок = НСтр("ru = 'Контролируемый пользователь / группа пользователей'");

	Иначе	
		ЭтаФорма.Элементы.КонтролируемыйПользователь.Заголовок = НСтр("ru = 'Контролируемый пользователь'");
		
		Если Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() > 0 Тогда
			  ТекОтбор = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы[1];
		Иначе ТекОтбор = Список.Отбор.Элементы[1];
		КонецЕсли;
		ТекОтбор.ПравоеЗначение = Ложь;
		ТекОтбор.Использование = Истина;
	КонецЕсли;

КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПользователиПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элементы.ГруппаПользователи.Видимость Тогда
		Возврат;
	КонецЕсли;

	ТекДанные = Элементы.Пользователи.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		  ПользовательВладелец = ТекДанные.Ссылка;
	Иначе ПользовательВладелец = "";
	КонецЕсли;
	
	Если Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() > 0 Тогда
		  ТекОтбор = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы[0];
	Иначе ТекОтбор = Список.Отбор.Элементы[0];
	КонецЕсли;
	ТекОтбор.ПравоеЗначение = ПользовательВладелец;
	ТекОтбор.Использование = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
// Процедура - обработчик события "Выбор" таблицы формы "Список"
//
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НЕ (Поле.Имя = "КонтролируемыйПользователь") Тогда Возврат; КонецЕсли;
	ТД = Элемент.ТекущиеДанные;
	Если ТД = Неопределено Тогда Возврат; КонецЕсли;
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ТД.КонтролируемыйПользователь);
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтрока",	Элемент.ТекущаяСтрока);
	ДополнительныеПараметры.Вставить("ТекущиеДанные",	ТД);
	ОписаниеВыбора = Новый ОписаниеОповещения("ОбработкаВыбораПользователя", ЭтаФорма, ДополнительныеПараметры);
	Если ТипЗнч(ТД.КонтролируемыйПользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		ОткрытьФорму("Справочник.ГруппыПользователей.ФормаВыбора", ПараметрыФормы, ЭтаФорма, , , , ОписаниеВыбора);
	Иначе
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, ЭтаФорма, , , , ОписаниеВыбора);
	КонецЕсли;	
КонецПроцедуры // СписокВыбор()

&НаКлиенте
// Процедура - обработчик события "ПередНачаломДобавления" таблицы формы "Список"
//
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	Если Копирование Тогда
		ТД = Элемент.ТекущиеДанные;
		Если ТД = Неопределено Тогда Возврат; КонецЕсли;
		ПараметрыФормы.Вставить("ТекущаяСтрока", ТД.КонтролируемыйПользователь);
		ДополнительныеПараметры = Новый Структура;
		Если ТипЗнч(ТД.КонтролируемыйПользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
			ДополнительныеПараметры.Вставить("ЭтоГруппа", Истина);
			ОписаниеВыбора = Новый ОписаниеОповещения("ОбработкаДобавленияПользователя", ЭтаФорма, ДополнительныеПараметры);
			ОткрытьФорму("Справочник.ГруппыПользователей.ФормаВыбора", ПараметрыФормы, ЭтаФорма, , , , ОписаниеВыбора);
		Иначе
			ДополнительныеПараметры.Вставить("ЭтоГруппа", Ложь);
			ОписаниеВыбора = Новый ОписаниеОповещения("ОбработкаДобавленияПользователя", ЭтаФорма, ДополнительныеПараметры);
			ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, ЭтаФорма, , , , ОписаниеВыбора);
		КонецЕсли;	
	Иначе
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ПараметрыФормы", ПараметрыФормы);
		ДополнительныеПараметры.Вставить("ИмяОповещения", "ОбработкаДобавленияПользователя");
		ОповещениеВыбораТипа = Новый ОписаниеОповещения("ОбработкаВыбораТипаПользователя", ЭтаФорма, ДополнительныеПараметры);
		СписокВыбораТипа = Новый СписокЗначений;
		СписокВыбораТипа.Добавить(Истина,	"Группа пользователей");
		СписокВыбораТипа.Добавить(Ложь,		"Пользователь");
		Если ЭтаФорма.ИспользоватьГруппыПользователей Тогда
			СписокВыбораТипа.ПоказатьВыборЭлемента(ОповещениеВыбораТипа, "Выберите тип");
		Иначе
			ОбработкаВыбораТипаПользователя(СписокВыбораТипа[1], ДополнительныеПараметры);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // СписокПередНачаломДобавления()

&НаКлиенте
// Процедура - обработчик события "ПередНачаломИзменения" таблицы формы "Список"
//
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ТД = Элемент.ТекущиеДанные;
	Если ТД = Неопределено Тогда Возврат; КонецЕсли;
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ТД.КонтролируемыйПользователь);
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтрока",	Элемент.ТекущаяСтрока);
	ДополнительныеПараметры.Вставить("ТекущиеДанные",	ТД);
	ОписаниеВыбора = Новый ОписаниеОповещения("ОбработкаВыбораПользователя", ЭтаФорма, ДополнительныеПараметры);
	Если ТипЗнч(ТД.КонтролируемыйПользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		ОткрытьФорму("Справочник.ГруппыПользователей.ФормаВыбора", ПараметрыФормы, ЭтаФорма, , , , ОписаниеВыбора);
	Иначе
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, ЭтаФорма, , , , ОписаниеВыбора);
	КонецЕсли;	
КонецПроцедуры // СписокПередНачаломИзменения()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Процедура - обработчик команды формы "ПодборКонтролируемыхПользователей"
//
Процедура ПодборКонтролируемыхПользователей(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",			Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",	Истина);
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрыФормы", ПараметрыФормы);
	ДополнительныеПараметры.Вставить("ИмяОповещения", "Подключаемый_ОбработкаПодбораПользователя");
	ОповещениеВыбораТипа = Новый ОписаниеОповещения("ОбработкаВыбораТипаПользователя", ЭтаФорма, ДополнительныеПараметры);
	СписокВыбораТипа = Новый СписокЗначений;
	СписокВыбораТипа.Добавить(Истина,	"Группа пользователей");
	СписокВыбораТипа.Добавить(Ложь,		"Пользователь");
	Если ЭтаФорма.ИспользоватьГруппыПользователей Тогда
		СписокВыбораТипа.ПоказатьВыборЭлемента(ОповещениеВыбораТипа, "Выберите тип");
	Иначе
		ОбработкаВыбораТипаПользователя(СписокВыбораТипа[1], ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры // ПодборКонтролируемыхПользователей()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
// Функция добавляет контролируемого пользователя
//
// Параметры:
//	Пользователь				- СправочникСсылка	- Пользователь
//	КонтролируемыйПользователь	- СправочникСсылка	- Контролируемый пользователь
//	ЭтоГруппа					- Булево			- Признак
//
// Возвращаемое значение:
//	Булево	- Результат добавления
//
Функция ДобавитьКонтролируемогоПользователя(Пользователь, КонтролируемыйПользователь, ЭтоГруппа)
	НоваяЗапись = РегистрыСведений.сфпДоступныеДляПрослушиванияПользователи.СоздатьМенеджерЗаписи();
	НоваяЗапись.Пользователь 				= Пользователь;
	НоваяЗапись.КонтролируемыйПользователь	= КонтролируемыйПользователь;
	НоваяЗапись.ЭтоГруппа					= ЭтоГруппа;
	Попытка
		НоваяЗапись.Записать(Истина);
		ЗаписьДобавлена = Истина;
	Исключение
		ЗаписьДобавлена = Ложь;
	КонецПопытки;
	Возврат ЗаписьДобавлена;
КонецФункции // ДобавитьКонтролируемогоПользователя()	

&НаСервереБезКонтекста
// Функция изменяет контролируемого пользователя
//
// Параметры:
//	ЗаписьРегистра				- РегистрСведенийЗапись	- Запись регистра сведений
//	КонтролируемыйПользователь	- СправочникСсылка		- Контролируемый пользователь
//
// Возвращаемое значение:
//	Булево	- Результат изменения
//
Функция ИзменитьКонтролируемогоПользователя(ЗаписьРегистра, КонтролируемыйПользователь)
	НоваяЗапись = РегистрыСведений.сфпДоступныеДляПрослушиванияПользователи.СоздатьМенеджерЗаписи();
	НоваяЗапись.Пользователь 				= ЗаписьРегистра.Пользователь;
	НоваяЗапись.КонтролируемыйПользователь	= КонтролируемыйПользователь;
	НоваяЗапись.Прочитать();
	Если НоваяЗапись.Выбран() Тогда Возврат Ложь; КонецЕсли;
	НоваяЗапись.Пользователь 				= ЗаписьРегистра.Пользователь;
	НоваяЗапись.КонтролируемыйПользователь	= ЗаписьРегистра.КонтролируемыйПользователь;
	НоваяЗапись.Прочитать();
	Если НЕ НоваяЗапись.Выбран() Тогда Возврат Ложь; КонецЕсли;
	НоваяЗапись.КонтролируемыйПользователь = КонтролируемыйПользователь;
	Попытка
		НоваяЗапись.Записать(Истина);
		ЗаписьИзменена = Истина;
	Исключение
		ЗаписьИзменена = Ложь;
	КонецПопытки;
	Возврат ЗаписьИзменена;
КонецФункции // ИзменитьКонтролируемогоПользователя()	

&НаСервере
// Процедура устанавливает текущую запись в списке
//
// Параметры:
//	Пользователь				- СправочникСсылка	- Пользователь
//	КонтролируемыйПользователь	- СправочникСсылка	- Контролируемый пользователь
//
Процедура УстановитьТекущуюЗапись(Пользователь, КонтролируемыйПользователь)
	Элементы.Список.Обновить();
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Пользователь", Пользователь);
	СтруктураОтбора.Вставить("КонтролируемыйПользователь",  КонтролируемыйПользователь);
	КлючЗаписи = РегистрыСведений.сфпДоступныеДляПрослушиванияПользователи.СоздатьКлючЗаписи(СтруктураОтбора);
	Элементы.Список.ТекущаяСтрока = КлючЗаписи;
КонецПроцедуры // УстановитьТекущуюЗапись()

&НаКлиенте
// Процедура - обработчик выбора пользователя
//
// Параметры:
//	ВыбранныйЭлемент		- СправочникСсылка	- Выбранный пользователь
//	ДополнительныеПараметры	- Структура			- Структура дополнительных параметров
//
Процедура ОбработкаВыбораПользователя(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда Возврат; КонецЕсли;
	ЗаписьИзменена = ИзменитьКонтролируемогоПользователя(ДополнительныеПараметры.ТекущаяСтрока, ВыбранныйЭлемент);
	Если ЗаписьИзменена Тогда
		ДополнительныеПараметры.ТекущиеДанные.КонтролируемыйПользователь = ВыбранныйЭлемент;
		// АльфаАвто
		// Скорее всего не отрабатывает для динамических списков
		//ЭтаФорма.ОбновитьОтображениеДанных();
		Элементы.Список.Обновить();
		// Конец АльфаАвто
	КонецЕсли;	
КонецПроцедуры // ОбработкаВыбораПользователя()	

&НаКлиенте
// Процедура - обработчик выбора типа пользователя
//
// Параметры:
//	ВыбранныйТип			- СправочникСсылка	- Выбранный пользователь
//	ДополнительныеПараметры	- Структура			- Структура дополнительных параметров
//
Процедура ОбработкаВыбораТипаПользователя(ВыбранныйТип, ДополнительныеПараметры) Экспорт
	Если ВыбранныйТип = Неопределено Тогда Возврат; КонецЕсли;
	Если ВыбранныйТип.Значение Тогда
		ДополнительныеПараметры.Вставить("ЭтоГруппа", Истина);
		ОписаниеВыбора = Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяОповещения, ЭтаФорма, ДополнительныеПараметры);
		ОткрытьФорму("Справочник.ГруппыПользователей.ФормаВыбора", ДополнительныеПараметры.ПараметрыФормы, ЭтаФорма, , , , ОписаниеВыбора);
	Иначе
		ДополнительныеПараметры.Вставить("ЭтоГруппа", Ложь);
		ОписаниеВыбора = Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяОповещения, ЭтаФорма, ДополнительныеПараметры);
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ДополнительныеПараметры.ПараметрыФормы, ЭтаФорма, , , , ОписаниеВыбора);
	КонецЕсли;	
КонецПроцедуры // ОбработкаТипаКонтролируемогоПользователя()	

&НаКлиенте
// Процедура - подключаемый обработчик подбора пользователя
//
// Параметры:
//	МассивПолучателей	- МассивПолучателей	- Массив пользователей
//	Параметры			- Структура			- Структура дополнительных параметров
//
Процедура Подключаемый_ОбработкаПодбораПользователя(МассивПолучателей, ДополнительныеПараметры) Экспорт
	Если МассивПолучателей = Неопределено Тогда Возврат; КонецЕсли;
	Если НЕ ТипЗнч(МассивПолучателей) = Тип("Массив") Тогда Возврат; КонецЕсли;
	ЗаписьДобавлена = Ложь;	
	ВыбранныйЭлемент = Неопределено;
	Для Каждого СтрокаМассива Из МассивПолучателей Цикл
		Если ДобавитьКонтролируемогоПользователя(ЭтаФорма.ПользовательВладелец, СтрокаМассива, ДополнительныеПараметры.ЭтоГруппа) Тогда
			ЗаписьДобавлена = Истина;	
			ВыбранныйЭлемент = СтрокаМассива;
		КонецЕсли;	
	КонецЦикла;
	Если ЗаписьДобавлена Тогда
		УстановитьТекущуюЗапись(ЭтаФорма.ПользовательВладелец, ВыбранныйЭлемент);
	КонецЕсли;	
КонецПроцедуры // Подключаемый_ОбработкаПодбораПользователя()	

&НаКлиенте
// Процедура - обработчик добавления пользователя
//
// Параметры:
//	ВыбранныйЭлемент		- СправочникСсылка	- Выбранный пользователь
//	ДополнительныеПараметры	- Структура			- Структура дополнительных параметров
//
Процедура ОбработкаДобавленияПользователя(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда Возврат; КонецЕсли;
	ЗаписьДобавлена = ДобавитьКонтролируемогоПользователя(ЭтаФорма.ПользовательВладелец, ВыбранныйЭлемент, ДополнительныеПараметры.ЭтоГруппа);
	Если ЗаписьДобавлена Тогда
		Элементы.Список.Обновить();
	КонецЕсли;	
КонецПроцедуры // ОбработкаДобавленияПользователя()	

#КонецОбласти

