#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	РаботаСФормой.НастроитьОсновнойДинамическийСписокФормы(ЭтотОбъект);
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// ОценкаПроизводительности
	Если Копирование Тогда
		ОценкаПроизводительностиКлиент.ЗамерВремени("КопированиеРегистраСведенийНастройкиРассылкиПрайсЛистов");
	Иначе
		ОценкаПроизводительностиКлиент.ЗамерВремени("СозданиеРегистраСведенийНастройкиРассылкиПрайсЛистов");
	КонецЕсли;
	// Конец ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("ОткрытиеЗаписиРегистраСведенийНастройкиРассылкиПрайсЛистов");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьПрайсЛист(Команда)
	
	Если НЕ Элементы.Список.ВыделенныеСтроки.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ОтправитьПрайсЛистНаСервере(Элементы.Список.ВыделенныеСтроки);
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	
	ГруппаОтборов = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтборов.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	НовыйОтбор = ГруппаОтборов.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.Использование = Истина;
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СледующаяРассылка");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	НовыйОтбор.ПравоеЗначение = Дата(1, 1, 1);
	
	НовыйОтбор = ГруппаОтборов.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.Использование = Истина;
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СледующаяРассылка");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	НовыйОтбор.ПравоеЗначение = КонецДня(ТекущаяДатаСеанса());
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона",
		ЦветаСтиля.ЦветФонаДокументаСНекорректнымиКонтрагентамиВСпискеДокументов);
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ОтправитьПрайсЛистНаСервере(Знач КОтправке)
	
	РассылкаПрайсЛистов.СформироватьИОтправить(КОтправке);
	
КонецПроцедуры

#КонецОбласти
