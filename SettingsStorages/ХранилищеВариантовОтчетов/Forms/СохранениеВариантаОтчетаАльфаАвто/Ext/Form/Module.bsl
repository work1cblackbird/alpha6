///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	ОпределитьПоведениеВМобильномКлиенте();
	
	// АльфаАвто
	ВариантыОтчетовАльфаАвто.ЗаполнитьСпискиВыбораПериода(ЭтотОбъект);
	// Конец АльфаАвто
	
	ПрототипКлюч = Параметры.КлючТекущихНастроек;
	ОтчетИнформация = ВариантыОтчетов.ИнформацияОбОтчете(Параметры.КлючОбъекта, Истина);
	
	Контекст = Новый Структура;
	Контекст.Вставить("ТекущийПользователь", Пользователи.АвторизованныйПользователь());
	Контекст.Вставить("ПолныеПраваНаВарианты", ВариантыОтчетов.ПолныеПраваНаВарианты());
	Контекст.Вставить("ОтчетСсылка", ОтчетИнформация.Отчет);
	Контекст.Вставить("ОтчетИмя", ОтчетИнформация.ОтчетИмя);
	Контекст.Вставить("ТипОтчета", ОтчетИнформация.ТипОтчета);
	Контекст.Вставить("ЭтоВнешний", ОтчетИнформация.ТипОтчета = Перечисления.ТипыОтчетов.Внешний);
	Контекст.Вставить("ПоискПоНаименованию", Новый Соответствие);
	
	ЗаполнитьСписокВариантов();
	
	РегистрыСведений.НастройкиВариантовОтчетов.ПрочитатьНастройкиДоступностиВариантаОтчета(
		ВариантСсылка, ПользователиВарианта, ИспользоватьГруппыПользователей, ИспользоватьВнешнихПользователей);
	
	Элементы.Доступен.ТолькоПросмотр = Не Контекст.ПолныеПраваНаВарианты;
	// АльфаАвто
	Элементы.ПараметрыДоступа.ТолькоПросмотр = Не Контекст.ПолныеПраваНаВарианты;
	// Конец АльфаАвто
	Если Контекст.ЭтоВнешний Тогда
		
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Ложь;
		Элементы.Доступен.Видимость = Ложь;
		Элементы.ДекорацияЧтоБудетДальшеНовый.Заголовок = НСтр("ru = 'Будет сохранен новый вариант отчета.'");
		Элементы.ДекорацияЧтоБудетДальшеПерезапись.Заголовок = НСтр("ru = 'Будет перезаписан существующий вариант отчета.'");
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	КонецЕсли;
	
	Элементы.Описание.КнопкаВыбора = Не Элементы.Описание.КнопкаОткрытия;
	
	ВариантыОтчетов.ОпределитьПоведениеСпискаПользователейВариантаОтчета(ЭтотОбъект);
	ВариантыОтчетов.ВывестиПризнакУведомленияПользователейВариантаОтчета(Элементы.УведомитьПользователей);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекущийЭлемент = Элементы.Наименование;
	ВариантыОтчетовКлиент.ОформитьПользователейВариантаОтчета(ЭтотОбъект, Ложь);
	
	// АльфаАвто
	// Изменим получение параметра
	ЭтоКонтекстныйВариантОтчета = ВладелецФормы <> Неопределено
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ВладелецФормы, "КонтекстВарианта")
		И ЗначениеЗаполнено(ВладелецФормы.КонтекстВарианта);
	// Конец АльфаАвто
	
	Если ЭтоКонтекстныйВариантОтчета Тогда 
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Ложь;
		
		ВариантыКонтекста = ВладелецФормы.ВариантыКонтекста;
		ПодключитьОбработчикОжидания("ЗаполнитьСписокВариантовОтложенно", 0.1, Истина);
	КонецЕсли;
	
	// АльфаАвто
	ВидПериодаПриИзменении(Неопределено);
	// Конец АльфаАвто
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Поле ""Наименование"" не заполнено'"),
			,
			"Наименование");
		Отказ = Истина;
	ИначеЕсли ВариантыОтчетов.НаименованиеЗанято(Контекст.ОтчетСсылка, ВариантСсылка, Объект.Наименование) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '""%1"" занято, необходимо указать другое Наименование.'"),
				Объект.Наименование),
			,
			"Наименование");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = ИмяФормы Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяСобытия = ВариантыОтчетовКлиент.ИмяСобытияИзменениеВарианта()
		Или ИмяСобытия = "Запись_НаборКонстант" Тогда
		ЗаполнитьСписокВариантов();
	КонецЕсли;
	
КонецПроцедуры

// АльфаАвто
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ВариантыОтчетовКлиент.ОбновитьОткрытыеФормы(Неопределено, ИмяФормы);
	
КонецПроцедуры
// Конец АльфаАвто

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеМодифицировано = Истина;
	// АльфаАвто
	Элементы.ВариантыОтчета.ТекущаяСтрока = Контекст.ПоискПоНаименованию.Получить(Объект.Наименование);
	// Конец АвльфаАвто
	
	УстановитьСценарийСохраненияВарианта();
	ВариантыОтчетовКлиент.ОформитьПользователейВариантаОтчета(ЭтотОбъект, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступенПриИзменении(Элемент)
	
	Объект.ТолькоДляАвтора = (Доступен = "ТолькоДляАвтора");
	
	ВариантыОтчетовКлиент.ПроверитьПользователейВариантаОтчета(ЭтотОбъект);
	ВариантыОтчетовКлиент.ОформитьПользователейВариантаОтчета(ЭтотОбъект, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ОписаниеНачалоВыбораЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(
		Оповещение, Элементы.Описание.ТекстРедактирования, НСтр("ru = 'Описание'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	
	ОписаниеМодифицировано = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("МультиязычностьКлиент");
		МодульМультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

// АльфаАвто
&НаКлиенте
Процедура ТипДоступаПриИзменении(Элемент)
	
	НастроитьОбъектДоступа(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПериодаПриИзменении(Элемент)
	
	Произвольный = (ВидПериода = "Произвольный");
	Элементы.НачалоПериода.Доступность =  Произвольный;
	Элементы.КонецПериода.Доступность =  Произвольный;
	
КонецПроцедуры

// КонецАльфаАвто

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПользователиВарианта

&НаКлиенте
Процедура ПользователиВариантаПриИзменении(Элемент)
	
	ВариантыОтчетовКлиент.ОформитьПользователейВариантаОтчета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиВариантаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиВариантаПередУдалением(Элемент, Отказ)
	
	Если Не ИспользоватьГруппыПользователей
		И Не ИспользоватьВнешнихПользователей Тогда 
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиВариантаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВариантыОтчетовКлиент.ПользователиВариантаОтчетаОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиВариантаПометкаПриИзменении(Элемент)
	
	ВариантыОтчетовКлиент.ОформитьПользователейВариантаОтчета(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВариантыОтчета

&НаКлиенте
Процедура ВариантыОтчетаПриАктивизацииСтроки(Элемент)
	НаименованиеМодифицировано = Ложь;
	ОписаниеМодифицировано = Ложь;
	ПодключитьОбработчикОжидания("Подключаемый_ВариантыОтчетаПриАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СохранитьИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтчетаПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ОткрытьВариантДляИзменения();
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтчетаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	Вариант = Элементы.ВариантыОтчета.ТекущиеДанные;
	Если Вариант = Неопределено Или Не ЗначениеЗаполнено(Вариант.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Контекст.ПолныеПраваНаВарианты И Не Вариант.АвторТекущийПользователь Тогда
		ТекстПредупреждения = НСтр("ru = 'Недостаточно прав для удаления варианта отчета ""%1"".'");
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, 
																						Вариант.Наименование);
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если Не Вариант.Пользовательский Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Невозможно удалить предопределенный вариант отчета.'"));
		Возврат;
	КонецЕсли;
	
	Если Вариант.ПометкаУдаления Тогда
		ТекстВопроса = НСтр("ru = 'Снять с ""%1"" пометку на удаление?'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Пометить ""%1"" на удаление?'");
	КонецЕсли;
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Вариант.Наименование);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Идентификатор", Вариант.ПолучитьИдентификатор());
	Обработчик = Новый ОписаниеОповещения("ВариантыОтчетаПередУдалениемЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да); 
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтчетаПередУдалениемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УдалитьВариантНаСервере(ДополнительныеПараметры.Идентификатор);
		ВариантыОтчетовКлиент.ОбновитьОткрытыеФормы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтчетаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоПодсистем

&НаКлиенте
Процедура ДеревоПодсистемИспользованиеПриИзменении(Элемент)
	
	ВариантыОтчетовКлиент.ДеревоПодсистемИспользованиеПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодсистемВажностьПриИзменении(Элемент)
	
	ВариантыОтчетовКлиент.ДеревоПодсистемВажностьПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьПользователей(Команда)
	
	ВариантыОтчетовКлиент.ПодобратьПользователейВариантаОтчета(ЭтотОбъект, ИспользоватьГруппыПользователей);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьГруппыВнешнихПользователей(Команда)
	
	ВариантыОтчетовКлиент.ПодобратьПользователейВариантаОтчета(
		ЭтотОбъект, Элементы.ПользователиВариантаГруппаПодобрать.Видимость, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ПерейтиНаСтраницу1();
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Пакет = Новый Структура;
	Пакет.Вставить("ПроверитьСтраницу1", Истина);
	Пакет.Вставить("ПерейтиНаСтраницу2", Истина);
	Пакет.Вставить("ЗаполнитьСтраницу2Сервер", Истина);
	Пакет.Вставить("ПроверитьИЗаписатьСервер", Ложь);
	Пакет.Вставить("ЗакрытьПослеЗаписи", Ложь);
	Пакет.Вставить("ТекущийШаг", Неопределено);
	
	ВыполнитьПакет(Неопределено, Пакет);
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	СохранитьИЗакрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура ВыполнитьПакет(Результат, Пакет) Экспорт
	
	Если Не Пакет.Свойство("ВариантЭтоНовый") Тогда
		Пакет.Вставить("ВариантЭтоНовый", Не ЗначениеЗаполнено(ВариантСсылка));
	КонецЕсли;
	
	Если Не ПродолжитьВыполнениеПакета(Результат, Пакет) Тогда 
		Возврат;
	КонецЕсли;
	
	// Выполнение следующего шага.
	Если Пакет.ПроверитьСтраницу1 = Истина Тогда
		// Наименование не введено.
		Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
			ТекстОшибки = НСтр("ru = 'Поле ""Наименование"" не заполнено'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Объект.Наименование");
			Возврат;
		КонецЕсли;
		
		// Введено наименование существующего варианта отчета.
		Если Не Пакет.ВариантЭтоНовый Тогда
			Найденные = ВариантыОтчета.НайтиСтроки(Новый Структура("Ссылка", ВариантСсылка));
			Вариант = Найденные[0];
			Если Не ПравоЗаписиВарианта(Вариант, Контекст.ПолныеПраваНаВарианты) Тогда
				ТекстОшибки = НСтр("ru = 'Недостаточно прав для изменения варианта ""%1"". Необходимо выбрать другой вариант или изменить Наименование.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Объект.Наименование);
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Объект.Наименование");
				Возврат;
			КонецЕсли;
			
			Если СпроситьОПерезаписиВариантаОтчета(Пакет, Вариант) Тогда 
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		// Проверка завершена.
		Пакет.ПроверитьСтраницу1 = Ложь;
	КонецЕсли;
	
	Если СпроситьОУведомленииПользователей(Пакет) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Пакет.ПерейтиНаСтраницу2 = Истина Тогда
		// Для внешних отчетов выполняются только проверки заполнения, без переключения страницы.
		Если Не Контекст.ЭтоВнешний Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.Дополнительно;
			Элементы.Назад.Доступность        = Истина;
			Элементы.Далее.Доступность        = Ложь;
		КонецЕсли;
		
		// Переключение выполнено.
		Пакет.ПерейтиНаСтраницу2 = Ложь;
	КонецЕсли;
	
	Если Пакет.ЗаполнитьСтраницу2Сервер = Истина
		Или Пакет.ПроверитьИЗаписатьСервер = Истина Тогда
		
		ВыполнитьПакетСервер(Пакет);
		
		СтрокиДерева = ДеревоПодсистем.ПолучитьЭлементы();
		Для Каждого СтрокаДерева Из СтрокиДерева Цикл
			Элементы.ДеревоПодсистем.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
		КонецЦикла;
		
		Если Пакет.Отказ = Истина Тогда
			ПерейтиНаСтраницу1();
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Пакет.ЗакрытьПослеЗаписи = Истина Тогда
		// АльфаАвто
		Если ВладелецФормы <> Неопределено
			И ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") Тогда
			
			ПараметрыВарианта = Новый Структура;
			ПараметрыВарианта.Вставить("ВариантЭтоНовый",     Пакет.ВариантЭтоНовый);
			ПараметрыВарианта.Вставить("ВариантНаименование", Объект.Наименование);
			ПараметрыВарианта.Вставить("ВариантКлючВарианта", ВариантКлючВарианта);
			
			Попытка
				ОписаниеОповещения = Новый ОписаниеОповещения(
											"Подключаемый_ОбработкаСохраненияВарианта",
											ВладелецФормы,
											ПараметрыВарианта);
				ВыполнитьОбработкуОповещения(ОписаниеОповещения, ПараметрыВарианта);
			Исключение
				ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(НСтр("ru = 'Ошибка в описании оповещения'"),
       				"Ошибка",
       				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),, Истина);	
			КонецПопытки;
			
		КонецЕсли;
		// Конец АльфаАвто
		ВариантыОтчетовКлиент.ОбновитьОткрытыеФормы(, ИмяФормы);
		Закрыть(Новый ВыборНастроек(ВариантКлючВарианта));
		Пакет.ЗакрытьПослеЗаписи = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПродолжитьВыполнениеПакета(Результат, Пакет)
	
	ТекущийШаг = Пакет.ТекущийШаг;
	
	Пакет.ТекущийШаг = Неопределено;
	
	Если ТекущийШаг = "ВопросНаПерезапись" Тогда
		
		Если Результат <> КодВозвратаДиалога.Да Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Пакет.Вставить("ВопросНаПерезаписьПройден", Истина);
		
	ИначеЕсли ТекущийШаг = "ВопросОУведомленииПользователей" Тогда
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			Пакет.Вставить("ВопросОУведомленииПользователейЗадан", Истина);
		Иначе
			УведомитьПользователей = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция СпроситьОПерезаписиВариантаОтчета(Пакет, Вариант)
	
	Если Пакет.Свойство("ВопросНаПерезаписьПройден") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Пакет.ТекущийШаг = "ВопросНаПерезапись";
	
	Если Вариант.ПометкаУдаления = Истина Тогда
		
		КнопкаПоУмолчанию = КодВозвратаДиалога.Нет;
		ШаблонТекстаВопроса = НСтр("ru = 'Вариант отчета ""%1"" помечен на удаление.
			|Заменить помеченный на удаление вариант отчета?'");
	Иначе
		КнопкаПоУмолчанию = КодВозвратаДиалога.Да;
		ШаблонТекстаВопроса = НСтр("ru = 'Заменить ранее сохраненный вариант отчета ""%1""?'");
	КонецЕсли;
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаВопроса, Объект.Наименование);
	
	Обработчик = Новый ОписаниеОповещения("ВыполнитьПакет", ЭтотОбъект, Пакет);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КнопкаПоУмолчанию);
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция СпроситьОУведомленииПользователей(Пакет)
	
	Если Не УведомитьПользователей
		Или Пакет.Свойство("ВопросОУведомленииПользователейЗадан") Тогда 
		
		Возврат Ложь;
	КонецЕсли;
	
	КоличествоПользователей = КоличествоПользователейВариантОтчета(ПользователиВарианта);
	
	Если КоличествоПользователей < 10 Тогда
		Возврат Ложь;
	КонецЕсли;

	Пакет.ТекущийШаг = "ВопросОУведомленииПользователей";
	
	Обработчик = Новый ОписаниеОповещения("ВыполнитьПакет", ЭтотОбъект, Пакет);
	ВариантыОтчетовСлужебныйКлиент.СпроситьОУведомленииПользователей(Обработчик, КоличествоПользователей);
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПерейтиНаСтраницу1()
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.Основное;
	Элементы.Назад.Доступность        = Ложь;
	Элементы.Далее.Заголовок          = "";
	Элементы.Далее.Доступность        = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВариантДляИзменения()
	Вариант = Элементы.ВариантыОтчета.ТекущиеДанные;
	Если Вариант = Неопределено Или Не ЗначениеЗаполнено(Вариант.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	Если Не ПравоНастройкиВарианта(Вариант, Контекст.ПолныеПраваНаВарианты) Тогда
		ТекстПредупреждения = НСтр("ru = 'Недостаточно прав доступа для изменения варианта ""%1"".'");
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, Вариант.Наименование);
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	ВариантыОтчетовКлиент.ПоказатьНастройкиОтчета(Вариант.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть()
	
	СтраницаДополнительноЗаполнена = (Элементы.Страницы.ТекущаяСтраница = Элементы.Дополнительно);
	
	Пакет = Новый Структура;
	Пакет.Вставить("ПроверитьСтраницу1",       Не СтраницаДополнительноЗаполнена);
	Пакет.Вставить("ПерейтиНаСтраницу2",       Не СтраницаДополнительноЗаполнена);
	Пакет.Вставить("ЗаполнитьСтраницу2Сервер", Не СтраницаДополнительноЗаполнена);
	Пакет.Вставить("ПроверитьИЗаписатьСервер", Истина);
	Пакет.Вставить("ЗакрытьПослеЗаписи",       Истина);
	Пакет.Вставить("ТекущийШаг", Неопределено);
	
	ВыполнитьПакет(Неопределено, Пакет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеНачалоВыбораЗавершение(Знач ВведенныйТекст, Знач ДополнительныеПараметры) Экспорт
	
	Если ВведенныйТекст = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Объект.Описание = ВведенныйТекст;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Клиент и сервер

// Возвращает признак наличия права изменения варианта отчета.
//
// Параметры:
//   Вариант - ДанныеФормыКоллекция:
//     * Ссылка - СправочникСсылка.ВариантыОтчетов
//   ПолныеПраваНаВарианты - Булево
//
// Возвращаемое значение:
//   Булево
//
&НаКлиентеНаСервереБезКонтекста
Функция ПравоНастройкиВарианта(Вариант, ПолныеПраваНаВарианты)
	
	Возврат (ПолныеПраваНаВарианты Или Вариант.АвторТекущийПользователь) И ЗначениеЗаполнено(Вариант.Ссылка);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПравоЗаписиВарианта(Вариант, ПолныеПраваНаВарианты)
	
	Возврат Вариант.Пользовательский И ПравоНастройкиВарианта(Вариант, ПолныеПраваНаВарианты);
	
КонецФункции

// Возвращает уникальное наименование варианта отчета.
// 
// Параметры:
//   Вариант - ДанныеФормыКоллекция:
//     * Ссылка - СправочникСсылка.ВариантыОтчетов
//     * Наименование - Строка
//   ВариантыОтчета - ДанныеФормыКоллекция
//
// Возвращаемое значение:
//   Строка
//
&НаКлиентеНаСервереБезКонтекста
Функция СформироватьСвободноеНаименование(Вариант, ВариантыОтчета)
	
	ШаблонИмениВарианта = СокрЛП(Вариант.Наименование) + " - " + НСтр("ru = 'копия'");
	
	СвободноеНаименование = ШаблонИмениВарианта;
	Найденные = ВариантыОтчета.НайтиСтроки(Новый Структура("Наименование", СвободноеНаименование));
	Если Найденные.Количество() = 0 Тогда
		Возврат СвободноеНаименование;
	КонецЕсли;
	
	НомерВарианта = 1;
	Пока Истина Цикл
		НомерВарианта = НомерВарианта + 1;
		СвободноеНаименование = ШаблонИмениВарианта + " (" + Формат(НомерВарианта, "") + ")";
		Найденные = ВариантыОтчета.НайтиСтроки(Новый Структура("Наименование", СвободноеНаименование));
		Если Найденные.Количество() = 0 Тогда
			Возврат СвободноеНаименование;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ШаблонИмениВарианта;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСписокВариантовОтложенно()
	
	Если ВариантыКонтекста.Количество() > 0 Тогда 
		ЗаполнитьСписокВариантов();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервереБезКонтекста
Функция КоличествоПользователейВариантОтчета(ПользователиВарианта)
	
	Возврат РегистрыСведений.НастройкиВариантовОтчетов.КоличествоПользователейВариантОтчета(ПользователиВарианта);
	
КонецФункции

&НаСервере
Процедура ВыполнитьПакетСервер(Пакет)
	
	Пакет.Вставить("Отказ", Ложь);
	
	Если Пакет.ЗаполнитьСтраницу2Сервер = Истина Тогда
		Если Не Контекст.ЭтоВнешний Тогда
			ПерезаполнитьСтраницуДополнительно(Пакет);
		КонецЕсли;
		Пакет.ЗаполнитьСтраницу2Сервер = Ложь;
	КонецЕсли;
	
	Если Пакет.ПроверитьИЗаписатьСервер = Истина Тогда
		ПроверитьИЗаписатьВариантОтчета(Пакет);
		Пакет.ПроверитьИЗаписатьСервер = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьСтраницуДополнительно(Пакет)
	Если Пакет.ВариантЭтоНовый Тогда
		ВариантОснование = ПрототипСсылка;
	Иначе
		ВариантОснование = ВариантСсылка;
	КонецЕсли;
	
	ДеревоПриемник = ВариантыОтчетов.ДеревоПодсистемСформировать(ЭтотОбъект, ВариантОснование);
	ЗначениеВРеквизитФормы(ДеревоПриемник, "ДеревоПодсистем");
КонецПроцедуры

&НаСервере
Процедура ПроверитьИЗаписатьВариантОтчета(Пакет)
	
	ЭтоНовыйВариантОтчета = Не ЗначениеЗаполнено(ВариантСсылка);
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		Если Не ЭтоНовыйВариантОтчета Тогда
			
			ЭлементБлокировки = Блокировка.Добавить(Метаданные.Справочники.ВариантыОтчетов.ПолноеИмя());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВариантСсылка);
			
		КонецЕсли;
		
		Блокировка.Заблокировать();
		
		Если ЭтоНовыйВариантОтчета И ВариантыОтчетов.НаименованиеЗанято(Контекст.ОтчетСсылка, ВариантСсылка, Объект.Наименование) Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '""%1"" занято, необходимо указать другое наименование.'"), Объект.Наименование);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, , "Объект.Наименование");
			Пакет.Отказ = Истина;
			ОтменитьТранзакцию();
			
			Возврат;
			
		КонецЕсли;
		
		Если ЭтоНовыйВариантОтчета Тогда
			
			ВариантОбъект = Справочники.ВариантыОтчетов.СоздатьЭлемент();
			ВариантОбъект.Отчет = Контекст.ОтчетСсылка;
			ВариантОбъект.ТипОтчета = Контекст.ТипОтчета;
			ВариантОбъект.КлючВарианта = Строка(Новый УникальныйИдентификатор());
			ВариантОбъект.Пользовательский = Истина;
			ВариантОбъект.Автор = Контекст.ТекущийПользователь;
			
			Если ПрототипПредопределенный Тогда
				ВариантОбъект.Родитель = ПрототипСсылка;
			ИначеЕсли ТипЗнч(ПрототипСсылка) = Тип("СправочникСсылка.ВариантыОтчетов") И Не ПрототипСсылка.Пустая() Тогда
				ВариантОбъект.Родитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПрототипСсылка, "Родитель");
			Иначе
				ВариантОбъект.ЗаполнитьРодителя();
			КонецЕсли;
			
		Иначе
			
			ВариантОбъект = ВариантСсылка.ПолучитьОбъект();
			
		КонецЕсли;
		
		Если Контекст.ЭтоВнешний Тогда
			
			ВариантОбъект.Размещение.Очистить();
			
		Иначе
			
			ДеревоПриемник = РеквизитФормыВЗначение("ДеревоПодсистем", Тип("ДеревоЗначений"));
			
			Если ЭтоНовыйВариантОтчета Тогда
				ИзмененныеРазделы = ДеревоПриемник.Строки.НайтиСтроки(Новый Структура("Использование", 1), Истина);
			Иначе
				ИзмененныеРазделы = ДеревоПриемник.Строки.НайтиСтроки(Новый Структура("Модифицированность", Истина), Истина);
			КонецЕсли;
			
			ВариантыОтчетов.ДеревоПодсистемЗаписать(ВариантОбъект, ИзмененныеРазделы);
			
		КонецЕсли;
		
		ВариантОбъект.Наименование = Объект.Наименование;
		ВариантОбъект.Описание = Объект.Описание;
		ВариантОбъект.ТолькоДляАвтора = Объект.ТолькоДляАвтора;
		
		// АльфаАвто
		// Заменим название периода
		Если ВидПериода = "Произвольный" Тогда
			ВариантОбъект.НачалоПериода = НачалоПериода;
			ВариантОбъект.КонецПериода = КонецПериода;
		КонецЕсли;
		ВариантОбъект.ВидПериода           = ВидПериода;
		ВариантОбъект.ТипДоступа           = ТипДоступа;
		ВариантОбъект.ОбъектДоступа        = ОбъектДоступа;
		// Конец АльфаАвто
		
		ВариантОбъект.Представления.Загрузить(Объект.Представления.Выгрузить());
		
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
			МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
			МодульМультиязычностьСервер.ПередЗаписьюНаСервере(ВариантОбъект);
		КонецЕсли;
		
		ВариантОбъект.ДополнительныеСвойства.Вставить("ПользователиВарианта", ПользователиВарианта);
		ВариантОбъект.ДополнительныеСвойства.Вставить("УведомитьПользователей", УведомитьПользователей);
		
		ВариантОбъект.Записать();
		
		ВариантСсылка       = ВариантОбъект.Ссылка;
		ВариантКлючВарианта = ВариантОбъект.КлючВарианта;
		
		Если СброситьНастройки Тогда
			ВариантыОтчетов.СброситьПользовательскиеНастройки(ВариантОбъект.Ссылка);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Процедура ОпределитьПоведениеВМобильномКлиенте()
	
	ЭтоМобильныйКлиент = ОбщегоНазначения.ЭтоМобильныйКлиент();
	Если Не ЭтоМобильныйКлиент Тогда 
		Возврат;
	КонецЕсли;
	
	ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Авто;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ВариантыОтчетов.УстановитьУсловноеОформлениеСпискаПользователейВариантаОтчета(ЭтотОбъект);
	ВариантыОтчетов.УстановитьУсловноеОформлениеДереваПодсистем(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВариантов()
	
	ОтборОтчеты = Новый Массив;
	ОтборОтчеты.Добавить(Контекст.ОтчетСсылка);
	ПараметрыПоиска = Новый Структура("Отчеты, ТолькоЛичные", ОтборОтчеты, Истина);
	// АльфаАвто
	ПараметрыПоиска.Вставить("ПоТипуДоступа", Истина);
	ПараметрыПоиска.Вставить("ПрототипКлюч", ПрототипКлюч);
	// Конец АльфаАвто
	ТаблицаВариантов = ВариантыОтчетов.ТаблицаВариантовОтчетов(ПараметрыПоиска);
	
	ОтчетыСервер.ДобавитьВариантыКонтекста(Контекст.ОтчетСсылка, ТаблицаВариантов, ВариантыКонтекста);
	
	// Заполнить автовычисляемые колонки.
	ВариантыОтчета.Загрузить(ТаблицаВариантов);
	Для Каждого Вариант Из ВариантыОтчета Цикл
		Вариант.АвторТекущийПользователь = (Вариант.Автор = Контекст.ТекущийПользователь);
		// АльфаАвто
		Если Вариант.ПометкаУдаления Тогда
			Вариант.ИндексКартинки = 4;
		ИначеЕсли Вариант.Пользовательский Тогда
			Вариант.ИндексКартинки = 3;
		Иначе
			Вариант.ИндексКартинки = 5;
		КонецЕсли;
		// Конец АльфаАвто
		Если Вариант.КлючВарианта = ПрототипКлюч Тогда
			ПрототипСсылка = Вариант.Ссылка;
			ПрототипПредопределенный = Не Вариант.Пользовательский;
		КонецЕсли;
	КонецЦикла;
	
	Если Контекст.ЭтоВнешний
		И Не ХранилищаНастроек.ХранилищеВариантовОтчетов.ДобавитьВариантыВнешнегоОтчета(
			ВариантыОтчета, Контекст.ОтчетСсылка, Контекст.ОтчетИмя) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСценарийСохраненияВарианта();
	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСценарийСохраненияВарианта()
	
	БудетЗаписанНовый = Ложь;
	БудетПерезаписанСуществующий = Ложь;
	ПерезаписьНевозможна = Ложь;
	
	// АльфаАвто
	// Изменено получение текущего варианта настроек
	Идентификатор = Элементы.ВариантыОтчета.ТекущаяСтрока;
	// Платформа не принимает в методе НайтиПоИдентификатору значение Неопределено.
	Если Идентификатор = Неопределено Тогда
		Вариант = Неопределено;
	Иначе
		Вариант = ВариантыОтчета.НайтиПоИдентификатору(Идентификатор);
	КонецЕсли;
	// Конец АльфаАвто
	
	Если Вариант = Неопределено Тогда
		
		БудетЗаписанНовый = Истина;
		ВариантСсылка = Неопределено;
		
		Если Не ОписаниеМодифицировано Тогда
			Объект.Описание = "";
		КонецЕсли;
		
		// АльфаАвто
		Если Не Контекст.ПолныеПраваНаВарианты Тогда
			ВидПериода    = "Месяц";
			ТипДоступа    = ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.ПоПользователю");
			ОбъектДоступа = Контекст.ТекущийПользователь;
		КонецЕсли;
		// Конец АльфаАвто
		
	Иначе
		
		ПравоЗаписиВарианта = ПравоЗаписиВарианта(Вариант, Контекст.ПолныеПраваНаВарианты);
		
		ЗаполнитьПредставления(Вариант.Ссылка);
		
		Если ПравоЗаписиВарианта Тогда
			
			БудетПерезаписанСуществующий = Истина;
			НаименованиеМодифицировано = Ложь;
			Объект.Наименование = Вариант.Наименование;
			
			ВариантСсылка = Вариант.Ссылка;
			Если Контекст.ПолныеПраваНаВарианты Тогда
				Объект.ТолькоДляАвтора = Вариант.ТолькоДляАвтора;
			Иначе
				Объект.ТолькоДляАвтора = Истина;
			КонецЕсли;
			
			Если Не ОписаниеМодифицировано Тогда
				Объект.Описание = Вариант.Описание;
			КонецЕсли;
			
			// АльфаАвто
			ВидПериода = Вариант.ВидПериода;
			Если ВидПериода = "Произвольный" Тогда
				НачалоПериода = Вариант.НачалоПериода;
				КонецПериода  = Вариант.КонецПериода;
			КонецЕсли;
			ТипДоступа    = Вариант.ТипДоступа;
			ОбъектДоступа = Вариант.ОбъектДоступа;
			// Конец АльфаАвто
			
		Иначе
			
			Если НаименованиеМодифицировано Тогда
				ПерезаписьНевозможна = Истина;
			Иначе
				БудетЗаписанНовый = Истина;
				Объект.Наименование = СформироватьСвободноеНаименование(Вариант, ВариантыОтчета);
			КонецЕсли;
			
			ВариантСсылка = Неопределено;
			Объект.ТолькоДляАвтора = Истина;
			
			Если Не ОписаниеМодифицировано Тогда
				Объект.Описание = "";
			КонецЕсли;
			
			// АльфаАвто
			ВидПериода    = "Месяц";
			ТипДоступа    = ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.ПоПользователю");
			ОбъектДоступа = Контекст.ТекущийПользователь;
			// Конец АльфаАвто
			
		КонецЕсли;
		
	КонецЕсли;
	
	// АльфаАвто
	НастроитьОбъектДоступа(ЭтотОбъект);
	Произвольный = (ВидПериода = "Произвольный");
	Элементы.НачалоПериода.Доступность =  Произвольный;
	Элементы.КонецПериода.Доступность =  Произвольный;
	// Конец АльфаАвто
	
	Если НаименованиеМодифицировано Тогда
		Поиск = Новый Структура("КодЯзыка", ТекущийЯзык().КодЯзыка);
		НайденныеПредставления = Объект.Представления.НайтиСтроки(Поиск);
		
		Если НайденныеПредставления.Количество() > 0 Тогда 
			НайденныеПредставления[0].Наименование = Объект.Наименование;
		КонецЕсли;
	КонецЕсли;
	
	Доступен = ?(Объект.ТолькоДляАвтора, "ТолькоДляАвтора", "УказаннымПользователям");
	
	Если БудетЗаписанНовый Тогда
		
		Элементы.ЧтоБудетДальше.ТекущаяСтраница = Элементы.Новый;
		// АльфаАвто
		//Элементы.СброситьНастройки.Видимость = Ложь;
		// Конец АльфаАвто
		Элементы.Далее.Доступность     = Истина;
		Элементы.Сохранить.Доступность = Истина;
		
	ИначеЕсли БудетПерезаписанСуществующий Тогда
		
		Элементы.ЧтоБудетДальше.ТекущаяСтраница = Элементы.Перезапись;
		// АльфаАвто
		//Элементы.СброситьНастройки.Видимость = Истина;
		// Конец АльфаАвто
		Элементы.Далее.Доступность     = Истина;
		Элементы.Сохранить.Доступность = Истина;
		
	ИначеЕсли ПерезаписьНевозможна Тогда
		
		Элементы.ЧтоБудетДальше.ТекущаяСтраница = Элементы.ПерезаписьНевозможна;
		// АльфаАвто
		//Элементы.СброситьНастройки.Видимость = Ложь;
		// Конец АльфаАвто
		Элементы.Далее.Доступность     = Ложь;
		Элементы.Сохранить.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредставления(Вариант)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&КодОсновногоЯзыка КАК КодЯзыка,
	|	ВЫБОР
	|		КОГДА НЕ ИзКонфигурации.Наименование ЕСТЬ NULL
	|			ТОГДА ИзКонфигурации.Наименование
	|		КОГДА НЕ ИзРасширений.Наименование ЕСТЬ NULL
	|			ТОГДА ИзРасширений.Наименование
	|		ИНАЧЕ Пользовательские.Наименование
	|	КОНЕЦ КАК Наименование,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(Пользовательские.Описание, 1, 1) <> """"
	|			ТОГДА Пользовательские.Описание
	|		КОГДА НЕ ИзКонфигурации.Описание ЕСТЬ NULL
	|			ТОГДА ИзКонфигурации.Описание
	|		КОГДА НЕ ИзРасширений.Описание ЕСТЬ NULL
	|			ТОГДА ИзРасширений.Описание
	|		ИНАЧЕ ВЫРАЗИТЬ("""" КАК СТРОКА(1000))
	|	КОНЕЦ КАК Описание
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК Пользовательские
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПредопределенныеВариантыОтчетов КАК ИзКонфигурации
	|		ПО ИзКонфигурации.Ссылка = Пользовательские.ПредопределенныйВариант
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПредопределенныеВариантыОтчетовРасширений КАК ИзРасширений
	|		ПО ИзРасширений.Ссылка = Пользовательские.ПредопределенныйВариант
	|ГДЕ
	|	Пользовательские.Ссылка = &Вариант
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НЕ ПредставленияИзКонфигурации.КодЯзыка ЕСТЬ NULL
	|			ТОГДА ПредставленияИзКонфигурации.КодЯзыка
	|		КОГДА НЕ ПредставленияИзРасширений.КодЯзыка ЕСТЬ NULL
	|			ТОГДА ПредставленияИзРасширений.КодЯзыка
	|		КОГДА НЕ ПредставленияПользовательских.КодЯзыка ЕСТЬ NULL
	|			ТОГДА ПредставленияПользовательских.КодЯзыка
	|		ИНАЧЕ ВЫРАЗИТЬ("""" КАК СТРОКА(10))
	|	КОНЕЦ КАК КодЯзыка,
	|	ВЫБОР
	|		КОГДА НЕ ПредставленияИзКонфигурации.Наименование ЕСТЬ NULL
	|			ТОГДА ПредставленияИзКонфигурации.Наименование
	|		КОГДА НЕ ПредставленияИзРасширений.Наименование ЕСТЬ NULL
	|			ТОГДА ПредставленияИзРасширений.Наименование
	|		КОГДА НЕ ПредставленияПользовательских.Наименование ЕСТЬ NULL
	|			ТОГДА ПредставленияПользовательских.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ("""" КАК СТРОКА(150))
	|	КОНЕЦ КАК Наименование,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ЕСТЬNULL(ПредставленияПользовательских.Описание, """"), 1, 1) <> """"
	|			ТОГДА ПредставленияПользовательских.Описание
	|		КОГДА НЕ ПредставленияИзКонфигурации.Описание ЕСТЬ NULL
	|			ТОГДА ПредставленияИзКонфигурации.Описание
	|		КОГДА НЕ ПредставленияИзРасширений.Описание ЕСТЬ NULL
	|			ТОГДА ПредставленияИзРасширений.Описание
	|		ИНАЧЕ ВЫРАЗИТЬ("""" КАК СТРОКА(1000))
	|	КОНЕЦ КАК Описание
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК Пользовательские
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов.Представления КАК ПредставленияПользовательских
	|		ПО ПредставленияПользовательских.Ссылка = Пользовательские.Ссылка
	|		И ПредставленияПользовательских.КодЯзыка <> &КодОсновногоЯзыка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПредопределенныеВариантыОтчетов.Представления КАК ПредставленияИзКонфигурации
	|		ПО ПредставленияИзКонфигурации.Ссылка = Пользовательские.ПредопределенныйВариант
	|		И ПредставленияИзКонфигурации.КодЯзыка <> &КодОсновногоЯзыка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПредопределенныеВариантыОтчетовРасширений.Представления КАК ПредставленияИзРасширений
	|		ПО ПредставленияИзРасширений.Ссылка = Пользовательские.ПредопределенныйВариант
	|		И ПредставленияИзРасширений.КодЯзыка <> &КодОсновногоЯзыка
	|ГДЕ
	|	Пользовательские.Ссылка = &Вариант");
	
	Запрос.УстановитьПараметр("Вариант", Вариант);
	Запрос.УстановитьПараметр("КодОсновногоЯзыка", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Объект.Представления.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		Если ЗначениеЗаполнено(Выборка.КодЯзыка) Тогда 
			ЗаполнитьЗначенияСвойств(Объект.Представления.Добавить(), Выборка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// АльфаАвто
&НаКлиенте
Процедура Подключаемый_ВариантыОтчетаПриАктивизацииСтроки()
	
	УстановитьСценарийСохраненияВарианта();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОбъектДоступа(Форма)
	
	Если НЕ Форма.Элементы.ТипДоступа.ТолькоПросмотр Тогда
		Форма.Элементы.ОбъектДоступа.Доступность = (НЕ Форма.ТипДоступа=ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.БезОграничения"));
	КонецЕсли;
	
	Если Форма.ТипДоступа=ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.ПоПользователю") Тогда
		Форма.Элементы.ОбъектДоступа.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Пользователи");
	ИначеЕсли Форма.ТипДоступа=ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.ПоГруппеПользователей") Тогда
		Форма.Элементы.ОбъектДоступа.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ГруппыПользователей");
	ИначеЕсли Форма.ТипДоступа=ПредопределенноеЗначение("Перечисление.ТипыДоступаКВариантуОтчета.ПоПодразделениюКомпании") Тогда
		Форма.Элементы.ОбъектДоступа.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияКомпании");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьВариантНаСервере(Идентификатор)
	Если Идентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Вариант = ВариантыОтчета.НайтиПоИдентификатору(Идентификатор);
	Если Вариант = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПометкаУдаления = Не Вариант.ПометкаУдаления;
	ВариантОбъект = Вариант.Ссылка.ПолучитьОбъект();
	ВариантОбъект.УстановитьПометкуУдаления(ПометкаУдаления);
	Вариант.ПометкаУдаления = ПометкаУдаления; 
	ВариантОбъект3_5 = ?(ВариантОбъект.Пользовательский, 3, 5);
	Вариант.ИндексКартинки  = ?(ПометкаУдаления, 4, ВариантОбъект3_5);
КонецПроцедуры

// Конец АльфаАвто

#КонецОбласти
