// Модуль менеджера плана видов характеристик "Параметры планирования"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника Организации.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением.
//                                  Например:
//                                    Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                    ЭлементТЧ = Элемент.Ключи.Добавить();
//                                    ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ШиринаАссортимента";
	Элемент.Код = "00001";
	Элемент.Наименование = НСтр("ru = 'Ширина ассортимента'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ОписаниеПараметра = НСтр("ru = 'Ширина ассортимента (количество позиций)'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(10, 2);
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КоэффициентРоста";
	Элемент.Код = "00002";
	Элемент.Наименование = НСтр("ru = 'Коэффициент роста'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ОписаниеПараметра = НСтр("ru = 'Коэффициент роста в разрезе товарных категорий'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(10, 2);
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ГраницаАктуальностиЦенПоставщиков";
	Элемент.Код = "00003";
	Элемент.Наименование = НСтр("ru = 'Граница актуальности цен поставщиков'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ОписаниеПараметра = НСтр("ru = 'Граница актуальности цен поставщиков'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ТипЗначения = ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата);	

КонецПроцедуры

#КонецОбласти

#Область ПараметрыОбработкиРеквизитовОбъекта

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет обязательности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Массив - Возвращаемый массив содержит строковые идентификаторы реквизитов.
//
Функция ПолучитьОбязательныеРеквизиты(Объект) Экспорт
	
	// Обязательные реквизиты объекта
	ОбязательныеРеквизиты = Новый Массив();
	ОбязательныеРеквизиты.Добавить("Наименование");
	
	// Возвращаем сформированные параметры проверки
	Возврат ОбязательныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

// Производит формирование параметров проверки заполнения реквизитов объекта на предмет уникальности.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Объект, для которого выполняется получение параметров проверки.
//
// Возвращаемое значение:
//  Структура - Возвращаемая структура содержит строковые идентификаторы реквизитов.
//  Для описания проверки табличных частей используется
//  вложенная структура.
//
Функция ПолучитьУникальныеРеквизиты(Объект) Экспорт
	
	// Структура уникальных реквизитов
	УникальныеРеквизиты = Новый Структура();
	УникальныеРеквизиты.Вставить("Наименование");
	
	// Возвращаем сформированные параметры проверки
	Возврат УникальныеРеквизиты;
	
КонецФункции // ПолучитьОбязательныеРеквизиты()

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли