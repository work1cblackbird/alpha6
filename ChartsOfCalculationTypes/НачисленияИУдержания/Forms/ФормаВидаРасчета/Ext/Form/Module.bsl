///////////////////////////////////////////////////////////////////////////////
// Модуль формы элемента плана видов расчета "Начисления и удержания"
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Отказ Или РаботаСФормой.НужноОтменитьОткрытиеФормы();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// Все формы элементов справочников будем открывать в режиме блокировки интерфейса
	РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		
	РаботаСФормой.ЗаблокироватьРедактированиеПредопределенногоЭлемента(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УправлениеДиалогомНаСервере();
		
		НастроитьПолеВыбораОбъектаРасчета();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия=Неопределено)
	
	Если НЕ УправлениеДиалогомСправочникаСервер.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДействия = Новый Структура;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение, ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УправлениеДиалогомНаСервере();
	
	НастроитьПолеВыбораОбъектаРасчета();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Элементы.Найти("ГруппаКонтактнаяИнформация") = Неопределено Тогда
		УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура СпособРасчетаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ПланыВидовРасчета.НачисленияИУдержания.СпособРасчетаПриИзменении(Объект, ПараметрыДействия);
	УправлениеДиалогомНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	СпособРасчетаПриИзмененииНаСервере(ПараметрыДействия);
	ОбработкаРезультатаВыполненияДействия(ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура ВидОбъектаПриИзмененииНаСервере(ПараметрыДействия = Неопределено)
	
	ПланыВидовРасчета.НачисленияИУдержания.ВидОбъектаПриИзменении(Объект, ПараметрыДействия);
	НастроитьПолеВыбораОбъектаРасчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОбъектаПриИзменении(Элемент)
	
	ПараметрыДействия = Новый Структура;
	ВидОбъектаПриИзмененииНаСервере(ПараметрыДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКОбъектуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.ВидОбъекта = 3 ИЛИ Объект.ВидОбъекта = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = Фильтр;
	
	ПараметрыОповещения = Новый Структура("ДиалогВыбораФайла", ДиалогВыбораФайла);
	ДиалогВыбораФайла.Показать(
		Новый ОписаниеОповещения("ПутьКОбъектуНачалоВыбораЗавершение", ЭтотОбъект, ПараметрыОповещения));
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКОбъектуНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогВыбораФайла = ДополнительныеПараметры.ДиалогВыбораФайла;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Объект.ПутьКОбъекту = ДиалогВыбораФайла.ПолноеИмяФайла;
		// загрузим файл в хранилище значений
		Объект.АдресФайлаВоВременномХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Объект.ПутьКОбъекту));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьПолеВыбораОбъектаРасчета()
	
	Если Объект.ВидОбъекта = 3 И (Элементы.ПутьКОбъекту.СписокВыбора.ДоступныеЗначения = Неопределено)Тогда
		СписокВыбора = Элементы.ПутьКОбъекту.СписокВыбора;
		СписокВыбора.Очистить();
		
		Для Каждого СтрокаОбработки Из Метаданные.Обработки Цикл
			Если СтрНайти(СтрокаОбработки.Имя,"Зарплата") <> 0 Тогда
				СписокВыбора.Добавить(СтрокаОбработки.Имя, СтрокаОбработки.Синоним);
			КонецЕсли;
		КонецЦикла;
		
		Элементы.ПутьКОбъекту.РежимВыбораИзСписка  = Истина;
		Элементы.ПутьКОбъекту.КнопкаВыбора         = Ложь;
		Элементы.ПутьКОбъекту.РедактированиеТекста = Истина;
		
		Фильтр = "";
	ИначеЕсли Объект.ВидОбъекта = 2 Тогда
		Элементы.ПутьКОбъекту.СписокВыбора.Очистить();
		Элементы.ПутьКОбъекту.РежимВыбораИзСписка  = Ложь;
		Элементы.ПутьКОбъекту.КнопкаВыбора         = Истина;
		Элементы.ПутьКОбъекту.РедактированиеТекста = Истина;
		
		Фильтр = "Текстовый файл(*.txt)|*.txt";
	ИначеЕсли Объект.ВидОбъекта = 4 Тогда
		Элементы.ПутьКОбъекту.СписокВыбора.Очистить();
		Элементы.ПутьКОбъекту.РежимВыбораИзСписка  = Ложь;
		Элементы.ПутьКОбъекту.КнопкаВыбора         = Истина;
		Элементы.ПутьКОбъекту.РедактированиеТекста = Истина;
		
		Фильтр = "Внешняя обработка(*.epf)|*.epf";
	ИначеЕсли Объект.ВидОбъекта = 0 Тогда
		Элементы.ПутьКОбъекту.СписокВыбора.Очистить();
		Элементы.ПутьКОбъекту.РежимВыбораИзСписка  = Ложь;
		Элементы.ПутьКОбъекту.КнопкаВыбора         = Ложь;
		Элементы.ПутьКОбъекту.РедактированиеТекста = Ложь;
		
		Фильтр = "";
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

&НаСервере
Процедура УправлениеДиалогомНаСервере()
	
	УправлениеДиалогомСправочникаСервер.УправлениеДиалогомНаСервере(ЭтотОбъект);
	
	ДоступПоВиду = (Объект.СпособРасчета = Перечисления.СпособыРасчета.Процентом);
	Элементы.ВидОбъекта.Доступность   = ДоступПоВиду;
	Элементы.ПутьКОбъекту.Доступность = ДоступПоВиду;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаВыполненияДействия(ПараметрыДействия)
	
	УправлениеДиалогомСправочникаКлиент.ОбработкаРезультатаВыполненияДействия(ЭтотОбъект, ПараметрыДействия);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

