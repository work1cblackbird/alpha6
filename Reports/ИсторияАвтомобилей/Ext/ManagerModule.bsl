// Модуль менеджера отчета "История автомобилей"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Функция возвращает строку для подстановки в условие запроса
// #-надо заменить на имя поля, &-надо заменить на имя параметра.
//
// Параметры:
//	ВидСравн - ВидСравнения - Вид сравнения.
//
// Возвращаемое значение:
//	Строка - Строка подстановки в условие запроса.
//
Функция СформироватьСтрокуВидаСравнения(ВидСравн) Экспорт
	
	Если ТипЗнч(ВидСравн)<>Тип("ВидСравнения") Тогда
		Возврат "";
	КонецЕсли; 
	
	СтрокаУсловия = "";
	Если ВидСравн = ВидСравнения.Равно Тогда
		СтрокаУсловия = "#=&";
	ИначеЕсли ВидСравн= ВидСравнения.НеРавно Тогда
		СтрокаУсловия = "#<>&";
	ИначеЕсли ВидСравн= ВидСравнения.ВСписке Тогда
		СтрокаУсловия = "# В (&)";
	ИначеЕсли ВидСравн= ВидСравнения.ВСпискеПоИерархии Тогда
		СтрокаУсловия = "# В ИЕРАРХИИ (&)";
	ИначеЕсли ВидСравн= ВидСравнения.ВИерархии Тогда
		СтрокаУсловия = "# В ИЕРАРХИИ (&)";	
	ИначеЕсли ВидСравн= ВидСравнения.НеВСписке Тогда
		СтрокаУсловия = "НЕ # В (&)";
	ИначеЕсли ВидСравн= ВидСравнения.НеВСпискеПоИерархии Тогда
		СтрокаУсловия = "НЕ # В ИЕРАРХИИ (&)";
	ИначеЕсли ВидСравн= ВидСравнения.НеВИерархии Тогда
		СтрокаУсловия = "НЕ # В ИЕРАРХИИ (&)";
	ИначеЕсли ВидСравн= ВидСравнения.Больше Тогда
		СтрокаУсловия = "#>&";
	ИначеЕсли ВидСравн= ВидСравнения.БольшеИлиРавно Тогда
		СтрокаУсловия = "#>=&";
	ИначеЕсли ВидСравн= ВидСравнения.Меньше Тогда
		СтрокаУсловия = "#<&";
	ИначеЕсли ВидСравн= ВидСравнения.МеньшеИлиРавно Тогда
		СтрокаУсловия = "#<=&";
	КонецЕсли;
	
	Возврат СтрокаУсловия;
	
КонецФункции // СформироватьСтрокуВидаСравнения()

// Получить результат запроса
// Параметры:
//	Выборка             - выборка из результата запроса
//	Индекс              - строка для выгрузки
//	СписокИзмерений     - список измерений запроса
//	КоличествоИзмерений - количество измерений в запросе
//	МассивКолонок       - колонок запроса
//	ДеревоРезультата    - результат процедуры.
//
Процедура ВыгрузитьЗапрос(Выборка, Индекс, СписокИзмерений, КоличествоИзмерений, МассивКолонок, ДеревоРезультата)
		
	Инд = Индекс+1;
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ДеревоРезультата.Добавить();
		Для Каждого ТекКолонка Из МассивКолонок Цикл
			НоваяСтрока[ТекКолонка] = Выборка[ТекКолонка];
		КонецЦикла;
		Если Инд<КоличествоИзмерений Тогда
			ВыгрузитьЗапрос(Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, СписокИзмерений[Инд]), Инд, СписокИзмерений, КоличествоИзмерений, МассивКолонок, НоваяСтрока.Строки);
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

// Процедура объединения двух результатов запроса
// Параметры:
//	Выборка             - выборка из результата запроса
//	СписокИзмерений     - список измерений запроса
//	КоличествоИзмерений - количество измерений в запросе
//	МассивКолонок       - колонок запроса
//	РезультатЗапроса    - результат запроса.
//
Процедура ОбъединнитьРезультатЗапроса(Выборка, СписокИзмерений, КоличествоИзмерений, МассивКолонок, РезультатЗапроса)
		
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = РезультатЗапроса.Найти(Выборка["Автомобиль"],"Автомобиль",Ложь);
		Если НоваяСтрока=Неопределено Тогда
			НоваяСтрока = РезультатЗапроса.Добавить();
			Для Каждого ТекКолонка Из МассивКолонок Цикл
				НоваяСтрока[ТекКолонка]=Выборка[ТекКолонка];
			КонецЦикла;
		КонецЕсли;
		ВыгрузитьЗапрос(Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, СписокИзмерений[1]), 1, СписокИзмерений, КоличествоИзмерений, МассивКолонок, НоваяСтрока.Строки);
	КонецЦикла;
		
КонецПроцедуры

// Формирования макета отчета
// Параметры:
//	СтруктураПолей - структура полей отчета.
//
Функция ПолучитьМакетОтчета(ОтчетОбъект, СтруктураПолей, ПараметрыОтчета)
		
	СтруктураНужныхСтрок = Новый Структура;
		
	Для Каждого ТекПоля Из СтруктураПолей Цикл
		Для Каждого ТекПоле Из ТекПоля.Значение.Поля Цикл
			Если ТекПоле.Значение <> "NULL" Тогда
				СтруктураНужныхСтрок.Вставить(ТекПоля.Ключ+ТекПоле.Ключ, ТекПоля.Значение.ИндексыОбластей);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
	СтруктураНеНужныхСтрок = Новый Структура;
		
	Для Каждого ТекПоля Из ОтчетОбъект.ДеревоНастройкиДополнительныхПолей.Строки Цикл
		Если НЕ СтруктураПолей.Свойство(ТекПоля.Имя) Тогда Продолжить; КонецЕсли;
		Для Каждого ТекПоле Из ТекПоля.Строки Цикл
			Если СтруктураПолей[ТекПоля.Имя].Поля.Свойство(ТекПоле.Имя) Тогда Продолжить; КонецЕсли;
			СтруктураНеНужныхСтрок.Вставить(ТекПоле.Имя + ТекПоля.ИндексыОбластей, ТекПоле.Имя);
		КонецЦикла;
	КонецЦикла;
		
	ТекМакет = ПолучитьМакет("Макет");
		
	СтруктураЗаголовка = ПолучитьСтруктуруЗаголовка(ОтчетОбъект, ПараметрыОтчета);
		
	ОбластьЗаголовок = ТекМакет.Область(1, 2);
	ОбластьЗаголовок.Текст = СтруктураЗаголовка.Наименование + Символы.ПС + СтруктураЗаголовка.Период;
	ОбластьЗаголовок.Шрифт = Новый Шрифт(ОбластьЗаголовок.Шрифт,, 12, Истина);
		
	ОбластьЗаголовок = ТекМакет.Область(2, 2);
	ОбластьЗаголовок.Текст = "Отбор: " + СтруктураЗаголовка.Отбор;
	ОбластьЗаголовок.Шрифт = Новый Шрифт(ОбластьЗаголовок.Шрифт,, 10, Истина);
	ОбластьЗаголовок.ЦветТекста = ЦветаСтиля.ЦветФонаВыделенияПоля;
		
	ВысотаЗаголовка = 3;
		
	ТекМакет.Область(1, 1).ШиринаКолонки = 1;
	ТекМакет.Область("R1:R" + ВысотаЗаголовка).Имя = "ЗаголовокШаблон";
	
	Высота = 0;
	Пока Высота <= ТекМакет.ВысотаТаблицы Цикл
			
		ТекОбласть = ТекМакет.Область(Высота, 1);
		Если ПустаяСтрока(ТекОбласть.Текст) Тогда 
			Высота = Высота + 1; 
			Продолжить; 
		КонецЕсли;
		Если СтруктураНужныхСтрок.Свойство(СокрЛП(ТекОбласть.Текст)) Тогда
			ТекОбласть.Текст = "";
			Высота = Высота + 1;
		Иначе
				
			Если Найти(ТекОбласть.Текст, "_Оборудование_") Тогда
				СтрокаДокумента = СтрЗаменить(ТекОбласть.Текст, "_Оборудование_", "");
				ЕстьНоменклатура = СтруктураНужныхСтрок.Свойство(СокрЛ(СтрокаДокумента + "Номенклатура"));
				ЕстьХарактеристикаНоменклатуры = СтруктураНужныхСтрок.Свойство(СокрЛ(СтрокаДокумента + "ХарактеристикаНоменклатуры"));
				ЕстьОпции = СтруктураНужныхСтрок.Свойство(СокрЛ(СтрокаДокумента + "Опции"));
				ЕстьРаботы = СтруктураНужныхСтрок.Свойство(СокрЛ(СтрокаДокумента + "Авторабота"));
				ЕстьСумма = СтруктураНужныхСтрок.Свойство(СокрЛ(СтрокаДокумента + "Сумма"));
				ЕстьСвязанныеДокументы = СтруктураНужныхСтрок.Свойство(СокрЛ(СтрокаДокумента + "СвязанныеДокументы"));
					
				ТекОбласть.Текст = "";
					
				Если НЕ ЕстьНоменклатура ИЛИ НЕ ЕстьХарактеристикаНоменклатуры Тогда
						
					КрайняяКоордината = 10 + ?(ЕстьСумма, 0, 1);
						
					ТекМакет.Область(Высота + 1, 4, Высота + 1, КрайняяКоордината).Объединить();
					ТекМакет.Область(Высота + 2, 5, Высота + 2, КрайняяКоордината).Объединить();
					ТекМакет.Область(Высота + 1, 4, Высота + 1, КрайняяКоордината).ГраницаСнизу 
														= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
						
					Если ЕстьХарактеристикаНоменклатуры Тогда
							
						ТекМакет.Область(Высота + 1, 4, Высота + 1, КрайняяКоордината).Текст 
							= "Характеристика номенклатуры:";
						ТекМакет.Область(Высота + 2, 5, Высота + 2, КрайняяКоордината).Заполнение 
							= ТипЗаполненияОбластиТабличногоДокумента.Параметр;
						ТекМакет.Область(Высота + 2, 5, Высота + 2, КрайняяКоордината).ПараметрРасшифровки 
							= "ХарактеристикаНоменклатуры";
						ТекМакет.Область(Высота + 2, 5, Высота + 2, КрайняяКоордината).Параметр 
							= "ХарактеристикаНоменклатуры";
							
					ИначеЕсли ЕстьНоменклатура Тогда
							
						ТекМакет.Область(Высота + 1, 4, Высота + 1, КрайняяКоордината).Текст 
							= "Номенклатура:";
						ТекМакет.Область(Высота + 2, 5, Высота + 2, КрайняяКоордината).Заполнение 
							= ТипЗаполненияОбластиТабличногоДокумента.Параметр;
						ТекМакет.Область(Высота + 2, 5, Высота + 2, КрайняяКоордината).ПараметрРасшифровки 
							= "Номенклатура";
						ТекМакет.Область(Высота + 2, 5, Высота + 2, КрайняяКоордината).Параметр 
							= "Номенклатура";
							
						ПереименуемаяОбласть = ТекМакет.Область(Высота + 2,, Высота + 2);
						ПереименуемаяОбласть.Имя = СтрЗаменить(ПереименуемаяОбласть.Имя, "ХарактеристикаНоменклатуры", "Номенклатура");
					КонецЕсли;
				КонецЕсли;
					
				Если НЕ ЕстьОпции И Найти(ТекМакет.Область(Высота + 4,, Высота + 5).Имя, "ШапкаОпции") > 0 Тогда
					ТекМакет.Область(Высота + 4,, Высота + 6).Имя = "";
				КонецЕсли;
					
				Если НЕ ЕстьРаботы И Найти(ТекМакет.Область(Высота + 5,, Высота + 6).Имя, "ШапкаАвторабот") > 0 Тогда
					ТекМакет.Область(Высота + 4,, Высота + 6).Имя = "";
				КонецЕсли;
					
				Если НЕ ЕстьСвязанныеДокументы 
					И СтрНайти(ТекМакет.Область(Высота + 5,, Высота + 6).Имя, "ШапкаСвязанныхДокументов") > 0 Тогда
					ТекМакет.Область(Высота + 4,, Высота + 6).Имя = "";
				КонецЕсли;
					
				Если НЕ ЕстьСумма  Тогда
						
					Если ЕстьХарактеристикаНоменклатуры И ЕстьНоменклатура Тогда
						ТекМакет.Область(Высота + 1, 4, Высота + 1, 8).Объединить();
						ТекМакет.Область(Высота + 1, 9, Высота + 1, 11).Объединить();
							
						ТекМакет.Область(Высота + 2, 5, Высота + 2, 8).Объединить();
						ТекМакет.Область(Высота + 2, 9, Высота + 2, 11).Объединить();
							
						ТекМакет.Область(Высота + 1, 4, Высота + 1, 8).Текст = "Номенклатура:";
						ТекМакет.Область(Высота + 1, 4, Высота + 1, 8).ГраницаСнизу 
									= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
						ТекМакет.Область(Высота + 2, 5, Высота + 2, 8).Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
						ТекМакет.Область(Высота + 2, 5, Высота + 2, 8).ПараметрРасшифровки = "Номенклатура";
						ТекМакет.Область(Высота + 2, 5, Высота + 2, 8).Параметр = "Номенклатура";
							
						ТекМакет.Область(Высота + 1, 9, Высота + 1, 11).Текст = "Характеристика номенклатуры:";
						ТекМакет.Область(Высота + 1, 9, Высота + 1, 11).ГраницаСлева 
								= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
						ТекМакет.Область(Высота + 2, 9, Высота + 2, 11).Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
						ТекМакет.Область(Высота + 2, 9, Высота + 2, 11).ПараметрРасшифровки = "ХарактеристикаНоменклатуры";
						ТекМакет.Область(Высота + 2, 9, Высота + 2, 11).Параметр = "ХарактеристикаНоменклатуры";
						ТекМакет.Область(Высота + 2, 9, Высота + 2, 11).ГраницаСлева 
								= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
					КонецЕсли;
						
					Если ЕстьОпции Тогда
						
						Координата = ТекМакет.Область("ШапкаОпции" + СтруктураНужныхСтрок[СокрЛ(СтрокаДокумента + "Опции")]).Низ;
						ТекМакет.Область(Координата, 4, Координата, 11).Объединить();
						ТекМакет.Область(Координата, 4, Координата, 11).Текст 
								= ?(ТекМакет.Область(Координата, 4, Координата, 11).Текст = "Опции:", "Опции:", "Опция:");
						ТекМакет.Область(Координата, 4, Координата, 11).ГраницаСнизу 
								= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
						
						Координата = ТекМакет.Область("Опции" + СтруктураНужныхСтрок[СокрЛ(СтрокаДокумента+"Опции")]).Низ;
						ТекМакет.Область(Координата, 5, Координата, 11).Объединить();
						ТекМакет.Область(Координата, 5, Координата, 11).Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
						ТекМакет.Область(Координата, 5, Координата, 11).ПараметрРасшифровки = "Опции";
						ТекМакет.Область(Координата, 5, Координата, 11).Параметр = "Опции";

					КонецЕсли;
						
					Если ЕстьРаботы Тогда
						Координата = ТекМакет.Область("ШапкаАвторабот" 
								+ СтруктураНужныхСтрок[СокрЛ(СтрокаДокумента + "Авторабота")]).Низ;
						ТекМакет.Область(Координата, 4, Координата, 11).Объединить();
						ТекМакет.Область(Координата, 4, Координата, 11).Текст = "Авторабота:";
						ТекМакет.Область(Координата, 4, Координата, 11).ГраницаСнизу 
								= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
						
						Координата = ТекМакет.Область("Авторабота" 
								+ СтруктураНужныхСтрок[СокрЛ(СтрокаДокумента + "Авторабота")]).Низ;
						ТекМакет.Область(Координата, 5, Координата, 11).Объединить();
						ТекМакет.Область(Координата, 5, Координата, 11).Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
						ТекМакет.Область(Координата, 5, Координата, 11).ПараметрРасшифровки = "Авторабота";
						ТекМакет.Область(Координата, 5, Координата, 11).Параметр = "Авторабота";
					КонецЕсли;		
				КонецЕсли;		
				Высота = Высота + 1;
			Иначе
				ТекМакет.УдалитьОбласть(ТекМакет.Область(Высота,, Высота), ТипСмещенияТабличногоДокумента.ПоВертикали);
					
			КонецЕсли;
				
		КонецЕсли;
	КонецЦикла;
		
	Если СтруктураПолей.Свойство("ДанныеРегистраАвтомобили") Тогда
			
		СтруктураПараметровАвтомобиля = Новый Структура;
			
		Если СтруктураНужныхСтрок.Свойство("ДанныеРегистраАвтомобилиХозяин") Тогда
			СтруктураПараметровАвтомобиля.Вставить("Хозяин");
		КонецЕсли;
			
		Если СтруктураНужныхСтрок.Свойство("ДанныеРегистраАвтомобилиТехПаспорт") Тогда
			СтруктураПараметровАвтомобиля.Вставить("ТехПаспорт");
		КонецЕсли;
			
		Если СтруктураНужныхСтрок.Свойство("ДанныеРегистраАвтомобилиПробег") Тогда
			СтруктураПараметровАвтомобиля.Вставить("Пробег");
		КонецЕсли;
			
		Если СтруктураНужныхСтрок.Свойство("ДанныеРегистраАвтомобилиГосНомер") Тогда
			СтруктураПараметровАвтомобиля.Вставить("ГосНомер");
		КонецЕсли;
			
		Если СтруктураПараметровАвтомобиля.Количество() < 4 Тогда
			ПозицияУ = ТекМакет.Область("ПараметрыПериода").Верх;
			ПозицияХ = 0;
			КоличествоПоказателей = СтруктураПараметровАвтомобиля.Количество();
			Если КоличествоПоказателей = 3 Тогда
				ТекМакет.Область(ПозицияУ, 10, ПозицияУ, 11).Объединить();
				ТекМакет.Область(ПозицияУ-1, 10, ПозицияУ - 1, 11).Объединить();
					
				Если СтруктураНужныхСтрок.Свойство("ДанныеРегистраАвтомобилиХозяин") Тогда
					ПозицияХ = 9;
				КонецЕсли;
					
			ИначеЕсли КоличествоПоказателей=2 Тогда
				ТекМакет.Область(ПозицияУ, 7, ПозицияУ, 9).Объединить();
				ТекМакет.Область(ПозицияУ, 10, ПозицияУ, 11).Объединить();
				ТекМакет.Область(ПозицияУ - 1, 7, ПозицияУ - 1, 9).Объединить();
				ТекМакет.Область(ПозицияУ - 1, 10, ПозицияУ - 1, 11).Объединить();
				Если СтруктураНужныхСтрок.Свойство("ДанныеРегистраАвтомобилиХозяин") Тогда
					ТекМакет.Область(ПозицияУ, 7, ПозицияУ, 9).Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
					ТекМакет.Область(ПозицияУ, 7, ПозицияУ, 9).ПараметрРасшифровки = "Хозяин";
					ТекМакет.Область(ПозицияУ, 7, ПозицияУ, 9).Параметр = "Хозяин";
					ТекМакет.Область(ПозицияУ - 1, 7, ПозицияУ - 1, 9).Текст = "Хозяин";
					ПозицияХ = 10;
				КонецЕсли;
			ИначеЕсли КоличествоПоказателей = 1 Тогда
				ТекМакет.Область(ПозицияУ, 7, ПозицияУ, 11).Объединить();
				ТекМакет.Область(ПозицияУ - 1, 7, ПозицияУ - 1, 11).Объединить();
				Если СтруктураНужныхСтрок.Свойство("ДанныеРегистраАвтомобилиХозяин") Тогда
					ТекМакет.Область(ПозицияУ, 7, ПозицияУ, 11).Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
					ТекМакет.Область(ПозицияУ, 7, ПозицияУ, 11).ПараметрРасшифровки = "Хозяин";
					ТекМакет.Область(ПозицияУ, 7, ПозицияУ, 11).Параметр = "Хозяин";
					ТекМакет.Область(ПозицияУ - 1, 7, ПозицияУ - 1, 11).Текст = "Хозяин";
				КонецЕсли;
			КонецЕсли;
				
			ПозицияХ1 = 0;
			ПозицияХ2 = 0;
				
			Для Каждого	ТекПараметр Из СтруктураПараметровАвтомобиля Цикл
					
				Если ТекПараметр.Ключ = "Хозяин" Тогда Продолжить; КонецЕсли;
					
				Если КоличествоПоказателей = 1 Тогда
					ПозицияХ1 = 7;
					ПозицияХ2 = 11;
				ИначеЕсли КоличествоПоказателей = 2 Тогда
					ПозицияХ1 = ?(ПозицияХ = 10, 10, 7);
					ПозицияХ2 = ?(ПозицияХ = 10, 11, 9);
					ПозицияХ = 10;                                
				ИначеЕсли КоличествоПоказателей = 3 Тогда         
					Если ПозицияХ = 0 Тогда
						ПозицияХ1 = 7;           
						ПозицияХ2 = 8;
						ПозицияХ = 9;
					ИначеЕсли ПозицияХ = 9 Тогда
						ПозицияХ1 = 9;
						ПозицияХ2 = 9;
						ПозицияХ = 10;
					Иначе
						ПозицияХ1 = 10;
						ПозицияХ2 = 11;
						ПозицияХ = 12;
					КонецЕсли;
				КонецЕсли;
					
				ТекМакет.Область(ПозицияУ, ПозицияХ1, ПозицияУ, ПозицияХ2).Заполнение 
						= ТипЗаполненияОбластиТабличногоДокумента.Параметр;
				ТекМакет.Область(ПозицияУ, ПозицияХ1, ПозицияУ, ПозицияХ2).ПараметрРасшифровки = "";
				ТекМакет.Область(ПозицияУ, ПозицияХ1, ПозицияУ, ПозицияХ2).Параметр = ТекПараметр.Ключ;
				ТекМакет.Область(ПозицияУ - 1, ПозицияХ1, ПозицияУ - 1, ПозицияХ2).Текст = ТекПараметр.Ключ;
				ТекМакет.Область(ПозицияУ, ПозицияХ1, ПозицияУ, ПозицияХ2).ГраницаСлева 
						= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
				ТекМакет.Область(ПозицияУ - 1, ПозицияХ1, ПозицияУ - 1, ПозицияХ2).ГраницаСлева 
						= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Опции");
	СтруктураПоиска.Вставить("Номенклатура");                                                                     
	СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры");
	СтруктураПоиска.Вставить("Авторабота");
	СтруктураПоиска.Вставить("СвязанныеДокументы");
	СтруктураПоиска.Вставить("ЗаказНаАвтомобиль");
	СтруктураПоиска.Вставить("ПараметрыПериода");
		
	Для Каждого ТекОбласть Из ТекМакет.Области Цикл
		Если НЕ СтруктураНеНужныхСтрок.Свойство(ТекОбласть.Имя) Тогда 
			Продолжить; 
		КонецЕсли;
		ТекПоле = СтруктураНеНужныхСтрок[ТекОбласть.Имя];
		Если СтруктураПоиска.Свойство(ТекПоле) Тогда 
			Продолжить; 
		КонецЕсли;
		ТекОбласть.Имя = "Документ"+СтрЗаменить(ТекОбласть.Имя, ТекПоле, "");
	КонецЦикла;
	
	Для Высота = 1 по ВысотаЗаголовка Цикл
		ТекОбласть = ТекМакет.Область(Высота, 2, Высота, ТекМакет.ШиринаТаблицы);
		ТекОбласть.ПоВыделеннымКолонкам = Истина;
		ТекОбласть.РазмещениеТекста     = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	КонецЦикла;
	
	Возврат ТекМакет;
		
КонецФункции

// Заполнение начальных настроек отчета
Процедура ЗаполнитьНастройкиОтчета(ОтчетОбъект, Запрос)
	
	Если ОтчетОбъект.Период.ДатаНачала = '00010101000000' Тогда
		Запрос.УстановитьПараметр("ДатаНач", '00010101000001');
	Иначе
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ОтчетОбъект.Период.ДатаНачала));
	КонецЕсли;
		
	Если ОтчетОбъект.Период.ДатаОкончания = '00010101000000' Тогда
		Запрос.УстановитьПараметр("ДатаКон", '00010101000000');
	Иначе
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(ОтчетОбъект.Период.ДатаОкончания));
	КонецЕсли;
		
	Запрос.УстановитьПараметр("ПеречислениеХозяин",		Перечисления.ДополнительнаяИнформацияАвтомобилей.Хозяин);
	Запрос.УстановитьПараметр("ПеречислениеПробег",		Перечисления.ДополнительнаяИнформацияАвтомобилей.Пробег);
	Запрос.УстановитьПараметр("ПеречислениеТехПаспорт",	Перечисления.ДополнительнаяИнформацияАвтомобилей.ТехПаспорт);
	Запрос.УстановитьПараметр("ПеречислениеГосНомер",	Перечисления.ДополнительнаяИнформацияАвтомобилей.ГосНомер);
	Запрос.УстановитьПараметр("Неопределен", НЕОПРЕДЕЛЕНО);
	Запрос.УстановитьПараметр("ВводОстатковАвтомобилей",Справочники.ХозОперации.ВводОстатковАвтомобилей);
	Запрос.УстановитьПараметр("ИнвентаризацииОтданныхНаКомиссию",Справочники.ХозОперации.ИнвентаризацияАвтомобилейОтданныхНаКомиссию);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("РеализацияАвтомобилей", Справочники.ХозОперации.РеализацияАвтомобилей);
	Запрос.УстановитьПараметр("Перемещение", Справочники.ХозОперации.ПеремещениеАвтомобилей);
		
КонецПроцедуры	//	ЗаполнитьНастройкиОтчета()

// Отображение отчета
// Параметры:
//	Выборка - выборка из результата запроса
//	Индекс  - индекс строки выборка
//	СписокИзмерений - список измерений запроса
//	КоличествоИзмерений - количество измерений запроса
//	ДокументРезультат   - результат отчета(табличный документ, диаграмма, сводная таблица и т.д.)
//	Макет               - макет отчета
//	ЕстьТЧ              - признак наличия табличной части.
//
Процедура ВывестиОтчет(Выборка,
	Знач Индекс,
	СписокИзмерений,
	КоличествоИзмерений,
	ДокументРезультат,
	Макет,
	ПараметрыОтчета,
	ЕстьТЧ = Ложь)
		
	ИзмерениеСтроки = СписокИзмерений[Индекс].Представление;
		
	ЕстьШапка = Ложь;
	Инд = Индекс + 1;
	ИндСтроки = 0;
	
	Если
		Индекс < 4
		И (
			ИзмерениеСтроки = "Документ"
			ИЛИ ИзмерениеСтроки = "ДокументОтгрузки"
			ИЛИ ИзмерениеСтроки = "ДокументПоступления"
			ИЛИ ИзмерениеСтроки = "ДокументПередачи"
			ИЛИ ИзмерениеСтроки = "ЗаказНаАвтомобиль"
		) Тогда
			
			ЕстьТЧ = Ложь;
			
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		ИмяОбласти = ИзмерениеСтроки + ?(Инд = 1, "", ТекСтрока.ИндексыОбластей);
		Если ТекСтрока[ИзмерениеСтроки] <> NULL И Макет.Области.Найти(ИмяОбласти) <> Неопределено Тогда
			Если ИзмерениеСтроки = "Опции" И НЕ ЕстьШапка Тогда
				Если ТекСтрока.ИндексыОбластей <> 26 Тогда
					ИмяМакета = ?(ЕстьТЧ, "ОкончаниеБлокаТЧ", "НачалоБлокаТЧ");
					ОбластьСтроки = Макет.ПолучитьОбласть(ИмяМакета);
					ДокументРезультат.Вывести(ОбластьСтроки, Индекс);
				КонецЕсли;
				ЕстьШапка = Истина;
				ЕстьТЧ = Истина;
				ИмяОбластиШапки = "ШапкаОпции" + ТекСтрока.ИндексыОбластей;
				Если Макет.Области.Найти(ИмяОбластиШапки) <> Неопределено Тогда
					ОбластьШапки = Макет.ПолучитьОбласть(ИмяОбластиШапки);
					ДокументРезультат.Вывести(ОбластьШапки, ТекСтрока.Уровень());
				Конецесли;
			ИначеЕсли ИзмерениеСтроки = "Авторабота" И НЕ ЕстьШапка Тогда
				ИмяМакета = ?(ЕстьТЧ, "ОкончаниеБлокаТЧ", "НачалоБлокаТЧ");
				ОбластьСтроки = Макет.ПолучитьОбласть(ИмяМакета);
				ДокументРезультат.Вывести(ОбластьСтроки, Индекс);
				ЕстьТЧ = Истина;
				ЕстьШапка = Истина;
				ИмяОбластиШапки = "ШапкаАвторабот" + ТекСтрока.ИндексыОбластей;
				Если Макет.Области.Найти(ИмяОбластиШапки) <> Неопределено Тогда
					ОбластьШапки = Макет.ПолучитьОбласть(ИмяОбластиШапки);
					ДокументРезультат.Вывести(ОбластьШапки, ТекСтрока.Уровень());
				Конецесли;
			ИначеЕсли ИзмерениеСтроки = "СвязанныеДокументы" И НЕ ЕстьШапка Тогда
				ИмяМакета = ?(ЕстьТЧ, "ОкончаниеБлокаТЧ", "НачалоБлокаТЧ");
				ОбластьСтроки = Макет.ПолучитьОбласть(ИмяМакета);
				ДокументРезультат.Вывести(ОбластьСтроки, Индекс);
				ЕстьТЧ = Истина;
				ЕстьШапка = Истина;
				ИмяОбластиШапки = "ШапкаСвязанныхДокументов" + ТекСтрока.ИндексыОбластей;
				Если Макет.Области.Найти(ИмяОбластиШапки) <> Неопределено Тогда
					ОбластьШапки = Макет.ПолучитьОбласть(ИмяОбластиШапки);
					ДокументРезультат.Вывести(ОбластьШапки, ТекСтрока.Уровень());
				Конецесли;
			ИначеЕсли ИзмерениеСтроки = "ХарактеристикаНоменклатуры" И НЕ ЕстьШапка
				И СписокИзмерений[Индекс - 1].Представление <> "Номенклатура" Тогда
				ИмяМакета = ?(ЕстьТЧ, "ОкончаниеБлокаТЧ", "НачалоБлокаТЧ");
				ОбластьСтроки = Макет.ПолучитьОбласть(ИмяМакета);
				ДокументРезультат.Вывести(ОбластьСтроки, Индекс);
				ЕстьТЧ = Истина;
				ЕстьШапка = Истина;
				ИмяОбластиШапки = "ШапкаОборудования" + ТекСтрока.ИндексыОбластей;
				Если Макет.Области.Найти(ИмяОбластиШапки) <> Неопределено Тогда
					ОбластьШапки = Макет.ПолучитьОбласть(ИмяОбластиШапки);
					ДокументРезультат.Вывести(ОбластьШапки, ТекСтрока.Уровень());
				Конецесли;
			ИначеЕсли ИзмерениеСтроки = "Номенклатура" И НЕ ЕстьШапка Тогда
				ИмяМакета = ?(ЕстьТЧ, "ОкончаниеБлокаТЧ", "НачалоБлокаТЧ");
				ОбластьСтроки = Макет.ПолучитьОбласть(ИмяМакета);
				ДокументРезультат.Вывести(ОбластьСтроки, Индекс);
				ЕстьТЧ = Истина;
				ЕстьШапка = Истина;
				ИмяОбластиШапки = "ШапкаОборудования" + ТекСтрока.ИндексыОбластей;
				Если Макет.Области.Найти(ИмяОбластиШапки) <> Неопределено Тогда
					ОбластьШапки = Макет.ПолучитьОбласть(ИмяОбластиШапки);
					ДокументРезультат.Вывести(ОбластьШапки, ТекСтрока.Уровень());
				Конецесли;
			ИначеЕсли ИзмерениеСтроки = "Период" И НЕ ЕстьШапка Тогда
				ЕстьШапка = Истина;
				ИмяОбластиШапки = "ШапкаПериода" + ТекСтрока.ИндексыОбластей;
				Если Макет.Области.Найти(ИмяОбластиШапки) <> Неопределено Тогда
					ОбластьШапки = Макет.ПолучитьОбласть(ИмяОбластиШапки);
					ДокументРезультат.Вывести(ОбластьШапки, ТекСтрока.Уровень());
				Конецесли;
			КонецЕсли;
				
			ОбластьСтроки = Макет.ПолучитьОбласть(ИмяОбласти);
			ОбластьСтроки.Параметры.Заполнить(ТекСтрока);
				
			Если ИзмерениеСтроки = "Документ" Тогда
				ИдентификаторСоставнойСтруктуры = Строка(ТекСтрока.Документ.Метаданные().Имя);
				Если ПараметрыОтчета.СтруктураСложныхСоставныхПолей.Свойство(ИдентификаторСоставнойСтруктуры) Тогда
					Если ТекСтрока.ИндексыОбластей = 47 И  ИдентификаторСоставнойСтруктуры = "ЗаказНаряд" Тогда
						СоставнаяСтруктура = ПараметрыОтчета.СтруктураСложныхСоставныхПолей["ЗаказНарядСборка"];
					ИначеЕсли ТекСтрока.ИндексыОбластей = 48 И  ИдентификаторСоставнойСтруктуры = "РазукомплектацияАвтомобилей" Тогда
						СоставнаяСтруктура = ПараметрыОтчета.СтруктураСложныхСоставныхПолей["РазукомплектацияАвтомобилейСборка"];
					Иначе
						СоставнаяСтруктура = ПараметрыОтчета.СтруктураСложныхСоставныхПолей[ИдентификаторСоставнойСтруктуры];
					КонецЕсли;
					Для Каждого ТекСоставнаяСтрока Из СоставнаяСтруктура Цикл
						ОбластьСтроки.Параметры[ТекСоставнаяСтрока.Ключ] = ТекСтрока.Документ[ТекСоставнаяСтрока.Ключ];
					КонецЦикла;
				КонецЕсли;
					
				// Если это документ изменение цен на автомобили
				Если ТекСтрока.ИндексыОбластей = 7 Тогда
					Если СписокИзмерений.НайтиПоЗначению("НоваяЦена")<>Неопределено Тогда
						ТекВалюта = РаботаСКурсамиВалютПлатформа.ВалютаТипаЦены(ТекСтрока.Документ.ТипЦен, ТекСтрока.Автомобиль);
						ТекКурсВалюты = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекСтрока.Документ.Дата,
							Новый Структура("Валюта", ТекВалюта));
						ТекКурс = ТекКурсВалюты.Курс / ?(ТекКурсВалюты.Кратность = 0, 1, ТекКурсВалюты.Кратность);
						
						ТекКурсВалютыУпр = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекСтрока.Документ.Дата,
							Новый Структура("Валюта", Константы.ВалютаУправленческогоУчетаКомпании.Получить()));
						ТекКурсУпр = ТекКурсВалютыУпр.Курс / ?(ТекКурсВалютыУпр.Кратность = 0, 1, ТекКурсВалютыУпр.Кратность);
						
						ОбластьСтроки.Параметры.НоваяЦена = ТекСтрока.НоваяЦена * ТекКурс / ТекКурсУпр;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
				
			ДокументРезультат.Вывести(ОбластьСтроки, ТекСтрока.Уровень());
				
			Если ИзмерениеСтроки = "Документ" И (ТекСтрока.ИндексыОбластей = 4 ИЛИ ТекСтрока.ИндексыОбластей = 13) Тогда
					
				Если Макет.Области.Найти("TradeIn" + ТекСтрока.ИндексыОбластей) <> Неопределено
					И ТекСтрока.КупленныеПоTradeIn <> NULL Тогда
					ТекДокумент = ТекСтрока.КупленныеПоTradeIn;
					ОбластьСтроки = Макет.ПолучитьОбласть("TradeIn" + ТекСтрока.ИндексыОбластей);
						
					TradeСумма = ?(ТекДокумент.КурсВалютыУпр = 0, 0, ТекДокумент.СуммаДокумента
						* ТекДокумент.КурсДокумента / ТекДокумент.КурсВалютыУпр);
					ОбластьСтроки.Параметры.TradeСумма = TradeСумма;
					ОбластьСтроки.Параметры.TradeДокумент = ТекДокумент;
					ДокументРезультат.Вывести(ОбластьСтроки, ТекСтрока.Уровень());
				КонецЕсли;
			КонецЕсли;
				
		ИначеЕсли (ТекСтрока[ИзмерениеСтроки] <> NULL И ТекСтрока[ИзмерениеСтроки] <> Неопределено)
			И ИзмерениеСтроки = "Номенклатура" И НЕ ЕстьШапка Тогда
			
			ИмяМакета = ?(ЕстьТЧ, "ОкончаниеБлокаТЧ", "НачалоБлокаТЧ");
			ОбластьСтроки = Макет.ПолучитьОбласть(ИмяМакета);
			ДокументРезультат.Вывести(ОбластьСтроки, Индекс);
			ЕстьТЧ = Истина;
			ЕстьШапка = Истина;
			ИмяОбластиШапки = "ШапкаОборудования" + ТекСтрока.ИндексыОбластей;
			Если Макет.Области.Найти(ИмяОбластиШапки) <> Неопределено Тогда
				ОбластьШапки = Макет.ПолучитьОбласть(ИмяОбластиШапки);
				ДокументРезультат.Вывести(ОбластьШапки, ТекСтрока.Уровень());
			КонецЕсли;
			
		КонецЕсли;
			
		ИндСтроки = ИндСтроки + 1;
		Если ИзмерениеСтроки = "Период" И ЕстьШапка И ТекСтрока.ИндексыОбластей = 17 Тогда
			Если ИндСтроки < Выборка.Количество() Тогда
				ЕстьШапка = Выборка[ИндСтроки].ИндексыОбластей = 17;
				
				Если Выборка[ИндСтроки].ИндексыОбластей <> 17 Тогда
					ОбластьСтроки = Макет.ПолучитьОбласть("ОкончаниеБлокаДокумент");
					ДокументРезультат.Вывести(ОбластьСтроки, 1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
			
		Если Инд < КоличествоИзмерений Тогда
			ВывестиОтчет(ТекСтрока.Строки, Инд, СписокИзмерений, КоличествоИзмерений, ДокументРезультат,
				Макет, ПараметрыОтчета, ЕстьТЧ);
		КонецЕсли;
		
		Если Индекс = 1 И ТекСтрока.ИндексыОбластей <> 17 И ТекСтрока.ИндексыОбластей <> 26 Тогда 
			ОбластьСтроки = Макет.ПолучитьОбласть("ОкончаниеБлокаДокумент");
			ДокументРезультат.Вывести(ОбластьСтроки, 1);
		КонецЕсли;
		
		Если Индекс = 0 Тогда 
			ОбластьСтроки = Макет.ПолучитьОбласть("ОкончаниеБлока");
			ДокументРезультат.Вывести(ОбластьСтроки, 0);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Индекс = 1 И (ТекСтрока.ИндексыОбластей = 17 ИЛИ ТекСтрока.ИндексыОбластей = 26) Тогда 
			ОбластьСтроки = Макет.ПолучитьОбласть("ОкончаниеБлокаДокумент");
			ДокументРезультат.Вывести(ОбластьСтроки, 1);
	КонецЕсли;

КонецПроцедуры                             

// Возвращает структуру заголовка отчета
Функция ПолучитьСтруктуруЗаголовка(ОтчетОбъект, ПараметрыОтчета)
		
	// Получим наименование отчета из формы настройки
	Наименование = НСтр("ru = 'История автомобилей'");
	
	// Описание периода
	Если ОтчетОбъект.Период.ДатаНачала = '00010101000000' И ОтчетОбъект.Период.ДатаОкончания = '00010101000000' Тогда
		Период = НСтр("ru = 'Весь рабочий период .'");
	Иначе
		Если ОтчетОбъект.Период.ДатаНачала = '00010101000000' ИЛИ ОтчетОбъект.Период.ДатаОкончания = '00010101000000' Тогда
			СтрФорматирования = "ДФ = ""дд.ММ.гггг""; ДП = ""...""";
			Период = Формат(ОтчетОбъект.Период.ДатаНачала, СтрФорматирования)
				+ " - "
				+ Формат(ОтчетОбъект.Период.ДатаОкончания, СтрФорматирования);
				
		Иначе
			Если ОтчетОбъект.Период.ДатаНачала <= ОтчетОбъект.Период.ДатаОкончания Тогда
				Период = ПредставлениеПериода(
					НачалоДня(ОтчетОбъект.Период.ДатаНачала),
					КонецДня(ОтчетОбъект.Период.ДатаОкончания),
					"ФП = Истина"
				);
			Иначе
				Период = НСтр("ru = 'Неправильно задан период.'");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Текст отборов
	Отбор = "";
	
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтчета, "ЭкспериментальныйРежим", Ложь) Тогда
		
		Если ОтчетОбъект.КомпоновщикНастроекНастройки.Отбор.Элементы.Количество() = 0 Тогда
			Отбор = НСтр("ru = 'Без отбора'");
		Иначе
			Для Каждого ТекОтбор Из ОтчетОбъект.КомпоновщикНастроекНастройки.Отбор.Элементы Цикл
				Если ТекОтбор.Использование Тогда
					Отбор = Отбор
						+ ?(Отбор = "", "", ", ")
						+ ТекОтбор.ПредставлениеПользовательскойНастройки
						+ " " 
						+ ТекОтбор.ВидСравнения
						+ " "
						+ ТекОтбор.ПравоеЗначение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		
		Если ПараметрыОтчета.ФильтрыОтчета.Строки.Количество() = 0 Тогда
			Отбор = НСтр("ru = 'Без отбора'");
		Иначе
			Для Каждого ТекОтбор Из ПараметрыОтчета.ФильтрыОтчета.Строки Цикл
				Если ТекОтбор.Использование Тогда
					Отбор = Отбор
						+ ?(Отбор = "", "", ", ")
						+ ТекОтбор.Заголовок
						+ " " 
						+ ТекОтбор.ВидСравнения
						+ " "
						+ ТекОтбор.ПравоеЗначение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отбор = "" Тогда
		Отбор = "Все";
	КонецЕсли;
	
	Возврат Новый Структура("Наименование,Период,Отбор", Наименование, Период, Отбор);
	
КонецФункции	//	ПолучитьСтруктуруЗаголовка()

// Формирование запросов и отборов
Функция ПолучитьСтруктуруЗапросовОтборов(СтруктураПолей)
		
	СтруктураЗапросовОтборов = Новый Структура;
		
	СтруктураЗапросовОтборов.Вставить("ЗаказНаряд","
	|ГДЕ 
	|ТаблицаЗапроса.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|И НЕ ТаблицаЗапроса.Ссылка в (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказНаряд.ДокументОснование
	|ИЗ
	|	ВЫРАЗИТЬ(Документ.ЗаказНаряд КАК ЗаказНаряд КАК Документ.ЗаявкаНаРемонт)
	|ГДЕ
	|	ЗаказНаряд.Дата МЕЖДУ &ДатаНач И &ДатаКон
	| И ЗаказНаряд.ДокументОснование ССЫЛКА Документ.ЗаявкаНаРемонт)
	| И ТаблицаЗапроса.Ссылка.Проведен = ИСТИНА");
		
	СтруктураЗапросовОтборов.Вставить("Проведен","
	|ГДЕ 
	|ТаблицаЗапроса.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|И ТаблицаЗапроса.Ссылка.Проведен = Истина");
		
	СтруктураЗапросовОтборов.Вставить("НеУдален","
	|ГДЕ 
	|ТаблицаЗапроса.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|И ТаблицаЗапроса.Ссылка.ПометкаУдаления = Ложь");
	
	Если СтруктураПолей.Свойство("РабочийЛист") Тогда
		СтруктураЗапросовОтборов.Вставить("РабочийЛист","
		|ГДЕ 
		|ТаблицаЗапроса.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|И ТаблицаЗапроса.Ссылка.Проведен = Истина
		|И ТаблицаЗапроса.Автомобиль <> ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)");
	КонецЕсли;
		
	Если СтруктураПолей.Свойство("ДанныеРегистраАвтомобили") Тогда
		
		СтрокиОтбора = "";
		СокрСтрокиОтбора = "";
		Для Каждого ТекПоле Из СтруктураПолей.ДанныеРегистраАвтомобили.Поля Цикл
			Если ТекПоле.Значение = "NULL" Тогда Продолжить; КонецЕсли;
			Если ТекПоле.Ключ = "Хозяин" ИЛИ ТекПоле.Ключ = "ТехПаспорт" ИЛИ ТекПоле.Ключ = "Пробег" ИЛИ ТекПоле.Ключ = "ГосНомер" Тогда 
				СтрокиОтбора = СтрокиОтбора + ?(СокрЛП(СтрокиОтбора)="","", " ИЛИ ") + "Автомобили.ВидЗначения = &Перечисление"+ТекПоле.Ключ;
				СокрСтрокиОтбора = СокрСтрокиОтбора + ?(СокрЛП(СокрСтрокиОтбора)="","", " ИЛИ ") + "ВидЗначения = &Перечисление"+ТекПоле.Ключ;
			КонецЕсли;
		КонецЦикла;
			
		СтруктураЗапросовОтборов.Вставить("ДанныеРегистраАвтомобили","
		| (ВЫБРАТЬ
		|	Автомобили.Автомобиль КАК Автомобиль,
		|	Автомобили.Период КАК Период,
		|	Автомобили.ВидЗначения КАК ВидЗначения,
		|	Автомобили.Значение КАК Значение
		| ИЗ
		|	РегистрСведений.Автомобили КАК Автомобили
		|ГДЕ
		|	Автомобили.Период МЕЖДУ &ДатаНач И &ДатаКон" + ?(СокрЛП(СтрокиОтбора)="","", " И ("+СтрокиОтбора+")")+"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|  ВЫБРАТЬ
		|	АвтомобилиСрезПоследних.Автомобиль,
		|	&ДатаКон,
		|	АвтомобилиСрезПоследних.ВидЗначения,
		|	АвтомобилиСрезПоследних.Значение
		| ИЗ
		|	РегистрСведений.Автомобили.СрезПоследних(&ДатаКон,"+СокрСтрокиОтбора+") КАК АвтомобилиСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|  ВЫБРАТЬ
		|	АвтомобилиСрезПоследних.Автомобиль,
		|	&ДатаНач,
		|	АвтомобилиСрезПоследних.ВидЗначения,
		|	АвтомобилиСрезПоследних.Значение
		| ИЗ
		|	РегистрСведений.Автомобили.СрезПоследних(&ДатаНач,"+СокрСтрокиОтбора+") КАК АвтомобилиСрезПоследних) КАК ТаблицаЗапроса
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаЗапроса.Автомобиль,
		|	ТаблицаЗапроса.Период");

	КонецЕсли;
	
	Если СтруктураПолей.Свойство("ДанныеРегистраОпцииАвтомобилей") Тогда
		
		СтруктураЗапросовОтборов.Вставить("ДанныеРегистраОпцииАвтомобилей","
		| (ВЫБРАТЬ
		|	ОпцииАвтомобилей.Автомобиль КАК Автомобиль,
		|	&ДатаКон КАК Период,
		|	ОпцииАвтомобилей.Опция КАК Опция
		|ИЗ
		|	РегистрСведений.ОпцииАвтомобилей КАК ОпцииАвтомобилей
		|ГДЕ
		|	ОпцииАвтомобилей.ДокументДвижения.Проведен = ИСТИНА
		|	И ОпцииАвтомобилей.ДокументДвижения.Дата <= &ДатаКон
		|	И ОпцииАвтомобилей.ЗаписьАктивна = ИСТИНА) КАК ТаблицаЗапроса");
		
	КонецЕсли;
	
	Если СтруктураПолей.Свойство("ИсторияОбслуживания") Тогда
		
		СтруктураЗапросовОтборов.Вставить("ИсторияОбслуживания", "
		| (ВЫБРАТЬ
		|	ПереносИстории.Контрагент КАК Контрагент,
		|	ПереносИстории.Автомобиль КАК Автомобиль,
		|	ПереносИстории.Ссылка КАК Ссылка,
		|	ПереносИстории.СуммаДокумента КАК СуммаДокумента,
		|	ПереносИстории.СуммаАвторабот КАК СуммаАвторабот,
		|	ПереносИстории.СуммаЗапчастей КАК СуммаЗапчасти,
		|	ПереносИстории.Дата КАК Дата,
		|	ПереносИстории.Номер КАК Номер,
		|	ПереносИстории.ВидДокумента КАК ХозОперация,
		|	ПереносИстории.КраткоеОписание КАК КраткоеОписание
		|ИЗ
		|	Документ.ПереносИстории КАК ПереносИстории
		|ГДЕ
		|	ПереносИстории.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ПереносИстории.ВидДокумента = Значение(Справочник.ХозОперации.ЗаказНаряд)
		|	И ПереносИстории.Хозоперация = Значение(Справочник.ХозОперации.ИсторияДокумента)
		|	И ПереносИстории.Проведен) КАК ТаблицаЗапроса");
		
	КонецЕсли;
	
	Возврат СтруктураЗапросовОтборов
	
КонецФункции

// Формирование структуры дополнительных запросов отчета
Функция ПолучитьСтруктуруДополнительныхЗапросов2(Поля, ПараметрыОтчета)
		
	СЧ=0;
	ГлобТекстЗапроса="ЛЕВОЕ СОЕДИНЕНИЕ(";
	Если ПараметрыОтчета.СтруктураДополнительныхЗапросовЭксперемент.Свойство(Поля.Ключ) Тогда
		
		ТаблицаУсловия = Новый ТаблицаЗначений;
		ТаблицаУсловия.Колонки.Добавить("Имя");
		ТаблицаУсловия.Колонки.Добавить("Значение");
		Шаг = 0;
		
		Для Каждого ТекДопТаблицы Из ПараметрыОтчета.СтруктураДополнительныхЗапросовЭксперемент[Поля.Ключ] Цикл
			ТекстЗапроса=?(СЧ=0,"","ОБЪЕДИНИТЬ ВСЕ")+Символы.ПС+"ВЫБРАТЬ";
			ТекстГруппировки="СГРУППИРОВАТЬ ПО";
			СЧ1=0;
			Для Каждого ТекФиксПоле Из ТекДопТаблицы.Значение.Фиксированные Цикл
					
				Если Сч=0 Тогда
					Шаг = ТекДопТаблицы.Значение.Фиксированные.Количество();
					ТекстЗапроса=ТекстЗапроса+?(СЧ1=0,"",",")+Символы.ПС+ТекДопТаблицы.Ключ+"."+ТекФиксПоле.Значение+" КАК "+ТекФиксПоле.Имя;
				Иначе
					ТекстЗапроса=ТекстЗапроса+?(СЧ1=0,"",",")+Символы.ПС+ТекДопТаблицы.Ключ+"."+ТекФиксПоле.Значение;
				КонецЕсли;
					
				Если ВРег(ТекФиксПоле.Значение)<>"NULL" Тогда
					ТекстГруппировки=ТекстГруппировки+?(СЧ1=0,"",",")+Символы.ПС+ТекДопТаблицы.Ключ+"."+ТекФиксПоле.Значение;
				КонецЕсли;
					
				СЧ1=СЧ1+1;
			КонецЦикла;
				
			СчетчикПолей=0;
				
			Для Каждого ТекПоле Из Поля.Значение.Поля Цикл
					
				Если ТекДопТаблицы.Значение.Итоги.Свойство(ТекПоле.Ключ) Тогда
					ТекЗначение = ТекДопТаблицы.Значение.Итоги[ТекПоле.Ключ];
					Если ВРег(ТекЗначение)<>"NULL" Тогда
						ТекстЗапроса=ТекстЗапроса+?(СЧ1=0,"",",")+Символы.ПС+"СУММА("+ТекЗначение+")"+?(СЧ=0," КАК "+ТекПоле.Ключ,"");
						
						Если СчетчикПолей=0 Тогда
							Для Каждого ТекФиксПоле Из ТекДопТаблицы.Значение.Фиксированные Цикл
								НоваяСтрока = ТаблицаУсловия.Добавить();
								НоваяСтрока.Имя = ТекФиксПоле.Имя;
								НоваяСтрока.Значение = ТекФиксПоле.Значение
							КонецЦикла;
						КонецЕсли;
						СчетчикПолей=СчетчикПолей+1;
					Иначе
						ТекстЗапроса=ТекстЗапроса+?(СЧ1=0,"",",")+Символы.ПС+"0"+?(СЧ=0," КАК "+ТекПоле.Ключ,"");
					КонецЕсли;
				КонецЕсли;
					
				Если ТекДопТаблицы.Значение.Группировки.Свойство(ТекПоле.Ключ) Тогда
					ТекЗначение = ТекДопТаблицы.Значение.Группировки[ТекПоле.Ключ];
					ТекстЗапроса=ТекстЗапроса+?(СЧ1=0,"",",")+Символы.ПС+ТекЗначение+?(СЧ=0," КАК "+ТекПоле.Ключ,"");
					Если ВРег(ТекЗначение)<>"NULL" Тогда
						ТекстГруппировки=ТекстГруппировки+?(СЧ1=0,"",",")+Символы.ПС+ТекЗначение;
						Если СчетчикПолей=0 Тогда
							Для Каждого ТекФиксПоле Из ТекДопТаблицы.Значение.Фиксированные Цикл
								НоваяСтрока = ТаблицаУсловия.Добавить();
								НоваяСтрока.Имя = ТекФиксПоле.Имя;
								НоваяСтрока.Значение = ТекФиксПоле.Значение
							КонецЦикла;
						КонецЕсли;
						СчетчикПолей=СчетчикПолей+1;
					КонецЕсли;
				КонецЕсли;
				СЧ1=СЧ1+1;
			КонецЦикла;
				
			ТекстЗапроса=ТекстЗапроса+Символы.ПС+"ИЗ"+Символы.ПС+ ТекДопТаблицы.Значение.Источник + " КАК "+ТекДопТаблицы.Ключ+Символы.ПС;
			ТекстЗапроса=ТекстЗапроса+ТекДопТаблицы.Значение.Отбор+Символы.ПС;
			ТекстЗапроса=ТекстЗапроса+ТекстГруппировки+Символы.ПС;
				
			Если СчетчикПолей>0 Тогда
				ГлобТекстЗапроса=ГлобТекстЗапроса+ТекстЗапроса;
				СЧ=СЧ+1;
			КонецЕсли;
		КонецЦикла;
	
	
	ТекстУсловияОбъединения = "";
	//Шаг = ТекДопТаблицы.Значение.Фиксированные.Количество();
	
	Если ТаблицаУсловия.Количество()<>0 Тогда
	Для Итерация = 0 по Шаг-1 Цикл
		КонтрольнаяСтрока = ТаблицаУсловия[Итерация];
		Позиция = Итерация+Шаг;
		ПромежуточныйТекст = "ТаблицаЗапроса."+КонтрольнаяСтрока.Имя+" = ТаблицаОбъединения."+КонтрольнаяСтрока.Имя;
		//ТекстУсловияОбъединения=ТекстУсловияОбъединения+Символы.ПС+?(ТекстУсловияОбъединения="" ,"ПО "," И ")+"ТаблицаЗапроса."
		//+КонтрольнаяСтрока.Имя+" = ТаблицаОбъединения."+КонтрольнаяСтрока.Имя;
		ЕстьИЛИ=Ложь;
		Пока Позиция<ТаблицаУсловия.Количество() Цикл
			ТекСтрока = ТаблицаУсловия[Позиция];
			Если ТекСтрока.Имя <> КонтрольнаяСтрока.Имя Тогда
				ПромежуточныйТекст=ПромежуточныйТекст+" ИЛИ ТаблицаЗапроса."+ТекСтрока.Имя+" = ТаблицаОбъединения."+КонтрольнаяСтрока.Имя;
				ЕстьИЛИ=Истина;
			КонецЕсли;
			Позиция=Позиция+Шаг;
		КонецЦикла;
		Если ЕстьИЛИ Тогда
			ТекстУсловияОбъединения=ТекстУсловияОбъединения+Символы.ПС+?(ТекстУсловияОбъединения="" ,"ПО ("," И (")+ПромежуточныйТекст+")";
		Иначе
			ТекстУсловияОбъединения=ТекстУсловияОбъединения+Символы.ПС+?(ТекстУсловияОбъединения="" ,"ПО "," И ")+ПромежуточныйТекст;
		КонецЕсли;
	КонецЦикла;
КонецЕсли;
КонецЕсли;

	ГлобТекстЗапроса=ГлобТекстЗапроса+") КАК ТаблицаОбъединения"+ТекстУсловияОбъединения;
		
	Если Сч=0 Тогда 
		ГлобТекстЗапроса="";
	КонецЕсли;
		
	Возврат ГлобТекстЗапроса;
		
КонецФункции

// Формирование структуры дополнительных запросов отчета
Функция ПолучитьСтруктуруДополнительныхЗапросов()
		
	СтруктураДополнительныхЗапросов = Новый Структура;
		
	СтруктураДополнительныхЗапросов.Вставить("СписаниеКомплекты", "ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|	ОстаткиАвтомобилей.Регистратор КАК Регистратор,
	|	ОстаткиАвтомобилей.Автомобиль КАК Автомобиль,
	|	NULL КАК Номенклатура,
	|	NULL КАК ХарактеристикаНоменклатуры,
	|	СУММА(ОстаткиАвтомобилей.СуммаУпр) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиАвтомобилей.Регистратор,
	|	ОстаткиАвтомобилей.Автомобиль
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	КомплектацияАвтомобилей.Регистратор,
	|	КомплектацияАвтомобилей.Автомобиль,
	|	КомплектацияАвтомобилей.Номенклатура,
	|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры,
	|	СУММА(КомплектацияАвтомобилей.СуммаУпр)
	|ИЗ
	|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
	|СГРУППИРОВАТЬ ПО
	|	КомплектацияАвтомобилей.Регистратор,
	|	КомплектацияАвтомобилей.Автомобиль,
	|	КомплектацияАвтомобилей.Номенклатура,
	|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры) КАК Комплекты
	| ПО ТаблицаЗапроса.Автомобиль = Комплекты.Автомобиль
	|  И (ТаблицаЗапроса.ДокументПередачи = Комплекты.Регистратор
	|  ИЛИ ТаблицаЗапроса.Ссылка = Комплекты.Регистратор)");
		
	СтруктураДополнительныхЗапросов.Вставить("ЗаказНаАвтомобиль",
	"ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыАвтомобилей КАК ЗаказНаАвтомобиль
	|		ПО ТаблицаЗапроса.Ссылка = ЗаказНаАвтомобиль.Регистратор");
		
	СтруктураДополнительныхЗапросов.Вставить("СвязанныеДокументыРАОбъединенный", "
	|ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ                                     
	|		СчетНаОплатуЗаАвтомобилиАвтомобили.Ссылка.ДокументОснование,
	|		СчетНаОплатуЗаАвтомобилиАвтомобили.Ссылка,
	|		NULL,
	|		СчетНаОплатуЗаАвтомобилиАвтомобили.Автомобиль,
	|		NULL,
	|		NULL,
	|		NULL,
	|	 	0
	|	ИЗ
	|		Документ.СчетНаОплатуЗаАвтомобили.Автомобили КАК СчетНаОплатуЗаАвтомобилиАвтомобили
	|	ГДЕ
	|		СчетНаОплатуЗаАвтомобилиАвтомобили.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		NULL,
	|		ЗаказыНаАвтомобили.Ссылка,
	|		NULL,
	|		ЗаказыНаАвтомобили.Автомобиль,
	|		NULL,
	|		NULL,
	|		NULL,
	|		0
	|		ИЗ
	|			Документ.ЗаказНаАвтомобиль КАК ЗаказыНаАвтомобили
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		NULL,
	|		ПоступлениеАвтомобилейTradeIn.Ссылка,
	|		ЗаказыНаАвтомобили.Ссылка,
	|		ЗаказыНаАвтомобили.Автомобиль,
	|		NULL,
	|		NULL,
	|		NULL,
	|		0
	|		ИЗ
	|			Документ.ЗаказНаАвтомобиль КАК ЗаказыНаАвтомобили
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаАвтомобиль.ПоступленияTradeIn КАК ПоступлениеАвтомобилейTradeIn
	|		ПО ЗаказыНаАвтомобили.Ссылка = ПоступлениеАвтомобилейTradeIn.Ссылка
	|		И ПоступлениеАвтомобилейTradeIn.Документ.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВЫРАЗИТЬ(СчетФактураВыданный.Ссылка.ДокументОснование КАК Документ.РеализацияАвтомобилей),
	|		СчетФактураВыданный.Ссылка,
	|		NULL,
	|		СчетФактураВыданный.Номенклатура,
	|		NULL,
	|		NULL,
	|		NULL,
	|		0
	|	ИЗ
	|		Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданный
	|	ГДЕ
	|		СчетФактураВыданный.Ссылка.ДокументОснование ССЫЛКА Документ.РеализацияАвтомобилей
	|		И СчетФактураВыданный.Ссылка.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВЫРАЗИТЬ(ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка.ДокументОснование КАК Документ.РеализацияАвтомобилей),
	|		ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка,
	|		ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи КАК ДокументПередачи,
	|		ОтчетКомиссионераЗаАвтомобилиАвтомобили.Автомобиль,
	|		NULL,
	|		NULL,
	|		NULL,
	|		0
	|	ИЗ
	|		Документ.ОтчетКомиссионераЗаАвтомобили.Автомобили КАК ОтчетКомиссионераЗаАвтомобилиАвтомобили
	|	ГДЕ
	|		ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка.ДокументОснование ССЫЛКА Документ.РеализацияАвтомобилей
	|		И ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка.Проведен = ИСТИНА
	|");
		
	СтруктураДополнительныхЗапросов.Вставить("СвязанныеДокументыРА", "ЛЕВОЕ СОЕДИНЕНИЕ(ВЫБРАТЬ
	|	СчетНаОплатуЗаАвтомобилиАвтомобили.Ссылка КАК СвязанныйДокумент,
	|	СчетНаОплатуЗаАвтомобилиАвтомобили.Ссылка.ДокументОснование КАК ДокументОснование,
	|	NULL КАК ДокументПередачи,
	|	СчетНаОплатуЗаАвтомобилиАвтомобили.Автомобиль,
	|	NULL КАК Номенклатура,
	|	NULL КАК ХарактеристикаНоменклатуры,
	|	NULL КАК Опция,
	|	0 КАК Сумма
	|ИЗ
	|	Документ.СчетНаОплатуЗаАвтомобили.Автомобили КАК СчетНаОплатуЗаАвтомобилиАвтомобили
	|ГДЕ
	|	СчетНаОплатуЗаАвтомобилиАвтомобили.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказыНаАвтомобили.Ссылка,
	|	NULL,
	|	NULL,
	|	ЗаказыНаАвтомобили.Автомобиль,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0
	|ИЗ
	|	Документ.ЗаказНаАвтомобиль КАК ЗаказыНаАвтомобили
	|ГДЕ
	|	ЗаказыНаАвтомобили.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|	ПоступлениеАвтомобилейTradeIn.Ссылка,
	|	NULL,
	|	ЗаказыНаАвтомобили.Ссылка,
	|	ЗаказыНаАвтомобили.Автомобиль,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0
	|	ИЗ
	|	Документ.ЗаказНаАвтомобиль КАК ЗаказыНаАвтомобили
	|ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаАвтомобиль.ПоступленияTradeIn КАК ПоступлениеАвтомобилейTradeIn
	|		ПО ЗаказыНаАвтомобили.Ссылка = ПоступлениеАвтомобилейTradeIn.Ссылка
	|		И ПоступлениеАвтомобилейTradeIn.Документ.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка,
	|	ВЫРАЗИТЬ(СчетФактураВыданный.Ссылка.ДокументОснование КАК Документ.РеализацияАвтомобилей),
	|	NULL,
	|	СчетФактураВыданный.Номенклатура,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.Ссылка.ДокументОснование ССЫЛКА Документ.РеализацияАвтомобилей
	|	И СчетФактураВыданный.Ссылка.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка,
	|	ВЫРАЗИТЬ(ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка.ДокументОснование КАК Документ.РеализацияАвтомобилей),
	|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.ДокументПередачи КАК ДокументПередачи,
	|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Автомобиль,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0
	|ИЗ
	|	Документ.ОтчетКомиссионераЗаАвтомобили.Автомобили КАК ОтчетКомиссионераЗаАвтомобилиАвтомобили
	|ГДЕ
	|	ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка.ДокументОснование ССЫЛКА Документ.РеализацияАвтомобилей
	|	И ОтчетКомиссионераЗаАвтомобилиАвтомобили.Ссылка.Проведен = ИСТИНА
	|");
		
	СтруктураДополнительныхЗапросов.Вставить("СвязанныеДокументыПА", "ЛЕВОЕ СОЕДИНЕНИЕ(ВЫБРАТЬ
	|		ЗаказыНаАвтомобиль.Ссылка КАК СвязанныйДокумент,
	|		NULL КАК ДокументОснование, 
	|		ЗаказыНаАвтомобиль.Автомобиль КАК Автомобиль,
	|		NULL КАК Опция
	|	ИЗ
	|		Документ.ЗаказНаАвтомобиль КАК ЗаказыНаАвтомобиль
	|	ГДЕ
	|		ЗаказыНаАвтомобиль.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ 
	|ВЫБРАТЬ
	|		СчетаФактураПолученные.Ссылка,
	|		ВЫРАЗИТЬ(СчетаФактураПолученные.Ссылка.ДокументОснование КАК Документ.ПоступлениеАвтомобилей),
	|		СчетаФактураПолученные.Номенклатура,
	|		NULL
	|	ИЗ
	|		Документ.СчетФактураПолученный.Товары КАК СчетаФактураПолученные
	|	ГДЕ
	|		СчетаФактураПолученные.Ссылка.ДокументОснование ССЫЛКА Документ.ПоступлениеАвтомобилей
	|		И СчетаФактураПолученные.Ссылка.Проведен = ИСТИНА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтчетКомитентуЗаАвтомобили.Ссылка,
	|		ОтчетКомитентуЗаАвтомобили.ДокументПоступления,
	|		ОтчетКомитентуЗаАвтомобили.Автомобиль,
	|		NULL
	|	ИЗ
	|		Документ.ОтчетКомитентуЗаАвтомобили.Автомобили КАК ОтчетКомитентуЗаАвтомобили
	|	ГДЕ
	|		ОтчетКомитентуЗаАвтомобили.Ссылка.ДокументОснование ССЫЛКА Документ.ПоступлениеАвтомобилей
	|		И ОтчетКомитентуЗаАвтомобили.Ссылка.Проведен = ИСТИНА) КАК Комплекты
	|		
	|		ПО (ТаблицаЗапроса.ЗаказНаАвтомобиль = Комплекты.СвязанныйДокумент
	|		ИЛИ ТаблицаЗапроса.Ссылка = Комплекты.ДокументОснование)
	|		И ТаблицаЗапроса.Автомобиль = Комплекты.Автомобиль");
		
		
	СтруктураДополнительныхЗапросов.Вставить("СвязанныеДокументыПАОбъединенный", "
	|ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		NULL,
	|		NULL, 
	|		ЗаказыНаАвтомобиль.Ссылка,
	|		NULL, 
	|		ЗаказыНаАвтомобиль.Автомобиль,
	|		NULL,
	|		NULL,
	|		0
	|	ИЗ
	|		Документ.ЗаказНаАвтомобиль КАК ЗаказыНаАвтомобиль
	|	ГДЕ
	|		ЗаказыНаАвтомобиль.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ 
	|ВЫБРАТЬ
	|		NULL,
	|		ВЫРАЗИТЬ(СчетаФактураПолученные.Ссылка.ДокументОснование КАК Документ.ПоступлениеАвтомобилей),
	|		СчетаФактураПолученные.Ссылка,
	|		NULL, 
	|		СчетаФактураПолученные.Номенклатура,
	|		NULL,
	|		NULL,
	|		0
	|	ИЗ
	|		Документ.СчетФактураПолученный.Товары КАК СчетаФактураПолученные
	|	ГДЕ
	|		СчетаФактураПолученные.Ссылка.ДокументОснование ССЫЛКА Документ.ПоступлениеАвтомобилей
	|		И СчетаФактураПолученные.Ссылка.Проведен = ИСТИНА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL,
	|		ОтчетКомитентуЗаАвтомобили.ДокументПоступления,
	|		ОтчетКомитентуЗаАвтомобили.Ссылка,
	|		NULL, 
	|		ОтчетКомитентуЗаАвтомобили.Автомобиль,
	|		NULL,
	|		NULL,
	|		0
	|	ИЗ
	|		Документ.ОтчетКомитентуЗаАвтомобили.Автомобили КАК ОтчетКомитентуЗаАвтомобили
	|	ГДЕ
	|		ОтчетКомитентуЗаАвтомобили.Ссылка.ДокументОснование ССЫЛКА Документ.ПоступлениеАвтомобилей
	|		И ОтчетКомитентуЗаАвтомобили.Ссылка.Проведен = ИСТИНА");
		
		
	СтруктураДополнительныхЗапросов.Вставить("ТоварыКомплектацияИРеализация", "ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|	ОстаткиАвтомобилей.Партия КАК Партия,
	|	ОстаткиАвтомобилей.Автомобиль КАК Автомобиль,
	|	КомплектацияАвтомобилей.Номенклатура КАК Номенклатура,
	|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	0 КАК Сумма
	|ИЗ
	|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
	|		ПО ОстаткиАвтомобилей.Регистратор = КомплектацияАвтомобилей.Регистратор
	|			И ОстаткиАвтомобилей.Автомобиль = КомплектацияАвтомобилей.Автомобиль
	|			И ОстаткиАвтомобилей.СкладКомпании = КомплектацияАвтомобилей.СкладКомпании
	|ГДЕ
	|	ОстаткиАвтомобилей.ВидДвижения = &ВидДвиженияРасход
	|	И ОстаткиАвтомобилей.Регистратор.ХозОперация = &РеализацияАвтомобилей
	|	И ОстаткиАвтомобилей.Регистратор ССЫЛКА Документ.РеализацияАвтомобилей
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиАвтомобилей.Автомобиль,
	|	ОстаткиАвтомобилей.Партия,
	|	КомплектацияАвтомобилей.Номенклатура,
	|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализованныеАвтомобили.ДокументПередачи,
	|	РеализованныеАвтомобили.Автомобиль,
	|	NULL,
	|	NULL,
	|	СУММА(РеализованныеАвтомобили.СуммаПродажи)
	|ИЗ
	|	РегистрНакопления.РеализованныеАвтомобили КАК РеализованныеАвтомобили
	|ГДЕ
	|	РеализованныеАвтомобили.ВидДвижения = &ВидДвиженияРасход
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализованныеАвтомобили.Автомобиль,
	|	РеализованныеАвтомобили.ДокументПередачи) КАК Комплекты
	|		ПО ТаблицаЗапроса.ДокументПоступления = Комплекты.Партия
	|		И ТаблицаЗапроса.Автомобиль = Комплекты.Автомобиль");
		
	СтруктураДополнительныхЗапросов.Вставить("ЦеныАвтомобилей",
	"ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныАвтомобилей КАК ЦеныАвтомобилей
	|		ПО ТаблицаЗапроса.Ссылка = ЦеныАвтомобилей.Регистратор
	|		И ТаблицаЗапроса.Автомобиль = ЦеныАвтомобилей.Автомобиль");		
		
	СтруктураДополнительныхЗапросов.Вставить("КупленныеЗ",
	"ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаАвтомобиль.ПоступленияTradeIn КАК ПоступлениеАвтомобилейTradeIn
	|ПО ТаблицаЗапроса.Ссылка = ПоступлениеАвтомобилейTradeIn.Ссылка
	|И ПоступлениеАвтомобилейTradeIn.Документ.Проведен = ИСТИНА");
		
	СтруктураДополнительныхЗапросов.Вставить("КупленныеП",
	"ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаАвтомобиль.ПоступленияTradeIn КАК ПоступлениеАвтомобилейTradeIn
	|ПО ТаблицаЗапроса.Ссылка = ПоступлениеАвтомобилейTradeIn.Документ
	|И ПоступлениеАвтомобилейTradeIn.Документ.Проведен = ИСТИНА");
		
	СтруктураДополнительныхЗапросов.Вставить("КомплектыСвязанные", "ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|	ОстаткиАвтомобилей.ВидДвижения КАК ВидДвижения,
	|	ОстаткиАвтомобилей.Регистратор КАК Регистратор,
	|	NULL КАК СвязанныйДокумент,
	|	NULL КАК ДокументПередачи,
	|	ОстаткиАвтомобилей.Автомобиль КАК Автомобиль,
	|	NULL КАК Номенклатура,
	|	NULL КАК ХарактеристикаНоменклатуры,
	|	СУММА(ОстаткиАвтомобилей.СуммаУпр) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
	|ГДЕ
	|	ОстаткиАвтомобилей.Период МЕЖДУ &ДатаНач И &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиАвтомобилей.ВидДвижения,
	|	ОстаткиАвтомобилей.Регистратор,
	|	ОстаткиАвтомобилей.Автомобиль
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КомплектацияАвтомобилей.ВидДвижения,
	|	КомплектацияАвтомобилей.Регистратор,
	|	NULL,
	|	NULL,
	|	КомплектацияАвтомобилей.Автомобиль,
	|	КомплектацияАвтомобилей.Номенклатура,
	|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры,
	|	СУММА(КомплектацияАвтомобилей.СуммаУпр)
	|ИЗ
	|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
	|ГДЕ
	|	КомплектацияАвтомобилей.Период МЕЖДУ &ДатаНач И &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	КомплектацияАвтомобилей.ВидДвижения,
	|	КомплектацияАвтомобилей.Номенклатура,
	|	КомплектацияАвтомобилей.Автомобиль,
	|	КомплектацияАвтомобилей.Регистратор,
	|	КомплектацияАвтомобилей.ХарактеристикаНоменклатуры
	|	//@ОбъединенныйЗапрос@
	|	) КАК Комплекты
	|		ПО (ТаблицаЗапроса.Ссылка = Комплекты.Регистратор ИЛИ ТаблицаЗапроса.ЗаказНаАвтомобиль = Комплекты.СвязанныйДокумент)
	|		И ТаблицаЗапроса.Автомобиль = Комплекты.Автомобиль");
		
		
	СтруктураДополнительныхЗапросов.Вставить("КомплектыСвязанныеР", "ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|	ТаблицаАвтомобилей.Ссылка КАК Ссылка,
	|	NULL КАК СвязанныйДокумент,
	|	NULL КАК ДокументПередачи,
	|	ТаблицаАвтомобилей.ИдентификаторАвтомобиля КАК Автомобиль,
	|	NULL КАК Номенклатура,
	|	NULL КАК ХарактеристикаНоменклатуры,
	|	NULL КАК Опция,
	|	СУММА(ТаблицаАвтомобилей.СуммаВсего) КАК Сумма
	|ИЗ
	|	Документ.РеализацияАвтомобилей.Автомобили КАК ТаблицаАвтомобилей
	|ГДЕ
	|	ТаблицаАвтомобилей.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвтомобилей.Ссылка,
	|	ТаблицаАвтомобилей.ИдентификаторАвтомобиля
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ                                     
	|	ТаблицаОборудования.Ссылка,
	|	NULL,
	|	NULL,	
	|	ТаблицаОборудования.ИдентификаторАвтомобиля,
	|	ТаблицаОборудования.Номенклатура,
	|	ТаблицаОборудования.ХарактеристикаНоменклатуры,
	|	NULL,
	|	СУММА(ТаблицаОборудования.СуммаВсего)
	|ИЗ
	|	Документ.РеализацияАвтомобилей.Товары КАК ТаблицаОборудования
	|ГДЕ
	|	ТаблицаОборудования.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОборудования.Ссылка,
	|	ТаблицаОборудования.ИдентификаторАвтомобиля,
	|	ТаблицаОборудования.Номенклатура,
	|	ТаблицаОборудования.ХарактеристикаНоменклатуры
	|	//@ОбъединенныйЗапрос@
	|	) КАК Комплекты
	|		ПО (ТаблицаЗапроса.Ссылка = Комплекты.Ссылка
	|		ИЛИ ТаблицаЗапроса.ЗаказНаАвтомобиль = Комплекты.СвязанныйДокумент
	|		ИЛИ ТаблицаЗапроса.ЗаказНаАвтомобиль = Комплекты.ДокументПередачи)
	|		И (ТаблицаЗапроса.ИдентификаторАвтомобиля = Комплекты.Автомобиль
	|		ИЛИ ТаблицаЗапроса.Автомобиль = Комплекты.Автомобиль)");
	
	
	СтруктураДополнительныхЗапросов.Вставить("СведеньяПоАвтомобилю","ЛЕВОЕ СОЕДИНЕНИЕ(ВЫБРАТЬ
	|ОстаткиАвтомобилей.Автомобиль КАК Автомобиль,
	|ОстаткиАвтомобилей.Партия.Дата КАК ДатаПоступленияАвтомобиля,
	|ОстаткиАвтомобилей.СкладКомпании КАК Местонахождения,
	|ЗаказАвтомобилей.Заказ.Контрагент КАК Зарезервировал
	|
	|ИЗ
	|РегистрНакопления.ОстаткиАвтомобилей.Остатки(&ДатаКон) КАК ОстаткиАвтомобилей
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыАвтомобилей.Остатки(&ДатаКон) КАК ЗаказАвтомобилей
	|ПО
	|  ОстаткиАвтомобилей.Автомобиль = ЗаказАвтомобилей.Автомобиль
	|  И ЗаказАвтомобилей.РезервОстаток>0) КАК СведеньяПоАвтомобилю
	|ПО
	|ОбъединенныйЗапрос.Автомобиль = СведеньяПоАвтомобилю.Автомобиль");
	
	СтруктураДополнительныхЗапросов.Вставить("СводныйРемонтныйЗаказ", "ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|	СводныйРемонтныйЗаказ.Ссылка КАК Ссылка,
	|	СводныйРемонтныйЗаказ.Автомобиль КАК Автомобиль
	|ИЗ
	|	Документ.СводныйРемонтныйЗаказ КАК СводныйРемонтныйЗаказ
	|ГДЕ
	|	СводныйРемонтныйЗаказ.Дата МЕЖДУ &ДатаНач И &ДатаКон) КАК СводныйРемонтныйЗаказ
	|ПО
	|	ТаблицаЗапроса.Ссылка.СводныйРемонтныйЗаказ = СводныйРемонтныйЗаказ.Ссылка");
	
	СтруктураДополнительныхЗапросов.Вставить("СводныйРемонтныйЗаказОснования", "ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|	СводныйРемонтныйЗаказ.Ссылка КАК Ссылка,
	|	СводныйРемонтныйЗаказ.Автомобиль КАК Автомобиль
	|ИЗ
	|	Документ.СводныйРемонтныйЗаказ КАК СводныйРемонтныйЗаказ
	|ГДЕ
	|	СводныйРемонтныйЗаказ.Дата МЕЖДУ &ДатаНач И &ДатаКон) КАК СводныйРемонтныйЗаказ
	|ПО
	|	ТаблицаЗапроса.Ссылка.ДокументОснование.СводныйРемонтныйЗаказ = СводныйРемонтныйЗаказ.Ссылка");
	
	Возврат СтруктураДополнительныхЗапросов;
		
КонецФункции

// Настройка полей отчета
Процедура ОбработкаПолей(ОтчетОбъект, СтруктураПолей, СтруктураГруппировок, ДеревоФиксированныхПолей) Экспорт
		
	ТекДоступныеПоля = Новый Структура;
	Для Каждого ТекПоле Из ОтчетОбъект.ДоступныеПоля Цикл
		Если НЕ ТекПоле.Использование Тогда Продолжить; КонецЕсли;
		ТекДоступныеПоля.Вставить(ТекПоле.Имя, ТекПоле.ЗначениеПоУмолчанию);
	КонецЦикла;
		
	Для Каждого ТекПоля Из ОтчетОбъект.ДеревоНастройкиДополнительныхПолей.Строки Цикл
		Если ТекПоля.Использование Тогда
			ВыборкаФиксированныхПолей = ДеревоФиксированныхПолей.Строки.Найти(ТекПоля.ПутьКДанным, "ПутьКДанным", Ложь).Строки;
			Для Каждого ТекФПоле Из ВыборкаФиксированныхПолей Цикл
				СтруктураГруппировок.Вставить(ТекФПоле.Имя);
			КонецЦикла;
				
			Для Каждого ТекПоле из ТекПоля.Строки Цикл
				Если НЕ ТекПоле.Использование Тогда Продолжить; КонецЕсли;
				Если НЕ ТекДоступныеПоля.Свойство(ТекПоле.Имя) Тогда Продолжить; КонецЕсли;
				СтруктураГруппировок.Вставить(ТекПоле.Имя);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
		
		
	Для Каждого ТекПоля из ОтчетОбъект.ДеревоНастройкиДополнительныхПолей.Строки Цикл
			
		Если ТекПоля.Использование Тогда
				
			СтруктураПолей.Вставить(ТекПоля.Имя,Новый Структура("Выборка, ДопТаблицы, Поля, Отборы, ИндексыОбластей", ТекПоля.Выборка, Новый Структура, Новый Структура,ТекПоля.ДопТаблицы, ТекПоля.ИндексыОбластей));
			ТекСтруктураПолей = СтруктураПолей[ТекПоля.Имя].Поля;
			ВыборкаФиксированныхПолей = ДеревоФиксированныхПолей.Строки.Найти(ТекПоля.ПутьКДанным, "ПутьКДанным", Ложь).Строки;
				
			Для Каждого ТекФПоле Из ВыборкаФиксированныхПолей Цикл
				Если ТекФПоле.ДопТаблицы<>"" Тогда
					СтруктураПолей[ТекПоля.Имя].ДопТаблицы.Вставить(ТекФПоле.ДопТаблицы);
				КонецЕсли;
				ТекСтруктураПолей.Вставить(ТекФПоле.Имя, ТекФПоле.Выборка);
			КонецЦикла;
				
			Для Каждого ТекПоле из ТекПоля.Строки Цикл
				Если НЕ ТекПоле.Использование Тогда Продолжить; КонецЕсли;
				Если НЕ ТекДоступныеПоля.Свойство(ТекПоле.Имя) Тогда Продолжить; КонецЕсли;
					
				Если ТекПоле.ДопТаблицы<>"" Тогда
					СтруктураПолей[ТекПоля.Имя].ДопТаблицы.Вставить(ТекПоле.ДопТаблицы);
				КонецЕсли;
				ТекСтруктураПолей.Вставить(ТекПоле.Имя, ТекПоле.Выборка);
			КонецЦикла;
				
			Для Каждого ТекСтруктура Из СтруктураГруппировок Цикл
					
				Если НЕ ТекСтруктураПолей.Свойство(ТекСтруктура.Ключ) Тогда
					//ТекСтруктураПолей.Вставить(ТекСтруктура.Ключ,"NULL");
					ТекСтруктураПолей.Вставить(ТекСтруктура.Ключ, ТекДоступныеПоля[ТекСтруктура.Ключ]);
				КонецЕсли;
					
			КонецЦикла;
				
		КонецЕсли;
	КонецЦикла;
		
	Для Каждого ТекИзмерение Из ОтчетОбъект.Измерения Цикл
		ТекИзмерение.Использование=СтруктураГруппировок.Свойство(ТекИзмерение.Имя);
	КонецЦикла;
		
	Для Каждого ТекПоказатель Из ОтчетОбъект.ИтоговыеДополнительныеПоля Цикл
		ТекПоказатель.Использование=СтруктураГруппировок.Свойство(ТекПоказатель.Имя);
	КонецЦикла;
		
	Для Каждого ТекПоле Из ОтчетОбъект.ДополнительныеПоля Цикл
		ТекПоле.Использование=СтруктураГруппировок.Свойство(ТекПоле.Имя);
	КонецЦикла;
		
КонецПроцедуры

// Настройка полей отчета в новом режиме
Процедура ОбработкаПолейЭксперимент(ОтчетОбъект, СтруктураПолей, МассивГруппировок, ДеревоФиксированныхПолей) Экспорт
		
	ТекДоступныеПоля = Новый Структура;
	Для Каждого ТекПоле Из ОтчетОбъект.КомпоновщикНастроекНастройки.Выбор.Элементы Цикл
		Если НЕ ТекПоле.Использование Тогда Продолжить; КонецЕсли;
		НайденнаяСтрока = ОтчетОбъект.ДоступныеПоля.Найти(Строка(ТекПоле.Поле), "Имя");
		Если НайденнаяСтрока <> Неопределено Тогда
			ТекДоступныеПоля.Вставить(Строка(ТекПоле.Поле), 
				НайденнаяСтрока.ЗначениеПоУмолчанию);
		КонецЕсли;
	КонецЦикла;
	
	Для ТекСчСтруктуры = 0 По 6 Цикл
		МассивГруппировок.Вставить(ТекСчСтруктуры, Новый Структура);
	КонецЦикла;
	
	Для Каждого ТекПоля Из ОтчетОбъект.ДеревоНастройкиДополнительныхПолей.Строки Цикл
		Если ТекПоля.Использование Тогда
			СтруктураГруппировок = МассивГруппировок[ТекПоля.НомерВТ-1];
			ВыборкаФиксированныхПолей = ДеревоФиксированныхПолей.Строки.Найти(ТекПоля.ПутьКДанным, "ПутьКДанным", Ложь).Строки;
			Для Каждого ТекФПоле Из ВыборкаФиксированныхПолей Цикл
				СтруктураГруппировок.Вставить(ТекФПоле.Имя);
			КонецЦикла;
				
			Для Каждого ТекПоле из ТекПоля.Строки Цикл
				Если НЕ ТекПоле.Использование Тогда Продолжить; КонецЕсли;
				Если НЕ ТекДоступныеПоля.Свойство(ТекПоле.Имя) Тогда Продолжить; КонецЕсли;
				СтруктураГруппировок.Вставить(ТекПоле.Имя);
			КонецЦикла;
			МассивГруппировок[ТекПоля.НомерВТ-1] =СтруктураГруппировок;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекПоля из ОтчетОбъект.ДеревоНастройкиДополнительныхПолей.Строки Цикл
		
		Если ТекПоля.Использование Тогда
				
			СтруктураПолей.Вставить(ТекПоля.Имя,Новый Структура(
				"Выборка, ДопТаблицы, Поля, Отборы, ИндексыОбластей, НомерВТ",
			ТекПоля.Выборка,
			Новый Структура,
			Новый Структура,
			ТекПоля.ДопТаблицы,
			ТекПоля.ИндексыОбластей,
			ТекПоля.НомерВТ));
			
			ТекСтруктураПолей = СтруктураПолей[ТекПоля.Имя].Поля;
			ВыборкаФиксированныхПолей = ДеревоФиксированныхПолей.Строки.Найти(ТекПоля.ПутьКДанным, "ПутьКДанным", Ложь).Строки;
				
			Для Каждого ТекФПоле Из ВыборкаФиксированныхПолей Цикл
				Если ТекФПоле.ДопТаблицы<>"" Тогда
					СтруктураПолей[ТекПоля.Имя].ДопТаблицы.Вставить(ТекФПоле.ДопТаблицы);
				КонецЕсли;
				ТекСтруктураПолей.Вставить(ТекФПоле.Имя, ТекФПоле.Выборка);
			КонецЦикла;
				
			Для Каждого ТекПоле из ТекПоля.Строки Цикл
				Если НЕ ТекПоле.Использование Тогда Продолжить; КонецЕсли;
				Если НЕ ТекДоступныеПоля.Свойство(ТекПоле.Имя) Тогда Продолжить; КонецЕсли;
					
				Если ТекПоле.ДопТаблицы<>"" Тогда
					СтруктураПолей[ТекПоля.Имя].ДопТаблицы.Вставить(ТекПоле.ДопТаблицы);
				КонецЕсли;
				ТекСтруктураПолей.Вставить(ТекПоле.Имя, ТекПоле.Выборка);
			КонецЦикла;
				
			Для Каждого ТекСтруктура Из МассивГруппировок[ТекПоля.НомерВТ-1] Цикл
					
				Если НЕ ТекСтруктураПолей.Свойство(ТекСтруктура.Ключ) Тогда
					//ТекСтруктураПолей.Вставить(ТекСтруктура.Ключ,"NULL");
					ТекСтруктураПолей.Вставить(ТекСтруктура.Ключ, ТекДоступныеПоля[ТекСтруктура.Ключ]);
				КонецЕсли;
					
			КонецЦикла;
				
		КонецЕсли;
	КонецЦикла;
		
	Для Каждого ТекИзмерение Из ОтчетОбъект.Измерения Цикл
		
		Для каждого ТекСтруктураГруппировок Из МассивГруппировок Цикл
			
			ТекИзмерение.Использование=ТекСтруктураГруппировок.Свойство(ТекИзмерение.Имя);
			
			Если ТекИзмерение.Использование Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
	Для Каждого ТекПоказатель Из ОтчетОбъект.ИтоговыеДополнительныеПоля Цикл
		
		Для каждого ТекСтруктураГруппировок Из МассивГруппировок Цикл
			
			ТекПоказатель.Использование=ТекСтруктураГруппировок.Свойство(ТекПоказатель.Имя);
			
			Если ТекПоказатель.Использование Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
	Для Каждого ТекПоле Из ОтчетОбъект.ДополнительныеПоля Цикл
		
		Для каждого ТекСтруктураГруппировок Из МассивГруппировок Цикл
			
			ТекПоле.Использование=ТекСтруктураГруппировок.Свойство(ТекПоле.Имя);
			
			Если ТекПоле.Использование Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры

// Формирования текста запроса отчета
Функция ПолучитьТекстЗапроса(ОтчетОбъект, СтруктураПолей, СтруктураГруппировок, ПараметрыОтчета) 
		
	МассивЗапросов = Новый Массив;
	СтруктураДополнительныхЗапросов = ПолучитьСтруктуруДополнительныхЗапросов();
	СтруктураЗапросовОтборов = ПолучитьСтруктуруЗапросовОтборов(СтруктураПолей);
	ТекущийТекстЗапросаВыборка = "";
	ТекущийТекстЗапросаСгруппировать = "СГРУППИРОВАТЬ ПО";
	ТекущийТекстЗапросаДополнительныеПоля = "";
	ТекущийТекстЗапросаПоказатели = "";
	ТекущийТекстЗапросаДополнительныеПоляИтоги = "";
	ТекущийТекстЗапросаПоказателиИтоги = "";
		
	Для Каждого ТекПоле Из ОтчетОбъект.ДоступныеПоля Цикл
			
		Если НЕ ТекПоле.Использование Тогда Продолжить; КонецЕсли;
			
		Если НЕ СтруктураГруппировок.Свойство(ТекПоле.Имя) Тогда Продолжить; КонецЕсли;
			
		Если ТекПоле.Данные Тогда 
			ТекущийТекстЗапросаПоказатели = ТекущийТекстЗапросаПоказатели + ?(ТекущийТекстЗапросаПоказатели = "", "", ",")
				+ Символы.ПС + "СУММА(ЕСТЬNULL(ОбъединенныйЗапрос." + ТекПоле.Имя + ",0)) КАК " + ТекПоле.Имя;
			ТекущийТекстЗапросаПоказателиИтоги = ТекущийТекстЗапросаПоказателиИтоги 
				+ ?(ТекущийТекстЗапросаПоказателиИтоги = "", "", ",") + Символы.ПС + "СУММА(" + ТекПоле.Имя + ")";
		ИначеЕсли ТекПоле.ДополнительноеПоле Тогда 
			ТекущийТекстЗапросаДополнительныеПоля = ТекущийТекстЗапросаДополнительныеПоля 
				+ ?(ТекущийТекстЗапросаДополнительныеПоля = "", "", ",") + Символы.ПС + "МАКСИМУМ(ОбъединенныйЗапрос." 
				+ ТекПоле.Имя + ") КАК " + ТекПоле.Имя;
			ТекущийТекстЗапросаДополнительныеПоляИтоги = ТекущийТекстЗапросаДополнительныеПоляИтоги 
				+ ?(ТекущийТекстЗапросаДополнительныеПоляИтоги = "", "", ",") + Символы.ПС + "МАКСИМУМ(" + ТекПоле.Имя + ")";
		Иначе
			ТекущийТекстЗапросаВыборка = ТекущийТекстЗапросаВыборка + ?(ТекущийТекстЗапросаВыборка = "", "", ",")
				+ Символы.ПС + "ОбъединенныйЗапрос." + ТекПоле.Имя + " КАК " + ТекПоле.Имя;
			ТекущийТекстЗапросаСгруппировать = ТекущийТекстЗапросаСгруппировать 
				+ ?(ТекущийТекстЗапросаСгруппировать = "СГРУППИРОВАТЬ ПО", "", ",") + Символы.ПС 
				+ "ОбъединенныйЗапрос." + ТекПоле.Имя;
			Шаблоны = ОтчетОбъект.Измерения.НайтиСтроки(Новый Структура("Имя", ТекПоле.Имя));
			Шаблон = "";
			Если Шаблоны.Количество() > 0 Тогда
				Шаблон = Шаблоны[0].Шаблон;
			КонецЕсли;
			Если НЕ ПустаяСтрока(Шаблон) Тогда
				КолИтераций = СтрЧислоВхождений(Шаблон, ",");
				Для Ном = 1 по КолИтераций Цикл
					Позиция = Найти(Шаблон, ",");
					ИмяПоля = СокрЛП(Лев(Шаблон, Позиция - 1));
					ТекущийТекстЗапросаВыборка = ТекущийТекстЗапросаВыборка + ?(ТекущийТекстЗапросаВыборка = "", "", ",")
						+ Символы.ПС + "ОбъединенныйЗапрос." + ТекПоле.Имя + "." + ИмяПоля + " КАК " + ТекПоле.Имя + ИмяПоля;
					Шаблон = Сред(Шаблон, Позиция + 1);
				КонецЦикла;
				ТекущийТекстЗапросаВыборка = ТекущийТекстЗапросаВыборка + ?(ТекущийТекстЗапросаВыборка = "", "", ",") 
					+ Символы.ПС + "ОбъединенныйЗапрос." + ТекПоле.Имя + "." + Шаблон + " КАК " + ТекПоле.Имя + Шаблон;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	ТекущийТекстЗапросаДополнительныеПоля = ТекущийТекстЗапросаДополнительныеПоля 
		+ ?(ТекущийТекстЗапросаДополнительныеПоля = "", "", ",") + Символы.ПС 
		+ "МАКСИМУМ(ОбъединенныйЗапрос.ИндексыОбластей) КАК ИндексыОбластей";
	ТекущийТекстЗапросаДополнительныеПоляИтоги = ТекущийТекстЗапросаДополнительныеПоляИтоги
		+ ?(ТекущийТекстЗапросаДополнительныеПоляИтоги = "", "", ",") + Символы.ПС + "МАКСИМУМ(ИндексыОбластей)";
	
	ТекущийТекстЗапросаДополнительныеПоля = ТекущийТекстЗапросаДополнительныеПоля
		+ ?(ТекущийТекстЗапросаДополнительныеПоля = "", "", ",") + Символы.ПС 
		+ "МАКСИМУМ(СведеньяПоАвтомобилю.ДатаПоступленияАвтомобиля) КАК ДатаПоступленияАвтомобиля";
	ТекущийТекстЗапросаДополнительныеПоляИтоги = ТекущийТекстЗапросаДополнительныеПоляИтоги
		+ ?(ТекущийТекстЗапросаДополнительныеПоляИтоги = "", "", ",") + Символы.ПС + "МАКСИМУМ(ДатаПоступленияАвтомобиля)";
	
	ТекущийТекстЗапросаДополнительныеПоля = ТекущийТекстЗапросаДополнительныеПоля 
		+ ?(ТекущийТекстЗапросаДополнительныеПоля = "", "", ",") + Символы.ПС 
		+ "МАКСИМУМ(СведеньяПоАвтомобилю.Местонахождения) КАК Местонахождения";
	ТекущийТекстЗапросаДополнительныеПоляИтоги = ТекущийТекстЗапросаДополнительныеПоляИтоги 
		+ ?(ТекущийТекстЗапросаДополнительныеПоляИтоги = "", "", ",") + Символы.ПС + "МАКСИМУМ(Местонахождения)";
	
	ТекущийТекстЗапросаДополнительныеПоля = ТекущийТекстЗапросаДополнительныеПоля
		+ ?(ТекущийТекстЗапросаДополнительныеПоля = "", "", ",") + Символы.ПС 
		+ "МАКСИМУМ(СведеньяПоАвтомобилю.Зарезервировал) КАК Зарезервировал";
	ТекущийТекстЗапросаДополнительныеПоляИтоги = ТекущийТекстЗапросаДополнительныеПоляИтоги 
		+ ?(ТекущийТекстЗапросаДополнительныеПоляИтоги = "", "", ",") + Символы.ПС + "МАКСИМУМ(Зарезервировал)";
	
	ТекущийТекстЗапросаВыборка = ТекущийТекстЗапросаВыборка 
		+ ?(ТекущийТекстЗапросаВыборка = "", "", ",") + Символы.ПС 
		+ "ПРЕДСТАВЛЕНИЕ(ОбъединенныйЗапрос.Автомобиль) КАК АвтомобильПредставление";
	СтруктураУсловия = Новый Структура;
	Для Каждого ЭлементОтбора Из ПараметрыОтчета.ФильтрыОтчета.Строки Цикл
		// не используем элемент отбора
		Если НЕ ЭлементОтбора.Использование Тогда 
			Продолжить; 
		КонецЕсли;
		СтруктураУсловия.Вставить(ЭлементОтбора.ЛевоеЗначение, СформироватьСтрокуВидаСравнения(ЭлементОтбора.ВидСравнения));
	КонецЦикла;
		
	ТекстПромежуточногоЗапроса = "";
	ТекстПромежуточногоЗапроса2 = "";
	Для Каждого ТекПоля из СтруктураПолей Цикл
		ПроверкаНаСоединение = "";
		ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса 
		+ ?(ПустаяСтрока(ТекстПромежуточногоЗапроса), "", Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС);
		ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса + " ВЫБРАТЬ";
		ТекстВложенногоЗапроса = "(ВЫБРАТЬ";
		УбратьЗапятую = Истина;	
		ЕстьКомплект = Ложь;
		Для Каждого ТекГруппировка из СтруктураГруппировок Цикл
			ТекПоле = ТекПоля.Значение.Поля[ТекГруппировка.Ключ];
			Если ТекПоле = "NULL" Тогда
				ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса 
				+ ?(УбратьЗапятую, "", ",") + Символы.ПС + "NULL КАК " + ТекГруппировка.Ключ;
			Иначе
				ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса
				+ ?(УбратьЗапятую, "", ",") + Символы.ПС + ТекПоля.Ключ + "." 
				+ ТекГруппировка.Ключ + " КАК " + ТекГруппировка.Ключ;
				ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + ?(УбратьЗапятую, "", ",") 
				+ Символы.ПС + ТекПоле + " КАК " + ТекГруппировка.Ключ;
			КонецЕсли;
			УбратьЗапятую = Ложь;
		КонецЦикла;              
			
		ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса + "," + Символы.ПС 
							+ ТекПоля.Значение.ИндексыОбластей + " КАК ИндексыОбластей";
		
		Если ТекПоля.Ключ = "ДанныеРегистраАвтомобили" ИЛИ ТекПоля.Ключ = "ДанныеРегистраОпцииАвтомобилей"
			ИЛИ ТекПоля.Ключ = "ИсторияОбслуживания" Тогда
			ТекстВложенногоЗапроса = ТекстВложенногоЗапроса+Символы.ПС + "ИЗ " + СтруктураЗапросовОтборов[ТекПоля.Ключ];
		Иначе
			ТекстВложенногоЗапроса = ТекстВложенногоЗапроса+Символы.ПС + "ИЗ " + ТекПоля.Значение.Выборка+" КАК ТаблицаЗапроса";
		КонецЕсли;
		
		ЕстьОпции = ТекПоля.Значение.Поля.Свойство("Опции") ИЛИ ТекПоля.Значение.Поля.Свойство("Сумма");
		ЕстьКомплекты = ТекПоля.Значение.Поля.Свойство("Номенклатура") 
				ИЛИ ТекПоля.Значение.Поля.Свойство("ХарактеристикаНоменклатуры");
		КопияДляСвязанныхДокуменов = "";
			
		ТекстДополнения = ПолучитьСтруктуруДополнительныхЗапросов2(ТекПоля, ПараметрыОтчета);
		Если НЕ ПустаяСтрока(ТекстДополнения) Тогда
			ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + Символы.ПС + ТекстДополнения;
		КонецЕсли;
			
		Для Каждого ТекТаблица Из ТекПоля.Значение.ДопТаблицы Цикл
			УсловиеТекстВложенногоЗапроса = (ТекТаблица.Ключ = "СвязанныеДокументыПА" И ЕстьОпции) 
				ИЛИ (ТекТаблица.Ключ = "СвязанныеДокументыРА" И (ЕстьКомплекты ИЛИ ЕстьОпции));
			Если УсловиеТекстВложенногоЗапроса Тогда
				ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса, "//@ОбъединенныйЗапрос@",
							СтруктураДополнительныхЗапросов[ТекТаблица.Ключ + "Объединенный"]);
			Иначе                                                              
				ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + Символы.ПС + СтруктураДополнительныхЗапросов[ТекТаблица.Ключ];
			КонецЕсли;
			Если ТекТаблица.Ключ = "Товары" Тогда
				ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса, "@ИмяДокумента@", ТекПоля.Ключ);
			КонецЕсли;
		КонецЦикла;
			
		ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса + Символы.ПС + "ИЗ" + Символы.ПС + ТекстВложенногоЗапроса;
		ТекстОтбора = ?(ПустаяСтрока(ТекПоля.Значение.Отборы),
					"", СтруктураЗапросовОтборов[ТекПоля.Значение.Отборы]) + ") КАК " + ТекПоля.Ключ;
		ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса + Символы.ПС + ТекстОтбора;
		Если СтрДлина(ТекстПромежуточногоЗапроса) > 25000 И ПустаяСтрока(ТекстПромежуточногоЗапроса2) Тогда
			ТекстПромежуточногоЗапроса2 = ТекстПромежуточногоЗапроса;
			ТекстПромежуточногоЗапроса = "";
		КонецЕсли;
	КонецЦикла;
		
	СтрокаУсловия=" ГДЕ (НЕ ОбъединенныйЗапрос.Автомобиль ЕСТЬ NULL)";
		
	Для Каждого ТекУсловие Из СтруктураУсловия Цикл
		СтрокаУсловия = СтрокаУсловия + " И " 
			+ СтрЗаменить(СтрЗаменить(ТекУсловие.Значение, "#", "ОбъединенныйЗапрос." + ТекУсловие.Ключ), 
			"&", "&" + ТекУсловие.Ключ);
	КонецЦикла;												  
		
	Если НЕ ПустаяСтрока(ТекстПромежуточногоЗапроса2) Тогда
		ТекущийТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ" + Символы.ПС + ТекущийТекстЗапросаВыборка;
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + ?(ТекущийТекстЗапросаДополнительныеПоля = "", "", "," 
										+ Символы.ПС + ТекущийТекстЗапросаДополнительныеПоля);
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + ?(ТекущийТекстЗапросаПоказатели = "", "", "," 
										+ Символы.ПС + ТекущийТекстЗапросаПоказатели);
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + " ИЗ (" + Символы.ПС 
										+ ТекстПромежуточногоЗапроса2 + ") КАК ОбъединенныйЗапрос";
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + СтруктураДополнительныхЗапросов.СведеньяПоАвтомобилю;
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + СтрокаУсловия;
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + ТекущийТекстЗапросаСгруппировать;
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + "ИТОГИ";
		ТекущийТекстЗапроса = ТекущийТекстЗапроса 
				+ ?(ТекущийТекстЗапросаДополнительныеПоляИтоги = "", "", Символы.ПС + ТекущийТекстЗапросаДополнительныеПоляИтоги); 
		ДополнительныеПоляИтогиТекст = ?(ТекущийТекстЗапросаДополнительныеПоляИтоги = "", "", ",");
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + ?(ТекущийТекстЗапросаПоказателиИтоги = "", "", 
								ДополнительныеПоляИтогиТекст + Символы.ПС + ТекущийТекстЗапросаПоказателиИтоги);
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + "ПО" + Символы.ПС + ТекущийТекстЗапросаВыборка;
		МассивЗапросов.Добавить(ТекущийТекстЗапроса);
	КонецЕсли;
		
	Если НЕ ПустаяСтрока(ТекстПромежуточногоЗапроса) Тогда
		ТекущийТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ" + Символы.ПС + ТекущийТекстЗапросаВыборка;
		ТекущийТекстЗапроса = ТекущийТекстЗапроса 
				+ ?(ТекущийТекстЗапросаДополнительныеПоля = "", "", "," + Символы.ПС + ТекущийТекстЗапросаДополнительныеПоля);
		ТекущийТекстЗапроса = ТекущийТекстЗапроса 
				+ ?(ТекущийТекстЗапросаПоказатели = "", "", "," + Символы.ПС + ТекущийТекстЗапросаПоказатели);
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + " ИЗ (" 
				+ Символы.ПС + ТекстПромежуточногоЗапроса + ") КАК ОбъединенныйЗапрос";
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + СтруктураДополнительныхЗапросов.СведеньяПоАвтомобилю;
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + СтрокаУсловия;
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + ТекущийТекстЗапросаСгруппировать;
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + "ИТОГИ";
		ТекущийТекстЗапроса = ТекущийТекстЗапроса 
				+ ?(ТекущийТекстЗапросаДополнительныеПоляИтоги = "", "" , Символы.ПС + ТекущийТекстЗапросаДополнительныеПоляИтоги);
		ДополнительныеПоляИтогиТекст = ?(ТекущийТекстЗапросаДополнительныеПоляИтоги = "", "", ",");		
		ТекущийТекстЗапроса = ТекущийТекстЗапроса 
				+ ?(ТекущийТекстЗапросаПоказателиИтоги = "", "", 
					ДополнительныеПоляИтогиТекст + Символы.ПС + ТекущийТекстЗапросаПоказателиИтоги);
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + "ПО" + Символы.ПС + ТекущийТекстЗапросаВыборка;
		Если Найти(ТекущийТекстЗапроса, "ТаблицаЗапроса.Ссылка КАК Документ") = 0 Тогда
			ТекущийТекстЗапроса = СтрЗаменить(ТекущийТекстЗапроса, "ОбъединенныйЗапрос.Документ.ХозОперация", "NULL");
			ТекущийТекстЗапроса = СтрЗаменить(ТекущийТекстЗапроса, "ОбъединенныйЗапрос.Документ.Номер", "NULL");
			ТекущийТекстЗапроса = СтрЗаменить(ТекущийТекстЗапроса, "ОбъединенныйЗапрос.Документ.Дата", "NULL");
		КонецЕсли;
		МассивЗапросов.Добавить(ТекущийТекстЗапроса);
	КонецЕсли;		
	Возврат МассивЗапросов;
		
КонецФункции

// Формирование набора данных для вывода отчета с помощью СКД
Функция ПолучитьДанныеДляКомпоновкиЭксперимент(ОтчетОбъект, СтруктураПолей, МассивГруппировок, ПараметрыОтчета) Экспорт
	
	СтруктураДополнительныхЗапросов = ПолучитьСтруктуруДополнительныхЗапросов();
	СтруктураЗапросовОтборов = ПолучитьСтруктуруЗапросовОтборов(СтруктураПолей);
	
	ТекстПромежуточногоЗапроса = "";
	
	СписокИзмерений = Новый СписокЗначений;
	МассивКолонок = Новый Массив;
	
	Индекс=0;
	Для Каждого ТекПоле Из ОтчетОбъект.КомпоновщикНастроекНастройки.Выбор.Элементы Цикл
		
		Если НЕ ТекПоле.Использование Тогда Продолжить; КонецЕсли;
		ТекПолеНайдено = Ложь;
		Для Каждого ТекГруппировки Из МассивГруппировок Цикл
			Если ТекГруппировки.Свойство(Строка(ТекПоле.Поле)) Тогда ТекПолеНайдено = Истина; Прервать; КонецЕсли;
		КонецЦикла;
		Если НЕ ТекПолеНайдено Тогда Продолжить; КонецЕсли;
		
		ИмяТекПоля = Строка(ТекПоле.Поле);
		Если МассивКолонок.Найти(ИмяТекПоля) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		МассивКолонок.Добавить(ИмяТекПоля);
		
		ТекИзмерение=ОтчетОбъект.Измерения.НайтиСтроки(Новый Структура("Имя", ИмяТекПоля));
		Если ТекИзмерение.Количество() > 0 Тогда
			СписокИзмерений.Добавить(Индекс, ИмяТекПоля);
			Индекс = Индекс+1;
		КонецЕсли;
	КонецЦикла;
	КоличествоИзмерений = СписокИзмерений.Количество();
	
	Данные = Новый ТаблицаЗначений;
	Для Каждого ТекКолонка Из ОтчетОбъект.КомпоновщикНастроекНастройки.Выбор.Элементы Цикл
		НазваниеКолонки = Строка(ТекКолонка.Поле);
		Если Данные.Колонки.Найти(НазваниеКолонки) = Неопределено Тогда
			Данные.Колонки.Добавить(НазваниеКолонки);
		КонецЕсли;
	КонецЦикла;
	
	Для ТекущийНомерВременнойТаблицы = 1 По 7 Цикл
		ТекстПромежуточногоЗапроса = "";
		ТекущийТекстЗапросаВыборка = "";
		ТекущиеПоля = Новый Структура;
		
		Для Каждого ТекПоля из СтруктураПолей Цикл
			Если ТекПоля.Значение.НомерВТ <> ТекущийНомерВременнойТаблицы Тогда
				Продолжить;
			КонецЕсли;
			Если ТекущиеПоля.Количество() = 0 Тогда
				ТекущиеПоля = ТекПоля.Значение.Поля;
			КонецЕсли;
			
			ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса
				+ ?(ПустаяСтрока(ТекстПромежуточногоЗапроса), "", Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС);
			ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса + " ВЫБРАТЬ";
			ТекстВложенногоЗапроса = "(ВЫБРАТЬ";
			УбратьЗапятую = Истина;
			ЕстьКомплект = Ложь;
			Для Каждого ТекГруппировка из МассивГруппировок[ТекПоля.Значение.НомерВТ-1] Цикл
				ТекПоле = ТекПоля.Значение.Поля[ТекГруппировка.Ключ];
				Если ТекПоле = "NULL" Тогда
					ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса 
					+ ?(УбратьЗапятую, "", ",") + Символы.ПС + "NULL КАК " + ТекГруппировка.Ключ;
				Иначе
					ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса
					+ ?(УбратьЗапятую, "", ",") + Символы.ПС + ТекПоля.Ключ + "." 
					+ ТекГруппировка.Ключ + " КАК " + ТекГруппировка.Ключ;
					ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + ?(УбратьЗапятую, "", ",") 
					+ Символы.ПС + ТекПоле + " КАК " + ТекГруппировка.Ключ;
				КонецЕсли;
				УбратьЗапятую = Ложь;
			КонецЦикла;
				
			ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса + "," + Символы.ПС 
				+ ТекПоля.Значение.ИндексыОбластей + " КАК ИндексыОбластей";
			
			Если ТекПоля.Ключ = "ДанныеРегистраАвтомобили" ИЛИ ТекПоля.Ключ = "ДанныеРегистраОпцииАвтомобилей"
				ИЛИ ТекПоля.Ключ = "ИсторияОбслуживания" Тогда
				ТекстВложенногоЗапроса = ТекстВложенногоЗапроса+Символы.ПС + "ИЗ " + СтруктураЗапросовОтборов[ТекПоля.Ключ];
			Иначе
				ТекстВложенногоЗапроса = ТекстВложенногоЗапроса+Символы.ПС + "ИЗ " + ТекПоля.Значение.Выборка+" КАК ТаблицаЗапроса";
			КонецЕсли;
			
			ЕстьОпции = ТекПоля.Значение.Поля.Свойство("Опции") ИЛИ ТекПоля.Значение.Поля.Свойство("Сумма");
			ЕстьКомплекты = ТекПоля.Значение.Поля.Свойство("Номенклатура") 
					ИЛИ ТекПоля.Значение.Поля.Свойство("ХарактеристикаНоменклатуры");
			КопияДляСвязанныхДокуменов = "";
				
			ТекстДополнения = ПолучитьСтруктуруДополнительныхЗапросов2(ТекПоля, ПараметрыОтчета);
			Если НЕ ПустаяСтрока(ТекстДополнения) Тогда
				ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + Символы.ПС + ТекстДополнения;
			КонецЕсли;
				
			Для Каждого ТекТаблица Из ТекПоля.Значение.ДопТаблицы Цикл
				УсловиеТекстВложенногоЗапроса = (ТекТаблица.Ключ = "СвязанныеДокументыПА" И ЕстьОпции) 
					ИЛИ (ТекТаблица.Ключ = "СвязанныеДокументыРА" И (ЕстьКомплекты ИЛИ ЕстьОпции));
				Если УсловиеТекстВложенногоЗапроса Тогда
					ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса, "//@ОбъединенныйЗапрос@",
								СтруктураДополнительныхЗапросов[ТекТаблица.Ключ + "Объединенный"]);
				Иначе
					ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + Символы.ПС + СтруктураДополнительныхЗапросов[ТекТаблица.Ключ];
				КонецЕсли;
				Если ТекТаблица.Ключ = "Товары" Тогда
					ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса, "@ИмяДокумента@", ТекПоля.Ключ);
				КонецЕсли;
			КонецЦикла;
				
			ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса + Символы.ПС + "ИЗ" + Символы.ПС + ТекстВложенногоЗапроса;
			ТекстОтбора = ?(ПустаяСтрока(ТекПоля.Значение.Отборы),
						"", СтруктураЗапросовОтборов[ТекПоля.Значение.Отборы]) + ") КАК " + ТекПоля.Ключ;
			ТекстПромежуточногоЗапроса = ТекстПромежуточногоЗапроса + Символы.ПС + ТекстОтбора;
			
		КонецЦикла;
		
		Если ПустаяСтрока(ТекстПромежуточногоЗапроса) Тогда Продолжить; КонецЕсли;
		
		Для Каждого КлючЗначение Из ТекущиеПоля Цикл
			
			ИмяТекПоля = КлючЗначение.Ключ;
			
			ТекущийТекстЗапросаВыборка = ТекущийТекстЗапросаВыборка + ?(ТекущийТекстЗапросаВыборка = "", "", ",")
				+ Символы.ПС + "ОбъединенныйЗапрос." + ИмяТекПоля + " КАК " + ИмяТекПоля;
			Шаблоны = ОтчетОбъект.Измерения.НайтиСтроки(Новый Структура("Имя", ИмяТекПоля));
			Шаблон = "";
			Если Шаблоны.Количество() > 0 Тогда
				Шаблон = Шаблоны[0].Шаблон;
			КонецЕсли;
			Если НЕ ПустаяСтрока(Шаблон) Тогда
				КолИтераций = СтрЧислоВхождений(Шаблон, ",");
				Для Ном = 1 по КолИтераций Цикл
					Позиция = Найти(Шаблон, ",");
					ИмяПоля = СокрЛП(Лев(Шаблон, Позиция - 1));
					ТекущийТекстЗапросаВыборка = ТекущийТекстЗапросаВыборка + ?(ТекущийТекстЗапросаВыборка = "", "", ",")
						+ Символы.ПС + "ОбъединенныйЗапрос." + ИмяТекПоля + "." + ИмяПоля + " КАК " + ИмяТекПоля + ИмяПоля;
					Шаблон = Сред(Шаблон, Позиция + 1);
				КонецЦикла;
				ТекущийТекстЗапросаВыборка = ТекущийТекстЗапросаВыборка + ?(ТекущийТекстЗапросаВыборка = "", "", ",") 
					+ Символы.ПС + "ОбъединенныйЗапрос." + ИмяТекПоля + "." + Шаблон + " КАК " + ИмяТекПоля + Шаблон;
			КонецЕсли;
			
		КонецЦикла;
		
		ТекущийТекстЗапросаВыборка = ТекущийТекстЗапросаВыборка 
			+ ?(ТекущийТекстЗапросаВыборка = "", "", ",") + Символы.ПС 
			+ "ПРЕДСТАВЛЕНИЕ(ОбъединенныйЗапрос.Автомобиль) КАК АвтомобильПредставление," + Символы.ПС
			+ "ОбъединенныйЗапрос.ИндексыОбластей КАК ИндексыОбластей";
		
		ТекущийТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ" + Символы.ПС + ТекущийТекстЗапросаВыборка;
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + " ИЗ (" + Символы.ПС 
										+ ТекстПромежуточногоЗапроса + ") КАК ОбъединенныйЗапрос";
		ТекущийТекстЗапроса = ТекущийТекстЗапроса + Символы.ПС + "ГДЕ (НЕ ОбъединенныйЗапрос.Автомобиль ЕСТЬ NULL)";
		
		Запрос = Новый Запрос(ТекущийТекстЗапроса);
		ЗаполнитьНастройкиОтчета(ОтчетОбъект, Запрос);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Для Каждого СтрокаРезультата Из РезультатЗапроса.Выгрузить() Цикл
			Если СтрокаРезультата.Автомобиль.Пустая() Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = Данные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезультата);
		КонецЦикла;
		
	КонецЦикла;
	
	Если Данные.Количество() > 0 Тогда
		Данные.Сортировать("АвтомобильПредставление, Период");
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Данные", Данные);
	Результат.Вставить("СписокИзмерений", СписокИзмерений);
	Возврат Результат;
КонецФункции

// Функция формирования табличного документа
Функция СформироватьТабДокумент(ОтчетОбъект, ДокументРезультат, ПараметрыОтчета, ДеревоФиксированныхПолей)
		
	СтруктураПолей = Новый Структура;
	СтруктураГруппировок = Новый Структура;
	Запрос2 = Неопределено;
	
	ОбработкаПолей(ОтчетОбъект, СтруктураПолей, СтруктураГруппировок, ДеревоФиксированныхПолей);
	
	МассивЗапросов = ПолучитьТекстЗапроса(ОтчетОбъект, СтруктураПолей, СтруктураГруппировок, ПараметрыОтчета);
	
	РезультатЗапроса = Новый ДеревоЗначений();
	
	Если МассивЗапросов.Количество() > 0 Тогда
		
		Запрос = Новый Запрос(МассивЗапросов[0]);
		
		Если МассивЗапросов.Количество()=2 Тогда
			Запрос2 = Новый Запрос(МассивЗапросов[1]);
		КонецЕсли;
		
		Для Каждого ЭлементОтбора Из ПараметрыОтчета.ФильтрыОтчета.Строки Цикл
			// не используем элемент отбора
			Если НЕ ЭлементОтбора.Использование Тогда Продолжить; КонецЕсли;
			Запрос.УстановитьПараметр(ЭлементОтбора.ЛевоеЗначение,ЭлементОтбора.ПравоеЗначение);
			Если Запрос2<>Неопределено Тогда
				Запрос2.УстановитьПараметр(ЭлементОтбора.ЛевоеЗначение,ЭлементОтбора.ПравоеЗначение);
			КонецЕсли;
		КонецЦикла;
		
		ЗаполнитьНастройкиОтчета(ОтчетОбъект, Запрос);
		Если Запрос2<>Неопределено Тогда
			ЗаполнитьНастройкиОтчета(ОтчетОбъект, Запрос2);
		КонецЕсли;
		
		СписокИзмерений = Новый СписокЗначений();
		МассивКолонок = Новый Массив;
		
		МассивКолонок.Добавить("ИндексыОбластей");
		МассивКолонок.Добавить("Зарезервировал");
		МассивКолонок.Добавить("Местонахождения");
		МассивКолонок.Добавить("ДатаПоступленияАвтомобиля");
		
		Индекс=0;
		Для Каждого ТекПоле Из ОтчетОбъект.ДоступныеПоля Цикл
			
			Если НЕ ТекПоле.Использование Тогда Продолжить; КонецЕсли;
			Если НЕ СтруктураГруппировок.Свойство(ТекПоле.Имя) Тогда Продолжить; КонецЕсли;
			
			МассивКолонок.Добавить(ТекПоле.Имя);
			
			Если ТекПоле.Измерение Тогда 
				СписокИзмерений.Добавить(Индекс,ТекПоле.Имя);
				Индекс = Индекс+1;
				
				ТекИзмерение=ОтчетОбъект.Измерения.НайтиСтроки(Новый Структура("Имя", ТекПоле.Имя));
				Если ТекИзмерение.Количество() > 0 Тогда
					Шаблон = ТекИзмерение[0].Шаблон;
				Иначе
					Шаблон = "";
				КонецЕсли;
				Если НЕ ПустаяСтрока(Шаблон) Тогда
					КолИтераций = СтрЧислоВхождений(Шаблон,",");
					Для Ном = 1 по КолИтераций Цикл
						Позиция=Найти(Шаблон,",");
						ИмяПоля = СокрЛП(Лев(Шаблон, Позиция-1));
						МассивКолонок.Добавить(ТекПоле.Имя+ИмяПоля);
						Шаблон=Сред(Шаблон,Позиция+1);
					КонецЦикла;
					МассивКолонок.Добавить(ТекПоле.Имя+Шаблон);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		МассивКолонок.Добавить("АвтомобильПредставление");
		КоличествоИзмерений = СписокИзмерений.Количество();
		
		Для Каждого ТекКолонка Из МассивКолонок Цикл
			РезультатЗапроса.Колонки.Добавить(ТекКолонка);
		КонецЦикла;
		
		ВыгрузитьЗапрос(
			Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, СписокИзмерений[0]),
			0,
			СписокИзмерений,
			КоличествоИзмерений,
			МассивКолонок,
			РезультатЗапроса.Строки
		);
		
		Если Запрос2<>Неопределено Тогда
			ОбъединнитьРезультатЗапроса(
				Запрос2.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Автомобиль"),
				СписокИзмерений,
				КоличествоИзмерений,
				МассивКолонок,
				РезультатЗапроса.Строки
			);
		КонецЕсли;
		
		РезультатЗапроса.Строки.Сортировать("АвтомобильПредставление, Период", Истина);
		
	КонецЕсли;
	
	МакетОтчета = ПолучитьМакетОтчета(ОтчетОбъект, СтруктураПолей, ПараметрыОтчета);
	
	Если ТипЗнч(ДокументРезультат) <> Тип("ТабличныйДокумент") Тогда
		ДокументРезультат = Новый ТабличныйДокумент();
	Иначе
		ДокументРезультат.Очистить();
	КонецЕсли;
	
	ЗаголовокТаблицы = МакетОтчета.ПолучитьОбласть("ЗаголовокШаблон");
	ДокументРезультат.Вывести(ЗаголовокТаблицы, 1, "ЗаголовокШаблон");
	
	Если РезультатЗапроса.Строки.Количество()>0 Тогда
		ВывестиОтчет(РезультатЗапроса.Строки, 0, СписокИзмерений, КоличествоИзмерений, ДокументРезультат,
			МакетОтчета, ПараметрыОтчета);
	КонецЕсли;
		
	Возврат ДокументРезультат;
КонецФункции

// Функция формирования табличного документа в новом режиме
Функция СформироватьТабДокументЭксперимент(ОтчетОбъект, ДокументРезультат, ПараметрыОтчета, ДеревоФиксированныхПолей)
		
	СтруктураПолей = Новый Структура;
	МассивГруппировок = Новый Массив;
	
	ОбработкаПолейЭксперимент(ОтчетОбъект, СтруктураПолей, МассивГруппировок, ДеревоФиксированныхПолей);
	
	ДанныеКомпоновки = ПолучитьДанныеДляКомпоновкиЭксперимент(ОтчетОбъект, СтруктураПолей, МассивГруппировок, ПараметрыОтчета);
	
	МакетОтчета = ПолучитьМакетОтчета(ОтчетОбъект, СтруктураПолей, ПараметрыОтчета);
	
	Если ТипЗнч(ДокументРезультат) <> Тип("ТабличныйДокумент") Тогда
		ДокументРезультат = Новый ТабличныйДокумент();
	Иначе
		ДокументРезультат.Очистить();
	КонецЕсли;
	
	ЗаголовокТаблицы = МакетОтчета.ПолучитьОбласть("ЗаголовокШаблон");
	ДокументРезультат.Вывести(ЗаголовокТаблицы, 1, "ЗаголовокШаблон");
	
	Если ДанныеКомпоновки.Данные.Количество() > 0 Тогда
		
		СписокИзмерений = ДанныеКомпоновки.СписокИзмерений;
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки = КомпоновщикМакета.Выполнить(
			ПолучитьИзВременногоХранилища(ПараметрыОтчета.АдресСхемыКомпоновкиДанных),
			ОтчетОбъект.КомпоновщикНастроекНастройки,,,
			Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
			
		Если ОтчетОбъект.Период.ДатаОкончания = '00010101000000' Тогда
			МакетКомпоновки.ЗначенияПараметров["ДатаКон"].Значение = '00010101000000';
		Иначе
			МакетКомпоновки.ЗначенияПараметров["ДатаКон"].Значение = КонецДня(ОтчетОбъект.Период.ДатаОкончания);
		КонецЕсли;
		
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ВнешниеДанные = Новый Структура;
		ВнешниеДанные.Вставить("ОбъединенныеДанные", ДанныеКомпоновки.Данные);
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеДанные);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		
		РезультатКомпоновки = Новый ДеревоЗначений;
		ПроцессорВывода.УстановитьОбъект(РезультатКомпоновки);
		ПроцессорВывода.Вывести(ПроцессорКомпоновки);
		
		Если РезультатКомпоновки.Строки.Количество()>0 Тогда
			ВывестиОтчет(РезультатКомпоновки.Строки, 0, СписокИзмерений, СписокИзмерений.Количество(),
				ДокументРезультат, МакетОтчета, ПараметрыОтчета);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДокументРезультат;
КонецФункции

// Настройка доступных полей отчета
Процедура ПолучитьДоступныеПоля(ОтчетОбъект, ПараметрыОтчета, МакетЗаполнения, СтруктураФиксированныхПолей)
		
	ОтчетОбъект.ДоступныеПоля.Очистить();
	Если ЗащищенныеФункцииАльфаАвтоСервер.ПодсистемаДоступна("ЗащитаАвтосалон") Тогда
		ОбластьДанных = МакетЗаполнения.ПолучитьОбласть("Данные");
	Иначе
		ОбластьДанных = МакетЗаполнения.ПолучитьОбласть("ДанныеАвтосервис");
	КонецЕсли;
		
	Для к = 1 по ОбластьДанных.ВысотаТаблицы Цикл
			
		ТекДанные = ОбластьДанных.ПолучитьОбласть("R" + к);
		ПараметрыПоля = Новый Структура();
			
		ПутьКДанным  		 = ТекДанные.Область(1, 1).Текст;
		Представление		 = ТекДанные.Область(1, 2).Текст;
		Использование		 = ТекДанные.Область(1, 3).Текст;
		ТипПоля				 = ТекДанные.Область(1, 5).Текст;
		ЗначениеПоУмолчанию  = ТекДанные.Область(1, 7).Текст;
		Шаблон		 		 = ТекДанные.Область(1, 9).Текст;
			
		Если ПустаяСтрока(Представление) Тогда
			Представление = ПутьКДанным;
			Пока Найти(Представление, ".") > 0 Цикл
				Представление = Сред(Представление, Найти(Представление, ".") + 1);
			КонецЦикла;
		КонецЕсли;
		ПараметрыПоля.Вставить("Представление", Представление);
			
		ИспользованиеПоля = Новый Структура();
			
		Если НЕ ПустаяСтрока(Использование) Тогда
			НовоеПоле = ОтчетОбъект.ДоступныеПоля.Добавить();
			НовоеПоле.Имя = СтрЗаменить(ПутьКДанным,".","");
			НовоеПоле.Измерение = Найти(Использование, "Измерение") > 0;
			НовоеПоле.ДополнительноеПоле = Найти(Использование, "ДополнительноеПоле")   > 0;
			НовоеПоле.Данные = Найти(Использование, "Данные") > 0;
			НовоеПоле.Представление = Представление;
			НовоеПоле.Использование = Истина;
			НовоеПоле.Фиксированное = Найти(Использование, "Фиксированное") > 0;
			НовоеПоле.Тип = ТипПоля;
			Если ЗначениеПоУмолчанию = "" Тогда
				НовоеПоле.ЗначениеПоУмолчанию = "NULL";
			Иначе
				НовоеПоле.ЗначениеПоУмолчанию = ЗначениеПоУмолчанию;
			КонецЕсли;
				
			Если НовоеПоле.Фиксированное Тогда
				СтруктураФиксированныхПолей.Вставить(НовоеПоле.Имя);
			Конецесли;
				
			Если НовоеПоле.Измерение Тогда
				НовоеИзмерение = ОтчетОбъект.Измерения.Добавить();
				НовоеИзмерение.Использование = Истина;
				НовоеИзмерение.Представление = Представление;
				НовоеИзмерение.Имя = НовоеПоле.Имя;
				НовоеИзмерение.Шаблон = Шаблон;
			КонецЕсли;
				
			Если НовоеПоле.ДополнительноеПоле Тогда
				НовыйПоказатель = ОтчетОбъект.ДополнительныеПоля.Добавить();
				НовыйПоказатель.Имя           = НовоеПоле.Имя;
				НовыйПоказатель.Родитель = СтрЗаменить(Использование, "ДополнительноеПоле","");
				НовыйПоказатель.Представление = Представление;
				НовыйПоказатель.Использование = Истина;
			КонецЕсли;
				
			Если НовоеПоле.Данные Тогда
				НовыйПоказатель = ОтчетОбъект.ИтоговыеДополнительныеПоля.Добавить();
				НовыйПоказатель.Имя           = НовоеПоле.Имя;
				НовыйПоказатель.Представление = Представление;
				НовыйПоказатель.Использование = Истина;
			КонецЕсли;
				
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура ПреобразоватьСтруктуруДополнительныхЗапросов(ОтчетОбъект, ПараметрыОтчета)
		
	Для Каждого ТекТаблица Из ПараметрыОтчета.СтруктураДополнительныхЗапросовЭксперемент Цикл
		СтруктураОбъединения = Новый Структура("Итоги, Группировки", Новый Структура, Новый Структура);
			
		Для Каждого ТекВложеннаяТаблица Из ТекТаблица.Значение Цикл
			Для Каждого ТекПоле Из ТекВложеннаяТаблица.Значение.Итоги Цикл
				СтруктураОбъединения["Итоги"].Вставить(ТекПоле.Ключ);
			КонецЦикла;
			Для Каждого ТекПоле Из ТекВложеннаяТаблица.Значение.Группировки Цикл
				СтруктураОбъединения["Группировки"].Вставить(ТекПоле.Ключ);
			КонецЦикла;
		КонецЦикла;
			
		Для Каждого ТекТипОбъединения Из СтруктураОбъединения Цикл
			Для Каждого ТекПолеОбъединения Из ТекТипОбъединения.Значение Цикл
				Для Каждого ТекВложеннаяТаблица Из ТекТаблица.Значение Цикл
					Если НЕ ТекВложеннаяТаблица.Значение[ТекТипОбъединения.Ключ].Свойство(ТекПолеОбъединения.Ключ) Тогда
						ТекВложеннаяТаблица.Значение[ТекТипОбъединения.Ключ].Вставить(ТекПолеОбъединения.Ключ,"NULL");
					КонецЕсли;	
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
			
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьДеревоНастройкиДополнительныхПолей(ОтчетОбъект,
	ПараметрыОтчета,
	СтрокаДерева,
	МакетЗаполнения,
	ФиксированнаяСтрокаДерева,
	СтруктураФиксированныхПолей)
		
	Если ЗащищенныеФункцииАльфаАвтоСервер.ПодсистемаДоступна("ЗащитаАвтосалон") Тогда
		ОбластьПолей = МакетЗаполнения.ПолучитьОбласть("ДополнительныеПоля");
	Иначе
		ОбластьПолей = МакетЗаполнения.ПолучитьОбласть("ДополнительныеПоляАвтосервис");
	КонецЕсли;
	
	НоваяСтрока = Неопределено;
	НоваяГруппа = Неопределено;
	НоваяФиксированнаяГруппа = Неопределено;
		
	Для к = 1 по ОбластьПолей.ВысотаТаблицы Цикл
			
		ОбластьПоля = ОбластьПолей.ПолучитьОбласть("R" + к);
		ПутьКДанным   = ОбластьПоля.Область(1, 1).Текст;
		Представление = ОбластьПоля.Область(1, 2).Текст;
		Использование = ВРег(СокрЛП(ОбластьПоля.Область(1, 3).Текст))<>"ЛОЖЬ";
		ДопТаблицы = ОбластьПоля.Область(1, 6).Текст;
		Выборка =  ОбластьПоля.Область(1, 7).Текст;
		СоставнойВывод = ОбластьПоля.Область(1, 9).Текст;
			
		Группа = (ОбластьПоля.Область(1, 1).Автоотступ = 0) и (ОбластьПоля.Область(1, 1).Отступ = 0);
		Если СокрЛП(ПутьКДанным)="" И СокрЛП(Представление)<>"" Тогда
				
			Если НЕ ПараметрыОтчета.СтруктураДополнительныхЗапросовЭксперемент.Свойство(НоваяГруппа.Имя) Тогда
				ПараметрыОтчета.СтруктураДополнительныхЗапросовЭксперемент.Вставить(НоваяГруппа.Имя, Новый Структура);
			КонецЕсли;
				
			Если НЕ ПараметрыОтчета.СтруктураДополнительныхЗапросовЭксперемент[НоваяГруппа.Имя].Свойство(Представление) Тогда 
				ПараметрыОтчета.СтруктураДополнительныхЗапросовЭксперемент[НоваяГруппа.Имя].Вставить(Представление,
					Новый Структура("Итоги, Группировки, Фиксированные, Источник, Отбор", Новый Структура, Новый Структура,
					Новый Массив, Выборка, ОбластьПоля.Область(1, 8).Текст));
				СтруктураСоставногоВывода = ПараметрыОтчета.СтруктураДополнительныхЗапросовЭксперемент[НоваяГруппа.Имя][Представление];
				Если НЕ ПустаяСтрока(ДопТаблицы) Тогда
					ИменаФиксированных = ОбластьПоля.Область(1, 5).Текст;
					СтруктураСоставногоВывода = СтруктураСоставногоВывода["Фиксированные"];
					//СтруктураСоставногоВывода.Колонки.Добавить("Имя");
					//СтруктураСоставногоВывода.Колонки.Добавить("Значение");
					Количество = СтрЧислоВхождений(ДопТаблицы,",");
					Для Ном=1 по Количество Цикл
						ТекПозиция = Найти(ДопТаблицы,",");
						ТекСтрока = СокрЛП(Лев(ДопТаблицы,ТекПозиция-1));
						ТекПозиция2 = Найти(ИменаФиксированных,",");
						ТекСтрока2 = СокрЛП(Лев(ИменаФиксированных,ТекПозиция2-1));
						ЗначениеПолей = Новый Структура("Имя,Значение", ТекСтрока2, ТекСтрока);
						СтруктураСоставногоВывода.Добавить(ЗначениеПолей);
						
						//НоваяСтрока1.Имя = ТекСтрока2;
						//НоваяСтрока1.Значение = ТекСтрока;
						ИменаФиксированных = СокрЛП(Сред(ИменаФиксированных,ТекПозиция2+1));
						ДопТаблицы = СокрЛП(Сред(ДопТаблицы,ТекПозиция+1));
					КонецЦикла;
					ЗначениеПолей = Новый Структура("Имя,Значение", СокрЛП(ИменаФиксированных), СокрЛП(ДопТаблицы));
					СтруктураСоставногоВывода.Добавить(ЗначениеПолей);
				КонецЕсли;
			КонецЕсли;
				
			СтруктураСоставногоВывода=ПараметрыОтчета.СтруктураДополнительныхЗапросовЭксперемент[НоваяГруппа.Имя][Представление];
				
			Если Найти(ОбластьПоля.Область(1, 4).Текст,"(Итог)")>0 Тогда
				СтруктураСоставногоВывода["Итоги"].Вставить(НоваяСтрока.Имя, СокрЛП(СтрЗаменить(ОбластьПоля.Область(1, 4).Текст,"(Итог)","")));
			Иначе
				СтруктураСоставногоВывода["Группировки"].Вставить(НоваяСтрока.Имя, СокрЛП(ОбластьПоля.Область(1, 4).Текст));
			КонецЕсли;
		ИначеЕсли Группа Тогда
				
			НоваяГруппа = СтрокаДерева.Добавить();
			НоваяГруппа.Использование = Использование;
			НоваяГруппа.Группа = Группа;
			НоваяГруппа.ПутьКДанным = ПутьКДанным;
			НоваяГруппа.Поле = Представление;
			НоваяГруппа.Имя = СтрЗаменить(ПутьКДанным,".","");
			НоваяГруппа.Выборка = Выборка;
			НоваяГруппа.ДопТаблицы = ОбластьПоля.Область(1, 8).Текст;
			НоваяГруппа.ИндексыОбластей = ОбластьПоля.Область(1, 10).Текст;
				
			НоваяФиксированнаяГруппа = ФиксированнаяСтрокаДерева.Добавить();
			НоваяФиксированнаяГруппа.Использование = Истина;
			НоваяФиксированнаяГруппа.Группа = Группа;
			НоваяФиксированнаяГруппа.ПутьКДанным = ПутьКДанным;
			НоваяФиксированнаяГруппа.Поле = Представление;
			НоваяФиксированнаяГруппа.Имя = СтрЗаменить(ПутьКДанным,".","");
			НоваяФиксированнаяГруппа.Выборка = Выборка;
			НоваяФиксированнаяГруппа.ДопТаблицы = ОбластьПоля.Область(1, 8).Текст;
			НоваяФиксированнаяГруппа.ИндексыОбластей = ОбластьПоля.Область(1, 10).Текст;
			
			Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтчета, "ЭкспериментальныйРежим", Ложь) Тогда
				НоваяГруппа.НомерВТ = ОбластьПоля.Область(1, 11).Текст;
				НоваяФиксированнаяГруппа.НомерВТ = ОбластьПоля.Область(1, 11).Текст;
			КонецЕсли;
				
		Иначе
			Если СтруктураФиксированныхПолей.Свойство(ПутьКДанным) Тогда
				НоваяСтрока = НоваяФиксированнаяГруппа.ПолучитьЭлементы().Добавить();
			Иначе
				НоваяСтрока = НоваяГруппа.ПолучитьЭлементы().Добавить();
			КонецЕсли;
				
			НоваяСтрока.Использование = ((Использование И НоваяГруппа.Использование) ИЛИ СтруктураФиксированныхПолей.Свойство(ПутьКДанным));
			Если НЕ НоваяСтрока.Использование Тогда
				НоваяГруппа.Использование = 2;
			КонецЕсли;
			НоваяСтрока.Группа = Группа;
			НоваяСтрока.ПутьКДанным = ПутьКДанным;
			НоваяСтрока.Поле = Представление;
			НоваяСтрока.Имя = СтрЗаменить(ПутьКДанным,".","");
			НоваяСтрока.Выборка = Выборка;
			НоваяСтрока.ДопТаблицы = ДопТаблицы;
		КонецЕсли;
			
		СтруктураСоставногоВывода="";
		Если НЕ ПустаяСтрока(СоставнойВывод) Тогда
			Количество = СтрЧислоВхождений(СоставнойВывод,",");
			СтруктураСоставногоВывода = Новый Структура;
				
			Для Ном=1 по Количество Цикл
				ТекПозиция = Найти(СоставнойВывод,",");
				ТекСтрока = Лев(СоставнойВывод,ТекПозиция-1);
				СтруктураСоставногоВывода.Вставить(СтрЗаменить(ТекСтрока," ",""),ТекСтрока);
				СоставнойВывод = Сред(СоставнойВывод,ТекПозиция+1);
			КонецЦикла;
			СтруктураСоставногоВывода.Вставить(СтрЗаменить(СоставнойВывод," ",""),СоставнойВывод);
			ПараметрыОтчета.СтруктураСложныхСоставныхПолей.Вставить(НоваяГруппа.Имя,СтруктураСоставногоВывода);
		КонецЕсли;
			
	КонецЦикла
		
КонецПроцедуры

// Стандартная процедура настройки построителя отчета 
Процедура ЗаполнитьНачальныеНастройки(ОтчетОбъект, ПараметрыОтчета, ДеревоФиксированныхПолей, ИмяМакета = Неопределено) Экспорт
	
	МакетЗаполнения = ПолучитьМакет("ДополнительныеПоля");
	
	СтруктураФиксированныхПолей = Новый Структура;
	
	ПолучитьДоступныеПоля(ОтчетОбъект, ПараметрыОтчета, МакетЗаполнения, СтруктураФиксированныхПолей);
	
	ЗаполнитьДеревоНастройкиДополнительныхПолей(ОтчетОбъект, ПараметрыОтчета, ОтчетОбъект.ДеревоНастройкиДополнительныхПолей.ПолучитьЭлементы(), МакетЗаполнения, ДеревоФиксированныхПолей.ПолучитьЭлементы(), СтруктураФиксированныхПолей);
	
	ПреобразоватьСтруктуруДополнительныхЗапросов(ОтчетОбъект, ПараметрыОтчета);
	
КонецПроцедуры	//	ЗаполнитьНачальныеНастройки()

#Область Печать

// Обработчик печати
//
// Параметры:
//  МассивОбъектов         - Массив           - массив объектов для формирования печатных форм
//  ПараметрыПечати        - Структура        - дополнительные параметры печати
//  КоллекцияПечатныхФорм  - Таблица значений - таблица с идентификаторами печатных форм и макетами печати
//  ОбъектыПечати          - Структура        - список областьей печатной формы в разрезе документов
//  ПараметрыВывода        - Структура        - дополнительтые параметры вывода формы.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИсторияАвтомобилей") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ИсторияАвтомобилей",
		НСтр("ru = 'История автомобилей'"),
		ПечатьИсторииАвтомобилей(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры // Печать()

// Формирует данные в табличном документе.
//
Функция ПечатьИсторииАвтомобилей(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	Если ПараметрыПечати.Свойство("ДанныеВХранилище") Тогда
	
		ДанныеИзХранилища = ПолучитьИзВременногоХранилища(ПараметрыПечати.ДанныеВХранилище);
		
		Для Каждого КлючЗначение Из ДанныеИзХранилища Цикл
			ПараметрыПечати.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
		
	КонецЕсли;
	
	// Подготовим данные отчета перед формированием
	ОтчетОбъект  = ПараметрыПечати.ОтчетИсторияАвтомобилей;
	ПараметрыОтчета = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыПечати.ПараметрыОтчета);
	ПараметрыОтчета.Вставить("ФильтрыОтчета", ПараметрыПечати.Отбор);
	
	ТабличныйДокумент = Новый ТабличныйДокумент();
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИсторияАвтомобилей";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	ДеревоФиксированныхПолей = ПараметрыПечати.ДеревоФиксированныхПолей;
	
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПечати.ПараметрыОтчета, "ЭкспериментальныйРежим", Ложь) Тогда
		ПараметрыОтчета.Вставить("АдресСхемыКомпоновкиДанных", ПараметрыПечати.АдресСхемыКомпоновкиДанных);
		ТабличныйДокумент = СформироватьТабДокументЭксперимент(ОтчетОбъект, Неопределено, ПараметрыОтчета, ДеревоФиксированныхПолей);
	Иначе
		ТабличныйДокумент = СформироватьТабДокумент(ОтчетОбъект, Неопределено, ПараметрыОтчета, ДеревоФиксированныхПолей);
	КонецЕсли;
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	Если ПараметрыПечати.Свойство("ДанныеВХранилище") Тогда
		
		Для Каждого КлючЗначение Из ДанныеИзХранилища Цикл
			ПараметрыПечати.Удалить(КлючЗначение.Ключ);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьИсторииАвтомобилей()

#КонецОбласти

#КонецОбласти

#КонецЕсли