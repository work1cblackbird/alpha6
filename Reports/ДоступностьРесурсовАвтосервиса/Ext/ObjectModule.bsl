// Модуль отчета "ДоступностьРесурсовАвтосервиса"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - При компоновке результата
//
// Параметры:
//  ДокументРезультат	 - ТабличныйДокумент				 - Документ для вывода отчета
//  ДанныеРасшифровки	 - ДанныеРасшифровкиКомпоновкиДанных - Данные расшифровки
//  СтандартнаяОбработка - Булево							 - Признак стандартной обработки.
//
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	// Получим настройки скд
	ВариантНастроек = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ВариантОтчета");
	Если ВариантНастроек <> Неопределено Тогда
		ВариантНастроек = ВариантНастроек.Значение;
	КонецЕсли;
	
	НачалоПериода = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	Если НачалоПериода <> Неопределено Тогда
		НачалоПериода = НачалоПериода.Значение;
	КонецЕсли;

	КонецПериода = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	Если КонецПериода <> Неопределено Тогда
		КонецПериода = КонецПериода.Значение;
	КонецЕсли;

	
	// Определим вариант настроек и получим ресурсы и скроем отбор скд
	Если ВариантНастроек = "ПоИсполнителям" Тогда
		ИмяРесурса = "Сотрудник";
		ИмяРегистра = "Сотрудники";
		ТаблицаРесурсов = ПолучитьТаблицуРесурсов(ИмяРегистра, ЭтотОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы, ИмяРесурса);
	ИначеЕсли ВариантНастроек = "ПоЦехам"  Тогда
		ИмяРесурса = "Цех";
		ИмяРегистра = "Цеха";
		ТаблицаРесурсов = ПолучитьТаблицуРесурсов(ИмяРегистра, ЭтотОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы, ИмяРесурса);
	КонецЕсли;
		
	Итог = ПланированиеРесурсов.ПолучитьГрафикиРабот(
		НачалоПериода,
		КонецПериода,
		ТаблицаРесурсов,
		2,
		Справочники.ГрафикиРаботы.ПустаяСсылка(),
		Истина);
		
	СтрокиВыходных = Итог.НайтиСтроки(Новый Структура("ВидДня", Перечисления.ВидДня.Выходной));
	Для Каждого Строка Из СтрокиВыходных Цикл
		Итог.Удалить(Строка);	
	КонецЦикла;
		
	Если ВариантНастроек = "ПоИсполнителям" Тогда
		Итог.Колонки.Ресурс.Имя = "Сотрудник";
	ИначеЕсли ВариантНастроек = "ПоЦехам"  Тогда
		Итог.Колонки.Ресурс.Имя = "Цех";
	КонецЕсли;
	
	Итог.Колонки.Добавить("ПериодНеделя");
	Итог.Колонки.Добавить("ПериодМесяц");
	Итог.Колонки.Добавить("ПериодКвартал");
	Итог.Колонки.Добавить("ПериодГод");

	Для Каждого Строка Из Итог Цикл
		Строка.ПериодНеделя 	= НачалоНедели(Строка.Дата);   
		Строка.ПериодМесяц 		= НачалоМесяца(Строка.Дата);
		Строка.ПериодКвартал 	= НачалоКвартала(Строка.Дата);
		Строка.ПериодГод 		= НачалоГода(Строка.Дата);
	КонецЦикла;
	
	// Создадим внешний набор данных
	ВнешниеНаборыДанных = Новый Структура;
	
	Если Итог = Неопределено Тогда
		
		Итог = Новый ТаблицаЗначений;
		
		// Добавим колонки в тз
		Итог.Колонки.Добавить("ВидИнтервала");
		Итог.Колонки.Добавить("НачалоРабочегоВремени");
		Итог.Колонки.Добавить("КонецРабочегоВремени");
		Итог.Колонки.Добавить("Продолжительность");
		Итог.Колонки.Добавить("Дата");
		
		Итог.Колонки.Добавить("ПериодНеделя");
		Итог.Колонки.Добавить("ПериодМесяц");
		Итог.Колонки.Добавить("ПериодКвартал");
		Итог.Колонки.Добавить("ПериодГод");

		Если ВариантНастроек = "ПоИсполнителям" Тогда
			Итог.Колонки.Добавить("Сотрудник");
		ИначеЕсли ВариантНастроек = "ПоЦехам"  Тогда
			Итог.Колонки.Добавить("Цех");
		КонецЕсли;

		
	КонецЕсли; 	
	
	ВнешниеНаборыДанных.Вставить("ТаблицаЗагрузкиРесурсов",Итог);
	
	// Выводим отчет.
 	ОтчетыПлатформаСервер.ВывестиОтчет(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка,ВнешниеНаборыДанных);
	// MIKOLV
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция - Получить таблицу ресурсов
//
// Параметры:
//  Ресурс	 - Строка								 	 - Наименование справочника
//  Отбор	 - КоллекцияЭлементовОтбораКомпоновкиДанных	 - Отбор СКД.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Выгрузка результата запроса.
//
Функция ПолучитьТаблицуРесурсов(ИмяРегистра, Отбор, ИмяРесурса)
	
	Текст =
		"ВЫБРАТЬ
		|	Ресурсы.Ссылка КАК Ресурс,
		|	ВЫБОР
		|		КОГДА Ресурсы.ГрафикРаботы <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
		|			ТОГДА Ресурсы.ГрафикРаботы
		|		ИНАЧЕ Ресурсы.ПодразделениеКомпании.ГрафикРаботы
		|	КОНЕЦ КАК График
		|ИЗ
		|	Справочник."+ИмяРегистра+" КАК Ресурсы
		|ГДЕ
		|	Ресурсы.ПометкаУдаления = ЛОЖЬ
		|	И НЕ Ресурсы.ФлагУволен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ресурсы.Наименование";
	
	Если ИмяРесурса = "Цех" Тогда 
		Текст = СтрЗаменить(Текст, "И НЕ Ресурсы.ФлагУволен", ""); 	
	КонецЕсли;
	
	ПостроительЗапроса = Новый ПостроительЗапроса(Текст);
	ПостроительЗапроса.ЗаполнитьНастройки();
	
	// Поля компоновки
	ПолеРесурса = Новый ПолеКомпоновкиДанных(ИмяРесурса);
	
	Для каждого ТекОтбор Из Отбор Цикл
		Если ТекОтбор.ЛевоеЗначение = ПолеРесурса И ТекОтбор.Использование Тогда
			НовыйОтбор = ПостроительЗапроса.Отбор.Добавить("Ресурс");
			НовыйОтбор.ВидСравнения = ПолучитьВидСравнения(ТекОтбор.ВидСравнения);
			Если ЗначениеЗаполнено(ТекОтбор.ПравоеЗначение) Тогда
				НовыйОтбор.Значение = ТекОтбор.ПравоеЗначение;
				НовыйОтбор.Использование = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПостроительЗапроса.Выполнить();
	
	Возврат ПостроительЗапроса.Результат.Выгрузить();

КонецФункции

// Функция - Преобразует виды сравнений СКД в тип "ВидСравнения"
//
// Параметры:
//  ВидСравненияСКД	 - ВидСравненияКомпоновкиДанных	 - Сравнение СКД.
// 
// Возвращаемое значение:
//  ВидСравнения - Вид сравнения.
//
Функция ПолучитьВидСравнения(ВидСравненияСКД)
	
	Если ВидСравненияСКД = ВидСравненияКомпоновкиДанных.Больше Тогда
		Результат = ВидСравнения.Больше;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда
		Результат = ВидСравнения.БольшеИлиРавно;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.ВИерархии Тогда
		Результат = ВидСравнения.ВИерархии;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.ВСписке Тогда
		Результат = ВидСравнения.ВСписке;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
		Результат = ВидСравнения.ВСпискеПоИерархии;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.Меньше Тогда
		Результат = ВидСравнения.Меньше;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда
		Результат = ВидСравнения.МеньшеИлиРавно;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.НеВИерархии Тогда
		Результат = ВидСравнения.НеВИерархии;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.НеВСписке Тогда
		Результат = ВидСравнения.НеВСписке;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
		Результат = ВидСравнения.НеВСпискеПоИерархии;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.НеРавно Тогда
		Результат = ВидСравнения.НеРавно;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.НеСодержит Тогда
		Результат = ВидСравнения.НеСодержит;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.Равно Тогда
		Результат = ВидСравнения.Равно;
	ИначеЕсли ВидСравненияСКД = ВидСравненияКомпоновкиДанных.Содержит Тогда
		Результат = ВидСравнения.Содержит;
	Иначе
		// Не нашли соответствие - не применяем отбор
		Результат = Неопределено;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ПолучитьВидСравнения()

#КонецОбласти

#КонецЕсли