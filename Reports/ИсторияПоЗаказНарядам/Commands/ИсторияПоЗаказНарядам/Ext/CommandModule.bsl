#Область ОбработчикиСобытий

// Обработчик события нажатия кнопки "История по закз нарядам".
//
// Параметры:
//  ПараметрКоманды - Произвольный - В параметр передается значение от источника, в котором реализована команда
//  ПараметрыВыполненияКоманды - ПараметрыВыполненияКоманды - В обработчике команды можно
//  изменить значение свойств параметра Окно и Уникальность. 
//
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	/// !!! реализовать когда будет переработан отчет
	//Отчет = Отчеты.ИсторияПоЗаказНарядам.Создать();
	//Отчет.ЗаполнитьНачальныеНастройки();
	//МетаданныеОтчета = Отчет.Метаданные();
	//
	//// параметры
	//ВариантОтчета = Отчет.СхемаКомпоновкиДанных.ВариантыНастроек.Основной;
	//ВариантОтчета.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаНачала",    НачалоГода(ТекущаяДата()));
	//ВариантОтчета.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаОкончания", ТекущаяДата());
	//ВариантОтчета.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ВалютаОтчета",  Константы.ВалютаУправленческогоУчетаКомпании.Получить());
	//
	//// фильтры
	//ОтчетыПлатформаСервер.КомпоновщикУстановитьОтбор(ВариантОтчета.Настройки, "Заказчик", Объект);
	//ИмяФормыОтчета = МетаданныеОтчета.ПолноеИмя() + ".ФормаНастроек";
	//
	//СтруктураПараметров = Новый Структура();
	//СтруктураПараметров.Вставить("Вариант",               ВариантОтчета.Настройки);
	//СтруктураПараметров.Вставить("ЗаполнитьНастроки",     Ложь);
	//СтруктураПараметров.Вставить("КлючВарианта",          ВариантОтчета.Имя);
	//СтруктураПараметров.Вставить("ПредставлениеВарианта", ВариантОтчета.Представление);
	//
	//ФормаНастроек = ПолучитьФорму(ИмяФормыОтчета, СтруктураПараметров);
	//ФормаНастроек.Открыть();
	
	Если ПараметрКоманды = Неопределено ИЛИ ПараметрКоманды.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	// фильтры
	ОтчетОтбор = Новый Структура;
	Если ТипЗнч(ПараметрКоманды) = Тип("СправочникСсылка.Контрагенты") Тогда
		ОтчетОтбор.Вставить("Заказчик", ПараметрКоманды);
	ИначеЕсли ТипЗнч(ПараметрКоманды) = Тип("СправочникСсылка.Автомобили") Тогда
		ОтчетОтбор.Вставить("Автомобиль", ПараметрКоманды);
	Иначе
		
		ПараметрыОтчета  = ПолучитьПараметрыОтчета(ПараметрКоманды);
		
		ОтчетОтбор.Вставить("Автомобиль", ПолучитьАвтомобиль(ПараметрКоманды));
		
		ОтчетыПлатформаКлиент.ОткрытьОтчет(
			"Отчет.ИсторияПоЗаказНарядам",
			"ДляЗаказНаряда",,,,
			ОтчетОтбор,
			НачалоМесяца(ПараметрыОтчета.Дата),
			Дата(1,1,1));
		
		Возврат;
		
	КонецЕсли;
	ОткрытьФорму(
		"Отчет.ИсторияПоЗаказНарядам.Форма", 
		Новый Структура("Отбор,КлючВарианта,СформироватьПриОткрытии", ОтчетОтбор, "ДляЗаказНаряда", Истина), 
		ПараметрыВыполненияКоманды.Источник, 
		ПараметрыВыполненияКоманды.Уникальность,
		ПараметрыВыполненияКоманды.Окно
	);
	
КонецПроцедуры //ОбработкаКоманды()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает найденный автомобиль
//
&НаСервере
Функция ПолучитьАвтомобиль(Документ)
	Если ЕстьРеквизит(Документ, "СводныйРемонтныйЗаказ") Тогда
		Возврат Документ.СводныйРемонтныйЗаказ.Автомобиль;
	Иначе
		Возврат Документ.Автомобиль;
	КонецЕсли;
КонецФункции

// Функция получения параметров отчета
//
&НаСервере
Функция ПолучитьПараметрыОтчета(Документ)
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Дата", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Дата"));
	ПараметрыОтчета.Вставить("Автомобиль", ПолучитьАвтомобиль(Документ));
	
	Возврат ПараметрыОтчета;
	
КонецФункции // ПолучитьПараметрыОтчета()

#КонецОбласти