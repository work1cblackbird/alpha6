
#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	НачальныеЗначенияСпискаДокументов = ПараметрыВыполненияКоманды.Источник.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокДокументов"));
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("НачальныеЗначенияСпискаДокументов", НачальныеЗначенияСпискаДокументов.Значение);
	
	ОбработкаОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРедактированияИнтервалов", ЭтотОбъект, ПараметрыВыполненияКоманды);
	
	ОткрытьФорму("Отчет.АнализРаботыПользователей.Форма.ФормаВыбораДокументов", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность,,, ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // ОбработкаКоманды()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ОбработкаРедактированияИнтервалов(РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОповещения = Неопределено Тогда
		СписокДокументов = ДополнительныеПараметры.Источник.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокДокументов"));
		СписокДокументов.Значение = РезультатОповещения;
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_ОбработкаРедактированияИнтервалов()

#КонецОбласти