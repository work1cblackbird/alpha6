#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Стандартная процедура настройки схемы компоновщика данных
//
// Параметры:
//  ФормаОтчета - УправляемаФорма - Форма отчета, в которой возникло событие.
//
Процедура ПриИзмененииНастроек(ФормаОтчета) Экспорт
	
	// Уберем видимость параметров отчета
	Если ФормаОтчета.Элементы.Найти("ГруппаПараметры") <> Неопределено Тогда
		ФормаОтчета.Элементы.ГруппаПараметры.Видимость = Ложь;
	КонецЕсли;
	
	СписокДокументов = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокДокументов"));
	ТекущееЗначение = СписокДокументов.Значение;
	Если ТипЗнч(ТекущееЗначение) = Тип("ХранилищеЗначения") Тогда
		ТекущееЗначение = СписокДокументов.Значение.Получить();
	КонецЕсли;
	Если ТекущееЗначение = Неопределено ИЛИ ТекущееЗначение = "" ИЛИ ТекущееЗначение.Количество() = 0 Тогда
		ВсеДокументы = Новый СписокЗначений();
		ВсеДокументы.Добавить("ВсеДокументы", "<Все документы>");
		СписокДокументов.Значение = Новый ХранилищеЗначения(ВсеДокументы);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьНачальныеНастройки()

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Запрос = ПолучитьОсновнойЗапрос();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаРаботыПользователей", Запрос.Выполнить());
	
	ОтчетыПлатформаСервер.ВывестиОтчет(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, ВнешниеНаборыДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует и возвращает сутруктуру отборов и соеденение для запроса
Функция ПолучитьСтрокиТабЧастей(Документ) Экспорт
	СтрокаСоединения = "";
	СтрокаКоличество = "";
	ТекстСоединения  = "ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДокументИмя.ТабЧастьИмя КАК ИмяТЧ ПО ДокументИмя.Ссылка = ИмяТЧ.Ссылка"+Символы.ПС;
	ТекстКоличество  = "КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИмяТЧ.НомерСтроки)";
	Если Документ.ТабличныеЧасти.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Для Каждого ТабЧасть Из Документ.ТабличныеЧасти Цикл
		ТекстВременный = СтрЗаменить(ТекстСоединения, "ДокументИмя", Документ.Имя);
		ТекстВременный = СтрЗаменить(ТекстВременный, "ИмяТЧ", Документ.Имя+ТабЧасть.Имя);
		ТекстВременный = СтрЗаменить(ТекстВременный, "ТабЧастьИмя", ТабЧасть.Имя);
		СтрокаСоединения = СтрокаСоединения + ТекстВременный;
		СтрокаКоличество = СтрокаКоличество+?(ПустаяСтрока(СтрокаКоличество),"","+") + СтрЗаменить(ТекстКоличество, "ИмяТЧ", Документ.Имя+ТабЧасть.Имя);
	КонецЦикла;
	СтрокаКоличество = СтрокаКоличество + " КАК КоличествоСтрокДокумента";
	СтруктураСтрок = Новый Структура;
	СтруктураСтрок.Вставить("СтрокаСоединение", СтрокаСоединения);
	СтруктураСтрок.Вставить("СтрокаКоличество", СтрокаКоличество);
	Возврат СтруктураСтрок;
КонецФункции

// Функция формирует и возвращает текст запроса отчета
Функция ПолучитьОсновнойЗапрос() Экспорт
	
	Запрос = Новый Запрос;
	
	ПараметрСписокДокументов = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокДокументов")).Значение;
	НачалоПериода = ОтчетыПлатформаСервер.КомпоновщикПолучитьЗначениеПараметра("НачалоПериода", КомпоновщикНастроек.Настройки);
	КонецПериода  = ОтчетыПлатформаСервер.КомпоновщикПолучитьЗначениеПараметра("КонецПериода",  КомпоновщикНастроек.Настройки);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",  КонецДня(КонецПериода));
	
	Если ТипЗнч(ПараметрСписокДокументов) = Тип("ХранилищеЗначения") Тогда
		СписокДокументов = ПараметрСписокДокументов.Получить();
	Иначе
		СписокДокументов = Новый СписокЗначений;
		СписокДокументов.Добавить("ВсеДокументы", "<Все документы>");
	КонецЕсли;
	
	// подготовим флаги и переменные обработки для цикла
	ТекстЗапросаДинамич = ПолучитьМакет("ОболочкаЗапроса").ПолучитьТекст();
	ТекстВнутреннегоЗапроса = "";
	ТекстВременный = "";
	ТекстПервого = ПолучитьМакет("ПервыйВСписке").ПолучитьТекст();
	ТекстОстальных = ПолучитьМакет("СписокДокумент").ПолучитьТекст();
	ПроверятьНаличиеВСписке = (СписокДокументов.НайтиПоЗначению("ВсеДокументы") = Неопределено);
	Первый =Истина;
	ДелатьСвязь = Ложь;
	
	Для Каждого ТекущаяСтрока Из КомпоновщикНастроек.Настройки.Выбор.Элементы Цикл
		Если ТекущаяСтрока.Поле = Новый ПолеКомпоновкиДанных("КоличествоСтрокДокумента") И ТекущаяСтрока.Использование Тогда
			ДелатьСвязь = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Документ Из Метаданные.Документы Цикл
		// Проверим доступность документа
		Если НЕ ПравоДоступа("Чтение", Документ) Тогда
			Продолжить;
		КонецЕсли;
		
		// Запрос формируем только из тех документов, где есть все нужные нам показатели
		Если НЕ Метаданные.ОбщиеРеквизиты.ХозОперация.Состав.Найти(Документ).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать
			ИЛИ НЕ Метаданные.ОбщиеРеквизиты.Автор.Состав.Найти(Документ).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать
			ИЛИ НЕ Метаданные.ОбщиеРеквизиты.ПодразделениеКомпании.Состав.Найти(Документ).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать Тогда
				Продолжить;
		КонецЕсли;
		
		Если ПроверятьНаличиеВСписке Тогда
			Если СписокДокументов.НайтиПоЗначению(Документ.Имя) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если Первый Тогда
			ТекстВременный = ТекстПервого;
		Иначе
			ТекстВременный = ТекстОстальных;
		КонецЕсли;
		
		Если НЕ Первый Тогда
			ТекстВременный = "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + ТекстВременный;
		КонецЕсли;
		
		// Не у всех документов имеется реквизит "Хоз. операция"
		Если НЕ Метаданные.ОбщиеРеквизиты.ХозОперация.Состав.Найти(Документ).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать Тогда
			ТекстВременный = СтрЗаменить(ТекстВременный, "ДокументИмя.ХозОперация", """"+Документ.Синоним+"""");
		КонецЕсли;
		
		ТекстВременный = СтрЗаменить(ТекстВременный, "ДокументИмя", Документ.Имя);
		ТекстВременный = СтрЗаменить(ТекстВременный, "ДокументСиноним", """"+Документ.Синоним+"""");
		СтрокиТЧ = ПолучитьСтрокиТабЧастей(Документ);
		Если НЕ СтрокиТЧ = Неопределено И ДелатьСвязь Тогда
			ТекстВременный = СтрЗаменить(ТекстВременный, "//СТРОКА_КОЛИЧЕСТВО_СТРОК_ДОКУМЕНТА", СтрокиТЧ.СтрокаКоличество);
			ТекстВременный = СтрЗаменить(ТекстВременный, "//СОЕДИТЕНИЯ_С_ТАБЛИЦАМИ", СтрокиТЧ.СтрокаСоединение);
		Иначе
			ТекстВременный = СтрЗаменить(ТекстВременный, "//СТРОКА_КОЛИЧЕСТВО_СТРОК_ДОКУМЕНТА", "СУММА(0) КАК КоличествоСтрокДокумента");
		КонецЕсли;
		
		ТекстВнутреннегоЗапроса = ТекстВнутреннегоЗапроса + ТекстВременный;
		Первый = Ложь;
	КонецЦикла;
	ТекстЗапросаДинамич = СтрЗаменить(ТекстЗапросаДинамич, "//ТЕКСТВНУТРЕННЕГОЗАПРОСА", ТекстВнутреннегоЗапроса);
	
	Запрос.Текст = ТекстЗапросаДинамич;
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#КонецЕсли