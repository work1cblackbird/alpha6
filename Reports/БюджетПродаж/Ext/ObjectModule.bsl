#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
// Модуль отчета

#Область ОписаниеПеременных

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА
Перем ТекстЗапроса Экспорт;                            // хранит текст запроса отчета
Перем ПараметрыИспользованияПолейИПоказателей Экспорт; // хранит параметры использования полей и показателей
Перем ДеревоДоступныхПолей Экспорт;                    // хранит дерево доступных полей отчета
Перем СтруктураСвязиСвойств Экспорт;                   // хранит структуру связи свойств
Перем ПриемникПеретаскивания Экспорт;                  // хранит перетаскиваемый объект
Перем СтруктураНеСвязанныхПоказателей Экспорт;         // хранит структуру  не связанных показателей
Перем ДополнительныеПоляОтчета Экспорт;                // хранит дополнительные поля отчета

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// устанавливает интервал 
//
// Параметры
//  Изменение - число
//  ДатаНачалаПериодаФорыОтчета - Дата
//  ДатаКонцаФормыПериодаОтчета - Дата.
//
Процедура УстановитьИнтервал(Изменение=0, ДатаНачалаПериодаФормыОтчета="", ДатаКонцаФормыПериодаОтчета="") Экспорт
	
	Если ДатаНачалаПериодаФормыОтчета<>"" Тогда
		ДатаНачала = ДатаНачалаПериодаФормыОтчета;
	КонецЕсли;
	
	Если ДатаНачалаПериодаФормыОтчета<>"" Тогда
		ДатаКонца = ДатаКонцаФормыПериодаОтчета;
	КонецЕсли; 	
	
	Если Периодичность=Перечисления.ПериодичностьПланирования.Месяц Тогда
		ДатаНачала = НачалоМесяца(ДобавитьМесяц(ДатаНачала, Изменение));
		ДатаКонца  = КонецМесяца(ДобавитьМесяц(ДатаКонца,Изменение));
		Если ДатаКонца<ДатаНачала Тогда
			ДатаКонца = КонецМесяца(ДатаНачала);
		КонецЕсли;
		
	ИначеЕсли Периодичность=Перечисления.ПериодичностьПланирования.Квартал Тогда
		ДатаНачала = НачалоКвартала(ДобавитьМесяц(ДатаНачала, Изменение*3));
		ДатаКонца  = КонецКвартала(ДобавитьМесяц(ДатаКонца,Изменение*3));
        Если ДатаКонца<ДатаНачала Тогда
			ДатаКонца = КонецКвартала(ДатаНачала);
		КонецЕсли;
		
	ИначеЕсли Периодичность=Перечисления.ПериодичностьПланирования.Год Тогда
		ДатаНачала = НачалоГода(ДобавитьМесяц(ДатаНачала, Изменение*12));
		ДатаКонца  = КонецГода(ДобавитьМесяц(ДатаКонца,Изменение*12));
		Если ДатаКонца<ДатаНачала Тогда
			ДатаКонца = КонецГода(ДатаНачала);
		КонецЕсли;
		
	КонецЕсли;
	
	ДатаНачалаПериодаФорыОтчета = ДатаНачала;
	ДатаКонцаФормыПериодаОтчета = ДатаКонца;
КонецПроцедуры // УстановитьИнтервал()

// Специальная настройка измерений
//
// Без параметров
//
Процедура СпециальнаяНастройкаИзмерений() Экспорт
	
	// Уберем возможность выбора сценария, он всегда будет в Колонке, а также все виды периодичности.
	НайденнаяСтрока = ДеревоДоступныхПолей.Строки.Найти("СценарийПланирования", "Имя");
	НайденнаяСтрока.Измерение = Ложь;
	
	НайденнаяСтрока = ДеревоДоступныхПолей.Строки.Найти("ПериодМесяц", "Имя");
	ДеревоДоступныхПолей.Строки.Удалить(НайденнаяСтрока);

	НайденнаяСтрока = ДеревоДоступныхПолей.Строки.Найти("ПериодКвартал", "Имя");
	ДеревоДоступныхПолей.Строки.Удалить(НайденнаяСтрока);

	НайденнаяСтрока = ДеревоДоступныхПолей.Строки.Найти("ПериодГод", "Имя");
	ДеревоДоступныхПолей.Строки.Удалить(НайденнаяСтрока);
	    	
КонецПроцедуры // СпециальнаяНастройкаИзмерений()

// Стандартная процедура настройки построителя отчета 
//
// Параметры
//  ИмяМакета  - строка - название макета.
//
//  ИмяМакетаПараметров  - строка - название макета параметров
//
Процедура ЗаполнитьНачальныеНастройки(ИмяМакета, ИмяМакетаПараметров="Параметры") Экспорт
	
	ИмяМакетаПараметров = ?(ИмяМакета = "ТекстЗапросаБюджетПродажПоНоменклатуре","ПараметрыНоменклатуры","ПараметрыКатегорий");
	
	// Заполним структуру параметров
	СтруктураПараметрыЗаполнения = Новый Структура();
	СтруктураПараметрыЗаполнения.Вставить("ОтчетОбъект",            ЭтотОбъект);
	СтруктураПараметрыЗаполнения.Вставить("ИмяМакетаТекстаЗапроса", ИмяМакета);
	СтруктураПараметрыЗаполнения.Вставить("ИмяМакетаПараметров",    ИмяМакетаПараметров);
	
	// Ограничим тип поля номенклатура и тип номенклатуры
	ПолеНоменклатура = ПостроительОтчета.ДоступныеПоля.Найти("Номенклатура");
	Если ПолеНоменклатура<>Неопределено Тогда
		ПолеНоменклатура.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура"); 		
	КонецЕсли;
	
	ПолеТипНоменклатуры = ПостроительОтчета.ДоступныеПоля.Найти("ТипНоменклатуры");
	Если ПолеТипНоменклатуры<>Неопределено Тогда
		ПолеТипНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ТипыНоменклатуры");
	КонецЕсли;
	
	Периодичность = Перечисления.ПериодичностьПланирования.Месяц;
	// Установим отбор по периодичности сценария планирования
	ПостроительОтчета.Параметры.Вставить("Периодичность", Периодичность);
	
	СпециальнаяНастройкаИзмерений();
	УстановитьИнтервал();
	
КонецПроцедуры	//	ЗаполнитьНачальныеНастройки()

// Функция возвращает структуру форматирования полей
//
// Без параметров
//  
// Возвращаемое значение:
//  СтруктураФорматаПолей - структура.
//
Функция СтруктураФорматированияПолей() Экспорт

	СтруктураФорматаПолей = Новый Структура;
	
	// Если необходимо, добавим другие или переустановим строки форматирования полей
	
	Возврат СтруктураФорматаПолей;

КонецФункции	//	СтруктураФорматированияПолей()

// корректировка таблицы заголовка
Процедура ОбработкаТаблицыЗаголовка(ТаблицаЗаголовка) Экспорт
	
	НоваяСтрока = ТаблицаЗаголовка.Вставить(1);
	НоваяСтрока.Текст = "Периодичность: " + Строка(Периодичность);
	НоваяСтрока.ЦветТекста = ЦветаСтиля.ЦветФонаВыделенияПоля;
	НоваяСтрока.Шрифт = Новый Шрифт(ТаблицаЗаголовка[0].Шрифт,, 10, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

//////////////////////////////////////////////////////////////////////////////////
//// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ИмяРегистра = "БюджетПродаж";
ПромежуточныеЗначенияПостроителя = Новый Структура();
СтруктураНеСвязанныхПоказателей = Новый Структура();

#КонецОбласти

#КонецЕсли