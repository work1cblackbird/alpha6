#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Стандартная процедура настройки схемы компоновщика данных
//
// Параметры:
//  ФормаОтчета - УправляемаФорма - Форма отчета, в которой возникло событие.
//
Процедура ПриИзмененииНастроек(ФормаОтчета) Экспорт
	
	// Уберем видимость параметров отчета
	Если ФормаОтчета.Элементы.Найти("ГруппаПараметры") <> Неопределено Тогда
		ФормаОтчета.Элементы.ГруппаПараметры.Видимость = Ложь;
	КонецЕсли;
	
	КоличественныеГруппы = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КоличественныеГруппы"));
	ТекущееЗначение = КоличественныеГруппы.Значение.Получить();
	Если ТекущееЗначение = Неопределено ИЛИ ТекущееЗначение.Количество() = 0 Тогда
		
		КвалификаторЧисла = Новый КвалификаторыЧисла(15,0);
		КвалификаторСтроки = Новый КвалификаторыСтроки(40);
		
		ТаблицаКоличественныхГрупп = Новый ТаблицаЗначений();
		ТаблицаКоличественныхГрупп.Колонки.Добавить("КоличествоРемонтов", Новый ОписаниеТипов("Число", КвалификаторЧисла));
		ТаблицаКоличественныхГрупп.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", КвалификаторСтроки));
		
		НовыйПериод = ТаблицаКоличественныхГрупп.Добавить();
		НовыйПериод.КоличествоРемонтов = 3;
		НовыйПериод.Представление      = "До 3 раз.";
		НовыйПериод = ТаблицаКоличественныхГрупп.Добавить();
		НовыйПериод.КоличествоРемонтов = 7;
		НовыйПериод.Представление      = "От 4 до 7 раз.";
		НовыйПериод = ТаблицаКоличественныхГрупп.Добавить();
		НовыйПериод.КоличествоРемонтов = 10;
		НовыйПериод.Представление      = "От 8 до 10 раз.";
		НовыйПериод = ТаблицаКоличественныхГрупп.Добавить();
		НовыйПериод.КоличествоРемонтов = 20;
		НовыйПериод.Представление      = "От 11 до 20 раз.";
		НовыйПериод = ТаблицаКоличественныхГрупп.Добавить();
		НовыйПериод.КоличествоРемонтов = 30;
		НовыйПериод.Представление      = "От 21 до 30 раз.";
		НовыйПериод = ТаблицаКоличественныхГрупп.Добавить();
		НовыйПериод.КоличествоРемонтов = 50000;
		НовыйПериод.Представление      = "Более 30 раз.";
		
		КоличественныеГруппы.Значение = Новый ХранилищеЗначения(ТаблицаКоличественныхГрупп);
	КонецЕсли;
	
	СуммовыеГруппы = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СуммовыеГруппы"));
	ТекущееЗначение = СуммовыеГруппы.Значение.Получить();
	Если ТекущееЗначение = Неопределено ИЛИ ТекущееЗначение.Количество() = 0 Тогда
		
		КвалификаторЧисла = Новый КвалификаторыЧисла(15,2);
		КвалификаторСтроки = Новый КвалификаторыСтроки(40);
		
		ТаблицаСуммовыхГрупп = Новый ТаблицаЗначений();
		ТаблицаСуммовыхГрупп.Колонки.Добавить("СуммаРемонта", Новый ОписаниеТипов("Число", КвалификаторЧисла));
		ТаблицаСуммовыхГрупп.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", КвалификаторСтроки));
		
		НовыйПериод = ТаблицаСуммовыхГрупп.Добавить();
		НовыйПериод.СуммаРемонта  = 100;
		НовыйПериод.Представление = "До 100";
		НовыйПериод = ТаблицаСуммовыхГрупп.Добавить();
		НовыйПериод.СуммаРемонта  = 500;
		НовыйПериод.Представление = "От 100 до 500";
		НовыйПериод = ТаблицаСуммовыхГрупп.Добавить();
		НовыйПериод.СуммаРемонта  = 1000;
		НовыйПериод.Представление = "От 500 до 1000";
		НовыйПериод = ТаблицаСуммовыхГрупп.Добавить();
		НовыйПериод.СуммаРемонта  = 5000;
		НовыйПериод.Представление = "От 1000 до 5000";
		НовыйПериод = ТаблицаСуммовыхГрупп.Добавить();
		НовыйПериод.СуммаРемонта  = 10000;
		НовыйПериод.Представление = "От 5000 до 10000";
		НовыйПериод = ТаблицаСуммовыхГрупп.Добавить();
		НовыйПериод.СуммаРемонта  = 9999999999999;
		НовыйПериод.Представление = "Более 10000";
		
		СуммовыеГруппы.Значение = Новый ХранилищеЗначения(ТаблицаСуммовыхГрупп);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьНачальныеНастройки()

// формирует текст запроса
// 
// Возвращаемое значение:
//  Запрос - Сформированный запрос.
//
Функция ПолучитьОсновнойЗапрос() Экспорт
	
	Запрос = Новый Запрос;
	
	КоличественныеГруппы = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КоличественныеГруппы"));
	СуммовыеГруппы = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СуммовыеГруппы"));
	НачалоПериода = ОтчетыПлатформаСервер.КомпоновщикПолучитьЗначениеПараметра("НачалоПериода", КомпоновщикНастроек.Настройки);
	КонецПериода  = ОтчетыПлатформаСервер.КомпоновщикПолучитьЗначениеПараметра("КонецПериода",  КомпоновщикНастроек.Настройки);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",  КонецДня(КонецПериода));
	
	ТекстВыборкиИнтервалов = "";
	ТекстВыборкиИнтервалов3 = "";
	ТекстВыборкиИнтервалов2 = "";
	ТекстВыборкиИнтервалов4 = "";
	ТекстЗапросаРезультат = "";
	ТекстСоединенияИнтервалов = "";
	ТекстСоединенияИнтервалов2 = "";
	
	ТекстЗапросаРезультат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказНаряды.Ссылка КАК ЗаказНаряд,
	|	КорректировкаРеализации.Ссылка КАК Корректировка,
	|	КорректировкаРеализации.ДокументОснование,
	|	(КорректировкаРеализации.СуммаДокумента * КорректировкаРеализации.КурсДокумента / КорректировкаРеализации.КурсВалютыУпр) - (ЗаказНаряды.СуммаДокумента * ЗаказНаряды.КурсДокумента/ЗаказНаряды.КурсВалютыУпр) КАК СуммаДокумента
	|ПОМЕСТИТЬ
	|	ТаблицаКорректировок
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ЗаказНаряд КАК ЗаказНаряды
	|ПО
	|	КорректировкаРеализации.Сделка = ЗаказНаряды.Ссылка
	|ГДЕ
	|	КорректировкаРеализации.Проведен И 
	|	КорректировкаРеализации.Сделка ССЫЛКА Документ.ЗаказНаряд И 
	|	ЗаказНаряды.ДатаСоздания < &КонецПериода
	|	И ЗаказНаряды.ПометкаУдаления = ЛОЖЬ
	|{ГДЕ
	|	ЗаказНаряды.Заказчик.* КАК Заказчик,
	|	ЗаказНаряды.ВидРемонта.* КАК ВидРемонта,
	|	ЗаказНаряды.ПодразделениеКомпании.* КАК ПодразделениеКомпании,
	|	ЗаказНаряды.Менеджер.* КАК Менеджер,
	|	ЗаказНаряды.Автомобиль.* КАК Автомобиль,
	|	ЗаказНаряды.Цех.* КАК Цех,
	|	ЗаказНаряды.Мастер.* КАК Мастер,
	|	МИНИМУМ(ЗаказНаряды.ДатаСоздания) КАК ДатаПервогоРемонта,
	|	МАКСИМУМ(ЗаказНаряды.ДатаСоздания) КАК ДатаПоследнегоРемонта
	|}
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаКорректировок.ЗаказНаряд КАК Сделка,
	|	СУММА(ТаблицаКорректировок.СуммаДокумента) КАК СуммаДокумента
	|ПОМЕСТИТЬ
	|	ДокументКорректировкаРеализации
	|ИЗ
	|	ТаблицаКорректировок КАК ТаблицаКорректировок
	|ГДЕ
	|	(НЕ ТаблицаКорректировок.Корректировка В (ВЫБРАТЬ ДокументОснование ИЗ ТаблицаКорректировок))
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаКорректировок.ЗаказНаряд
	|;
	|
	|УНИЧТОЖИТЬ
	|	ТаблицаКорректировок
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказНаряды.Ссылка КАК Сделка,
	|	СУММА((АктыРазногласий.СуммаДокумента * АктыРазногласий.КурсДокумента / АктыРазногласий.КурсВалютыУпр) - (ЗаказНаряды.СуммаДокумента * ЗаказНаряды.КурсДокумента / ЗаказНаряды.КурсВалютыУпр)) КАК СуммаДокумента
	|ПОМЕСТИТЬ
	|	ДокументАктРазногласий
	|ИЗ
	|	Документ.ЗаказНаряд КАК ЗаказНаряды
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.АктРазногласий КАК АктыРазногласий
	|ПО
	|	ЗаказНаряды.Ссылка = АктыРазногласий.ДокументОснование
	|ГДЕ
	|	АктыРазногласий.Проведен И 
	|	ЗаказНаряды.ДатаСоздания < &КонецПериода
	|	И ЗаказНаряды.ПометкаУдаления = ЛОЖЬ
	|СГРУППИРОВАТЬ ПО
	|	ЗаказНаряды.Ссылка
	|{ГДЕ
	|	ЗаказНаряды.Заказчик.* КАК Заказчик,
	|	ЗаказНаряды.ВидРемонта.* КАК ВидРемонта,
	|	ЗаказНаряды.ПодразделениеКомпании.* КАК ПодразделениеКомпании,
	|	ЗаказНаряды.Менеджер.* КАК Менеджер,
	|	ЗаказНаряды.Автомобиль.* КАК Автомобиль,
	|	ЗаказНаряды.Цех.* КАК Цех,
	|	ЗаказНаряды.Мастер.* КАК Мастер,
	|	МИНИМУМ(ЗаказНаряды.ДатаСоздания) КАК ДатаПервогоРемонта,
	|	МАКСИМУМ(ЗаказНаряды.ДатаСоздания) КАК ДатаПоследнегоРемонта
	|}
	|;
	|";
	
	// Сформируем структуру строк и колонок отчета
	СписокПолей = ПолучитьПоляГруппировок(КомпоновщикНастроек);
	
	ЕстьИнтервалы = Ложь;
	// Определим таблицы интервалов сумм задолженностей
	Если НЕ СписокПолей.НайтиПоЗначению("ИнтервалСуммыРабот") = Неопределено Тогда
		ЗначениеСуммовыеГруппы = СуммовыеГруппы.Значение.Получить();
		Если ЗначениеСуммовыеГруппы.Количество()=0 Тогда
			НовыйПериод = ЗначениеСуммовыеГруппы.Добавить();
			НовыйПериод.СуммаРемонта	= 9999999999999;
			НовыйПериод.Представление	= "Все";
			СуммовыеГруппы.Значение = Новый ХранилищеЗначения(ЗначениеСуммовыеГруппы);
		КонецЕсли;
		ЗначениеСуммовыеГруппы.Сортировать("СуммаРемонта ВОЗР");
		ПревСумма = 0;
		ТекстИнтервалов="";
		Порядок = 0;
		Для Каждого ТекИнтервал Из ЗначениеСуммовыеГруппы Цикл
			ТекстИнтервалов = ТекстИнтервалов + ?(ТекстИнтервалов="","", "ОБЪЕДИНИТЬ ВСЕ ")+"
			|
			|ВЫБРАТЬ
			|	"+Формат(ПревСумма, "ЧРД=.; ЧН=0; ЧГ=")+" КАК МинПредел,
			|	"+Формат(ТекИнтервал.СуммаРемонта, "ЧРД=.; ЧН=0; ЧГ=")+" КАК МаксПредел,
			|	"""+ТекИнтервал.Представление+""" КАК Представление,
			|	"+Формат(Порядок, "ЧН=0; ЧГ=")+" КАК Порядок
			|";
			ПревСумма = ТекИнтервал.СуммаРемонта;
			Порядок = Порядок+1;
		КонецЦикла;
		
		ТекстЗапросаРезультат = ТекстЗапросаРезультат+"
		|ВЫБРАТЬ
		|	ОбъединеннаяТаблица.МинПредел КАК МинПредел,
		|	ОбъединеннаяТаблица.МаксПредел КАК МаксПредел,
		|	ОбъединеннаяТаблица.Представление КАК Представление,
		|	ОбъединеннаяТаблица.Порядок КАК Порядок
		|ПОМЕСТИТЬ
		|	ИнтервалыСумм
		|ИЗ("+ТекстИнтервалов+") КАК ОбъединеннаяТаблица
		|;
		|";
		
		ТекстВыборкиИнтервалов = ",
		|	ИтоговаяТаблицаОборотов.ИнтервалСуммыРабот КАК ИнтервалСуммыРабот,
		|	ИтоговаяТаблицаОборотов.ПорядокИнтервалаСуммыРабот КАК ПорядокИнтервалаСуммыРабот";
		
		ТекстВыборкиИнтервалов3 = ",
		|	ИтоговаяТаблицаОборотов.ИнтервалСуммыРабот КАК ИнтервалСуммыРабот,
		|	ИтоговаяТаблицаОборотов.ПорядокИнтервалаСуммыРабот КАК ПорядокИнтервалаСуммыРабот";
		
		ТекстВыборкиИнтервалов4 = ",
		|	ЕСТЬNULL(ИтоговаяТаблицаОборотов.ИнтервалСуммыРабот, ИнтервалыСумм.Представление) КАК ИнтервалСуммыРабот,
		|	ЕСТЬNULL(ИтоговаяТаблицаОборотов.ПорядокИнтервалаСуммыРабот, ИнтервалыСумм.Порядок) КАК ПорядокИнтервалаСуммыРабот";
		
		ТекстВыборкиИнтервалов2 = ",
		|	ИнтервалыСумм.Представление КАК ИнтервалСуммыРабот,
		|	ИнтервалыСумм.Порядок КАК ПорядокИнтервалаСуммыРабот";
		
		ТекстСоединенияИнтервалов = "
		|ЛЕВОЕ СОЕДИНЕНИЕ ИнтервалыСумм КАК ИнтервалыСумм
		|ПО
		|	ВЫБОР
		|		КОГДА ТаблицаКлиентовПоТипам.СуммаЗН ЕСТЬ NULL ИЛИ ТаблицаКлиентовПоТипам.СуммаЗН = 0 ТОГДА
		|			ИнтервалыСумм.МинПредел=0
		|		ИНАЧЕ
		|			ТаблицаКлиентовПоТипам.СуммаЗН > ИнтервалыСумм.МинПредел И
		|			ТаблицаКлиентовПоТипам.СуммаЗН <= ИнтервалыСумм.МаксПредел
		|	КОНЕЦ";
		
		ТекстСоединенияИнтервалов2 = "
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИнтервалыСумм КАК ИнтервалыСумм
		|ПО
		|	ВЫБОР
		|		КОГДА ИтоговаяТаблицаОборотов.СуммаЗН = 0 ТОГДА
		|			ИнтервалыСумм.МинПредел=0
		|		ИНАЧЕ
		|			ИтоговаяТаблицаОборотов.СуммаЗН > ИнтервалыСумм.МинПредел И
		|			ИтоговаяТаблицаОборотов.СуммаЗН <= ИнтервалыСумм.МаксПредел
		|	КОНЕЦ";
		
		ЕстьИнтервалы = Истина;
	Иначе
		ТекстВыборкиИнтервалов = ",
		|	0 КАК ИнтервалСуммыРабот,
		|	0 КАК ПорядокИнтервалаСуммыРабот";
	КонецЕсли;
	
	// Определим таблицы интервалов просроченных дней
	Если НЕ СписокПолей.НайтиПоЗначению("ИнтервалОбращений") = Неопределено Тогда
		ЗначениеКоличественныеГруппы = КоличественныеГруппы.Значение.Получить();
		Если ЗначениеКоличественныеГруппы.Количество()=0 Тогда
			НовыйПериод = ЗначениеКоличественныеГруппы.Добавить();
			НовыйПериод.КоличествоРемонтов = 50000;
			НовыйПериод.Представление	   = "Все";
			КоличественныеГруппы.Значение = Новый ХранилищеЗначения(ЗначениеКоличественныеГруппы);
		КонецЕсли;
		ЗначениеКоличественныеГруппы.Сортировать("КоличествоРемонтов ВОЗР");
		ПревКоличествоРемонтов = 0;
		ТекстИнтервалов = "";
		Порядок = 0;
		Для Каждого ТекИнтервал Из ЗначениеКоличественныеГруппы Цикл
			ТекстИнтервалов = ТекстИнтервалов + ?(ТекстИнтервалов="","", "ОБЪЕДИНИТЬ ВСЕ ")+"
			|
			|ВЫБРАТЬ
			|	"+Формат(ПревКоличествоРемонтов, "ЧРД=.; ЧН=0; ЧГ=")+" КАК МинПредел,
			|	"+Формат(ТекИнтервал.КоличествоРемонтов, "ЧРД=.; ЧН=0; ЧГ=")+" КАК МаксПредел,
			|	"""+ТекИнтервал.Представление+""" КАК Представление,
			|	"+Формат(Порядок, "ЧН=0; ЧГ=")+" КАК Порядок
			|";
			ПревКоличествоРемонтов = ТекИнтервал.КоличествоРемонтов;
			Порядок = Порядок+1;
		КонецЦикла;
		ТекстЗапросаРезультат = ТекстЗапросаРезультат+"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОбъединеннаяТаблица.МинПредел КАК МинПредел,
		|	ОбъединеннаяТаблица.МаксПредел КАК МаксПредел,
		|	ОбъединеннаяТаблица.Представление КАК Представление,
		|	ОбъединеннаяТаблица.Порядок КАК Порядок
		|ПОМЕСТИТЬ
		|	ИнтервалыОбращений
		|ИЗ("+ТекстИнтервалов+") КАК ОбъединеннаяТаблица
		|;
		|";
		
		ТекстВыборкиИнтервалов = ТекстВыборкиИнтервалов+",
		|	ИтоговаяТаблицаОборотов.ИнтервалОбращений КАК ИнтервалОбращений,
		|	ИтоговаяТаблицаОборотов.ПорядокИнтервалаОбращений КАК ПорядокИнтервалаОбращений";
		
		ТекстВыборкиИнтервалов3 = ТекстВыборкиИнтервалов3+",
		|	ИтоговаяТаблицаОборотов.ИнтервалОбращений КАК ИнтервалОбращений,
		|	ИтоговаяТаблицаОборотов.ПорядокИнтервалаОбращений КАК ПорядокИнтервалаОбращений";
		
		ТекстВыборкиИнтервалов4 = ТекстВыборкиИнтервалов4+",
		|	ЕСТЬNULL(ИтоговаяТаблицаОборотов.ИнтервалОбращений, ИнтервалыОбращений.Представление) КАК ИнтервалОбращений,
		|	ЕСТЬNULL(ИтоговаяТаблицаОборотов.ПорядокИнтервалаОбращений, ИнтервалыОбращений.Порядок) КАК ПорядокИнтервалаОбращений";
		
		ТекстВыборкиИнтервалов2 = ТекстВыборкиИнтервалов2+",
		|	ИнтервалыОбращений.Представление КАК ИнтервалОбращений,
		|	ИнтервалыОбращений.Порядок КАК ПорядокИнтервалаОбращений";
		
		ТекстСоединенияИнтервалов = ТекстСоединенияИнтервалов + "
		|ЛЕВОЕ СОЕДИНЕНИЕ ИнтервалыОбращений КАК ИнтервалыОбращений
		|ПО
		|	ВЫБОР
		|		КОГДА ТаблицаКлиентовПоТипам.КоличествоЗН ЕСТЬ NULL ИЛИ ТаблицаКлиентовПоТипам.КоличествоЗН = 0 ТОГДА
		|			ИнтервалыОбращений.МинПредел=0
		|		ИНАЧЕ
		|			ТаблицаКлиентовПоТипам.КоличествоЗН > ИнтервалыОбращений.МинПредел И
		|			ТаблицаКлиентовПоТипам.КоличествоЗН <= ИнтервалыОбращений.МаксПредел
		|	КОНЕЦ";
		
		ТекстСоединенияИнтервалов2 = ТекстСоединенияИнтервалов2 + "
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИнтервалыОбращений КАК ИнтервалыОбращений
		|ПО
		|	ВЫБОР
		|		КОГДА ИтоговаяТаблицаОборотов.КоличествоЗН = 0 ТОГДА
		|			ИнтервалыОбращений.МинПредел=0
		|		ИНАЧЕ
		|			ИтоговаяТаблицаОборотов.КоличествоЗН > ИнтервалыОбращений.МинПредел И
		|			ИтоговаяТаблицаОборотов.КоличествоЗН <= ИнтервалыОбращений.МаксПредел
		|	КОНЕЦ";
		
		ЕстьИнтервалы = Истина;
	Иначе
		ТекстВыборкиИнтервалов = ТекстВыборкиИнтервалов+",
		|	0 КАК ИнтервалОбращений,
		|	0 КАК ПорядокИнтервалаОбращений";
	КонецЕсли;
	
	// Поля временной таблицы
	ТекстВыборки = "";
	ТекстСгруппировать = "";
	ТекстСгруппировать2 = "";
	ТекстПолейИндексов = "";
	ТекстПолейПериодов = "";
	ТекстПолейПериодов2 = "";
	// Поля основной таблицы
	ТекстВыборки2 = "";
	ТекстВыборки3 = "";
	ТекстВыборки4 = "";
	ТекстСоединения = "";
	ТекстПсевдонимов = "";
	
	Исключения    = Новый Структура("ТипКлиента, ТипДанных, ИнтервалСуммыРабот, ИнтервалОбращений,ДатаПервогоРемонта,ДатаПоследнегоРемонта");
	Периоды       = Новый Структура();
	Периоды.Вставить("ПериодМесяц", "Месяц");
	Периоды.Вставить("ПериодКвартал", "Квартал");
	Периоды.Вставить("ПериодГод", "Год");
	МассивИнициализируемыхПолей = Новый Массив();
	
	ЕстьПериоды    = Ложь;
	ЕстьТипДанных  = Ложь;
	ЕстьТипКлиента = Ложь;
	
	// Добавим также поля отборов
	Для Каждого ТекущийОтбор Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		СписокПолей.Добавить(Строка(ТекущийОтбор.ЛевоеЗначение));
	КонецЦикла;
	
	Для Каждого ТекГруппировка Из СписокПолей Цикл
		
		Если НЕ МассивИнициализируемыхПолей.Найти(ТекГруппировка.Значение) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивИнициализируемыхПолей.Добавить(ТекГруппировка.Значение);
		
		Имя = ТекГруппировка.Значение;
		ИмяПредставление = СтрЗаменить(ТекГруппировка.Значение, ".", "");
		
		//Если НЕ ТекГруппировка.Использование Тогда Продолжить; КонецЕсли;
		
		Если Имя = "ТипДанных" Тогда
			ЕстьТипДанных = Истина;
		КонецЕсли;
		
		Если Имя = "ТипКлиента" Тогда
			ЕстьТипКлиента = Истина;
		КонецЕсли;
		
		Если Исключения.Свойство(ИмяПредставление) Тогда Продолжить; КонецЕсли;
	
		Если Периоды.Свойство(ИмяПредставление) Тогда
			// Поля временной таблицы
			ТекстПолейПериодов  = ТекстПолейПериодов + ",
			|	НачалоПериода(ЗаказНаряд.ДатаСоздания, "+Периоды[Имя] + ") КАК " + ИмяПредставление;
			ТекстПолейПериодов2 = ТекстПолейПериодов2 + ",
			|	НачалоПериода(&НачалоПериода, "+Периоды[Имя] + ") КАК " + ИмяПредставление;
			
			ЕстьПериоды = Истина;
			ТекстВыборки2 = ТекстВыборки2 + ",
			|	ТаблицаОборотов."+Имя+" КАК "+ИмяПредставление;
			
			ТекстВыборки4 = ТекстВыборки4 + ",
			|	ДатаВремя(1, 1, 1) КАК "+ИмяПредставление;
		
			ТекстПсевдонимов = ТекстПсевдонимов + ",
			|	"+Имя+".* КАК "+ИмяПредставление;
		
			Продолжить;
		КонецЕсли;
		
		Если СтрНайти(Имя, "Заказчик") > 0 ИЛИ СтрНайти(Имя, "Автомобиль") Тогда
			ПутьКДанным = "СводныйРемонтныйЗаказ."+Имя;
		Иначе
			ПутьКДанным = Имя;
		КонецЕсли;
		
		// Поля временной таблицы
		ТекстВыборки = ТекстВыборки + ",
		|	ЗаказНаряд."+ПутьКДанным+" КАК "+ИмяПредставление;
		
		ТекстСгруппировать = ТекстСгруппировать + ?(ТекстСгруппировать="", "", ",") + "
		|	ЗаказНаряд."+ПутьКДанным;
		
		ТекстСгруппировать2 = ТекстСгруппировать2 + ?(ТекстСгруппировать2="", "", ",") + "
		|	ТаблицаОборотов."+Имя;
		
		ТекстВыборки2 = ТекстВыборки2 + ",
		|	ТаблицаОборотов."+Имя+" КАК "+ИмяПредставление;
		
		ТекстВыборки4 = ТекстВыборки4 + ",
		|	ТаблицаКлиентовПоТипам."+Имя+" КАК "+ИмяПредставление;
		
		ТекстВыборки3 = ТекстВыборки3 + ",
		|	ТаблицаОборотов."+Имя+" КАК "+ИмяПредставление;
		
		ТекстПсевдонимов = ТекстПсевдонимов + ",
		|	"+Имя+".* КАК "+ИмяПредставление;
		
		ТекстСоединения = ТекстСоединения + ?(ТекстСоединения="", "", " И ") + "
		|	ИтоговаяТаблицаОборотов."+Имя+" = ТаблицаОборотов."+Имя;
		
	КонецЦикла;
	
	//ПрошлыеДанные
	//ТекущиеДанные
	
	Если ПустаяСтрока(ТекстСоединения) Тогда
		ТекстСоединения = "ИСТИНА";
	КонецЕсли;
	
	Если ЕстьПериоды Тогда
		КопияТекстСгруппировать = ТекстСгруппировать + ?(ТекстСгруппировать="", "", ",") + "
		|	ЗаказНаряд.ДатаСоздания";
	Иначе
		КопияТекстСгруппировать = ТекстСгруппировать;
	КонецЕсли;
	
	ТекстЗапросаРезультат = ТекстЗапросаРезультат + "
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МИНИМУМ(ЗаказНаряд.ДатаСоздания) КАК ДатаПервогоРемонта,
	|	МАКСИМУМ(ЗаказНаряд.ДатаСоздания) КАК ДатаПоследнегоРемонта,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаказНаряд.КурсВалютыУпр = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЗаказНаряд.СуммаДокумента*ЗаказНаряд.КурсДокумента/ЗаказНаряд.КурсВалютыУпр
	|	КОНЕЦ) КАК СуммаЗН,
	|	КОЛИЧЕСТВО(ЗаказНаряд.Ссылка) КАК КоличествоЗН,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаказНаряд.ВидРемонта.ТехОбслуживание И НЕ ЗаказНаряд.КурсВалютыУпр = 0 ТОГДА
	|				ЗаказНаряд.СуммаДокумента*ЗаказНаряд.КурсДокумента/ЗаказНаряд.КурсВалютыУпр
	|			ИНАЧЕ
	|				0
	|	КОНЕЦ) КАК СуммаТО,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаказНаряд.ВидРемонта.ТехОбслуживание ТОГДА
	|				1
	|			ИНАЧЕ
	|				0
	|	КОНЕЦ) КАК КоличествоТО" + ТекстВыборки + ТекстПолейПериодов + "
	|ПОМЕСТИТЬ
	|	ТаблицаОборотов
	|ИЗ
	|	Документ.ЗаказНаряд КАК ЗаказНаряд
	|ГДЕ
	|	ЗаказНаряд.ДатаСоздания МЕЖДУ &НачалоПериода И &КонецПериода
	|{ГДЕ
	|	ЗаказНаряд.Заказчик.* КАК Заказчик,
	|	ЗаказНаряд.ВидРемонта.* КАК ВидРемонта,
	|	ЗаказНаряд.ПодразделениеКомпании.* КАК ПодразделениеКомпании,
	|	ЗаказНаряд.Менеджер.* КАК Менеджер,
	|	ЗаказНаряд.Автомобиль.* КАК Автомобиль,
	|	ЗаказНаряд.Цех.* КАК Цех,
	|	ЗаказНаряд.Мастер.* КАК Мастер,
	|	МИНИМУМ(ЗаказНаряд.ДатаСоздания) КАК ДатаПервогоРемонта,
	|	МАКСИМУМ(ЗаказНаряд.ДатаСоздания) КАК ДатаПоследнегоРемонта
	|}
	|"+?(КопияТекстСгруппировать = "", "", "СГРУППИРОВАТЬ ПО
	|	" + КопияТекстСгруппировать) + "
	|"+ТекстПолейИндексов+"
	|;
	|";
	
	ТекстСоединенияИнтервалов3 = "";
	Если ЕстьИнтервалы Тогда
		ТекстЗапросаРезультат = ТекстЗапросаРезультат + "
		|ВЫБРАТЬ
		|	ИтоговаяТаблицаОборотов.КоличествоЗН"+ТекстВыборкиИнтервалов2+СтрЗаменить(ТекстВыборки3, "ТаблицаОборотов.", "ИтоговаяТаблицаОборотов.") + "
		|ПОМЕСТИТЬ
		|	ИтоговаяТаблицаОборотов
		|ИЗ(
		|	ВЫБРАТЬ
		|		СУММА(ТаблицаОборотов.СуммаЗН) КАК СуммаЗН,
		|		СУММА(ТаблицаОборотов.КоличествоЗН) КАК КоличествоЗН" + ТекстВыборки3 + "
		|	ИЗ
		|		ТаблицаОборотов КАК ТаблицаОборотов
		|	" + ?(ТекстСгруппировать2 = "", "" , "СГРУППИРОВАТЬ ПО
		|		" + ТекстСгруппировать2) + ") КАК ИтоговаяТаблицаОборотов
		|" + ТекстСоединенияИнтервалов2 + "
		|"+ТекстПолейИндексов+"
		|;
		|";
		
		ТекстСоединенияИнтервалов3 = "
		|ЛЕВОЕ СОЕДИНЕНИЕ ИтоговаяТаблицаОборотов КАК ИтоговаяТаблицаОборотов
		|ПО
		|	"+ТекстСоединения;
		
	КонецЕсли;
	
	Если ЕстьТипДанных ИЛИ ЕстьТипКлиента Тогда
		ТекстЗапросаРезультат = ТекстЗапросаРезультат + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ВЫБОР
		|		КОГДА ЗаказНаряд.ДатаСоздания < &НачалоПериода ТОГДА
		|			1
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ) КАК КоличествоЗН,
		|	СУММА(ВЫБОР
		|		КОГДА ЗаказНаряд.ДатаСоздания < &НачалоПериода И НЕ ЗаказНаряд.КурсВалютыУпр = 0 ТОГДА
		|			ЗаказНаряд.СуммаДокумента * ЗаказНаряд.КурсДокумента/ЗаказНаряд.КурсВалютыУпр
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ) КАК СуммаЗН,
		|	СУММА(ВЫБОР
		|		КОГДА ЗаказНаряд.ДатаСоздания < &НачалоПериода И ЗаказНаряд.ВидРемонта.ТехОбслуживание И НЕ ЗаказНаряд.КурсВалютыУпр = 0 ТОГДА
		|			ЗаказНаряд.СуммаДокумента * ЗаказНаряд.КурсДокумента/ЗаказНаряд.КурсВалютыУпр
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ) КАК СуммаТО,
		|	СУММА(ВЫБОР
		|		КОГДА  ЗаказНаряд.ДатаСоздания < &НачалоПериода И ЗаказНаряд.ВидРемонта.ТехОбслуживание ТОГДА
		|			1
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ) КАК КоличествоТО,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(ЗаказНаряд.ДатаСоздания) >= &НачалоПериода ТОГДА
		|			""Постоянные клиенты""
		|		ИНАЧЕ
		|			""Потерянные клиенты""
		|	КОНЕЦ КАК ТипКлиента,
		|	МИНИМУМ(ЗаказНаряд.ДатаСоздания) КАК ДатаПервогоРемонта,
		|	МАКСИМУМ(ВЫБОР
		|		КОГДА ЗаказНаряд.ДатаСоздания < &НачалоПериода ТОГДА
		|			ЗаказНаряд.ДатаСоздания
		|		ИНАЧЕ
		|			ДатаВремя(1, 1, 1)
		|	КОНЕЦ) КАК ДатаПоследнегоРемонта" + ТекстВыборки + ТекстПолейПериодов2 + "
		|ПОМЕСТИТЬ
		|	ТаблицаКлиентовПоТипам
		|ИЗ
		|	Документ.ЗаказНаряд КАК ЗаказНаряд
		|ГДЕ
		|	ЗаказНаряд.ДатаСоздания < &КонецПериода
		|{ГДЕ
		|	ЗаказНаряд.ВидРемонта.* КАК ВидРемонта,
		|	ЗаказНаряд.Заказчик.* КАК Заказчик,
		|	ЗаказНаряд.ПодразделениеКомпании.* КАК ПодразделениеКомпании,
		|	ЗаказНаряд.Менеджер.* КАК Менеджер,
		|	ЗаказНаряд.Автомобиль.* КАК Автомобиль,
		|	ЗаказНаряд.Цех.* КАК Цех,
		|	ЗаказНаряд.Мастер.* КАК Мастер,
		|	МИНИМУМ(ЗаказНаряд.ДатаСоздания) КАК ДатаПервогоРемонта,
		|	МАКСИМУМ(ЗаказНаряд.ДатаСоздания) КАК ДатаПоследнегоРемонта}
		|"+?(ТекстСгруппировать = "", "", "СГРУППИРОВАТЬ ПО
		|	"+ТекстСгруппировать)+"
		|
		|"+?(ЕстьТипДанных И ЕстьТипКлиента, "", ?(ЕстьТипДанных, "ИМЕЮЩИЕ
		|	МАКСИМУМ(ЗаказНаряд.ДатаСоздания) >= &НачалоПериода", "ИМЕЮЩИЕ
		|	МАКСИМУМ(ЗаказНаряд.ДатаСоздания) < &НачалоПериода"))+"
		|
		|"+ТекстПолейИндексов+"
		|;
		|";
	КонецЕсли;
	
	ТекстЗапросаРезультат = ТекстЗапросаРезультат + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИтоговаяТаблицаОборотов.ТипКлиента КАК ТипКлиента,
	|	ИтоговаяТаблицаОборотов.ТипДанных КАК ТипДанных" + СтрЗаменить(ТекстВыборки2, "ТаблицаОборотов.", "ИтоговаяТаблицаОборотов.") + ",
	|	ИтоговаяТаблицаОборотов.ДатаПервогоРемонта КАК ДатаПервогоРемонта,
	|	ИтоговаяТаблицаОборотов.ДатаПоследнегоРемонта КАК ДатаПоследнегоРемонта,
	|	ИтоговаяТаблицаОборотов.СуммаЗН КАК СуммаЗН,
	|	ИтоговаяТаблицаОборотов.КоличествоЗН КАК КоличествоЗН,
	|	ИтоговаяТаблицаОборотов.СуммаТО КАК СуммаТО,
	|	ИтоговаяТаблицаОборотов.КоличествоТО КАК КоличествоТО"+ТекстВыборкиИнтервалов+"
	|{
	|ВЫБРАТЬ
	|	ТипКлиента КАК ТипКлиента,
	|	ТипДанных КАК ТипДанных" + ТекстПсевдонимов + ",
	|	СуммаЗН КАК СуммаЗН,
	|	СуммаТО КАК СуммаТО,
	|	КоличествоЗН КАК КоличествоЗН,
	|	КоличествоТО КАК КоличествоТО,
	|	ДатаПоследнегоРемонта КАК ДатаПоследнегоРемонта}
	|ИЗ
	|	(ВЫБРАТЬ
	|		""Постоянные клиенты"" КАК ТипКлиента,
	|		""Текущие данные"" КАК ТипДанных" + ТекстВыборки2 + ",
	|		ТаблицаОборотов.ДатаПервогоРемонта КАК ДатаПервогоРемонта,
	|		ТаблицаОборотов.ДатаПоследнегоРемонта КАК ДатаПоследнегоРемонта,
	|		ТаблицаОборотов.СуммаЗН КАК СуммаЗН,
	|		ТаблицаОборотов.КоличествоЗН КАК КоличествоЗН,
	|		ТаблицаОборотов.СуммаТО КАК СуммаТО,
	|		ТаблицаОборотов.КоличествоТО КАК КоличествоТО"+ТекстВыборкиИнтервалов3+"
	|	{ВЫБРАТЬ
	|		ТипКлиента КАК ТипКлиента,
	|		ТипДанных КАК ТипДанных" + ТекстПсевдонимов + ",
	|		СуммаЗН КАК СуммаЗН,
	|		СуммаТО КАК СуммаТО,
	|		КоличествоЗН КАК КоличествоЗН,
	|		КоличествоТО КАК КоличествоТО,
	|		ДатаПоследнегоРемонта КАК ДатаПоследнегоРемонта}
	|	ИЗ
	|	ТаблицаОборотов КАК ТаблицаОборотов
	|	"+ТекстСоединенияИнтервалов3+?(ЕстьТипКлиента ИЛИ ЕстьТипДанных, "
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТаблицаКлиентовПоТипам.ТипКлиента КАК ТипКлиента,
	|		""Прошлые данные"" КАК ТипДанных" + ТекстВыборки4 + ",
	|		ТаблицаКлиентовПоТипам.ДатаПервогоРемонта КАК ДатаПервогоРемонта,
	|		ТаблицаКлиентовПоТипам.ДатаПоследнегоРемонта КАК ДатаПоследнегоРемонта,
	|		ТаблицаКлиентовПоТипам.СуммаЗН КАК СуммаЗН,
	|		ТаблицаКлиентовПоТипам.КоличествоЗН КАК КоличествоЗН,
	|		ТаблицаКлиентовПоТипам.СуммаТО КАК СуммаТО,
	|		ТаблицаКлиентовПоТипам.КоличествоТО КАК КоличествоТО"+ТекстВыборкиИнтервалов4+"
	|	{ВЫБРАТЬ
	|		ТипКлиента КАК ТипКлиента,
	|		ТипДанных КАК ТипДанных" + ТекстПсевдонимов + ",
	|		СуммаЗН КАК СуммаЗН,
	|		СуммаТО КАК СуммаТО,
	|		КоличествоЗН КАК КоличествоЗН,
	|		КоличествоТО КАК КоличествоТО,
	|		ДатаПоследнегоРемонта КАК ДатаПоследнегоРемонта
	|		}
	|ИЗ
	|	ТаблицаКлиентовПоТипам КАК ТаблицаКлиентовПоТипам
	|	"+ТекстСоединенияИнтервалов+"
	|	"+СтрЗаменить(ТекстСоединенияИнтервалов3, " ТаблицаОборотов.", " ТаблицаКлиентовПоТипам."), "")+") КАК ИтоговаяТаблицаОборотов";
	
	Запрос.Текст = ТекстЗапросаРезультат;
	
	Возврат Запрос;
	
КонецФункции

Процедура ЗаполнитьТаблицыИнтервалов()
		
	ОсновнойТекст = 
		"ВЫБРАТЬ
		|	ОбъединеннаяТаблица.МинПредел КАК МинПредел,
		|	ОбъединеннаяТаблица.МаксПредел КАК МаксПредел,
		|	ОбъединеннаяТаблица.Представление КАК Представление,
		|	ОбъединеннаяТаблица.Порядок КАК Порядок
		|ПОМЕСТИТЬ %1
		|ИЗ(%2) КАК ОбъединеннаяТаблица";
	
	КоличественныеГруппы = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КоличественныеГруппы"));
	СуммовыеГруппы = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СуммовыеГруппы"));

	СписокПолей = ПолучитьПоляГруппировок(КомпоновщикНастроек);
	
	Если НЕ СписокПолей.НайтиПоЗначению("ИнтервалСуммыРабот") = Неопределено Тогда
		ЗначениеСуммовыеГруппы = СуммовыеГруппы.Значение.Получить();
		ЗначениеСуммовыеГруппы.Сортировать("СуммаРемонта ВОЗР");
		ПревСумма = 0;
		ТекстИнтервалов="";
		Порядок = 0;
		Для Каждого ТекИнтервал Из ЗначениеСуммовыеГруппы Цикл
			ТекстИнтервалов = ТекстИнтервалов + ?(ТекстИнтервалов="","", "ОБЪЕДИНИТЬ ВСЕ ")+"
			|
			|ВЫБРАТЬ
			|	"+Формат(ПревСумма, "ЧРД=.; ЧН=0; ЧГ=")+" КАК МинПредел,
			|	"+Формат(ТекИнтервал.СуммаРемонта, "ЧРД=.; ЧН=0; ЧГ=")+" КАК МаксПредел,
			|	"""+ТекИнтервал.Представление+""" КАК Представление,
			|	"+Формат(Порядок, "ЧН=0; ЧГ=")+" КАК Порядок
			|";
			ПревСумма = ТекИнтервал.СуммаРемонта;
			Порядок = Порядок+1;
		КонецЦикла;
		
		ТекстЗапросаВыбрать	=
			"ВЫБРАТЬ
			|	ОбъединеннаяТаблица.МинПредел КАК МинПредел,
			|	ОбъединеннаяТаблица.МаксПредел КАК МаксПредел,
			|	ОбъединеннаяТаблица.Представление КАК Представление,
			|	ОбъединеннаяТаблица.Порядок КАК Порядок
			|ПОМЕСТИТЬ ИнтервалыСумм
			|ИЗ(";
		
		ТекстЗапроса 		=  СтрШаблон(ОсновнойТекст, "ИнтервалыСумм", ТекстИнтервалов);
		ЗапросНаборДанных 	= СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос;	
		
		ТекстЗамены = 
		"ВЫБРАТЬ
		|	0 КАК МинПредел,
		|	9999999999999 КАК МаксПредел,
		|	""Все"" КАК Представление,
		|	0 КАК Порядок
		|ПОМЕСТИТЬ ИнтервалыСумм";
	
		СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос = СтрЗаменить(ЗапросНаборДанных, ТекстЗамены, ТекстЗапроса); 
	КонецЕсли;
	
	Если НЕ СписокПолей.НайтиПоЗначению("ИнтервалОбращений") = Неопределено Тогда
		ЗначениеКоличественныеГруппы = КоличественныеГруппы.Значение.Получить();
		ЗначениеКоличественныеГруппы.Сортировать("КоличествоРемонтов ВОЗР");
		ПревКоличествоРемонтов = 0;
		ТекстИнтервалов = "";
		Порядок = 0;
		Для Каждого ТекИнтервал Из ЗначениеКоличественныеГруппы Цикл
			ТекстИнтервалов = ТекстИнтервалов + ?(ТекстИнтервалов="","", "ОБЪЕДИНИТЬ ВСЕ ")+"
			|
			|ВЫБРАТЬ
			|	"+Формат(ПревКоличествоРемонтов, "ЧРД=.; ЧН=0; ЧГ=")+" КАК МинПредел,
			|	"+Формат(ТекИнтервал.КоличествоРемонтов, "ЧРД=.; ЧН=0; ЧГ=")+" КАК МаксПредел,
			|	"""+ТекИнтервал.Представление+""" КАК Представление,
			|	"+Формат(Порядок, "ЧН=0; ЧГ=")+" КАК Порядок
			|";
			ПревКоличествоРемонтов = ТекИнтервал.КоличествоРемонтов;
			Порядок = Порядок+1;
		КонецЦикла;
				
		ТекстЗапроса =  СтрШаблон(ОсновнойТекст, "ИнтервалыОбращений", ТекстИнтервалов);
		ЗапросНаборДанных = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос;	
		
		ТекстЗамены = 
		"ВЫБРАТЬ
		|	0 КАК МинПредел,
		|	50000 КАК МаксПредел,
		|	""Все"" КАК Представление,
		|	0 КАК Порядок
		|ПОМЕСТИТЬ ИнтервалыОбращений";
	
		СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос = СтрЗаменить(ЗапросНаборДанных, ТекстЗамены, ТекстЗапроса); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ЗаполнитьТаблицыИнтервалов(); 
	ЗаполнитьГруппировкуНижнегоУровня();
	ОтчетыПлатформаСервер.ВывестиОтчет(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Добавляет вложенные поля группировки.
Процедура ДобавитьПоляГруппировки(Структура, СписокПолей, БезПользовательскихПолей)
	
	Для каждого ЭлементСтруктуры Из Структура Цикл
		
		Если ТипЗнч(ЭлементСтруктуры) = Тип("ТаблицаКомпоновкиДанных") Тогда
			
			ДобавитьПоляГруппировки(ЭлементСтруктуры.Строки, СписокПолей, БезПользовательскихПолей);
			ДобавитьПоляГруппировки(ЭлементСтруктуры.Колонки, СписокПолей, БезПользовательскихПолей);
			
		ИначеЕсли ТипЗнч(ЭлементСтруктуры) = Тип("ДиаграммаКомпоновкиДанных") Тогда
			
			ДобавитьПоляГруппировки(ЭлементСтруктуры.Серии, СписокПолей, БезПользовательскихПолей);
			ДобавитьПоляГруппировки(ЭлементСтруктуры.Точки, СписокПолей, БезПользовательскихПолей);
			
		Иначе
			
			Для каждого ТекущееПолеГруппировки Из ЭлементСтруктуры.ПоляГруппировки.Элементы Цикл
				
				ДоступноеПоле = ЭлементСтруктуры.Выбор.ДоступныеПоляВыбора.НайтиПоле(ТекущееПолеГруппировки.Поле);
				
				Если ДоступноеПоле <> Неопределено
					И (ДоступноеПоле.Родитель = Неопределено
						ИЛИ Не БезПользовательскихПолей
						ИЛИ ДоступноеПоле.Родитель.Поле <> Новый ПолеКомпоновкиДанных("UserFields")) Тогда
					
					СписокПолей.Добавить(Строка(ДоступноеПоле.Поле), ДоступноеПоле.Заголовок);
					
				КонецЕсли;
				
			КонецЦикла;
			
			ДобавитьПоляГруппировки(ЭлементСтруктуры.Структура, СписокПолей, БезПользовательскихПолей);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Возвращает список полей группировок всех группировок компоновщика настроек
//
// Параметры:
//    КомпоновщикНастроек - компоновщик настроек
//    БезПользовательскихПолей - признак не включения пользовательских настроек СКД
//
Функция ПолучитьПоляГруппировок(КомпоновщикНастроек, БезПользовательскихПолей = Ложь) Экспорт
	
	СписокПолей = Новый СписокЗначений;
	Структура = КомпоновщикНастроек.Настройки.Структура;
	ДобавитьПоляГруппировки(Структура, СписокПолей, БезПользовательскихПолей);
	Возврат СписокПолей;
	
КонецФункции

// Корректирует запрос для расчета группировки
Процедура ЗаполнитьГруппировкуНижнегоУровня()
	
	СписокПолейГруппировки = Новый СписокЗначений;
	Структура = КомпоновщикНастроек.Настройки.Структура;
	Для каждого ЭлементСтруктуры Из Структура Цикл
	    ДобавитьПоляГруппировки(ЭлементСтруктуры.Строки, СписокПолейГруппировки, Ложь)
	КонецЦикла; 
	
	ИсключаемыеПоляГруппировки = Новый Массив;
	ИсключаемыеПоляГруппировки.Добавить("ИнтервалОбращений");
	ИсключаемыеПоляГруппировки.Добавить("ИнтервалСуммыРабот");
	ИсключаемыеПоляГруппировки.Добавить("Ссылка");
	ИсключаемыеПоляГруппировки.Добавить("КоличествоЗН");
	
	Для каждого ИсключаемоеПолеГруппировки Из ИсключаемыеПоляГруппировки Цикл
		НайденноеЗначение = СписокПолейГруппировки.НайтиПоЗначению(ИсключаемоеПолеГруппировки);
		Если Не НайденноеЗначение = Неопределено Тогда
			СписокПолейГруппировки.Удалить(НайденноеЗначение);
		КонецЕсли;
	КонецЦикла;
	
	ИспользуетсяГруппировкаПоТипуКлиента = Не СписокПолейГруппировки.НайтиПоЗначению("ТипКлиента") = Неопределено;
	
	КоличествоГруппировок = СписокПолейГруппировки.Количество();
	Если Не КоличествоГруппировок = 0 Тогда
		ГруппировкаНижнегоУровня = СписокПолейГруппировки[КоличествоГруппировок - 1].Значение;
		ГруппировкаНижнегоУровняДляПсевдонима = СтрЗаменить(ГруппировкаНижнегоУровня, ".", ""); 
		ГруппировкаПоПолюНеограниченнойДлины = (ГруппировкаНижнегоУровня = "Ссылка.Рекомендации"
											ИЛИ ГруппировкаНижнегоУровня = "Ссылка.Гарантии"
											ИЛИ ГруппировкаНижнегоУровня = "Ссылка.ОписаниеПричиныОбращения");
		ЗапросНаборДанных = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос;	
		
		ОсновнойТекст =
			"ВЫБРАТЬ
			|	ВТ_ПостоянныеКлиенты.%1 КАК %2,
			|	СУММА(ВТ_ПостоянныеКлиенты.КоличествоЗН) КАК КоличествоЗН,
			|	ВТ_ПостоянныеКлиенты.ТипКлиента КАК ТипКлиента
			|ПОМЕСТИТЬ ВТ_КоличествоЗНПогруппировкеПоТипу
			|ИЗ
			|	ВТ_ПостоянныеКлиенты КАК ВТ_ПостоянныеКлиенты
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ПостоянныеКлиенты.%1,
			|	ВТ_ПостоянныеКлиенты.ТипКлиента
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_ПотерянныеКлиенты.%1,
			|	СУММА(ВТ_ПотерянныеКлиенты.КоличествоЗН),
			|	ВТ_ПотерянныеКлиенты.ТипКлиента
			|ИЗ
			|	ВТ_ПотерянныеКлиенты КАК ВТ_ПотерянныеКлиенты
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ПотерянныеКлиенты.%1,
			|	ВТ_ПотерянныеКлиенты.ТипКлиента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_КоличествоЗНПогруппировкеПоТипу.%2 КАК %2,
			|	СУММА(ВТ_КоличествоЗНПогруппировкеПоТипу.КоличествоЗН) КАК КоличествоЗН,
			|	ВТ_КоличествоЗНПогруппировкеПоТипу.ТипКлиента КАК ТипКлиента
			|ПОМЕСТИТЬ ВТ_ГруппировкаПоТипу
			|ИЗ
			|	ВТ_КоличествоЗНПогруппировкеПоТипу КАК ВТ_КоличествоЗНПогруппировкеПоТипу
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_КоличествоЗНПогруппировкеПоТипу.%2,
			|	ВТ_КоличествоЗНПогруппировкеПоТипу.ТипКлиента";
		
		ТекстЗаменыСГруппировкойПоТипуКлиента_2 = СтрШаблон(ОсновнойТекст, ГруппировкаНижнегоУровня, ГруппировкаНижнегоУровняДляПсевдонима);
		ТекстЗапроса = СтрШаблон(ОсновнойТекст, "Ссылка", "Ссылка");
		Если ГруппировкаПоПолюНеограниченнойДлины Тогда
			
			ТекстЗаменыСГруппировкойПоТипуКлиента_2 = СтрЗаменить(ТекстЗаменыСГруппировкойПоТипуКлиента_2, "ВТ_ПостоянныеКлиенты." + ГруппировкаНижнегоУровня,
							"ВЫРАЗИТЬ(ВТ_ПостоянныеКлиенты." + ГруппировкаНижнегоУровня + " КАК СТРОКА(1024))");
			ТекстЗаменыСГруппировкойПоТипуКлиента_2 = СтрЗаменить(ТекстЗаменыСГруппировкойПоТипуКлиента_2, "ВТ_ПотерянныеКлиенты." + ГруппировкаНижнегоУровня,
							"ВЫРАЗИТЬ(ВТ_ПотерянныеКлиенты." + ГруппировкаНижнегоУровня + " КАК СТРОКА(1024))");
			
		КонецЕсли;
		ЗапросНаборДанных = СтрЗаменить(ЗапросНаборДанных, ТекстЗапроса, ТекстЗаменыСГруппировкойПоТипуКлиента_2);
		
		// Использование группировки по типу клиента
		Если Не ИспользуетсяГруппировкаПоТипуКлиента 
			ИЛИ (ИспользуетсяГруппировкаПоТипуКлиента И ГруппировкаНижнегоУровня = "ТипКлиента") Тогда
			
			ОсновнойТекст =
				"ВЫБРАТЬ
				|	ВТ_ПостоянныеКлиенты.%1 КАК %2,
				|	СУММА(ВТ_ПостоянныеКлиенты.КоличествоЗН) КАК КоличествоЗН
				|ПОМЕСТИТЬ ВТ_КоличествоЗНПогруппировкеПоТипу
				|ИЗ
				|	ВТ_ПостоянныеКлиенты КАК ВТ_ПостоянныеКлиенты
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_ПостоянныеКлиенты.%1
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ВТ_ПотерянныеКлиенты.%1,
				|	СУММА(ВТ_ПотерянныеКлиенты.КоличествоЗН)
				|ИЗ
				|	ВТ_ПотерянныеКлиенты КАК ВТ_ПотерянныеКлиенты
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_ПотерянныеКлиенты.%1
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_КоличествоЗНПогруппировкеПоТипу.%2 КАК %2,
				|	СУММА(ВТ_КоличествоЗНПогруппировкеПоТипу.КоличествоЗН) КАК КоличествоЗН
				|ПОМЕСТИТЬ ВТ_ГруппировкаПоТипу
				|ИЗ
				|	ВТ_КоличествоЗНПогруппировкеПоТипу КАК ВТ_КоличествоЗНПогруппировкеПоТипу
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_КоличествоЗНПогруппировкеПоТипу.%2";

			ТекстЗамены = СтрШаблон(ОсновнойТекст, ГруппировкаНижнегоУровня, ГруппировкаНижнегоУровняДляПсевдонима);
			
			ЗапросНаборДанных = СтрЗаменить(ЗапросНаборДанных, ТекстЗаменыСГруппировкойПоТипуКлиента_2, ТекстЗамены);
			
			ТекстЗамены 		= "";
			ТекстЗапроса 		= "И ИтоговаяТаблица.ТипКлиента = ВТ_ГруппировкаПоТипу.ТипКлиента";
			ЗапросНаборДанных 	= СтрЗаменить(ЗапросНаборДанных, ТекстЗапроса, ТекстЗамены);
			
		КонецЕсли;
		
		ОсновнойТекст       = "ПО ИтоговаяТаблица.%1 = ВТ_ГруппировкаПоТипу.%2";
		ТекстЗамены 		= СтрШаблон(ОсновнойТекст, ГруппировкаНижнегоУровня, ГруппировкаНижнегоУровняДляПсевдонима);
		Если ГруппировкаПоПолюНеограниченнойДлины Тогда
			
			ТекстЗамены = СтрЗаменить(ТекстЗамены, "ПО ИтоговаяТаблица." + ГруппировкаНижнегоУровня,
							"ПО ВЫРАЗИТЬ(ИтоговаяТаблица." + ГруппировкаНижнегоУровня + " КАК СТРОКА(1024))");
			
			ЗапросНаборДанных 	= СтрЗаменить(ЗапросНаборДанных, ТекстЗапроса, ТекстЗамены);
			
		КонецЕсли;
		
		ТекстЗапроса 		= "ПО ИтоговаяТаблица.Ссылка = ВТ_ГруппировкаПоТипу.Ссылка";
		ЗапросНаборДанных 	= СтрЗаменить(ЗапросНаборДанных, ТекстЗапроса, ТекстЗамены);
		
		СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос = ЗапросНаборДанных; 
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьГруппировкуНижнегоУровня()

#КонецОбласти

#КонецЕсли