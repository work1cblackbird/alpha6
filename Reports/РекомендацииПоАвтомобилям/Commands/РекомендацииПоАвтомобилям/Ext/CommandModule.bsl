#Область ОбработчикиСобытий

// Обработчик события нажатия кнопки "Рекомендации по автомобилям".
//
// Параметры:
//  ПараметрКоманды - Произвольный - В параметр передается значение от источника, в котором реализована команда
//  ПараметрыВыполненияКоманды - ПараметрыВыполненияКоманды - В обработчике команды можно
//  изменить значение свойств параметра Окно и Уникальность.
//
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Если ПараметрКоманды = Неопределено ИЛИ ПараметрКоманды.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	// фильтры
	ОтчетОтбор = Новый Структура;
	ОтчетОтбор.Вставить("Автомобиль", ?(ТипЗнч(ПараметрКоманды) = Тип("СправочникСсылка.Автомобили"), ПараметрКоманды, ПолучитьАвто(ПараметрКоманды)));
	
	ОткрытьФорму("Отчет.РекомендацииПоАвтомобилям.Форма", Новый Структура("Отбор,КлючВарианта,СформироватьПриОткрытии", ОтчетОтбор, "ИсторияРекомендаций", Истина), ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность);
	
	//Если Ссылка.Пустая() ИЛИ Ссылка.ЭтоГруппа Тогда
	//	Возврат;
	//КонецЕсли; 
	//
	//#Если Клиент Тогда
	//
	//Отчет = Отчеты.РекомендацииПоАвтомобилям.Создать();
	//Отчет.ЗаполнитьНачальныеНастройки();
	//
	//МетаданныеОтчета  = Отчет.Метаданные();
	//ВариантОтчета     = Отчет.СхемаКомпоновкиДанных.ВариантыНастроек.ИсторияРекомендаций;
	//НастройкиВарианта = ВариантОтчета.Настройки;
	//
	//НастройкиВарианта.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаОкончания", КонецДня(?(ДатаКонца=Неопределено,КонецМесяца(ТекущаяДата()),ДатаКонца)));
	//НастройкиВарианта.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаНачала",  НачалоДня(?(ДатаНачала=Неопределено,НачалоМесяца(ТекущаяДата()),ДатаНачала)));
	//
	//НастройкиВарианта.ПараметрыДанных.УстановитьЗначениеПараметра("ТипЦен", обПраво("ОсновнойТипЦенПродажиАвтомобилей"));
	//НастройкиВарианта.ПараметрыДанных.УстановитьЗначениеПараметра("ТипЦенРабот",обПраво("ОсновнойТипЦенРабот"));
	//НастройкиВарианта.ПараметрыДанных.УстановитьЗначениеПараметра("ВалютаОтчета", Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить());
	//
	//СтруктураОтчета = НастройкиВарианта.Структура;
	//СтруктураОтчета.Очистить();
	//
	//ТаблицаОтчета = СтруктураОтчета.Добавить(Тип("ТаблицаКомпоновкиДанных"));
	//
	//// добавляем измерения строки
	//ГруппировкаТиповРекомендации = ОтчетыПлатформаСервер.СКД_ДобавитьГруппировку(ТаблицаОтчета.Строки, "ТипРекомендации");
	//ГруппировкаСтатус    = ОтчетыПлатформаСервер.СКД_ДобавитьГруппировку(ГруппировкаТиповРекомендации.Структура, "Статус");
	////ГруппировкаАвтомобиль     = ОтчетыПлатформаСервер.СКД_ДобавитьГруппировку(ГруппировкаСтатус.Структура, "Автомобиль");
	//ГруппировкаРекомендация     = ОтчетыПлатформаСервер.СКД_ДобавитьГруппировку(ГруппировкаСтатус.Структура, "Рекомендация");
	
	//ОтчетыПлатформаСервер.КомпоновщикУстановитьОтбор(НастройкиВарианта, "Автомобиль", Ссылка, ВидСравненияКомпоновкиДанных.Равно);
	
	//ИмяФормыОтчета = МетаданныеОтчета.ПолноеИмя() + ".Форма";
	//
	//СтруктураПараметров = Новый Структура();
	//СтруктураПараметров.Вставить("Вариант",                 НастройкиВарианта);
	//СтруктураПараметров.Вставить("ЗаполнитьНастроки",       Ложь);
	//СтруктураПараметров.Вставить("КлючВарианта",            ВариантОтчета.Имя);
	//СтруктураПараметров.Вставить("ПредставлениеВарианта",   ВариантОтчета.Представление);
	//СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
	//СтруктураПараметров.Вставить("ВариантЗагрузкиПериода",  "ВариантСтандартногоПериода.ПроизвольныйПериод");
	//
	//ОткрытьФорму(ИмяФормыОтчета, СтруктураПараметров);
	//
	//#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает автомобиль документа
//
&НаСервере
Функция ПолучитьАвто(Документ)
	Если ЕстьРеквизит(Документ, "СводныйРемонтныйЗаказ") Тогда
		Возврат Документ.СводныйРемонтныйЗаказ.Автомобиль;
	Иначе
		Возврат Документ.Автомобиль;
	КонецЕсли;
КонецФункции

#КонецОбласти