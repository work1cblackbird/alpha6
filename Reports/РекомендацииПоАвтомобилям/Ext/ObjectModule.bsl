#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = ПолучитьОсновнойЗапрос();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаРекомендаций", Запрос.Выполнить());
	
	ОтчетыПлатформаСервер.ВывестиОтчет(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, ВнешниеНаборыДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура КомпоновщикПолучитьПоляОтбора(ОтборКомпоновки, УникальныеПоля = Неопределено)
	
	Если УникальныеПоля = Неопределено Тогда
		УникальныеПоля = Новый Структура;
	КонецЕсли;
	
	Для Каждого ТекОтбор Из ОтборКомпоновки.Элементы Цикл
		
		Если НЕ ТекОтбор.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(ТекОтбор) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			КомпоновщикПолучитьПоляОтбора(ТекОтбор, УникальныеПоля);
		Иначе
			ИмяОтбора = СокрЛП(ТекОтбор.ЛевоеЗначение);
			Если ИмяОтбора = "" Тогда
				Продолжить;
			КонецЕсли;
			
			ПозицияТочки = Найти(ИмяОтбора, ".");
			Если ПозицияТочки > 0 Тогда
				ИмяОтбора = Лев(ИмяОтбора, ПозицияТочки);
			КонецЕсли;
			
			УникальныеПоля.Вставить(ИмяОтбора);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // КомпоновщикПолучитьПоляСтруктуры()

Функция ПолучитьТаблицуПодразделений()
	
	ПодразделениеЦены = Справочники.ПодразделенияКомпании.ОсновноеПодразделение;
	
	ТаблицаПодразделений = Новый ТаблицаЗначений;
	ТаблицаПодразделений.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияКомпании"));
	ТаблицаПодразделений.Колонки.Добавить("Уровень",       Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
	
	Уровень     = 0;
	ТекРодитель = ПодразделениеЦены;
	Пока ЗначениеЗаполнено(ТекРодитель) Цикл
		НоваяСтрока = ТаблицаПодразделений.Добавить();
		НоваяСтрока.Уровень       = Уровень;
		НоваяСтрока.Подразделение = ТекРодитель;
		
		Уровень = Уровень + 1;
		ТекРодитель = ТекРодитель.Родитель;
	КонецЦикла;
	
	НоваяСтрока = ТаблицаПодразделений.Добавить();
	НоваяСтрока.Уровень       = Уровень;
	НоваяСтрока.Подразделение = Справочники.ПодразделенияКомпании.ПустаяСсылка();
	
	Возврат ТаблицаПодразделений;
	
КонецФункции

Функция ПолучитьТаблицыГрупп(Запрос, Степень, Уровень = 0)
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Автоработы.Элемент КАК Элемент,
	|	ВЫРАЗИТЬ(Автоработы.Группа КАК Справочник.Автоработы).Родитель КАК Группа,
	|	" + Формат(Уровень, "ЧС=-" + Степень + "; ЧГ=0") + " КАК Приоритет
	|ПОМЕСТИТЬ
	|	Уровень" + Уровень + "
	|ИЗ
	|	Уровень" + Строка(Уровень - 1) + " КАК Автоработы
	|ГДЕ
	|	(НЕ ВЫРАЗИТЬ(Автоработы.Группа КАК Справочник.Автоработы).Родитель = ЗНАЧЕНИЕ(Справочник.Автоработы.ПустаяСсылка))";
	
	Если Запрос.Выполнить().Выгрузить()[0].Количество = 0 Тогда
		КоличествоУровней = Уровень - 1;
	Иначе
		КоличествоУровней = ПолучитьТаблицыГрупп(Запрос, Степень, Уровень + 1);
	КонецЕсли;
	
	Возврат КоличествоУровней;
	
КонецФункции

Функция ПолучитьТаблицыГруппМоделей(Запрос, Уровень = 0)
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Модели.Элемент КАК Элемент,
	|	ВЫРАЗИТЬ(Модели.Группа КАК Справочник.Модели).Родитель КАК Группа
	|ПОМЕСТИТЬ
	|	Уровень" + Уровень + "
	|ИЗ
	|	Уровень" + Строка(Уровень - 1) + " КАК Модели
	|ГДЕ
	|	(НЕ ВЫРАЗИТЬ(Модели.Группа КАК Справочник.Модели).Родитель = ЗНАЧЕНИЕ(Справочник.Модели.ПустаяСсылка))";
	
	Если Запрос.Выполнить().Выгрузить()[0].Количество = 0 Тогда
		КоличествоУровней = Уровень - 1;
	Иначе
		КоличествоУровней = ПолучитьТаблицыГруппМоделей(Запрос, Уровень + 1);
	КонецЕсли;
	
	Возврат КоличествоУровней;
	
КонецФункции

Функция ПолучитьТекстТаблицыЦенАвторабот(Запрос, КоличествоУровней, ТекстОтбора = "")
	
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	РекомендацииПоАвтомобилю.Модель КАК Модель,
	|	РекомендацииПоАвтомобилю.Рекомендация КАК Авторабота
	|ПОМЕСТИТЬ
	|	ТаблицаРабот
	|ИЗ
	|	РекомендацииПоАвтомобилю КАК РекомендацииПоАвтомобилю
	|ГДЕ
	|	РекомендацииПоАвтомобилю.Рекомендация ССЫЛКА Справочник.Автоработы
	|СГРУППИРОВАТЬ ПО
	|	РекомендацииПоАвтомобилю.Модель,
	|	РекомендацииПоАвтомобилю.Рекомендация
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаРабот.Модель КАК Элемент,
	|	ТаблицаРабот.Модель КАК Группа
	|ПОМЕСТИТЬ
	|	Уровень0
	|ИЗ
	|	ТаблицаРабот КАК ТаблицаРабот
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРабот.Модель
	|;
	|";
	
	ОчиститьТаблицы = Ложь;
	Если Запрос.Выполнить().Выгрузить()[0].Количество = 0 Тогда
		КоличествоУровней = 0;
	Иначе
		ОчиститьТаблицы = Истина;
		КоличествоУровней = ПолучитьТаблицыГруппМоделей(Запрос, 1);
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ОбъединенныйЗапрос.Элемент КАК Справочник.Модели) КАК Модель,
	|	ВЫРАЗИТЬ(ОбъединенныйЗапрос.Группа КАК Справочник.Модели) КАК Группа,
	|	ОбъединенныйЗапрос.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ТаблицаПриоритетовМодели
	|ИЗ
	|	(ВЫБРАТЬ
	|		Модели.Элемент КАК Элемент,
	|		Модели.Группа КАК Группа,
	|		0 КАК Приоритет
	|	ИЗ Уровень0 КАК Модели";
	
	ТекстЗапросаУдаленияТаблиц = "";
	Для Итерация = 1 По КоличествоУровней Цикл
		
		ТекстЗапроса = ТекстЗапроса + "
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Модели.Элемент КАК Элемент,
		|		Модели.Группа КАК Группа,
		|		" + Строка(Итерация) + " КАК Приоритет
		|	ИЗ
		|		Уровень" + Строка(Итерация) + " КАК Модели";
		
		ТекстЗапросаУдаленияТаблиц = ТекстЗапросаУдаленияТаблиц + "
		|УНИЧТОЖИТЬ
		|	Уровень" + Строка(Итерация) + "
		|;
		|";
		
	КонецЦикла;
	
	Если ОчиститьТаблицы Тогда
		ТекстЗапросаУдаленияТаблиц = ТекстЗапросаУдаленияТаблиц + "
		|УНИЧТОЖИТЬ
		|	Уровень" + Строка(КоличествоУровней + 1) + "
		|;
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|		Модели.Элемент КАК Элемент,
	|		ЗНАЧЕНИЕ(Справочник.Модели.ПустаяСсылка) КАК Группа,
	|		" + Строка(КоличествоУровней + 1) + "
	|	ИЗ
	|		Уровень0 КАК Модели) КАК ОбъединенныйЗапрос
	|ИНДЕКСИРОВАТЬ ПО
	|	Группа
	|;
	|
	|УНИЧТОЖИТЬ
	|	Уровень0
	|;
	|" + ТекстЗапросаУдаленияТаблиц;
	
	Запрос.Текст = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ТаблицаРабот.Авторабота КАК Элемент,
	|	ТаблицаРабот.Авторабота КАК Группа
	|ПОМЕСТИТЬ
	|	Уровень0
	|ИЗ
	|	ТаблицаРабот КАК ТаблицаРабот
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРабот.Авторабота
	|;
	|";
	
	Если Запрос.Выполнить().Выгрузить()[0].Количество = 0 Тогда
		КоличествоУровней = 0;
	Иначе
		КоличествоУровней = ПолучитьТаблицыГрупп(Запрос, СтрДлина(КоличествоУровней + 1), 1);
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ОбъединенныйЗапрос.Элемент КАК Справочник.Автоработы) КАК Авторабота,
	|	ВЫРАЗИТЬ(ОбъединенныйЗапрос.Группа КАК Справочник.Автоработы) КАК Группа,
	|	ОбъединенныйЗапрос.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ТаблицаПриоритетовРабот
	|ИЗ 
	| (ВЫБРАТЬ
	|	Автоработы.Элемент КАК Элемент,
	|	Автоработы.Группа КАК Группа,
	|	0 КАК Приоритет
	| ИЗ Уровень0 КАК Автоработы";
	
	ТекстЗапросаУдаленияТаблиц = "";
	Для Итерация = 1 По КоличествоУровней Цикл
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Автоработы.Элемент КАК Элемент,
		|	Автоработы.Группа КАК Группа,
		|	Автоработы.Приоритет КАК Приоритет
		|ИЗ
		|	Уровень" + Строка(Итерация) + " КАК Автоработы";
		
		ТекстЗапросаУдаленияТаблиц = ТекстЗапросаУдаленияТаблиц + "
		|УНИЧТОЖИТЬ
		|	Уровень" + Строка(Итерация) + "
		|;
		|";
		
	КонецЦикла;
	
	Если КоличествоУровней > 0 Тогда
		ТекстЗапросаУдаленияТаблиц = ТекстЗапросаУдаленияТаблиц + "
		|УНИЧТОЖИТЬ
		|	Уровень" + Строка(КоличествоУровней + 1) + "
		|;
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|		Автоработы.Элемент КАК Элемент,
	|		ЗНАЧЕНИЕ(Справочник.Автоработы.ПустаяСсылка) КАК Группа,
	|		" + Строка(КоличествоУровней + 1) + "
	|	ИЗ
	|		Уровень0 КАК Автоработы) КАК ОбъединенныйЗапрос
	|ИНДЕКСИРОВАТЬ ПО
	|	Группа
	|;
	|
	|УНИЧТОЖИТЬ
	|	Уровень0
	|;
	|" + ТекстЗапросаУдаленияТаблиц + "
	|
	|ВЫБРАТЬ
	|	ТаблицаРабот.Модель КАК Модель,
	|	ТаблицаРабот.Авторабота КАК Авторабота,
	|	ТаблицаПриоритетовРабот.Группа  КАК ГруппаАвторабота,
	|	ЕСТЬNULL(ТаблицаПриоритетовМодели.Группа, ЗНАЧЕНИЕ(Справочник.Модели.ПустаяСсылка)) КАК ГруппаМодель,
	|	ТаблицаПриоритетовРабот.Приоритет + ЕСТЬNULL(ТаблицаПриоритетовМодели.Приоритет, 0) КАК Приоритет,
	|	ЕСТЬNULL(НормыВремениМодели.ВремяВыполнения, 0) КАК ВремяВыполнения
	|ПОМЕСТИТЬ
	|	ТаблицаПриоритетов
	|ИЗ
	|	ТаблицаРабот КАК ТаблицаРабот
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ТаблицаПриоритетовРабот КАК ТаблицаПриоритетовРабот
	|ПО
	|	ТаблицаРабот.Авторабота = ТаблицаПриоритетовРабот.Авторабота
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ТаблицаПриоритетовМодели КАК ТаблицаПриоритетовМодели
	|ПО
	|	ТаблицаРабот.Модель = ТаблицаПриоритетовМодели.Модель
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Автоработы.НормыВремени КАК НормыВремениМодели
	|ПО
	|	ТаблицаРабот.Авторабота                = НормыВремениМодели.Ссылка И 
	|	ТаблицаПриоритетовМодели.Группа        = НормыВремениМодели.Модель И 
	|	НормыВремениМодели.ВариантКомплектации = ЗНАЧЕНИЕ(Справочник.ВариантыКомплектации.ПустаяСсылка)
	|;
	|
	|УНИЧТОЖИТЬ
	|	ТаблицаРабот
	|;
	|
	|УНИЧТОЖИТЬ
	|	ТаблицаПриоритетовРабот
	|;
	|
	|УНИЧТОЖИТЬ
	|	ТаблицаПриоритетовМодели
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаПриоритетов.Модель КАК Модель,
	|	ТаблицаПриоритетов.Авторабота КАК Авторабота,
	|	МИНИМУМ(ТаблицаПриоритетов.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ
	|	СрезПоследнихВремяВыполнения
	|ИЗ
	|	ТаблицаПриоритетов КАК ТаблицаПриоритетов
	|ГДЕ
	|	ТаблицаПриоритетов.ВремяВыполнения>0
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПриоритетов.Модель,
	|	ТаблицаПриоритетов.Авторабота
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаПриоритетов.Модель КАК Модель,
	|	ТаблицаПриоритетов.Авторабота КАК Авторабота,
	|	ТаблицаПриоритетов.ВремяВыполнения КАК ВремяВыполнения
	|ПОМЕСТИТЬ
	|	ВремяВыполненияПоМоделям
	|ИЗ
	|	СрезПоследнихВремяВыполнения КАК СрезПоследних
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ТаблицаПриоритетов КАК ТаблицаПриоритетов
	|ПО
	|	СрезПоследних.Модель     = ТаблицаПриоритетов.Модель И 
	|	СрезПоследних.Авторабота = ТаблицаПриоритетов.Авторабота И 
	|	СрезПоследних.Приоритет  = ТаблицаПриоритетов.Приоритет
	|;
	|
	|УНИЧТОЖИТЬ
	|	СрезПоследнихВремяВыполнения
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаПриоритетов.Модель КАК Модель,
	|	ТаблицаПриоритетов.Авторабота КАК Авторабота,
	|	ТаблицаПриоритетов.Приоритет КАК Приоритет,
	|	ТаблицаЦен.Период КАК Период,
	|	ТаблицаЦен.Нормочас КАК Нормочас,
	|	ТаблицаЦен.Валюта КАК Валюта,
	|	ТаблицаЦен.Цена КАК Цена,
	|	ЦеныНормочасовСрезПоследних.Цена КАК ЦенаНормч,
	|	ЦеныНормочасовСрезПоследних.Валюта КАК ВалютаНормч
	|ПОМЕСТИТЬ
	|	ТаблицаЦенРабот
	|
	|ИЗ
	|ТаблицаПриоритетов КАК ТаблицаПриоритетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныАвторабот КАК ТаблицаЦен
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНормочасов.СрезПоследних КАК ЦеныНормочасовСрезПоследних
	|		ПО ТаблицаЦен.Нормочас = ЦеныНормочасовСрезПоследних.Нормочас
	|	ПО ТаблицаПриоритетов.ГруппаАвторабота = ТаблицаЦен.Авторабота
	|		И ТаблицаПриоритетов.ГруппаМодель = ТаблицаЦен.Модель
	|
	|ГДЕ
	|	ТаблицаЦен.Период               <= &КонецПериода И 
	|	ТаблицаЦен.ТипЦен                = &ТипЦенРабот И 
	|	ТаблицаЦен.ВидРемонта            = ЗНАЧЕНИЕ(Справочник.ВидыРемонта.ПустаяСсылка) И 
	|	ТаблицаЦен.ДоговорВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ДоговорыВзаиморасчетов.ПустаяСсылка) И 
	|	ТаблицаЦен.Цех                   = ЗНАЧЕНИЕ(Справочник.Цеха.ПустаяСсылка)
	|;
	|
	|УНИЧТОЖИТЬ
	|	ТаблицаПриоритетов
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаЦенРабот.Модель КАК Модель,
	|	ТаблицаЦенРабот.Авторабота КАК Авторабота,
	|	ТаблицаЦенРабот.Приоритет КАК Приоритет,
	|	МАКСИМУМ(ТаблицаЦенРабот.Период) КАК Период
	|ПОМЕСТИТЬ
	|	РаботыСрезПоследних
	|ИЗ
	|	ТаблицаЦенРабот КАК ТаблицаЦенРабот
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦенРабот.Модель,
	|	ТаблицаЦенРабот.Авторабота,
	|	ТаблицаЦенРабот.Приоритет
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаЦенРабот.Модель КАК Модель,
	|	ТаблицаЦенРабот.Авторабота КАК Авторабота,
	|	ТаблицаЦенРабот.Приоритет КАК Приоритет,
	|	ТаблицаЦенРабот.Нормочас КАК Нормочас,
	|	ТаблицаЦенРабот.Валюта КАК Валюта,
	|	ТаблицаЦенРабот.Цена КАК Цена,
	|	ТаблицаЦенРабот.ЦенаНормч КАК ЦенаНормч,
	|   ТаблицаЦенРабот.ВалютаНормч КАК ВалютаНормч
	|ПОМЕСТИТЬ
	|	ПромежуточнаяТаблицаЦенРабот
	|ИЗ
	|	РаботыСрезПоследних КАК РаботыСрезПоследних
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ТаблицаЦенРабот КАК ТаблицаЦенРабот
	|ПО
	|	РаботыСрезПоследних.Период     = ТаблицаЦенРабот.Период И 
	|	РаботыСрезПоследних.Модель     = ТаблицаЦенРабот.Модель И 
	|	РаботыСрезПоследних.Авторабота = ТаблицаЦенРабот.Авторабота И 
	|	РаботыСрезПоследних.Приоритет  = ТаблицаЦенРабот.Приоритет
	|;
	|
	|УНИЧТОЖИТЬ
	|	РаботыСрезПоследних
	|;
	|
	|УНИЧТОЖИТЬ
	|	ТаблицаЦенРабот
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаЦенРабот.Модель КАК Модель,
	|	ТаблицаЦенРабот.Авторабота КАК Авторабота,
	|	МИНИМУМ(ТаблицаЦенРабот.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ
	|	РаботыСрезПоследних
	|ИЗ
	|	ПромежуточнаяТаблицаЦенРабот КАК ТаблицаЦенРабот
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦенРабот.Модель,
	|	ТаблицаЦенРабот.Авторабота
	|;
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстТаблицыЦенАвторабот()

Функция ПолучитьОсновнойЗапрос()
	
	ТипЦен        = ОтчетыПлатформаСервер.КомпоновщикПолучитьЗначениеПараметра("ТипЦен",        КомпоновщикНастроек.Настройки);
	ТипЦенРабот   = ОтчетыПлатформаСервер.КомпоновщикПолучитьЗначениеПараметра("ТипЦенРабот",   КомпоновщикНастроек.Настройки);
	НачалоПериода = ОтчетыПлатформаСервер.КомпоновщикПолучитьЗначениеПараметра("НачалоПериода", КомпоновщикНастроек.Настройки);
	КонецПериода  = ОтчетыПлатформаСервер.КомпоновщикПолучитьЗначениеПараметра("КонецПериода",  КомпоновщикНастроек.Настройки);
	ВалютаОтчета  = ОтчетыПлатформаСервер.КомпоновщикПолучитьЗначениеПараметра("ВалютаОтчета",  КомпоновщикНастроек.Настройки);
	
	РабочийТипЦенРабот = ТипЦенРабот;
	ШаблонЦенаРабот = "ТаблицаЦенРабот.Цена";
	
	// Если расчетная цена получим базовую цену
	Пока РабочийТипЦенРабот.Рассчитывается Цикл
		
		Если РабочийТипЦенРабот.ПроцентСкидкиНаценки <> 0 Тогда
			ШаблонЦенаРабот = "("+ШаблонЦенаРабот+"+"+ШаблонЦенаРабот+"*"+Формат(РабочийТипЦенРабот.ПроцентСкидкиНаценки/100, "ЧРД=.")+")";
		КонецЕсли;
		
		РабочийТипЦенРабот = РабочийТипЦенРабот.БазовыйТипЦен;
		
	КонецЦикла;
	
	РабочийТипЦен = ТипЦен;
	ШаблонЦена = "ТаблицаЦен.Цена";
	
	// Если расчетная цена получим базовую цену
	Пока РабочийТипЦен.Рассчитывается Цикл
		
		Если РабочийТипЦен.ПроцентСкидкиНаценки <> 0 Тогда
			ШаблонЦена = "("+ШаблонЦена+"+"+ШаблонЦена+"*"+Формат(РабочийТипЦен.ПроцентСкидкиНаценки/100, "ЧРД=.")+")";
		КонецЕсли;
		
		РабочийТипЦен = РабочийТипЦен.БазовыйТипЦен;
		
	КонецЦикла;
	
	КурсВалюты = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(КонецПериода, Новый Структура("Валюта", ВалютаОтчета));
	КурсВалютыОтчета = КурсВалюты.Курс/?(КурсВалюты.Кратность=0,1,КурсВалюты.Кратность);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("КурсВалютыОтчета", ?(КурсВалютыОтчета=0,1,КурсВалютыОтчета));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",  КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ТипЦен",        РабочийТипЦен);
	Запрос.УстановитьПараметр("ТипЦенРабот",   РабочийТипЦенРабот);
	Запрос.УстановитьПараметр("ВалютаЦены",    РабочийТипЦен.ВалютаЦены);
	
	// Таблица родителей подразделения
	ТаблицаПодразделений  = ПолучитьТаблицуПодразделений();
	
	Запрос.УстановитьПараметр("ТаблицаПодразделений", ТаблицаПодразделений);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоответствиеЗамен = Новый Соответствие;
	ОсобыеПоля        = Новый Массив();
	ОсобыеПоля.Добавить("Статус");
	ОсобыеПоля.Добавить("ДатаОтклонения");
	ОсобыеПоля.Добавить("ДатаВыполнения");
	
	ОтборКомпоновки = КомпоновщикНастроек.Настройки.Отбор;
	
	ТекстОтбораОбычныеПоля = ОтчетыПлатформаСервер.КомпоновщикПолучитьТекстОтбора(ОтборКомпоновки.Элементы, ОтборКомпоновки.ДоступныеПоляОтбора, "РекомендацииПоАвтомобилю", Запрос.Параметры, СоответствиеЗамен, , ОсобыеПоля);
	
	ТекстОтбора = "";
	Если НЕ ТекстОтбораОбычныеПоля = "" Тогда
		ТекстОтбора = ТекстОтбора + " И " + Символы.ПС + ТекстОтбораОбычныеПоля;
	КонецЕсли;
	
	СоответствиеЗамен.Вставить("Статус", "ВЫБОР
	|	КОГДА РекомендацииПоАвтомобилю.Выполнена = ИСТИНА ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Завершено)
	|	КОГДА (НЕ РекомендацииПоАвтомобилю.ПричинаОтказа = ЗНАЧЕНИЕ(Справочник.ПричиныОтказаОтОбслуживания.ПустаяСсылка)) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Отменено)
	|	КОГДА (РекомендацииПоАвтомобилю.ЗаказНаряд <> ЗНАЧЕНИЕ(Документ.ЗаказНаряд.ПустаяСсылка)
	|			И РекомендацииПоАвтомобилю.ЗаказНаряд <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРемонт.ПустаяСсылка)) ТОГДА

	|		ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Выполняется)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Запланировано)
	|КОНЕЦ");
	СоответствиеЗамен.Вставить("ДатаОтклонения", "ВЫБОР
	|	КОГДА РекомендацииПоАвтомобилю.ПричинаОтказа = ЗНАЧЕНИЕ(Справочник.ПричиныОтказаОтОбслуживания.ПустаяСсылка) ТОГДА
	|		ДАТАВРЕМЯ(1,1,1)
	|	ИНАЧЕ
	|		РекомендацииПоАвтомобилю.ДатаВыполнения
	|	КОНЕЦ");
	СоответствиеЗамен.Вставить("ДатаВыполнения", "ВЫБОР
	|	КОГДА РекомендацииПоАвтомобилю.ПричинаОтказа = ЗНАЧЕНИЕ(Справочник.ПричиныОтказаОтОбслуживания.ПустаяСсылка) ТОГДА
	|		РекомендацииПоАвтомобилю.ДатаВыполнения
	|	ИНАЧЕ
	|		ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ");
	
	ТекстОтбораОсобыеПоля = ОтчетыПлатформаСервер.КомпоновщикПолучитьТекстОтбора(ОтборКомпоновки.Элементы, ОтборКомпоновки.ДоступныеПоляОтбора, "", Запрос.Параметры, СоответствиеЗамен, ОсобыеПоля);
	
	Если НЕ ТекстОтбораОсобыеПоля = "" Тогда
		ТекстОтбора = ТекстОтбора + " И " + Символы.ПС + ТекстОтбораОсобыеПоля;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПодразделений.Подразделение КАК Подразделение,
	|	ТаблицаПодразделений.Уровень КАК Уровень
	|ПОМЕСТИТЬ
	|	ТаблицаПодразделений
	| ИЗ
	|	&ТаблицаПодразделений КАК ТаблицаПодразделений
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение
	|;
	|
	|ВЫБРАТЬ
	|	РекомендацииПоАвтомобилю.Период КАК Период,
	|	РекомендацииПоАвтомобилю.Автомобиль КАК Автомобиль,
	|	РекомендацииПоАвтомобилю.Автомобиль.Модель КАК Модель,
	|	РекомендацииПоАвтомобилю.Автомобиль.ВариантКомплектации КАК ВариантКомплектации,
	|	РекомендацииПоАвтомобилю.Рекомендация КАК Рекомендация,
	|	РекомендацииПоАвтомобилю.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА РекомендацииПоАвтомобилю.ЗаказНаряд = ЗНАЧЕНИЕ(Документ.ЗаказНаряд.ПустаяСсылка) ТОГДА
	|			РекомендацииПоАвтомобилю.ЗаявкаНаРемонт
	|		ИНАЧЕ
	|			РекомендацииПоАвтомобилю.ЗаказНаряд
	|	КОНЕЦ КАК ЗаказНаряд,
	|	РекомендацииПоАвтомобилю.ПричинаОтказа КАК ПричинаОтказа,
	|	РекомендацииПоАвтомобилю.ДатаВыполнения КАК ДатаВыполнения,
	|	РекомендацииПоАвтомобилю.Автор КАК Автор,
	|	РекомендацииПоАвтомобилю.Исполнитель КАК Исполнитель,
	|	РекомендацииПоАвтомобилю.Выполнена КАК Выполнена,
	|	РекомендацииПоАвтомобилю.ДатаАктуальности КАК ДатаАктуальности
	|ПОМЕСТИТЬ
	|	РекомендацииПоАвтомобилю
	|ИЗ
	|	РегистрСведений.РекомендацииПоАвтомобилю КАК РекомендацииПоАвтомобилю
	|ГДЕ
	|	РекомендацииПоАвтомобилю.Период МЕЖДУ &НачалоПериода И &КонецПериода " + ТекстОтбора + "
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаЦен.Период КАК Период,
	|	ТаблицаЦен.Номенклатура КАК Номенклатура,
	|	ТаблицаПодразделений.Уровень КАК Уровень,
	|	ТаблицаЦен.Цена КАК Цена
	|ПОМЕСТИТЬ
	|	ВремТаблицаЦен
	|ИЗ
	|	РекомендацииПоАвтомобилю КАК РекомендацииПоАвтомобилю
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.Цены КАК ТаблицаЦен
	|ПО
	|	РекомендацииПоАвтомобилю.Рекомендация = ТаблицаЦен.Номенклатура
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ТаблицаПодразделений КАК ТаблицаПодразделений
	|ПО
	|	ТаблицаПодразделений.Подразделение = ТаблицаЦен.ПодразделениеКомпании
	|ГДЕ
	|	ТаблицаЦен.Период<=&КонецПериода И 
	|	ТаблицаЦен.ТипЦен = &ТипЦен И 
	|	ТаблицаЦен.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) И 
	|	ТаблицаЦен.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) И 
	|	((ТаблицаЦен.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = ТаблицаЦен.Номенклатура.БазоваяЕдиницаИзмерения И ТаблицаЦен.ЕдиницаИзмерения.Коэффициент=1) ИЛИ
	|	(ТаблицаЦен.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка) И 
	|	НЕ ТаблицаЦен.Номенклатура.ТипНоменклатуры.УчетЦенТолькоВРазрезеДопПараметров))
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|УНИЧТОЖИТЬ
	|	ТаблицаПодразделений
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаЦен.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ТаблицаЦен.Период) КАК Период
	|ПОМЕСТИТЬ
	|	СрезПоследних
	|ИЗ
	|	ВремТаблицаЦен КАК ТаблицаЦен
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦен.Номенклатура
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|ВЫБРАТЬ
	|	ОптимальнаяТаблицаЦен.Номенклатура КАК Номенклатура,
	|	ТаблицаЦен.Уровень КАК Уровень,
	|	МАКСИМУМ(ТаблицаЦен.Цена) КАК Цена
	|ПОМЕСТИТЬ
	|	ТаблицаЦенПодразделений
	|ИЗ
	|	СрезПоследних КАК ОптимальнаяТаблицаЦен
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ВремТаблицаЦен КАК ТаблицаЦен
	|ПО
	|	ОптимальнаяТаблицаЦен.Номенклатура       = ТаблицаЦен.Номенклатура И 
	|	ОптимальнаяТаблицаЦен.Период             = ТаблицаЦен.Период
	|ГДЕ
	|	НЕ ТаблицаЦен.Цена = 0
	|СГРУППИРОВАТЬ ПО
	|	ОптимальнаяТаблицаЦен.Номенклатура,
	|	ТаблицаЦен.Уровень
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|УНИЧТОЖИТЬ
	|	ВремТаблицаЦен
	|;
	|
	|УНИЧТОЖИТЬ
	|	СрезПоследних
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаЦенПодразделений.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(ТаблицаЦенПодразделений.Уровень) КАК Уровень
	|ПОМЕСТИТЬ
	|	СрезПоследних
	|ИЗ
	|	ТаблицаЦенПодразделений КАК ТаблицаЦенПодразделений
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦенПодразделений.Номенклатура
	|;
	|";
	
	КоличествоУровней    = 0;
	ТекстОтбораАвторабот = "";
	ТекстЗапроса         = ПолучитьТекстТаблицыЦенАвторабот(Запрос, КоличествоУровней, ТекстОтбораАвторабот);
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	(КурсыВалютСрезПоследних.Курс/КурсыВалютСрезПоследних.Кратность)/&КурсВалютыОтчета КАК Коэффициент
	|ПОМЕСТИТЬ
	|	ТаблицаПересчета
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&КонецПериода, ) КАК КурсыВалютСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|";
	
	Запрос.Текст = ТекстЗапроса + "
	|
	|ВЫБРАТЬ
	|	РекомендацииПоАвтомобилю.Период КАК Период,
	|	РекомендацииПоАвтомобилю.Автомобиль КАК Автомобиль,
	|	РекомендацииПоАвтомобилю.Модель КАК Модель,
	|	РекомендацииПоАвтомобилю.ВариантКомплектации КАК ВариантКомплектации,
	|	РекомендацииПоАвтомобилю.Рекомендация КАК Рекомендация,
	|	РекомендацииПоАвтомобилю.Количество КАК Количество,
	|	РекомендацииПоАвтомобилю.ЗаказНаряд КАК ЗаказНаряд,
	|	РекомендацииПоАвтомобилю.ПричинаОтказа КАК ПричинаОтказа,
	|	ВЫБОР
	|		КОГДА РекомендацииПоАвтомобилю.ПричинаОтказа = ЗНАЧЕНИЕ(Справочник.ПричиныОтказаОтОбслуживания.ПустаяСсылка) ТОГДА
	|			ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ
	|			РекомендацииПоАвтомобилю.ДатаВыполнения
	|	КОНЕЦ КАК ДатаОтклонения,
	|	ВЫБОР
	|		КОГДА РекомендацииПоАвтомобилю.ПричинаОтказа = ЗНАЧЕНИЕ(Справочник.ПричиныОтказаОтОбслуживания.ПустаяСсылка) ТОГДА
	|			РекомендацииПоАвтомобилю.ДатаВыполнения
	|		ИНАЧЕ
	|			ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаВыполнения,
	|	РекомендацииПоАвтомобилю.Автор КАК Автор,
	|	РекомендацииПоАвтомобилю.Исполнитель КАК Исполнитель,
	|	РекомендацииПоАвтомобилю.Выполнена КАК Выполнена,
	|	РекомендацииПоАвтомобилю.ДатаАктуальности КАК ДатаАктуальности,
	|	ВЫБОР
	|		КОГДА РекомендацииПоАвтомобилю.Выполнена = ИСТИНА ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Завершено)
	|		КОГДА (НЕ РекомендацииПоАвтомобилю.ПричинаОтказа = ЗНАЧЕНИЕ(Справочник.ПричиныОтказаОтОбслуживания.ПустаяСсылка)) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Отменено)
	|		КОГДА (РекомендацииПоАвтомобилю.ЗаказНаряд <> ЗНАЧЕНИЕ(Документ.ЗаказНаряд.ПустаяСсылка)
	|				И РекомендацииПоАвтомобилю.ЗаказНаряд <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРемонт.ПустаяСсылка)) ТОГДА

	|			ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Выполняется)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияСобытий.Запланировано)
	|	КОНЕЦ КАК Статус,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РекомендацииПоАвтомобилю.Рекомендация) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ""Детали""
	|		ИНАЧЕ ""Работы""
	|	КОНЕЦ КАК ТипРекомендации,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаЦен.Цена ЕСТЬ NULL ТОГДА
	|			"+ШаблонЦена+"
	|		КОГДА ТаблицаЦенРабот.ЦенаНормч ЕСТЬ NULL ТОГДА
	|			0
	|		КОГДА ТаблицаЦенРабот.Нормочас = ЗНАЧЕНИЕ(Справочник.Нормочасы.ПустаяСсылка) ТОГДА
	|			"+ШаблонЦенаРабот+"
	|		КОГДА НЕ НормыВремениРабот.ВремяВыполнения ЕСТЬ NULL ТОГДА
	|			ТаблицаЦенРабот.ЦенаНормч*НормыВремениРабот.ВремяВыполнения
	|		КОГДА НЕ НормыВремениМодели.ВремяВыполнения ЕСТЬ NULL ТОГДА
	|			ТаблицаЦенРабот.ЦенаНормч*НормыВремениМодели.ВремяВыполнения
	|		КОГДА НЕ НормыВремениОбщ.ВремяВыполнения ЕСТЬ NULL ТОГДА
	|			ТаблицаЦенРабот.ЦенаНормч*НормыВремениОбщ.ВремяВыполнения
	|	КОНЕЦ*ЕСТЬNULL(ТаблицаПересчета.Коэффициент, 1)*РекомендацииПоАвтомобилю.Количество КАК Сумма
	|ИЗ
	|	РекомендацииПоАвтомобилю КАК РекомендацииПоАвтомобилю
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	СрезПоследних КАК СрезПоследних
	|ПО
	|	РекомендацииПоАвтомобилю.Рекомендация = СрезПоследних.Номенклатура
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ТаблицаЦенПодразделений КАК ТаблицаЦен
	|ПО
	|	СрезПоследних.Номенклатура = ТаблицаЦен.Номенклатура И 
	|	СрезПоследних.Уровень      = ТаблицаЦен.Уровень
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РаботыСрезПоследних КАК РаботыСрезПоследних
	|ПО
	|	РекомендацииПоАвтомобилю.Модель     = РаботыСрезПоследних.Модель И 
	|	РекомендацииПоАвтомобилю.Рекомендация = РаботыСрезПоследних.Авторабота
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ПромежуточнаяТаблицаЦенРабот КАК ТаблицаЦенРабот
	|ПО
	|	РаботыСрезПоследних.Модель     = ТаблицаЦенРабот.Модель И 
	|	РаботыСрезПоследних.Авторабота = ТаблицаЦенРабот.Авторабота И 
	|	РаботыСрезПоследних.Приоритет  = ТаблицаЦенРабот.Приоритет
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Автоработы.НормыВремени КАК НормыВремениРабот
	|ПО
	|	РекомендацииПоАвтомобилю.Рекомендация        = НормыВремениРабот.Ссылка И 
	|	РекомендацииПоАвтомобилю.Модель              = НормыВремениРабот.Модель И 
	|	РекомендацииПоАвтомобилю.ВариантКомплектации = НормыВремениРабот.ВариантКомплектации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВремяВыполненияПоМоделям КАК НормыВремениМодели
	|ПО
	|	РекомендацииПоАвтомобилю.Рекомендация = НормыВремениМодели.Авторабота И 
	|	РекомендацииПоАвтомобилю.Модель       = НормыВремениМодели.Модель
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Автоработы КАК НормыВремениОбщ
	|ПО
	|	РекомендацииПоАвтомобилю.Рекомендация = НормыВремениОбщ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ТаблицаПересчета КАК ТаблицаПересчета
	|ПО
	|	ВЫБОР
	|		" + ?(РабочийТипЦен.ВВалютеУчета, "КОГДА РекомендацииПоАвтомобилю.Рекомендация ССЫЛКА Справочник.Номенклатура ТОГДА
	|			ТаблицаПересчета.Валюта = РекомендацииПоАвтомобилю.Рекомендация.ВалютаУчета",
			"КОГДА РекомендацииПоАвтомобилю.Рекомендация ССЫЛКА Справочник.Номенклатура ТОГДА
	|			ТаблицаПересчета.Валюта = &ВалютаЦены")+"
	|		КОГДА ТаблицаЦенРабот.Нормочас = ЗНАЧЕНИЕ(Справочник.Нормочасы.ПустаяСсылка) ТОГДА
	|			ТаблицаЦенРабот.Валюта = ТаблицаПересчета.Валюта
	|		ИНАЧЕ
	|			ТаблицаЦенРабот.ВалютаНормч = ТаблицаПересчета.Валюта
	|	КОНЕЦ
	|";
	
	Возврат Запрос;
	
КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ТипЦен = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипЦен"));
	Если НЕ ЗначениеЗаполнено(ТипЦен.Значение) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не задан тип цен.'");
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	ТипЦенРабот = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипЦенРабот"));
	Если НЕ ЗначениеЗаполнено(ТипЦенРабот.Значение) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не задан тип цен работ.'");
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	ВалютаОтчета = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВалютаОтчета"));
	Если НЕ ЗначениеЗаполнено(ВалютаОтчета.Значение) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не задана валюта отчета.'");
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииНастроек(Форма) Экспорт
	
	ПараметрыДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	
	ВалютаОтчета = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВалютаОтчета"));
	Если НЕ ЗначениеЗаполнено(ВалютаОтчета.Значение) Тогда
		ВалютаОтчета.Значение = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	КонецЕсли;
	
	ТипЦен = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипЦен"));
	Если НЕ ЗначениеЗаполнено(ТипЦен.Значение) Тогда
		ТипЦен.Значение = ПраваИНастройкиПользователя.Значение("ОсновнойТипЦенПродажиАвтомобилей");
	КонецЕсли;
	
	ТипЦенРабот = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТипЦенРабот"));
	Если НЕ ЗначениеЗаполнено(ТипЦенРабот.Значение) Тогда
		ТипЦенРабот.Значение = ПраваИНастройкиПользователя.Значение("ОсновнойТипЦенРабот");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли