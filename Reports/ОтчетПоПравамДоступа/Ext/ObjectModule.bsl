#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура помогает настроить отчет непосредственно перед выводом
//
// Параметры:
//  ПараметрСхемаКомпоновкиДанных - СхемаКомпоновкиДанных - Схема компоновки данных.
//  Настройки - НастройкиКомпоновкиДанных - Копия настроек компоновки данных.
//
Процедура ПередФормированиемМакетаКомпоновки(ПараметрСхемаКомпоновкиДанных, Настройки) Экспорт
	
	Поля = Новый Массив;
	Поля.Добавить("ГруппаДоступа");
	Поля.Добавить("ПрофильГруппыДоступа");
	
	ОтчетыПлатформаСервер.КомпоновщикУстановитьОтборПустыхГруппировок(Настройки.Структура, Поля);
	
КонецПроцедуры // ПередФормированиемМакетаКомпоновки()

// Обработчик после формирования макета компоновки.
//
// Параметры:
//  МакетКомпоновки - МакетКомпоновкиДанных - Макет компоновки отчета.
//
Процедура ПослеФормированияМакетаКомпоновки(МакетКомпоновки) Экспорт
	
	НовыйМакет = МакетКомпоновки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Запрос = ПолучитьОсновнойЗапрос();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаПравДоступа", Запрос.Выполнить());
	
	ОтчетыПлатформаСервер.ВывестиОтчет(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, ВнешниеНаборыДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьСписокПрав(ТаблицаПрав, СсылкаНаМетаданное, Роль, ИмяОбъекта, СписокПрав, ВидОбъекта, Порядок)
	
	ТекущаяРоль = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Роль."+Роль.Имя);
	
	Если СписокПрав.Количество() = 0 Тогда
		НоваяСтрока = ТаблицаПрав.Добавить();
		НоваяСтрока.Роль = ТекущаяРоль;
		НоваяСтрока.Метаданные    = ИмяОбъекта;
		НоваяСтрока.Право         = "";
		НоваяСтрока.ВидМетаданных = ВидОбъекта;
		НоваяСтрока.Порядок       = Порядок;
	Иначе
		Для Каждого Право Из СписокПрав Цикл
			НоваяСтрока = ТаблицаПрав.Добавить();
			НоваяСтрока.Роль = ТекущаяРоль;
			НоваяСтрока.Метаданные    = ИмяОбъекта;
			НоваяСтрока.Право         = Право.Представление;
			НоваяСтрока.Значение      = ?(ПравоДоступа(Право.Значение, СсылкаНаМетаданное,Роль), 1, 0);
			НоваяСтрока.ВидМетаданных = ВидОбъекта;
			НоваяСтрока.Порядок       = Порядок;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРоли(ТаблицаПрав, ИмяОбъекта, СписокПрав, ВидОбъекта, Порядок, СписокРолей)
	
	СсылкаНаМетаданное = Метаданные.НайтиПоПолномуИмени(ИмяОбъекта);
	
	Для Каждого Роль Из Метаданные.Роли Цикл
		Если СписокРолей = Неопределено ИЛИ (СписокРолей.НайтиПоЗначению(Роль.Имя) <> Неопределено) Тогда
			ПолучитьСписокПрав(ТаблицаПрав, СсылкаНаМетаданное,Роль, ИмяОбъекта, СписокПрав, ВидОбъекта, Порядок);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьСписокПрав(СписокПравДоступа, НаборПрав, ЕстьНаборПравДоступа, ИмяПрава, ПредставлениеПрава)
	
	Если НЕ ЕстьНаборПравДоступа ИЛИ НаборПрав.НайтиПоЗначению(ИмяПрава) <> Неопределено Тогда
		СписокПравДоступа.Добавить(ИмяПрава, ИмяПрава);
	КонецЕсли;
	
КонецПроцедуры

Функция ПраваДоступаОбъектов(ТаблицаПрав)
	
	// Получим параметр по ограничению прав.
	Права = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Права")).Значение;
	
	НаборПрав = Новый СписокЗначений;
	
	ВыбранныеПрава = СтрЗаменить(Права, "; ", Символы.ПС);
	Для НомерСтроки = 1 По СтрЧислоСтрок(ВыбранныеПрава) Цикл
		Если ПустаяСтрока(СтрПолучитьСтроку(ВыбранныеПрава, НомерСтроки)) Тогда
			Продолжить;
		КонецЕсли;
		НаборПрав.Добавить(СтрПолучитьСтроку(ВыбранныеПрава, НомерСтроки));
	КонецЦикла;
	
	ЕстьНаборПрав = НЕ (НаборПрав = Неопределено ИЛИ НаборПрав.Количество() = 0);
	
	// СформироватьТаблицу с видами прав на документ
	СписокСВидамиПравДоступаНаСпр = Новый СписокЗначений;
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "Чтение", НСтр("ru = 'Чтение'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "Добавление", НСтр("ru = 'Добавление'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "Изменение", НСтр("ru = 'Изменение'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "Удаление", НСтр("ru = 'Удаление'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "Просмотр", НСтр("ru = 'Просмотр'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "ИнтерактивноеДобавление", НСтр("ru = 'Интерактивное добавление'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "Редактирование",НСтр("ru = 'Редактирование'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "ИнтерактивнаяПометкаУдаления",НСтр("ru = 'Интерактивная пометка удаления'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "ИнтерактивноеСнятиеПометкиУдаления", НСтр("ru = 'Интерактивное снятие пометки удаления'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "ИнтерактивноеУдаление", НСтр("ru = 'Интерактивное удаление'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "ИнтерактивноеУдалениеПомеченных", НСтр("ru = 'Интерактивное удаление помеченных'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаСпр, НаборПрав, ЕстьНаборПрав, "ВводПоСтроке", НСтр("ru = 'Ввод по строке'"));
	
	СписокСВидамиПравДоступаНаДок = СписокСВидамиПравДоступаНаСпр.Скопировать();
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаДок, НаборПрав, ЕстьНаборПрав, "Проведение", НСтр("ru = 'Проведение'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаДок, НаборПрав, ЕстьНаборПрав, "ОтменаПроведения", НСтр("ru = 'Отмена проведения'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаДок, НаборПрав, ЕстьНаборПрав, "ИнтерактивноеПроведение", НСтр("ru = 'Интерактивное проведение'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаДок, НаборПрав, ЕстьНаборПрав, "ИнтерактивноеПроведениеНеОперативное", НСтр("ru = 'Интерактивное проведение не оперативное'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаДок, НаборПрав, ЕстьНаборПрав, "ИнтерактивнаяОтменаПроведения", НСтр("ru = 'Интерактивная отмена проведения'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаДок, НаборПрав, ЕстьНаборПрав, "ИнтерактивноеИзменениеПроведенных", НСтр("ru = 'Интерактивное изменение проведенных'"));
	
	СписокСВидамиПравДоступаНаБизнесПроцесс = СписокСВидамиПравДоступаНаСпр.Скопировать();
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаБизнесПроцесс, НаборПрав, ЕстьНаборПрав, "ИнтерактивнаяАктивация",НСтр("ru = 'Интерактивная активация'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаБизнесПроцесс, НаборПрав, ЕстьНаборПрав, "ИнтерактивныйСтарт",НСтр("ru = 'Интерактивный старт'"));
	
	СписокСВидамиПравДоступаНаЗадачи = СписокСВидамиПравДоступаНаСпр.Скопировать();
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаЗадачи, НаборПрав, ЕстьНаборПрав, "ИнтерактивнаяАктивация",НСтр("ru = 'Интерактивная активация'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаЗадачи, НаборПрав, ЕстьНаборПрав, "ИнтерактивноеВыполнение",НСтр("ru = 'Интерактивное выполнение'"));
	
	СписокСВидамиПравДоступаНаРегистры = Новый СписокЗначений;
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаРегистры, НаборПрав, ЕстьНаборПрав, "Чтение", НСтр("ru = 'Чтение'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаРегистры, НаборПрав, ЕстьНаборПрав, "Изменение", НСтр("ru = 'Изменение'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаРегистры, НаборПрав, ЕстьНаборПрав, "Просмотр",НСтр("ru = 'Просмотр'"));
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаРегистры, НаборПрав, ЕстьНаборПрав, "Редактирование",НСтр("ru = 'Редактирование'"));
	
	СписокСВидамиПравДоступаНаОтчетыИОбработки = Новый СписокЗначений;
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаОтчетыИОбработки, НаборПрав, ЕстьНаборПрав, "Просмотр",НСтр("ru = 'Просмотр'"));
	
	СписокСВидамиПравДоступаНаОбщиеКоманды = Новый СписокЗначений;
	СформироватьСписокПрав(СписокСВидамиПравДоступаНаОбщиеКоманды, НаборПрав, ЕстьНаборПрав, "Просмотр",НСтр("ru = 'Просмотр'"));
	
	ОтборПоРоли = ОтчетыПлатформаСервер.КомпоновщикНайтиОтбор("Роль", КомпоновщикНастроек.Настройки.Отбор);
	
	СписокРолей = Неопределено;
	Если НЕ ОтборПоРоли = Неопределено И ОтборПоРоли.Использование
		И (ОтборПоРоли.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно 
		ИЛИ ОтборПоРоли.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке) Тогда
		Если НЕ ТипЗнч(ОтборПоРоли.ПравоеЗначение) = Тип("СписокЗначений") Тогда
			СписокРолей = Новый СписокЗначений;
			Если ЗначениеЗаполнено(ОтборПоРоли.ПравоеЗначение) Тогда
				СписокРолей.Добавить(ОтборПоРоли.ПравоеЗначение.Имя);
			КонецЕсли;
		Иначе
			СписокРолей = Новый СписокЗначений;
			Если ЗначениеЗаполнено(ОтборПоРоли.ПравоеЗначение) Тогда
				Для Каждого ТекущаяСтрока Из ОтборПоРоли.ПравоеЗначение Цикл
					СписокРолей.Добавить(ТекущаяСтрока.Значение.Имя);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ОтборПоВидуМетаданных = ОтчетыПлатформаСервер.КомпоновщикНайтиОтбор("ВидМетаданных", КомпоновщикНастроек.Настройки.Отбор);
	СписокВидМетаданных = Неопределено;
	Если НЕ ОтборПоВидуМетаданных = Неопределено И ОтборПоВидуМетаданных.Использование
		И (ОтборПоВидуМетаданных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно 
		ИЛИ ОтборПоВидуМетаданных.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке)Тогда
		Если НЕ ТипЗнч(ОтборПоВидуМетаданных.ПравоеЗначение) = Тип("СписокЗначений") Тогда
			СписокВидМетаданных = Новый СписокЗначений;
			Если ЗначениеЗаполнено(ОтборПоВидуМетаданных.ПравоеЗначение) Тогда
				СписокВидМетаданных.Добавить(ОтборПоВидуМетаданных.ПравоеЗначение);
			КонецЕсли;
		Иначе
			СписокВидМетаданных = Новый СписокЗначений;
			Если ЗначениеЗаполнено(ОтборПоВидуМетаданных.ПравоеЗначение) Тогда
				Для Каждого ТекущаяСтрока Из ОтборПоВидуМетаданных.ПравоеЗначение Цикл
					СписокВидМетаданных.Добавить(ТекущаяСтрока);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ОтборПоОбъектам = ОтчетыПлатформаСервер.КомпоновщикНайтиОтбор("Метаданные", КомпоновщикНастроек.Настройки.Отбор);
	СписокОбъектов = Неопределено;
	Если НЕ ОтборПоОбъектам = Неопределено И ОтборПоОбъектам.Использование
		И (ОтборПоОбъектам.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно 
		ИЛИ ОтборПоОбъектам.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит
		ИЛИ ОтборПоОбъектам.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке)Тогда
		Если НЕ ТипЗнч(ОтборПоОбъектам.ПравоеЗначение) = Тип("СписокЗначений") Тогда
			СписокОбъектов = Новый СписокЗначений;
			Если ЗначениеЗаполнено(ОтборПоОбъектам.ПравоеЗначение) Тогда
				СписокОбъектов.Добавить(ОтборПоОбъектам.ПравоеЗначение);
			КонецЕсли;
		Иначе
			СписокОбъектов = Новый СписокЗначений;
			Если ЗначениеЗаполнено(ОтборПоОбъектам.ПравоеЗначение) Тогда
				СписокОбъектов = ОтборПоОбъектам.ПравоеЗначение;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("Константы") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.Константы Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаРегистры, "Константы", 1, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("Справочники") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.Справочники Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаСпр, "Справочники", 2, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("Документы") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.Документы Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаДок, "Документы", 3, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("Обработки") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.Обработки Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаОтчетыИОбработки, "Обработки", 5, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("Отчеты") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.Отчеты Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаОтчетыИОбработки, "Отчеты", 6, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("ЖурналыДокументов") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.ЖурналыДокументов Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаОтчетыИОбработки, "ЖурналыДокументов", 4, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("ПланыВидовРасчета") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.ПланыВидовРасчета Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаСпр, "ПланыВидовРасчета", 9, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("ПланыВидовХарактеристик") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.ПланыВидовХарактеристик Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ТекущаяСтрока.ПолноеИмя(), СписокСВидамиПравДоступаНаСпр, "ПланыВидовХарактеристик", 7, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("ПланыСчетов") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.ПланыСчетов Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаСпр, "ПланыСчетов", 8, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("РегистрыСведений") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.РегистрыСведений Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаРегистры, "РегистрыСведений", 10, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("РегистрыНакопления") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.РегистрыНакопления Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаРегистры, "РегистрыНакопления", 11, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("РегистрыБухгалтерии") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.РегистрыБухгалтерии Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаРегистры, "РегистрыБухгалтерии", 12, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("РегистрыРасчета") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.РегистрыРасчета Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаРегистры, "РегистрыРасчета", 13, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("БизнесПроцессы") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.БизнесПроцессы Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаБизнесПроцесс, "БизнесПроцессы", 14, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("Задачи") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.Задачи Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаЗадачи, "Задачи", 15, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокВидМетаданных = Неопределено ИЛИ СписокВидМетаданных.НайтиПоЗначению("ОбщиеКоманды") <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Метаданные.ОбщиеКоманды Цикл
			ПолноеИмяОбъекта = ТекущаяСтрока.ПолноеИмя();
			Если СписокОбъектов = Неопределено ИЛИ СписокОбъектов.НайтиПоЗначению(ПолноеИмяОбъекта) <> Неопределено Тогда
				ЗаполнитьРоли(ТаблицаПрав, ПолноеИмяОбъекта, СписокСВидамиПравДоступаНаОбщиеКоманды, "ОбщиеКоманды", 16, СписокРолей);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

// Формирует текст запроса отчета
Функция ПолучитьОсновнойЗапрос()
	
	ТаблицаПрав = Новый ТаблицаЗначений;
	ТаблицаПрав.Колонки.Добавить("Роль",          Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыОбъектовМетаданных"));
	ТаблицаПрав.Колонки.Добавить("ВидМетаданных", Новый ОписаниеТипов("Строка"));
	ТаблицаПрав.Колонки.Добавить("Метаданные",    Новый ОписаниеТипов("Строка"));
	ТаблицаПрав.Колонки.Добавить("Право",         Новый ОписаниеТипов("Строка"));
	ТаблицаПрав.Колонки.Добавить("Значение",      Новый ОписаниеТипов("Число"));
	ТаблицаПрав.Колонки.Добавить("Порядок",       Новый ОписаниеТипов("Число"));
	
	ПраваДоступаОбъектов(ТаблицаПрав);
	
	ОтборПоГруппеДоступа       = ОтчетыПлатформаСервер.КомпоновщикНайтиОтбор("ГруппаДоступа", КомпоновщикНастроек.Настройки.Отбор);
	ОтборПоПрофилюГруппДоступа = ОтчетыПлатформаСервер.КомпоновщикНайтиОтбор("ПрофильГруппыДоступа", КомпоновщикНастроек.Настройки.Отбор);
	
	ДопУсловие = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаПравДоступа", ТаблицаПрав);
	
	Если НЕ ОтборПоГруппеДоступа = Неопределено И ОтборПоГруппеДоступа.Использование Тогда
		Если ОтборПоГруппеДоступа.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			ДопУсловие = "ГДЕ ГруппыДоступа.Ссылка = &ГруппаДоступа";
		ИначеЕсли ОтборПоГруппеДоступа.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
			ДопУсловие = "ГДЕ ГруппыДоступа.Ссылка В (&ГруппаДоступа)";
		КонецЕсли;
		Запрос.УстановитьПараметр("ГруппаДоступа", ОтборПоГруппеДоступа.ПравоеЗначение);
	КонецЕсли;
	
	Если НЕ ОтборПоПрофилюГруппДоступа = Неопределено И ОтборПоПрофилюГруппДоступа.Использование Тогда
		Если ОтборПоПрофилюГруппДоступа.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			ДопУсловие = ?(ЗначениеЗаполнено(ДопУсловие), " И ", "ГДЕ ") + "ПрофилиГруппДоступаРоли.Ссылка = &ПрофилиГруппДоступа";
		ИначеЕсли ОтборПоПрофилюГруппДоступа.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
			ДопУсловие = ?(ЗначениеЗаполнено(ДопУсловие), " И ", "ГДЕ ") + "ПрофилиГруппДоступаРоли.Ссылка В (&ПрофилиГруппДоступа)";
		КонецЕсли;
		Запрос.УстановитьПараметр("ПрофилиГруппДоступа", ОтборПоПрофилюГруппДоступа.ПравоеЗначение);
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТаблицаПравДоступа.Роль КАК Роль,
	               |	ТаблицаПравДоступа.ВидМетаданных КАК ВидМетаданных,
	               |	ТаблицаПравДоступа.Метаданные КАК Метаданные,
	               |	ТаблицаПравДоступа.Право КАК Право,
	               |	ТаблицаПравДоступа.Значение КАК Значение,
	               |	ТаблицаПравДоступа.Порядок КАК Порядок
	               |ПОМЕСТИТЬ ТаблицаПрав
	               |ИЗ
	               |	&ТаблицаПравДоступа КАК ТаблицаПравДоступа
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Роль
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЕСТЬNULL(ГруппыДоступа.Ссылка, ЗНАЧЕНИЕ(СПРАВОЧНИК.ГруппыДоступа.ПустаяСсылка)) КАК ГруппаДоступа,
	               |	ЕСТЬNULL(ПрофилиГруппДоступаРоли.Ссылка, ЗНАЧЕНИЕ(Справочник.ПрофилиГруппДоступа.ПустаяСсылка)) КАК ПрофильГруппыДоступа,
	               |	ТаблицаПрав.Роль КАК Роль,
	               |	ТаблицаПрав.ВидМетаданных КАК ВидМетаданных,
	               |	ТаблицаПрав.Метаданные КАК Метаданные,
	               |	ТаблицаПрав.Право КАК Право,
	               |	ТаблицаПрав.Значение КАК Значение,
	               |	ТаблицаПрав.Порядок КАК Порядок
	               |ИЗ
	               |	ТаблицаПрав КАК ТаблицаПрав
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК ПрофилиГруппДоступаРоли
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа КАК ГруппыДоступа
	               |			ПО ПрофилиГруппДоступаРоли.Ссылка = ГруппыДоступа.Профиль
	               |		ПО ТаблицаПрав.Роль = ПрофилиГруппДоступаРоли.Роль
	               |"+ДопУсловие+"
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаПрав";
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#КонецЕсли