#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//// Модуль отчета
//
//////////////////////////////////////////////////////////////////////////////////
//// ПЕРЕМЕННЫЕ ОБЪЕКТА
// Перем МакетОтчета, ОформлениеСтроки;     // переменные объекта
// Перем ТаблицаПриход,ТаблицаРасход;       // переменные объекта
// Перем СоответствиеХозОперацийПереоценки; // переменные объекта.

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ВидПоказателя = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВидСуммы")).Значение;
	НомерОтчета   = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НомерОтчета")).Значение;
	НачалоПериода = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода")).Значение;
	КонецПериода  = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода")).Значение;
	
	Запрос = Новый Запрос;
	ТекстОтбора = ОтчетыПлатформаСервер.КомпоновщикПолучитьТекстОтбора(Настройки.Отбор.Элементы, Настройки.Отбор.ДоступныеПоляОтбора, "#ИмяТаблицы#", Запрос.Параметры);
	ТекстОтбора = СтрЗаменить(ТекстОтбора, "#ИмяТаблицы#.Организация", "#ИмяТаблицы#.СкладКомпании.Организация");
	ТекстОтбора = СтрЗаменить(ТекстОтбора, "#ИмяТаблицы#.Подразделение", "#ИмяТаблицы#.СкладКомпании.ПодразделениеКомпании");
	
	ПолеПоиска = Новый ПолеКомпоновкиДанных("Организация");
	ОтборОрганизация = ОтчетыПлатформаСервер.КомпоновщикНайтиОтбор(ПолеПоиска, Настройки.Отбор);
	Если ОтборОрганизация = Неопределено Тогда
		ПолеПоиска = Новый ПолеКомпоновкиДанных("СкладКомпании.Организация");
		ОтборОрганизация = ОтчетыПлатформаСервер.КомпоновщикНайтиОтбор(ПолеПоиска, Настройки.Отбор);
	КонецЕсли;
	
	ПолеПоиска = Новый ПолеКомпоновкиДанных("СкладКомпании");
	ОтборСкладКомпании = ОтчетыПлатформаСервер.КомпоновщикНайтиОтбор(ПолеПоиска, Настройки.Отбор);
	
	СоответствиеХозОперацийПереоценки=Новый Соответствие();
	СоответствиеХозОперацийПереоценки.Вставить(Справочники.ХозОперации.ПереоценкаРозницаПоПриходу,Истина);
	СоответствиеХозОперацийПереоценки.Вставить(Справочники.ХозОперации.ПереоценкаРозницаПоРасходу,Истина);
	СоответствиеХозОперацийПереоценки.Вставить(Справочники.ХозОперации.ПереоценкаТоваровВРознице,Истина);
		
	// Получим макеты для результата и оформления.
	МакетОтчета = ПолучитьМакет("Макет");
	
	// Если периоды указаны неверно: дата начала позже даты конца.
	Если НачалоПериода > КонецПериода Тогда
		ОбластьВыводаОшибки = МакетОтчета.ПолучитьОбласть("ОбластьВыводаОшибки");
		ОбластьВыводаОшибки.Параметры.Заголовок = НСтр("ru = 'Отчет не сформирован по причине:'");	
		ОбластьВыводаОшибки.Параметры.ТекстОшибки = 
			СтрШаблон(НСтр("ru = 'Неверно указан период отчета: дата начала периода %1 не может быть больше даты конца периода %2'"), 
			Формат(НачалоПериода, "ДЛФ=Д"), Формат(КонецПериода, "ДЛФ=Д"));
		ДокументРезультат.Вывести(ОбластьВыводаОшибки);
		Возврат;
	КонецЕсли;
	
	// ПОСТРОИМ ЗАГОЛОВОК
	ДопСекция = "|Начало";
	ОбластьЗаголовка = МакетОтчета.ПолучитьОбласть("Шапка"+ДопСекция);
	
	// Организация
	Если (НЕ ОтборОрганизация = Неопределено) И ОтборОрганизация.Использование И ОтборОрганизация.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно И ЗначениеЗаполнено(ОтборОрганизация.ПравоеЗначение) Тогда
		
		Организация = ОтборОрганизация.ПравоеЗначение;
		
		Телефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Перечисления.ТипыКонтактнойИнформации.Телефон, ТекущаяДатаСеанса());
		
		ОбластьЗаголовка.Параметры.Заголовок = СокрЛП(Организация.НаименованиеПолное)
			+?(Организация.ИНН = "","",", ИНН "+СокрЛП(Организация.ИНН))+?(Телефон = "","",", "+Телефон);
	Иначе
		ОбластьЗаголовка.Параметры.Заголовок = "<" + НСтр("ru = 'по нескольким организациям'") + ">";
	КонецЕсли;
	
	// Склад
	Если (НЕ ОтборСкладКомпании = Неопределено) И ОтборСкладКомпании.Использование И ОтборСкладКомпании.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно И ЗначениеЗаполнено(ОтборСкладКомпании.ПравоеЗначение) Тогда
		
		СкладКомпании = ОтборСкладКомпании.ПравоеЗначение;
		
		ОбластьЗаголовка.Параметры.ПечСклад = СкладКомпании.Наименование;
		Если ТипЗнч(СкладКомпании) = Тип("СправочникСсылка.Цеха") Тогда
			ОбластьЗаголовка.Параметры.ПечМОЛ = СкладКомпании.Мастер;
		Иначе
			 ОбластьЗаголовка.Параметры.ПечМОЛ = СкладКомпании.МОЛ;
		КонецЕсли;
		
	Иначе
		
		ОбластьЗаголовка.Параметры.ПечСклад = "<" + НСтр("ru = 'по нескольким складам'") + ">";
		ОбластьЗаголовка.Параметры.ПечМОЛ = "";
		
	КонецЕсли;
	
	ОбластьЗаголовка.Параметры.НомерОтчета     = НомерОтчета;
	ОбластьЗаголовка.Параметры.ДатаСоставления = ТекущаяДатаСеанса();
	ОбластьЗаголовка.Параметры.ДатаНачала      = НачалоПериода;
	ОбластьЗаголовка.Параметры.ДатаКонца       = КонецПериода;
	ДокументРезультат.Вывести(ОбластьЗаголовка);
	
	ОбластьСтрока     = МакетОтчета.ПолучитьОбласть("Строка"+ДопСекция);
	ОбластьПереоценка = МакетОтчета.ПолучитьОбласть("Переоценка"+ДопСекция);
	
	// СОЗДАДИМ ЗАПРОС
	
	Запрос.УстановитьПараметр("Тара", Перечисления.ВидыНоменклатуры.Тара);
	
	// НАЧАЛЬНЫЙ ОСТАТОК
	ОбластьНачальныйОстаток = МакетОтчета.ПолучитьОбласть("НачальныйОстаток"+ДопСекция);
	Запрос.УстановитьПараметр("НаДату", НачалоДня(НачалоПериода));
	
	// НАЧАЛЬНЫЙ ОСТАТОК ПО ТОВАРАМ
	Запрос.Текст = ПолучитьТекстЗапроса("Остатки", ВидПоказателя, ТекстОтбора);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ТоварНачОст = ?(Выборка.ТоварСумма = NULL, 0, Выборка.ТоварСумма);
	ТараНачОст  = ?(Выборка.ТараСумма = NULL, 0, Выборка.ТараСумма);
	
	//НАЧАЛЬНЫЙ ОСТАТОК ПО ТОВАРАМ В ПРОИЗВОДСТВЕ
	Если ВидПоказателя="СуммаПродажи" Тогда
		ТоварВПроизводствеНачОст = 0;
		ТараВПроизводствеНачОст = 0;
	Иначе
		Запрос.Текст = ПолучитьТекстЗапроса("ОстаткиДеталей", ВидПоказателя, ТекстОтбора);
		Выборка=Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		ТоварВПроизводствеНачОст = ?(Выборка.ТоварОст = NULL, 0, Выборка.ТоварОст);
		ТараВПроизводствеНачОст = ?(Выборка.ТараОст = NULL, 0, Выборка.ТараОст);
	КонецЕсли;
	//НАЧАЛЬНЫЙ ОСТАТОК ПО АВТОМОБИЛЯМ
	Если ВидПоказателя="СуммаПродажи" Тогда
		АвтомобильНачОст = 0;
		ТараКомплектацииНачОст = 0;
	Иначе
		Запрос.Текст = ПолучитьТекстЗапроса("ОстаткиАвтомобилей", ВидПоказателя, ТекстОтбора);
		Выборка=Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		АвтомобильНачОст = ?(Выборка.ТоварОст = NULL, 0, Выборка.ТоварОст);
		ТараКомплектацииНачОст = ?(Выборка.ТараОст = NULL, 0,Выборка.ТараОст);
	КонецЕсли; 

	// Вывод начальных остатков
	ТоварНачОст = ТоварНачОст + ТоварВПроизводствеНачОст + АвтомобильНачОст; 
	ТараНачОст = ТараНачОст+ТараВПроизводствеНачОст+ТараКомплектацииНачОст; 
	ОбластьНачальныйОстаток.Параметры.Товар = ТоварНачОст;
	ОбластьНачальныйОстаток.Параметры.Тара  = ТараНачОст;
	ОбластьНачальныйОстаток.Параметры.СтрОстатокНаНачало= НСтр("ru = 'Остаток на'") + " "+Формат(НачалоПериода,"ДЛФ=D");
	ДокументРезультат.Вывести(ОбластьНачальныйОстаток);
	
	// ПРИХОД
	ОбластьЗаголовокПриход = МакетОтчета.ПолучитьОбласть("ЗаголовокПриход"+ДопСекция);
	ДокументРезультат.Вывести(ОбластьЗаголовокПриход);
	
	Запрос.Текст = ПолучитьТекстЗапроса("Движения", ВидПоказателя, ТекстОтбора);
	Запрос.УстановитьПараметр("ДатаНачала",  НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("ДатаКонца",   КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Приход);

	// Идем по выборке и заполняем временные таблицы
	ТоварПриход=0; ТараПриход=0;
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		ТекОбласть=?(СоответствиеХозОперацийПереоценки[Выборка.ХозОперация]=Неопределено,ОбластьСтрока, ОбластьПереоценка);
		ТекОбласть.Параметры.ДатаДок  = Выборка.Регистратор.Дата;
		ТекОбласть.Параметры.НомерДок = Выборка.Регистратор.Номер;
		
		Попытка
			НаименованиеКонтрагента = ?(ЗначениеЗаполнено(Выборка.Регистратор.Контрагент), Выборка.Регистратор.Контрагент, "");
		Исключение
			НаименованиеКонтрагента="";
		КонецПопытки;
		
		ПредстДок  = СокрЛП(Выборка.ХозОперация)+": "+НаименованиеКонтрагента;
		ТоварСумма = ?(Выборка.ТоварСумма = NULL, 0, Выборка.ТоварСумма);
		ТараСумма  = ?(Выборка.ТараСумма = NULL, 0, Выборка.ТараСумма);
		
		ТекОбласть.Параметры.Представление = ПредстДок;
		ТекОбласть.Параметры.Товар = ТоварСумма;
		ТекОбласть.Параметры.Тара  = ТараСумма;
		
		ТекОбласть.Область("R1C1").Расшифровка = Выборка.Регистратор;
		
		ДокументРезультат.Вывести(ТекОбласть);
		
		ТоварПриход = ТоварПриход+ТоварСумма;
		ТараПриход = ТараПриход+ТараСумма;
		
	КонецЦикла;
		
	// Для подсчета количества документов. 
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	ТаблицаДокументов.Свернуть("Регистратор");
	
	ОбластьИтогоПриход = МакетОтчета.ПолучитьОбласть("ИтогПриход"+ДопСекция);
	ОбластьИтогоПриход.Параметры.Товар = ТоварПриход;
	ОбластьИтогоПриход.Параметры.Тара  = ТараПриход;
	ДокументРезультат.Вывести(ОбластьИтогоПриход);
	
	ОбластьИтогоПриходОстаток = МакетОтчета.ПолучитьОбласть("ПриходСОстатком"+ДопСекция);
	ОбластьИтогоПриходОстаток.Параметры.Товар = ТоварПриход+ТоварНачОст;
	ОбластьИтогоПриходОстаток.Параметры.Тара = ТараПриход+ТараНачОст;
	ДокументРезультат.Вывести(ОбластьИтогоПриходОстаток);
	
	// РАСХОД
	ОбластьЗаголовокРасход = МакетОтчета.ПолучитьОбласть("ЗаголовокРасход"+ДопСекция);
	ДокументРезультат.Вывести(ОбластьЗаголовокРасход);
	
	Запрос.Текст = ПолучитьТекстЗапроса("Движения", ВидПоказателя, ТекстОтбора);
	Запрос.УстановитьПараметр("ВидДвижения",ВидДвиженияНакопления.Расход);
	
	// Идем по выборке и заполняем временные таблицы.
	ТоварРасход=0; ТараРасход=0;
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ТекОбласть=?(СоответствиеХозОперацийПереоценки[Выборка.ХозОперация]=Неопределено, ОбластьСтрока, ОбластьПереоценка);
		ТекОбласть.Параметры.ДатаДок  = Выборка.Регистратор.Дата;
		ТекОбласть.Параметры.НомерДок = Выборка.Регистратор.Номер;
		
		Попытка
			НаименованиеКонтрагента = ?(ЗначениеЗаполнено(Выборка.Регистратор.Контрагент), Выборка.Регистратор.Контрагент, "");
		Исключение
			НаименованиеКонтрагента="";
		КонецПопытки;
		
		ПредстДок  = СокрЛП(Выборка.ХозОперация)+": "+НаименованиеКонтрагента;
		ТоварСумма = ?(Выборка.ТоварСумма = NULL, 0, Выборка.ТоварСумма);
		ТараСумма  = ?(Выборка.ТараСумма = NULL, 0, Выборка.ТараСумма);
		
		ТекОбласть.Параметры.Представление = ПредстДок;
		ТекОбласть.Параметры.Товар = ТоварСумма;
		ТекОбласть.Параметры.Тара = ТараСумма;
		
		ТекОбласть.Область("R1C1").Расшифровка=Выборка.Регистратор;
		
		ДокументРезультат.Вывести(ТекОбласть);
		
		ТоварРасход = ТоварРасход+ТоварСумма;
		ТараРасход = ТараРасход+ТараСумма;
	КонецЦикла;
		
	// Для подсчета количества документов.
	ТаблицаДокументовРасход = Запрос.Выполнить().Выгрузить();
	ТаблицаДокументовРасход.Свернуть("Регистратор");
		
	Для Каждого Строка Из ТаблицаДокументовРасход Цикл
		СтрокаТаблицыДокументов = ТаблицаДокументов.Добавить();
		СтрокаТаблицыДокументов.Регистратор = Строка.Регистратор;
	КонецЦикла;
	ТаблицаДокументов.Свернуть("Регистратор");
		
	ОбластьИтогоРасход = МакетОтчета.ПолучитьОбласть("ИтогРасход"+ДопСекция);
	ОбластьИтогоРасход.Параметры.Товар = ТоварРасход;
	ОбластьИтогоРасход.Параметры.Тара  = ТараРасход;
	ДокументРезультат.Вывести(ОбластьИтогоРасход);
		
	// КОНЕЧНЫЙ ОСТАТОК
	ДатаКонДляОстатка = Новый Граница(КонецДня(КонецПериода), ВидГраницы.Включая);
	Запрос.УстановитьПараметр("НаДату", ДатаКонДляОстатка);
	
	// КОНЕЧНЫЙ ОСТАТОК ПО ТОВАРАМ
	Запрос.Текст = ПолучитьТекстЗапроса("Остатки", ВидПоказателя, ТекстОтбора);
	Выборка=Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ОбластьКонечныйОстаток = МакетОтчета.ПолучитьОбласть("КонечныйОстаток"+ДопСекция);
	ТоварКонОст = ?(Выборка.ТоварСумма=NULL, 0, Выборка.ТоварСумма);
	ТараКонОст = ?(Выборка.ТараСумма=NULL, 0, Выборка.ТараСумма);   
	
	//КОНЕЧНЫЙ ОСТАТОК ПО ТОВАРАМ В ПРОИЗВОДСТВЕ
	Если ВидПоказателя = "СуммаПродажи" Тогда
		ТоварВПроизводствеКонОст = 0;
		ТараВПроизводствеКонОст = 0;
	Иначе
		Запрос.Текст = ПолучитьТекстЗапроса("ОстаткиДеталей", ВидПоказателя, ТекстОтбора);
		Выборка=Запрос.Выполнить().Выбрать();
    	Выборка.Следующий();
		ТоварВПроизводствеКонОст = ?(Выборка.ТоварОст = NULL,0,Выборка.ТоварОст);
		ТараВПроизводствеКонОст = ?(Выборка.ТараОст = NULL,0,Выборка.ТараОст);
	КонецЕсли; 
	
	//КОНЕЧНЫЙ ОСТАТОК ПО АВТОМОБИЛЯМ
	Если ВидПоказателя = "СуммаПродажи" Тогда
		АвтомобильКонОст = 0;
		ТараКомплектацииКонОст = 0;
	Иначе
		Запрос.Текст = ПолучитьТекстЗапроса("ОстаткиАвтомобилей", ВидПоказателя, ТекстОтбора);
		Выборка=Запрос.Выполнить().Выбрать();
    	Выборка.Следующий();
		АвтомобильКонОст = ?(Выборка.ТоварОст = NULL,0,Выборка.ТоварОст);
		ТараКомплектацииКонОст = ?(Выборка.ТараОст =NULL,0,Выборка.ТараОст);
	КонецЕсли; 
  
	// Вывод конечных остатков
	ОбластьКонечныйОстаток.Параметры.Товар = ТоварКонОст + ТоварВПроизводствеКонОст + АвтомобильКонОст;
	ОбластьКонечныйОстаток.Параметры.Тара  = ТараКонОст + ТараВПроизводствеКонОст + ТараКомплектацииКонОст;
	ОбластьКонечныйОстаток.Параметры.СтрОстатокНаКонец= НСтр("ru = 'Остаток на'") + " "+Формат(КонецПериода,"ДЛФ=D");
	ДокументРезультат.Вывести(ОбластьКонечныйОстаток);
	
	// ПОДВАЛ
	ОбластьПодвал = МакетОтчета.ПолучитьОбласть("Подвал"+ДопСекция);
	ОбластьПодвал.Параметры.ИтогоДок=ЧислоПрописью(ТаблицаДокументов.Количество(),,"документ, документа, документов, м, , , , м, 0");
	ДокументРезультат.Вывести(ОбластьПодвал);
		
	ДокументРезультат.АвтоМасштаб=Истина;
	ДокументРезультат.ТолькоПросмотр=Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьНедоступныеНастройки() Экспорт
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("Группировки");
	СтруктураПолей.Вставить("Показатели");
	СтруктураПолей.Вставить("Порядок");
	СтруктураПолей.Вставить("Таблицы");
		
	Возврат СтруктураПолей;
	
КонецФункции

// Стандартная процедура настройки схемы компоновщика данных
//
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	Зарезервировано = Истина;
	
КонецПроцедуры

Процедура ПриИзмененииНастроек(ФормаОтчета) Экспорт
	
	ВидСуммы = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВидСуммы"));
	Если НЕ ЗначениеЗаполнено(ВидСуммы.Значение) Тогда
		ВидСуммы.Значение = "Сумма";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует текст запроса
//
// Параметры
//   Реж - строка - режим запроса (Движения, Остатки).
//
// Возвращаемое значение:
//   ТекстЗапроса - текст
//
Функция ПолучитьТекстЗапроса(Реж, ВидПоказателя, Знач ТекстОтбора)
	// формируем строку фильтров виртуальной таблицы
	
	Если Реж="Движения" Тогда
		ТекстОтбора = ?(ТекстОтбора = "", "", " И "+ТекстОтбора);
		Если ВидПоказателя = "СуммаПродажи" Тогда
			ТекстОтбора = СтрЗаменить(ТекстОтбора, "#ИмяТаблицы#.", "ОстаткиТоваров.");
			ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОстаткиТоваров.Регистратор КАК Регистратор,
			|	ОстаткиТоваров.Период КАК ДатаДок,
			|	ОстаткиТоваров.ХозОперация КАК ХозОперация,
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА ОстаткиТоваров.Номенклатура.ВидНоменклатуры<>&Тара ТОГДА 
			|				ОстаткиТоваров.СуммаРозн 
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ТоварСумма,
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА ОстаткиТоваров.Номенклатура.ВидНоменклатуры=&Тара ТОГДА 
			|				ОстаткиТоваров.СуммаРозн 
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ТараСумма
			|ИЗ
			|	РегистрНакопления.ОстаткиТоваровКомпании КАК ОстаткиТоваров
			|ГДЕ
			|	ОстаткиТоваров.Период МЕЖДУ &ДатаНачала И &ДатаКонца
			|	И ОстаткиТоваров.ВидДвижения=&ВидДвижения
			|	"+ТекстОтбора+"
			|СГРУППИРОВАТЬ ПО 
			|	ОстаткиТоваров.Регистратор,
			|	ОстаткиТоваров.ХозОперация,
			|	ОстаткиТоваров.Период
			|ИМЕЮЩИЕ
			|	СУММА(ЕСТЬNULL(ОстаткиТоваров.СуммаРозн,0))<>0
			|УПОРЯДОЧИТЬ ПО
			|	ДатаДок,
			|	Регистратор,
			|	ХозОперация ВОЗР";
		Иначе
			// Отбор партий
			СтрокаУсловияПартийТоваров = СтрЗаменить(ТекстОтбора, "#ИмяТаблицы#.", "ПартииТоваровКомпании.");
			
			СтрокаУсловияВПроизводстве	= СтрЗаменить(ТекстОтбора, "#ИмяТаблицы#.", "ТоварыВПроизводстве.");
			СтрокаУсловияВПроизводстве	= СтрЗаменить(СтрокаУсловияВПроизводстве, "СкладКомпании", "Цех");
			СтрокаУсловияВПроизводстве	= СтрЗаменить(СтрокаУсловияВПроизводстве, "&Цех", "&СкладКомпании");
			//Отбор по Автомобилям
			СтрокаУсловияАвтомобилей	= СтрЗаменить(ТекстОтбора, "Номенклатура","Автомобиль");
			СтрокаУсловияАвтомобилей	= СтрЗаменить(СтрокаУсловияАвтомобилей,"&Автомобиль","&Номенклатура");
			СтрокаУсловияКомплектации	= СтрЗаменить(СтрокаУсловияАвтомобилей, "#ИмяТаблицы#.", "КомплектацияАвтомобилей.");
			СтрокаУсловияАвтомобилей	= СтрЗаменить(СтрокаУсловияАвтомобилей, "#ИмяТаблицы#.", "ОстаткиАвтомобилей.");

			ТекстЗапроса = "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	КомплектацияАвтомобилей.Регистратор КАК Регистратор,
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА КомплектацияАвтомобилей.Номенклатура.ВидНоменклатуры<>&Тара ТОГДА 
			|				КомплектацияАвтомобилей.Сумма"+?(ВидПоказателя="БезНДС","-КомплектацияАвтомобилей.СуммаНДС","")+"
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ТоварСумма,
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА КомплектацияАвтомобилей.Номенклатура.ВидНоменклатуры=&Тара  ТОГДА 
			|				КомплектацияАвтомобилей.Сумма"+?(ВидПоказателя="БезНДС","-КомплектацияАвтомобилей.СуммаНДС","")+" 
			|		ИНАЧЕ 0
			|	КОНЕЦ) КАК ТараСумма
			|ПОМЕСТИТЬ
			|	КомплектацияАвтомобилейПлюс
			|ИЗ
			|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
			|ГДЕ
			|	КомплектацияАвтомобилей.Период МЕЖДУ &ДатаНачала И &ДатаКонца
			|	И КомплектацияАвтомобилей.ВидДвижения=&ВидДвижения И КомплектацияАвтомобилей.Сумма > 0
			|	"+СтрокаУсловияКомплектации+"
			|СГРУППИРОВАТЬ ПО 
			|	КомплектацияАвтомобилей.Регистратор
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	КомплектацияАвтомобилей.Регистратор КАК Регистратор,
			|	-СУММА(
			|		ВЫБОР
			|			КОГДА КомплектацияАвтомобилей.Номенклатура.ВидНоменклатуры<>&Тара ТОГДА 
			|				КомплектацияАвтомобилей.Сумма"+?(ВидПоказателя="БезНДС","-КомплектацияАвтомобилей.СуммаНДС","")+"
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ТоварСумма,
			|	-СУММА(
			|		ВЫБОР 
			|			КОГДА КомплектацияАвтомобилей.Номенклатура.ВидНоменклатуры=&Тара ТОГДА 
			|				КомплектацияАвтомобилей.Сумма"+?(ВидПоказателя="БезНДС","-КомплектацияАвтомобилей.СуммаНДС","")+" 
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ТараСумма
			|ПОМЕСТИТЬ
			|	КомплектацияАвтомобилейМинус
			|ИЗ
			|	РегистрНакопления.КомплектацияАвтомобилей КАК КомплектацияАвтомобилей
			|ГДЕ
			|	КомплектацияАвтомобилей.Период МЕЖДУ &ДатаНачала И &ДатаКонца
			|	И (НЕ КомплектацияАвтомобилей.ВидДвижения=&ВидДвижения) И КомплектацияАвтомобилей.Сумма < 0
			|	"+СтрокаУсловияКомплектации+"
			|СГРУППИРОВАТЬ ПО 
			|	КомплектацияАвтомобилей.Регистратор
			|; 
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ *
			|ИЗ
			|(
			|ВЫБРАТЬ
			|	ПартииТоваровКомпании.Регистратор КАК Регистратор,
			|	ПартииТоваровКомпании.Период КАК ДатаДок,
			|	ПартииТоваровКомпании.ХозОперация КАК ХозОперация,
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА ПартииТоваровКомпании.Номенклатура.ВидНоменклатуры<>&Тара ТОГДА
			|				ЕСТЬNULL(ПартииТоваровКомпании.Сумма, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(ПартииТоваровКомпании.СуммаНДС, 0)","")+" 
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ТоварСумма,
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА ПартииТоваровКомпании.Номенклатура.ВидНоменклатуры=&Тара ТОГДА 
			|				ЕСТЬNULL(ПартииТоваровКомпании.Сумма, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(ПартииТоваровКомпании.СуммаНДС, 0)","")+" 
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ТараСумма
			|ИЗ
			|	РегистрНакопления.ПартииТоваровКомпании КАК ПартииТоваровКомпании
			|
			|ГДЕ
			|	ПартииТоваровКомпании.Период МЕЖДУ &ДатаНачала И &ДатаКонца
			|	И ПартииТоваровКомпании.ВидДвижения=&ВидДвижения
			|	"+СтрокаУсловияПартийТоваров+"
			|
			|СГРУППИРОВАТЬ ПО
			|	ПартииТоваровКомпании.Регистратор,
			|	ПартииТоваровКомпании.ХозОперация,
			|	ПартииТоваровКомпании.Период
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТоварыВПроизводстве.Регистратор,
			|	ТоварыВПроизводстве.Период,
			|	ТоварыВПроизводстве.ХозОперация,
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА ТоварыВПроизводстве.Номенклатура.ВидНоменклатуры<>&Тара ТОГДА
			|				ЕСТЬNULL(ТоварыВПроизводстве.Сумма, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(ТоварыВПроизводстве.СуммаНДС, 0)","")+" 
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА ТоварыВПроизводстве.Номенклатура.ВидНоменклатуры=&Тара ТОГДА
			|				ЕСТЬNULL(ТоварыВПроизводстве.Сумма, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(ТоварыВПроизводстве.СуммаНДС, 0)","")+" 
			|			ИНАЧЕ 0 
			|		КОНЕЦ)
			|ИЗ
			|	РегистрНакопления.ТоварыВПроизводстве КАК ТоварыВПроизводстве
			|ГДЕ
			|	ТоварыВПроизводстве.Период МЕЖДУ &ДатаНачала И &ДатаКонца
			|	И ТоварыВПроизводстве.ВидДвижения=&ВидДвижения
			|	"+СтрокаУсловияВПроизводстве+"
			|
			|СГРУППИРОВАТЬ ПО
			|	ТоварыВПроизводстве.Регистратор,
			|	ТоварыВПроизводстве.ХозОперация,
			|	ТоварыВПроизводстве.Период
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОстаткиАвтомобилей.Регистратор,
			|	ОстаткиАвтомобилей.Период,
			|	ОстаткиАвтомобилей.ХозОперация,
			|	СУММА(ОстаткиАвтомобилей.Сумма"+?(ВидПоказателя="БезНДС","-ОстаткиАвтомобилей.СуммаНДС","")+") +
			|	МАКСИМУМ(ЕСТЬNULL(КомплектацияАвтомобилей.ТоварСумма, 0)) КАК ТоварСумма,
			|	МАКСИМУМ(ЕСТЬNULL(КомплектацияАвтомобилей.ТараСумма, 0)) КАК ТараСумма
			|ИЗ
			|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	КомплектацияАвтомобилейПлюс КАК КомплектацияАвтомобилей
			|ПО
			|	ОстаткиАвтомобилей.Регистратор = КомплектацияАвтомобилей.Регистратор
			|ГДЕ
			|	ОстаткиАвтомобилей.Период МЕЖДУ &ДатаНачала И &ДатаКонца И 
			|	ОстаткиАвтомобилей.ВидДвижения=&ВидДвижения И ОстаткиАвтомобилей.Сумма > 0
			|	"+СтрокаУсловияАвтомобилей+"
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиАвтомобилей.Регистратор,
			|	ОстаткиАвтомобилей.ХозОперация,
			|	ОстаткиАвтомобилей.Период
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОстаткиАвтомобилей.Регистратор,
			|	ОстаткиАвтомобилей.Период,
			|	ОстаткиАвтомобилей.ХозОперация,
			|	-СУММА(ОстаткиАвтомобилей.Сумма"+?(ВидПоказателя="БезНДС","-ОстаткиАвтомобилей.СуммаНДС","")+") +
			|	-МАКСИМУМ(ЕСТЬNULL(КомплектацияАвтомобилей.ТоварСумма, 0)) КАК ТоварСумма,
			|	-МАКСИМУМ(ЕСТЬNULL(КомплектацияАвтомобилей.ТараСумма, 0)) КАК ТараСумма
			|ИЗ
			|	РегистрНакопления.ОстаткиАвтомобилей КАК ОстаткиАвтомобилей
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	КомплектацияАвтомобилейМинус КАК КомплектацияАвтомобилей
			|ПО
			|	ОстаткиАвтомобилей.Регистратор = КомплектацияАвтомобилей.Регистратор
			|ГДЕ
			|	ОстаткиАвтомобилей.Период МЕЖДУ &ДатаНачала И &ДатаКонца И
			|	(НЕ ОстаткиАвтомобилей.ВидДвижения=&ВидДвижения) И ОстаткиАвтомобилей.Сумма < 0
			|	"+СтрокаУсловияАвтомобилей+"
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиАвтомобилей.Регистратор,
			|	ОстаткиАвтомобилей.ХозОперация,
			|	ОстаткиАвтомобилей.Период
			|
			|) КАК ОбъединенныйЗапрос
			|
			|УПОРЯДОЧИТЬ ПО ОбъединенныйЗапрос.ДатаДок, ОбъединенныйЗапрос.Регистратор, ХозОперация";
		КонецЕсли;
		
	ИначеЕсли Реж="Остатки" Тогда
		// формируем текст запроса
		ТекстОтбора = СтрЗаменить(ТекстОтбора, "#ИмяТаблицы#.", "");
		Если ВидПоказателя = "СуммаПродажи" Тогда
			ТекстЗапроса="ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА ОстаткиТоваров.Номенклатура.ВидНоменклатуры <> &Тара ТОГДА 
			|				ОстаткиТоваров.СуммаРознОстаток 
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ТоварСумма,
			|	СУММА(
			|		ВЫБОР 
			|			КОГДА ОстаткиТоваров.Номенклатура.ВидНоменклатуры = &Тара ТОГДА 
			|				ОстаткиТоваров.СуммаРознОстаток
			|		ИНАЧЕ 0
			|	КОНЕЦ) КАК ТараСумма
			|ИЗ
			|	РегистрНакопления.ОстаткиТоваровКомпании.Остатки(&НаДату, "+ТекстОтбора+") КАК ОстаткиТоваров";
		Иначе
			ТекстЗапроса="ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СУММА(
			|		ВЫБОР
			|			КОГДА ПартииТоваровКомпании.Номенклатура.ВидНоменклатуры <> &Тара ТОГДА
			|				ЕСТЬNULL(ПартииТоваровКомпании.СуммаОстаток, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(ПартииТоваровКомпании.СуммаНДСОстаток, 0)","")+"
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ТоварСумма,
			|	СУММА(
			|		ВЫБОР
			|			КОГДА ПартииТоваровКомпании.Номенклатура.ВидНоменклатуры = &Тара ТОГДА 
			|				ЕСТЬNULL(ПартииТоваровКомпании.СуммаОстаток, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(ПартииТоваровКомпании.СуммаНДСОстаток, 0)","")+"
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК ТараСумма
			|ИЗ
			|	РегистрНакопления.ПартииТоваровКомпании.Остатки(&НаДату, "+ТекстОтбора+") КАК ПартииТоваровКомпании";
		КонецЕсли; 
	ИначеЕсли Реж="ОстаткиДеталей" Тогда
		ТекстОтбора = СтрЗаменить(ТекстОтбора, "#ИмяТаблицы#.", "");
		ТекстОтбора = СтрЗаменить(ТекстОтбора, "СкладКомпании", "Цех");
		ТекстОтбора = СтрЗаменить(ТекстОтбора, "&Цех", "&СкладКомпании");
		
		// формируем текст запроса
		ТекстЗапроса="
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(
		|		ВЫБОР
		|			КОГДА ТоварыВПроизводстве.Номенклатура.ВидНоменклатуры <> &Тара ТОГДА
		|				ЕСТЬNULL(ТоварыВПроизводстве.СуммаОстаток, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(ТоварыВПроизводстве.СуммаНДСОстаток, 0)","")+"
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТоварОст,
		|	СУММА(
		|		ВЫБОР 
		|			КОГДА ТоварыВПроизводстве.Номенклатура.ВидНоменклатуры = &Тара ТОГДА
		|				ЕСТЬNULL(ТоварыВПроизводстве.СуммаОстаток, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(ТоварыВПроизводстве.СуммаНДСОстаток, 0)","")+"
		|		ИНАЧЕ 0 
		|	КОНЕЦ) КАК ТараОст
		|ИЗ
		|	РегистрНакопления.ТоварыВПроизводстве.Остатки(&НаДату,"+ТекстОтбора+") КАК ТоварыВПроизводстве";
		
	ИначеЕсли Реж="ОстаткиАвтомобилей" Тогда
		
		ТекстОтбора = СтрЗаменить(ТекстОтбора, "#ИмяТаблицы#.", "");
		ТекстОтбора = СтрЗаменить(ТекстОтбора, "Номенклатура","Автомобиль");
		ТекстОтбора = СтрЗаменить(ТекстОтбора,"&Автомобиль","&Номенклатура");
		// формируем текст запроса
		ТекстЗапроса="
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ТоварОст) КАК ТоварОст,
		|	СУММА(ТараОст) КАК ТараОст
		|ИЗ
		|(
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ОстаткиАвтомобилей.СуммаОстаток, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(ОстаткиАвтомобилей.СуммаНДСОстаток, 0)","")+" КАК ТоварОст,
		|	0 КАК ТараОст
		|ИЗ
		|	РегистрНакопления.ОстаткиАвтомобилей.Остатки(&НаДату,"+ТекстОтбора+") КАК ОстаткиАвтомобилей
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА КомплектацияАвтомобилей.Номенклатура.ВидНоменклатуры <> &Тара ТОГДА
		|			ЕСТЬNULL(КомплектацияАвтомобилей.СуммаОстаток, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(КомплектацияАвтомобилей.СуммаНДСОстаток, 0)","")+" 
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА КомплектацияАвтомобилей.Номенклатура.ВидНоменклатуры = &Тара ТОГДА
		|			ЕСТЬNULL(КомплектацияАвтомобилей.СуммаОстаток, 0)"+?(ВидПоказателя="БезНДС","-ЕСТЬNULL(КомплектацияАвтомобилей.СуммаНДСОстаток, 0)","")+" 
		|		ИНАЧЕ 0 
		|	КОНЕЦ
		|ИЗ 
		|	РегистрНакопления.КомплектацияАвтомобилей.Остатки(&НаДату,"+ТекстОтбора+") КАК КомплектацияАвтомобилей
		|
		|) КАК ОбъединенныйЗапрос
		|";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапроса()

#КонецОбласти

#КонецЕсли