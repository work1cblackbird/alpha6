// Модуль менеджера обработки "Кассовая книга"

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеДляОтчета(Объект, ИмяМакета, ДатаОтчета = Неопределено) Экспорт
	
	СхемаКомпановкиДанных = ПолучитьМакет(ИмяМакета);
	КомпоновщикНастроекКомпоновкиДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпановкиДанных));
	КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(СхемаКомпановкиДанных.НастройкиПоУмолчанию);
	
	КомпоновщикНастроекКомпоновкиДанных.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Контрагент", Объект.Контрагент);
	
	Если НЕ ДатаОтчета = Неопределено Тогда
		КомпоновщикНастроекКомпоновкиДанных.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Период", ДатаОтчета);
	КонецЕсли;
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СхемаКомпановкиДанных, КомпоновщикНастроекКомпоновкиДанных.Настройки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
	ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
	ПроцессорВывода.ЗакончитьВывод();
	
	Возврат ТаблицаРезультат;
	
КонецФункции

#Область Печать

// Обработчик печати
//
// Параметры:
//  МассивОбъектов         - Массив           - массив объектов для формирования печатных форм
//  ПараметрыПечати        - Структура        - дополнительные параметры печати
//  КоллекцияПечатныхФорм  - Таблица значений - таблица с идентификаторами печатных форм и макетами печати
//  ОбъектыПечати          - Структура        - список областьей печатной формы в разрезе документов
//  ПараметрыВывода        - Структура        - дополнительтые параметры вывода формы
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаДосьеКлиента") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ФормаДосьеКлиента",
		"Досье клиента",
		ПечатьДосьеКлиента(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры // Печать()

// Формирует данные в табличном документе.
//
Функция ПечатьДосьеКлиента(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	// Создаим табличные документы
	ТабличныйДокумент = Новый ТабличныйДокумент;
	// Добавим установку параметров печати
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДосьеКлиента";
	УправлениеПечатьюПлатформа.УстановитьСтандартныеПараметрыПечати(ИмяПараметровПечати, ТабличныйДокумент);
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	// Необходимые параметры
	Объект = ПараметрыПечати.ОбъектОтчета;
	
	МакетОтчета = ПолучитьМакет("ФормаДосьеКлиента");
	
	ОбластьМакетаЗаголовок                             = МакетОтчета.ПолучитьОбласть("Заголовок");
	ОбластьМакетаЗаголовокЮрЛица                       = МакетОтчета.ПолучитьОбласть("ЗаголовокЮрЛица");
	ОбластьМакетаЗаголовокИндивидульныйПредприниматель = МакетОтчета.ПолучитьОбласть("ЗаголовокИндивидульныйПредприниматель");
	ОбластьМакетаЗаголовокЧастноеЛицо                  = МакетОтчета.ПолучитьОбласть("ЗаголовокЧастноеЛицо");
	ОбластьМакетаИмяРаздела                            = МакетОтчета.ПолучитьОбласть("ИмяРаздела");
	ОбластьМакетаИмяСекции                             = МакетОтчета.ПолучитьОбласть("ИмяСекции");
	
	ОбластьМакетаШапкаКонтактнаяИнформация             = МакетОтчета.ПолучитьОбласть("ШапкаКонтактнаяИнформация");
	ОбластьМакетаСтрокаКонтактнаяИнформация            = МакетОтчета.ПолучитьОбласть("СтрокаКонтактнаяИнформация");
	ОбластьМакетаШапкаКонтактныеЛица                   = МакетОтчета.ПолучитьОбласть("ШапкаКонтактныеЛица");
	ОбластьМакетаСтрокаКонтактныеЛица                  = МакетОтчета.ПолучитьОбласть("СтрокаКонтактныеЛица");
	
	ОбластьМакетаШапкаВзаимодействия                   = МакетОтчета.ПолучитьОбласть("ШапкаВзаимодействияРасширенная");
	ОбластьМакетаСтрокаВзаимодействия                  = МакетОтчета.ПолучитьОбласть("СтрокаВзаимодействияРасширенная");
	ОбластьМакетаШапкаАнкеты                           = МакетОтчета.ПолучитьОбласть("ШапкаАнкеты");
	ОбластьМакетаСтрокаАнкеты                          = МакетОтчета.ПолучитьОбласть("СтрокаАнкеты");
	ОбластьМакетаШапкаЖалобы                           = МакетОтчета.ПолучитьОбласть("ШапкаЖалобы");
	ОбластьМакетаСтрокаЖалобы                          = МакетОтчета.ПолучитьОбласть("СтрокаЖалобы");
	
	ОбластьМакетаОбщиеВзаиморасчеты                    = МакетОтчета.ПолучитьОбласть("ОбщиеВзаиморасчеты");
	ОбластьМакетаШапкаТекущиеВзаиморасчеты             = МакетОтчета.ПолучитьОбласть("ШапкаТекущиеВзаиморасчеты");
	ОбластьМакетаСтрокаТекущиеВзаиморасчеты            = МакетОтчета.ПолучитьОбласть("СтрокаТекущиеВзаиморасчеты");
	
	ОбластьМакетаАвтомобиль                            = МакетОтчета.ПолучитьОбласть("Автомобиль");
	ОбластьМакетаПродажаАвтомобиля                     = МакетОтчета.ПолучитьОбласть("ПродажаАвтомобиля");
	
	ОбластьМакетаШапкаОбслуживанияАвтомобиля           = МакетОтчета.ПолучитьОбласть("ШапкаОбслуживанияАвтомобиля");
	ОбластьМакетаСтрокаЗаказНаряд                      = МакетОтчета.ПолучитьОбласть("СтрокаЗаказНаряд");
	ОбластьМакетаСтрокаПричиныОбращения                = МакетОтчета.ПолучитьОбласть("СтрокаПричиныОбращения");
	
	ОбластьМакетаВыкупАвтомобиля                       = МакетОтчета.ПолучитьОбласть("ВыкупАвтомобиля");
	
	ВалютаУпр  = Константы.ВалютаУправленческогоУчетаКомпании.Получить();
	
	ОбластьМакетаЗаголовок.Параметры.НаименованиеКлиента = УправлениеПечатьюПлатформа.ПолучитьНаименованиеСправочника(Объект.Контрагент);
	ОбластьМакетаЗаголовок.Параметры.ВидКлиента = Объект.Контрагент.ВидКонтрагента;
	ФормаСобственности = Объект.Контрагент.ФормаСобственности;
	ОбластьМакетаЗаголовок.Параметры.ФормаСобственности = Объект.Контрагент.ФормаСобственности;
	ОбластьМакетаЗаголовок.Параметры.ДатаСоздания = Формат(Объект.Контрагент.ДатаСоздания, "ДЛФ=D");
	ОбластьМакетаЗаголовок.Параметры.Автор = Объект.Контрагент.Автор;
	ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
	
	Если ФормаСобственности = Перечисления.ФормыСобственности.ЮридическоеЛицо Тогда
		ОбластьМакетаЗаголовокЮрЛица.Параметры.ИНН = Объект.Контрагент.ИНН;
		ОбластьМакетаЗаголовокЮрЛица.Параметры.КПП = Объект.Контрагент.КПП;
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокЮрЛица);
	ИначеЕсли ФормаСобственности = Перечисления.ФормыСобственности.ЧастноеЛицо ИЛИ 
		ФормаСобственности = Перечисления.ФормыСобственности.ИндивидуальныйПредприниматель Тогда
		ОбластьМакетаЗаголовокИндивидульныйПредприниматель.Параметры.Пол = Объект.Контрагент.Пол;
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокИндивидульныйПредприниматель);
		Если ФормаСобственности = Перечисления.ФормыСобственности.ЧастноеЛицо Тогда
			ОбластьМакетаЗаголовокЧастноеЛицо.Параметры.ДатаРождения = Формат(Объект.Контрагент.ДатаРождения, "ДЛФ=D");
			ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокЧастноеЛицо);
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ОбщееОКлиенте Тогда
		
		ОбластьМакетаИмяРаздела.Параметры.Раздел = "О клиенте";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяРаздела);
		
		ОбластьМакетаИмяСекции.Параметры.Секция = "Контактная информация клиента";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
		
		КонтактнаяИнформация = ПолучитьДанныеДляОтчета(Объект, "МакетКонтактнаяИнформация");
		
		КонтактнаяИнформацияКонтрагента = КонтактнаяИнформация.Скопировать();
		
		НайденныеПустыеСтроки = КонтактнаяИнформацияКонтрагента.НайтиСтроки(Новый Структура("ТипКонтактнойИнформации", Неопределено));
		
		Для Каждого ТекущаяСтрока Из НайденныеПустыеСтроки Цикл
			КонтактнаяИнформацияКонтрагента.Удалить(ТекущаяСтрока);
		КонецЦикла;
		
		Если КонтактнаяИнформацияКонтрагента.Количество() > 0 Тогда
			ТабличныйДокумент.Вывести(ОбластьМакетаШапкаКонтактнаяИнформация);
			Для Каждого ТекущаяСтрока Из КонтактнаяИнформацияКонтрагента Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаКонтактнаяИнформация.Параметры, ТекущаяСтрока);
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаКонтактнаяИнформация);
			КонецЦикла;
		КонецЕсли;
		
		ОбластьМакетаИмяСекции.Параметры.Секция = "Контакты клиента";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
		
		КонтактныеЛицаКонтрагента = КонтактнаяИнформация.Скопировать();
		
		НайденныеПустыеСтроки = КонтактныеЛицаКонтрагента.НайтиСтроки(Новый Структура("КонтактноеЛицо", Неопределено));
		
		Для Каждого ТекущаяСтрока Из НайденныеПустыеСтроки Цикл
			КонтактныеЛицаКонтрагента.Удалить(ТекущаяСтрока);
		КонецЦикла;
		
		Если КонтактныеЛицаКонтрагента.Количество() > 0 Тогда
			ТабличныйДокумент.Вывести(ОбластьМакетаШапкаКонтактныеЛица);
			Для Каждого ТекущаяСтрока Из КонтактныеЛицаКонтрагента Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаКонтактныеЛица.Параметры, ТекущаяСтрока);
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаКонтактныеЛица);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.Взаимодействия Тогда
		
		ОбластьМакетаИмяРаздела.Параметры.Раздел = "Взаимодействия";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяРаздела);
		
		ТаблицаВзаимодействий = ПолучитьДанныеДляОтчета(Объект, "МакетВзаимодействия");
		
		НаличиеСостояний = ТаблицаВзаимодействий.Колонки.Найти("Состояние");
		
		ОбластьМакетаИмяСекции.Параметры.Секция = "Завершено";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
		
		
		Если НЕ НаличиеСостояний = Неопределено Тогда
			НайденныеСтроки = ТаблицаВзаимодействий.НайтиСтроки(Новый Структура("Состояние", Перечисления.СостоянияСобытий.Завершено));
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаВзаимодействия);
				Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
					ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаВзаимодействия.Параметры, ТекущаяСтрока);
					ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаВзаимодействия);
					ТаблицаВзаимодействий.Удалить(ТекущаяСтрока);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьМакетаИмяСекции.Параметры.Секция = "Выполняются";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
		
		Если НЕ НаличиеСостояний = Неопределено Тогда
			НайденныеСтроки = ТаблицаВзаимодействий.НайтиСтроки(Новый Структура("Состояние", Перечисления.СостоянияСобытий.Выполняется));
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаВзаимодействия);
				Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
					ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаВзаимодействия.Параметры, ТекущаяСтрока);
					ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаВзаимодействия);
					ТаблицаВзаимодействий.Удалить(ТекущаяСтрока);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьМакетаИмяСекции.Параметры.Секция = "Запланировано";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
		
		Если НЕ НаличиеСостояний = Неопределено Тогда
			НайденныеСтроки = ТаблицаВзаимодействий.НайтиСтроки(Новый Структура("Состояние", Перечисления.СостоянияСобытий.Запланировано));
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаВзаимодействия);
				Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
					ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаВзаимодействия.Параметры, ТекущаяСтрока);
					ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаВзаимодействия);
					ТаблицаВзаимодействий.Удалить(ТекущаяСтрока);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьМакетаИмяСекции.Параметры.Секция = "Опросы";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
		
		Если НЕ ТаблицаВзаимодействий.Колонки.Найти("Анкета") = Неопределено Тогда
			АнкетыКлиента = ТаблицаВзаимодействий.Скопировать();
			
			НайденныеПустыеСтроки = АнкетыКлиента.НайтиСтроки(Новый Структура("Анкета", Неопределено));
			
			Для Каждого ТекущаяСтрока Из НайденныеПустыеСтроки Цикл
				АнкетыКлиента.Удалить(ТекущаяСтрока);
			КонецЦикла;
			
			Если АнкетыКлиента.Количество() > 0 Тогда
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаАнкеты);
				Для Каждого ТекущаяСтрока Из АнкетыКлиента Цикл
					ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаАнкеты.Параметры, ТекущаяСтрока);
					ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаАнкеты);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьМакетаИмяСекции.Параметры.Секция = "Жалобы";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
		
		Если НЕ ТаблицаВзаимодействий.Колонки.Найти("ДатаЖалобы") = Неопределено Тогда
			
			ЖалобыКлиента = ТаблицаВзаимодействий.Скопировать();
			
			НайденныеПустыеСтроки = ЖалобыКлиента.НайтиСтроки(Новый Структура("ДатаЖалобы", Неопределено));
			
			Для Каждого ТекущаяСтрока Из НайденныеПустыеСтроки Цикл
				ЖалобыКлиента.Удалить(ТекущаяСтрока);
			КонецЦикла;
			
			Если ЖалобыКлиента.Количество() > 0 Тогда
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаЖалобы);
				Для Каждого ТекущаяСтрока Из ЖалобыКлиента Цикл
					ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаЖалобы.Параметры, ТекущаяСтрока);
					ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаЖалобы);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.Взаиморасчеты Тогда
		
		ОбластьМакетаИмяРаздела.Параметры.Раздел = "Взаиморасчеты с клиентом";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяРаздела);
		
		ОбластьМакетаИмяСекции.Параметры.Секция = "Общие обороты";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
		
		ТаблицаВзаиморасчетов = ПолучитьДанныеДляОтчета(Объект, "МакетВзаиморасчеты", ТекущаяДатаСеанса());
		
		ОбщиеВзаиморасчеты = ТаблицаВзаиморасчетов.Скопировать();
		ОбщиеВзаиморасчеты.Свернуть("ИтогиВзаиморасчетов,ВидВзаиморасчетов","СуммаВзаиморасчетов");
		
		Если ОбщиеВзаиморасчеты.Количество() > 0 Тогда
			
			СтрокиЗапчастиОбщие = ОбщиеВзаиморасчеты.НайтиСтроки(Новый Структура("ИтогиВзаиморасчетов,ВидВзаиморасчетов", "Общие", "Запчасти"));
			Если СтрокиЗапчастиОбщие.Количество() = 0 Тогда
				СуммаЗапчастиОбщие = 0;
			Иначе
				СуммаЗапчастиОбщие = СтрокиЗапчастиОбщие[0].СуммаВзаиморасчетов;
			КонецЕсли;
			
			СтрокиОбслуживаниеОбщие = ОбщиеВзаиморасчеты.НайтиСтроки(Новый Структура("ИтогиВзаиморасчетов,ВидВзаиморасчетов", "Общие", "Обслуживание"));
			Если СтрокиОбслуживаниеОбщие.Количество() = 0 Тогда
				СуммаОбслуживаниеОбщие = 0;
			Иначе
				СуммаОбслуживаниеОбщие = СтрокиОбслуживаниеОбщие[0].СуммаВзаиморасчетов;
			КонецЕсли;
			
			СтрокиАвтомобилиОбщие   = ОбщиеВзаиморасчеты.НайтиСтроки(Новый Структура("ИтогиВзаиморасчетов,ВидВзаиморасчетов", "Общие", "Автомобили"));
			Если СтрокиАвтомобилиОбщие.Количество() = 0 Тогда
				СуммаАвтомобилиОбщие = 0;
			Иначе
				СуммаАвтомобилиОбщие = СтрокиАвтомобилиОбщие[0].СуммаВзаиморасчетов;
			КонецЕсли;
			
			СуммаВсегоОбщие        = СуммаЗапчастиОбщие + СуммаОбслуживаниеОбщие + СуммаАвтомобилиОбщие;
			
			СтрокиЗапчасти     = ОбщиеВзаиморасчеты.НайтиСтроки(Новый Структура("ИтогиВзаиморасчетов,ВидВзаиморасчетов", "За текущий год", "Запчасти"));
			Если СтрокиЗапчасти.Количество() = 0 Тогда
				СуммаЗапчасти = 0;
			Иначе
				СуммаЗапчасти = СтрокиЗапчасти[0].СуммаВзаиморасчетов;
			КонецЕсли;
			
			СтрокиОбслуживание = ОбщиеВзаиморасчеты.НайтиСтроки(Новый Структура("ИтогиВзаиморасчетов,ВидВзаиморасчетов", "За текущий год", "Обслуживание"));
			Если СтрокиОбслуживание.Количество() = 0 Тогда
				СуммаОбслуживание = 0;
			Иначе
				СуммаОбслуживание = СтрокиОбслуживание[0].СуммаВзаиморасчетов;
			КонецЕсли;
			
			СтрокиАвтомобили   = ОбщиеВзаиморасчеты.НайтиСтроки(Новый Структура("ИтогиВзаиморасчетов,ВидВзаиморасчетов", "За текущий год", "Автомобили"));
			Если СтрокиАвтомобили.Количество() = 0 Тогда
				СуммаАвтомобили = 0;
			Иначе
				СуммаАвтомобили = СтрокиАвтомобили[0].СуммаВзаиморасчетов;
			КонецЕсли;
			
			СуммаВсего        = СуммаЗапчасти + СуммаОбслуживание + СуммаАвтомобили;
			
		Иначе
			
			СуммаЗапчастиОбщие     = 0;
			СуммаОбслуживаниеОбщие = 0;
			СуммаАвтомобилиОбщие   = 0;
			СуммаВсегоОбщие        = 0;
			
			СуммаЗапчасти     = 0;
			СуммаОбслуживание = 0;
			СуммаАвтомобили   = 0;
			СуммаВсего        = 0;
			
		КонецЕсли;
		
		ОбластьМакетаОбщиеВзаиморасчеты.Параметры.ОбщиеВсего        = СуммаВсегоОбщие;
		ОбластьМакетаОбщиеВзаиморасчеты.Параметры.ОбщиеОбслуживание = СуммаОбслуживаниеОбщие;
		ОбластьМакетаОбщиеВзаиморасчеты.Параметры.ОбщиеЗапчасти     = СуммаЗапчастиОбщие;
		ОбластьМакетаОбщиеВзаиморасчеты.Параметры.ОбщиеАвтомобили   = СуммаАвтомобилиОбщие;
		
		ОбластьМакетаОбщиеВзаиморасчеты.Параметры.ЗаТекущийГодВсего     = СуммаВсего;
		ОбластьМакетаОбщиеВзаиморасчеты.Параметры.ЗаТекущийОбслуживание = СуммаОбслуживание;
		ОбластьМакетаОбщиеВзаиморасчеты.Параметры.ЗаТекущийЗапчасти     = СуммаЗапчасти;
		ОбластьМакетаОбщиеВзаиморасчеты.Параметры.ЗаТекущийАвтомобили   = СуммаАвтомобили;
		
		ОбластьМакетаОбщиеВзаиморасчеты.Параметры.Валюта                = ВалютаУпр;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаОбщиеВзаиморасчеты);
		
		ОбластьМакетаИмяСекции.Параметры.Секция = "Текущие взаиморасчеты";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
		
		ТаблицаТекущихВзаиморасчетов = ТаблицаВзаиморасчетов.Скопировать();
		
		ПустыеСтроки = ТаблицаТекущихВзаиморасчетов.НайтиСтроки(Новый Структура("СделкаВзаиморасчетов", Неопределено));
		
		Для Каждого ТекущаяСтрока Из ПустыеСтроки Цикл
			ТаблицаТекущихВзаиморасчетов.Удалить(ТекущаяСтрока);
		КонецЦикла;
		
		Если ТаблицаТекущихВзаиморасчетов.Количество() > 0 Тогда
			ОбластьМакетаШапкаТекущиеВзаиморасчеты.Параметры.Вал = ВалютаУпр;
			ТабличныйДокумент.Вывести(ОбластьМакетаШапкаТекущиеВзаиморасчеты);
			Для Каждого ТекущаяСтрока Из ТаблицаТекущихВзаиморасчетов Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаТекущиеВзаиморасчеты.Параметры, ТекущаяСтрока);
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаТекущиеВзаиморасчеты);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.ОбАвтомобилях Тогда
		
		ФорматВыводаСуммы = "ЧЦ=15; ЧДЦ=2; ЧН=0";
		
		ФорматПредставленияГодаВыпускаАвтомобиля = АвтомобилиСервер.ПолучитьФорматПредставленияГодаВыпускаАвтомобиля(Объект);
		
		ОбластьМакетаИмяРаздела.Параметры.Раздел = "Об автомобилях";
		ТабличныйДокумент.Вывести(ОбластьМакетаИмяРаздела);
		
		ТаблицаАвтомобили = ПолучитьДанныеДляОтчета(Объект, "МакетАвтомобили", ТекущаяДатаСеанса());
		
		МассивАвтомобилей = ТаблицаАвтомобили.Скопировать().ВыгрузитьКолонку("Автомобиль");
		
		// Удалим пустые строки
		Инд = 0;
		
		Пока Инд < МассивАвтомобилей.Количество() Цикл
			Если НЕ ЗначениеЗаполнено(МассивАвтомобилей[Инд]) Тогда
				МассивАвтомобилей.Удалить(Инд);
			Иначе
				Инд = Инд + 1;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ТекущийАвтомобиль Из МассивАвтомобилей Цикл
			
			ОбластьМакетаИмяСекции.Параметры.Секция = ТекущийАвтомобиль;
			ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
			
			// Получим информацию об автомобиле
			НайденныйАвтомобиль = ТаблицаАвтомобили.Найти(ТекущийАвтомобиль, "Автомобиль");
			
			ОбластьМакетаАвтомобиль.Параметры.ГодВыпускаПробег               = Формат(НайденныйАвтомобиль.АвтомобильГодВыпуска,ФорматПредставленияГодаВыпускаАвтомобиля) + ?(ЗначениеЗаполнено(НайденныйАвтомобиль.АвтомобильПробег), ", пробег " + НайденныйАвтомобиль.АвтомобильПробег + " км.", "");
			ОбластьМакетаАвтомобиль.Параметры.АвтомобильМодель               = НайденныйАвтомобиль.АвтомобильМодель;
			ОбластьМакетаАвтомобиль.Параметры.АвтомобильКомплектация         = НайденныйАвтомобиль.АвтомобильВариантКомплектации;
			ОбластьМакетаАвтомобиль.Параметры.ТипДвиготеляОбъем              = Строка(НайденныйАвтомобиль.АвтомобильТипДвигателя) + ?(ЗначениеЗаполнено(НайденныйАвтомобиль.АвтомобильТипДвигателяОбъемДвигателя), ", объем " + НайденныйАвтомобиль.АвтомобильТипДвигателяОбъемДвигателя, "");
			ОбластьМакетаАвтомобиль.Параметры.ТипКППКоличествоПередач        = Строка(НайденныйАвтомобиль.АвтомобильТипКПП) + ?(ЗначениеЗаполнено(НайденныйАвтомобиль.АвтомобильТипКППКоличествоПередач), ", количество передач " + НайденныйАвтомобиль.АвтомобильТипКППКоличествоПередач, "");
			ОбластьМакетаАвтомобиль.Параметры.АвтомобильТипСалона            = НайденныйАвтомобиль.АвтомобильТипСалона;
			ОбластьМакетаАвтомобиль.Параметры.ГрантияДатаНачалаДатаОкончания = ?(ЗначениеЗаполнено(НайденныйАвтомобиль.АвтомобильДатаНачалаГарантии), "с " + Формат(НайденныйАвтомобиль.АвтомобильДатаНачалаГарантии, "ДЛФ=D") + " ", "") + ?(ЗначениеЗаполнено(НайденныйАвтомобиль.АвтомобильДатаОкончанияГарантии), "по " + Формат(НайденныйАвтомобиль.АвтомобильДатаОкончанияГарантии, "ДЛФ=D") + " ", "") + ?(ЗначениеЗаполнено(НайденныйАвтомобиль.АвтомобильПериодГарантии), ", до окнончания гарантии " + НайденныйАвтомобиль.АвтомобильПериодГарантии + "дн.", "");
			
			ТабличныйДокумент.Вывести(ОбластьМакетаАвтомобиль);
			
			ПродажаАвтомобиля = ТаблицаАвтомобили.Найти(ТекущийАвтомобиль, "АвтомобильПродажи");
			
			Если НЕ ПродажаАвтомобиля = Неопределено Тогда
				
				ОбластьМакетаИмяСекции.Параметры.Секция = ПродажаАвтомобиля.РеализацияАвтомобилей;
				ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
				
				ОбластьМакетаПродажаАвтомобиля.Параметры.Роль = ПродажаАвтомобиля.РольКлиента;
				ОбластьМакетаПродажаАвтомобиля.Параметры.РабочийЛист = Формат(ПродажаАвтомобиля.ДатаРабочегоЛиста, "ДЛФ=D") + ?(ЗначениеЗаполнено(ПродажаАвтомобиля.СтатусРабочегоЛиста), " " + ПродажаАвтомобиля.СтатусРабочегоЛиста, "") +
																		?(ЗначениеЗаполнено(ПродажаАвтомобиля.ПотенциалРабочегоЛиста), " потенциал " + ПродажаАвтомобиля.ПотенциалРабочегоЛиста + "%", "") + ?(ЗначениеЗаполнено(ПродажаАвтомобиля.ПричинаОтказаРабочегоЛиста), " " + ПродажаАвтомобиля.ПричинаОтказаРабочегоЛиста, "") + ?(ЗначениеЗаполнено(ПродажаАвтомобиля.МенеджерРабочегоЛиста), " " + ПродажаАвтомобиля.МенеджерРабочегоЛиста, "");
				ОбластьМакетаПродажаАвтомобиля.Параметры.ТестДрайв = Формат(ПродажаАвтомобиля.ДатаНачалаТестДрайва, "ДЛФ=D") + ?(ЗначениеЗаполнено(ПродажаАвтомобиля.ДатаОкончанияТестДрайва), " " + Формат(ПродажаАвтомобиля.ДатаОкончанияТестДрайва, "ДЛФ=D"), "") +
																		?(ЗначениеЗаполнено(ПродажаАвтомобиля.СостояниеТестДрайва), " " + ПродажаАвтомобиля.СостояниеТестДрайва, "") + ?(ЗначениеЗаполнено(ПродажаАвтомобиля.АвтомобильТестДрайва), " " + ПродажаАвтомобиля.АвтомобильТестДрайва, "") + ?(ЗначениеЗаполнено(ПродажаАвтомобиля.МаршрутТестДрайва), " " + ПродажаАвтомобиля.МаршрутТестДрайва, "");
				ОбластьМакетаПродажаАвтомобиля.Параметры.АвтомобильТрейдИн = ?(ЗначениеЗаполнено(ПродажаАвтомобиля.МодельСданногоАвто), Строка(ПродажаАвтомобиля.МодельСданногоАвто) + ", стоимость выкупа " + Формат(ПродажаАвтомобиля.СтоимостьВыкупа, ФорматВыводаСуммы) + " " + ВалютаУпр + ", стоимость продажи " + Формат(ПродажаАвтомобиля.СтоимостьПродажи, ФорматВыводаСуммы) + " " + ВалютаУпр + ", наценка " + Формат(ПродажаАвтомобиля.Наценка, ФорматВыводаСуммы) + " " + ВалютаУпр, "");
				ОбластьМакетаПродажаАвтомобиля.Параметры.Контракт          = Строка(ПродажаАвтомобиля.ДатаКонтракта) + " " + ПродажаАвтомобиля.НомерКонтракта + " " + ПродажаАвтомобиля.МенеджерЗаказа;
				ОбластьМакетаПродажаАвтомобиля.Параметры.Состоялся         = ПродажаАвтомобиля.Состоялся;
				ОбластьМакетаПродажаАвтомобиля.Параметры.Отказ             = Строка(ПродажаАвтомобиля.ДатаОтказа) + " " + ПродажаАвтомобиля.ПричинаОтказа;
				ОбластьМакетаПродажаАвтомобиля.Параметры.Переуступка       = Строка(ПродажаАвтомобиля.ДатаПереуступки) + " " + ПродажаАвтомобиля.КомуПереуступил;
				ОбластьМакетаПродажаАвтомобиля.Параметры.Оформление        = Строка(ПродажаАвтомобиля.ДатаОформления) + " " + ПродажаАвтомобиля.НомерДокументаОформления + ", от продажи " + ПродажаАвтомобиля.КоличествоДнейПродажи + " дней " + ПродажаАвтомобиля.МенеджерРеализации;
				// !!!_Разобраться с областью
				//ОбластьМакетаПродажаАвтомобиля.Параметры.ВыдачаАвтомобиля  = ?(ПродажаАвтомобиля.ФактическаяДатаВыдачиАвтомобиля <> Дата(1,1,1), Строка(ПродажаАвтомобиля.ФактическаяДатаВыдачиАвтомобиля) + " ", "") + ПродажаАвтомобиля.МестоВыдачиАвтомобиля + " " + ПродажаАвтомобиля.АвторВыдачиАвтомобиля;
				
				ОбластьМакетаПродажаАвтомобиля.Параметры.ЗакупкаАвтомобиля    = Формат(ПродажаАвтомобиля.СтоимостьПокупкиАвтомобиля, ФорматВыводаСуммы) + " " + ВалютаУпр;
				ОбластьМакетаПродажаАвтомобиля.Параметры.СтоимостьБезСкидки   = Формат(ПродажаАвтомобиля.СтоимостьБазовойКомплектацииБезСкидки, ФорматВыводаСуммы) + " " + ВалютаУпр;
				ОбластьМакетаПродажаАвтомобиля.Параметры.СуммаДопОпций        = Формат(ПродажаАвтомобиля.СуммаОпцийБезСкидки, ФорматВыводаСуммы) + " " + ВалютаУпр;
				ОбластьМакетаПродажаАвтомобиля.Параметры.СуммаДопОборудования = Формат(ПродажаАвтомобиля.СуммаКомплектацииИРабот, ФорматВыводаСуммы) + " " + ВалютаУпр + ", сумма доп. оборудования " + Формат(ПродажаАвтомобиля.СтоимостьДопОборудования, ФорматВыводаСуммы) + " " + ВалютаУпр + ", сумма работ " + Формат(ПродажаАвтомобиля.СуммаРабот, ФорматВыводаСуммы) + " " + ВалютаУпр;
				ОбластьМакетаПродажаАвтомобиля.Параметры.Стоимость            = Формат(ПродажаАвтомобиля.СтоимостьАвтомобиляБезСкидки, ФорматВыводаСуммы) + " " + ВалютаУпр + ", стоимость со скидкой " + Формат(ПродажаАвтомобиля.СтоимостьАвтомобиляСоСкидкой, ФорматВыводаСуммы) + " " + ВалютаУпр + ", сумма скидки " + Формат(ПродажаАвтомобиля.СтоимостьСкидки, ФорматВыводаСуммы) + " " + ВалютаУпр;
				ОбластьМакетаПродажаАвтомобиля.Параметры.Оплата               = Формат(ПродажаАвтомобиля.СуммаОплатыЗаАвтомобиль, ФорматВыводаСуммы) + " " + ВалютаУпр + ", сумма предоплаты " + Формат(ПродажаАвтомобиля.СуммаПредоплатыЗаАвтомобиль, ФорматВыводаСуммы) + " " + ВалютаУпр + ", сумма постоплаты " + Формат(ПродажаАвтомобиля.СуммаПостоплатыЗаАвтомобиль, ФорматВыводаСуммы) + " " + ВалютаУпр;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаПродажаАвтомобиля);
				
			КонецЕсли;
			
			ОбластьМакетаИмяСекции.Параметры.Секция = "Обслуживание автомобиля";
			ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
			
			ТаблицаОбслуживания = ТаблицаАвтомобили.НайтиСтроки(Новый Структура("АвтомобильОбслуживания", ТекущийАвтомобиль));
			
			Если ТаблицаОбслуживания.Количество() > 0 Тогда
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаОбслуживанияАвтомобиля);
				
				СписокЗаказНарядов = Новый Массив;
				
				Для Каждого ТекущаяСтрока Из ТаблицаОбслуживания Цикл
					
					ЗаказНаряд = ТекущаяСтрока.ЗаказНаряд;
					
					Если СписокЗаказНарядов.Найти(ЗаказНаряд) = Неопределено Тогда
						
						ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаЗаказНаряд.Параметры, ТекущаяСтрока);
						ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаЗаказНаряд);
						
						ТаблицаЗН = ТаблицаАвтомобили.НайтиСтроки(Новый Структура("ЗаказНаряд", ЗаказНаряд));
						
						Для Каждого ТекущаяПричинаОбращения Из ТаблицаЗН Цикл
							ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаПричиныОбращения.Параметры, ТекущаяПричинаОбращения);
							ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаПричиныОбращения);
						КонецЦикла;
						
						СписокЗаказНарядов.Добавить(ЗаказНаряд);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			СтрокаВыкупа = ТаблицаАвтомобили.Найти(ТекущийАвтомобиль, "АвтомобильПродажиВыкуп");
			
			Если НЕ СтрокаВыкупа = Неопределено Тогда
				
				ОбластьМакетаИмяСекции.Параметры.Секция = СтрокаВыкупа.ДокументВыкупа;
				ТабличныйДокумент.Вывести(ОбластьМакетаИмяСекции);
				
				ОбластьМакетаВыкупАвтомобиля.Параметры.СтоимостьАвтомобиля = Формат(СтрокаВыкупа.СтоимостьВыкупаАвтомобиля, ФорматВыводаСуммы) + " " + ВалютаУпр + ", сумма продажи " + Формат(СтрокаВыкупа.СуммаПродажиВыкупленногоАвтомобиля, ФорматВыводаСуммы) + " " + ВалютаУпр + ", наценка " + Формат(СтрокаВыкупа.НаценкаВыкупленногоАвтомобиля, ФорматВыводаСуммы) + " " + ВалютаУпр + ?(ЗначениеЗаполнено(СтрокаВыкупа.МенеджерВыкупаАвтомобиля), ", менеджер " + СтрокаВыкупа.МенеджерВыкупаАвтомобиля, "");
				ОбластьМакетаВыкупАвтомобиля.Параметры.ДатаВыплаты = Формат(СтрокаВыкупа.ДатаВыплаты, "ДЛФ=D");
				ТабличныйДокумент.Вывести(ОбластьМакетаВыкупАвтомобиля);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьКассоваяКнига()

#КонецОбласти

#КонецОбласти

#КонецЕсли