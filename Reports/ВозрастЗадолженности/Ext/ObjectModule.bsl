#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОписаниеПеременных

Перем ДоговорВзаиморасчетов;	// Хранит ДоговорВзаиморасчетов, по которому делается отбор
Перем Сделка;					// Хранит Сделку, по которой делается отбор
Перем Валюта;					// Валюта отчета
Перем КурсВалюты;				// Хранит курс валюты отчета
Перем КонецПериода;             // Хранит Период, на который делается выборка

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - При компоновке результата
//
// Параметры:
//  ДокументРезультат	 - ТабличныйДокумент				 - Результат работы отчета
//  ДанныеРасшифровки	 - ДанныеРасшифровкиКомпоновкиДанных - Хранит данные расшифровки
//  СтандартнаяОбработка - Булево							 - Признак Стандартной обработки.
//
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ЗаполнитьНачальныеНастройки();
	ПолучитьПараметрыСКД();
	Запрос=Новый Запрос;
	ПолучитьТекстЗапроса(Запрос);
	УстановитьПараметрыЗапроса(Запрос);
	Выборка=Запрос.Выполнить().Выгрузить();
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("Основной", Выборка);
	ОтчетыПлатформаСервер.ВывестиОтчет(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, ВнешниеНаборыДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - Получить параметры СКД
//  Получает параметры установленные пользователем.
//
Процедура ПолучитьПараметрыСКД()
	
	Валюта=КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ВалютаОтчета").Значение;
	Если НЕ ЗначениеЗаполнено(Валюта) Тогда
		Валюта=Константы.ВалютаРегламентированногоУчетаОрганизаций.Получить();	
	КонецЕсли;
	КонецПериода=КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода").Значение;
	КурсВалютыОтчета = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(КонецПериода, Новый Структура("Валюта", Валюта));
	КурсВалюты = КурсВалютыОтчета.Курс/?(КурсВалютыОтчета.Кратность=0,1,КурсВалютыОтчета.Кратность);
	КурсВалюты = ?(КурсВалюты = 0, 1, КурсВалюты);
	
КонецПроцедуры

// Процедура - Получить текст запроса
//  Получает запрос в интервалах сумм и дней.
//
// Параметры:
//  Запрос	 - Запрос	 - Запрос, для которого формируется текст запроса.
//
Процедура ПолучитьТекстЗапроса(Запрос)
	
	ДолгНам = Ложь;
	ДолгНаш = Ложь;
	
	Для Каждого Элемент Из КомпоновщикНастроек.Настройки.Выбор.Элементы Цикл
		
		Если Элемент.Использование Тогда
			
			Если Элемент.Поле = Новый ПолеКомпоновкиДанных("СуммаДЗ")
				ИЛИ Элемент.Поле = Новый ПолеКомпоновкиДанных("ПроцентДЗ") Тогда
				ДолгНам = Истина;
			КонецЕсли;
			
			Если Элемент.Поле = Новый ПолеКомпоновкиДанных("СуммаКЗ")
				ИЛИ Элемент.Поле = Новый ПолеКомпоновкиДанных("ПроцентКЗ") Тогда
				ДолгНаш = Истина
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъединеннаяТаблица.Контрагент КАК КонтрагентКЗ,
	|	ОбъединеннаяТаблица.Сделка КАК СделкаКЗ,
	|	ОбъединеннаяТаблица.Организация КАК Организация,
	|	ОбъединеннаяТаблица.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|	ВЫБОР
	|		КОГДА &ВалютаОтчета = 0
	|			ТОГДА ОбъединеннаяТаблица.СуммаКЗ
	|		ИНАЧЕ ОбъединеннаяТаблица.СуммаПоДоговоруКЗ 
	|	КОНЕЦ КАК СуммаКЗ,
	|	ВЫБОР
	|		КОГДА ОбъединеннаяТаблица.СуммаКЗ <> 0
	|			ТОГДА РАЗНОСТЬДАТ(ВЫБОР
	|						КОГДА ОбъединеннаяТаблица.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|							ТОГДА ОбъединеннаяТаблица.МинПериод
	|						ИНАЧЕ ОбъединеннаяТаблица.ДатаЗакрытия
	|					КОНЕЦ, &Период, ДЕНЬ)
	|	КОНЕЦ КАК РазницаДней,
	|	ВЫБОР
	|		КОГДА ОбъединеннаяТаблица.СуммаКЗ <> 0
	|			ТОГДА РАЗНОСТЬДАТ(ВЫБОР
	|						КОГДА ОбъединеннаяТаблица.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|							ТОГДА ОбъединеннаяТаблица.МинПериод
	|						ИНАЧЕ ОбъединеннаяТаблица.ДатаЗакрытия
	|					КОНЕЦ, &Период, ДЕНЬ) - ОбъединеннаяТаблица.ДоговорВзаиморасчетов.СрокОплатыЗадолженности
	|	КОНЕЦ КАК ПросроченоДней,
	|	&МинПределИС КАК МинПределИС,
	|	&МаксПределИС КАК МаксПределИС,
	|	&МинПределИД КАК МинПределИД,
	|	&МаксПределИД КАК МаксПределИД,
	|	ОбъединеннаяТаблица.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	ОбъединеннаяТаблица.Сделка КАК Сделка
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВзаиморасчетыОстатки.Контрагент КАК Контрагент,
	|		ВзаиморасчетыОстатки.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|		ВзаиморасчетыОстатки.ДоговорВзаиморасчетов.Организация КАК Организация,
	|		ВзаиморасчетыОстатки.ДоговорВзаиморасчетов.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|		ВзаиморасчетыОстатки.Сделка КАК Сделка,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ВзаиморасчетыОстатки.СуммаОстаток < 0
	|					ТОГДА -ВзаиморасчетыОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаПоДоговоруКЗ,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ВзаиморасчетыОстатки.СуммаОстаток > 0
	|					ТОГДА ВзаиморасчетыОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаПоДоговоруДЗ,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ВзаиморасчетыОстатки.СуммаУпрОстаток < 0
	|					ТОГДА -ВзаиморасчетыОстатки.СуммаУпрОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаКЗ,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ВзаиморасчетыОстатки.СуммаУпрОстаток > 0
	|					ТОГДА ВзаиморасчетыОстатки.СуммаУпрОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДЗ,
	|		МИНИМУМ(ВзаиморасчетыКомпании.Период) КАК МинПериод,
	|		МАКСИМУМ(ЕСТЬNULL(ВзаиморасчетыКомпании.Сделка.ДатаЗакрытия, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаЗакрытия
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыКомпании.Остатки(&Период, #ДоговорВзаиморасчетов {(Контрагент).* КАК Контрагент, (ДоговорВзаиморасчетов).* КАК ДоговорВзаиморасчетов, (ДоговорВзаиморасчетов.Организация).* КАК Организация, (ДоговорВзаиморасчетов.ПодразделениеКомпании).* КАК ПодразделениеКомпании, (Сделка).* КАК Сделка}) КАК ВзаиморасчетыОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыКомпании КАК ВзаиморасчетыКомпании
	|			ПО ВзаиморасчетыОстатки.Контрагент = ВзаиморасчетыКомпании.Контрагент
	|				И ВзаиморасчетыОстатки.ДоговорВзаиморасчетов = ВзаиморасчетыКомпании.ДоговорВзаиморасчетов
	|				И ВзаиморасчетыОстатки.Сделка = ВзаиморасчетыКомпании.Сделка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВзаиморасчетыОстатки.Контрагент,
	|		ВзаиморасчетыОстатки.ДоговорВзаиморасчетов,
	|		ВзаиморасчетыОстатки.Сделка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыСКонтрагентамиОстатки.Контрагент,
	|		РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов,
	|		РасчетыСКонтрагентамиОстатки.Организация,
	|		РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов.ПодразделениеКомпании,
	|		РасчетыСКонтрагентамиОстатки.ДокументРасчетов,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА РасчетыСКонтрагентамиОстатки.СуммаОстаток < 0
	|					ТОГДА -РасчетыСКонтрагентамиОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА РасчетыСКонтрагентамиОстатки.СуммаОстаток > 0
	|					ТОГДА РасчетыСКонтрагентамиОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток < 0
	|					ТОГДА -РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток > 0
	|					ТОГДА РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МИНИМУМ(РасчетыСКонтрагентами.Период),
	|		МАКСИМУМ(ЕСТЬNULL(РасчетыСКонтрагентами.ДокументРасчетов.ДатаЗакрытия, ДАТАВРЕМЯ(1, 1, 1)))
	|	ИЗ
	|		РегистрНакопления.РасчетыСКонтрагентами.Остатки(&Период, #ДоговорВзаиморасчетов {(Контрагент).* КАК Контрагент, (ДоговорВзаиморасчетов).* КАК ДоговорВзаиморасчетов, (Организация).* КАК Организация, (ДоговорВзаиморасчетов.ПодразделениеКомпании).* КАК ПодразделениеКомпании, (ДокументРасчетов).* КАК Сделка}) КАК РасчетыСКонтрагентамиОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКонтрагентами КАК РасчетыСКонтрагентами
	|			ПО РасчетыСКонтрагентамиОстатки.Контрагент = РасчетыСКонтрагентами.Контрагент
	|				И РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов = РасчетыСКонтрагентами.ДоговорВзаиморасчетов
	|				И РасчетыСКонтрагентамиОстатки.ДокументРасчетов = РасчетыСКонтрагентами.ДокументРасчетов
	|				И РасчетыСКонтрагентамиОстатки.ТипРасчета = РасчетыСКонтрагентами.ТипРасчета
	|				И РасчетыСКонтрагентамиОстатки.Заказ = РасчетыСКонтрагентами.Заказ
	|				И РасчетыСКонтрагентамиОстатки.Организация = РасчетыСКонтрагентами.Организация
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РасчетыСКонтрагентамиОстатки.Контрагент,
	|		РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов,
	|		РасчетыСКонтрагентамиОстатки.ДокументРасчетов,
	|		РасчетыСКонтрагентамиОстатки.Организация) КАК ОбъединеннаяТаблица
	|ГДЕ
	|	&Наши = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъединеннаяТаблица.Контрагент КАК КонтрагентДЗ,
	|	ОбъединеннаяТаблица.Сделка КАК СделкаДЗ,
	|	ОбъединеннаяТаблица.Организация КАК Организация,
	|	ОбъединеннаяТаблица.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|	ОбъединеннаяТаблица.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &ВалютаОтчета = 0
	|			ТОГДА ОбъединеннаяТаблица.СуммаДЗ
	|		ИНАЧЕ ОбъединеннаяТаблица.СуммаПоДоговоруДЗ
	|	КОНЕЦ КАК СуммаДЗ,
	|	ВЫБОР
	|		КОГДА ОбъединеннаяТаблица.СуммаДЗ <> 0
	|			ТОГДА РАЗНОСТЬДАТ(ВЫБОР
	|						КОГДА ОбъединеннаяТаблица.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|							ТОГДА ОбъединеннаяТаблица.МинПериод
	|						ИНАЧЕ ОбъединеннаяТаблица.ДатаЗакрытия
	|					КОНЕЦ, &Период, ДЕНЬ)
	|	КОНЕЦ КАК РазницаДней,
	|	ВЫБОР
	|		КОГДА ОбъединеннаяТаблица.СуммаДЗ <> 0
	|			ТОГДА РАЗНОСТЬДАТ(ВЫБОР
	|						КОГДА ОбъединеннаяТаблица.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|							ТОГДА ОбъединеннаяТаблица.МинПериод
	|						ИНАЧЕ ОбъединеннаяТаблица.ДатаЗакрытия
	|					КОНЕЦ, &Период, ДЕНЬ) - ОбъединеннаяТаблица.ДоговорВзаиморасчетов.СрокОплатыЗадолженности
	|	КОНЕЦ КАК ПросроченоДней,
	|	&МинПределИС КАК МинПределИС,
	|	&МаксПределИС КАК МаксПределИС,
	|	&МинПределИД КАК МинПределИД,
	|	&МаксПределИД КАК МаксПределИД
	|ПОМЕСТИТЬ ВТ2
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВзаиморасчетыОстатки.Контрагент КАК Контрагент,
	|		ВзаиморасчетыОстатки.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|		ВзаиморасчетыОстатки.ДоговорВзаиморасчетов.Организация КАК Организация,
	|		ВзаиморасчетыОстатки.ДоговорВзаиморасчетов.ПодразделениеКомпании КАК ПодразделениеКомпании,
	|		ВзаиморасчетыОстатки.Сделка КАК Сделка,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ВзаиморасчетыОстатки.СуммаОстаток < 0
	|					ТОГДА -ВзаиморасчетыОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаПоДоговоруКЗ,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ВзаиморасчетыОстатки.СуммаОстаток > 0
	|					ТОГДА ВзаиморасчетыОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаПоДоговоруДЗ,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ВзаиморасчетыОстатки.СуммаУпрОстаток < 0
	|					ТОГДА -ВзаиморасчетыОстатки.СуммаУпрОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаКЗ,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ВзаиморасчетыОстатки.СуммаУпрОстаток > 0
	|					ТОГДА ВзаиморасчетыОстатки.СуммаУпрОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДЗ,
	|		МИНИМУМ(ВзаиморасчетыКомпании.Период) КАК МинПериод,
	|		МАКСИМУМ(ЕСТЬNULL(ВзаиморасчетыКомпании.Сделка.ДатаЗакрытия, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаЗакрытия
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыКомпании.Остатки(&Период, #ДоговорВзаиморасчетов {(Контрагент).* КАК Контрагент, (ДоговорВзаиморасчетов).* КАК ДоговорВзаиморасчетов, (ДоговорВзаиморасчетов.Организация).* КАК Организация, (ДоговорВзаиморасчетов.ПодразделениеКомпании).* КАК ПодразделениеКомпании, (Сделка).* КАК Сделка}) КАК ВзаиморасчетыОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыКомпании КАК ВзаиморасчетыКомпании
	|			ПО ВзаиморасчетыОстатки.Контрагент = ВзаиморасчетыКомпании.Контрагент
	|				И ВзаиморасчетыОстатки.ДоговорВзаиморасчетов = ВзаиморасчетыКомпании.ДоговорВзаиморасчетов
	|				И ВзаиморасчетыОстатки.Сделка = ВзаиморасчетыКомпании.Сделка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВзаиморасчетыОстатки.Контрагент,
	|		ВзаиморасчетыОстатки.ДоговорВзаиморасчетов,
	|		ВзаиморасчетыОстатки.Сделка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыСКонтрагентамиОстатки.Контрагент,
	|		РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов,
	|		РасчетыСКонтрагентамиОстатки.Организация,
	|		РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов.ПодразделениеКомпании,
	|		РасчетыСКонтрагентамиОстатки.ДокументРасчетов,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА РасчетыСКонтрагентамиОстатки.СуммаОстаток < 0
	|					ТОГДА -РасчетыСКонтрагентамиОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА РасчетыСКонтрагентамиОстатки.СуммаОстаток > 0
	|					ТОГДА РасчетыСКонтрагентамиОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток < 0
	|					ТОГДА -РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток > 0
	|					ТОГДА РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МИНИМУМ(РасчетыСКонтрагентами.Период),
	|		МАКСИМУМ(ЕСТЬNULL(РасчетыСКонтрагентами.ДокументРасчетов.ДатаЗакрытия, ДАТАВРЕМЯ(1, 1, 1)))
	|	ИЗ
	|		РегистрНакопления.РасчетыСКонтрагентами.Остатки(&Период,  #ДоговорВзаиморасчетов {(Контрагент).* КАК Контрагент, (ДоговорВзаиморасчетов).* КАК ДоговорВзаиморасчетов, (Организация).* КАК Организация, (ДоговорВзаиморасчетов.ПодразделениеКомпании).* КАК ПодразделениеКомпании, (ДокументРасчетов).* КАК Сделка}) КАК РасчетыСКонтрагентамиОстатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКонтрагентами КАК РасчетыСКонтрагентами
	|			ПО РасчетыСКонтрагентамиОстатки.Организация = РасчетыСКонтрагентами.Организация
	|				И РасчетыСКонтрагентамиОстатки.Контрагент = РасчетыСКонтрагентами.Контрагент
	|				И РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов = РасчетыСКонтрагентами.ДоговорВзаиморасчетов
	|				И РасчетыСКонтрагентамиОстатки.ТипРасчета = РасчетыСКонтрагентами.ТипРасчета
	|				И РасчетыСКонтрагентамиОстатки.ДокументРасчетов = РасчетыСКонтрагентами.ДокументРасчетов
	|				И РасчетыСКонтрагентамиОстатки.Заказ = РасчетыСКонтрагентами.Заказ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РасчетыСКонтрагентамиОстатки.Контрагент,
	|		РасчетыСКонтрагентамиОстатки.ДоговорВзаиморасчетов,
	|		РасчетыСКонтрагентамиОстатки.ДокументРасчетов,
	|		РасчетыСКонтрагентамиОстатки.Организация) КАК ОбъединеннаяТаблица
	|ГДЕ
	|	&Нам = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(ВТ.СуммаКЗ) = 0
	|			ТОГДА 1
	|		ИНАЧЕ СУММА(ВТ.СуммаКЗ)
	|	КОНЕЦ КАК СуммаКЗ
	|ПОМЕСТИТЬ ТаблицаОбщихИтоговКЗ
	|ИЗ
	|	ВТ КАК ВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(ВТ2.СуммаДЗ) = 0
	|			ТОГДА 1
	|		ИНАЧЕ СУММА(ВТ2.СуммаДЗ)
	|	КОНЕЦ КАК СуммаДЗ
	|ПОМЕСТИТЬ ТаблицаОбщихИтоговДЗ
	|ИЗ
	|	ВТ2 КАК ВТ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОбщихИтоговКЗ.СуммаКЗ КАК СуммаКЗ,
	|	ТаблицаОбщихИтоговДЗ.СуммаДЗ КАК СуммаДЗ
	|ПОМЕСТИТЬ ТаблицаОбщихИтогов
	|ИЗ
	|	ТаблицаОбщихИтоговКЗ КАК ТаблицаОбщихИтоговКЗ,
	|	ТаблицаОбщихИтоговДЗ КАК ТаблицаОбщихИтоговДЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВТ.СуммаКЗ > ВТ.МинПределИС
	|					И ВТ.СуммаКЗ <= ВТ.МаксПределИС
	|				ТОГДА ВТ.СуммаКЗ
	|		КОНЕЦ) КАК СуммаКЗ,
	|	ВТ.РазницаДней,
	|	ВТ.ПросроченоДней,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаОбщихИтогов.СуммаКЗ ЕСТЬ NULL
	|					ИЛИ ТаблицаОбщихИтогов.СуммаКЗ = 0
	|				ТОГДА 100
	|			КОГДА ВТ.СуммаКЗ > ВТ.МинПределИС
	|					И ВТ.СуммаКЗ <= ВТ.МаксПределИС
	|				ТОГДА ВТ.СуммаКЗ * 100 / ТаблицаОбщихИтогов.СуммаКЗ
	|		КОНЕЦ) КАК ПроцентКЗ,
	|	ВТ.МинПределИС КАК МинПределИС,
	|	ВТ.МаксПределИС КАК МаксПределИС,
	|	ВТ.МинПределИД КАК МинПределИД,
	|	ВТ.МаксПределИД КАК МаксПределИД,
	|	ВТ.КонтрагентКЗ КАК КонтрагентКЗ,
	|	ВТ.СделкаКЗ КАК СделкаКЗ,
	|	ВТ.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
	|	ВТ.Организация КАК Организация,
	|	ВТ.ПодразделениеКомпании КАК ПодразделениеКомпании
	|ПОМЕСТИТЬ ИтогиКЗ
	|ИЗ
	|	ВТ КАК ВТ,
	|	ТаблицаОбщихИтогов КАК ТаблицаОбщихИтогов
	|ГДЕ
	|	ВТ.ПросроченоДней > ВТ.МинПределИД
	|	И ВТ.ПросроченоДней <= ВТ.МаксПределИД
	|	И &Наши = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.РазницаДней,
	|	ВТ.ПросроченоДней,
	|	ВТ.МинПределИС,
	|	ВТ.МаксПределИС,
	|	ВТ.МинПределИД,
	|	ВТ.МаксПределИД,
	|	ВТ.КонтрагентКЗ,
	|	ВТ.СделкаКЗ,
	|	ВТ.ДоговорВзаиморасчетов,
	|	ВТ.Организация,
	|	ВТ.ПодразделениеКомпании
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВТ2.СуммаДЗ > ВТ2.МинПределИС
	|					И ВТ2.СуммаДЗ <= ВТ2.МаксПределИС
	|				ТОГДА ВТ2.СуммаДЗ
	|		КОНЕЦ) КАК СуммаДЗ,
	|	ВТ2.РазницаДней КАК РазницаДней,
	|	ВТ2.ПросроченоДней КАК ПросроченоДней,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаОбщихИтогов.СуммаДЗ ЕСТЬ NULL 
	|					ИЛИ ТаблицаОбщихИтогов.СуммаДЗ = 0
	|				ТОГДА 100
	|			КОГДА ВТ2.СуммаДЗ > ВТ2.МинПределИС
	|					И ВТ2.СуммаДЗ <= ВТ2.МаксПределИС
	|				ТОГДА ВТ2.СуммаДЗ *100 / ТаблицаОбщихИтогов.СуммаДЗ  
	|		КОНЕЦ) КАК ПроцентДЗ,
	|	ВТ2.МинПределИС КАК МинПределИС,
	|	ВТ2.МаксПределИС КАК МаксПределИС,
	|	ВТ2.МинПределИД КАК МинПределИД,
	|	ВТ2.МаксПределИД КАК МаксПределИД,
	|	ВТ2.КонтрагентДЗ,
	|	ВТ2.СделкаДЗ,
	|	ВТ2.ДоговорВзаиморасчетов,
	|	ВТ2.Организация,
	|	ВТ2.ПодразделениеКомпании
	|ПОМЕСТИТЬ ИтогиДЗ
	|ИЗ
	|	ВТ2 КАК ВТ2,
	|	ТаблицаОбщихИтогов КАК ТаблицаОбщихИтогов
	|ГДЕ
	|	&Нам = ИСТИНА
	|	И ВТ2.ПросроченоДней > ВТ2.МинПределИД
	|	И ВТ2.ПросроченоДней <= ВТ2.МаксПределИД
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ2.РазницаДней,
	|	ВТ2.ПросроченоДней,
	|	ВТ2.МинПределИС,
	|	ВТ2.МаксПределИС,
	|	ВТ2.МинПределИД,
	|	ВТ2.МаксПределИД,
	|	ВТ2.КонтрагентДЗ,
	|	ВТ2.СделкаДЗ,
	|	ВТ2.ДоговорВзаиморасчетов,
	|	ВТ2.Организация,
	|	ВТ2.ПодразделениеКомпании
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Если ЗначениеЗаполнено(ДоговорВзаиморасчетов) Тогда
		УсловиеДоговораВзаиморасчетов = "ДоговорВзаиморасчетов = &ДоговорВзаиморасчетов";
	Иначе
		УсловиеДоговораВзаиморасчетов = "";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДоговорВзаиморасчетов", УсловиеДоговораВзаиморасчетов);
	
	// Если вариант отчета ВсеЗадолженности
	Если ДолгНам И ДолгНаш Тогда
		
		ТекстЗапроса=ТекстЗапроса+"
		|ВЫБРАТЬ
		|	ИтогиДЗ.СуммаДЗ КАК СуммаДЗ,
		|	0 КАК СуммаКЗ,
		|	ИтогиДЗ.РазницаДней КАК РазницаДней,
		|	ИтогиДЗ.ПросроченоДней КАК ПросроченоДней,
		|	ИтогиДЗ.ПроцентДЗ КАК ПроцентДЗ,
		|	0 КАК ПроцентКЗ,
		|	ИтогиДЗ.КонтрагентДЗ КАК Контрагент,
		|	ИтогиДЗ.СделкаДЗ КАК Сделка,
		|	ИтогиДЗ.ДоговорВзаиморасчетов,
		|	ИтогиДЗ.Организация,
		|	ИтогиДЗ.ПодразделениеКомпании
		|ПОМЕСТИТЬ ИнтервалыДат
		|ИЗ
		|	ИтогиДЗ КАК ИтогиДЗ
		|
		|ОБЪЕДИНИТЬ ВСЕ 
		|
		|ВЫБРАТЬ
		|	0 КАК СуммаДЗ,
		|	ИтогиКЗ.СуммаКЗ КАК СуммаКЗ,
		|	ИтогиКЗ.РазницаДней КАК РазницаДней,
		|	ИтогиКЗ.ПросроченоДней КАК ПросроченоДней,
		|	0 КАК ПроцентДЗ,
		|	ИтогиКЗ.ПроцентКЗ КАК ПроцентКЗ,
		|	ИтогиКЗ.КонтрагентКЗ КАК Контрагент,
		|	ИтогиКЗ.СделкаКЗ КАК Сделка,
		|	ИтогиКЗ.ДоговорВзаиморасчетов,
		|	ИтогиКЗ.Организация,
		|	ИтогиКЗ.ПодразделениеКомпании
		|ИЗ
		|	ИтогиКЗ КАК ИтогиКЗ";
	// Если вариант отчета НашиДолги	
	ИначеЕсли ДолгНаш Тогда
		
		ТекстЗапроса=ТекстЗапроса+"
		|ВЫБРАТЬ
		|	СУММА(ИтогиКЗ.СуммаКЗ) КАК СуммаКЗ,
		|	СУММА(0) КАК СуммаДЗ,
		|	МАКСИМУМ(ИтогиКЗ.РазницаДней) КАК РазницаДней,
		|	ИтогиКЗ.ПросроченоДней КАК ПросроченоДней,
		|	СУММА(ИтогиКЗ.ПроцентКЗ) КАК ПроцентКЗ,
		|	СУММА(0) КАК ПроцентДЗ,
		|	ИтогиКЗ.КонтрагентКЗ КАК Контрагент,
		|	ИтогиКЗ.СделкаКЗ КАК Сделка,
		|	ИтогиКЗ.ДоговорВзаиморасчетов,
		|	ИтогиКЗ.Организация,
		|	ИтогиКЗ.ПодразделениеКомпании
		|ПОМЕСТИТЬ ИнтервалыДат
		|ИЗ
		|	ИтогиКЗ КАК ИтогиКЗ
		|ГДЕ
		|	ИтогиКЗ.СуммаКЗ <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ИтогиКЗ.КонтрагентКЗ,
		|	ИтогиКЗ.СделкаКЗ,
		|	ИтогиКЗ.ПросроченоДней,
		|	ИтогиКЗ.ДоговорВзаиморасчетов,
		|	ИтогиКЗ.Организация,
		|	ИтогиКЗ.ПодразделениеКомпании";
	// Если вариант отчета ДолгиНам
	Иначе
		ТекстЗапроса=ТекстЗапроса+"
		|ВЫБРАТЬ
		|	СУММА(0) КАК СуммаКЗ,
		|	СУММА(ИтогиДЗ.СуммаДЗ) КАК СуммаДЗ,
		|	МАКСИМУМ(ИтогиДЗ.РазницаДней) КАК РазницаДней,
		|	ИтогиДЗ.ПросроченоДней КАК ПросроченоДней,
		|	СУММА(0) КАК ПроцентКЗ,
		|	СУММА(ИтогиДЗ.ПроцентДЗ) КАК ПроцентДЗ,
		|	ИтогиДЗ.КонтрагентДЗ КАК Контрагент,
		|	ИтогиДЗ.СделкаДЗ КАК Сделка,
		|	ИтогиДЗ.ДоговорВзаиморасчетов,
		|	ИтогиДЗ.Организация,
		|	ИтогиДЗ.ПодразделениеКомпании
		|ПОМЕСТИТЬ ИнтервалыДат
		|ИЗ
		|	ИтогиДЗ КАК ИтогиДЗ
		|ГДЕ
		|	ИтогиДЗ.СуммаДЗ <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ИтогиДЗ.КонтрагентДЗ,
		|	ИтогиДЗ.СделкаДЗ,
		|	ИтогиДЗ.ПросроченоДней,
		|	ИтогиДЗ.ДоговорВзаиморасчетов,
		|	ИтогиДЗ.Организация,
		|	ИтогиДЗ.ПодразделениеКомпании";
		
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	// Формируем интервалы дат
	// Используются табличные части для отчета сформированного из Формы,а для отчета сформированного из формы настроек,
	// используются реквизиты отчета.
	ЗначениеИнтервалыДней = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ИнтервалыДней").Значение.Получить();
	ЗначениеИнтервалыСумм = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ИнтервалыСумм").Значение.Получить();
	ЗначениеНепросроченныйДолг = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ВыводитьНепросроченныйДолг").Значение;

	КоличествоИнтервалов = ЗначениеИнтервалыДней.Количество();
	ДвойнойИнтервалДней=Новый ТаблицаЗначений;
	ДвойнойИнтервалДней.Колонки.Добавить("НачальныйИнтервал");
	ДвойнойИнтервалДней.Колонки.Добавить("КонечныйИнтервал");
	ДвойнойИнтервалДней.Колонки.Добавить("Представление");
	Если КоличествоИнтервалов<>0 Тогда
		Если ЗначениеИнтервалыДней[0].Использование Тогда
			НовыйИнтервал=ДвойнойИнтервалДней.Добавить();
			НовыйИнтервал.НачальныйИнтервал=0;
			НовыйИнтервал.КонечныйИнтервал=ЗначениеИнтервалыДней[0].ИнтервалДней;
			НовыйИнтервал.Представление=ЗначениеИнтервалыДней[0].Представление;
		КонецЕсли;
		Интервал=1;
		Пока Интервал<КоличествоИнтервалов Цикл
			Если ЗначениеИнтервалыДней[Интервал].Использование Тогда
				НовыйИнтервал=ДвойнойИнтервалДней.Добавить();
				НовыйИнтервал.НачальныйИнтервал=ЗначениеИнтервалыДней[Интервал-1].ИнтервалДней;
				НовыйИнтервал.КонечныйИнтервал=ЗначениеИнтервалыДней[Интервал].ИнтервалДней;
				НовыйИнтервал.Представление=ЗначениеИнтервалыДней[Интервал].Представление;
			КонецЕсли;
			Интервал=Интервал+1;
		КонецЦикла;
	КонецЕсли;
	
	// Формируем интервалы сумм
	КоличествоИнтервалов=ЗначениеИнтервалыСумм.Количество();
	ДвойнойИнтервалСумм=Новый ТаблицаЗначений;
	Если КоличествоИнтервалов<>0 Тогда
		КоличествоИнтервалов=ЗначениеИнтервалыСумм.Количество();
		ДвойнойИнтервалСумм.Колонки.Добавить("НачальныйИнтервал");
		ДвойнойИнтервалСумм.Колонки.Добавить("КонечныйИнтервал");
		ДвойнойИнтервалСумм.Колонки.Добавить("Представление");
		Если ЗначениеИнтервалыСумм[0].Использование Тогда
			НовыйИнтервал=ДвойнойИнтервалСумм.Добавить();
			НовыйИнтервал.НачальныйИнтервал=0;
			НовыйИнтервал.КонечныйИнтервал=ЗначениеИнтервалыСумм[0].ИнтервалСумм;
			НовыйИнтервал.Представление=ЗначениеИнтервалыСумм[0].Представление;
		КонецЕсли;
		Интервал=1;
		Пока Интервал<КоличествоИнтервалов Цикл
			Если ЗначениеИнтервалыСумм[Интервал].Использование Тогда
				НовыйИнтервал=ДвойнойИнтервалСумм.Добавить();
				НовыйИнтервал.НачальныйИнтервал = ЗначениеИнтервалыСумм[Интервал-1].ИнтервалСумм;
				НовыйИнтервал.КонечныйИнтервал  = ЗначениеИнтервалыСумм[Интервал].ИнтервалСумм;
				НовыйИнтервал.Представление     = ЗначениеИнтервалыСумм[Интервал].Представление;
			КонецЕсли;
			Интервал=Интервал+1;
		КонецЦикла;
	КонецЕсли;
	
	// Если интервалы не заполнены, то выводим все
	Если ДвойнойИнтервалДней.Количество()=0 Тогда
		ДвойнойИнтервалДней=Новый ТаблицаЗначений;
		ДвойнойИнтервалДней.Колонки.Добавить("НачальныйИнтервал");
		ДвойнойИнтервалДней.Колонки.Добавить("КонечныйИнтервал");
		ДвойнойИнтервалДней.Колонки.Добавить("Представление");
		
		НовыйИнтервал=ДвойнойИнтервалДней.Добавить();
		НовыйИнтервал.НачальныйИнтервал=0;
		НовыйИнтервал.КонечныйИнтервал=10000000;
		НовыйИнтервал.Представление="Все";	
	КонецЕсли;
	Если ДвойнойИнтервалСумм.Количество()=0 Тогда
		ДвойнойИнтервалСумм=Новый ТаблицаЗначений;
		ДвойнойИнтервалСумм.Колонки.Добавить("НачальныйИнтервал");
		ДвойнойИнтервалСумм.Колонки.Добавить("КонечныйИнтервал");
		ДвойнойИнтервалСумм.Колонки.Добавить("Представление");
		
		НовыйИнтервал=ДвойнойИнтервалСумм.Добавить();
		НовыйИнтервал.НачальныйИнтервал=0;
		НовыйИнтервал.КонечныйИнтервал=100000000000000;
		НовыйИнтервал.Представление="Все";	
	КонецЕсли;
	
	СчетЦикл=0;
	
	
	Если ЗначениеНепросроченныйДолг Тогда

	СчетЦикл=СчетЦикл+1;
		ТекстЗапроса=ТекстЗапроса+"
		|ВЫБРАТЬ
		|  0 КАК Дни,
		|  ""Непросроченный долг"" КАК ИнтервалДат,
		|   ИнтервалыДат.СуммаДЗ/"+КурсВалюты+"  КАК СуммаДЗ,
		|	ИнтервалыДат.СуммаКЗ/"+КурсВалюты+"  КАК СуммаКЗ,
		|	ИнтервалыДат.ПросроченоДней  КАК ПросроченоДней,
		|	ИнтервалыДат.ПроцентКЗ КАК ПроцентКЗ,
		|	ИнтервалыДат.ПроцентДЗ  КАК ПроцентДЗ,
		|	ИнтервалыДат.Контрагент,
		|	ИнтервалыДат.Сделка,
		|	ИнтервалыДат.ДоговорВзаиморасчетов,
		|	ИнтервалыДат.Организация,
		|	ИнтервалыДат.ПодразделениеКомпании
		|ПОМЕСТИТЬ ВТ_Интервалов_0
		|ИЗ
		|	ИнтервалыДат КАК ИнтервалыДат
		|ГДЕ
		|	ИнтервалыДат.ПросроченоДней <= 0 ";
	КонецЕсли;		
		
	// Формируем пакет запроса в виде интервалов дат
	Для каждого Интервал Из ДвойнойИнтервалДней Цикл
		СчетЦикл=СчетЦикл+1;
		Если СчетЦикл>1 Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|ОБЪЕДИНИТЬ ВСЕ ";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|ВЫБРАТЬ
		|  "+СтрЗаменить(Интервал.КонечныйИнтервал,Символы.НПП,"")+" КАК Дни,
		|  "+Строка(Символ(34)+Строка(Интервал.Представление)+Символ(34))+"КАК ИнтервалДат,
		|   ИнтервалыДат.СуммаДЗ/"+КурсВалюты+"  КАК СуммаДЗ,
		|	ИнтервалыДат.СуммаКЗ/"+КурсВалюты+"  КАК СуммаКЗ,
		|	ИнтервалыДат.ПросроченоДней  КАК ПросроченоДней,
		|	ИнтервалыДат.ПроцентКЗ КАК ПроцентКЗ,
		|	ИнтервалыДат.ПроцентДЗ  КАК ПроцентДЗ,
		|	ИнтервалыДат.Контрагент,
		|	ИнтервалыДат.Сделка,
		|	ИнтервалыДат.ДоговорВзаиморасчетов,
		|	ИнтервалыДат.Организация,
		|	ИнтервалыДат.ПодразделениеКомпании";
		Если СчетЦикл=1 Тогда	 
			ТекстЗапроса=ТекстЗапроса+"
			|ПОМЕСТИТЬ ВТ_Интервалов_0";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|ИЗ
		|	ИнтервалыДат КАК ИнтервалыДат
		|ГДЕ
		|	ИнтервалыДат.ПросроченоДней > "+СтрЗаменить(Интервал.НачальныйИнтервал,Символы.НПП,"")+"
		|	И ИнтервалыДат.ПросроченоДней <= "+СтрЗаменить(Интервал.КонечныйИнтервал,Символы.НПП,"");
		
	КонецЦикла; 
	
	ТекстЗапроса=ТекстЗапроса+"
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// ";
	
	// Промежуточный итог
	ТекстЗапроса=ТекстЗапроса+"
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_Интервалов_0.Дни) КАК Дни,
	|	ВТ_Интервалов_0.ИнтервалДат КАК ИнтервалДат,
	|	СУММА(ВТ_Интервалов_0.СуммаДЗ) КАК СуммаДЗ,
	|	СУММА(ВТ_Интервалов_0.СуммаКЗ) КАК СуммаКЗ,
	|	МАКСИМУМ(ВТ_Интервалов_0.ПросроченоДней) КАК ПросроченоДней,
	|	СУММА(ВТ_Интервалов_0.ПроцентКЗ) КАК ПроцентКЗ,
	|	СУММА(ВТ_Интервалов_0.ПроцентДЗ) КАК ПроцентДЗ,
	|	ВТ_Интервалов_0.Контрагент КАК Контрагент,
	|	ВТ_Интервалов_0.Сделка КАК Сделка,
	|	ВТ_Интервалов_0.ДоговорВзаиморасчетов,
	|	ВТ_Интервалов_0.Организация,
	|	ВТ_Интервалов_0.ПодразделениеКомпании
	|ПОМЕСТИТЬ ВТ_Интервалов
	|ИЗ
	|	ВТ_Интервалов_0 КАК ВТ_Интервалов_0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Интервалов_0.Контрагент,
	|	ВТ_Интервалов_0.Сделка,
	|	ВТ_Интервалов_0.ИнтервалДат,
	|	ВТ_Интервалов_0.ДоговорВзаиморасчетов,
	|	ВТ_Интервалов_0.Организация,
	|	ВТ_Интервалов_0.ПодразделениеКомпании";
	
	ТекстЗапроса=ТекстЗапроса+"
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// ";
	
	СчетЦикл=0;
	// Формируем пакет запроса в виде интервалов сумм
	Для Каждого Интервал Из ДвойнойИнтервалСумм Цикл
		СчетЦикл=СчетЦикл+1;
		Если СчетЦикл>1 Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|ОБЪЕДИНИТЬ ВСЕ ";
		КонецЕсли;
		Шаблон = "
		|ВЫБРАТЬ
		|  ВТ_Интервалов.Дни КАК Дни,
		|  "+СтрЗаменить(Интервал.КонечныйИнтервал,Символы.НПП,"")+" КАК Сумма,
		|  ВТ_Интервалов.ИнтервалДат КАК ИнтервалДат,
		|	"+Строка(Символ(34)+Интервал.Представление+"("+Строка(Валюта)+")"+Символ(34))+" КАК ИнтервалСумм,
		|	ВТ_Интервалов.СуммаДЗ  КАК СуммаДЗ,
		|	ВТ_Интервалов.СуммаКЗ  КАК СуммаКЗ,
		|	ВТ_Интервалов.ПросроченоДней,
		|	ВТ_Интервалов.ПроцентКЗ,
		|	ВТ_Интервалов.ПроцентДЗ,
		|	ВТ_Интервалов.Контрагент КАК Контрагент,
		|	ВТ_Интервалов.Сделка КАК Сделка,
		|	ВТ_Интервалов.ДоговорВзаиморасчетов,
		|	ВТ_Интервалов.Организация,
		|	ВТ_Интервалов.ПодразделениеКомпании
		|ИЗ
		|	ВТ_Интервалов КАК ВТ_Интервалов
		|ГДЕ";
		ТекстЗапроса = ТекстЗапроса + Шаблон;
		Если ДолгНам И ДолгНаш Тогда
			ТекстЗапроса=ТекстЗапроса + "
			|	ВТ_Интервалов.СуммаДЗ >"+СтрЗаменить(Интервал.НачальныйИнтервал,Символы.НПП,"")+"
			|			И ВТ_Интервалов.СуммаДЗ <= "+СтрЗаменить(Интервал.КонечныйИнтервал,Символы.НПП,"");
			ТекстЗапроса = ТекстЗапроса + "
			|ОБЪЕДИНИТЬ ВСЕ
			|";
			ТекстЗапроса = ТекстЗапроса + Шаблон + "
			|	ВТ_Интервалов.СуммаКЗ > "+СтрЗаменить(Интервал.НачальныйИнтервал,Символы.НПП,"")+"
			|			И ВТ_Интервалов.СуммаКЗ <= "+СтрЗаменить(Интервал.КонечныйИнтервал,Символы.НПП,"");
		ИначеЕсли ДолгНаш Тогда
			ТекстЗапроса=ТекстЗапроса + "
			|	ВТ_Интервалов.СуммаКЗ > "+СтрЗаменить(Интервал.НачальныйИнтервал,Символы.НПП,"")+"
			|			И ВТ_Интервалов.СуммаКЗ <= "+СтрЗаменить(Интервал.КонечныйИнтервал,Символы.НПП,"");
		ИначеЕсли ДолгНам Тогда
			ТекстЗапроса=ТекстЗапроса + "
			|	ВТ_Интервалов.СуммаДЗ >"+СтрЗаменить(Интервал.НачальныйИнтервал,Символы.НПП,"")+"
			|			И ВТ_Интервалов.СуммаДЗ <= "+СтрЗаменить(Интервал.КонечныйИнтервал,Символы.НПП,"");
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
			|	ЛОЖЬ";
		КонецЕсли;
		
	КонецЦикла;
	ТекстЗапроса=ТекстЗапроса+"
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Интервалов.Дни";
	
	Запрос.Текст=ТекстЗапроса;
	
КонецПроцедуры

// Процедура - Установить параметры запроса
//  Устанавливает параметры запроса.
//
// Параметры:
//  Запрос	 - Запрос	 - Запрос, для которого устанавливаются параметры.
//
Процедура УстановитьПараметрыЗапроса(Запрос)
	
	Запрос.УстановитьПараметр("Период",КонецПериода);
	Запрос.УстановитьПараметр("ВалютаОтчета",1);
	Запрос.УстановитьПараметр("МинПределИС",-10000000000000);
	Запрос.УстановитьПараметр("МаксПределИС",100000000000000);
	Запрос.УстановитьПараметр("МинПределИД",-1000000000);
	Запрос.УстановитьПараметр("МаксПределИД",1000000000);
	Запрос.УстановитьПараметр("Наши",Истина);
	Запрос.УстановитьПараметр("Нам",Истина);
	
КонецПроцедуры

// Процедура - Заполнить начальные настройки
//  Заполняет начальные интервалы.
//
Процедура ЗаполнитьНачальныеНастройки() 
	
	ПараметрИнтервалыДней = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ИнтервалыДней");
	ПараметрИнтервалыСумм = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ИнтервалыСумм");
		
	ЗначениеПараметраИнтервалыДней = ПараметрИнтервалыДней.Значение.Получить();
	ЗначениеПараметраИнтервалыСумм = ПараметрИнтервалыСумм.Значение.Получить();
	
	// Интервал дат
	Если НЕ ЗначениеЗаполнено(ЗначениеПараметраИнтервалыДней) ИЛИ ЗначениеПараметраИнтервалыДней.Количество() = 0 Тогда
		
		ИнтервалыДней = Новый ТаблицаЗначений;
		ИнтервалыДней.Колонки.Добавить("ИнтервалДней");
		ИнтервалыДней.Колонки.Добавить("Представление");
		ИнтервалыДней.Колонки.Добавить("Использование");
		
		Интервал=ИнтервалыДней.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление=НСтр("ru = 'До 30 дней'");
		Интервал.ИнтервалДней=30;
		
		СчетЦикл=60;
		Пока СчетЦикл<=180 Цикл
			Интервал=ИнтервалыДней.Добавить();
			Интервал.Использование=Истина;
			Интервал.Представление="От" + " "+Строка(СчетЦикл-30)+" " + "до" + " "+Строка(СчетЦикл)+" " + "дней";
			Интервал.ИнтервалДней=СчетЦикл;
			СчетЦикл=СчетЦикл+30;
		КонецЦикла;
		Интервал=ИнтервалыДней.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'Более 180 дней'");
		Интервал.ИнтервалДней=10000;
		
		ПараметрИнтервалыДней.Значение = Новый ХранилищеЗначения(ИнтервалыДней);
		
	КонецЕсли;
	
	// Интервалы сумм
	Если НЕ ЗначениеЗаполнено(ЗначениеПараметраИнтервалыСумм) ИЛИ ЗначениеПараметраИнтервалыСумм.Количество()=0 Тогда
		
		ИнтервалыСумм = Новый ТаблицаЗначений;
		ИнтервалыСумм.Колонки.Добавить("ИнтервалСумм");
		ИнтервалыСумм.Колонки.Добавить("Представление");
		ИнтервалыСумм.Колонки.Добавить("Использование");
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'До 50 тыс.'");
		Интервал.ИнтервалСумм=50000;
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'От 50 до 100 тыс.'");
		Интервал.ИнтервалСумм=100000;
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'От 100 до 150 тыс.'");
		Интервал.ИнтервалСумм=150000;
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'От 150 до 300 тыс.'");
		Интервал.ИнтервалСумм=300000;
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'От 300 до 500 тыс.'");
		Интервал.ИнтервалСумм=500000;
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'Более 500 тыс.'");
		Интервал.ИнтервалСумм=999999999999;
		
		ПараметрИнтервалыСумм.Значение = Новый ХранилищеЗначения(ИнтервалыСумм);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли