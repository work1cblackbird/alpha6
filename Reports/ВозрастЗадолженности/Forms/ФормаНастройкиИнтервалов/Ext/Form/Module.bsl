///////////////////////////////////////////////////////////////////////////////
// Модуль формы настройки интервалов
//
///////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Таблицы") Тогда
		
		Таблицы = ПолучитьИзВременногоХранилища(Параметры.Таблицы);
		
		ИнтервалыДней.Очистить();
		ИнтервалыСумм.Очистить();
		
		Если ЗначениеЗаполнено(Таблицы.ИнтервалыДнейИнтервалДней) Тогда
			ИнтервалыДней.Загрузить(Таблицы.ИнтервалыДнейИнтервалДней);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Таблицы.ИнтервалыСуммИнтервалСумм) Тогда
			ИнтервалыСумм.Загрузить(Таблицы.ИнтервалыСуммИнтервалСумм);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Таблицы.ВыводитьНепросроченныйДолг) Тогда
			ВыводитьНепросроченныйДолг = Таблицы.ВыводитьНепросроченныйДолг;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИнтервалыДней.Количество()=0 Тогда
		Интервал=ИнтервалыДней.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'До 30 дней'");
		Интервал.ИнтервалДней=30;

		СчетЦикл=60;
		Пока СчетЦикл<=180 Цикл
			Интервал=ИнтервалыДней.Добавить();
			Интервал.Использование=Истина;
			Интервал.Представление="От" + " "+Строка(СчетЦикл-30)+" " + "до" + " "+Строка(СчетЦикл)+" " + "дней";
			Интервал.ИнтервалДней=СчетЦикл;
			СчетЦикл=СчетЦикл+30;
		КонецЦикла;
		Интервал=ИнтервалыДней.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'Более 180 дней'");
		Интервал.ИнтервалДней=10000;
	КонецЕсли;
	
	Если ИнтервалыСумм.Количество()=0 Тогда
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'До 50 тыс.'");
		Интервал.ИнтервалСумм=50000;
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'От 50 до 100 тыс.'");
		Интервал.ИнтервалСумм=100000;
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'От 100 до 150 тыс.'");
		Интервал.ИнтервалСумм=150000;
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'От 150 до 300 тыс.'");
		Интервал.ИнтервалСумм=300000;

		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'От 300 до 500 тыс.'");
		Интервал.ИнтервалСумм=500000;
		
		Интервал=ИнтервалыСумм.Добавить();
		Интервал.Использование=Истина;
		Интервал.Представление= НСтр("ru = 'Более 500 тыс.'");
		Интервал.ИнтервалСумм=999999999999;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

// Обработчик события возникающего на клиенте перед закрытием формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	ИнтервалыСумм.Сортировать("ИнтервалСумм");
	ИнтервалыДней.Сортировать("ИнтервалДней");

	Если УправлениеДиалогомКлиент.ПроверитьМодифицированностьДанныхПриЗакрытии(ЭтотОбъект,Отказ,Новый ОписаниеОповещения("Подключаемый_ОбработкаПримененияИзменений", ЭтотОбъект)) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры //ПередЗакрытием()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события возникающего на клиенте при выполнении команды "ЗавершитьПодбор".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура Применить(Команда)
	
	Подключаемый_ОбработкаПримененияИзменений();
	
КонецПроцедуры //Применить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик события возникающего при выполнении оповещения данной формы о прекращении работы подчиненной.
//
// Параметры:
//  РезультатОповещения     - Произвольный - Результат выполнения операции в подчиненной форме.
//  ДополнительныеПараметры - Произвольный - Значение, которое было указано при создании объекта описания оповещения.
//
&НаКлиенте
Процедура Подключаемый_ОбработкаПримененияИзменений(РезультатОповещения = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Модифицированность = Ложь;
	ОповеститьОВыборе(НастройкаИнтерваловНаСервере());
	
КонецПроцедуры // Подключаемый_ОбработкаПримененияИзменений()

// Обработчик события возникающего на сервере при закрытии формы настройки интервалов.
// 
&НаСервере
Функция НастройкаИнтерваловНаСервере()
	
	Таблицы = Новый Структура;
	Таблицы.Вставить("ИнтервалыДнейИнтервалДней", ИнтервалыДней.Выгрузить());
	Таблицы.Вставить("ИнтервалыСуммИнтервалСумм", ИнтервалыСумм.Выгрузить());
	Таблицы.Вставить("ВыводитьНепросроченныйДолг", ВыводитьНепросроченныйДолг);
	Возврат ПоместитьВоВременноеХранилище(Таблицы, УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти

