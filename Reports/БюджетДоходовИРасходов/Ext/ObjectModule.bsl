#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Обработчик при изменении настроек.
//
// Параметры:
//  ФормаОтчета - УправляемаяФорма - Форма, в которой возникло событие.
//
Процедура ПриИзмененииНастроек(ФормаОтчета) Экспорт
	
	Параметр = Новый ПараметрКомпоновкиДанных("СценарийПланирования");
	НайденныеПараметры = ФормаОтчета.ПараметрыДанных.НайтиСтроки(Новый Структура("Параметр", Параметр));
	Если НайденныеПараметры.Количество()>0 Тогда
	
		ДанныеСтроки = НайденныеПараметры[0];
		
		ПриИзмененииПараметра(ФормаОтчета, ДанныеСтроки);
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ОтчетыПлатформаСервер.ВывестиОтчет(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Стандартная процедура настройки построителя отчета 
//
// Параметры
//  ИмяМакета  - строка - название макета.
//
//  ИмяМакетаПараметров  - строка - название макета параметров
//
Процедура ЗаполнитьНачальныеНастройки(ИмяМакета, ИмяМакетаПараметров="Параметры") Экспорт
	
	// Заполним структуру параметров
	СтруктураПараметрыЗаполнения = Новый Структура();
	СтруктураПараметрыЗаполнения.Вставить("ОтчетОбъект",            ЭтотОбъект);
	СтруктураПараметрыЗаполнения.Вставить("ИмяМакетаТекстаЗапроса", ИмяМакета);
	СтруктураПараметрыЗаполнения.Вставить("ИмяМакетаПараметров",    ИмяМакетаПараметров);
	
	Периодичность = Перечисления.ПериодичностьПланирования.Месяц;
	
	// Установим отбор по периодичности сценария планирования
	ПостроительОтчета.Параметры.Вставить("Периодичность", Периодичность);
	
		
КонецПроцедуры // ЗаполнитьНачальныеНастройки()

Процедура ПриИзмененииПараметра(ФормаОтчета, ДанныеСтроки)
	
	ИмяПараметра = СокрЛП(ДанныеСтроки.Параметр);
	
	Если НЕ ИмяПараметра = "СценарийПланирования" Тогда
		Возврат;
	КонецЕсли;
	
	СценарийПланирования = ДанныеСтроки.Значение;
	Если СценарийПланирования.Периодичность = Перечисления.ПериодичностьПланирования.Месяц Тогда
		
		ФормаОтчета.ВидПериода = "Месяц";
		ОтчетыПлатформаКлиентСервер.ОбновитьВариантыПериодов(ФормаОтчета);
		ОтчетыПлатформаКлиентСервер.УстановитьПометкуНаПериод(ФормаОтчета, "ПериодМесяц");
		ОтчетыПлатформаСервер.ВидимостьПериода(ФормаОтчета);
		
	ИначеЕсли СценарийПланирования.Периодичность=Перечисления.ПериодичностьПланирования.Квартал Тогда
		
		ФормаОтчета.ВидПериода = "Квартал";
		ОтчетыПлатформаКлиентСервер.ОбновитьВариантыПериодов(ФормаОтчета);
		ОтчетыПлатформаКлиентСервер.УстановитьПометкуНаПериод(ФормаОтчета, "ПериодКвартал");
		ОтчетыПлатформаСервер.ВидимостьПериода(ФормаОтчета);
		
	ИначеЕсли СценарийПланирования.Периодичность=Перечисления.ПериодичностьПланирования.Год Тогда
		
		ФормаОтчета.ВидПериода = "Год";
		ОтчетыПлатформаКлиентСервер.ОбновитьВариантыПериодов(ФормаОтчета);
		ОтчетыПлатформаКлиентСервер.УстановитьПометкуНаПериод(ФормаОтчета, "ПериодГод");
		ОтчетыПлатформаСервер.ВидимостьПериода(ФормаОтчета);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли